<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="2134" onload="init(evt)" viewBox="0 0 1200 2134" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="2134.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="2117" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="2117" > </text>
<g id="frames">
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1186.4" y="149" width="0.2" height="15.0" fill="rgb(241,35,3)" rx="2" ry="2" />
<text  x="1189.40" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1186.2" y="1381" width="0.1" height="15.0" fill="rgb(242,57,33)" rx="2" ry="2" />
<text  x="1189.21" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (2 samples, 0.01%)</title><rect x="165.2" y="1829" width="0.1" height="15.0" fill="rgb(221,37,11)" rx="2" ry="2" />
<text  x="168.22" y="1839.5" ></text>
</g>
<g >
<title>__lru_cache_add (2 samples, 0.01%)</title><rect x="937.5" y="1909" width="0.1" height="15.0" fill="rgb(243,43,51)" rx="2" ry="2" />
<text  x="940.51" y="1919.5" ></text>
</g>
<g >
<title>handle_mm_fault (2 samples, 0.01%)</title><rect x="719.1" y="1829" width="0.1" height="15.0" fill="rgb(243,85,37)" rx="2" ry="2" />
<text  x="722.11" y="1839.5" ></text>
</g>
<g >
<title>TDocument::~TDocument (6 samples, 0.03%)</title><rect x="137.3" y="1957" width="0.3" height="15.0" fill="rgb(226,190,9)" rx="2" ry="2" />
<text  x="140.25" y="1967.5" ></text>
</g>
<g >
<title>page_fault (3 samples, 0.02%)</title><rect x="94.3" y="2005" width="0.2" height="15.0" fill="rgb(236,216,41)" rx="2" ry="2" />
<text  x="97.33" y="2015.5" ></text>
</g>
<g >
<title>do_page_fault (36 samples, 0.19%)</title><rect x="499.4" y="1941" width="2.3" height="15.0" fill="rgb(225,25,26)" rx="2" ry="2" />
<text  x="502.38" y="1951.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt; &gt;::_M_manager (2 samples, 0.01%)</title><rect x="138.9" y="1637" width="0.1" height="15.0" fill="rgb(226,185,9)" rx="2" ry="2" />
<text  x="141.89" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (267 samples, 1.43%)</title><rect x="166.7" y="1765" width="16.9" height="15.0" fill="rgb(233,129,54)" rx="2" ry="2" />
<text  x="169.73" y="1775.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (44 samples, 0.24%)</title><rect x="964.6" y="2053" width="2.8" height="15.0" fill="rgb(223,205,33)" rx="2" ry="2" />
<text  x="967.59" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_Compiler (434 samples, 2.32%)</title><rect x="138.3" y="1941" width="27.4" height="15.0" fill="rgb(253,144,11)" rx="2" ry="2" />
<text  x="141.33" y="1951.5" >s..</text>
</g>
<g >
<title>onmt::unicode::explode_utf8_with_marks (559 samples, 2.99%)</title><rect x="647.9" y="1877" width="35.3" height="15.0" fill="rgb(240,28,43)" rx="2" ry="2" />
<text  x="650.91" y="1887.5" >on..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.0" y="1605" width="0.2" height="15.0" fill="rgb(231,190,28)" rx="2" ry="2" />
<text  x="1190.03" y="1615.5" ></text>
</g>
<g >
<title>clear_page_erms (2 samples, 0.01%)</title><rect x="56.1" y="1909" width="0.2" height="15.0" fill="rgb(233,92,20)" rx="2" ry="2" />
<text  x="59.14" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (316 samples, 1.69%)</title><rect x="57.9" y="597" width="20.0" height="15.0" fill="rgb(247,20,4)" rx="2" ry="2" />
<text  x="60.91" y="607.5" ></text>
</g>
<g >
<title>new_sync_read (2 samples, 0.01%)</title><rect x="1105.5" y="1925" width="0.2" height="15.0" fill="rgb(215,24,48)" rx="2" ry="2" />
<text  x="1108.54" y="1935.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (24 samples, 0.13%)</title><rect x="120.7" y="2037" width="1.5" height="15.0" fill="rgb(232,49,38)" rx="2" ry="2" />
<text  x="123.65" y="2047.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (4 samples, 0.02%)</title><rect x="44.2" y="2005" width="0.3" height="15.0" fill="rgb(209,56,19)" rx="2" ry="2" />
<text  x="47.21" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (5 samples, 0.03%)</title><rect x="217.5" y="1765" width="0.3" height="15.0" fill="rgb(231,174,10)" rx="2" ry="2" />
<text  x="220.48" y="1775.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.01%)</title><rect x="191.3" y="1653" width="0.1" height="15.0" fill="rgb(233,220,39)" rx="2" ry="2" />
<text  x="194.29" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (90 samples, 0.48%)</title><rect x="217.8" y="1749" width="5.7" height="15.0" fill="rgb(252,11,31)" rx="2" ry="2" />
<text  x="220.80" y="1759.5" ></text>
</g>
<g >
<title>page_fault (4 samples, 0.02%)</title><rect x="107.8" y="2021" width="0.3" height="15.0" fill="rgb(254,119,12)" rx="2" ry="2" />
<text  x="110.84" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="225.1" y="1573" width="0.1" height="15.0" fill="rgb(236,178,34)" rx="2" ry="2" />
<text  x="228.06" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="796.2" y="2021" width="0.2" height="15.0" fill="rgb(247,204,4)" rx="2" ry="2" />
<text  x="799.25" y="2031.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (51 samples, 0.27%)</title><rect x="190.0" y="1669" width="3.2" height="15.0" fill="rgb(219,228,37)" rx="2" ry="2" />
<text  x="193.02" y="1679.5" ></text>
</g>
<g >
<title>handle_mm_fault (22 samples, 0.12%)</title><rect x="489.7" y="1877" width="1.4" height="15.0" fill="rgb(240,94,2)" rx="2" ry="2" />
<text  x="492.66" y="1887.5" ></text>
</g>
<g >
<title>fasttext::FastText::loadModel (10 samples, 0.05%)</title><rect x="506.8" y="2005" width="0.7" height="15.0" fill="rgb(239,47,32)" rx="2" ry="2" />
<text  x="509.83" y="2015.5" ></text>
</g>
<g >
<title>__split_vma (5 samples, 0.03%)</title><rect x="756.0" y="1893" width="0.3" height="15.0" fill="rgb(222,132,19)" rx="2" ry="2" />
<text  x="758.97" y="1903.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (924 samples, 4.94%)</title><rect x="810.8" y="2037" width="58.3" height="15.0" fill="rgb(230,25,1)" rx="2" ry="2" />
<text  x="813.76" y="2047.5" >std::_..</text>
</g>
<g >
<title>free_pages_and_swap_cache (2 samples, 0.01%)</title><rect x="1096.6" y="1829" width="0.2" height="15.0" fill="rgb(240,187,51)" rx="2" ry="2" />
<text  x="1099.64" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (90 samples, 0.48%)</title><rect x="217.8" y="1733" width="5.7" height="15.0" fill="rgb(239,97,41)" rx="2" ry="2" />
<text  x="220.80" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.0" y="1157" width="0.2" height="15.0" fill="rgb(234,35,33)" rx="2" ry="2" />
<text  x="1190.03" y="1167.5" ></text>
</g>
<g >
<title>Eigen::DenseBase&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; &gt;::setConstant (4 samples, 0.02%)</title><rect x="231.3" y="1957" width="0.3" height="15.0" fill="rgb(249,180,28)" rx="2" ry="2" />
<text  x="234.31" y="1967.5" ></text>
</g>
<g >
<title>__asan::asan_delete (4 samples, 0.02%)</title><rect x="1161.2" y="2037" width="0.2" height="15.0" fill="rgb(212,45,29)" rx="2" ry="2" />
<text  x="1164.15" y="2047.5" ></text>
</g>
<g >
<title>__asan_memset (2 samples, 0.01%)</title><rect x="166.4" y="1925" width="0.1" height="15.0" fill="rgb(252,6,2)" rx="2" ry="2" />
<text  x="169.42" y="1935.5" ></text>
</g>
<g >
<title>__lsan::MarkInvalidPCCb (7 samples, 0.04%)</title><rect x="511.4" y="2037" width="0.4" height="15.0" fill="rgb(243,77,3)" rx="2" ry="2" />
<text  x="514.38" y="2047.5" ></text>
</g>
<g >
<title>ksys_read (2 samples, 0.01%)</title><rect x="1105.5" y="1973" width="0.2" height="15.0" fill="rgb(243,3,13)" rx="2" ry="2" />
<text  x="1108.54" y="1983.5" ></text>
</g>
<g >
<title>unmap_single_vma (4 samples, 0.02%)</title><rect x="757.2" y="1909" width="0.2" height="15.0" fill="rgb(231,128,10)" rx="2" ry="2" />
<text  x="760.17" y="1919.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="211.3" y="1621" width="0.1" height="15.0" fill="rgb(235,176,35)" rx="2" ry="2" />
<text  x="214.30" y="1631.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;float, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;float, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;float, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (2 samples, 0.01%)</title><rect x="1189.7" y="2053" width="0.2" height="15.0" fill="rgb(213,20,46)" rx="2" ry="2" />
<text  x="1192.75" y="2063.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::Dictionary (28 samples, 0.15%)</title><rect x="869.5" y="2005" width="1.7" height="15.0" fill="rgb(246,171,23)" rx="2" ry="2" />
<text  x="872.47" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="1186.1" y="1989" width="0.2" height="15.0" fill="rgb(236,32,53)" rx="2" ry="2" />
<text  x="1189.09" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (79 samples, 0.42%)</title><rect x="206.6" y="1701" width="4.9" height="15.0" fill="rgb(211,101,42)" rx="2" ry="2" />
<text  x="209.56" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1186.7" y="1365" width="0.3" height="15.0" fill="rgb(235,6,53)" rx="2" ry="2" />
<text  x="1189.65" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1187.0" y="1717" width="0.2" height="15.0" fill="rgb(235,21,6)" rx="2" ry="2" />
<text  x="1190.03" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.0" y="837" width="0.2" height="15.0" fill="rgb(221,152,17)" rx="2" ry="2" />
<text  x="1190.03" y="847.5" ></text>
</g>
<g >
<title>[unknown] (532 samples, 2.85%)</title><rect x="57.8" y="1909" width="33.6" height="15.0" fill="rgb(254,41,23)" rx="2" ry="2" />
<text  x="60.85" y="1919.5" >[u..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (355 samples, 1.90%)</title><rect x="195.4" y="1813" width="22.4" height="15.0" fill="rgb(248,23,7)" rx="2" ry="2" />
<text  x="198.39" y="1823.5" >s..</text>
</g>
<g >
<title>get_page_from_freelist (3 samples, 0.02%)</title><rect x="490.4" y="1813" width="0.1" height="15.0" fill="rgb(210,63,27)" rx="2" ry="2" />
<text  x="493.36" y="1823.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (2 samples, 0.01%)</title><rect x="719.1" y="1781" width="0.1" height="15.0" fill="rgb(219,153,35)" rx="2" ry="2" />
<text  x="722.11" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (77 samples, 0.41%)</title><rect x="159.5" y="1749" width="4.8" height="15.0" fill="rgb(224,190,38)" rx="2" ry="2" />
<text  x="162.47" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.0" y="1877" width="0.2" height="15.0" fill="rgb(215,40,2)" rx="2" ry="2" />
<text  x="1190.03" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="194.4" y="1621" width="0.1" height="15.0" fill="rgb(243,189,31)" rx="2" ry="2" />
<text  x="197.38" y="1631.5" ></text>
</g>
<g >
<title>__interceptor_memcmp (6 samples, 0.03%)</title><rect x="527.3" y="1909" width="0.4" height="15.0" fill="rgb(252,107,24)" rx="2" ry="2" />
<text  x="530.35" y="1919.5" ></text>
</g>
<g >
<title>fasttext::Vector::addRow (33 samples, 0.18%)</title><rect x="483.7" y="1957" width="2.0" height="15.0" fill="rgb(211,209,19)" rx="2" ry="2" />
<text  x="486.67" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1187.0" y="901" width="0.2" height="15.0" fill="rgb(237,79,19)" rx="2" ry="2" />
<text  x="1190.03" y="911.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (2 samples, 0.01%)</title><rect x="941.9" y="2021" width="0.2" height="15.0" fill="rgb(215,111,14)" rx="2" ry="2" />
<text  x="944.93" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (90 samples, 0.48%)</title><rect x="172.3" y="1669" width="5.7" height="15.0" fill="rgb(222,98,20)" rx="2" ry="2" />
<text  x="175.35" y="1679.5" ></text>
</g>
<g >
<title>std::istream::sentry::sentry (9 samples, 0.05%)</title><rect x="803.9" y="2005" width="0.6" height="15.0" fill="rgb(240,130,13)" rx="2" ry="2" />
<text  x="806.88" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1186.7" y="853" width="0.3" height="15.0" fill="rgb(214,110,53)" rx="2" ry="2" />
<text  x="1189.72" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="194.5" y="1717" width="0.1" height="15.0" fill="rgb(214,10,2)" rx="2" ry="2" />
<text  x="197.51" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1186.4" y="613" width="0.2" height="15.0" fill="rgb(244,22,45)" rx="2" ry="2" />
<text  x="1189.40" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (79 samples, 0.42%)</title><rect x="195.5" y="1717" width="4.9" height="15.0" fill="rgb(237,105,51)" rx="2" ry="2" />
<text  x="198.45" y="1727.5" ></text>
</g>
<g >
<title>page_fault (6 samples, 0.03%)</title><rect x="1098.0" y="2021" width="0.3" height="15.0" fill="rgb(230,68,23)" rx="2" ry="2" />
<text  x="1100.97" y="2031.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.03%)</title><rect x="325.6" y="1957" width="0.3" height="15.0" fill="rgb(247,220,3)" rx="2" ry="2" />
<text  x="328.61" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.02%)</title><rect x="1186.8" y="117" width="0.2" height="15.0" fill="rgb(252,123,26)" rx="2" ry="2" />
<text  x="1189.78" y="127.5" ></text>
</g>
<g >
<title>__asan_memcpy (2 samples, 0.01%)</title><rect x="567.2" y="1877" width="0.2" height="15.0" fill="rgb(209,58,49)" rx="2" ry="2" />
<text  x="570.24" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="57.6" y="1333" width="0.1" height="15.0" fill="rgb(216,37,31)" rx="2" ry="2" />
<text  x="60.59" y="1343.5" ></text>
</g>
<g >
<title>__do_munmap (2 samples, 0.01%)</title><rect x="82.0" y="1285" width="0.1" height="15.0" fill="rgb(239,13,12)" rx="2" ry="2" />
<text  x="85.02" y="1295.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (4 samples, 0.02%)</title><rect x="182.8" y="1589" width="0.2" height="15.0" fill="rgb(215,21,28)" rx="2" ry="2" />
<text  x="185.76" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1187.0" y="1045" width="0.2" height="15.0" fill="rgb(247,125,33)" rx="2" ry="2" />
<text  x="1190.03" y="1055.5" ></text>
</g>
<g >
<title>[unknown] (321 samples, 1.72%)</title><rect x="57.9" y="901" width="20.3" height="15.0" fill="rgb(239,182,42)" rx="2" ry="2" />
<text  x="60.91" y="911.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="803.6" y="2021" width="0.1" height="15.0" fill="rgb(226,105,35)" rx="2" ry="2" />
<text  x="806.57" y="2031.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.02%)</title><rect x="86.4" y="1605" width="0.2" height="15.0" fill="rgb(248,15,20)" rx="2" ry="2" />
<text  x="89.44" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (72 samples, 0.39%)</title><rect x="195.9" y="1621" width="4.5" height="15.0" fill="rgb(253,13,43)" rx="2" ry="2" />
<text  x="198.89" y="1631.5" ></text>
</g>
<g >
<title>__asan::AsanTSDGet (2 samples, 0.01%)</title><rect x="185.9" y="1621" width="0.1" height="15.0" fill="rgb(205,39,51)" rx="2" ry="2" />
<text  x="188.86" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1186.2" y="1557" width="0.1" height="15.0" fill="rgb(228,212,23)" rx="2" ry="2" />
<text  x="1189.21" y="1567.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="93.0" y="1973" width="0.1" height="15.0" fill="rgb(207,203,48)" rx="2" ry="2" />
<text  x="96.01" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1186.2" y="1733" width="0.1" height="15.0" fill="rgb(224,229,8)" rx="2" ry="2" />
<text  x="1189.21" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1186.4" y="1349" width="0.2" height="15.0" fill="rgb(243,46,41)" rx="2" ry="2" />
<text  x="1189.40" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (89 samples, 0.48%)</title><rect x="172.4" y="1653" width="5.6" height="15.0" fill="rgb(249,63,34)" rx="2" ry="2" />
<text  x="175.41" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (444 samples, 2.38%)</title><rect x="57.8" y="1589" width="28.1" height="15.0" fill="rgb(234,162,13)" rx="2" ry="2" />
<text  x="60.85" y="1599.5" >[..</text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64LocalCache&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&gt; &gt;::Deallocate (2 samples, 0.01%)</title><rect x="81.9" y="1365" width="0.1" height="15.0" fill="rgb(210,153,54)" rx="2" ry="2" />
<text  x="84.90" y="1375.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.02%)</title><rect x="163.0" y="1669" width="0.3" height="15.0" fill="rgb(224,185,43)" rx="2" ry="2" />
<text  x="166.01" y="1679.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.02%)</title><rect x="210.2" y="1605" width="0.3" height="15.0" fill="rgb(232,39,45)" rx="2" ry="2" />
<text  x="213.22" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1186.2" y="325" width="0.1" height="15.0" fill="rgb(209,181,14)" rx="2" ry="2" />
<text  x="1189.21" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (84 samples, 0.45%)</title><rect x="178.2" y="1701" width="5.3" height="15.0" fill="rgb(252,226,18)" rx="2" ry="2" />
<text  x="181.22" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="57.6" y="2021" width="0.1" height="15.0" fill="rgb(244,217,2)" rx="2" ry="2" />
<text  x="60.59" y="2031.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (2 samples, 0.01%)</title><rect x="1115.3" y="2037" width="0.1" height="15.0" fill="rgb(212,10,21)" rx="2" ry="2" />
<text  x="1118.26" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (337 samples, 1.80%)</title><rect x="57.9" y="1157" width="21.3" height="15.0" fill="rgb(254,23,53)" rx="2" ry="2" />
<text  x="60.91" y="1167.5" >[..</text>
</g>
<g >
<title>fasttext::SoftmaxLoss::computeOutput (2 samples, 0.01%)</title><rect x="1098.3" y="2037" width="0.2" height="15.0" fill="rgb(238,22,50)" rx="2" ry="2" />
<text  x="1101.35" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (179 samples, 0.96%)</title><rect x="166.7" y="1733" width="11.3" height="15.0" fill="rgb(219,168,7)" rx="2" ry="2" />
<text  x="169.73" y="1743.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (2 samples, 0.01%)</title><rect x="86.3" y="1605" width="0.1" height="15.0" fill="rgb(234,85,29)" rx="2" ry="2" />
<text  x="89.25" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1186.7" y="261" width="0.3" height="15.0" fill="rgb(220,206,37)" rx="2" ry="2" />
<text  x="1189.72" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (7 samples, 0.04%)</title><rect x="164.4" y="1829" width="0.4" height="15.0" fill="rgb(236,135,24)" rx="2" ry="2" />
<text  x="167.40" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="1186.3" y="1621" width="0.3" height="15.0" fill="rgb(222,35,34)" rx="2" ry="2" />
<text  x="1189.34" y="1631.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (2 samples, 0.01%)</title><rect x="576.2" y="1877" width="0.1" height="15.0" fill="rgb(229,68,54)" rx="2" ry="2" />
<text  x="579.20" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (73 samples, 0.39%)</title><rect x="195.8" y="1685" width="4.6" height="15.0" fill="rgb(219,179,1)" rx="2" ry="2" />
<text  x="198.83" y="1695.5" ></text>
</g>
<g >
<title>__do_page_fault (3 samples, 0.02%)</title><rect x="561.1" y="1845" width="0.1" height="15.0" fill="rgb(220,21,24)" rx="2" ry="2" />
<text  x="564.05" y="1855.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;std::__detail::_State&lt;char&gt; const*, std::__detail::_State&lt;char&gt;*&gt; (3 samples, 0.02%)</title><rect x="217.6" y="1717" width="0.2" height="15.0" fill="rgb(249,163,40)" rx="2" ry="2" />
<text  x="220.61" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (74 samples, 0.40%)</title><rect x="144.0" y="1637" width="4.7" height="15.0" fill="rgb(210,3,12)" rx="2" ry="2" />
<text  x="147.01" y="1647.5" ></text>
</g>
<g >
<title>onmt::ITokenizer::tokenize (2,975 samples, 15.91%)</title><rect x="556.5" y="1941" width="187.8" height="15.0" fill="rgb(219,70,18)" rx="2" ry="2" />
<text  x="559.51" y="1951.5" >onmt::ITokenizer::tokenize</text>
</g>
<g >
<title>nlohmann::detail::input_stream_adapter::get_character (18 samples, 0.10%)</title><rect x="133.1" y="1909" width="1.1" height="15.0" fill="rgb(252,113,7)" rx="2" ry="2" />
<text  x="136.09" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="194.5" y="1493" width="0.1" height="15.0" fill="rgb(211,46,3)" rx="2" ry="2" />
<text  x="197.51" y="1503.5" ></text>
</g>
<g >
<title>__dynamic_cast (5 samples, 0.03%)</title><rect x="167.3" y="1573" width="0.3" height="15.0" fill="rgb(245,228,39)" rx="2" ry="2" />
<text  x="170.30" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="1186.3" y="2005" width="0.3" height="15.0" fill="rgb(210,54,24)" rx="2" ry="2" />
<text  x="1189.34" y="2015.5" ></text>
</g>
<g >
<title>smp_call_function_many (3 samples, 0.02%)</title><rect x="57.2" y="1829" width="0.2" height="15.0" fill="rgb(233,75,12)" rx="2" ry="2" />
<text  x="60.22" y="1839.5" ></text>
</g>
<g >
<title>Rank (898 samples, 4.80%)</title><rect x="138.2" y="2005" width="56.7" height="15.0" fill="rgb(247,213,42)" rx="2" ry="2" />
<text  x="141.20" y="2015.5" >Rank</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="165.8" y="1701" width="0.5" height="15.0" fill="rgb(208,112,25)" rx="2" ry="2" />
<text  x="168.85" y="1711.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (7 samples, 0.04%)</title><rect x="1116.7" y="2037" width="0.4" height="15.0" fill="rgb(246,182,30)" rx="2" ry="2" />
<text  x="1119.65" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.05%)</title><rect x="165.8" y="1845" width="0.6" height="15.0" fill="rgb(236,178,52)" rx="2" ry="2" />
<text  x="168.85" y="1855.5" ></text>
</g>
<g >
<title>__sanitizer::BlockingMutex::Lock (2 samples, 0.01%)</title><rect x="1006.6" y="2053" width="0.1" height="15.0" fill="rgb(242,222,24)" rx="2" ry="2" />
<text  x="1009.57" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1186.2" y="1573" width="0.1" height="15.0" fill="rgb(230,17,39)" rx="2" ry="2" />
<text  x="1189.21" y="1583.5" ></text>
</g>
<g >
<title>operator new (9 samples, 0.05%)</title><rect x="182.2" y="1589" width="0.6" height="15.0" fill="rgb(241,215,46)" rx="2" ry="2" />
<text  x="185.20" y="1599.5" ></text>
</g>
<g >
<title>operator delete (7 samples, 0.04%)</title><rect x="204.7" y="1589" width="0.4" height="15.0" fill="rgb(218,184,14)" rx="2" ry="2" />
<text  x="207.67" y="1599.5" ></text>
</g>
<g >
<title>memcpy (2 samples, 0.01%)</title><rect x="1118.7" y="2037" width="0.2" height="15.0" fill="rgb(228,184,15)" rx="2" ry="2" />
<text  x="1121.74" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1186.4" y="805" width="0.2" height="15.0" fill="rgb(208,78,15)" rx="2" ry="2" />
<text  x="1189.40" y="815.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (27 samples, 0.14%)</title><rect x="800.3" y="2005" width="1.7" height="15.0" fill="rgb(254,5,47)" rx="2" ry="2" />
<text  x="803.29" y="2015.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (10 samples, 0.05%)</title><rect x="725.6" y="1893" width="0.6" height="15.0" fill="rgb(206,77,5)" rx="2" ry="2" />
<text  x="728.61" y="1903.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="83.3" y="1397" width="0.2" height="15.0" fill="rgb(214,2,22)" rx="2" ry="2" />
<text  x="86.35" y="1407.5" ></text>
</g>
<g >
<title>__sanitizer::BlockingMutex::Unlock (7 samples, 0.04%)</title><rect x="72.9" y="37" width="0.4" height="15.0" fill="rgb(222,83,23)" rx="2" ry="2" />
<text  x="75.87" y="47.5" ></text>
</g>
<g >
<title>[unknown] (315 samples, 1.69%)</title><rect x="57.9" y="485" width="19.9" height="15.0" fill="rgb(248,176,35)" rx="2" ry="2" />
<text  x="60.91" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (61 samples, 0.33%)</title><rect x="155.3" y="1749" width="3.9" height="15.0" fill="rgb(215,199,34)" rx="2" ry="2" />
<text  x="158.31" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1186.2" y="597" width="0.1" height="15.0" fill="rgb(224,16,46)" rx="2" ry="2" />
<text  x="1189.21" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1186.2" y="949" width="0.1" height="15.0" fill="rgb(248,69,8)" rx="2" ry="2" />
<text  x="1189.21" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1186.2" y="1221" width="0.1" height="15.0" fill="rgb(230,0,43)" rx="2" ry="2" />
<text  x="1189.21" y="1231.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::initNgrams (14 samples, 0.07%)</title><rect x="869.9" y="1973" width="0.9" height="15.0" fill="rgb(248,82,38)" rx="2" ry="2" />
<text  x="872.91" y="1983.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt; &gt;::_M_manager (2 samples, 0.01%)</title><rect x="159.3" y="1701" width="0.1" height="15.0" fill="rgb(246,75,17)" rx="2" ry="2" />
<text  x="162.28" y="1711.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (149 samples, 0.80%)</title><rect x="1125.2" y="2037" width="9.4" height="15.0" fill="rgb(222,197,24)" rx="2" ry="2" />
<text  x="1128.17" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.0" y="645" width="0.2" height="15.0" fill="rgb(245,98,44)" rx="2" ry="2" />
<text  x="1190.03" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (49 samples, 0.26%)</title><rect x="155.7" y="1669" width="3.1" height="15.0" fill="rgb(249,78,14)" rx="2" ry="2" />
<text  x="158.69" y="1679.5" ></text>
</g>
<g >
<title>native_flush_tlb_others (2 samples, 0.01%)</title><rect x="82.0" y="1189" width="0.1" height="15.0" fill="rgb(225,66,26)" rx="2" ry="2" />
<text  x="85.02" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="165.8" y="1509" width="0.5" height="15.0" fill="rgb(208,66,18)" rx="2" ry="2" />
<text  x="168.85" y="1519.5" ></text>
</g>
<g >
<title>__handle_mm_fault (56 samples, 0.30%)</title><rect x="22.9" y="1973" width="3.5" height="15.0" fill="rgb(207,74,21)" rx="2" ry="2" />
<text  x="25.88" y="1983.5" ></text>
</g>
<g >
<title>__dynamic_cast (6 samples, 0.03%)</title><rect x="206.9" y="1637" width="0.4" height="15.0" fill="rgb(220,102,21)" rx="2" ry="2" />
<text  x="209.88" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (319 samples, 1.71%)</title><rect x="57.9" y="757" width="20.1" height="15.0" fill="rgb(209,67,5)" rx="2" ry="2" />
<text  x="60.91" y="767.5" ></text>
</g>
<g >
<title>__asan::Allocator::Deallocate (258 samples, 1.38%)</title><rect x="942.1" y="2053" width="16.2" height="15.0" fill="rgb(210,30,2)" rx="2" ry="2" />
<text  x="945.06" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (321 samples, 1.72%)</title><rect x="57.9" y="917" width="20.3" height="15.0" fill="rgb(213,17,14)" rx="2" ry="2" />
<text  x="60.91" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="1186.3" y="1701" width="0.3" height="15.0" fill="rgb(218,198,13)" rx="2" ry="2" />
<text  x="1189.34" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1186.7" y="645" width="0.3" height="15.0" fill="rgb(230,115,28)" rx="2" ry="2" />
<text  x="1189.72" y="655.5" ></text>
</g>
<g >
<title>__interceptor_memcmp (20 samples, 0.11%)</title><rect x="996.1" y="2053" width="1.3" height="15.0" fill="rgb(207,17,42)" rx="2" ry="2" />
<text  x="999.09" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (9 samples, 0.05%)</title><rect x="875.0" y="2021" width="0.5" height="15.0" fill="rgb(238,109,37)" rx="2" ry="2" />
<text  x="877.96" y="2031.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="87.1" y="1637" width="0.1" height="15.0" fill="rgb(227,124,51)" rx="2" ry="2" />
<text  x="90.07" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1186.2" y="629" width="0.1" height="15.0" fill="rgb(224,34,17)" rx="2" ry="2" />
<text  x="1189.21" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1186.7" y="725" width="0.3" height="15.0" fill="rgb(217,103,6)" rx="2" ry="2" />
<text  x="1189.72" y="735.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_Alloc_node&gt; (4 samples, 0.02%)</title><rect x="508.7" y="1925" width="0.3" height="15.0" fill="rgb(244,94,23)" rx="2" ry="2" />
<text  x="511.73" y="1935.5" ></text>
</g>
<g >
<title>__sanitizer::internal_mmap (24 samples, 0.13%)</title><rect x="755.7" y="2037" width="1.5" height="15.0" fill="rgb(241,58,22)" rx="2" ry="2" />
<text  x="758.66" y="2047.5" ></text>
</g>
<g >
<title>__do_munmap (6 samples, 0.03%)</title><rect x="1096.4" y="1925" width="0.4" height="15.0" fill="rgb(254,68,7)" rx="2" ry="2" />
<text  x="1099.39" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (306 samples, 1.64%)</title><rect x="57.9" y="53" width="19.3" height="15.0" fill="rgb(245,29,43)" rx="2" ry="2" />
<text  x="60.91" y="63.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1186.2" y="1013" width="0.1" height="15.0" fill="rgb(214,21,29)" rx="2" ry="2" />
<text  x="1189.21" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1186.6" y="2005" width="0.4" height="15.0" fill="rgb(229,186,48)" rx="2" ry="2" />
<text  x="1189.59" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="194.4" y="1685" width="0.1" height="15.0" fill="rgb(225,195,49)" rx="2" ry="2" />
<text  x="197.38" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (5 samples, 0.03%)</title><rect x="166.7" y="1669" width="0.3" height="15.0" fill="rgb(240,209,24)" rx="2" ry="2" />
<text  x="169.73" y="1679.5" ></text>
</g>
<g >
<title>__pthread_getspecific (4 samples, 0.02%)</title><rect x="162.1" y="1669" width="0.3" height="15.0" fill="rgb(211,14,49)" rx="2" ry="2" />
<text  x="165.12" y="1679.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.02%)</title><rect x="127.4" y="2021" width="0.3" height="15.0" fill="rgb(250,27,34)" rx="2" ry="2" />
<text  x="130.41" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.04%)</title><rect x="1186.1" y="2037" width="0.5" height="15.0" fill="rgb(244,171,8)" rx="2" ry="2" />
<text  x="1189.09" y="2047.5" ></text>
</g>
<g >
<title>__handle_mm_fault (22 samples, 0.12%)</title><rect x="489.7" y="1861" width="1.4" height="15.0" fill="rgb(228,210,43)" rx="2" ry="2" />
<text  x="492.66" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1186.7" y="773" width="0.3" height="15.0" fill="rgb(218,182,52)" rx="2" ry="2" />
<text  x="1189.72" y="783.5" ></text>
</g>
<g >
<title>[unknown] (314 samples, 1.68%)</title><rect x="57.9" y="469" width="19.8" height="15.0" fill="rgb(218,180,11)" rx="2" ry="2" />
<text  x="60.91" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="194.5" y="1429" width="0.1" height="15.0" fill="rgb(235,74,1)" rx="2" ry="2" />
<text  x="197.51" y="1439.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.07%)</title><rect x="27.4" y="1989" width="0.8" height="15.0" fill="rgb(242,47,41)" rx="2" ry="2" />
<text  x="30.36" y="1999.5" ></text>
</g>
<g >
<title>do_syscall_64 (4 samples, 0.02%)</title><rect x="137.9" y="1941" width="0.2" height="15.0" fill="rgb(207,27,54)" rx="2" ry="2" />
<text  x="140.88" y="1951.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (45 samples, 0.24%)</title><rect x="208.3" y="1621" width="2.8" height="15.0" fill="rgb(233,59,39)" rx="2" ry="2" />
<text  x="211.27" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.0" y="2021" width="0.2" height="15.0" fill="rgb(224,118,3)" rx="2" ry="2" />
<text  x="1190.03" y="2031.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int&gt; (31 samples, 0.17%)</title><rect x="1187.8" y="2053" width="1.9" height="15.0" fill="rgb(230,199,22)" rx="2" ry="2" />
<text  x="1190.79" y="2063.5" ></text>
</g>
<g >
<title>__pthread_getspecific (5 samples, 0.03%)</title><rect x="221.1" y="1669" width="0.3" height="15.0" fill="rgb(235,162,17)" rx="2" ry="2" />
<text  x="224.08" y="1679.5" ></text>
</g>
<g >
<title>finish_task_switch (4 samples, 0.02%)</title><rect x="137.9" y="1829" width="0.2" height="15.0" fill="rgb(216,151,26)" rx="2" ry="2" />
<text  x="140.88" y="1839.5" ></text>
</g>
<g >
<title>try_to_wake_up (2 samples, 0.01%)</title><rect x="1097.2" y="1893" width="0.1" height="15.0" fill="rgb(250,205,22)" rx="2" ry="2" />
<text  x="1100.21" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (75 samples, 0.40%)</title><rect x="144.0" y="1717" width="4.7" height="15.0" fill="rgb(215,81,52)" rx="2" ry="2" />
<text  x="147.01" y="1727.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::create&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt; const&amp;&gt; (4 samples, 0.02%)</title><rect x="508.7" y="1813" width="0.3" height="15.0" fill="rgb(207,16,15)" rx="2" ry="2" />
<text  x="511.73" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1187.0" y="1573" width="0.2" height="15.0" fill="rgb(229,115,13)" rx="2" ry="2" />
<text  x="1190.03" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (343 samples, 1.83%)</title><rect x="166.7" y="1781" width="21.7" height="15.0" fill="rgb(235,47,33)" rx="2" ry="2" />
<text  x="169.73" y="1791.5" >s..</text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="83.6" y="1461" width="0.1" height="15.0" fill="rgb(211,65,40)" rx="2" ry="2" />
<text  x="86.60" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1186.7" y="1221" width="0.3" height="15.0" fill="rgb(242,139,51)" rx="2" ry="2" />
<text  x="1189.72" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_try_char (2 samples, 0.01%)</title><rect x="223.5" y="1733" width="0.2" height="15.0" fill="rgb(244,165,5)" rx="2" ry="2" />
<text  x="226.54" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (434 samples, 2.32%)</title><rect x="166.7" y="1909" width="27.4" height="15.0" fill="rgb(254,134,27)" rx="2" ry="2" />
<text  x="169.67" y="1919.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1186.7" y="1349" width="0.3" height="15.0" fill="rgb(240,67,4)" rx="2" ry="2" />
<text  x="1189.65" y="1359.5" ></text>
</g>
<g >
<title>fasttext::FastText::predict (2 samples, 0.01%)</title><rect x="759.3" y="2037" width="0.1" height="15.0" fill="rgb(229,118,45)" rx="2" ry="2" />
<text  x="762.32" y="2047.5" ></text>
</g>
<g >
<title>native_flush_tlb_others (4 samples, 0.02%)</title><rect x="1096.4" y="1829" width="0.2" height="15.0" fill="rgb(240,156,53)" rx="2" ry="2" />
<text  x="1099.39" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1186.2" y="1285" width="0.1" height="15.0" fill="rgb(210,51,36)" rx="2" ry="2" />
<text  x="1189.21" y="1295.5" ></text>
</g>
<g >
<title>do_syscall_64 (4 samples, 0.02%)</title><rect x="757.2" y="2005" width="0.2" height="15.0" fill="rgb(205,98,27)" rx="2" ry="2" />
<text  x="760.17" y="2015.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::basic_regex&lt;char const*&gt; (437 samples, 2.34%)</title><rect x="166.5" y="1941" width="27.6" height="15.0" fill="rgb(223,210,42)" rx="2" ry="2" />
<text  x="169.54" y="1951.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1186.4" y="1333" width="0.2" height="15.0" fill="rgb(247,219,24)" rx="2" ry="2" />
<text  x="1189.40" y="1343.5" ></text>
</g>
<g >
<title>__vm_munmap (2 samples, 0.01%)</title><rect x="93.0" y="1925" width="0.1" height="15.0" fill="rgb(219,214,24)" rx="2" ry="2" />
<text  x="96.01" y="1935.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (19 samples, 0.10%)</title><rect x="937.9" y="1925" width="1.2" height="15.0" fill="rgb(226,21,16)" rx="2" ry="2" />
<text  x="940.89" y="1935.5" ></text>
</g>
<g >
<title>release_pages (2 samples, 0.01%)</title><rect x="25.0" y="1909" width="0.1" height="15.0" fill="rgb(228,42,18)" rx="2" ry="2" />
<text  x="28.02" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (2 samples, 0.01%)</title><rect x="223.9" y="1781" width="0.1" height="15.0" fill="rgb(233,42,42)" rx="2" ry="2" />
<text  x="226.92" y="1791.5" ></text>
</g>
<g >
<title>do_page_fault (19 samples, 0.10%)</title><rect x="666.8" y="1829" width="1.2" height="15.0" fill="rgb(249,124,14)" rx="2" ry="2" />
<text  x="669.85" y="1839.5" ></text>
</g>
<g >
<title>__do_page_fault (6 samples, 0.03%)</title><rect x="1098.0" y="1989" width="0.3" height="15.0" fill="rgb(206,92,28)" rx="2" ry="2" />
<text  x="1100.97" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (4 samples, 0.02%)</title><rect x="159.2" y="1781" width="0.2" height="15.0" fill="rgb(208,111,0)" rx="2" ry="2" />
<text  x="162.16" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (72 samples, 0.39%)</title><rect x="195.9" y="1605" width="4.5" height="15.0" fill="rgb(209,155,34)" rx="2" ry="2" />
<text  x="198.89" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (505 samples, 2.70%)</title><rect x="57.8" y="1797" width="31.9" height="15.0" fill="rgb(250,82,38)" rx="2" ry="2" />
<text  x="60.85" y="1807.5" >[u..</text>
</g>
<g >
<title>fasttext::Dictionary::readWord (74 samples, 0.40%)</title><rect x="96.2" y="2021" width="4.6" height="15.0" fill="rgb(219,77,6)" rx="2" ry="2" />
<text  x="99.16" y="2031.5" ></text>
</g>
<g >
<title>onmt::unicode::explode_utf8 (345 samples, 1.85%)</title><rect x="584.3" y="1877" width="21.8" height="15.0" fill="rgb(252,226,40)" rx="2" ry="2" />
<text  x="587.28" y="1887.5" >o..</text>
</g>
<g >
<title>fasttext::Dictionary::addSubwords (23 samples, 0.12%)</title><rect x="527.9" y="1909" width="1.5" height="15.0" fill="rgb(245,71,42)" rx="2" ry="2" />
<text  x="530.91" y="1919.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::_Bind&lt;Annotate (3,623 samples, 19.38%)</title><rect x="517.3" y="1989" width="228.7" height="15.0" fill="rgb(207,138,22)" rx="2" ry="2" />
<text  x="520.31" y="1999.5" >std::__invoke&lt;std::_Bind&lt;Annot..</text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="85.7" y="1573" width="0.1" height="15.0" fill="rgb(251,126,47)" rx="2" ry="2" />
<text  x="88.68" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1186.4" y="277" width="0.2" height="15.0" fill="rgb(205,123,25)" rx="2" ry="2" />
<text  x="1189.40" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="1186.3" y="1669" width="0.3" height="15.0" fill="rgb(223,211,22)" rx="2" ry="2" />
<text  x="1189.34" y="1679.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (2 samples, 0.01%)</title><rect x="803.6" y="2005" width="0.1" height="15.0" fill="rgb(240,152,44)" rx="2" ry="2" />
<text  x="806.57" y="2015.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="78.2" y="965" width="0.2" height="15.0" fill="rgb(231,74,48)" rx="2" ry="2" />
<text  x="81.23" y="975.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::_M_transform@plt (3 samples, 0.02%)</title><rect x="1147.5" y="2053" width="0.1" height="15.0" fill="rgb(242,213,31)" rx="2" ry="2" />
<text  x="1150.46" y="2063.5" ></text>
</g>
<g >
<title>TFastTextEmbedder::GetSentenceEmbedding (1,764 samples, 9.44%)</title><rect x="375.2" y="1973" width="111.4" height="15.0" fill="rgb(247,229,15)" rx="2" ry="2" />
<text  x="378.22" y="1983.5" >TFastTextEmbe..</text>
</g>
<g >
<title>__do_munmap (2 samples, 0.01%)</title><rect x="91.6" y="1845" width="0.1" height="15.0" fill="rgb(225,12,2)" rx="2" ry="2" />
<text  x="94.62" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1186.7" y="1253" width="0.3" height="15.0" fill="rgb(243,151,48)" rx="2" ry="2" />
<text  x="1189.72" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (350 samples, 1.87%)</title><rect x="195.4" y="1797" width="22.1" height="15.0" fill="rgb(227,142,16)" rx="2" ry="2" />
<text  x="198.39" y="1807.5" >s..</text>
</g>
<g >
<title>__do_page_fault (134 samples, 0.72%)</title><rect x="933.5" y="2005" width="8.4" height="15.0" fill="rgb(223,146,44)" rx="2" ry="2" />
<text  x="936.47" y="2015.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.25] (24 samples, 0.13%)</title><rect x="26.7" y="2053" width="1.5" height="15.0" fill="rgb(252,194,7)" rx="2" ry="2" />
<text  x="29.66" y="2063.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (4 samples, 0.02%)</title><rect x="223.2" y="1701" width="0.2" height="15.0" fill="rgb(225,125,39)" rx="2" ry="2" />
<text  x="226.16" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1186.2" y="117" width="0.1" height="15.0" fill="rgb(247,156,42)" rx="2" ry="2" />
<text  x="1189.21" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.0" y="1061" width="0.2" height="15.0" fill="rgb(238,21,22)" rx="2" ry="2" />
<text  x="1190.03" y="1071.5" ></text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::next_byte_in_range (43 samples, 0.23%)</title><rect x="134.2" y="1925" width="2.7" height="15.0" fill="rgb(219,34,30)" rx="2" ry="2" />
<text  x="137.22" y="1935.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsgetn (2 samples, 0.01%)</title><rect x="1187.2" y="2053" width="0.1" height="15.0" fill="rgb(230,131,9)" rx="2" ry="2" />
<text  x="1190.22" y="2063.5" ></text>
</g>
<g >
<title>unmap_region (4 samples, 0.02%)</title><rect x="757.2" y="1941" width="0.2" height="15.0" fill="rgb(226,193,9)" rx="2" ry="2" />
<text  x="760.17" y="1951.5" ></text>
</g>
<g >
<title>handle_mm_fault (57 samples, 0.30%)</title><rect x="22.8" y="1989" width="3.6" height="15.0" fill="rgb(207,104,1)" rx="2" ry="2" />
<text  x="25.81" y="1999.5" ></text>
</g>
<g >
<title>mmap_region (12 samples, 0.06%)</title><rect x="1096.4" y="1941" width="0.7" height="15.0" fill="rgb(212,135,29)" rx="2" ry="2" />
<text  x="1099.39" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1186.6" y="1941" width="0.4" height="15.0" fill="rgb(216,92,53)" rx="2" ry="2" />
<text  x="1189.59" y="1951.5" ></text>
</g>
<g >
<title>Annotate (166 samples, 0.89%)</title><rect x="127.7" y="2005" width="10.5" height="15.0" fill="rgb(205,186,9)" rx="2" ry="2" />
<text  x="130.72" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1186.2" y="1781" width="0.1" height="15.0" fill="rgb(241,74,39)" rx="2" ry="2" />
<text  x="1189.21" y="1791.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (2 samples, 0.01%)</title><rect x="86.6" y="1637" width="0.2" height="15.0" fill="rgb(216,181,11)" rx="2" ry="2" />
<text  x="89.63" y="1647.5" ></text>
</g>
<g >
<title>DetectCategory (205 samples, 1.10%)</title><rect x="517.3" y="1973" width="13.0" height="15.0" fill="rgb(215,109,12)" rx="2" ry="2" />
<text  x="520.31" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.01%)</title><rect x="553.8" y="1813" width="0.1" height="15.0" fill="rgb(211,11,34)" rx="2" ry="2" />
<text  x="556.79" y="1823.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (2 samples, 0.01%)</title><rect x="1189.1" y="1941" width="0.1" height="15.0" fill="rgb(249,161,36)" rx="2" ry="2" />
<text  x="1192.05" y="1951.5" ></text>
</g>
<g >
<title>__interceptor_memcmp (167 samples, 0.89%)</title><rect x="1134.6" y="2037" width="10.5" height="15.0" fill="rgb(236,163,9)" rx="2" ry="2" />
<text  x="1137.58" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1186.2" y="1429" width="0.1" height="15.0" fill="rgb(207,212,27)" rx="2" ry="2" />
<text  x="1189.21" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (3 samples, 0.02%)</title><rect x="224.2" y="1829" width="0.2" height="15.0" fill="rgb(231,131,20)" rx="2" ry="2" />
<text  x="227.24" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (320 samples, 1.71%)</title><rect x="57.9" y="853" width="20.2" height="15.0" fill="rgb(240,56,27)" rx="2" ry="2" />
<text  x="60.91" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1186.4" y="389" width="0.2" height="15.0" fill="rgb(251,139,21)" rx="2" ry="2" />
<text  x="1189.40" y="399.5" ></text>
</g>
<g >
<title>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::dump_escaped (3 samples, 0.02%)</title><rect x="508.1" y="1909" width="0.2" height="15.0" fill="rgb(235,179,20)" rx="2" ry="2" />
<text  x="511.09" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="1186.3" y="1893" width="0.3" height="15.0" fill="rgb(206,11,21)" rx="2" ry="2" />
<text  x="1189.34" y="1903.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.02%)</title><rect x="199.1" y="1557" width="0.2" height="15.0" fill="rgb(245,171,41)" rx="2" ry="2" />
<text  x="202.11" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1186.2" y="565" width="0.1" height="15.0" fill="rgb(227,108,49)" rx="2" ry="2" />
<text  x="1189.21" y="575.5" ></text>
</g>
<g >
<title>up_write (4 samples, 0.02%)</title><rect x="756.9" y="1941" width="0.3" height="15.0" fill="rgb(253,16,52)" rx="2" ry="2" />
<text  x="759.92" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1186.6" y="1845" width="0.4" height="15.0" fill="rgb(210,40,48)" rx="2" ry="2" />
<text  x="1189.59" y="1855.5" ></text>
</g>
<g >
<title>std::locale::~locale (3 samples, 0.02%)</title><rect x="506.5" y="1973" width="0.1" height="15.0" fill="rgb(221,98,1)" rx="2" ry="2" />
<text  x="509.45" y="1983.5" ></text>
</g>
<g >
<title>__sanitizer::StackTrace::GetCurrentPc (5 samples, 0.03%)</title><rect x="583.0" y="1877" width="0.3" height="15.0" fill="rgb(217,26,49)" rx="2" ry="2" />
<text  x="585.96" y="1887.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="82.5" y="1349" width="0.1" height="15.0" fill="rgb(242,61,50)" rx="2" ry="2" />
<text  x="85.46" y="1359.5" ></text>
</g>
<g >
<title>on_each_cpu_mask (2 samples, 0.01%)</title><rect x="82.0" y="1157" width="0.1" height="15.0" fill="rgb(205,54,5)" rx="2" ry="2" />
<text  x="85.02" y="1167.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (6 samples, 0.03%)</title><rect x="187.4" y="1621" width="0.4" height="15.0" fill="rgb(226,99,1)" rx="2" ry="2" />
<text  x="190.37" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (75 samples, 0.40%)</title><rect x="183.6" y="1717" width="4.7" height="15.0" fill="rgb(217,27,25)" rx="2" ry="2" />
<text  x="186.59" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1186.2" y="1413" width="0.1" height="15.0" fill="rgb(253,43,45)" rx="2" ry="2" />
<text  x="1189.21" y="1423.5" ></text>
</g>
<g >
<title>__interceptor_memcpy (36 samples, 0.19%)</title><rect x="1112.5" y="2037" width="2.3" height="15.0" fill="rgb(233,88,21)" rx="2" ry="2" />
<text  x="1115.55" y="2047.5" ></text>
</g>
<g >
<title>fasttext::Vector::mul (2 samples, 0.01%)</title><rect x="329.6" y="1973" width="0.1" height="15.0" fill="rgb(232,161,45)" rx="2" ry="2" />
<text  x="332.59" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (309 samples, 1.65%)</title><rect x="57.9" y="229" width="19.5" height="15.0" fill="rgb(215,179,11)" rx="2" ry="2" />
<text  x="60.91" y="239.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="57.6" y="1813" width="0.1" height="15.0" fill="rgb(233,229,54)" rx="2" ry="2" />
<text  x="60.59" y="1823.5" ></text>
</g>
<g >
<title>schedule (6 samples, 0.03%)</title><rect x="27.8" y="1941" width="0.4" height="15.0" fill="rgb(239,78,51)" rx="2" ry="2" />
<text  x="30.80" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (413 samples, 2.21%)</title><rect x="138.3" y="1829" width="26.1" height="15.0" fill="rgb(211,98,38)" rx="2" ry="2" />
<text  x="141.33" y="1839.5" >s..</text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (46 samples, 0.25%)</title><rect x="140.3" y="1573" width="2.9" height="15.0" fill="rgb(241,211,45)" rx="2" ry="2" />
<text  x="143.28" y="1583.5" ></text>
</g>
<g >
<title>flush_tlb_mm_range (4 samples, 0.02%)</title><rect x="1096.4" y="1845" width="0.2" height="15.0" fill="rgb(223,19,51)" rx="2" ry="2" />
<text  x="1099.39" y="1855.5" ></text>
</g>
<g >
<title>clear_page_erms (2 samples, 0.01%)</title><rect x="643.4" y="1749" width="0.1" height="15.0" fill="rgb(205,66,12)" rx="2" ry="2" />
<text  x="646.36" y="1759.5" ></text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.02%)</title><rect x="179.4" y="1605" width="0.2" height="15.0" fill="rgb(236,15,41)" rx="2" ry="2" />
<text  x="182.42" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="225.1" y="1397" width="0.1" height="15.0" fill="rgb(216,225,29)" rx="2" ry="2" />
<text  x="228.06" y="1407.5" ></text>
</g>
<g >
<title>unmap_single_vma (5 samples, 0.03%)</title><rect x="1097.5" y="1925" width="0.3" height="15.0" fill="rgb(220,108,47)" rx="2" ry="2" />
<text  x="1100.46" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (324 samples, 1.73%)</title><rect x="57.9" y="1029" width="20.5" height="15.0" fill="rgb(216,61,50)" rx="2" ry="2" />
<text  x="60.91" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (70 samples, 0.37%)</title><rect x="159.8" y="1701" width="4.4" height="15.0" fill="rgb(221,126,29)" rx="2" ry="2" />
<text  x="162.79" y="1711.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="84.0" y="1493" width="0.2" height="15.0" fill="rgb(205,2,9)" rx="2" ry="2" />
<text  x="87.04" y="1503.5" ></text>
</g>
<g >
<title>alloc_pages_vma (18 samples, 0.10%)</title><rect x="500.1" y="1877" width="1.2" height="15.0" fill="rgb(210,106,25)" rx="2" ry="2" />
<text  x="503.14" y="1887.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (3 samples, 0.02%)</title><rect x="141.2" y="1557" width="0.2" height="15.0" fill="rgb(209,193,27)" rx="2" ry="2" />
<text  x="144.17" y="1567.5" ></text>
</g>
<g >
<title>TDocument::operator= (3 samples, 0.02%)</title><rect x="509.4" y="1957" width="0.2" height="15.0" fill="rgb(242,12,4)" rx="2" ry="2" />
<text  x="512.42" y="1967.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (68 samples, 0.36%)</title><rect x="719.2" y="1877" width="4.3" height="15.0" fill="rgb(235,14,31)" rx="2" ry="2" />
<text  x="722.24" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1186.2" y="389" width="0.1" height="15.0" fill="rgb(243,123,39)" rx="2" ry="2" />
<text  x="1189.21" y="399.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="530.1" y="1957" width="0.2" height="15.0" fill="rgb(248,60,25)" rx="2" ry="2" />
<text  x="533.12" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1186.2" y="981" width="0.1" height="15.0" fill="rgb(230,18,47)" rx="2" ry="2" />
<text  x="1189.21" y="991.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::basic_json (4 samples, 0.02%)</title><rect x="508.5" y="1989" width="0.2" height="15.0" fill="rgb(239,147,47)" rx="2" ry="2" />
<text  x="511.47" y="1999.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.02%)</title><rect x="153.9" y="1605" width="0.1" height="15.0" fill="rgb(225,114,54)" rx="2" ry="2" />
<text  x="156.85" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="165.9" y="1349" width="0.4" height="15.0" fill="rgb(207,172,1)" rx="2" ry="2" />
<text  x="168.91" y="1359.5" ></text>
</g>
<g >
<title>onmt::is_alphabet (45 samples, 0.24%)</title><rect x="645.1" y="1877" width="2.8" height="15.0" fill="rgb(234,190,14)" rx="2" ry="2" />
<text  x="648.07" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (78 samples, 0.42%)</title><rect x="159.5" y="1781" width="4.9" height="15.0" fill="rgb(231,47,33)" rx="2" ry="2" />
<text  x="162.47" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1186.2" y="197" width="0.1" height="15.0" fill="rgb(252,164,47)" rx="2" ry="2" />
<text  x="1189.21" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.0" y="1269" width="0.2" height="15.0" fill="rgb(244,210,22)" rx="2" ry="2" />
<text  x="1190.03" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.0" y="581" width="0.2" height="15.0" fill="rgb(251,208,48)" rx="2" ry="2" />
<text  x="1190.03" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1186.4" y="981" width="0.2" height="15.0" fill="rgb(226,189,11)" rx="2" ry="2" />
<text  x="1189.40" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1187.0" y="1477" width="0.2" height="15.0" fill="rgb(223,206,23)" rx="2" ry="2" />
<text  x="1190.03" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1187.0" y="517" width="0.2" height="15.0" fill="rgb(205,7,11)" rx="2" ry="2" />
<text  x="1190.03" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (3 samples, 0.02%)</title><rect x="178.0" y="1733" width="0.2" height="15.0" fill="rgb(230,72,5)" rx="2" ry="2" />
<text  x="181.03" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1187.0" y="709" width="0.2" height="15.0" fill="rgb(248,144,4)" rx="2" ry="2" />
<text  x="1190.03" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.0" y="981" width="0.2" height="15.0" fill="rgb(240,173,21)" rx="2" ry="2" />
<text  x="1190.03" y="991.5" ></text>
</g>
<g >
<title>unmap_page_range (4 samples, 0.02%)</title><rect x="757.2" y="1893" width="0.2" height="15.0" fill="rgb(209,108,50)" rx="2" ry="2" />
<text  x="760.17" y="1903.5" ></text>
</g>
<g >
<title>try_charge (4 samples, 0.02%)</title><rect x="667.8" y="1733" width="0.2" height="15.0" fill="rgb(235,214,4)" rx="2" ry="2" />
<text  x="670.79" y="1743.5" ></text>
</g>
<g >
<title>smp_call_function_many (3 samples, 0.02%)</title><rect x="513.0" y="1845" width="0.1" height="15.0" fill="rgb(237,54,20)" rx="2" ry="2" />
<text  x="515.95" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (422 samples, 2.26%)</title><rect x="138.3" y="1845" width="26.7" height="15.0" fill="rgb(212,182,52)" rx="2" ry="2" />
<text  x="141.33" y="1855.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1186.2" y="165" width="0.1" height="15.0" fill="rgb(233,110,1)" rx="2" ry="2" />
<text  x="1189.21" y="175.5" ></text>
</g>
<g >
<title>__asan::GetMallocContextSize (6 samples, 0.03%)</title><rect x="1155.7" y="2037" width="0.3" height="15.0" fill="rgb(229,120,34)" rx="2" ry="2" />
<text  x="1158.66" y="2047.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (2 samples, 0.01%)</title><rect x="91.9" y="1941" width="0.1" height="15.0" fill="rgb(226,91,30)" rx="2" ry="2" />
<text  x="94.87" y="1951.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (7 samples, 0.04%)</title><rect x="682.1" y="1749" width="0.4" height="15.0" fill="rgb(243,152,15)" rx="2" ry="2" />
<text  x="685.06" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.02%)</title><rect x="1186.3" y="2021" width="0.3" height="15.0" fill="rgb(238,96,6)" rx="2" ry="2" />
<text  x="1189.34" y="2031.5" ></text>
</g>
<g >
<title>flush_tlb_mm_range (6 samples, 0.03%)</title><rect x="512.8" y="1909" width="0.3" height="15.0" fill="rgb(212,178,17)" rx="2" ry="2" />
<text  x="515.77" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="57.6" y="1397" width="0.1" height="15.0" fill="rgb(247,13,30)" rx="2" ry="2" />
<text  x="60.59" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.0" y="1557" width="0.2" height="15.0" fill="rgb(248,180,4)" rx="2" ry="2" />
<text  x="1190.03" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (485 samples, 2.59%)</title><rect x="57.8" y="1733" width="30.7" height="15.0" fill="rgb(234,175,16)" rx="2" ry="2" />
<text  x="60.85" y="1743.5" >[u..</text>
</g>
<g >
<title>[unknown] (411 samples, 2.20%)</title><rect x="57.8" y="1477" width="26.0" height="15.0" fill="rgb(211,50,34)" rx="2" ry="2" />
<text  x="60.85" y="1487.5" >[..</text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;std::__future_base::_Task_state&lt;std::_Bind&lt;Annotate (7 samples, 0.04%)</title><rect x="137.3" y="1973" width="0.4" height="15.0" fill="rgb(224,128,41)" rx="2" ry="2" />
<text  x="140.25" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1186.4" y="933" width="0.2" height="15.0" fill="rgb(215,181,22)" rx="2" ry="2" />
<text  x="1189.40" y="943.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (5 samples, 0.03%)</title><rect x="214.1" y="1637" width="0.3" height="15.0" fill="rgb(233,32,0)" rx="2" ry="2" />
<text  x="217.07" y="1647.5" ></text>
</g>
<g >
<title>handle_mm_fault (6 samples, 0.03%)</title><rect x="643.2" y="1813" width="0.4" height="15.0" fill="rgb(217,8,36)" rx="2" ry="2" />
<text  x="646.24" y="1823.5" ></text>
</g>
<g >
<title>__asan::PoisonShadow (118 samples, 0.63%)</title><rect x="969.3" y="2053" width="7.5" height="15.0" fill="rgb(235,118,44)" rx="2" ry="2" />
<text  x="972.33" y="2063.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (6 samples, 0.03%)</title><rect x="527.0" y="1909" width="0.3" height="15.0" fill="rgb(227,136,44)" rx="2" ry="2" />
<text  x="529.97" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.0" y="1029" width="0.2" height="15.0" fill="rgb(253,5,5)" rx="2" ry="2" />
<text  x="1190.03" y="1039.5" ></text>
</g>
<g >
<title>wake_up_q (2 samples, 0.01%)</title><rect x="1097.2" y="1909" width="0.1" height="15.0" fill="rgb(221,126,53)" rx="2" ry="2" />
<text  x="1100.21" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="194.5" y="1269" width="0.1" height="15.0" fill="rgb(251,87,29)" rx="2" ry="2" />
<text  x="197.51" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1186.2" y="1541" width="0.1" height="15.0" fill="rgb(217,21,37)" rx="2" ry="2" />
<text  x="1189.21" y="1551.5" ></text>
</g>
<g >
<title>get_page_from_freelist (3 samples, 0.02%)</title><rect x="56.7" y="1877" width="0.2" height="15.0" fill="rgb(224,154,33)" rx="2" ry="2" />
<text  x="59.71" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1186.7" y="613" width="0.3" height="15.0" fill="rgb(250,169,39)" rx="2" ry="2" />
<text  x="1189.72" y="623.5" ></text>
</g>
<g >
<title>fasttext::Matrix::size (38 samples, 0.20%)</title><rect x="481.3" y="1957" width="2.4" height="15.0" fill="rgb(235,104,7)" rx="2" ry="2" />
<text  x="484.27" y="1967.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (3 samples, 0.02%)</title><rect x="211.1" y="1621" width="0.2" height="15.0" fill="rgb(238,185,10)" rx="2" ry="2" />
<text  x="214.11" y="1631.5" ></text>
</g>
<g >
<title>do_page_fault (13 samples, 0.07%)</title><rect x="752.4" y="2005" width="0.8" height="15.0" fill="rgb(245,34,23)" rx="2" ry="2" />
<text  x="755.38" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1186.2" y="1029" width="0.1" height="15.0" fill="rgb(215,197,21)" rx="2" ry="2" />
<text  x="1189.21" y="1039.5" ></text>
</g>
<g >
<title>__do_munmap (2 samples, 0.01%)</title><rect x="93.0" y="1909" width="0.1" height="15.0" fill="rgb(243,84,50)" rx="2" ry="2" />
<text  x="96.01" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (80 samples, 0.43%)</title><rect x="167.2" y="1589" width="5.0" height="15.0" fill="rgb(234,62,14)" rx="2" ry="2" />
<text  x="170.17" y="1599.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (3 samples, 0.02%)</title><rect x="146.7" y="1589" width="0.2" height="15.0" fill="rgb(235,133,19)" rx="2" ry="2" />
<text  x="149.72" y="1599.5" ></text>
</g>
<g >
<title>__asan::AsanChunk::UsedSize (2 samples, 0.01%)</title><rect x="94.9" y="2021" width="0.1" height="15.0" fill="rgb(228,72,19)" rx="2" ry="2" />
<text  x="97.90" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (89 samples, 0.48%)</title><rect x="172.4" y="1637" width="5.6" height="15.0" fill="rgb(239,154,18)" rx="2" ry="2" />
<text  x="175.41" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="194.4" y="1445" width="0.1" height="15.0" fill="rgb(217,171,39)" rx="2" ry="2" />
<text  x="197.38" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1186.1" y="1941" width="0.1" height="15.0" fill="rgb(224,191,28)" rx="2" ry="2" />
<text  x="1189.09" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1186.2" y="485" width="0.1" height="15.0" fill="rgb(218,33,45)" rx="2" ry="2" />
<text  x="1189.21" y="495.5" ></text>
</g>
<g >
<title>onmt::unicode::is_letter (221 samples, 1.18%)</title><rect x="699.4" y="1877" width="13.9" height="15.0" fill="rgb(223,67,32)" rx="2" ry="2" />
<text  x="702.35" y="1887.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (5 samples, 0.03%)</title><rect x="186.2" y="1621" width="0.4" height="15.0" fill="rgb(232,52,36)" rx="2" ry="2" />
<text  x="189.24" y="1631.5" ></text>
</g>
<g >
<title>smp_call_function_single (4 samples, 0.02%)</title><rect x="1096.4" y="1765" width="0.2" height="15.0" fill="rgb(252,32,16)" rx="2" ry="2" />
<text  x="1099.39" y="1775.5" ></text>
</g>
<g >
<title>smp_call_function_single (3 samples, 0.02%)</title><rect x="513.0" y="1829" width="0.1" height="15.0" fill="rgb(217,187,44)" rx="2" ry="2" />
<text  x="515.95" y="1839.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="79.3" y="1189" width="0.1" height="15.0" fill="rgb(211,135,19)" rx="2" ry="2" />
<text  x="82.31" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="165.9" y="1317" width="0.4" height="15.0" fill="rgb(235,109,50)" rx="2" ry="2" />
<text  x="168.91" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.1" y="69" width="0.1" height="15.0" fill="rgb(230,223,8)" rx="2" ry="2" />
<text  x="1190.10" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1186.2" y="1829" width="0.1" height="15.0" fill="rgb(214,201,27)" rx="2" ry="2" />
<text  x="1189.21" y="1839.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::get_case (2 samples, 0.01%)</title><rect x="556.6" y="1909" width="0.1" height="15.0" fill="rgb(244,169,1)" rx="2" ry="2" />
<text  x="559.57" y="1919.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="517.0" y="2021" width="0.1" height="15.0" fill="rgb(246,3,27)" rx="2" ry="2" />
<text  x="519.99" y="2031.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::Unwind (4 samples, 0.02%)</title><rect x="153.5" y="1605" width="0.2" height="15.0" fill="rgb(220,173,45)" rx="2" ry="2" />
<text  x="156.48" y="1615.5" ></text>
</g>
<g >
<title>onmt::Tokenizer::tokenize (4 samples, 0.02%)</title><rect x="800.0" y="2037" width="0.3" height="15.0" fill="rgb(248,44,54)" rx="2" ry="2" />
<text  x="803.03" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (314 samples, 1.68%)</title><rect x="57.9" y="453" width="19.8" height="15.0" fill="rgb(228,213,4)" rx="2" ry="2" />
<text  x="60.91" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1186.4" y="421" width="0.2" height="15.0" fill="rgb(248,206,16)" rx="2" ry="2" />
<text  x="1189.40" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::_M_transform (6 samples, 0.03%)</title><rect x="1147.1" y="2053" width="0.4" height="15.0" fill="rgb(226,181,54)" rx="2" ry="2" />
<text  x="1150.08" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (96 samples, 0.51%)</title><rect x="149.0" y="1749" width="6.1" height="15.0" fill="rgb(206,189,40)" rx="2" ry="2" />
<text  x="151.99" y="1759.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (4 samples, 0.02%)</title><rect x="800.0" y="2005" width="0.3" height="15.0" fill="rgb(205,155,16)" rx="2" ry="2" />
<text  x="803.03" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="194.3" y="1877" width="0.3" height="15.0" fill="rgb(225,89,9)" rx="2" ry="2" />
<text  x="197.32" y="1887.5" ></text>
</g>
<g >
<title>run_timer_softirq (2 samples, 0.01%)</title><rect x="501.8" y="1909" width="0.1" height="15.0" fill="rgb(217,187,23)" rx="2" ry="2" />
<text  x="504.78" y="1919.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.01%)</title><rect x="1094.5" y="1989" width="0.1" height="15.0" fill="rgb(217,143,28)" rx="2" ry="2" />
<text  x="1097.50" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (424 samples, 2.27%)</title><rect x="166.7" y="1829" width="26.8" height="15.0" fill="rgb(251,46,46)" rx="2" ry="2" />
<text  x="169.73" y="1839.5" >s..</text>
</g>
<g >
<title>free_pages_and_swap_cache (4 samples, 0.02%)</title><rect x="1097.5" y="1877" width="0.3" height="15.0" fill="rgb(247,214,32)" rx="2" ry="2" />
<text  x="1100.53" y="1887.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (3 samples, 0.02%)</title><rect x="472.1" y="1941" width="0.2" height="15.0" fill="rgb(205,87,49)" rx="2" ry="2" />
<text  x="475.12" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (349 samples, 1.87%)</title><rect x="57.9" y="1221" width="22.0" height="15.0" fill="rgb(234,118,0)" rx="2" ry="2" />
<text  x="60.91" y="1231.5" >[..</text>
</g>
<g >
<title>tlb_flush_mmu (2 samples, 0.01%)</title><rect x="82.0" y="1221" width="0.1" height="15.0" fill="rgb(239,83,54)" rx="2" ry="2" />
<text  x="85.02" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (4 samples, 0.02%)</title><rect x="206.2" y="1749" width="0.3" height="15.0" fill="rgb(238,3,20)" rx="2" ry="2" />
<text  x="209.25" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (2 samples, 0.01%)</title><rect x="223.9" y="1797" width="0.1" height="15.0" fill="rgb(225,192,18)" rx="2" ry="2" />
<text  x="226.92" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1187.0" y="229" width="0.2" height="15.0" fill="rgb(209,183,28)" rx="2" ry="2" />
<text  x="1190.03" y="239.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.01%)</title><rect x="501.8" y="1925" width="0.1" height="15.0" fill="rgb(226,83,30)" rx="2" ry="2" />
<text  x="504.78" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="194.5" y="1637" width="0.1" height="15.0" fill="rgb(228,210,0)" rx="2" ry="2" />
<text  x="197.51" y="1647.5" ></text>
</g>
<g >
<title>alloc_pages_vma (8 samples, 0.04%)</title><rect x="56.4" y="1909" width="0.5" height="15.0" fill="rgb(231,38,40)" rx="2" ry="2" />
<text  x="59.39" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="225.0" y="1781" width="0.3" height="15.0" fill="rgb(235,114,1)" rx="2" ry="2" />
<text  x="227.99" y="1791.5" ></text>
</g>
<g >
<title>nlohmann::detail::parser&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::sax_parse_internal&lt;nlohmann::detail::json_sax_dom_parser&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; (131 samples, 0.70%)</title><rect x="128.9" y="1957" width="8.2" height="15.0" fill="rgb(249,38,45)" rx="2" ry="2" />
<text  x="131.86" y="1967.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (2 samples, 0.01%)</title><rect x="584.0" y="1861" width="0.1" height="15.0" fill="rgb(219,106,38)" rx="2" ry="2" />
<text  x="586.97" y="1871.5" ></text>
</g>
<g >
<title>Summarize (2,221 samples, 11.88%)</title><rect x="194.9" y="2005" width="140.2" height="15.0" fill="rgb(234,205,4)" rx="2" ry="2" />
<text  x="197.88" y="2015.5" >Summarize</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1187.0" y="373" width="0.2" height="15.0" fill="rgb(242,147,16)" rx="2" ry="2" />
<text  x="1190.03" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.0" y="1445" width="0.2" height="15.0" fill="rgb(217,133,1)" rx="2" ry="2" />
<text  x="1190.03" y="1455.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="80.9" y="1301" width="0.2" height="15.0" fill="rgb(250,149,5)" rx="2" ry="2" />
<text  x="83.95" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1186.2" y="1637" width="0.1" height="15.0" fill="rgb(207,9,18)" rx="2" ry="2" />
<text  x="1189.21" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="166.0" y="1173" width="0.3" height="15.0" fill="rgb(209,62,25)" rx="2" ry="2" />
<text  x="169.04" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (76 samples, 0.41%)</title><rect x="139.0" y="1669" width="4.8" height="15.0" fill="rgb(217,55,37)" rx="2" ry="2" />
<text  x="142.02" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="194.4" y="1557" width="0.1" height="15.0" fill="rgb(245,68,12)" rx="2" ry="2" />
<text  x="197.38" y="1567.5" ></text>
</g>
<g >
<title>__interceptor_free (3 samples, 0.02%)</title><rect x="251.6" y="1957" width="0.2" height="15.0" fill="rgb(224,228,2)" rx="2" ry="2" />
<text  x="254.63" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="165.8" y="1525" width="0.5" height="15.0" fill="rgb(215,201,32)" rx="2" ry="2" />
<text  x="168.85" y="1535.5" ></text>
</g>
<g >
<title>onmt::CaseModifier::extract_case_type (839 samples, 4.49%)</title><rect x="567.4" y="1893" width="52.9" height="15.0" fill="rgb(219,9,21)" rx="2" ry="2" />
<text  x="570.37" y="1903.5" >onmt:..</text>
</g>
<g >
<title>onmt::AnnotatedToken::should_preserve (2 samples, 0.01%)</title><rect x="558.7" y="1893" width="0.1" height="15.0" fill="rgb(210,176,21)" rx="2" ry="2" />
<text  x="561.66" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (92 samples, 0.49%)</title><rect x="200.4" y="1701" width="5.8" height="15.0" fill="rgb(206,163,34)" rx="2" ry="2" />
<text  x="203.44" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1186.7" y="1317" width="0.3" height="15.0" fill="rgb(228,15,49)" rx="2" ry="2" />
<text  x="1189.65" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1186.2" y="1269" width="0.1" height="15.0" fill="rgb(206,169,20)" rx="2" ry="2" />
<text  x="1189.21" y="1279.5" ></text>
</g>
<g >
<title>__asan::AsanThread::stack_bottom (7 samples, 0.04%)</title><rect x="1154.2" y="2037" width="0.5" height="15.0" fill="rgb(213,188,23)" rx="2" ry="2" />
<text  x="1157.21" y="2047.5" ></text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.02%)</title><rect x="196.8" y="1573" width="0.2" height="15.0" fill="rgb(206,16,45)" rx="2" ry="2" />
<text  x="199.78" y="1583.5" ></text>
</g>
<g >
<title>alloc_pages_vma (26 samples, 0.14%)</title><rect x="23.3" y="1957" width="1.7" height="15.0" fill="rgb(244,202,1)" rx="2" ry="2" />
<text  x="26.32" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1186.2" y="869" width="0.1" height="15.0" fill="rgb(212,176,44)" rx="2" ry="2" />
<text  x="1189.21" y="879.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (53 samples, 0.28%)</title><rect x="168.8" y="1557" width="3.3" height="15.0" fill="rgb(206,158,50)" rx="2" ry="2" />
<text  x="171.75" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="224.9" y="1861" width="0.4" height="15.0" fill="rgb(254,199,12)" rx="2" ry="2" />
<text  x="227.93" y="1871.5" ></text>
</g>
<g >
<title>alloc_pages_vma (6 samples, 0.03%)</title><rect x="752.5" y="1941" width="0.4" height="15.0" fill="rgb(211,209,40)" rx="2" ry="2" />
<text  x="755.50" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (80 samples, 0.43%)</title><rect x="195.4" y="1733" width="5.0" height="15.0" fill="rgb(210,199,0)" rx="2" ry="2" />
<text  x="198.39" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1187.0" y="565" width="0.2" height="15.0" fill="rgb(209,88,0)" rx="2" ry="2" />
<text  x="1190.03" y="575.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (4 samples, 0.02%)</title><rect x="501.3" y="1877" width="0.3" height="15.0" fill="rgb(223,224,34)" rx="2" ry="2" />
<text  x="504.34" y="1887.5" ></text>
</g>
<g >
<title>_raw_spin_lock (3 samples, 0.02%)</title><rect x="490.0" y="1845" width="0.2" height="15.0" fill="rgb(226,206,13)" rx="2" ry="2" />
<text  x="492.98" y="1855.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64LocalCache&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&gt; &gt;::Deallocate (2 samples, 0.01%)</title><rect x="92.1" y="1957" width="0.1" height="15.0" fill="rgb(250,178,18)" rx="2" ry="2" />
<text  x="95.12" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (6 samples, 0.03%)</title><rect x="195.5" y="1685" width="0.3" height="15.0" fill="rgb(232,159,38)" rx="2" ry="2" />
<text  x="198.45" y="1695.5" ></text>
</g>
<g >
<title>Eigen::internal::general_matrix_vector_product&lt;long, float, Eigen::internal::const_blas_data_mapper&lt;float, long, 1&gt;, 1, false, float, Eigen::internal::const_blas_data_mapper&lt;float, long, 0&gt;, false, 0&gt;::run (323 samples, 1.73%)</title><rect x="382.9" y="1925" width="20.4" height="15.0" fill="rgb(205,148,7)" rx="2" ry="2" />
<text  x="385.92" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1186.4" y="901" width="0.2" height="15.0" fill="rgb(226,106,46)" rx="2" ry="2" />
<text  x="1189.40" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.0" y="1541" width="0.2" height="15.0" fill="rgb(220,119,2)" rx="2" ry="2" />
<text  x="1190.03" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1186.7" y="597" width="0.3" height="15.0" fill="rgb(220,142,6)" rx="2" ry="2" />
<text  x="1189.72" y="607.5" ></text>
</g>
<g >
<title>__pthread_getspecific (4 samples, 0.02%)</title><rect x="153.2" y="1605" width="0.3" height="15.0" fill="rgb(238,141,13)" rx="2" ry="2" />
<text  x="156.22" y="1615.5" ></text>
</g>
<g >
<title>handle_mm_fault (3 samples, 0.02%)</title><rect x="1189.0" y="1973" width="0.2" height="15.0" fill="rgb(213,138,46)" rx="2" ry="2" />
<text  x="1191.99" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1186.7" y="485" width="0.3" height="15.0" fill="rgb(245,111,19)" rx="2" ry="2" />
<text  x="1189.72" y="495.5" ></text>
</g>
<g >
<title>all (18,694 samples, 100%)</title><rect x="10.0" y="2085" width="1180.0" height="15.0" fill="rgb(216,135,15)" rx="2" ry="2" />
<text  x="13.00" y="2095.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="869.0" y="1973" width="0.1" height="15.0" fill="rgb(240,184,49)" rx="2" ry="2" />
<text  x="871.96" y="1983.5" ></text>
</g>
<g >
<title>rwsem_wake (2 samples, 0.01%)</title><rect x="1097.2" y="1925" width="0.1" height="15.0" fill="rgb(247,23,10)" rx="2" ry="2" />
<text  x="1100.21" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1186.2" y="1237" width="0.1" height="15.0" fill="rgb(226,10,27)" rx="2" ry="2" />
<text  x="1189.21" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="224.9" y="1925" width="0.4" height="15.0" fill="rgb(235,107,42)" rx="2" ry="2" />
<text  x="227.87" y="1935.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (3 samples, 0.02%)</title><rect x="83.8" y="1477" width="0.2" height="15.0" fill="rgb(212,61,15)" rx="2" ry="2" />
<text  x="86.79" y="1487.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::load (25 samples, 0.13%)</title><rect x="869.5" y="1989" width="1.5" height="15.0" fill="rgb(213,11,31)" rx="2" ry="2" />
<text  x="872.47" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1186.2" y="1397" width="0.1" height="15.0" fill="rgb(219,229,47)" rx="2" ry="2" />
<text  x="1189.21" y="1407.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (3 samples, 0.02%)</title><rect x="79.6" y="1205" width="0.2" height="15.0" fill="rgb(231,190,3)" rx="2" ry="2" />
<text  x="82.62" y="1215.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (2 samples, 0.01%)</title><rect x="501.8" y="1973" width="0.1" height="15.0" fill="rgb(232,162,40)" rx="2" ry="2" />
<text  x="504.78" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (2 samples, 0.01%)</title><rect x="223.5" y="1749" width="0.2" height="15.0" fill="rgb(238,95,4)" rx="2" ry="2" />
<text  x="226.54" y="1759.5" ></text>
</g>
<g >
<title>unmap_vmas (4 samples, 0.02%)</title><rect x="757.2" y="1925" width="0.2" height="15.0" fill="rgb(220,151,33)" rx="2" ry="2" />
<text  x="760.17" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="1186.8" y="53" width="0.2" height="15.0" fill="rgb(227,142,17)" rx="2" ry="2" />
<text  x="1189.78" y="63.5" ></text>
</g>
<g >
<title>tlb_flush_mmu_free (6 samples, 0.03%)</title><rect x="513.1" y="1909" width="0.4" height="15.0" fill="rgb(240,138,33)" rx="2" ry="2" />
<text  x="516.14" y="1919.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.02%)</title><rect x="158.0" y="1637" width="0.1" height="15.0" fill="rgb(239,196,52)" rx="2" ry="2" />
<text  x="160.96" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (75 samples, 0.40%)</title><rect x="188.6" y="1749" width="4.8" height="15.0" fill="rgb(239,215,37)" rx="2" ry="2" />
<text  x="191.63" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1186.4" y="1157" width="0.2" height="15.0" fill="rgb(254,8,0)" rx="2" ry="2" />
<text  x="1189.40" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="194.5" y="1541" width="0.1" height="15.0" fill="rgb(241,96,34)" rx="2" ry="2" />
<text  x="197.51" y="1551.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (109 samples, 0.58%)</title><rect x="976.8" y="2053" width="6.9" height="15.0" fill="rgb(238,219,24)" rx="2" ry="2" />
<text  x="979.77" y="2063.5" ></text>
</g>
<g >
<title>__pthread_getspecific (3 samples, 0.02%)</title><rect x="198.2" y="1557" width="0.2" height="15.0" fill="rgb(225,92,14)" rx="2" ry="2" />
<text  x="201.23" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (75 samples, 0.40%)</title><rect x="139.1" y="1637" width="4.7" height="15.0" fill="rgb(215,114,44)" rx="2" ry="2" />
<text  x="142.08" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.02%)</title><rect x="755.4" y="2021" width="0.3" height="15.0" fill="rgb(229,192,23)" rx="2" ry="2" />
<text  x="758.41" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="57.6" y="1413" width="0.1" height="15.0" fill="rgb(228,19,41)" rx="2" ry="2" />
<text  x="60.59" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (75 samples, 0.40%)</title><rect x="144.0" y="1685" width="4.7" height="15.0" fill="rgb(235,146,14)" rx="2" ry="2" />
<text  x="147.01" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (435 samples, 2.33%)</title><rect x="57.8" y="1557" width="27.5" height="15.0" fill="rgb(213,128,17)" rx="2" ry="2" />
<text  x="60.85" y="1567.5" >[..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1186.2" y="741" width="0.1" height="15.0" fill="rgb(236,112,53)" rx="2" ry="2" />
<text  x="1189.21" y="751.5" ></text>
</g>
<g >
<title>on_each_cpu_mask (3 samples, 0.02%)</title><rect x="513.0" y="1861" width="0.1" height="15.0" fill="rgb(237,105,46)" rx="2" ry="2" />
<text  x="515.95" y="1871.5" ></text>
</g>
<g >
<title>handle_mm_fault (12 samples, 0.06%)</title><rect x="752.4" y="1973" width="0.8" height="15.0" fill="rgb(250,167,6)" rx="2" ry="2" />
<text  x="755.44" y="1983.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::value (2 samples, 0.01%)</title><rect x="178.1" y="1701" width="0.1" height="15.0" fill="rgb(235,228,7)" rx="2" ry="2" />
<text  x="181.09" y="1711.5" ></text>
</g>
<g >
<title>fasttext::Vector::addRow (25 samples, 0.13%)</title><rect x="328.0" y="1973" width="1.6" height="15.0" fill="rgb(226,226,28)" rx="2" ry="2" />
<text  x="331.01" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.0" y="389" width="0.2" height="15.0" fill="rgb(238,204,22)" rx="2" ry="2" />
<text  x="1190.03" y="399.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (11 samples, 0.06%)</title><rect x="989.8" y="2053" width="0.7" height="15.0" fill="rgb(243,0,35)" rx="2" ry="2" />
<text  x="992.78" y="2063.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::create&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt; const&amp;&gt; (4 samples, 0.02%)</title><rect x="508.5" y="1973" width="0.2" height="15.0" fill="rgb(226,188,49)" rx="2" ry="2" />
<text  x="511.47" y="1983.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (45 samples, 0.24%)</title><rect x="161.1" y="1685" width="2.8" height="15.0" fill="rgb(214,57,48)" rx="2" ry="2" />
<text  x="164.05" y="1695.5" ></text>
</g>
<g >
<title>std::vector&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::allocator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;::vector (4 samples, 0.02%)</title><rect x="508.7" y="1861" width="0.3" height="15.0" fill="rgb(230,41,41)" rx="2" ry="2" />
<text  x="511.73" y="1871.5" ></text>
</g>
<g >
<title>Eigen::internal::gebp_kernel&lt;float, float, long, Eigen::internal::blas_data_mapper&lt;float, long, 0, 0, 1&gt;, 8, 4, false, false&gt;::operator (132 samples, 0.71%)</title><rect x="491.1" y="1909" width="8.3" height="15.0" fill="rgb(250,169,2)" rx="2" ry="2" />
<text  x="494.05" y="1919.5" ></text>
</g>
<g >
<title>__do_munmap (2 samples, 0.01%)</title><rect x="83.3" y="1349" width="0.2" height="15.0" fill="rgb(229,194,50)" rx="2" ry="2" />
<text  x="86.35" y="1359.5" ></text>
</g>
<g >
<title>arch_tlb_finish_mmu (15 samples, 0.08%)</title><rect x="512.6" y="1941" width="0.9" height="15.0" fill="rgb(234,173,22)" rx="2" ry="2" />
<text  x="515.58" y="1951.5" ></text>
</g>
<g >
<title>__interceptor_memcpy (11 samples, 0.06%)</title><rect x="1121.0" y="2037" width="0.7" height="15.0" fill="rgb(233,39,34)" rx="2" ry="2" />
<text  x="1124.01" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (90 samples, 0.48%)</title><rect x="200.4" y="1637" width="5.7" height="15.0" fill="rgb(222,227,42)" rx="2" ry="2" />
<text  x="203.44" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (346 samples, 1.85%)</title><rect x="166.7" y="1797" width="21.9" height="15.0" fill="rgb(242,58,10)" rx="2" ry="2" />
<text  x="169.73" y="1807.5" >s..</text>
</g>
<g >
<title>std::operator&gt;&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="335.0" y="1989" width="0.1" height="15.0" fill="rgb(219,189,14)" rx="2" ry="2" />
<text  x="337.95" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1186.7" y="309" width="0.3" height="15.0" fill="rgb(244,218,18)" rx="2" ry="2" />
<text  x="1189.72" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1186.2" y="181" width="0.1" height="15.0" fill="rgb(238,158,46)" rx="2" ry="2" />
<text  x="1189.21" y="191.5" ></text>
</g>
<g >
<title>unmap_region (2 samples, 0.01%)</title><rect x="91.6" y="1829" width="0.1" height="15.0" fill="rgb(227,171,39)" rx="2" ry="2" />
<text  x="94.62" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (27 samples, 0.14%)</title><rect x="800.3" y="2021" width="1.7" height="15.0" fill="rgb(213,91,51)" rx="2" ry="2" />
<text  x="803.29" y="2031.5" ></text>
</g>
<g >
<title>memcpy (14 samples, 0.07%)</title><rect x="642.8" y="1877" width="0.9" height="15.0" fill="rgb(209,194,3)" rx="2" ry="2" />
<text  x="645.80" y="1887.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (2 samples, 0.01%)</title><rect x="872.4" y="2021" width="0.2" height="15.0" fill="rgb(242,91,32)" rx="2" ry="2" />
<text  x="875.43" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1186.2" y="469" width="0.1" height="15.0" fill="rgb(252,186,50)" rx="2" ry="2" />
<text  x="1189.21" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="165.9" y="1285" width="0.4" height="15.0" fill="rgb(209,12,51)" rx="2" ry="2" />
<text  x="168.91" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="1186.8" y="133" width="0.2" height="15.0" fill="rgb(235,165,15)" rx="2" ry="2" />
<text  x="1189.78" y="143.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_rehash_aux (2 samples, 0.01%)</title><rect x="1105.3" y="2053" width="0.1" height="15.0" fill="rgb(242,186,20)" rx="2" ry="2" />
<text  x="1108.29" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1186.2" y="901" width="0.1" height="15.0" fill="rgb(231,52,53)" rx="2" ry="2" />
<text  x="1189.21" y="911.5" ></text>
</g>
<g >
<title>__asan::Allocator::Deallocate (4 samples, 0.02%)</title><rect x="174.4" y="1573" width="0.3" height="15.0" fill="rgb(222,43,29)" rx="2" ry="2" />
<text  x="177.43" y="1583.5" ></text>
</g>
<g >
<title>page_fault (83 samples, 0.44%)</title><rect x="21.4" y="2037" width="5.2" height="15.0" fill="rgb(242,60,10)" rx="2" ry="2" />
<text  x="24.36" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.02%)</title><rect x="43.3" y="2021" width="0.2" height="15.0" fill="rgb(216,221,12)" rx="2" ry="2" />
<text  x="46.27" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1186.4" y="965" width="0.2" height="15.0" fill="rgb(254,60,15)" rx="2" ry="2" />
<text  x="1189.40" y="975.5" ></text>
</g>
<g >
<title>__handle_mm_fault (3 samples, 0.02%)</title><rect x="1014.9" y="1973" width="0.2" height="15.0" fill="rgb(230,196,12)" rx="2" ry="2" />
<text  x="1017.90" y="1983.5" ></text>
</g>
<g >
<title>fasttext::ProductQuantizer::get_centroids (4 samples, 0.02%)</title><rect x="1098.5" y="2053" width="0.2" height="15.0" fill="rgb(228,18,49)" rx="2" ry="2" />
<text  x="1101.47" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1186.7" y="581" width="0.3" height="15.0" fill="rgb(210,96,18)" rx="2" ry="2" />
<text  x="1189.72" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1187.0" y="1861" width="0.2" height="15.0" fill="rgb(229,155,13)" rx="2" ry="2" />
<text  x="1190.03" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (88 samples, 0.47%)</title><rect x="138.5" y="1733" width="5.5" height="15.0" fill="rgb(245,192,13)" rx="2" ry="2" />
<text  x="141.45" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1186.7" y="341" width="0.3" height="15.0" fill="rgb(219,45,34)" rx="2" ry="2" />
<text  x="1189.72" y="351.5" ></text>
</g>
<g >
<title>handle_mm_fault (3 samples, 0.02%)</title><rect x="561.1" y="1829" width="0.1" height="15.0" fill="rgb(221,190,32)" rx="2" ry="2" />
<text  x="564.05" y="1839.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (22 samples, 0.12%)</title><rect x="755.8" y="1989" width="1.4" height="15.0" fill="rgb(225,226,11)" rx="2" ry="2" />
<text  x="758.78" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (365 samples, 1.95%)</title><rect x="57.8" y="1285" width="23.1" height="15.0" fill="rgb(239,129,29)" rx="2" ry="2" />
<text  x="60.85" y="1295.5" >[..</text>
</g>
<g >
<title>__sanitizer::mem_is_zero (5 samples, 0.03%)</title><rect x="478.2" y="1925" width="0.4" height="15.0" fill="rgb(233,220,24)" rx="2" ry="2" />
<text  x="481.24" y="1935.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (3 samples, 0.02%)</title><rect x="90.1" y="1829" width="0.2" height="15.0" fill="rgb(227,54,16)" rx="2" ry="2" />
<text  x="93.10" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (366 samples, 1.96%)</title><rect x="57.8" y="1301" width="23.1" height="15.0" fill="rgb(254,2,40)" rx="2" ry="2" />
<text  x="60.85" y="1311.5" >[..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3 samples, 0.02%)</title><rect x="164.5" y="1749" width="0.1" height="15.0" fill="rgb(244,146,22)" rx="2" ry="2" />
<text  x="167.46" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (81 samples, 0.43%)</title><rect x="167.1" y="1605" width="5.1" height="15.0" fill="rgb(207,142,35)" rx="2" ry="2" />
<text  x="170.11" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="194.3" y="1909" width="0.3" height="15.0" fill="rgb(209,37,18)" rx="2" ry="2" />
<text  x="197.32" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.02%)</title><rect x="1186.3" y="1541" width="0.3" height="15.0" fill="rgb(239,50,14)" rx="2" ry="2" />
<text  x="1189.34" y="1551.5" ></text>
</g>
<g >
<title>generic_exec_single (2 samples, 0.01%)</title><rect x="513.0" y="1813" width="0.1" height="15.0" fill="rgb(245,12,7)" rx="2" ry="2" />
<text  x="516.02" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="1186.3" y="1845" width="0.3" height="15.0" fill="rgb(218,40,36)" rx="2" ry="2" />
<text  x="1189.34" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1186.2" y="85" width="0.1" height="15.0" fill="rgb(226,50,23)" rx="2" ry="2" />
<text  x="1189.21" y="95.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (2 samples, 0.01%)</title><rect x="560.4" y="1877" width="0.1" height="15.0" fill="rgb(213,16,45)" rx="2" ry="2" />
<text  x="563.42" y="1887.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (9 samples, 0.05%)</title><rect x="809.6" y="1973" width="0.5" height="15.0" fill="rgb(241,139,14)" rx="2" ry="2" />
<text  x="812.56" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.0" y="1493" width="0.2" height="15.0" fill="rgb(215,200,16)" rx="2" ry="2" />
<text  x="1190.03" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.0" y="917" width="0.2" height="15.0" fill="rgb(242,63,3)" rx="2" ry="2" />
<text  x="1190.03" y="927.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (15 samples, 0.08%)</title><rect x="512.6" y="1957" width="0.9" height="15.0" fill="rgb(231,138,10)" rx="2" ry="2" />
<text  x="515.58" y="1967.5" ></text>
</g>
<g >
<title>__handle_mm_fault (19 samples, 0.10%)</title><rect x="681.9" y="1781" width="1.2" height="15.0" fill="rgb(213,74,20)" rx="2" ry="2" />
<text  x="684.93" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.0" y="773" width="0.2" height="15.0" fill="rgb(247,224,4)" rx="2" ry="2" />
<text  x="1190.03" y="783.5" ></text>
</g>
<g >
<title>ComputeClusterWeight (894 samples, 4.78%)</title><rect x="138.3" y="1989" width="56.4" height="15.0" fill="rgb(237,115,8)" rx="2" ry="2" />
<text  x="141.26" y="1999.5" >Compu..</text>
</g>
<g >
<title>mem_cgroup_try_charge (13 samples, 0.07%)</title><rect x="25.5" y="1941" width="0.8" height="15.0" fill="rgb(212,27,28)" rx="2" ry="2" />
<text  x="28.53" y="1951.5" ></text>
</g>
<g >
<title>generic_exec_single (3 samples, 0.02%)</title><rect x="57.2" y="1797" width="0.2" height="15.0" fill="rgb(238,64,16)" rx="2" ry="2" />
<text  x="60.22" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (316 samples, 1.69%)</title><rect x="57.9" y="581" width="20.0" height="15.0" fill="rgb(211,115,17)" rx="2" ry="2" />
<text  x="60.91" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (48 samples, 0.26%)</title><rect x="197.1" y="1573" width="3.0" height="15.0" fill="rgb(210,166,21)" rx="2" ry="2" />
<text  x="200.09" y="1583.5" ></text>
</g>
<g >
<title>Eigen::internal::general_matrix_vector_product&lt;long, float, Eigen::internal::const_blas_data_mapper&lt;float, long, 0&gt;, 0, false, float, Eigen::internal::const_blas_data_mapper&lt;float, long, 1&gt;, false, 0&gt;::run (3 samples, 0.02%)</title><rect x="194.9" y="1973" width="0.2" height="15.0" fill="rgb(210,8,50)" rx="2" ry="2" />
<text  x="197.95" y="1983.5" ></text>
</g>
<g >
<title>__vm_munmap (2 samples, 0.01%)</title><rect x="82.5" y="1317" width="0.1" height="15.0" fill="rgb(250,101,32)" rx="2" ry="2" />
<text  x="85.46" y="1327.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="57.6" y="1989" width="0.1" height="15.0" fill="rgb(248,176,34)" rx="2" ry="2" />
<text  x="60.59" y="1999.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::Recycle (2 samples, 0.01%)</title><rect x="746.6" y="2037" width="0.2" height="15.0" fill="rgb(217,215,22)" rx="2" ry="2" />
<text  x="749.63" y="2047.5" ></text>
</g>
<g >
<title>__interceptor_malloc (2 samples, 0.01%)</title><rect x="382.5" y="1925" width="0.2" height="15.0" fill="rgb(215,115,49)" rx="2" ry="2" />
<text  x="385.55" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="165.9" y="1269" width="0.4" height="15.0" fill="rgb(243,55,5)" rx="2" ry="2" />
<text  x="168.91" y="1279.5" ></text>
</g>
<g >
<title>strlen@plt (6 samples, 0.03%)</title><rect x="743.5" y="1893" width="0.4" height="15.0" fill="rgb(227,5,18)" rx="2" ry="2" />
<text  x="746.48" y="1903.5" ></text>
</g>
<g >
<title>nlohmann::detail::input_stream_adapter::get_character (3 samples, 0.02%)</title><rect x="131.2" y="1925" width="0.2" height="15.0" fill="rgb(209,197,23)" rx="2" ry="2" />
<text  x="134.19" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.1" y="101" width="0.1" height="15.0" fill="rgb(240,40,36)" rx="2" ry="2" />
<text  x="1190.10" y="111.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="194.5" y="1701" width="0.1" height="15.0" fill="rgb(232,154,48)" rx="2" ry="2" />
<text  x="197.51" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="224.9" y="1877" width="0.4" height="15.0" fill="rgb(249,92,28)" rx="2" ry="2" />
<text  x="227.87" y="1887.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (609 samples, 3.26%)</title><rect x="1147.6" y="2053" width="38.5" height="15.0" fill="rgb(228,94,12)" rx="2" ry="2" />
<text  x="1150.65" y="2063.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.0" y="213" width="0.2" height="15.0" fill="rgb(253,38,12)" rx="2" ry="2" />
<text  x="1190.03" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (9 samples, 0.05%)</title><rect x="138.5" y="1685" width="0.5" height="15.0" fill="rgb(218,205,49)" rx="2" ry="2" />
<text  x="141.45" y="1695.5" ></text>
</g>
<g >
<title>nlohmann::detail::json_sax_dom_parser&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::handle_value&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (2 samples, 0.01%)</title><rect x="128.9" y="1941" width="0.1" height="15.0" fill="rgb(245,36,5)" rx="2" ry="2" />
<text  x="131.92" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="194.4" y="1493" width="0.1" height="15.0" fill="rgb(216,203,8)" rx="2" ry="2" />
<text  x="197.38" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.0" y="357" width="0.2" height="15.0" fill="rgb(243,45,16)" rx="2" ry="2" />
<text  x="1190.03" y="367.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (3 samples, 0.02%)</title><rect x="152.1" y="1605" width="0.2" height="15.0" fill="rgb(233,137,45)" rx="2" ry="2" />
<text  x="155.09" y="1615.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.02%)</title><rect x="325.4" y="1941" width="0.2" height="15.0" fill="rgb(251,50,12)" rx="2" ry="2" />
<text  x="328.36" y="1951.5" ></text>
</g>
<g >
<title>__sanitizer::internal_munmap (2 samples, 0.01%)</title><rect x="82.5" y="1381" width="0.1" height="15.0" fill="rgb(233,124,0)" rx="2" ry="2" />
<text  x="85.46" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.0" y="1317" width="0.2" height="15.0" fill="rgb(240,106,52)" rx="2" ry="2" />
<text  x="1190.03" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1186.4" y="1429" width="0.2" height="15.0" fill="rgb(209,51,24)" rx="2" ry="2" />
<text  x="1189.40" y="1439.5" ></text>
</g>
<g >
<title>page_fault (32 samples, 0.17%)</title><rect x="681.1" y="1845" width="2.0" height="15.0" fill="rgb(235,202,39)" rx="2" ry="2" />
<text  x="684.11" y="1855.5" ></text>
</g>
<g >
<title>copy_page_to_iter (3 samples, 0.02%)</title><rect x="127.5" y="1877" width="0.2" height="15.0" fill="rgb(213,216,41)" rx="2" ry="2" />
<text  x="130.47" y="1887.5" ></text>
</g>
<g >
<title>__interceptor_memchr (5 samples, 0.03%)</title><rect x="1146.7" y="2037" width="0.3" height="15.0" fill="rgb(215,188,10)" rx="2" ry="2" />
<text  x="1149.70" y="2047.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::reserve (34 samples, 0.18%)</title><rect x="872.7" y="2037" width="2.2" height="15.0" fill="rgb(250,3,20)" rx="2" ry="2" />
<text  x="875.75" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1186.2" y="1365" width="0.1" height="15.0" fill="rgb(248,182,13)" rx="2" ry="2" />
<text  x="1189.21" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.1" y="133" width="0.1" height="15.0" fill="rgb(222,76,17)" rx="2" ry="2" />
<text  x="1190.10" y="143.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (268 samples, 1.43%)</title><rect x="138.4" y="1781" width="16.9" height="15.0" fill="rgb(232,126,53)" rx="2" ry="2" />
<text  x="141.39" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (89 samples, 0.48%)</title><rect x="166.7" y="1717" width="5.6" height="15.0" fill="rgb(252,162,1)" rx="2" ry="2" />
<text  x="169.73" y="1727.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (2 samples, 0.01%)</title><rect x="56.1" y="1925" width="0.2" height="15.0" fill="rgb(244,138,29)" rx="2" ry="2" />
<text  x="59.14" y="1935.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (237 samples, 1.27%)</title><rect x="57.9" y="37" width="15.0" height="15.0" fill="rgb(217,142,18)" rx="2" ry="2" />
<text  x="60.91" y="47.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (18 samples, 0.10%)</title><rect x="500.1" y="1861" width="1.2" height="15.0" fill="rgb(222,54,0)" rx="2" ry="2" />
<text  x="503.14" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1186.2" y="1061" width="0.1" height="15.0" fill="rgb(241,74,0)" rx="2" ry="2" />
<text  x="1189.21" y="1071.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="57.6" y="1541" width="0.1" height="15.0" fill="rgb(240,207,20)" rx="2" ry="2" />
<text  x="60.59" y="1551.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (3 samples, 0.02%)</title><rect x="1115.8" y="2053" width="0.2" height="15.0" fill="rgb(251,72,22)" rx="2" ry="2" />
<text  x="1118.83" y="2063.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (7 samples, 0.04%)</title><rect x="154.1" y="1605" width="0.4" height="15.0" fill="rgb(221,155,25)" rx="2" ry="2" />
<text  x="157.11" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="194.5" y="1349" width="0.1" height="15.0" fill="rgb(240,164,40)" rx="2" ry="2" />
<text  x="197.51" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="194.4" y="1653" width="0.1" height="15.0" fill="rgb(212,32,37)" rx="2" ry="2" />
<text  x="197.38" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="166.0" y="1141" width="0.2" height="15.0" fill="rgb(206,99,41)" rx="2" ry="2" />
<text  x="169.04" y="1151.5" ></text>
</g>
<g >
<title>__sanitizer::mem_is_zero (2 samples, 0.01%)</title><rect x="486.1" y="1941" width="0.2" height="15.0" fill="rgb(218,19,0)" rx="2" ry="2" />
<text  x="489.13" y="1951.5" ></text>
</g>
<g >
<title>native_send_call_func_single_ipi (2 samples, 0.01%)</title><rect x="513.0" y="1797" width="0.1" height="15.0" fill="rgb(219,210,20)" rx="2" ry="2" />
<text  x="516.02" y="1807.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::getSubwords (142 samples, 0.76%)</title><rect x="316.6" y="1957" width="9.0" height="15.0" fill="rgb(224,159,15)" rx="2" ry="2" />
<text  x="319.65" y="1967.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;, std::tuple&lt;&gt; &gt; (3 samples, 0.02%)</title><rect x="136.9" y="1925" width="0.2" height="15.0" fill="rgb(221,32,40)" rx="2" ry="2" />
<text  x="139.94" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="165.8" y="1685" width="0.5" height="15.0" fill="rgb(225,128,1)" rx="2" ry="2" />
<text  x="168.85" y="1695.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (2 samples, 0.01%)</title><rect x="89.8" y="1797" width="0.1" height="15.0" fill="rgb(251,19,41)" rx="2" ry="2" />
<text  x="92.79" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (5 samples, 0.03%)</title><rect x="165.2" y="1845" width="0.3" height="15.0" fill="rgb(229,209,39)" rx="2" ry="2" />
<text  x="168.22" y="1855.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.02%)</title><rect x="158.1" y="1637" width="0.3" height="15.0" fill="rgb(225,207,35)" rx="2" ry="2" />
<text  x="161.15" y="1647.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (69 samples, 0.37%)</title><rect x="31.3" y="2021" width="4.4" height="15.0" fill="rgb(243,97,13)" rx="2" ry="2" />
<text  x="34.34" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.0" y="1989" width="0.2" height="15.0" fill="rgb(217,18,20)" rx="2" ry="2" />
<text  x="1190.03" y="1999.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (3 samples, 0.02%)</title><rect x="80.1" y="1237" width="0.2" height="15.0" fill="rgb(229,49,51)" rx="2" ry="2" />
<text  x="83.13" y="1247.5" ></text>
</g>
<g >
<title>__sanitizer::internal_munmap (3 samples, 0.02%)</title><rect x="86.4" y="1621" width="0.2" height="15.0" fill="rgb(224,220,0)" rx="2" ry="2" />
<text  x="89.44" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (2 samples, 0.01%)</title><rect x="188.4" y="1733" width="0.1" height="15.0" fill="rgb(251,78,33)" rx="2" ry="2" />
<text  x="191.38" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1186.2" y="517" width="0.1" height="15.0" fill="rgb(213,156,10)" rx="2" ry="2" />
<text  x="1189.21" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (5 samples, 0.03%)</title><rect x="193.7" y="1829" width="0.3" height="15.0" fill="rgb(251,194,37)" rx="2" ry="2" />
<text  x="196.68" y="1839.5" ></text>
</g>
<g >
<title>std::operator&gt;&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (9 samples, 0.05%)</title><rect x="804.5" y="2005" width="0.5" height="15.0" fill="rgb(227,114,37)" rx="2" ry="2" />
<text  x="807.45" y="2015.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::basic_json (2 samples, 0.01%)</title><rect x="508.9" y="1749" width="0.1" height="15.0" fill="rgb(248,85,53)" rx="2" ry="2" />
<text  x="511.85" y="1759.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.03%)</title><rect x="171.2" y="1541" width="0.3" height="15.0" fill="rgb(237,150,13)" rx="2" ry="2" />
<text  x="174.21" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="194.5" y="1413" width="0.1" height="15.0" fill="rgb(242,164,54)" rx="2" ry="2" />
<text  x="197.51" y="1423.5" ></text>
</g>
<g >
<title>native_send_call_func_single_ipi (3 samples, 0.02%)</title><rect x="57.2" y="1781" width="0.2" height="15.0" fill="rgb(241,163,2)" rx="2" ry="2" />
<text  x="60.22" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.1" y="53" width="0.1" height="15.0" fill="rgb(211,181,5)" rx="2" ry="2" />
<text  x="1190.10" y="63.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1186.2" y="933" width="0.1" height="15.0" fill="rgb(206,2,13)" rx="2" ry="2" />
<text  x="1189.21" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1186.2" y="1301" width="0.1" height="15.0" fill="rgb(221,204,10)" rx="2" ry="2" />
<text  x="1189.21" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="225.0" y="1733" width="0.2" height="15.0" fill="rgb(253,98,20)" rx="2" ry="2" />
<text  x="227.99" y="1743.5" ></text>
</g>
<g >
<title>fasttext::entry::entry (3 samples, 0.02%)</title><rect x="870.8" y="1973" width="0.2" height="15.0" fill="rgb(205,19,8)" rx="2" ry="2" />
<text  x="873.79" y="1983.5" ></text>
</g>
<g >
<title>operator delete (6 samples, 0.03%)</title><rect x="192.0" y="1653" width="0.4" height="15.0" fill="rgb(219,102,20)" rx="2" ry="2" />
<text  x="194.98" y="1663.5" ></text>
</g>
<g >
<title>release_pages (5 samples, 0.03%)</title><rect x="513.2" y="1877" width="0.3" height="15.0" fill="rgb(250,207,5)" rx="2" ry="2" />
<text  x="516.21" y="1887.5" ></text>
</g>
<g >
<title>Eigen::DenseCoeffsBase&lt;Eigen::Transpose&lt;Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_sum_op&lt;float, float&gt;, Eigen::Product&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0&gt; const, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const&gt;, 0&gt;::coeff (3 samples, 0.02%)</title><rect x="43.3" y="2037" width="0.2" height="15.0" fill="rgb(249,79,13)" rx="2" ry="2" />
<text  x="46.27" y="2047.5" ></text>
</g>
<g >
<title>__asan::PoisonShadow (50 samples, 0.27%)</title><rect x="123.7" y="2037" width="3.2" height="15.0" fill="rgb(209,143,6)" rx="2" ry="2" />
<text  x="126.75" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1186.7" y="1077" width="0.3" height="15.0" fill="rgb(237,12,34)" rx="2" ry="2" />
<text  x="1189.72" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1186.7" y="1301" width="0.3" height="15.0" fill="rgb(243,163,11)" rx="2" ry="2" />
<text  x="1189.65" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="1186.3" y="1861" width="0.3" height="15.0" fill="rgb(237,4,32)" rx="2" ry="2" />
<text  x="1189.34" y="1871.5" ></text>
</g>
<g >
<title>fasttext::DenseMatrix::dotRow (4 samples, 0.02%)</title><rect x="757.6" y="2037" width="0.3" height="15.0" fill="rgb(254,130,44)" rx="2" ry="2" />
<text  x="760.62" y="2047.5" ></text>
</g>
<g >
<title>__x64_sys_madvise (21 samples, 0.11%)</title><rect x="512.4" y="1989" width="1.4" height="15.0" fill="rgb(250,66,44)" rx="2" ry="2" />
<text  x="515.45" y="1999.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (2 samples, 0.01%)</title><rect x="678.1" y="1845" width="0.2" height="15.0" fill="rgb(235,71,12)" rx="2" ry="2" />
<text  x="681.14" y="1855.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (3 samples, 0.02%)</title><rect x="163.9" y="1685" width="0.2" height="15.0" fill="rgb(238,70,30)" rx="2" ry="2" />
<text  x="166.89" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.0" y="1701" width="0.2" height="15.0" fill="rgb(252,104,54)" rx="2" ry="2" />
<text  x="1190.03" y="1711.5" ></text>
</g>
<g >
<title>__asan_memset (14 samples, 0.07%)</title><rect x="641.7" y="1877" width="0.9" height="15.0" fill="rgb(252,150,17)" rx="2" ry="2" />
<text  x="644.72" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1186.4" y="309" width="0.2" height="15.0" fill="rgb(237,93,9)" rx="2" ry="2" />
<text  x="1189.40" y="319.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (58 samples, 0.31%)</title><rect x="796.4" y="2005" width="3.6" height="15.0" fill="rgb(225,185,12)" rx="2" ry="2" />
<text  x="799.37" y="2015.5" ></text>
</g>
<g >
<title>__asan_memcpy (27 samples, 0.14%)</title><rect x="679.4" y="1845" width="1.7" height="15.0" fill="rgb(246,38,44)" rx="2" ry="2" />
<text  x="682.41" y="1855.5" ></text>
</g>
<g >
<title>handle_mm_fault (4 samples, 0.02%)</title><rect x="1098.1" y="1973" width="0.2" height="15.0" fill="rgb(246,63,53)" rx="2" ry="2" />
<text  x="1101.09" y="1983.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (18 samples, 0.10%)</title><rect x="678.3" y="1845" width="1.1" height="15.0" fill="rgb(247,109,38)" rx="2" ry="2" />
<text  x="681.27" y="1855.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (4 samples, 0.02%)</title><rect x="203.3" y="1589" width="0.3" height="15.0" fill="rgb(218,152,35)" rx="2" ry="2" />
<text  x="206.34" y="1599.5" ></text>
</g>
<g >
<title>unmap_single_vma (2 samples, 0.01%)</title><rect x="91.6" y="1797" width="0.1" height="15.0" fill="rgb(252,39,7)" rx="2" ry="2" />
<text  x="94.62" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1186.7" y="453" width="0.3" height="15.0" fill="rgb(226,194,36)" rx="2" ry="2" />
<text  x="1189.72" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (81 samples, 0.43%)</title><rect x="178.3" y="1637" width="5.1" height="15.0" fill="rgb(239,68,30)" rx="2" ry="2" />
<text  x="181.28" y="1647.5" ></text>
</g>
<g >
<title>operator new (32 samples, 0.17%)</title><rect x="593.2" y="1861" width="2.1" height="15.0" fill="rgb(221,136,28)" rx="2" ry="2" />
<text  x="596.25" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (320 samples, 1.71%)</title><rect x="57.9" y="821" width="20.2" height="15.0" fill="rgb(243,106,9)" rx="2" ry="2" />
<text  x="60.91" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1186.7" y="661" width="0.3" height="15.0" fill="rgb(249,84,51)" rx="2" ry="2" />
<text  x="1189.72" y="671.5" ></text>
</g>
<g >
<title>do_futex (4 samples, 0.02%)</title><rect x="137.9" y="1909" width="0.2" height="15.0" fill="rgb(219,23,3)" rx="2" ry="2" />
<text  x="140.88" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (2 samples, 0.01%)</title><rect x="224.4" y="1845" width="0.2" height="15.0" fill="rgb(207,76,30)" rx="2" ry="2" />
<text  x="227.42" y="1855.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_Alloc_node&gt; (2 samples, 0.01%)</title><rect x="508.9" y="1781" width="0.1" height="15.0" fill="rgb(247,68,8)" rx="2" ry="2" />
<text  x="511.85" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (408 samples, 2.18%)</title><rect x="57.8" y="1461" width="25.8" height="15.0" fill="rgb(247,132,17)" rx="2" ry="2" />
<text  x="60.85" y="1471.5" >[..</text>
</g>
<g >
<title>alloc_pages_vma (2 samples, 0.01%)</title><rect x="719.1" y="1797" width="0.1" height="15.0" fill="rgb(214,188,16)" rx="2" ry="2" />
<text  x="722.11" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1186.6" y="1829" width="0.4" height="15.0" fill="rgb(220,124,43)" rx="2" ry="2" />
<text  x="1189.59" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (423 samples, 2.26%)</title><rect x="57.8" y="1525" width="26.7" height="15.0" fill="rgb(235,191,40)" rx="2" ry="2" />
<text  x="60.85" y="1535.5" >[..</text>
</g>
<g >
<title>do_wp_page (18 samples, 0.10%)</title><rect x="56.3" y="1941" width="1.1" height="15.0" fill="rgb(248,85,37)" rx="2" ry="2" />
<text  x="59.27" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.0" y="1125" width="0.2" height="15.0" fill="rgb(221,177,54)" rx="2" ry="2" />
<text  x="1190.03" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1186.4" y="213" width="0.2" height="15.0" fill="rgb(233,39,17)" rx="2" ry="2" />
<text  x="1189.40" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (56 samples, 0.30%)</title><rect x="179.6" y="1605" width="3.5" height="15.0" fill="rgb(228,113,8)" rx="2" ry="2" />
<text  x="182.61" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="165.9" y="1237" width="0.1" height="15.0" fill="rgb(232,82,36)" rx="2" ry="2" />
<text  x="168.91" y="1247.5" ></text>
</g>
<g >
<title>__x64_sys_futex (4 samples, 0.02%)</title><rect x="137.9" y="1925" width="0.2" height="15.0" fill="rgb(221,134,12)" rx="2" ry="2" />
<text  x="140.88" y="1935.5" ></text>
</g>
<g >
<title>operator new[] (57 samples, 0.30%)</title><rect x="1182.5" y="2037" width="3.6" height="15.0" fill="rgb(253,213,9)" rx="2" ry="2" />
<text  x="1185.49" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1186.4" y="1093" width="0.2" height="15.0" fill="rgb(238,17,34)" rx="2" ry="2" />
<text  x="1189.40" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (2 samples, 0.01%)</title><rect x="223.5" y="1797" width="0.2" height="15.0" fill="rgb(243,180,17)" rx="2" ry="2" />
<text  x="226.54" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (60 samples, 0.32%)</title><rect x="155.3" y="1717" width="3.8" height="15.0" fill="rgb(249,214,17)" rx="2" ry="2" />
<text  x="158.31" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (85 samples, 0.45%)</title><rect x="211.9" y="1685" width="5.4" height="15.0" fill="rgb(235,39,32)" rx="2" ry="2" />
<text  x="214.93" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.02%)</title><rect x="1186.3" y="1493" width="0.3" height="15.0" fill="rgb(217,50,47)" rx="2" ry="2" />
<text  x="1189.34" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="165.9" y="1205" width="0.1" height="15.0" fill="rgb(229,65,50)" rx="2" ry="2" />
<text  x="168.91" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (78 samples, 0.42%)</title><rect x="201.0" y="1621" width="4.9" height="15.0" fill="rgb(236,29,48)" rx="2" ry="2" />
<text  x="204.01" y="1631.5" ></text>
</g>
<g >
<title>__handle_mm_fault (3 samples, 0.02%)</title><rect x="561.1" y="1813" width="0.1" height="15.0" fill="rgb(241,98,26)" rx="2" ry="2" />
<text  x="564.05" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.0" y="1973" width="0.2" height="15.0" fill="rgb(211,58,39)" rx="2" ry="2" />
<text  x="1190.03" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.02%)</title><rect x="871.4" y="2021" width="0.3" height="15.0" fill="rgb(227,164,8)" rx="2" ry="2" />
<text  x="874.42" y="2031.5" ></text>
</g>
<g >
<title>schedule (4 samples, 0.02%)</title><rect x="137.9" y="1861" width="0.2" height="15.0" fill="rgb(246,189,1)" rx="2" ry="2" />
<text  x="140.88" y="1871.5" ></text>
</g>
<g >
<title>__lsan::LsanMetadata::allocated (3 samples, 0.02%)</title><rect x="95.7" y="2021" width="0.1" height="15.0" fill="rgb(254,207,18)" rx="2" ry="2" />
<text  x="98.66" y="2031.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::do_tolower (2 samples, 0.01%)</title><rect x="183.2" y="1605" width="0.1" height="15.0" fill="rgb(208,89,21)" rx="2" ry="2" />
<text  x="186.21" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.05%)</title><rect x="165.8" y="1861" width="0.6" height="15.0" fill="rgb(208,207,26)" rx="2" ry="2" />
<text  x="168.85" y="1871.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (19 samples, 0.10%)</title><rect x="25.1" y="1957" width="1.2" height="15.0" fill="rgb(246,171,44)" rx="2" ry="2" />
<text  x="28.15" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="224.9" y="1893" width="0.4" height="15.0" fill="rgb(226,202,15)" rx="2" ry="2" />
<text  x="227.87" y="1903.5" ></text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (3 samples, 0.02%)</title><rect x="25.0" y="1957" width="0.1" height="15.0" fill="rgb(240,6,23)" rx="2" ry="2" />
<text  x="27.96" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1186.7" y="1173" width="0.3" height="15.0" fill="rgb(215,123,30)" rx="2" ry="2" />
<text  x="1189.72" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (91 samples, 0.49%)</title><rect x="217.8" y="1797" width="5.7" height="15.0" fill="rgb(252,228,39)" rx="2" ry="2" />
<text  x="220.80" y="1807.5" ></text>
</g>
<g >
<title>__asan::Allocator::GetAsanChunkByAddrFastLocked (12 samples, 0.06%)</title><rect x="93.8" y="2021" width="0.7" height="15.0" fill="rgb(226,30,28)" rx="2" ry="2" />
<text  x="96.76" y="2031.5" ></text>
</g>
<g >
<title>unmap_page_range (4 samples, 0.02%)</title><rect x="513.5" y="1941" width="0.3" height="15.0" fill="rgb(239,205,50)" rx="2" ry="2" />
<text  x="516.52" y="1951.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (4 samples, 0.02%)</title><rect x="95.0" y="2021" width="0.3" height="15.0" fill="rgb(211,64,54)" rx="2" ry="2" />
<text  x="98.03" y="2031.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (18 samples, 0.10%)</title><rect x="1096.3" y="2005" width="1.1" height="15.0" fill="rgb(208,206,24)" rx="2" ry="2" />
<text  x="1099.26" y="2015.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (9 samples, 0.05%)</title><rect x="802.1" y="2005" width="0.5" height="15.0" fill="rgb(249,10,18)" rx="2" ry="2" />
<text  x="805.05" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (2 samples, 0.01%)</title><rect x="188.4" y="1781" width="0.1" height="15.0" fill="rgb(244,221,26)" rx="2" ry="2" />
<text  x="191.38" y="1791.5" ></text>
</g>
<g >
<title>mem_cgroup_from_task (2 samples, 0.01%)</title><rect x="26.4" y="1989" width="0.1" height="15.0" fill="rgb(227,159,18)" rx="2" ry="2" />
<text  x="29.41" y="1999.5" ></text>
</g>
<g >
<title>on_each_cpu_mask (26 samples, 0.14%)</title><rect x="940.0" y="1861" width="1.6" height="15.0" fill="rgb(241,149,49)" rx="2" ry="2" />
<text  x="942.97" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="57.6" y="1477" width="0.1" height="15.0" fill="rgb(210,211,28)" rx="2" ry="2" />
<text  x="60.59" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1186.6" y="1621" width="0.4" height="15.0" fill="rgb(214,202,54)" rx="2" ry="2" />
<text  x="1189.59" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="225.0" y="1717" width="0.2" height="15.0" fill="rgb(218,151,52)" rx="2" ry="2" />
<text  x="227.99" y="1727.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.02%)</title><rect x="757.2" y="2021" width="0.2" height="15.0" fill="rgb(222,54,19)" rx="2" ry="2" />
<text  x="760.17" y="2031.5" ></text>
</g>
<g >
<title>__handle_mm_fault (4 samples, 0.02%)</title><rect x="507.2" y="1877" width="0.3" height="15.0" fill="rgb(245,111,50)" rx="2" ry="2" />
<text  x="510.21" y="1887.5" ></text>
</g>
<g >
<title>fasttext::NegativeSamplingLoss::NegativeSamplingLoss (10 samples, 0.05%)</title><rect x="506.8" y="1957" width="0.7" height="15.0" fill="rgb(231,107,34)" rx="2" ry="2" />
<text  x="509.83" y="1967.5" ></text>
</g>
<g >
<title>__lsan::DisabledInThisThread (14 samples, 0.07%)</title><rect x="998.8" y="2053" width="0.9" height="15.0" fill="rgb(231,61,42)" rx="2" ry="2" />
<text  x="1001.80" y="2063.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (6 samples, 0.03%)</title><rect x="161.5" y="1669" width="0.4" height="15.0" fill="rgb(224,160,21)" rx="2" ry="2" />
<text  x="164.49" y="1679.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (2 samples, 0.01%)</title><rect x="759.3" y="2005" width="0.1" height="15.0" fill="rgb(207,171,54)" rx="2" ry="2" />
<text  x="762.32" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (433 samples, 2.32%)</title><rect x="138.3" y="1925" width="27.4" height="15.0" fill="rgb(242,208,47)" rx="2" ry="2" />
<text  x="141.33" y="1935.5" >s..</text>
</g>
<g >
<title>__alloc_pages_nodemask (2 samples, 0.01%)</title><rect x="639.1" y="1765" width="0.2" height="15.0" fill="rgb(207,167,39)" rx="2" ry="2" />
<text  x="642.14" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (424 samples, 2.27%)</title><rect x="166.7" y="1813" width="26.8" height="15.0" fill="rgb(251,23,44)" rx="2" ry="2" />
<text  x="169.73" y="1823.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="194.4" y="1781" width="0.2" height="15.0" fill="rgb(229,127,49)" rx="2" ry="2" />
<text  x="197.38" y="1791.5" ></text>
</g>
<g >
<title>memcpy (2 samples, 0.01%)</title><rect x="1114.8" y="2037" width="0.1" height="15.0" fill="rgb(240,71,18)" rx="2" ry="2" />
<text  x="1117.82" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.0" y="965" width="0.2" height="15.0" fill="rgb(250,182,29)" rx="2" ry="2" />
<text  x="1190.03" y="975.5" ></text>
</g>
<g >
<title>__do_page_fault (19 samples, 0.10%)</title><rect x="666.8" y="1813" width="1.2" height="15.0" fill="rgb(247,156,17)" rx="2" ry="2" />
<text  x="669.85" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1186.2" y="1077" width="0.1" height="15.0" fill="rgb(220,1,44)" rx="2" ry="2" />
<text  x="1189.21" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="194.5" y="1621" width="0.1" height="15.0" fill="rgb(224,61,6)" rx="2" ry="2" />
<text  x="197.51" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (319 samples, 1.71%)</title><rect x="57.9" y="741" width="20.1" height="15.0" fill="rgb(237,142,38)" rx="2" ry="2" />
<text  x="60.91" y="751.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (2 samples, 0.01%)</title><rect x="485.7" y="1941" width="0.2" height="15.0" fill="rgb(205,117,42)" rx="2" ry="2" />
<text  x="488.75" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (545 samples, 2.92%)</title><rect x="57.8" y="1973" width="34.4" height="15.0" fill="rgb(251,177,0)" rx="2" ry="2" />
<text  x="60.85" y="1983.5" >[u..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (88 samples, 0.47%)</title><rect x="211.9" y="1765" width="5.5" height="15.0" fill="rgb(230,69,1)" rx="2" ry="2" />
<text  x="214.86" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1186.2" y="885" width="0.1" height="15.0" fill="rgb(213,194,53)" rx="2" ry="2" />
<text  x="1189.21" y="895.5" ></text>
</g>
<g >
<title>[unknown] (559 samples, 2.99%)</title><rect x="57.8" y="2005" width="35.3" height="15.0" fill="rgb(206,30,12)" rx="2" ry="2" />
<text  x="60.85" y="2015.5" >[u..</text>
</g>
<g >
<title>[libOpenNMTTokenizer.so] (2 samples, 0.01%)</title><rect x="638.1" y="1877" width="0.2" height="15.0" fill="rgb(250,205,22)" rx="2" ry="2" />
<text  x="641.13" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_Compiler (437 samples, 2.34%)</title><rect x="166.5" y="1925" width="27.6" height="15.0" fill="rgb(220,49,30)" rx="2" ry="2" />
<text  x="169.54" y="1935.5" >s..</text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (2 samples, 0.01%)</title><rect x="643.5" y="1781" width="0.1" height="15.0" fill="rgb(218,95,15)" rx="2" ry="2" />
<text  x="646.49" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1186.7" y="437" width="0.3" height="15.0" fill="rgb(246,74,15)" rx="2" ry="2" />
<text  x="1189.72" y="447.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (13 samples, 0.07%)</title><rect x="600.8" y="1845" width="0.8" height="15.0" fill="rgb(239,218,42)" rx="2" ry="2" />
<text  x="603.82" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (319 samples, 1.71%)</title><rect x="57.9" y="677" width="20.1" height="15.0" fill="rgb(228,213,52)" rx="2" ry="2" />
<text  x="60.91" y="687.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_Alloc_node&gt; (3 samples, 0.02%)</title><rect x="508.5" y="1957" width="0.2" height="15.0" fill="rgb(211,160,48)" rx="2" ry="2" />
<text  x="511.54" y="1967.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (8 samples, 0.04%)</title><rect x="147.9" y="1589" width="0.5" height="15.0" fill="rgb(224,185,20)" rx="2" ry="2" />
<text  x="150.86" y="1599.5" ></text>
</g>
<g >
<title>page_fault (3 samples, 0.02%)</title><rect x="1018.6" y="2037" width="0.2" height="15.0" fill="rgb(208,214,19)" rx="2" ry="2" />
<text  x="1021.56" y="2047.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (2 samples, 0.01%)</title><rect x="93.0" y="1941" width="0.1" height="15.0" fill="rgb(231,53,38)" rx="2" ry="2" />
<text  x="96.01" y="1951.5" ></text>
</g>
<g >
<title>__sanitizer::StackTrace::GetCurrentPc (3 samples, 0.02%)</title><rect x="210.0" y="1605" width="0.2" height="15.0" fill="rgb(241,164,26)" rx="2" ry="2" />
<text  x="213.03" y="1615.5" ></text>
</g>
<g >
<title>fasttext::Vector::norm (29 samples, 0.16%)</title><rect x="332.7" y="1989" width="1.9" height="15.0" fill="rgb(226,205,24)" rx="2" ry="2" />
<text  x="335.74" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="1186.3" y="1605" width="0.3" height="15.0" fill="rgb(243,44,12)" rx="2" ry="2" />
<text  x="1189.34" y="1615.5" ></text>
</g>
<g >
<title>__asan::AsanThread::stack_bottom (2 samples, 0.01%)</title><rect x="186.0" y="1621" width="0.1" height="15.0" fill="rgb(220,157,51)" rx="2" ry="2" />
<text  x="188.98" y="1631.5" ></text>
</g>
<g >
<title>__pthread_getspecific (2 samples, 0.01%)</title><rect x="191.4" y="1653" width="0.1" height="15.0" fill="rgb(243,112,4)" rx="2" ry="2" />
<text  x="194.41" y="1663.5" ></text>
</g>
<g >
<title>Eigen::internal::generic_product_impl&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt;, Eigen::DenseShape, Eigen::DenseShape, 8&gt;::scaleAndAddTo&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt; (132 samples, 0.71%)</title><rect x="491.1" y="1941" width="8.3" height="15.0" fill="rgb(247,72,46)" rx="2" ry="2" />
<text  x="494.05" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (88 samples, 0.47%)</title><rect x="211.9" y="1781" width="5.5" height="15.0" fill="rgb(241,123,50)" rx="2" ry="2" />
<text  x="214.86" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1186.4" y="437" width="0.2" height="15.0" fill="rgb(237,223,19)" rx="2" ry="2" />
<text  x="1189.40" y="447.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="57.6" y="1717" width="0.1" height="15.0" fill="rgb(248,156,2)" rx="2" ry="2" />
<text  x="60.59" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (75 samples, 0.40%)</title><rect x="188.6" y="1701" width="4.8" height="15.0" fill="rgb(244,10,26)" rx="2" ry="2" />
<text  x="191.63" y="1711.5" ></text>
</g>
<g >
<title>__interceptor_strcmp (100 samples, 0.53%)</title><rect x="35.7" y="2021" width="6.3" height="15.0" fill="rgb(253,116,48)" rx="2" ry="2" />
<text  x="38.69" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1186.6" y="1781" width="0.4" height="15.0" fill="rgb(252,69,48)" rx="2" ry="2" />
<text  x="1189.59" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="165.8" y="1541" width="0.5" height="15.0" fill="rgb(252,192,1)" rx="2" ry="2" />
<text  x="168.85" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (66 samples, 0.35%)</title><rect x="144.4" y="1621" width="4.2" height="15.0" fill="rgb(243,86,26)" rx="2" ry="2" />
<text  x="147.45" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1186.7" y="293" width="0.3" height="15.0" fill="rgb(244,147,36)" rx="2" ry="2" />
<text  x="1189.72" y="303.5" ></text>
</g>
<g >
<title>fasttext::Vector::addVector (58 samples, 0.31%)</title><rect x="1100.6" y="2053" width="3.6" height="15.0" fill="rgb(251,52,23)" rx="2" ry="2" />
<text  x="1103.56" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="194.5" y="1333" width="0.1" height="15.0" fill="rgb(240,126,24)" rx="2" ry="2" />
<text  x="197.51" y="1343.5" ></text>
</g>
<g >
<title>__handle_mm_fault (15 samples, 0.08%)</title><rect x="667.1" y="1781" width="0.9" height="15.0" fill="rgb(246,115,29)" rx="2" ry="2" />
<text  x="670.10" y="1791.5" ></text>
</g>
<g >
<title>__asan::AsanThread::stack_bottom (2 samples, 0.01%)</title><rect x="197.3" y="1557" width="0.2" height="15.0" fill="rgb(247,211,49)" rx="2" ry="2" />
<text  x="200.35" y="1567.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.01%)</title><rect x="205.1" y="1589" width="0.1" height="15.0" fill="rgb(243,1,45)" rx="2" ry="2" />
<text  x="208.11" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="57.6" y="1493" width="0.1" height="15.0" fill="rgb(225,18,14)" rx="2" ry="2" />
<text  x="60.59" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.0" y="1461" width="0.2" height="15.0" fill="rgb(237,123,36)" rx="2" ry="2" />
<text  x="1190.03" y="1471.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (8 samples, 0.04%)</title><rect x="667.1" y="1749" width="0.5" height="15.0" fill="rgb(218,3,42)" rx="2" ry="2" />
<text  x="670.10" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1186.4" y="789" width="0.2" height="15.0" fill="rgb(226,0,8)" rx="2" ry="2" />
<text  x="1189.40" y="799.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (2 samples, 0.01%)</title><rect x="682.8" y="1733" width="0.1" height="15.0" fill="rgb(208,87,12)" rx="2" ry="2" />
<text  x="685.82" y="1743.5" ></text>
</g>
<g >
<title>onmt::Tokenizer::finalize_tokens (67 samples, 0.36%)</title><rect x="557.2" y="1909" width="4.2" height="15.0" fill="rgb(214,222,1)" rx="2" ry="2" />
<text  x="560.20" y="1919.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="77.9" y="661" width="0.1" height="15.0" fill="rgb(211,5,24)" rx="2" ry="2" />
<text  x="80.92" y="671.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (2 samples, 0.01%)</title><rect x="553.8" y="1861" width="0.1" height="15.0" fill="rgb(208,186,20)" rx="2" ry="2" />
<text  x="556.79" y="1871.5" ></text>
</g>
<g >
<title>unmap_vmas (2 samples, 0.01%)</title><rect x="91.6" y="1813" width="0.1" height="15.0" fill="rgb(251,162,2)" rx="2" ry="2" />
<text  x="94.62" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (75 samples, 0.40%)</title><rect x="188.6" y="1733" width="4.8" height="15.0" fill="rgb(246,139,40)" rx="2" ry="2" />
<text  x="191.63" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1186.1" y="1925" width="0.1" height="15.0" fill="rgb(238,226,35)" rx="2" ry="2" />
<text  x="1189.09" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="57.6" y="2005" width="0.1" height="15.0" fill="rgb(253,101,18)" rx="2" ry="2" />
<text  x="60.59" y="2015.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="87.1" y="1621" width="0.1" height="15.0" fill="rgb(246,100,50)" rx="2" ry="2" />
<text  x="90.07" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1186.7" y="1413" width="0.3" height="15.0" fill="rgb(207,60,19)" rx="2" ry="2" />
<text  x="1189.65" y="1423.5" ></text>
</g>
<g >
<title>__handle_mm_fault (11 samples, 0.06%)</title><rect x="752.4" y="1957" width="0.7" height="15.0" fill="rgb(229,94,21)" rx="2" ry="2" />
<text  x="755.44" y="1967.5" ></text>
</g>
<g >
<title>__do_page_fault (4 samples, 0.02%)</title><rect x="1014.8" y="2005" width="0.3" height="15.0" fill="rgb(247,195,12)" rx="2" ry="2" />
<text  x="1017.84" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (3 samples, 0.02%)</title><rect x="224.2" y="1813" width="0.2" height="15.0" fill="rgb(238,151,0)" rx="2" ry="2" />
<text  x="227.24" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="225.1" y="1349" width="0.1" height="15.0" fill="rgb(206,118,10)" rx="2" ry="2" />
<text  x="228.06" y="1359.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotPut (4 samples, 0.02%)</title><rect x="1178.2" y="2037" width="0.2" height="15.0" fill="rgb(227,49,53)" rx="2" ry="2" />
<text  x="1181.20" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="225.0" y="1765" width="0.3" height="15.0" fill="rgb(208,115,17)" rx="2" ry="2" />
<text  x="227.99" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.0" y="869" width="0.2" height="15.0" fill="rgb(245,41,1)" rx="2" ry="2" />
<text  x="1190.03" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1186.2" y="677" width="0.1" height="15.0" fill="rgb(238,120,50)" rx="2" ry="2" />
<text  x="1189.21" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (446 samples, 2.39%)</title><rect x="195.4" y="1829" width="28.1" height="15.0" fill="rgb(215,26,8)" rx="2" ry="2" />
<text  x="198.39" y="1839.5" >s..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (82 samples, 0.44%)</title><rect x="167.0" y="1637" width="5.2" height="15.0" fill="rgb(221,182,43)" rx="2" ry="2" />
<text  x="170.05" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="165.8" y="1557" width="0.5" height="15.0" fill="rgb(224,141,49)" rx="2" ry="2" />
<text  x="168.85" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.0" y="1685" width="0.2" height="15.0" fill="rgb(248,39,18)" rx="2" ry="2" />
<text  x="1190.03" y="1695.5" ></text>
</g>
<g >
<title>__dynamic_cast (4 samples, 0.02%)</title><rect x="172.6" y="1605" width="0.3" height="15.0" fill="rgb(206,207,24)" rx="2" ry="2" />
<text  x="175.60" y="1615.5" ></text>
</g>
<g >
<title>on_each_cpu_mask (3 samples, 0.02%)</title><rect x="57.2" y="1845" width="0.2" height="15.0" fill="rgb(231,26,49)" rx="2" ry="2" />
<text  x="60.22" y="1855.5" ></text>
</g>
<g >
<title>__asan_memcpy (3 samples, 0.02%)</title><rect x="214.9" y="1637" width="0.2" height="15.0" fill="rgb(241,128,22)" rx="2" ry="2" />
<text  x="217.89" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="165.8" y="1413" width="0.5" height="15.0" fill="rgb(245,76,35)" rx="2" ry="2" />
<text  x="168.85" y="1423.5" ></text>
</g>
<g >
<title>clear_page_erms (4 samples, 0.02%)</title><rect x="667.1" y="1733" width="0.3" height="15.0" fill="rgb(214,215,24)" rx="2" ry="2" />
<text  x="670.10" y="1743.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (3 samples, 0.02%)</title><rect x="180.1" y="1589" width="0.2" height="15.0" fill="rgb(205,154,26)" rx="2" ry="2" />
<text  x="183.11" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="57.6" y="1925" width="0.1" height="15.0" fill="rgb(248,79,10)" rx="2" ry="2" />
<text  x="60.59" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (480 samples, 2.57%)</title><rect x="57.8" y="1717" width="30.3" height="15.0" fill="rgb(246,45,13)" rx="2" ry="2" />
<text  x="60.85" y="1727.5" >[u..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (77 samples, 0.41%)</title><rect x="159.5" y="1733" width="4.8" height="15.0" fill="rgb(239,228,18)" rx="2" ry="2" />
<text  x="162.47" y="1743.5" ></text>
</g>
<g >
<title>fasttext::ProductQuantizer::addcode (491 samples, 2.63%)</title><rect x="760.7" y="2037" width="31.0" height="15.0" fill="rgb(225,159,51)" rx="2" ry="2" />
<text  x="763.71" y="2047.5" >fa..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1186.2" y="1877" width="0.1" height="15.0" fill="rgb(241,150,4)" rx="2" ry="2" />
<text  x="1189.21" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1186.7" y="1381" width="0.3" height="15.0" fill="rgb(207,25,34)" rx="2" ry="2" />
<text  x="1189.65" y="1391.5" ></text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::get (3 samples, 0.02%)</title><rect x="129.0" y="1941" width="0.2" height="15.0" fill="rgb(211,168,4)" rx="2" ry="2" />
<text  x="132.05" y="1951.5" ></text>
</g>
<g >
<title>do_syscall_64 (3 samples, 0.02%)</title><rect x="86.4" y="1589" width="0.2" height="15.0" fill="rgb(251,131,24)" rx="2" ry="2" />
<text  x="89.44" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (2 samples, 0.01%)</title><rect x="223.5" y="1781" width="0.2" height="15.0" fill="rgb(218,142,3)" rx="2" ry="2" />
<text  x="226.54" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="1186.8" y="181" width="0.2" height="15.0" fill="rgb(214,227,35)" rx="2" ry="2" />
<text  x="1189.78" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="1186.1" y="2021" width="0.2" height="15.0" fill="rgb(236,25,11)" rx="2" ry="2" />
<text  x="1189.09" y="2031.5" ></text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::xsgetn (2 samples, 0.01%)</title><rect x="1105.5" y="2053" width="0.2" height="15.0" fill="rgb(239,27,34)" rx="2" ry="2" />
<text  x="1108.54" y="2063.5" ></text>
</g>
<g >
<title>memcmp@plt (5 samples, 0.03%)</title><rect x="1104.2" y="2053" width="0.3" height="15.0" fill="rgb(223,109,14)" rx="2" ry="2" />
<text  x="1107.22" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="194.4" y="1733" width="0.2" height="15.0" fill="rgb(223,115,16)" rx="2" ry="2" />
<text  x="197.38" y="1743.5" ></text>
</g>
<g >
<title>__asan::asan_memalign (2 samples, 0.01%)</title><rect x="1188.3" y="2037" width="0.1" height="15.0" fill="rgb(242,229,13)" rx="2" ry="2" />
<text  x="1191.30" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (465 samples, 2.49%)</title><rect x="57.8" y="1669" width="29.4" height="15.0" fill="rgb(216,41,14)" rx="2" ry="2" />
<text  x="60.85" y="1679.5" >[u..</text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::create&lt;std::vector&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::allocator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, nlohmann::detail::json_ref&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; const*, nlohmann::detail::json_ref&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; const*&gt; (2 samples, 0.01%)</title><rect x="507.5" y="1989" width="0.2" height="15.0" fill="rgb(224,20,45)" rx="2" ry="2" />
<text  x="510.53" y="1999.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (4 samples, 0.02%)</title><rect x="756.9" y="1861" width="0.3" height="15.0" fill="rgb(209,82,7)" rx="2" ry="2" />
<text  x="759.92" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (315 samples, 1.69%)</title><rect x="57.9" y="533" width="19.9" height="15.0" fill="rgb(209,173,7)" rx="2" ry="2" />
<text  x="60.91" y="543.5" ></text>
</g>
<g >
<title>tlb_flush_mmu_free (2 samples, 0.01%)</title><rect x="1096.6" y="1845" width="0.2" height="15.0" fill="rgb(227,127,6)" rx="2" ry="2" />
<text  x="1099.64" y="1855.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.02%)</title><rect x="142.1" y="1557" width="0.3" height="15.0" fill="rgb(225,5,31)" rx="2" ry="2" />
<text  x="145.11" y="1567.5" ></text>
</g>
<g >
<title>std::future&lt;boost::optional&lt;TDocument&gt; &gt;::get (15 samples, 0.08%)</title><rect x="137.2" y="1989" width="0.9" height="15.0" fill="rgb(235,149,47)" rx="2" ry="2" />
<text  x="140.19" y="1999.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;std::__detail::_State&lt;char&gt; const*, std::__detail::_State&lt;char&gt;*&gt; (3 samples, 0.02%)</title><rect x="159.2" y="1717" width="0.2" height="15.0" fill="rgb(220,120,19)" rx="2" ry="2" />
<text  x="162.22" y="1727.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::Unwind (4 samples, 0.02%)</title><rect x="198.6" y="1557" width="0.3" height="15.0" fill="rgb(232,109,46)" rx="2" ry="2" />
<text  x="201.61" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.08%)</title><rect x="1186.1" y="2053" width="0.9" height="15.0" fill="rgb(240,185,52)" rx="2" ry="2" />
<text  x="1189.09" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.02%)</title><rect x="800.0" y="2021" width="0.3" height="15.0" fill="rgb(209,114,11)" rx="2" ry="2" />
<text  x="803.03" y="2031.5" ></text>
</g>
<g >
<title>Eigen::PlainObjectBase&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; &gt;::resize (8 samples, 0.04%)</title><rect x="43.5" y="2037" width="0.5" height="15.0" fill="rgb(219,167,20)" rx="2" ry="2" />
<text  x="46.45" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (20 samples, 0.11%)</title><rect x="803.8" y="2021" width="1.2" height="15.0" fill="rgb(209,199,36)" rx="2" ry="2" />
<text  x="806.76" y="2031.5" ></text>
</g>
<g >
<title>tlb_flush_mmu_free (2 samples, 0.01%)</title><rect x="757.3" y="1877" width="0.1" height="15.0" fill="rgb(208,74,49)" rx="2" ry="2" />
<text  x="760.30" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (90 samples, 0.48%)</title><rect x="172.3" y="1701" width="5.7" height="15.0" fill="rgb(211,100,51)" rx="2" ry="2" />
<text  x="175.35" y="1711.5" ></text>
</g>
<g >
<title>do_page_fault (6 samples, 0.03%)</title><rect x="1098.0" y="2005" width="0.3" height="15.0" fill="rgb(243,191,4)" rx="2" ry="2" />
<text  x="1100.97" y="2015.5" ></text>
</g>
<g >
<title>__handle_mm_fault (96 samples, 0.51%)</title><rect x="935.7" y="1973" width="6.1" height="15.0" fill="rgb(246,135,2)" rx="2" ry="2" />
<text  x="938.75" y="1983.5" ></text>
</g>
<g >
<title>fasttext::FastText::getWordVector (178 samples, 0.95%)</title><rect x="470.0" y="1957" width="11.3" height="15.0" fill="rgb(211,9,28)" rx="2" ry="2" />
<text  x="473.03" y="1967.5" ></text>
</g>
<g >
<title>onmt::Tokenizer::tokenize (2,890 samples, 15.46%)</title><rect x="561.4" y="1909" width="182.5" height="15.0" fill="rgb(233,87,45)" rx="2" ry="2" />
<text  x="564.43" y="1919.5" >onmt::Tokenizer::tokenize</text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::scan (4 samples, 0.02%)</title><rect x="129.2" y="1941" width="0.3" height="15.0" fill="rgb(246,9,9)" rx="2" ry="2" />
<text  x="132.24" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="194.5" y="1317" width="0.1" height="15.0" fill="rgb(235,195,18)" rx="2" ry="2" />
<text  x="197.51" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1186.2" y="1253" width="0.1" height="15.0" fill="rgb(240,118,17)" rx="2" ry="2" />
<text  x="1189.21" y="1263.5" ></text>
</g>
<g >
<title>__sanitizer::mem_is_zero (2 samples, 0.01%)</title><rect x="1118.6" y="2037" width="0.1" height="15.0" fill="rgb(235,113,51)" rx="2" ry="2" />
<text  x="1121.61" y="2047.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (5 samples, 0.03%)</title><rect x="490.6" y="1829" width="0.3" height="15.0" fill="rgb(233,189,29)" rx="2" ry="2" />
<text  x="493.61" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.05%)</title><rect x="165.8" y="1797" width="0.6" height="15.0" fill="rgb(252,58,33)" rx="2" ry="2" />
<text  x="168.85" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="1186.1" y="2005" width="0.2" height="15.0" fill="rgb(231,44,16)" rx="2" ry="2" />
<text  x="1189.09" y="2015.5" ></text>
</g>
<g >
<title>__sanitizer::QuarantineCache&lt;__asan::QuarantineCallback&gt;::Enqueue (102 samples, 0.55%)</title><rect x="746.8" y="2037" width="6.4" height="15.0" fill="rgb(240,197,36)" rx="2" ry="2" />
<text  x="749.76" y="2047.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.01%)</title><rect x="501.8" y="1941" width="0.1" height="15.0" fill="rgb(231,101,1)" rx="2" ry="2" />
<text  x="504.78" y="1951.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (6 samples, 0.03%)</title><rect x="216.2" y="1637" width="0.3" height="15.0" fill="rgb(208,24,28)" rx="2" ry="2" />
<text  x="219.16" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (401 samples, 2.15%)</title><rect x="57.8" y="1429" width="25.4" height="15.0" fill="rgb(246,99,39)" rx="2" ry="2" />
<text  x="60.85" y="1439.5" >[..</text>
</g>
<g >
<title>nlohmann::operator&gt;&gt; (131 samples, 0.70%)</title><rect x="128.9" y="1989" width="8.2" height="15.0" fill="rgb(212,179,9)" rx="2" ry="2" />
<text  x="131.86" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1186.2" y="645" width="0.1" height="15.0" fill="rgb(243,97,7)" rx="2" ry="2" />
<text  x="1189.21" y="655.5" ></text>
</g>
<g >
<title>get_page_from_freelist (4 samples, 0.02%)</title><rect x="667.4" y="1733" width="0.2" height="15.0" fill="rgb(225,78,34)" rx="2" ry="2" />
<text  x="670.35" y="1743.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (4 samples, 0.02%)</title><rect x="93.1" y="2005" width="0.3" height="15.0" fill="rgb(225,99,30)" rx="2" ry="2" />
<text  x="96.13" y="2015.5" ></text>
</g>
<g >
<title>alloc_pages_vma (2 samples, 0.01%)</title><rect x="56.1" y="1941" width="0.2" height="15.0" fill="rgb(225,200,24)" rx="2" ry="2" />
<text  x="59.14" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="57.6" y="1797" width="0.1" height="15.0" fill="rgb(239,104,36)" rx="2" ry="2" />
<text  x="60.59" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (395 samples, 2.11%)</title><rect x="57.8" y="1413" width="25.0" height="15.0" fill="rgb(212,8,46)" rx="2" ry="2" />
<text  x="60.85" y="1423.5" >[..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1186.2" y="405" width="0.1" height="15.0" fill="rgb(221,153,48)" rx="2" ry="2" />
<text  x="1189.21" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (95 samples, 0.51%)</title><rect x="149.0" y="1717" width="6.0" height="15.0" fill="rgb(233,191,44)" rx="2" ry="2" />
<text  x="151.99" y="1727.5" ></text>
</g>
<g >
<title>__sanitizer::internal_munmap (2 samples, 0.01%)</title><rect x="93.0" y="1989" width="0.1" height="15.0" fill="rgb(251,83,15)" rx="2" ry="2" />
<text  x="96.01" y="1999.5" ></text>
</g>
<g >
<title>futex_wake (7 samples, 0.04%)</title><rect x="27.4" y="1925" width="0.4" height="15.0" fill="rgb(215,106,23)" rx="2" ry="2" />
<text  x="30.36" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (11 samples, 0.06%)</title><rect x="223.9" y="1861" width="0.7" height="15.0" fill="rgb(244,212,43)" rx="2" ry="2" />
<text  x="226.86" y="1871.5" ></text>
</g>
<g >
<title>__strxfrm_l (38 samples, 0.20%)</title><rect x="1168.3" y="2021" width="2.4" height="15.0" fill="rgb(206,216,21)" rx="2" ry="2" />
<text  x="1171.35" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1186.4" y="725" width="0.2" height="15.0" fill="rgb(218,13,21)" rx="2" ry="2" />
<text  x="1189.40" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.0" y="341" width="0.2" height="15.0" fill="rgb(238,37,17)" rx="2" ry="2" />
<text  x="1190.03" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1186.4" y="1077" width="0.2" height="15.0" fill="rgb(217,38,50)" rx="2" ry="2" />
<text  x="1189.40" y="1087.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (3 samples, 0.02%)</title><rect x="158.6" y="1637" width="0.2" height="15.0" fill="rgb(220,117,5)" rx="2" ry="2" />
<text  x="161.59" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1186.2" y="373" width="0.1" height="15.0" fill="rgb(252,165,36)" rx="2" ry="2" />
<text  x="1189.21" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="1186.3" y="1477" width="0.3" height="15.0" fill="rgb(242,204,40)" rx="2" ry="2" />
<text  x="1189.34" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1186.2" y="1589" width="0.1" height="15.0" fill="rgb(242,51,23)" rx="2" ry="2" />
<text  x="1189.21" y="1599.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (3 samples, 0.02%)</title><rect x="140.7" y="1557" width="0.2" height="15.0" fill="rgb(254,227,1)" rx="2" ry="2" />
<text  x="143.73" y="1567.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64LocalCache&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&gt; &gt;::Refill (2 samples, 0.01%)</title><rect x="1018.8" y="2053" width="0.1" height="15.0" fill="rgb(250,93,31)" rx="2" ry="2" />
<text  x="1021.75" y="2063.5" ></text>
</g>
<g >
<title>release_pages (2 samples, 0.01%)</title><rect x="757.3" y="1845" width="0.1" height="15.0" fill="rgb(250,199,39)" rx="2" ry="2" />
<text  x="760.30" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1186.4" y="485" width="0.2" height="15.0" fill="rgb(247,10,5)" rx="2" ry="2" />
<text  x="1189.40" y="495.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (2 samples, 0.01%)</title><rect x="1105.5" y="1909" width="0.2" height="15.0" fill="rgb(206,23,28)" rx="2" ry="2" />
<text  x="1108.54" y="1919.5" ></text>
</g>
<g >
<title>TFastTextEmbedder::GetSentenceEmbedding (4 samples, 0.02%)</title><rect x="44.2" y="2037" width="0.3" height="15.0" fill="rgb(231,221,45)" rx="2" ry="2" />
<text  x="47.21" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (334 samples, 1.79%)</title><rect x="57.9" y="1141" width="21.1" height="15.0" fill="rgb(217,162,7)" rx="2" ry="2" />
<text  x="60.91" y="1151.5" ></text>
</g>
<g >
<title>__asan::AsanChunk::UsedSize (56 samples, 0.30%)</title><rect x="116.4" y="2037" width="3.5" height="15.0" fill="rgb(238,114,19)" rx="2" ry="2" />
<text  x="119.36" y="2047.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="154.6" y="1621" width="0.1" height="15.0" fill="rgb(247,1,22)" rx="2" ry="2" />
<text  x="157.61" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (92 samples, 0.49%)</title><rect x="200.4" y="1669" width="5.8" height="15.0" fill="rgb(246,141,31)" rx="2" ry="2" />
<text  x="203.44" y="1679.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (15 samples, 0.08%)</title><rect x="320.9" y="1941" width="0.9" height="15.0" fill="rgb(239,140,5)" rx="2" ry="2" />
<text  x="323.88" y="1951.5" ></text>
</g>
<g >
<title>__sanitizer::internal_memmove (10 samples, 0.05%)</title><rect x="1188.5" y="2037" width="0.7" height="15.0" fill="rgb(213,54,11)" rx="2" ry="2" />
<text  x="1191.55" y="2047.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;,  (2 samples, 0.01%)</title><rect x="195.2" y="1957" width="0.1" height="15.0" fill="rgb(240,6,13)" rx="2" ry="2" />
<text  x="198.20" y="1967.5" ></text>
</g>
<g >
<title>__vm_munmap (2 samples, 0.01%)</title><rect x="91.6" y="1861" width="0.1" height="15.0" fill="rgb(220,215,24)" rx="2" ry="2" />
<text  x="94.62" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="225.1" y="1477" width="0.1" height="15.0" fill="rgb(228,148,11)" rx="2" ry="2" />
<text  x="228.06" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="1186.3" y="1909" width="0.3" height="15.0" fill="rgb(235,229,54)" rx="2" ry="2" />
<text  x="1189.34" y="1919.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (3 samples, 0.02%)</title><rect x="87.3" y="1685" width="0.2" height="15.0" fill="rgb(233,131,8)" rx="2" ry="2" />
<text  x="90.32" y="1695.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="91.6" y="1909" width="0.1" height="15.0" fill="rgb(225,90,14)" rx="2" ry="2" />
<text  x="94.62" y="1919.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (81 samples, 0.43%)</title><rect x="1156.0" y="2037" width="5.2" height="15.0" fill="rgb(221,149,6)" rx="2" ry="2" />
<text  x="1159.04" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (2 samples, 0.01%)</title><rect x="165.3" y="1813" width="0.2" height="15.0" fill="rgb(208,47,6)" rx="2" ry="2" />
<text  x="168.34" y="1823.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.02%)</title><rect x="725.4" y="1893" width="0.2" height="15.0" fill="rgb(239,6,24)" rx="2" ry="2" />
<text  x="728.42" y="1903.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find (5 samples, 0.03%)</title><rect x="743.9" y="1909" width="0.3" height="15.0" fill="rgb(217,184,6)" rx="2" ry="2" />
<text  x="746.92" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (467 samples, 2.50%)</title><rect x="57.8" y="1685" width="29.5" height="15.0" fill="rgb(245,185,21)" rx="2" ry="2" />
<text  x="60.85" y="1695.5" >[u..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3 samples, 0.02%)</title><rect x="193.7" y="1797" width="0.2" height="15.0" fill="rgb(251,48,8)" rx="2" ry="2" />
<text  x="196.68" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (2 samples, 0.01%)</title><rect x="223.5" y="1813" width="0.2" height="15.0" fill="rgb(235,100,43)" rx="2" ry="2" />
<text  x="226.54" y="1823.5" ></text>
</g>
<g >
<title>arch_tlb_finish_mmu (2 samples, 0.01%)</title><rect x="82.0" y="1237" width="0.1" height="15.0" fill="rgb(228,79,2)" rx="2" ry="2" />
<text  x="85.02" y="1247.5" ></text>
</g>
<g >
<title>__do_page_fault (29 samples, 0.16%)</title><rect x="489.2" y="1893" width="1.9" height="15.0" fill="rgb(249,114,44)" rx="2" ry="2" />
<text  x="492.22" y="1903.5" ></text>
</g>
<g >
<title>__schedule (4 samples, 0.02%)</title><rect x="137.9" y="1845" width="0.2" height="15.0" fill="rgb(221,187,36)" rx="2" ry="2" />
<text  x="140.88" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="194.4" y="1669" width="0.1" height="15.0" fill="rgb(235,212,24)" rx="2" ry="2" />
<text  x="197.38" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (537 samples, 2.87%)</title><rect x="57.8" y="1941" width="33.9" height="15.0" fill="rgb(250,56,31)" rx="2" ry="2" />
<text  x="60.85" y="1951.5" >[u..</text>
</g>
<g >
<title>__asan::GetCurrentThread (8 samples, 0.04%)</title><rect x="1155.2" y="2037" width="0.5" height="15.0" fill="rgb(250,55,8)" rx="2" ry="2" />
<text  x="1158.16" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (464 samples, 2.48%)</title><rect x="195.4" y="1909" width="29.3" height="15.0" fill="rgb(249,174,34)" rx="2" ry="2" />
<text  x="198.39" y="1919.5" >st..</text>
</g>
<g >
<title>fasttext::Dictionary::getSubwords (135 samples, 0.72%)</title><rect x="472.3" y="1941" width="8.5" height="15.0" fill="rgb(215,131,34)" rx="2" ry="2" />
<text  x="475.30" y="1951.5" ></text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.02%)</title><rect x="213.4" y="1653" width="0.2" height="15.0" fill="rgb(222,198,6)" rx="2" ry="2" />
<text  x="216.38" y="1663.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (17 samples, 0.09%)</title><rect x="1096.3" y="1989" width="1.0" height="15.0" fill="rgb(253,126,49)" rx="2" ry="2" />
<text  x="1099.26" y="1999.5" ></text>
</g>
<g >
<title>do_syscall_64 (21 samples, 0.11%)</title><rect x="512.4" y="2005" width="1.4" height="15.0" fill="rgb(218,208,25)" rx="2" ry="2" />
<text  x="515.45" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (83 samples, 0.44%)</title><rect x="167.0" y="1653" width="5.3" height="15.0" fill="rgb(252,69,30)" rx="2" ry="2" />
<text  x="170.05" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1186.7" y="1541" width="0.3" height="15.0" fill="rgb(208,13,54)" rx="2" ry="2" />
<text  x="1189.65" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1186.6" y="1669" width="0.4" height="15.0" fill="rgb(211,68,41)" rx="2" ry="2" />
<text  x="1189.59" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.0" y="1797" width="0.2" height="15.0" fill="rgb(244,22,5)" rx="2" ry="2" />
<text  x="1190.03" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (2 samples, 0.01%)</title><rect x="165.3" y="1781" width="0.2" height="15.0" fill="rgb(232,221,35)" rx="2" ry="2" />
<text  x="168.34" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Scanner&lt;char&gt;::_M_eat_escape_ecma (2 samples, 0.01%)</title><rect x="223.5" y="1717" width="0.2" height="15.0" fill="rgb(229,51,31)" rx="2" ry="2" />
<text  x="226.54" y="1727.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;std::__detail::_State&lt;char&gt; const*, std::__detail::_State&lt;char&gt;*&gt; (3 samples, 0.02%)</title><rect x="195.6" y="1653" width="0.2" height="15.0" fill="rgb(233,134,22)" rx="2" ry="2" />
<text  x="198.64" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (324 samples, 1.73%)</title><rect x="57.9" y="981" width="20.5" height="15.0" fill="rgb(226,33,22)" rx="2" ry="2" />
<text  x="60.91" y="991.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.03%)</title><rect x="176.5" y="1573" width="0.3" height="15.0" fill="rgb(254,81,46)" rx="2" ry="2" />
<text  x="179.52" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1187.0" y="277" width="0.2" height="15.0" fill="rgb(205,31,30)" rx="2" ry="2" />
<text  x="1190.03" y="287.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (5 samples, 0.03%)</title><rect x="152.3" y="1605" width="0.4" height="15.0" fill="rgb(221,143,10)" rx="2" ry="2" />
<text  x="155.34" y="1615.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (3 samples, 0.02%)</title><rect x="187.9" y="1653" width="0.2" height="15.0" fill="rgb(230,151,13)" rx="2" ry="2" />
<text  x="190.88" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1186.2" y="1477" width="0.1" height="15.0" fill="rgb(239,65,47)" rx="2" ry="2" />
<text  x="1189.21" y="1487.5" ></text>
</g>
<g >
<title>perf_event_mmap (3 samples, 0.02%)</title><rect x="756.6" y="1909" width="0.2" height="15.0" fill="rgb(232,193,17)" rx="2" ry="2" />
<text  x="759.61" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.0" y="1397" width="0.2" height="15.0" fill="rgb(205,95,23)" rx="2" ry="2" />
<text  x="1190.03" y="1407.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.01%)</title><rect x="553.8" y="1829" width="0.1" height="15.0" fill="rgb(251,191,38)" rx="2" ry="2" />
<text  x="556.79" y="1839.5" ></text>
</g>
<g >
<title>__dynamic_cast (4 samples, 0.02%)</title><rect x="219.1" y="1685" width="0.3" height="15.0" fill="rgb(231,15,45)" rx="2" ry="2" />
<text  x="222.12" y="1695.5" ></text>
</g>
<g >
<title>memcpy (6 samples, 0.03%)</title><rect x="583.3" y="1877" width="0.4" height="15.0" fill="rgb(218,222,18)" rx="2" ry="2" />
<text  x="586.27" y="1887.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (5 samples, 0.03%)</title><rect x="752.5" y="1925" width="0.3" height="15.0" fill="rgb(207,182,11)" rx="2" ry="2" />
<text  x="755.50" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1186.4" y="69" width="0.2" height="15.0" fill="rgb(205,223,13)" rx="2" ry="2" />
<text  x="1189.40" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.0" y="1749" width="0.2" height="15.0" fill="rgb(221,40,21)" rx="2" ry="2" />
<text  x="1190.03" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (77 samples, 0.41%)</title><rect x="159.5" y="1765" width="4.8" height="15.0" fill="rgb(234,193,29)" rx="2" ry="2" />
<text  x="162.47" y="1775.5" ></text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::get (3 samples, 0.02%)</title><rect x="129.3" y="1925" width="0.2" height="15.0" fill="rgb(222,49,50)" rx="2" ry="2" />
<text  x="132.30" y="1935.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (21 samples, 0.11%)</title><rect x="639.5" y="1877" width="1.3" height="15.0" fill="rgb(230,124,8)" rx="2" ry="2" />
<text  x="642.51" y="1887.5" ></text>
</g>
<g >
<title>std::__move_merge&lt;TDocument*, __gnu_cxx::__normal_iterator&lt;TDocument*, std::vector&lt;TDocument, std::allocator&lt;TDocument&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;main::$_1&gt; &gt; (3 samples, 0.02%)</title><rect x="509.4" y="1973" width="0.2" height="15.0" fill="rgb(221,118,22)" rx="2" ry="2" />
<text  x="512.42" y="1983.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (3 samples, 0.02%)</title><rect x="85.3" y="1557" width="0.2" height="15.0" fill="rgb(253,58,39)" rx="2" ry="2" />
<text  x="88.30" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_expression_term&lt;false, false&gt; (2 samples, 0.01%)</title><rect x="183.4" y="1637" width="0.1" height="15.0" fill="rgb(228,160,36)" rx="2" ry="2" />
<text  x="186.40" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1186.4" y="693" width="0.2" height="15.0" fill="rgb(250,192,38)" rx="2" ry="2" />
<text  x="1189.40" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1186.2" y="693" width="0.1" height="15.0" fill="rgb(241,88,19)" rx="2" ry="2" />
<text  x="1189.21" y="703.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::append (4 samples, 0.02%)</title><rect x="564.5" y="1893" width="0.2" height="15.0" fill="rgb(209,202,13)" rx="2" ry="2" />
<text  x="567.46" y="1903.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (2 samples, 0.01%)</title><rect x="96.0" y="2021" width="0.1" height="15.0" fill="rgb(240,218,19)" rx="2" ry="2" />
<text  x="98.97" y="2031.5" ></text>
</g>
<g >
<title>__pthread_getspecific (7 samples, 0.04%)</title><rect x="170.4" y="1541" width="0.4" height="15.0" fill="rgb(235,89,3)" rx="2" ry="2" />
<text  x="173.39" y="1551.5" ></text>
</g>
<g >
<title>generic_exec_single (24 samples, 0.13%)</title><rect x="940.1" y="1813" width="1.5" height="15.0" fill="rgb(231,160,11)" rx="2" ry="2" />
<text  x="943.10" y="1823.5" ></text>
</g>
<g >
<title>do_page_fault (3 samples, 0.02%)</title><rect x="94.3" y="1989" width="0.2" height="15.0" fill="rgb(247,148,22)" rx="2" ry="2" />
<text  x="97.33" y="1999.5" ></text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.02%)</title><rect x="184.1" y="1653" width="0.2" height="15.0" fill="rgb(209,36,9)" rx="2" ry="2" />
<text  x="187.09" y="1663.5" ></text>
</g>
<g >
<title>handle_mm_fault (15 samples, 0.08%)</title><rect x="667.1" y="1797" width="0.9" height="15.0" fill="rgb(232,100,32)" rx="2" ry="2" />
<text  x="670.10" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1186.4" y="405" width="0.2" height="15.0" fill="rgb(211,77,51)" rx="2" ry="2" />
<text  x="1189.40" y="415.5" ></text>
</g>
<g >
<title>__asan::AsanThread::stack_top (2 samples, 0.01%)</title><rect x="141.0" y="1557" width="0.2" height="15.0" fill="rgb(206,191,45)" rx="2" ry="2" />
<text  x="144.04" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (6 samples, 0.03%)</title><rect x="164.5" y="1797" width="0.3" height="15.0" fill="rgb(252,180,29)" rx="2" ry="2" />
<text  x="167.46" y="1807.5" ></text>
</g>
<g >
<title>on_each_cpu_cond_mask (2 samples, 0.01%)</title><rect x="82.0" y="1173" width="0.1" height="15.0" fill="rgb(226,208,13)" rx="2" ry="2" />
<text  x="85.02" y="1183.5" ></text>
</g>
<g >
<title>on_each_cpu_mask (4 samples, 0.02%)</title><rect x="1096.4" y="1797" width="0.2" height="15.0" fill="rgb(231,139,27)" rx="2" ry="2" />
<text  x="1099.39" y="1807.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (24 samples, 0.13%)</title><rect x="1176.7" y="2037" width="1.5" height="15.0" fill="rgb(233,135,13)" rx="2" ry="2" />
<text  x="1179.68" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1186.4" y="1397" width="0.2" height="15.0" fill="rgb(207,116,31)" rx="2" ry="2" />
<text  x="1189.40" y="1407.5" ></text>
</g>
<g >
<title>[unknown] (58 samples, 0.31%)</title><rect x="796.4" y="2021" width="3.6" height="15.0" fill="rgb(249,190,14)" rx="2" ry="2" />
<text  x="799.37" y="2031.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (4 samples, 0.02%)</title><rect x="755.4" y="1989" width="0.3" height="15.0" fill="rgb(245,194,12)" rx="2" ry="2" />
<text  x="758.41" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (425 samples, 2.27%)</title><rect x="166.7" y="1845" width="26.8" height="15.0" fill="rgb(220,11,24)" rx="2" ry="2" />
<text  x="169.67" y="1855.5" >s..</text>
</g>
<g >
<title>[unknown] (320 samples, 1.71%)</title><rect x="57.9" y="789" width="20.2" height="15.0" fill="rgb(223,60,45)" rx="2" ry="2" />
<text  x="60.91" y="799.5" ></text>
</g>
<g >
<title>ptep_clear_flush (40 samples, 0.21%)</title><rect x="939.2" y="1925" width="2.5" height="15.0" fill="rgb(223,74,40)" rx="2" ry="2" />
<text  x="942.22" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (307 samples, 1.64%)</title><rect x="57.9" y="133" width="19.4" height="15.0" fill="rgb(217,112,54)" rx="2" ry="2" />
<text  x="60.91" y="143.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::addSubwords (339 samples, 1.81%)</title><rect x="532.8" y="1909" width="21.4" height="15.0" fill="rgb(242,42,38)" rx="2" ry="2" />
<text  x="535.84" y="1919.5" >f..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.0" y="1653" width="0.2" height="15.0" fill="rgb(249,113,42)" rx="2" ry="2" />
<text  x="1190.03" y="1663.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="172.1" y="1557" width="0.1" height="15.0" fill="rgb(207,204,13)" rx="2" ry="2" />
<text  x="175.10" y="1567.5" ></text>
</g>
<g >
<title>fasttext::Vector::mul (56 samples, 0.30%)</title><rect x="792.5" y="2037" width="3.5" height="15.0" fill="rgb(207,171,52)" rx="2" ry="2" />
<text  x="795.46" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1187.0" y="613" width="0.2" height="15.0" fill="rgb(231,41,40)" rx="2" ry="2" />
<text  x="1190.03" y="623.5" ></text>
</g>
<g >
<title>fasttext::FastText::predictLine (376 samples, 2.01%)</title><rect x="530.6" y="1941" width="23.7" height="15.0" fill="rgb(211,217,53)" rx="2" ry="2" />
<text  x="533.57" y="1951.5" >f..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (12 samples, 0.06%)</title><rect x="223.9" y="1877" width="0.7" height="15.0" fill="rgb(246,48,12)" rx="2" ry="2" />
<text  x="226.86" y="1887.5" ></text>
</g>
<g >
<title>vfs_read (2 samples, 0.01%)</title><rect x="1105.5" y="1957" width="0.2" height="15.0" fill="rgb(243,68,14)" rx="2" ry="2" />
<text  x="1108.54" y="1967.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.01%)</title><rect x="147.7" y="1589" width="0.1" height="15.0" fill="rgb(228,45,2)" rx="2" ry="2" />
<text  x="150.67" y="1599.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::basic_regex&lt;char const*&gt; (467 samples, 2.50%)</title><rect x="195.3" y="1957" width="29.5" height="15.0" fill="rgb(248,38,12)" rx="2" ry="2" />
<text  x="198.33" y="1967.5" >st..</text>
</g>
<g >
<title>__sanitizer::mem_is_zero (2 samples, 0.01%)</title><rect x="1189.2" y="2037" width="0.1" height="15.0" fill="rgb(214,70,6)" rx="2" ry="2" />
<text  x="1192.18" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (86 samples, 0.46%)</title><rect x="218.0" y="1717" width="5.4" height="15.0" fill="rgb(213,21,5)" rx="2" ry="2" />
<text  x="220.99" y="1727.5" ></text>
</g>
<g >
<title>__sanitizer_weak_hook_strcmp (9 samples, 0.05%)</title><rect x="42.0" y="2021" width="0.6" height="15.0" fill="rgb(240,218,10)" rx="2" ry="2" />
<text  x="45.00" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (92 samples, 0.49%)</title><rect x="200.4" y="1685" width="5.8" height="15.0" fill="rgb(235,17,10)" rx="2" ry="2" />
<text  x="203.44" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="225.1" y="1365" width="0.1" height="15.0" fill="rgb(207,46,41)" rx="2" ry="2" />
<text  x="228.06" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1186.2" y="533" width="0.1" height="15.0" fill="rgb(222,75,15)" rx="2" ry="2" />
<text  x="1189.21" y="543.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (3 samples, 0.02%)</title><rect x="216.5" y="1637" width="0.2" height="15.0" fill="rgb(208,204,45)" rx="2" ry="2" />
<text  x="219.53" y="1647.5" ></text>
</g>
<g >
<title>do_syscall_64 (3 samples, 0.02%)</title><rect x="127.5" y="2005" width="0.2" height="15.0" fill="rgb(210,92,51)" rx="2" ry="2" />
<text  x="130.47" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="1186.3" y="1797" width="0.3" height="15.0" fill="rgb(250,214,38)" rx="2" ry="2" />
<text  x="1189.34" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1187.0" y="1429" width="0.2" height="15.0" fill="rgb(215,34,17)" rx="2" ry="2" />
<text  x="1190.03" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (177 samples, 0.95%)</title><rect x="195.4" y="1765" width="11.2" height="15.0" fill="rgb(220,3,34)" rx="2" ry="2" />
<text  x="198.39" y="1775.5" ></text>
</g>
<g >
<title>__do_page_fault (3 samples, 0.02%)</title><rect x="719.0" y="1845" width="0.2" height="15.0" fill="rgb(212,227,40)" rx="2" ry="2" />
<text  x="722.05" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (392 samples, 2.10%)</title><rect x="57.8" y="1397" width="24.8" height="15.0" fill="rgb(212,126,44)" rx="2" ry="2" />
<text  x="60.85" y="1407.5" >[..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1186.4" y="229" width="0.2" height="15.0" fill="rgb(245,138,5)" rx="2" ry="2" />
<text  x="1189.40" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1186.2" y="1941" width="0.1" height="15.0" fill="rgb(207,213,38)" rx="2" ry="2" />
<text  x="1189.21" y="1951.5" ></text>
</g>
<g >
<title>do_page_fault (3 samples, 0.02%)</title><rect x="561.1" y="1861" width="0.1" height="15.0" fill="rgb(233,13,13)" rx="2" ry="2" />
<text  x="564.05" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (385 samples, 2.06%)</title><rect x="57.8" y="1381" width="24.3" height="15.0" fill="rgb(246,7,42)" rx="2" ry="2" />
<text  x="60.85" y="1391.5" >[..</text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (6 samples, 0.03%)</title><rect x="197.6" y="1557" width="0.4" height="15.0" fill="rgb(246,34,27)" rx="2" ry="2" />
<text  x="200.60" y="1567.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (7 samples, 0.04%)</title><rect x="744.4" y="1941" width="0.4" height="15.0" fill="rgb(249,2,53)" rx="2" ry="2" />
<text  x="747.36" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (2 samples, 0.01%)</title><rect x="188.4" y="1749" width="0.1" height="15.0" fill="rgb(214,39,16)" rx="2" ry="2" />
<text  x="191.38" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.0" y="1509" width="0.2" height="15.0" fill="rgb(238,9,1)" rx="2" ry="2" />
<text  x="1190.03" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="194.4" y="1605" width="0.1" height="15.0" fill="rgb(234,95,15)" rx="2" ry="2" />
<text  x="197.38" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1186.6" y="1605" width="0.4" height="15.0" fill="rgb(206,145,42)" rx="2" ry="2" />
<text  x="1189.59" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (324 samples, 1.73%)</title><rect x="57.9" y="997" width="20.5" height="15.0" fill="rgb(231,8,17)" rx="2" ry="2" />
<text  x="60.91" y="1007.5" ></text>
</g>
<g >
<title>operator delete[] (58 samples, 0.31%)</title><rect x="1178.8" y="2037" width="3.7" height="15.0" fill="rgb(249,172,41)" rx="2" ry="2" />
<text  x="1181.83" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (310 samples, 1.66%)</title><rect x="57.9" y="325" width="19.6" height="15.0" fill="rgb(239,2,30)" rx="2" ry="2" />
<text  x="60.91" y="335.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (2 samples, 0.01%)</title><rect x="330.3" y="1957" width="0.1" height="15.0" fill="rgb(232,182,16)" rx="2" ry="2" />
<text  x="333.28" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (5 samples, 0.03%)</title><rect x="217.5" y="1797" width="0.3" height="15.0" fill="rgb(223,6,3)" rx="2" ry="2" />
<text  x="220.48" y="1807.5" ></text>
</g>
<g >
<title>operator delete (27 samples, 0.14%)</title><rect x="617.7" y="1877" width="1.7" height="15.0" fill="rgb(212,162,37)" rx="2" ry="2" />
<text  x="620.74" y="1887.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (9 samples, 0.05%)</title><rect x="875.0" y="2037" width="0.5" height="15.0" fill="rgb(216,137,24)" rx="2" ry="2" />
<text  x="877.96" y="2047.5" ></text>
</g>
<g >
<title>release_pages (4 samples, 0.02%)</title><rect x="1097.5" y="1861" width="0.3" height="15.0" fill="rgb(230,181,53)" rx="2" ry="2" />
<text  x="1100.53" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="194.5" y="1557" width="0.1" height="15.0" fill="rgb(246,227,17)" rx="2" ry="2" />
<text  x="197.51" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.05%)</title><rect x="165.8" y="1925" width="0.6" height="15.0" fill="rgb(253,78,22)" rx="2" ry="2" />
<text  x="168.85" y="1935.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (8 samples, 0.04%)</title><rect x="171.6" y="1541" width="0.5" height="15.0" fill="rgb(240,119,33)" rx="2" ry="2" />
<text  x="174.59" y="1551.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (8 samples, 0.04%)</title><rect x="222.5" y="1669" width="0.5" height="15.0" fill="rgb(216,136,25)" rx="2" ry="2" />
<text  x="225.53" y="1679.5" ></text>
</g>
<g >
<title>fasttext::FastText::getDimension (34 samples, 0.18%)</title><rect x="501.9" y="1973" width="2.2" height="15.0" fill="rgb(207,196,46)" rx="2" ry="2" />
<text  x="504.91" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (75 samples, 0.40%)</title><rect x="183.6" y="1733" width="4.7" height="15.0" fill="rgb(236,130,24)" rx="2" ry="2" />
<text  x="186.59" y="1743.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (17 samples, 0.09%)</title><rect x="1096.3" y="1973" width="1.0" height="15.0" fill="rgb(246,139,10)" rx="2" ry="2" />
<text  x="1099.26" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1187.0" y="1813" width="0.2" height="15.0" fill="rgb(226,169,45)" rx="2" ry="2" />
<text  x="1190.03" y="1823.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt; &gt;::_M_manager (3 samples, 0.02%)</title><rect x="166.9" y="1621" width="0.1" height="15.0" fill="rgb(252,199,20)" rx="2" ry="2" />
<text  x="169.86" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="57.6" y="1365" width="0.1" height="15.0" fill="rgb(226,60,31)" rx="2" ry="2" />
<text  x="60.59" y="1375.5" ></text>
</g>
<g >
<title>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::dump (5 samples, 0.03%)</title><rect x="508.0" y="1941" width="0.3" height="15.0" fill="rgb(229,136,29)" rx="2" ry="2" />
<text  x="510.97" y="1951.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::do_tolower (2 samples, 0.01%)</title><rect x="216.8" y="1653" width="0.1" height="15.0" fill="rgb(253,224,5)" rx="2" ry="2" />
<text  x="219.79" y="1663.5" ></text>
</g>
<g >
<title>__do_page_fault (83 samples, 0.44%)</title><rect x="21.4" y="2005" width="5.2" height="15.0" fill="rgb(206,221,35)" rx="2" ry="2" />
<text  x="24.36" y="2015.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (48 samples, 0.26%)</title><rect x="213.8" y="1653" width="3.0" height="15.0" fill="rgb(222,79,53)" rx="2" ry="2" />
<text  x="216.76" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (93 samples, 0.50%)</title><rect x="149.1" y="1653" width="5.8" height="15.0" fill="rgb(219,118,21)" rx="2" ry="2" />
<text  x="152.06" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1186.2" y="661" width="0.1" height="15.0" fill="rgb(214,211,42)" rx="2" ry="2" />
<text  x="1189.21" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1186.2" y="229" width="0.1" height="15.0" fill="rgb(211,68,37)" rx="2" ry="2" />
<text  x="1189.21" y="239.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (2 samples, 0.01%)</title><rect x="83.3" y="1381" width="0.2" height="15.0" fill="rgb(208,122,2)" rx="2" ry="2" />
<text  x="86.35" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.05%)</title><rect x="165.8" y="1909" width="0.6" height="15.0" fill="rgb(224,9,16)" rx="2" ry="2" />
<text  x="168.85" y="1919.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::create&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (2 samples, 0.01%)</title><rect x="508.9" y="1733" width="0.1" height="15.0" fill="rgb(208,138,45)" rx="2" ry="2" />
<text  x="511.85" y="1743.5" ></text>
</g>
<g >
<title>__do_munmap (2 samples, 0.01%)</title><rect x="82.5" y="1301" width="0.1" height="15.0" fill="rgb(240,93,25)" rx="2" ry="2" />
<text  x="85.46" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1186.7" y="805" width="0.3" height="15.0" fill="rgb(240,222,18)" rx="2" ry="2" />
<text  x="1189.72" y="815.5" ></text>
</g>
<g >
<title>__lru_cache_add (2 samples, 0.01%)</title><rect x="1014.9" y="1941" width="0.1" height="15.0" fill="rgb(211,222,7)" rx="2" ry="2" />
<text  x="1017.90" y="1951.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.01%)</title><rect x="869.0" y="1957" width="0.1" height="15.0" fill="rgb(250,192,37)" rx="2" ry="2" />
<text  x="871.96" y="1967.5" ></text>
</g>
<g >
<title>__do_munmap (10 samples, 0.05%)</title><rect x="756.0" y="1909" width="0.6" height="15.0" fill="rgb(218,45,1)" rx="2" ry="2" />
<text  x="758.97" y="1919.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (54 samples, 0.29%)</title><rect x="1116.0" y="2053" width="3.4" height="15.0" fill="rgb(210,44,28)" rx="2" ry="2" />
<text  x="1119.02" y="2063.5" ></text>
</g>
<g >
<title>__interceptor_strlen (13 samples, 0.07%)</title><rect x="563.6" y="1893" width="0.9" height="15.0" fill="rgb(211,38,16)" rx="2" ry="2" />
<text  x="566.64" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (315 samples, 1.69%)</title><rect x="57.9" y="565" width="19.9" height="15.0" fill="rgb(246,133,35)" rx="2" ry="2" />
<text  x="60.91" y="575.5" ></text>
</g>
<g >
<title>page_fault (13 samples, 0.07%)</title><rect x="752.4" y="2021" width="0.8" height="15.0" fill="rgb(208,79,21)" rx="2" ry="2" />
<text  x="755.38" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (92 samples, 0.49%)</title><rect x="200.4" y="1653" width="5.8" height="15.0" fill="rgb(213,62,43)" rx="2" ry="2" />
<text  x="203.44" y="1663.5" ></text>
</g>
<g >
<title>__asan::Allocator::Deallocate (13 samples, 0.07%)</title><rect x="1151.1" y="2037" width="0.8" height="15.0" fill="rgb(235,10,10)" rx="2" ry="2" />
<text  x="1154.12" y="2047.5" ></text>
</g>
<g >
<title>fasttext::QuantMatrix::addRowToVector (2 samples, 0.01%)</title><rect x="791.7" y="2037" width="0.1" height="15.0" fill="rgb(226,83,17)" rx="2" ry="2" />
<text  x="794.70" y="2047.5" ></text>
</g>
<g >
<title>mmput (5 samples, 0.03%)</title><rect x="1097.5" y="1973" width="0.3" height="15.0" fill="rgb(212,39,23)" rx="2" ry="2" />
<text  x="1100.46" y="1983.5" ></text>
</g>
<g >
<title>free_unref_page_list (3 samples, 0.02%)</title><rect x="513.3" y="1861" width="0.2" height="15.0" fill="rgb(221,214,7)" rx="2" ry="2" />
<text  x="516.33" y="1871.5" ></text>
</g>
<g >
<title>page_fault (5 samples, 0.03%)</title><rect x="1188.9" y="2021" width="0.3" height="15.0" fill="rgb(248,11,17)" rx="2" ry="2" />
<text  x="1191.86" y="2031.5" ></text>
</g>
<g >
<title>main (6,053 samples, 32.38%)</title><rect x="127.7" y="2021" width="382.0" height="15.0" fill="rgb(230,136,25)" rx="2" ry="2" />
<text  x="130.66" y="2031.5" >main</text>
</g>
<g >
<title>GetHost (448 samples, 2.40%)</title><rect x="138.3" y="1973" width="28.2" height="15.0" fill="rgb(228,223,30)" rx="2" ry="2" />
<text  x="141.26" y="1983.5" >G..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1186.4" y="245" width="0.2" height="15.0" fill="rgb(225,15,50)" rx="2" ry="2" />
<text  x="1189.40" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.05%)</title><rect x="165.8" y="1813" width="0.6" height="15.0" fill="rgb(230,132,18)" rx="2" ry="2" />
<text  x="168.85" y="1823.5" ></text>
</g>
<g >
<title>handle_mm_fault (25 samples, 0.13%)</title><rect x="56.0" y="1973" width="1.5" height="15.0" fill="rgb(224,145,6)" rx="2" ry="2" />
<text  x="58.95" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt;,  (8 samples, 0.04%)</title><rect x="194.1" y="1941" width="0.5" height="15.0" fill="rgb(244,198,42)" rx="2" ry="2" />
<text  x="197.13" y="1951.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (4 samples, 0.02%)</title><rect x="137.9" y="1877" width="0.2" height="15.0" fill="rgb(251,85,3)" rx="2" ry="2" />
<text  x="140.88" y="1887.5" ></text>
</g>
<g >
<title>__x64_sys_read (3 samples, 0.02%)</title><rect x="127.5" y="1989" width="0.2" height="15.0" fill="rgb(224,185,9)" rx="2" ry="2" />
<text  x="130.47" y="1999.5" ></text>
</g>
<g >
<title>__do_page_fault (36 samples, 0.19%)</title><rect x="499.4" y="1925" width="2.3" height="15.0" fill="rgb(207,46,9)" rx="2" ry="2" />
<text  x="502.38" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (6 samples, 0.03%)</title><rect x="164.5" y="1813" width="0.3" height="15.0" fill="rgb(237,131,37)" rx="2" ry="2" />
<text  x="167.46" y="1823.5" ></text>
</g>
<g >
<title>onmt::unicode::explode_utf8 (27 samples, 0.14%)</title><rect x="800.3" y="2037" width="1.7" height="15.0" fill="rgb(243,87,20)" rx="2" ry="2" />
<text  x="803.29" y="2047.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (3 samples, 0.02%)</title><rect x="329.9" y="1957" width="0.2" height="15.0" fill="rgb(248,211,27)" rx="2" ry="2" />
<text  x="332.90" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1186.7" y="1509" width="0.3" height="15.0" fill="rgb(239,4,53)" rx="2" ry="2" />
<text  x="1189.65" y="1519.5" ></text>
</g>
<g >
<title>__pthread_getspecific (2 samples, 0.01%)</title><rect x="215.1" y="1637" width="0.2" height="15.0" fill="rgb(212,137,0)" rx="2" ry="2" />
<text  x="218.15" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.02%)</title><rect x="1186.3" y="1829" width="0.3" height="15.0" fill="rgb(241,133,16)" rx="2" ry="2" />
<text  x="1189.34" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="194.5" y="1573" width="0.1" height="15.0" fill="rgb(220,121,25)" rx="2" ry="2" />
<text  x="197.51" y="1583.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (2 samples, 0.01%)</title><rect x="1014.9" y="1925" width="0.1" height="15.0" fill="rgb(214,161,18)" rx="2" ry="2" />
<text  x="1017.90" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.0" y="1781" width="0.2" height="15.0" fill="rgb(228,62,48)" rx="2" ry="2" />
<text  x="1190.03" y="1791.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="91.6" y="1893" width="0.1" height="15.0" fill="rgb(219,60,5)" rx="2" ry="2" />
<text  x="94.62" y="1903.5" ></text>
</g>
<g >
<title>__interceptor_strlen (19 samples, 0.10%)</title><rect x="1170.7" y="2037" width="1.2" height="15.0" fill="rgb(206,163,32)" rx="2" ry="2" />
<text  x="1173.75" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (85 samples, 0.45%)</title><rect x="178.2" y="1749" width="5.4" height="15.0" fill="rgb(219,118,18)" rx="2" ry="2" />
<text  x="181.22" y="1759.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (2 samples, 0.01%)</title><rect x="190.8" y="1653" width="0.2" height="15.0" fill="rgb(227,151,51)" rx="2" ry="2" />
<text  x="193.84" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="194.5" y="1509" width="0.1" height="15.0" fill="rgb(217,196,48)" rx="2" ry="2" />
<text  x="197.51" y="1519.5" ></text>
</g>
<g >
<title>__asan::GetMallocContextSize (2 samples, 0.01%)</title><rect x="209.1" y="1605" width="0.2" height="15.0" fill="rgb(217,132,47)" rx="2" ry="2" />
<text  x="212.15" y="1615.5" ></text>
</g>
<g >
<title>tlb_flush_mmu_free (4 samples, 0.02%)</title><rect x="1097.5" y="1893" width="0.3" height="15.0" fill="rgb(222,96,15)" rx="2" ry="2" />
<text  x="1100.53" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1186.7" y="1045" width="0.3" height="15.0" fill="rgb(245,24,16)" rx="2" ry="2" />
<text  x="1189.72" y="1055.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; const*, std::vector&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::allocator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;*&gt; (4 samples, 0.02%)</title><rect x="508.7" y="1845" width="0.3" height="15.0" fill="rgb(245,49,49)" rx="2" ry="2" />
<text  x="511.73" y="1855.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct (5 samples, 0.03%)</title><rect x="1115.5" y="2053" width="0.3" height="15.0" fill="rgb(207,15,47)" rx="2" ry="2" />
<text  x="1118.52" y="2063.5" ></text>
</g>
<g >
<title>perf_event_mmap (2 samples, 0.01%)</title><rect x="1096.8" y="1925" width="0.2" height="15.0" fill="rgb(211,121,12)" rx="2" ry="2" />
<text  x="1099.83" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (71 samples, 0.38%)</title><rect x="183.8" y="1669" width="4.5" height="15.0" fill="rgb(219,170,30)" rx="2" ry="2" />
<text  x="186.77" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (2 samples, 0.01%)</title><rect x="165.3" y="1797" width="0.2" height="15.0" fill="rgb(220,169,48)" rx="2" ry="2" />
<text  x="168.34" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1186.2" y="1109" width="0.1" height="15.0" fill="rgb(248,17,50)" rx="2" ry="2" />
<text  x="1189.21" y="1119.5" ></text>
</g>
<g >
<title>[unknown] (441 samples, 2.36%)</title><rect x="57.8" y="1573" width="27.9" height="15.0" fill="rgb(235,184,47)" rx="2" ry="2" />
<text  x="60.85" y="1583.5" >[..</text>
</g>
<g >
<title>nlohmann::detail::input_stream_adapter::get_character (6 samples, 0.03%)</title><rect x="136.6" y="1893" width="0.3" height="15.0" fill="rgb(246,0,27)" rx="2" ry="2" />
<text  x="139.56" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (308 samples, 1.65%)</title><rect x="57.9" y="181" width="19.5" height="15.0" fill="rgb(248,174,4)" rx="2" ry="2" />
<text  x="60.91" y="191.5" ></text>
</g>
<g >
<title>x2apic_send_IPI (24 samples, 0.13%)</title><rect x="940.1" y="1781" width="1.5" height="15.0" fill="rgb(247,212,39)" rx="2" ry="2" />
<text  x="943.10" y="1791.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::emplace_back&lt;char const*&amp;, unsigned int&amp;&gt; (116 samples, 0.62%)</title><rect x="595.3" y="1861" width="7.3" height="15.0" fill="rgb(224,90,7)" rx="2" ry="2" />
<text  x="598.27" y="1871.5" ></text>
</g>
<g >
<title>__pthread_getspecific (4 samples, 0.02%)</title><rect x="141.6" y="1557" width="0.3" height="15.0" fill="rgb(245,90,40)" rx="2" ry="2" />
<text  x="144.61" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1186.2" y="1317" width="0.1" height="15.0" fill="rgb(247,160,36)" rx="2" ry="2" />
<text  x="1189.21" y="1327.5" ></text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.02%)</title><rect x="196.1" y="1589" width="0.2" height="15.0" fill="rgb(229,23,20)" rx="2" ry="2" />
<text  x="199.08" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (5 samples, 0.03%)</title><rect x="166.7" y="1685" width="0.3" height="15.0" fill="rgb(245,152,28)" rx="2" ry="2" />
<text  x="169.73" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (76 samples, 0.41%)</title><rect x="172.9" y="1605" width="4.8" height="15.0" fill="rgb(221,136,30)" rx="2" ry="2" />
<text  x="175.85" y="1615.5" ></text>
</g>
<g >
<title>__asan::asan_memalign (34 samples, 0.18%)</title><rect x="987.6" y="2053" width="2.2" height="15.0" fill="rgb(235,67,48)" rx="2" ry="2" />
<text  x="990.63" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.0" y="1221" width="0.2" height="15.0" fill="rgb(209,1,53)" rx="2" ry="2" />
<text  x="1190.03" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (2 samples, 0.01%)</title><rect x="193.7" y="1781" width="0.2" height="15.0" fill="rgb(231,218,36)" rx="2" ry="2" />
<text  x="196.75" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1186.7" y="1237" width="0.3" height="15.0" fill="rgb(232,154,49)" rx="2" ry="2" />
<text  x="1189.72" y="1247.5" ></text>
</g>
<g >
<title>Eigen::internal::gemv_dense_selector&lt;2, 1, true&gt;::run&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; &gt; (315 samples, 1.69%)</title><rect x="231.6" y="1957" width="19.9" height="15.0" fill="rgb(228,165,48)" rx="2" ry="2" />
<text  x="234.62" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_subexpr_begin (2 samples, 0.01%)</title><rect x="211.7" y="1749" width="0.2" height="15.0" fill="rgb(252,204,7)" rx="2" ry="2" />
<text  x="214.74" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (320 samples, 1.71%)</title><rect x="57.9" y="869" width="20.2" height="15.0" fill="rgb(243,158,28)" rx="2" ry="2" />
<text  x="60.91" y="879.5" ></text>
</g>
<g >
<title>operator delete (8 samples, 0.04%)</title><rect x="176.0" y="1573" width="0.5" height="15.0" fill="rgb(231,228,38)" rx="2" ry="2" />
<text  x="179.01" y="1583.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::getSubwords (13 samples, 0.07%)</title><rect x="758.0" y="2037" width="0.8" height="15.0" fill="rgb(237,186,24)" rx="2" ry="2" />
<text  x="760.99" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (335 samples, 1.79%)</title><rect x="138.3" y="1813" width="21.2" height="15.0" fill="rgb(212,148,12)" rx="2" ry="2" />
<text  x="141.33" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (309 samples, 1.65%)</title><rect x="57.9" y="197" width="19.5" height="15.0" fill="rgb(239,73,46)" rx="2" ry="2" />
<text  x="60.91" y="207.5" ></text>
</g>
<g >
<title>clear_page_erms (6 samples, 0.03%)</title><rect x="682.1" y="1733" width="0.3" height="15.0" fill="rgb(252,139,17)" rx="2" ry="2" />
<text  x="685.06" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1186.4" y="661" width="0.2" height="15.0" fill="rgb(215,116,35)" rx="2" ry="2" />
<text  x="1189.40" y="671.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (2 samples, 0.01%)</title><rect x="1115.1" y="2037" width="0.2" height="15.0" fill="rgb(206,180,18)" rx="2" ry="2" />
<text  x="1118.14" y="2047.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.01%)</title><rect x="501.7" y="1973" width="0.1" height="15.0" fill="rgb(212,219,44)" rx="2" ry="2" />
<text  x="504.66" y="1983.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (78 samples, 0.42%)</title><rect x="733.3" y="1877" width="4.9" height="15.0" fill="rgb(241,19,20)" rx="2" ry="2" />
<text  x="736.31" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1186.4" y="821" width="0.2" height="15.0" fill="rgb(232,126,27)" rx="2" ry="2" />
<text  x="1189.40" y="831.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; const&amp;&gt; (2 samples, 0.01%)</title><rect x="508.7" y="1781" width="0.2" height="15.0" fill="rgb(207,44,25)" rx="2" ry="2" />
<text  x="511.73" y="1791.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt; &gt;::_M_manager (2 samples, 0.01%)</title><rect x="195.2" y="1941" width="0.1" height="15.0" fill="rgb(253,116,31)" rx="2" ry="2" />
<text  x="198.20" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="225.1" y="1509" width="0.1" height="15.0" fill="rgb(242,166,19)" rx="2" ry="2" />
<text  x="228.06" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1186.2" y="821" width="0.1" height="15.0" fill="rgb(214,166,6)" rx="2" ry="2" />
<text  x="1189.21" y="831.5" ></text>
</g>
<g >
<title>[unknown] (456 samples, 2.44%)</title><rect x="57.8" y="1637" width="28.8" height="15.0" fill="rgb(230,21,54)" rx="2" ry="2" />
<text  x="60.85" y="1647.5" >[u..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1186.4" y="645" width="0.2" height="15.0" fill="rgb(229,56,3)" rx="2" ry="2" />
<text  x="1189.40" y="655.5" ></text>
</g>
<g >
<title>smp_call_function_many (4 samples, 0.02%)</title><rect x="1096.4" y="1781" width="0.2" height="15.0" fill="rgb(236,78,43)" rx="2" ry="2" />
<text  x="1099.39" y="1791.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (6 samples, 0.03%)</title><rect x="513.1" y="1893" width="0.4" height="15.0" fill="rgb(213,16,50)" rx="2" ry="2" />
<text  x="516.14" y="1903.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (228 samples, 1.22%)</title><rect x="28.2" y="2037" width="14.4" height="15.0" fill="rgb(253,71,51)" rx="2" ry="2" />
<text  x="31.18" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1186.4" y="741" width="0.2" height="15.0" fill="rgb(224,150,30)" rx="2" ry="2" />
<text  x="1189.40" y="751.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (52 samples, 0.28%)</title><rect x="806.3" y="2005" width="3.3" height="15.0" fill="rgb(216,97,37)" rx="2" ry="2" />
<text  x="809.28" y="2015.5" ></text>
</g>
<g >
<title>onmt::unicode::get_case (7 samples, 0.04%)</title><rect x="723.8" y="1893" width="0.5" height="15.0" fill="rgb(250,14,32)" rx="2" ry="2" />
<text  x="726.85" y="1903.5" ></text>
</g>
<g >
<title>__pthread_getspecific (7 samples, 0.04%)</title><rect x="592.7" y="1861" width="0.5" height="15.0" fill="rgb(209,39,38)" rx="2" ry="2" />
<text  x="595.74" y="1871.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (2 samples, 0.01%)</title><rect x="83.2" y="1429" width="0.1" height="15.0" fill="rgb(230,19,4)" rx="2" ry="2" />
<text  x="86.22" y="1439.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::reserve (55 samples, 0.29%)</title><rect x="602.6" y="1861" width="3.5" height="15.0" fill="rgb(254,172,38)" rx="2" ry="2" />
<text  x="605.59" y="1871.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (2 samples, 0.01%)</title><rect x="1189.1" y="1925" width="0.1" height="15.0" fill="rgb(232,151,35)" rx="2" ry="2" />
<text  x="1192.05" y="1935.5" ></text>
</g>
<g >
<title>TFastTextEmbedder::GetSentenceEmbedding (1,663 samples, 8.90%)</title><rect x="225.4" y="1989" width="105.0" height="15.0" fill="rgb(242,104,32)" rx="2" ry="2" />
<text  x="228.43" y="1999.5" >TFastTextEmb..</text>
</g>
<g >
<title>pagevec_lru_move_fn (2 samples, 0.01%)</title><rect x="756.4" y="1845" width="0.1" height="15.0" fill="rgb(226,166,54)" rx="2" ry="2" />
<text  x="759.35" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="57.6" y="1733" width="0.1" height="15.0" fill="rgb(245,211,39)" rx="2" ry="2" />
<text  x="60.59" y="1743.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (2 samples, 0.01%)</title><rect x="314.6" y="1957" width="0.2" height="15.0" fill="rgb(247,153,54)" rx="2" ry="2" />
<text  x="317.63" y="1967.5" ></text>
</g>
<g >
<title>__sanitizer::internal_munmap (2 samples, 0.01%)</title><rect x="83.3" y="1429" width="0.2" height="15.0" fill="rgb(213,22,48)" rx="2" ry="2" />
<text  x="86.35" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="194.3" y="1893" width="0.3" height="15.0" fill="rgb(218,205,1)" rx="2" ry="2" />
<text  x="197.32" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="165.9" y="1157" width="0.1" height="15.0" fill="rgb(252,28,1)" rx="2" ry="2" />
<text  x="168.91" y="1167.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (2 samples, 0.01%)</title><rect x="1094.5" y="2037" width="0.1" height="15.0" fill="rgb(216,71,38)" rx="2" ry="2" />
<text  x="1097.50" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1186.4" y="501" width="0.2" height="15.0" fill="rgb(242,47,44)" rx="2" ry="2" />
<text  x="1189.40" y="511.5" ></text>
</g>
<g >
<title>alloc_pages_vma (2 samples, 0.01%)</title><rect x="561.1" y="1797" width="0.1" height="15.0" fill="rgb(247,209,22)" rx="2" ry="2" />
<text  x="564.05" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (353 samples, 1.89%)</title><rect x="57.8" y="1237" width="22.3" height="15.0" fill="rgb(209,3,21)" rx="2" ry="2" />
<text  x="60.85" y="1247.5" >[..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="225.1" y="1381" width="0.1" height="15.0" fill="rgb(252,147,43)" rx="2" ry="2" />
<text  x="228.06" y="1391.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (4 samples, 0.02%)</title><rect x="335.2" y="1989" width="0.3" height="15.0" fill="rgb(248,61,38)" rx="2" ry="2" />
<text  x="338.20" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="165.8" y="1445" width="0.5" height="15.0" fill="rgb(241,44,14)" rx="2" ry="2" />
<text  x="168.85" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="1186.3" y="1749" width="0.3" height="15.0" fill="rgb(227,179,3)" rx="2" ry="2" />
<text  x="1189.34" y="1759.5" ></text>
</g>
<g >
<title>onmt::Tokenizer::tokenize (2,975 samples, 15.91%)</title><rect x="556.5" y="1925" width="187.8" height="15.0" fill="rgb(212,227,18)" rx="2" ry="2" />
<text  x="559.51" y="1935.5" >onmt::Tokenizer::tokenize</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1186.7" y="1141" width="0.3" height="15.0" fill="rgb(250,193,43)" rx="2" ry="2" />
<text  x="1189.72" y="1151.5" ></text>
</g>
<g >
<title>fasttext::Vector::addVector (2 samples, 0.01%)</title><rect x="332.6" y="1989" width="0.1" height="15.0" fill="rgb(241,170,13)" rx="2" ry="2" />
<text  x="335.62" y="1999.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (8 samples, 0.04%)</title><rect x="1097.8" y="2037" width="0.5" height="15.0" fill="rgb(215,56,6)" rx="2" ry="2" />
<text  x="1100.84" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1186.2" y="1605" width="0.1" height="15.0" fill="rgb(240,40,4)" rx="2" ry="2" />
<text  x="1189.21" y="1615.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.01%)</title><rect x="869.0" y="1941" width="0.1" height="15.0" fill="rgb(226,195,19)" rx="2" ry="2" />
<text  x="871.96" y="1951.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::pushHash (210 samples, 1.12%)</title><rect x="540.7" y="1877" width="13.2" height="15.0" fill="rgb(245,180,19)" rx="2" ry="2" />
<text  x="543.67" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (321 samples, 1.72%)</title><rect x="57.9" y="933" width="20.3" height="15.0" fill="rgb(221,107,2)" rx="2" ry="2" />
<text  x="60.91" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.0" y="597" width="0.2" height="15.0" fill="rgb(235,220,4)" rx="2" ry="2" />
<text  x="1190.03" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (423 samples, 2.26%)</title><rect x="138.3" y="1877" width="26.7" height="15.0" fill="rgb(240,103,28)" rx="2" ry="2" />
<text  x="141.33" y="1887.5" >s..</text>
</g>
<g >
<title>[unknown] (314 samples, 1.68%)</title><rect x="57.9" y="437" width="19.8" height="15.0" fill="rgb(223,109,7)" rx="2" ry="2" />
<text  x="60.91" y="447.5" ></text>
</g>
<g >
<title>do_page_fault (3 samples, 0.02%)</title><rect x="719.0" y="1861" width="0.2" height="15.0" fill="rgb(210,144,24)" rx="2" ry="2" />
<text  x="722.05" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1186.4" y="629" width="0.2" height="15.0" fill="rgb(222,191,25)" rx="2" ry="2" />
<text  x="1189.40" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1186.6" y="1749" width="0.4" height="15.0" fill="rgb(220,173,14)" rx="2" ry="2" />
<text  x="1189.59" y="1759.5" ></text>
</g>
<g >
<title>__asan_memcpy (5 samples, 0.03%)</title><rect x="579.8" y="1877" width="0.3" height="15.0" fill="rgb(217,171,36)" rx="2" ry="2" />
<text  x="582.80" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="165.9" y="1173" width="0.1" height="15.0" fill="rgb(205,86,13)" rx="2" ry="2" />
<text  x="168.91" y="1183.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (9 samples, 0.05%)</title><rect x="682.6" y="1765" width="0.5" height="15.0" fill="rgb(212,115,37)" rx="2" ry="2" />
<text  x="685.56" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="57.6" y="1893" width="0.1" height="15.0" fill="rgb(213,101,50)" rx="2" ry="2" />
<text  x="60.59" y="1903.5" ></text>
</g>
<g >
<title>TSlinkClustering::FillDistanceMatrix (239 samples, 1.28%)</title><rect x="486.6" y="1973" width="15.1" height="15.0" fill="rgb(207,155,3)" rx="2" ry="2" />
<text  x="489.57" y="1983.5" ></text>
</g>
<g >
<title>operator delete (7 samples, 0.04%)</title><rect x="480.8" y="1941" width="0.5" height="15.0" fill="rgb(223,155,25)" rx="2" ry="2" />
<text  x="483.83" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (72 samples, 0.39%)</title><rect x="195.9" y="1637" width="4.5" height="15.0" fill="rgb(220,68,16)" rx="2" ry="2" />
<text  x="198.89" y="1647.5" ></text>
</g>
<g >
<title>do_page_fault (4 samples, 0.02%)</title><rect x="107.8" y="2005" width="0.3" height="15.0" fill="rgb(214,22,3)" rx="2" ry="2" />
<text  x="110.84" y="2015.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (15 samples, 0.08%)</title><rect x="936.6" y="1909" width="0.9" height="15.0" fill="rgb(237,107,50)" rx="2" ry="2" />
<text  x="939.57" y="1919.5" ></text>
</g>
<g >
<title>__asan_memcpy (2 samples, 0.01%)</title><rect x="147.0" y="1589" width="0.1" height="15.0" fill="rgb(218,3,26)" rx="2" ry="2" />
<text  x="149.97" y="1599.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::computeSubwords (30 samples, 0.16%)</title><rect x="478.6" y="1925" width="1.8" height="15.0" fill="rgb(245,90,5)" rx="2" ry="2" />
<text  x="481.55" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1186.2" y="69" width="0.1" height="15.0" fill="rgb(228,193,21)" rx="2" ry="2" />
<text  x="1189.21" y="79.5" ></text>
</g>
<g >
<title>do_futex (7 samples, 0.04%)</title><rect x="27.4" y="1941" width="0.4" height="15.0" fill="rgb(251,210,24)" rx="2" ry="2" />
<text  x="30.36" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (433 samples, 2.32%)</title><rect x="138.3" y="1909" width="27.4" height="15.0" fill="rgb(249,52,35)" rx="2" ry="2" />
<text  x="141.33" y="1919.5" >s..</text>
</g>
<g >
<title>[libc-2.27.so] (60 samples, 0.32%)</title><rect x="1164.6" y="2021" width="3.7" height="15.0" fill="rgb(222,1,22)" rx="2" ry="2" />
<text  x="1167.56" y="2031.5" ></text>
</g>
<g >
<title>clear_page_erms (5 samples, 0.03%)</title><rect x="56.4" y="1877" width="0.3" height="15.0" fill="rgb(205,97,39)" rx="2" ry="2" />
<text  x="59.39" y="1887.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::push_back (9 samples, 0.05%)</title><rect x="508.5" y="2005" width="0.5" height="15.0" fill="rgb(212,94,15)" rx="2" ry="2" />
<text  x="511.47" y="2015.5" ></text>
</g>
<g >
<title>__vm_munmap (2 samples, 0.01%)</title><rect x="83.3" y="1365" width="0.2" height="15.0" fill="rgb(221,3,34)" rx="2" ry="2" />
<text  x="86.35" y="1375.5" ></text>
</g>
<g >
<title>[unknown] (357 samples, 1.91%)</title><rect x="57.8" y="1253" width="22.6" height="15.0" fill="rgb(223,197,51)" rx="2" ry="2" />
<text  x="60.85" y="1263.5" >[..</text>
</g>
<g >
<title>__pthread_getspecific (4 samples, 0.02%)</title><rect x="181.3" y="1589" width="0.3" height="15.0" fill="rgb(224,227,54)" rx="2" ry="2" />
<text  x="184.31" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (322 samples, 1.72%)</title><rect x="57.9" y="965" width="20.3" height="15.0" fill="rgb(207,53,1)" rx="2" ry="2" />
<text  x="60.91" y="975.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.01%)</title><rect x="314.6" y="1925" width="0.2" height="15.0" fill="rgb(229,65,34)" rx="2" ry="2" />
<text  x="317.63" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="1186.8" y="101" width="0.2" height="15.0" fill="rgb(235,119,30)" rx="2" ry="2" />
<text  x="1189.78" y="111.5" ></text>
</g>
<g >
<title>__asan_memcpy (14 samples, 0.07%)</title><rect x="640.8" y="1877" width="0.9" height="15.0" fill="rgb(212,26,24)" rx="2" ry="2" />
<text  x="643.84" y="1887.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::pushHash (3 samples, 0.02%)</title><rect x="870.5" y="1941" width="0.2" height="15.0" fill="rgb(211,13,9)" rx="2" ry="2" />
<text  x="873.54" y="1951.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (6 samples, 0.03%)</title><rect x="1096.4" y="1861" width="0.4" height="15.0" fill="rgb(219,10,45)" rx="2" ry="2" />
<text  x="1099.39" y="1871.5" ></text>
</g>
<g >
<title>clear_page_erms (13 samples, 0.07%)</title><rect x="23.6" y="1925" width="0.8" height="15.0" fill="rgb(205,189,2)" rx="2" ry="2" />
<text  x="26.57" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.02%)</title><rect x="1186.3" y="1877" width="0.3" height="15.0" fill="rgb(244,117,31)" rx="2" ry="2" />
<text  x="1189.34" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="57.6" y="1845" width="0.1" height="15.0" fill="rgb(216,117,20)" rx="2" ry="2" />
<text  x="60.59" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1186.2" y="1701" width="0.1" height="15.0" fill="rgb(241,31,16)" rx="2" ry="2" />
<text  x="1189.21" y="1711.5" ></text>
</g>
<g >
<title>alloc_pages_vma (7 samples, 0.04%)</title><rect x="682.1" y="1765" width="0.4" height="15.0" fill="rgb(238,162,50)" rx="2" ry="2" />
<text  x="685.06" y="1775.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (4 samples, 0.02%)</title><rect x="872.0" y="2005" width="0.2" height="15.0" fill="rgb(224,69,6)" rx="2" ry="2" />
<text  x="874.99" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (2 samples, 0.01%)</title><rect x="193.7" y="1749" width="0.2" height="15.0" fill="rgb(209,79,49)" rx="2" ry="2" />
<text  x="196.75" y="1759.5" ></text>
</g>
<g >
<title>__pthread_getspecific (2 samples, 0.01%)</title><rect x="471.9" y="1941" width="0.2" height="15.0" fill="rgb(211,80,30)" rx="2" ry="2" />
<text  x="474.93" y="1951.5" ></text>
</g>
<g >
<title>__asan_memset (3 samples, 0.02%)</title><rect x="329.7" y="1957" width="0.2" height="15.0" fill="rgb(237,109,42)" rx="2" ry="2" />
<text  x="332.71" y="1967.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="82.0" y="1349" width="0.1" height="15.0" fill="rgb(254,81,26)" rx="2" ry="2" />
<text  x="85.02" y="1359.5" ></text>
</g>
<g >
<title>wake_up_q (4 samples, 0.02%)</title><rect x="756.9" y="1893" width="0.3" height="15.0" fill="rgb(232,229,41)" rx="2" ry="2" />
<text  x="759.92" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="225.1" y="1621" width="0.1" height="15.0" fill="rgb(243,188,1)" rx="2" ry="2" />
<text  x="228.06" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1186.2" y="1157" width="0.1" height="15.0" fill="rgb(213,45,2)" rx="2" ry="2" />
<text  x="1189.21" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="194.4" y="1477" width="0.1" height="15.0" fill="rgb(211,99,10)" rx="2" ry="2" />
<text  x="197.38" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (423 samples, 2.26%)</title><rect x="138.3" y="1861" width="26.7" height="15.0" fill="rgb(210,38,49)" rx="2" ry="2" />
<text  x="141.33" y="1871.5" >s..</text>
</g>
<g >
<title>[libc-2.27.so] (41 samples, 0.22%)</title><rect x="665.5" y="1861" width="2.5" height="15.0" fill="rgb(229,203,28)" rx="2" ry="2" />
<text  x="668.46" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="166.2" y="1125" width="0.1" height="15.0" fill="rgb(252,53,8)" rx="2" ry="2" />
<text  x="169.16" y="1135.5" ></text>
</g>
<g >
<title>__asan_memcpy (9 samples, 0.05%)</title><rect x="562.7" y="1893" width="0.6" height="15.0" fill="rgb(250,133,8)" rx="2" ry="2" />
<text  x="565.69" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1186.2" y="501" width="0.1" height="15.0" fill="rgb(251,52,12)" rx="2" ry="2" />
<text  x="1189.21" y="511.5" ></text>
</g>
<g >
<title>Eigen::internal::general_matrix_vector_product&lt;long, float, Eigen::internal::const_blas_data_mapper&lt;float, long, 1&gt;, 1, false, float, Eigen::internal::const_blas_data_mapper&lt;float, long, 0&gt;, false, 0&gt;::run (308 samples, 1.65%)</title><rect x="232.1" y="1941" width="19.4" height="15.0" fill="rgb(245,62,18)" rx="2" ry="2" />
<text  x="235.06" y="1951.5" ></text>
</g>
<g >
<title>unmap_page_range (5 samples, 0.03%)</title><rect x="1097.5" y="1909" width="0.3" height="15.0" fill="rgb(222,139,23)" rx="2" ry="2" />
<text  x="1100.46" y="1919.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (8 samples, 0.04%)</title><rect x="758.8" y="2005" width="0.5" height="15.0" fill="rgb(251,59,33)" rx="2" ry="2" />
<text  x="761.81" y="2015.5" ></text>
</g>
<g >
<title>alloc_pages_vma (6 samples, 0.03%)</title><rect x="490.2" y="1845" width="0.3" height="15.0" fill="rgb(205,192,24)" rx="2" ry="2" />
<text  x="493.17" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.0" y="1925" width="0.2" height="15.0" fill="rgb(225,117,26)" rx="2" ry="2" />
<text  x="1190.03" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1186.2" y="1125" width="0.1" height="15.0" fill="rgb(207,92,14)" rx="2" ry="2" />
<text  x="1189.21" y="1135.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (3 samples, 0.02%)</title><rect x="486.4" y="1957" width="0.2" height="15.0" fill="rgb(241,54,31)" rx="2" ry="2" />
<text  x="489.38" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (75 samples, 0.40%)</title><rect x="144.0" y="1733" width="4.7" height="15.0" fill="rgb(250,25,20)" rx="2" ry="2" />
<text  x="147.01" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.0" y="789" width="0.2" height="15.0" fill="rgb(218,124,40)" rx="2" ry="2" />
<text  x="1190.03" y="799.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::json_value::destroy (2 samples, 0.01%)</title><rect x="796.2" y="2037" width="0.2" height="15.0" fill="rgb(210,111,34)" rx="2" ry="2" />
<text  x="799.25" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1186.7" y="1429" width="0.3" height="15.0" fill="rgb(216,127,26)" rx="2" ry="2" />
<text  x="1189.65" y="1439.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (48 samples, 0.26%)</title><rect x="151.5" y="1621" width="3.0" height="15.0" fill="rgb(253,4,4)" rx="2" ry="2" />
<text  x="154.52" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (4 samples, 0.02%)</title><rect x="159.2" y="1749" width="0.2" height="15.0" fill="rgb(211,65,43)" rx="2" ry="2" />
<text  x="162.16" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.02%)</title><rect x="1186.3" y="1781" width="0.3" height="15.0" fill="rgb(225,166,53)" rx="2" ry="2" />
<text  x="1189.34" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (308 samples, 1.65%)</title><rect x="57.9" y="149" width="19.5" height="15.0" fill="rgb(220,61,44)" rx="2" ry="2" />
<text  x="60.91" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="225.0" y="1749" width="0.3" height="15.0" fill="rgb(231,74,27)" rx="2" ry="2" />
<text  x="227.99" y="1759.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="88.1" y="1717" width="0.2" height="15.0" fill="rgb(245,186,45)" rx="2" ry="2" />
<text  x="91.14" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.1" y="117" width="0.1" height="15.0" fill="rgb(242,185,52)" rx="2" ry="2" />
<text  x="1190.10" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="165.8" y="1669" width="0.5" height="15.0" fill="rgb(235,20,52)" rx="2" ry="2" />
<text  x="168.85" y="1679.5" ></text>
</g>
<g >
<title>__madvise (2 samples, 0.01%)</title><rect x="80.6" y="1253" width="0.1" height="15.0" fill="rgb(251,92,23)" rx="2" ry="2" />
<text  x="83.57" y="1263.5" ></text>
</g>
<g >
<title>unmap_single_vma (2 samples, 0.01%)</title><rect x="756.5" y="1861" width="0.1" height="15.0" fill="rgb(211,146,18)" rx="2" ry="2" />
<text  x="759.48" y="1871.5" ></text>
</g>
<g >
<title>__interceptor_memcmp (5 samples, 0.03%)</title><rect x="321.8" y="1941" width="0.3" height="15.0" fill="rgb(215,37,5)" rx="2" ry="2" />
<text  x="324.82" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1186.7" y="901" width="0.3" height="15.0" fill="rgb(234,142,39)" rx="2" ry="2" />
<text  x="1189.72" y="911.5" ></text>
</g>
<g >
<title>onmt::unicode::is_letter (209 samples, 1.12%)</title><rect x="686.2" y="1861" width="13.2" height="15.0" fill="rgb(248,50,50)" rx="2" ry="2" />
<text  x="689.16" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (470 samples, 2.51%)</title><rect x="57.8" y="1701" width="29.7" height="15.0" fill="rgb(254,62,19)" rx="2" ry="2" />
<text  x="60.85" y="1711.5" >[u..</text>
</g>
<g >
<title>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::dump (5 samples, 0.03%)</title><rect x="508.0" y="1973" width="0.3" height="15.0" fill="rgb(223,70,53)" rx="2" ry="2" />
<text  x="510.97" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="165.8" y="1477" width="0.5" height="15.0" fill="rgb(220,165,36)" rx="2" ry="2" />
<text  x="168.85" y="1487.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (3 samples, 0.02%)</title><rect x="159.2" y="1733" width="0.2" height="15.0" fill="rgb(233,135,15)" rx="2" ry="2" />
<text  x="162.22" y="1743.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (1,201 samples, 6.42%)</title><rect x="1018.9" y="2053" width="75.8" height="15.0" fill="rgb(207,211,2)" rx="2" ry="2" />
<text  x="1021.88" y="2063.5" >__saniti..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (5 samples, 0.03%)</title><rect x="93.4" y="2005" width="0.4" height="15.0" fill="rgb(239,47,4)" rx="2" ry="2" />
<text  x="96.45" y="2015.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; const&amp;&gt; (4 samples, 0.02%)</title><rect x="508.7" y="1909" width="0.3" height="15.0" fill="rgb(228,36,39)" rx="2" ry="2" />
<text  x="511.73" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (78 samples, 0.42%)</title><rect x="149.8" y="1637" width="4.9" height="15.0" fill="rgb(238,46,38)" rx="2" ry="2" />
<text  x="152.81" y="1647.5" ></text>
</g>
<g >
<title>wake_up_q (6 samples, 0.03%)</title><rect x="27.4" y="1909" width="0.4" height="15.0" fill="rgb(246,99,39)" rx="2" ry="2" />
<text  x="30.42" y="1919.5" ></text>
</g>
<g >
<title>__dynamic_cast (6 samples, 0.03%)</title><rect x="151.1" y="1621" width="0.4" height="15.0" fill="rgb(225,153,45)" rx="2" ry="2" />
<text  x="154.08" y="1631.5" ></text>
</g>
<g >
<title>__pthread_getspecific (2 samples, 0.01%)</title><rect x="316.5" y="1957" width="0.1" height="15.0" fill="rgb(216,72,42)" rx="2" ry="2" />
<text  x="319.46" y="1967.5" ></text>
</g>
<g >
<title>__libc_read (4 samples, 0.02%)</title><rect x="127.4" y="2037" width="0.3" height="15.0" fill="rgb(212,153,24)" rx="2" ry="2" />
<text  x="130.41" y="2047.5" ></text>
</g>
<g >
<title>__do_page_fault (4 samples, 0.02%)</title><rect x="507.2" y="1909" width="0.3" height="15.0" fill="rgb(206,197,43)" rx="2" ry="2" />
<text  x="510.21" y="1919.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::Unwind (18 samples, 0.10%)</title><rect x="1175.5" y="2037" width="1.2" height="15.0" fill="rgb(211,225,44)" rx="2" ry="2" />
<text  x="1178.55" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (418 samples, 2.24%)</title><rect x="57.8" y="1509" width="26.4" height="15.0" fill="rgb(208,188,44)" rx="2" ry="2" />
<text  x="60.85" y="1519.5" >[..</text>
</g>
<g >
<title>__sanitizer::internal_memmove (17 samples, 0.09%)</title><rect x="477.2" y="1925" width="1.0" height="15.0" fill="rgb(230,218,39)" rx="2" ry="2" />
<text  x="480.16" y="1935.5" ></text>
</g>
<g >
<title>handle_mm_fault (9 samples, 0.05%)</title><rect x="638.9" y="1813" width="0.6" height="15.0" fill="rgb(233,208,40)" rx="2" ry="2" />
<text  x="641.95" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="875.6" y="2021" width="0.1" height="15.0" fill="rgb(238,20,15)" rx="2" ry="2" />
<text  x="878.59" y="2031.5" ></text>
</g>
<g >
<title>fasttext::Vector::addVector (3 samples, 0.02%)</title><rect x="504.1" y="1973" width="0.1" height="15.0" fill="rgb(219,39,36)" rx="2" ry="2" />
<text  x="507.05" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (317 samples, 1.70%)</title><rect x="57.9" y="661" width="20.0" height="15.0" fill="rgb(233,159,51)" rx="2" ry="2" />
<text  x="60.91" y="671.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (3 samples, 0.02%)</title><rect x="89.5" y="1781" width="0.2" height="15.0" fill="rgb(237,44,30)" rx="2" ry="2" />
<text  x="92.47" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (330 samples, 1.77%)</title><rect x="57.9" y="1077" width="20.8" height="15.0" fill="rgb(221,76,10)" rx="2" ry="2" />
<text  x="60.91" y="1087.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (8 samples, 0.04%)</title><rect x="56.4" y="1893" width="0.5" height="15.0" fill="rgb(216,129,41)" rx="2" ry="2" />
<text  x="59.39" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="194.5" y="1285" width="0.1" height="15.0" fill="rgb(234,71,23)" rx="2" ry="2" />
<text  x="197.51" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1187.0" y="661" width="0.2" height="15.0" fill="rgb(209,109,15)" rx="2" ry="2" />
<text  x="1190.03" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_try_char (3 samples, 0.02%)</title><rect x="178.0" y="1717" width="0.2" height="15.0" fill="rgb(233,88,8)" rx="2" ry="2" />
<text  x="181.03" y="1727.5" ></text>
</g>
<g >
<title>do_group_exit (5 samples, 0.03%)</title><rect x="1097.5" y="2005" width="0.3" height="15.0" fill="rgb(219,69,3)" rx="2" ry="2" />
<text  x="1100.46" y="2015.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (3 samples, 0.02%)</title><rect x="188.1" y="1653" width="0.2" height="15.0" fill="rgb(245,169,32)" rx="2" ry="2" />
<text  x="191.07" y="1663.5" ></text>
</g>
<g >
<title>__asan_memcpy (4 samples, 0.02%)</title><rect x="152.8" y="1605" width="0.3" height="15.0" fill="rgb(225,23,33)" rx="2" ry="2" />
<text  x="155.84" y="1615.5" ></text>
</g>
<g >
<title>onmt::unicode::get_lower (8 samples, 0.04%)</title><rect x="606.1" y="1877" width="0.5" height="15.0" fill="rgb(241,7,12)" rx="2" ry="2" />
<text  x="609.06" y="1887.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (3 samples, 0.02%)</title><rect x="138.6" y="1637" width="0.2" height="15.0" fill="rgb(251,51,32)" rx="2" ry="2" />
<text  x="141.64" y="1647.5" ></text>
</g>
<g >
<title>unmap_vmas (5 samples, 0.03%)</title><rect x="1097.5" y="1941" width="0.3" height="15.0" fill="rgb(218,54,3)" rx="2" ry="2" />
<text  x="1100.46" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (84 samples, 0.45%)</title><rect x="178.2" y="1733" width="5.3" height="15.0" fill="rgb(246,197,37)" rx="2" ry="2" />
<text  x="181.22" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1186.4" y="453" width="0.2" height="15.0" fill="rgb(214,30,47)" rx="2" ry="2" />
<text  x="1189.40" y="463.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (35 samples, 0.19%)</title><rect x="1110.3" y="2037" width="2.2" height="15.0" fill="rgb(216,109,24)" rx="2" ry="2" />
<text  x="1113.28" y="2047.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.04%)</title><rect x="192.4" y="1653" width="0.4" height="15.0" fill="rgb(215,70,40)" rx="2" ry="2" />
<text  x="195.36" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.0" y="741" width="0.2" height="15.0" fill="rgb(215,225,39)" rx="2" ry="2" />
<text  x="1190.03" y="751.5" ></text>
</g>
<g >
<title>[unknown] (307 samples, 1.64%)</title><rect x="57.9" y="117" width="19.4" height="15.0" fill="rgb(233,8,45)" rx="2" ry="2" />
<text  x="60.91" y="127.5" ></text>
</g>
<g >
<title>__interceptor___strxfrm_l (139 samples, 0.74%)</title><rect x="1162.0" y="2037" width="8.7" height="15.0" fill="rgb(245,43,1)" rx="2" ry="2" />
<text  x="1164.97" y="2047.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (3 samples, 0.02%)</title><rect x="577.8" y="1877" width="0.2" height="15.0" fill="rgb(254,37,41)" rx="2" ry="2" />
<text  x="580.78" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (7 samples, 0.04%)</title><rect x="165.2" y="1861" width="0.4" height="15.0" fill="rgb(251,134,20)" rx="2" ry="2" />
<text  x="168.15" y="1871.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (2 samples, 0.01%)</title><rect x="82.0" y="1317" width="0.1" height="15.0" fill="rgb(254,7,29)" rx="2" ry="2" />
<text  x="85.02" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1186.2" y="1141" width="0.1" height="15.0" fill="rgb(216,70,30)" rx="2" ry="2" />
<text  x="1189.21" y="1151.5" ></text>
</g>
<g >
<title>clear_page_erms (7 samples, 0.04%)</title><rect x="936.6" y="1893" width="0.4" height="15.0" fill="rgb(227,195,39)" rx="2" ry="2" />
<text  x="939.57" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.02%)</title><rect x="1186.8" y="69" width="0.2" height="15.0" fill="rgb(252,106,31)" rx="2" ry="2" />
<text  x="1189.78" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="165.9" y="1221" width="0.1" height="15.0" fill="rgb(213,147,33)" rx="2" ry="2" />
<text  x="168.91" y="1231.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="177.5" y="1589" width="0.2" height="15.0" fill="rgb(206,0,46)" rx="2" ry="2" />
<text  x="180.53" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="225.1" y="1445" width="0.1" height="15.0" fill="rgb(228,74,34)" rx="2" ry="2" />
<text  x="228.06" y="1455.5" ></text>
</g>
<g >
<title>std::basic_ifstream&lt;char, std::char_traits&lt;char&gt; &gt;::~basic_ifstream (28 samples, 0.15%)</title><rect x="869.5" y="2037" width="1.7" height="15.0" fill="rgb(210,30,34)" rx="2" ry="2" />
<text  x="872.47" y="2047.5" ></text>
</g>
<g >
<title>__asan_memset (25 samples, 0.13%)</title><rect x="669.5" y="1861" width="1.6" height="15.0" fill="rgb(239,223,4)" rx="2" ry="2" />
<text  x="672.50" y="1871.5" ></text>
</g>
<g >
<title>__asan_memcpy (3 samples, 0.02%)</title><rect x="191.1" y="1653" width="0.2" height="15.0" fill="rgb(217,203,7)" rx="2" ry="2" />
<text  x="194.10" y="1663.5" ></text>
</g>
<g >
<title>flush_tlb_mm_range (2 samples, 0.01%)</title><rect x="82.0" y="1205" width="0.1" height="15.0" fill="rgb(219,139,34)" rx="2" ry="2" />
<text  x="85.02" y="1215.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (2 samples, 0.01%)</title><rect x="170.8" y="1541" width="0.2" height="15.0" fill="rgb(212,14,16)" rx="2" ry="2" />
<text  x="173.83" y="1551.5" ></text>
</g>
<g >
<title>__vma_adjust (2 samples, 0.01%)</title><rect x="1097.0" y="1909" width="0.1" height="15.0" fill="rgb(238,38,7)" rx="2" ry="2" />
<text  x="1100.02" y="1919.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="91.1" y="1877" width="0.1" height="15.0" fill="rgb(220,127,27)" rx="2" ry="2" />
<text  x="94.11" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1187.0" y="1765" width="0.2" height="15.0" fill="rgb(238,168,49)" rx="2" ry="2" />
<text  x="1190.03" y="1775.5" ></text>
</g>
<g >
<title>__sanitizer::StackTrace::GetCurrentPc (3 samples, 0.02%)</title><rect x="1178.4" y="2037" width="0.2" height="15.0" fill="rgb(250,169,45)" rx="2" ry="2" />
<text  x="1181.45" y="2047.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (5 samples, 0.03%)</title><rect x="1097.5" y="2021" width="0.3" height="15.0" fill="rgb(229,182,38)" rx="2" ry="2" />
<text  x="1100.46" y="2031.5" ></text>
</g>
<g >
<title>onmt::unicode::is_letter (11 samples, 0.06%)</title><rect x="724.3" y="1893" width="0.7" height="15.0" fill="rgb(232,143,29)" rx="2" ry="2" />
<text  x="727.29" y="1903.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.01%)</title><rect x="330.5" y="1989" width="0.1" height="15.0" fill="rgb(208,107,53)" rx="2" ry="2" />
<text  x="333.47" y="1999.5" ></text>
</g>
<g >
<title>wp_page_copy (18 samples, 0.10%)</title><rect x="56.3" y="1925" width="1.1" height="15.0" fill="rgb(215,220,51)" rx="2" ry="2" />
<text  x="59.27" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1186.2" y="293" width="0.1" height="15.0" fill="rgb(240,125,38)" rx="2" ry="2" />
<text  x="1189.21" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (5 samples, 0.03%)</title><rect x="205.2" y="1589" width="0.4" height="15.0" fill="rgb(215,89,53)" rx="2" ry="2" />
<text  x="208.24" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="165.9" y="1253" width="0.1" height="15.0" fill="rgb(239,58,28)" rx="2" ry="2" />
<text  x="168.91" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="165.9" y="1333" width="0.4" height="15.0" fill="rgb(216,20,41)" rx="2" ry="2" />
<text  x="168.91" y="1343.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (67 samples, 0.36%)</title><rect x="729.1" y="1877" width="4.2" height="15.0" fill="rgb(242,12,50)" rx="2" ry="2" />
<text  x="732.08" y="1887.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::Unwind (2 samples, 0.01%)</title><rect x="175.8" y="1573" width="0.1" height="15.0" fill="rgb(231,179,53)" rx="2" ry="2" />
<text  x="178.76" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (446 samples, 2.39%)</title><rect x="57.8" y="1605" width="28.2" height="15.0" fill="rgb(251,103,24)" rx="2" ry="2" />
<text  x="60.85" y="1615.5" >[..</text>
</g>
<g >
<title>alloc_pages_vma (2 samples, 0.01%)</title><rect x="643.4" y="1781" width="0.1" height="15.0" fill="rgb(228,71,23)" rx="2" ry="2" />
<text  x="646.36" y="1791.5" ></text>
</g>
<g >
<title>std::__merge_sort_with_buffer&lt;__gnu_cxx::__normal_iterator&lt;TDocument*, std::vector&lt;TDocument, std::allocator&lt;TDocument&gt; &gt; &gt;, TDocument*, __gnu_cxx::__ops::_Iter_comp_iter&lt;main::$_1&gt; &gt; (5 samples, 0.03%)</title><rect x="509.4" y="1989" width="0.3" height="15.0" fill="rgb(252,228,20)" rx="2" ry="2" />
<text  x="512.36" y="1999.5" ></text>
</g>
<g >
<title>unmap_region (4 samples, 0.02%)</title><rect x="756.4" y="1893" width="0.2" height="15.0" fill="rgb(236,195,50)" rx="2" ry="2" />
<text  x="759.35" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1186.6" y="1765" width="0.4" height="15.0" fill="rgb(234,195,40)" rx="2" ry="2" />
<text  x="1189.59" y="1775.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (9 samples, 0.05%)</title><rect x="1117.3" y="2037" width="0.6" height="15.0" fill="rgb(212,175,14)" rx="2" ry="2" />
<text  x="1120.35" y="2047.5" ></text>
</g>
<g >
<title>__vfs_read (2 samples, 0.01%)</title><rect x="1105.5" y="1941" width="0.2" height="15.0" fill="rgb(231,126,33)" rx="2" ry="2" />
<text  x="1108.54" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (81 samples, 0.43%)</title><rect x="167.1" y="1621" width="5.1" height="15.0" fill="rgb(207,226,7)" rx="2" ry="2" />
<text  x="170.11" y="1631.5" ></text>
</g>
<g >
<title>__schedule (6 samples, 0.03%)</title><rect x="27.8" y="1925" width="0.4" height="15.0" fill="rgb(208,43,29)" rx="2" ry="2" />
<text  x="30.80" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="194.4" y="1765" width="0.2" height="15.0" fill="rgb(205,212,3)" rx="2" ry="2" />
<text  x="197.38" y="1775.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (3 samples, 0.02%)</title><rect x="43.3" y="2005" width="0.2" height="15.0" fill="rgb(234,147,54)" rx="2" ry="2" />
<text  x="46.27" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (320 samples, 1.71%)</title><rect x="57.9" y="805" width="20.2" height="15.0" fill="rgb(244,87,45)" rx="2" ry="2" />
<text  x="60.91" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.0" y="1253" width="0.2" height="15.0" fill="rgb(211,22,35)" rx="2" ry="2" />
<text  x="1190.03" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1186.7" y="1525" width="0.3" height="15.0" fill="rgb(220,10,3)" rx="2" ry="2" />
<text  x="1189.65" y="1535.5" ></text>
</g>
<g >
<title>do_page_fault (13 samples, 0.07%)</title><rect x="638.7" y="1845" width="0.8" height="15.0" fill="rgb(228,126,36)" rx="2" ry="2" />
<text  x="641.69" y="1855.5" ></text>
</g>
<g >
<title>call_rwsem_wake (4 samples, 0.02%)</title><rect x="756.9" y="1925" width="0.3" height="15.0" fill="rgb(222,153,47)" rx="2" ry="2" />
<text  x="759.92" y="1935.5" ></text>
</g>
<g >
<title>__pthread_getspecific (6 samples, 0.03%)</title><rect x="147.1" y="1589" width="0.4" height="15.0" fill="rgb(242,84,0)" rx="2" ry="2" />
<text  x="150.10" y="1599.5" ></text>
</g>
<g >
<title>onmt::unicode::is_letter (177 samples, 0.95%)</title><rect x="606.6" y="1877" width="11.1" height="15.0" fill="rgb(219,196,6)" rx="2" ry="2" />
<text  x="609.56" y="1887.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThreadStats (25 samples, 0.13%)</title><rect x="122.2" y="2037" width="1.5" height="15.0" fill="rgb(213,142,16)" rx="2" ry="2" />
<text  x="125.17" y="2047.5" ></text>
</g>
<g >
<title>__asan::AsanTSDGet (2 samples, 0.01%)</title><rect x="208.8" y="1605" width="0.2" height="15.0" fill="rgb(250,49,36)" rx="2" ry="2" />
<text  x="211.83" y="1615.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="93.0" y="1957" width="0.1" height="15.0" fill="rgb(221,83,33)" rx="2" ry="2" />
<text  x="96.01" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_quantifier (3 samples, 0.02%)</title><rect x="148.8" y="1749" width="0.2" height="15.0" fill="rgb(212,159,14)" rx="2" ry="2" />
<text  x="151.80" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (87 samples, 0.47%)</title><rect x="211.9" y="1701" width="5.5" height="15.0" fill="rgb(238,32,12)" rx="2" ry="2" />
<text  x="214.86" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.0" y="501" width="0.2" height="15.0" fill="rgb(205,174,39)" rx="2" ry="2" />
<text  x="1190.03" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_Alloc_node&gt; (4 samples, 0.02%)</title><rect x="508.7" y="1941" width="0.3" height="15.0" fill="rgb(238,17,42)" rx="2" ry="2" />
<text  x="511.73" y="1951.5" ></text>
</g>
<g >
<title>__asan_memcpy (2 samples, 0.01%)</title><rect x="141.5" y="1557" width="0.1" height="15.0" fill="rgb(208,96,29)" rx="2" ry="2" />
<text  x="144.48" y="1567.5" ></text>
</g>
<g >
<title>on_each_cpu_cond_mask (3 samples, 0.02%)</title><rect x="57.2" y="1861" width="0.2" height="15.0" fill="rgb(206,206,54)" rx="2" ry="2" />
<text  x="60.22" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1186.2" y="421" width="0.1" height="15.0" fill="rgb(243,201,37)" rx="2" ry="2" />
<text  x="1189.21" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (61 samples, 0.33%)</title><rect x="155.3" y="1781" width="3.9" height="15.0" fill="rgb(220,69,5)" rx="2" ry="2" />
<text  x="158.31" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (83 samples, 0.44%)</title><rect x="178.3" y="1653" width="5.2" height="15.0" fill="rgb(240,59,19)" rx="2" ry="2" />
<text  x="181.28" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="194.5" y="1381" width="0.1" height="15.0" fill="rgb(228,47,27)" rx="2" ry="2" />
<text  x="197.51" y="1391.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (9 samples, 0.05%)</title><rect x="1114.9" y="2053" width="0.6" height="15.0" fill="rgb(226,67,10)" rx="2" ry="2" />
<text  x="1117.95" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.0" y="1733" width="0.2" height="15.0" fill="rgb(250,43,11)" rx="2" ry="2" />
<text  x="1190.03" y="1743.5" ></text>
</g>
<g >
<title>Eigen::internal::generic_product_impl&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt;, Eigen::DenseShape, Eigen::DenseShape, 8&gt;::scaleAndAddTo&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt; (3 samples, 0.02%)</title><rect x="194.9" y="1989" width="0.2" height="15.0" fill="rgb(224,205,35)" rx="2" ry="2" />
<text  x="197.95" y="1999.5" ></text>
</g>
<g >
<title>x2apic_send_IPI (3 samples, 0.02%)</title><rect x="57.2" y="1765" width="0.2" height="15.0" fill="rgb(238,136,28)" rx="2" ry="2" />
<text  x="60.22" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (338 samples, 1.81%)</title><rect x="57.9" y="1173" width="21.3" height="15.0" fill="rgb(254,137,8)" rx="2" ry="2" />
<text  x="60.91" y="1183.5" >[..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_Compiler (467 samples, 2.50%)</title><rect x="195.3" y="1941" width="29.5" height="15.0" fill="rgb(251,32,27)" rx="2" ry="2" />
<text  x="198.33" y="1951.5" >st..</text>
</g>
<g >
<title>smp_call_function_single (25 samples, 0.13%)</title><rect x="940.0" y="1829" width="1.6" height="15.0" fill="rgb(242,119,49)" rx="2" ry="2" />
<text  x="943.04" y="1839.5" ></text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.02%)</title><rect x="209.7" y="1605" width="0.1" height="15.0" fill="rgb(228,202,17)" rx="2" ry="2" />
<text  x="212.65" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.0" y="933" width="0.2" height="15.0" fill="rgb(227,169,11)" rx="2" ry="2" />
<text  x="1190.03" y="943.5" ></text>
</g>
<g >
<title>onmt::get_alphabet_id (8 samples, 0.04%)</title><rect x="644.6" y="1877" width="0.5" height="15.0" fill="rgb(251,60,32)" rx="2" ry="2" />
<text  x="647.56" y="1887.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="177.9" y="1605" width="0.1" height="15.0" fill="rgb(236,75,30)" rx="2" ry="2" />
<text  x="180.90" y="1615.5" ></text>
</g>
<g >
<title>__interceptor_memcpy (7 samples, 0.04%)</title><rect x="1118.0" y="2037" width="0.4" height="15.0" fill="rgb(236,65,1)" rx="2" ry="2" />
<text  x="1120.98" y="2047.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (2 samples, 0.01%)</title><rect x="1097.2" y="1877" width="0.1" height="15.0" fill="rgb(217,143,53)" rx="2" ry="2" />
<text  x="1100.21" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (78 samples, 0.42%)</title><rect x="159.5" y="1797" width="4.9" height="15.0" fill="rgb(218,216,45)" rx="2" ry="2" />
<text  x="162.47" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1186.6" y="1973" width="0.4" height="15.0" fill="rgb(214,219,11)" rx="2" ry="2" />
<text  x="1189.59" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1186.2" y="1669" width="0.1" height="15.0" fill="rgb(214,112,20)" rx="2" ry="2" />
<text  x="1189.21" y="1679.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="82.6" y="1397" width="0.1" height="15.0" fill="rgb(224,188,25)" rx="2" ry="2" />
<text  x="85.59" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.0" y="1205" width="0.2" height="15.0" fill="rgb(243,219,29)" rx="2" ry="2" />
<text  x="1190.03" y="1215.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::Unwind (3 samples, 0.02%)</title><rect x="141.9" y="1557" width="0.2" height="15.0" fill="rgb(216,190,5)" rx="2" ry="2" />
<text  x="144.92" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1187.0" y="421" width="0.2" height="15.0" fill="rgb(216,47,19)" rx="2" ry="2" />
<text  x="1190.03" y="431.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (6 samples, 0.03%)</title><rect x="667.7" y="1765" width="0.3" height="15.0" fill="rgb(222,153,38)" rx="2" ry="2" />
<text  x="670.67" y="1775.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (4 samples, 0.02%)</title><rect x="214.6" y="1637" width="0.3" height="15.0" fill="rgb(244,54,30)" rx="2" ry="2" />
<text  x="217.64" y="1647.5" ></text>
</g>
<g >
<title>mem_cgroup_throttle_swaprate (7 samples, 0.04%)</title><rect x="938.0" y="1909" width="0.4" height="15.0" fill="rgb(207,61,33)" rx="2" ry="2" />
<text  x="940.95" y="1919.5" ></text>
</g>
<g >
<title>TDocument::TDocument (2 samples, 0.01%)</title><rect x="517.2" y="1989" width="0.1" height="15.0" fill="rgb(229,38,24)" rx="2" ry="2" />
<text  x="520.18" y="1999.5" ></text>
</g>
<g >
<title>arch_tlb_finish_mmu (6 samples, 0.03%)</title><rect x="1096.4" y="1877" width="0.4" height="15.0" fill="rgb(218,105,3)" rx="2" ry="2" />
<text  x="1099.39" y="1887.5" ></text>
</g>
<g >
<title>__do_page_fault (4 samples, 0.02%)</title><rect x="107.8" y="1989" width="0.3" height="15.0" fill="rgb(230,5,53)" rx="2" ry="2" />
<text  x="110.84" y="1999.5" ></text>
</g>
<g >
<title>__asan::AsanThread::stack_top (3 samples, 0.02%)</title><rect x="220.1" y="1669" width="0.2" height="15.0" fill="rgb(240,13,47)" rx="2" ry="2" />
<text  x="223.13" y="1679.5" ></text>
</g>
<g >
<title>[tgnews] (239 samples, 1.28%)</title><rect x="28.2" y="2053" width="15.1" height="15.0" fill="rgb(240,208,6)" rx="2" ry="2" />
<text  x="31.18" y="2063.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThreadStats (31 samples, 0.17%)</title><rect x="967.4" y="2053" width="1.9" height="15.0" fill="rgb(250,117,8)" rx="2" ry="2" />
<text  x="970.37" y="2063.5" ></text>
</g>
<g >
<title>__pthread_getspecific (2 samples, 0.01%)</title><rect x="175.6" y="1573" width="0.1" height="15.0" fill="rgb(251,151,12)" rx="2" ry="2" />
<text  x="178.57" y="1583.5" ></text>
</g>
<g >
<title>__asan_memset (12 samples, 0.06%)</title><rect x="580.1" y="1877" width="0.8" height="15.0" fill="rgb(245,108,24)" rx="2" ry="2" />
<text  x="583.12" y="1887.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (22 samples, 0.12%)</title><rect x="755.8" y="1957" width="1.4" height="15.0" fill="rgb(213,102,4)" rx="2" ry="2" />
<text  x="758.78" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="194.4" y="1525" width="0.1" height="15.0" fill="rgb(209,31,42)" rx="2" ry="2" />
<text  x="197.38" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.05%)</title><rect x="165.8" y="1829" width="0.6" height="15.0" fill="rgb(243,155,50)" rx="2" ry="2" />
<text  x="168.85" y="1839.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (2 samples, 0.01%)</title><rect x="91.6" y="1877" width="0.1" height="15.0" fill="rgb(229,187,50)" rx="2" ry="2" />
<text  x="94.62" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (86 samples, 0.46%)</title><rect x="138.5" y="1717" width="5.4" height="15.0" fill="rgb(247,72,48)" rx="2" ry="2" />
<text  x="141.45" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1186.7" y="1125" width="0.3" height="15.0" fill="rgb(250,107,4)" rx="2" ry="2" />
<text  x="1189.72" y="1135.5" ></text>
</g>
<g >
<title>__do_page_fault (13 samples, 0.07%)</title><rect x="638.7" y="1829" width="0.8" height="15.0" fill="rgb(250,164,28)" rx="2" ry="2" />
<text  x="641.69" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="1186.3" y="1557" width="0.3" height="15.0" fill="rgb(214,110,16)" rx="2" ry="2" />
<text  x="1189.34" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1186.7" y="1477" width="0.3" height="15.0" fill="rgb(234,68,30)" rx="2" ry="2" />
<text  x="1189.65" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1186.4" y="341" width="0.2" height="15.0" fill="rgb(218,91,51)" rx="2" ry="2" />
<text  x="1189.40" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (75 samples, 0.40%)</title><rect x="144.0" y="1653" width="4.7" height="15.0" fill="rgb(237,136,24)" rx="2" ry="2" />
<text  x="147.01" y="1663.5" ></text>
</g>
<g >
<title>page_fault (29 samples, 0.16%)</title><rect x="489.2" y="1925" width="1.9" height="15.0" fill="rgb(233,8,19)" rx="2" ry="2" />
<text  x="492.22" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt;,  (13 samples, 0.07%)</title><rect x="165.7" y="1957" width="0.8" height="15.0" fill="rgb(205,167,41)" rx="2" ry="2" />
<text  x="168.72" y="1967.5" ></text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::get (45 samples, 0.24%)</title><rect x="131.4" y="1925" width="2.8" height="15.0" fill="rgb(242,18,37)" rx="2" ry="2" />
<text  x="134.38" y="1935.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (924 samples, 4.94%)</title><rect x="810.8" y="2005" width="58.3" height="15.0" fill="rgb(209,142,2)" rx="2" ry="2" />
<text  x="813.76" y="2015.5" >__sani..</text>
</g>
<g >
<title>Eigen::internal::product_evaluator&lt;Eigen::Product&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt;, 0&gt;, 8, Eigen::DenseShape, Eigen::DenseShape, float, float&gt;::product_evaluator (168 samples, 0.90%)</title><rect x="488.8" y="1957" width="10.6" height="15.0" fill="rgb(209,150,16)" rx="2" ry="2" />
<text  x="491.78" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1186.2" y="1461" width="0.1" height="15.0" fill="rgb(209,9,23)" rx="2" ry="2" />
<text  x="1189.21" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1186.6" y="1813" width="0.4" height="15.0" fill="rgb(242,182,53)" rx="2" ry="2" />
<text  x="1189.59" y="1823.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="77.5" y="357" width="0.2" height="15.0" fill="rgb(244,35,0)" rx="2" ry="2" />
<text  x="80.54" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1186.4" y="357" width="0.2" height="15.0" fill="rgb(234,8,11)" rx="2" ry="2" />
<text  x="1189.40" y="367.5" ></text>
</g>
<g >
<title>__interceptor_strlen (75 samples, 0.40%)</title><rect x="738.2" y="1877" width="4.8" height="15.0" fill="rgb(234,144,14)" rx="2" ry="2" />
<text  x="741.24" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1186.6" y="1797" width="0.4" height="15.0" fill="rgb(210,176,25)" rx="2" ry="2" />
<text  x="1189.59" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="57.6" y="1381" width="0.1" height="15.0" fill="rgb(241,10,21)" rx="2" ry="2" />
<text  x="60.59" y="1391.5" ></text>
</g>
<g >
<title>[unknown] (8 samples, 0.04%)</title><rect x="758.8" y="2021" width="0.5" height="15.0" fill="rgb(234,100,7)" rx="2" ry="2" />
<text  x="761.81" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_BracketMatcher (2 samples, 0.01%)</title><rect x="159.3" y="1685" width="0.1" height="15.0" fill="rgb(205,184,34)" rx="2" ry="2" />
<text  x="162.28" y="1695.5" ></text>
</g>
<g >
<title>__lsan::LsanMetadata::allocated (6 samples, 0.03%)</title><rect x="510.7" y="2037" width="0.4" height="15.0" fill="rgb(225,113,4)" rx="2" ry="2" />
<text  x="513.75" y="2047.5" ></text>
</g>
<g >
<title>wp_page_copy (86 samples, 0.46%)</title><rect x="936.3" y="1941" width="5.4" height="15.0" fill="rgb(209,96,5)" rx="2" ry="2" />
<text  x="939.31" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (311 samples, 1.66%)</title><rect x="57.9" y="357" width="19.6" height="15.0" fill="rgb(211,82,51)" rx="2" ry="2" />
<text  x="60.91" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1186.2" y="805" width="0.1" height="15.0" fill="rgb(225,127,38)" rx="2" ry="2" />
<text  x="1189.21" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (330 samples, 1.77%)</title><rect x="138.3" y="1797" width="20.9" height="15.0" fill="rgb(252,67,4)" rx="2" ry="2" />
<text  x="141.33" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (317 samples, 1.70%)</title><rect x="57.9" y="645" width="20.0" height="15.0" fill="rgb(235,189,23)" rx="2" ry="2" />
<text  x="60.91" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare@plt (3 samples, 0.02%)</title><rect x="743.0" y="1893" width="0.2" height="15.0" fill="rgb(234,8,46)" rx="2" ry="2" />
<text  x="745.97" y="1903.5" ></text>
</g>
<g >
<title>TAgencyRating::ScoreUrl (445 samples, 2.38%)</title><rect x="166.5" y="1973" width="28.1" height="15.0" fill="rgb(224,208,17)" rx="2" ry="2" />
<text  x="169.54" y="1983.5" >T..</text>
</g>
<g >
<title>[unknown] (308 samples, 1.65%)</title><rect x="57.9" y="165" width="19.5" height="15.0" fill="rgb(238,17,20)" rx="2" ry="2" />
<text  x="60.91" y="175.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&gt;::ReleaseFreeMemoryToOS&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&gt;::MemoryMapper&gt; (15 samples, 0.08%)</title><rect x="1017.2" y="2053" width="1.0" height="15.0" fill="rgb(214,203,0)" rx="2" ry="2" />
<text  x="1020.24" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (3 samples, 0.02%)</title><rect x="224.2" y="1797" width="0.2" height="15.0" fill="rgb(230,48,7)" rx="2" ry="2" />
<text  x="227.24" y="1807.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::emplace_back&lt;char const*&amp;, unsigned int&amp;&gt; (8 samples, 0.04%)</title><rect x="619.6" y="1877" width="0.5" height="15.0" fill="rgb(222,194,23)" rx="2" ry="2" />
<text  x="622.63" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="57.6" y="1765" width="0.1" height="15.0" fill="rgb(236,74,54)" rx="2" ry="2" />
<text  x="60.59" y="1775.5" ></text>
</g>
<g >
<title>__asan_memcpy (6 samples, 0.03%)</title><rect x="180.7" y="1589" width="0.4" height="15.0" fill="rgb(231,5,39)" rx="2" ry="2" />
<text  x="183.74" y="1599.5" ></text>
</g>
<g >
<title>do_page_fault (83 samples, 0.44%)</title><rect x="21.4" y="2021" width="5.2" height="15.0" fill="rgb(206,166,2)" rx="2" ry="2" />
<text  x="24.36" y="2031.5" ></text>
</g>
<g >
<title>page_fault (3 samples, 0.02%)</title><rect x="561.1" y="1877" width="0.1" height="15.0" fill="rgb(235,210,0)" rx="2" ry="2" />
<text  x="564.05" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="194.5" y="1397" width="0.1" height="15.0" fill="rgb(229,177,34)" rx="2" ry="2" />
<text  x="197.51" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1186.2" y="549" width="0.1" height="15.0" fill="rgb(241,156,53)" rx="2" ry="2" />
<text  x="1189.21" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (450 samples, 2.41%)</title><rect x="195.4" y="1893" width="28.4" height="15.0" fill="rgb(238,83,28)" rx="2" ry="2" />
<text  x="198.39" y="1903.5" >st..</text>
</g>
<g >
<title>unmap_page_range (2 samples, 0.01%)</title><rect x="91.6" y="1781" width="0.1" height="15.0" fill="rgb(208,33,13)" rx="2" ry="2" />
<text  x="94.62" y="1791.5" ></text>
</g>
<g >
<title>do_page_fault (3 samples, 0.02%)</title><rect x="1018.6" y="2021" width="0.2" height="15.0" fill="rgb(252,196,26)" rx="2" ry="2" />
<text  x="1021.56" y="2031.5" ></text>
</g>
<g >
<title>__asan::AsanTSDGet (12 samples, 0.06%)</title><rect x="119.9" y="2037" width="0.8" height="15.0" fill="rgb(220,110,1)" rx="2" ry="2" />
<text  x="122.90" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (3 samples, 0.02%)</title><rect x="224.2" y="1781" width="0.2" height="15.0" fill="rgb(252,128,4)" rx="2" ry="2" />
<text  x="227.24" y="1791.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (4 samples, 0.02%)</title><rect x="220.4" y="1669" width="0.3" height="15.0" fill="rgb(232,160,34)" rx="2" ry="2" />
<text  x="223.45" y="1679.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (9 samples, 0.05%)</title><rect x="875.0" y="2005" width="0.5" height="15.0" fill="rgb(235,41,13)" rx="2" ry="2" />
<text  x="877.96" y="2015.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (7 samples, 0.04%)</title><rect x="1120.6" y="2037" width="0.4" height="15.0" fill="rgb(219,161,0)" rx="2" ry="2" />
<text  x="1123.57" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.0" y="693" width="0.2" height="15.0" fill="rgb(232,27,41)" rx="2" ry="2" />
<text  x="1190.03" y="703.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="57.6" y="1669" width="0.1" height="15.0" fill="rgb(216,16,42)" rx="2" ry="2" />
<text  x="60.59" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1186.4" y="1237" width="0.2" height="15.0" fill="rgb(229,108,21)" rx="2" ry="2" />
<text  x="1189.40" y="1247.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&gt;::GetFromAllocator (16 samples, 0.09%)</title><rect x="754.3" y="2037" width="1.0" height="15.0" fill="rgb(246,138,53)" rx="2" ry="2" />
<text  x="757.33" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (427 samples, 2.28%)</title><rect x="57.8" y="1541" width="27.0" height="15.0" fill="rgb(229,12,20)" rx="2" ry="2" />
<text  x="60.85" y="1551.5" >[..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="194.3" y="1829" width="0.3" height="15.0" fill="rgb(211,223,47)" rx="2" ry="2" />
<text  x="197.32" y="1839.5" ></text>
</g>
<g >
<title>zap_page_range (20 samples, 0.11%)</title><rect x="512.5" y="1973" width="1.3" height="15.0" fill="rgb(218,26,35)" rx="2" ry="2" />
<text  x="515.51" y="1983.5" ></text>
</g>
<g >
<title>memcpy (2 samples, 0.01%)</title><rect x="1121.7" y="2037" width="0.1" height="15.0" fill="rgb(244,52,8)" rx="2" ry="2" />
<text  x="1124.70" y="2047.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (2 samples, 0.01%)</title><rect x="169.2" y="1541" width="0.1" height="15.0" fill="rgb(213,212,5)" rx="2" ry="2" />
<text  x="172.19" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="1186.8" y="149" width="0.2" height="15.0" fill="rgb(216,150,25)" rx="2" ry="2" />
<text  x="1189.78" y="159.5" ></text>
</g>
<g >
<title>page_fault (36 samples, 0.19%)</title><rect x="499.4" y="1957" width="2.3" height="15.0" fill="rgb(209,172,20)" rx="2" ry="2" />
<text  x="502.38" y="1967.5" ></text>
</g>
<g >
<title>std::has_facet&lt;std::num_get&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (2 samples, 0.01%)</title><rect x="101.2" y="2021" width="0.1" height="15.0" fill="rgb(206,99,30)" rx="2" ry="2" />
<text  x="104.21" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1186.7" y="245" width="0.3" height="15.0" fill="rgb(209,166,31)" rx="2" ry="2" />
<text  x="1189.72" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="165.8" y="1573" width="0.5" height="15.0" fill="rgb(214,140,14)" rx="2" ry="2" />
<text  x="168.85" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="194.5" y="1605" width="0.1" height="15.0" fill="rgb(215,140,11)" rx="2" ry="2" />
<text  x="197.51" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="194.5" y="1589" width="0.1" height="15.0" fill="rgb(254,201,10)" rx="2" ry="2" />
<text  x="197.51" y="1599.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (8 samples, 0.04%)</title><rect x="87.5" y="1701" width="0.5" height="15.0" fill="rgb(238,64,0)" rx="2" ry="2" />
<text  x="90.51" y="1711.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::do_tolower (2 samples, 0.01%)</title><rect x="148.4" y="1605" width="0.2" height="15.0" fill="rgb(253,80,18)" rx="2" ry="2" />
<text  x="151.43" y="1615.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::create&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (3 samples, 0.02%)</title><rect x="796.1" y="2037" width="0.1" height="15.0" fill="rgb(211,171,40)" rx="2" ry="2" />
<text  x="799.06" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1186.2" y="1333" width="0.1" height="15.0" fill="rgb(223,34,11)" rx="2" ry="2" />
<text  x="1189.21" y="1343.5" ></text>
</g>
<g >
<title>[unknown] (527 samples, 2.82%)</title><rect x="57.8" y="1877" width="33.3" height="15.0" fill="rgb(241,82,52)" rx="2" ry="2" />
<text  x="60.85" y="1887.5" >[u..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="224.9" y="1941" width="0.4" height="15.0" fill="rgb(253,206,33)" rx="2" ry="2" />
<text  x="227.87" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.02%)</title><rect x="796.1" y="2021" width="0.1" height="15.0" fill="rgb(247,89,46)" rx="2" ry="2" />
<text  x="799.06" y="2031.5" ></text>
</g>
<g >
<title>try_to_wake_up (6 samples, 0.03%)</title><rect x="27.4" y="1893" width="0.4" height="15.0" fill="rgb(206,64,50)" rx="2" ry="2" />
<text  x="30.42" y="1903.5" ></text>
</g>
<g >
<title>__pthread_getspecific (5 samples, 0.03%)</title><rect x="604.4" y="1845" width="0.3" height="15.0" fill="rgb(243,168,24)" rx="2" ry="2" />
<text  x="607.42" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.0" y="1365" width="0.2" height="15.0" fill="rgb(249,176,13)" rx="2" ry="2" />
<text  x="1190.03" y="1375.5" ></text>
</g>
<g >
<title>__asan::AsanChunk::UsedSize (56 samples, 0.30%)</title><rect x="958.3" y="2053" width="3.6" height="15.0" fill="rgb(211,166,2)" rx="2" ry="2" />
<text  x="961.34" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (9 samples, 0.05%)</title><rect x="809.6" y="2005" width="0.5" height="15.0" fill="rgb(241,161,2)" rx="2" ry="2" />
<text  x="812.56" y="2015.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (7 samples, 0.04%)</title><rect x="604.7" y="1845" width="0.5" height="15.0" fill="rgb(241,114,53)" rx="2" ry="2" />
<text  x="607.73" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1186.7" y="405" width="0.3" height="15.0" fill="rgb(239,149,21)" rx="2" ry="2" />
<text  x="1189.72" y="415.5" ></text>
</g>
<g >
<title>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::dump (5 samples, 0.03%)</title><rect x="508.0" y="1957" width="0.3" height="15.0" fill="rgb(206,48,35)" rx="2" ry="2" />
<text  x="510.97" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1186.2" y="213" width="0.1" height="15.0" fill="rgb(236,129,25)" rx="2" ry="2" />
<text  x="1189.21" y="223.5" ></text>
</g>
<g >
<title>page_fault (134 samples, 0.72%)</title><rect x="933.5" y="2037" width="8.4" height="15.0" fill="rgb(236,208,43)" rx="2" ry="2" />
<text  x="936.47" y="2047.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.01%)</title><rect x="1094.5" y="2005" width="0.1" height="15.0" fill="rgb(212,71,43)" rx="2" ry="2" />
<text  x="1097.50" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1186.4" y="517" width="0.2" height="15.0" fill="rgb(218,120,30)" rx="2" ry="2" />
<text  x="1189.40" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1186.7" y="981" width="0.3" height="15.0" fill="rgb(246,219,44)" rx="2" ry="2" />
<text  x="1189.72" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="194.5" y="1653" width="0.1" height="15.0" fill="rgb(254,140,25)" rx="2" ry="2" />
<text  x="197.51" y="1663.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&gt;::ReturnToAllocator (9 samples, 0.05%)</title><rect x="1018.2" y="2053" width="0.6" height="15.0" fill="rgb(216,14,12)" rx="2" ry="2" />
<text  x="1021.18" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (75 samples, 0.40%)</title><rect x="183.6" y="1749" width="4.7" height="15.0" fill="rgb(238,112,31)" rx="2" ry="2" />
<text  x="186.59" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="1186.3" y="1957" width="0.3" height="15.0" fill="rgb(243,124,45)" rx="2" ry="2" />
<text  x="1189.34" y="1967.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.03%)</title><rect x="215.7" y="1637" width="0.3" height="15.0" fill="rgb(224,211,32)" rx="2" ry="2" />
<text  x="218.71" y="1647.5" ></text>
</g>
<g >
<title>do_syscall_64 (23 samples, 0.12%)</title><rect x="755.7" y="2005" width="1.5" height="15.0" fill="rgb(248,41,18)" rx="2" ry="2" />
<text  x="758.72" y="2015.5" ></text>
</g>
<g >
<title>native_flush_tlb_others (3 samples, 0.02%)</title><rect x="57.2" y="1877" width="0.2" height="15.0" fill="rgb(241,198,12)" rx="2" ry="2" />
<text  x="60.22" y="1887.5" ></text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.02%)</title><rect x="198.0" y="1557" width="0.2" height="15.0" fill="rgb(219,163,4)" rx="2" ry="2" />
<text  x="201.04" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.0" y="485" width="0.2" height="15.0" fill="rgb(251,94,27)" rx="2" ry="2" />
<text  x="1190.03" y="495.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.03%)</title><rect x="162.7" y="1669" width="0.3" height="15.0" fill="rgb(212,163,53)" rx="2" ry="2" />
<text  x="165.69" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.0" y="1941" width="0.2" height="15.0" fill="rgb(210,84,29)" rx="2" ry="2" />
<text  x="1190.03" y="1951.5" ></text>
</g>
<g >
<title>@plt (3 samples, 0.02%)</title><rect x="1164.4" y="2021" width="0.2" height="15.0" fill="rgb(234,4,15)" rx="2" ry="2" />
<text  x="1167.37" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (19 samples, 0.10%)</title><rect x="809.6" y="2021" width="1.2" height="15.0" fill="rgb(233,201,17)" rx="2" ry="2" />
<text  x="812.56" y="2031.5" ></text>
</g>
<g >
<title>mmap_region (15 samples, 0.08%)</title><rect x="755.8" y="1925" width="1.0" height="15.0" fill="rgb(235,54,10)" rx="2" ry="2" />
<text  x="758.85" y="1935.5" ></text>
</g>
<g >
<title>__dynamic_cast (4 samples, 0.02%)</title><rect x="200.8" y="1621" width="0.2" height="15.0" fill="rgb(214,196,22)" rx="2" ry="2" />
<text  x="203.75" y="1631.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::computeSubwords (30 samples, 0.16%)</title><rect x="323.5" y="1941" width="1.9" height="15.0" fill="rgb(207,9,47)" rx="2" ry="2" />
<text  x="326.46" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (415 samples, 2.22%)</title><rect x="57.8" y="1493" width="26.2" height="15.0" fill="rgb(228,201,4)" rx="2" ry="2" />
<text  x="60.85" y="1503.5" >[..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1186.2" y="1893" width="0.1" height="15.0" fill="rgb(248,25,51)" rx="2" ry="2" />
<text  x="1189.21" y="1903.5" ></text>
</g>
<g >
<title>vma_merge (2 samples, 0.01%)</title><rect x="1097.0" y="1925" width="0.1" height="15.0" fill="rgb(220,1,3)" rx="2" ry="2" />
<text  x="1100.02" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_quantifier (2 samples, 0.01%)</title><rect x="193.4" y="1749" width="0.1" height="15.0" fill="rgb(240,123,24)" rx="2" ry="2" />
<text  x="196.37" y="1759.5" ></text>
</g>
<g >
<title>vmacache_find (3 samples, 0.02%)</title><rect x="935.3" y="1973" width="0.2" height="15.0" fill="rgb(236,169,18)" rx="2" ry="2" />
<text  x="938.30" y="1983.5" ></text>
</g>
<g >
<title>do_syscall_64 (13 samples, 0.07%)</title><rect x="27.4" y="1973" width="0.8" height="15.0" fill="rgb(245,85,41)" rx="2" ry="2" />
<text  x="30.36" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.0" y="677" width="0.2" height="15.0" fill="rgb(238,120,54)" rx="2" ry="2" />
<text  x="1190.03" y="687.5" ></text>
</g>
<g >
<title>do_wp_page (89 samples, 0.48%)</title><rect x="936.1" y="1957" width="5.6" height="15.0" fill="rgb(252,178,20)" rx="2" ry="2" />
<text  x="939.12" y="1967.5" ></text>
</g>
<g >
<title>__asan::asan_memalign (2 samples, 0.01%)</title><rect x="220.8" y="1669" width="0.2" height="15.0" fill="rgb(214,133,10)" rx="2" ry="2" />
<text  x="223.83" y="1679.5" ></text>
</g>
<g >
<title>fasttext::FastText::getWordVector (8 samples, 0.04%)</title><rect x="758.8" y="2037" width="0.5" height="15.0" fill="rgb(235,146,9)" rx="2" ry="2" />
<text  x="761.81" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1186.4" y="709" width="0.2" height="15.0" fill="rgb(212,100,15)" rx="2" ry="2" />
<text  x="1189.40" y="719.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (2 samples, 0.01%)</title><rect x="57.0" y="1909" width="0.1" height="15.0" fill="rgb(247,210,49)" rx="2" ry="2" />
<text  x="59.96" y="1919.5" ></text>
</g>
<g >
<title>__asan::asan_delete (2 samples, 0.01%)</title><rect x="220.7" y="1669" width="0.1" height="15.0" fill="rgb(244,79,5)" rx="2" ry="2" />
<text  x="223.70" y="1679.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (2 samples, 0.01%)</title><rect x="501.5" y="1861" width="0.1" height="15.0" fill="rgb(221,10,2)" rx="2" ry="2" />
<text  x="504.47" y="1871.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (2 samples, 0.01%)</title><rect x="507.3" y="1861" width="0.2" height="15.0" fill="rgb(244,205,29)" rx="2" ry="2" />
<text  x="510.34" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (309 samples, 1.65%)</title><rect x="57.9" y="213" width="19.5" height="15.0" fill="rgb(229,136,50)" rx="2" ry="2" />
<text  x="60.91" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1186.7" y="1285" width="0.3" height="15.0" fill="rgb(215,123,28)" rx="2" ry="2" />
<text  x="1189.65" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (83 samples, 0.44%)</title><rect x="178.3" y="1685" width="5.2" height="15.0" fill="rgb(220,144,32)" rx="2" ry="2" />
<text  x="181.28" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1186.2" y="853" width="0.1" height="15.0" fill="rgb(225,138,25)" rx="2" ry="2" />
<text  x="1189.21" y="863.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (10 samples, 0.05%)</title><rect x="475.6" y="1925" width="0.6" height="15.0" fill="rgb(231,92,2)" rx="2" ry="2" />
<text  x="478.59" y="1935.5" ></text>
</g>
<g >
<title>__sanitizer::LargeMmapAllocator&lt;__asan::AsanMapUnmapCallback, __sanitizer::LargeMmapAllocatorPtrArrayDynamic&gt;::Allocate (3 samples, 0.02%)</title><rect x="746.4" y="2037" width="0.2" height="15.0" fill="rgb(218,40,28)" rx="2" ry="2" />
<text  x="749.38" y="2047.5" ></text>
</g>
<g >
<title>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::dump (5 samples, 0.03%)</title><rect x="508.0" y="1989" width="0.3" height="15.0" fill="rgb(223,170,0)" rx="2" ry="2" />
<text  x="510.97" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (70 samples, 0.37%)</title><rect x="212.7" y="1669" width="4.4" height="15.0" fill="rgb(223,54,31)" rx="2" ry="2" />
<text  x="215.68" y="1679.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::emplace_back&lt;char const*&amp;, unsigned int&amp;&gt; (190 samples, 1.02%)</title><rect x="671.2" y="1861" width="12.0" height="15.0" fill="rgb(213,197,21)" rx="2" ry="2" />
<text  x="674.20" y="1871.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (6 samples, 0.03%)</title><rect x="27.4" y="1877" width="0.4" height="15.0" fill="rgb(252,144,43)" rx="2" ry="2" />
<text  x="30.42" y="1887.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (3 samples, 0.02%)</title><rect x="86.4" y="1573" width="0.2" height="15.0" fill="rgb(252,174,1)" rx="2" ry="2" />
<text  x="89.44" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (518 samples, 2.77%)</title><rect x="57.8" y="1845" width="32.7" height="15.0" fill="rgb(233,81,32)" rx="2" ry="2" />
<text  x="60.85" y="1855.5" >[u..</text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="193.2" y="1669" width="0.2" height="15.0" fill="rgb(206,139,12)" rx="2" ry="2" />
<text  x="196.24" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (488 samples, 2.61%)</title><rect x="57.8" y="1749" width="30.8" height="15.0" fill="rgb(238,34,22)" rx="2" ry="2" />
<text  x="60.85" y="1759.5" >[u..</text>
</g>
<g >
<title>__handle_mm_fault (9 samples, 0.05%)</title><rect x="638.9" y="1797" width="0.6" height="15.0" fill="rgb(212,224,31)" rx="2" ry="2" />
<text  x="641.95" y="1807.5" ></text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.02%)</title><rect x="181.1" y="1589" width="0.2" height="15.0" fill="rgb(246,169,4)" rx="2" ry="2" />
<text  x="184.12" y="1599.5" ></text>
</g>
<g >
<title>onmt::unicode::is_separator@plt (2 samples, 0.01%)</title><rect x="725.3" y="1893" width="0.1" height="15.0" fill="rgb(228,130,40)" rx="2" ry="2" />
<text  x="728.30" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1186.7" y="1109" width="0.3" height="15.0" fill="rgb(237,172,14)" rx="2" ry="2" />
<text  x="1189.72" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.0" y="885" width="0.2" height="15.0" fill="rgb(237,165,43)" rx="2" ry="2" />
<text  x="1190.03" y="895.5" ></text>
</g>
<g >
<title>Eigen::PlainObjectBase&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; &gt;::resize (6 samples, 0.03%)</title><rect x="382.4" y="1941" width="0.4" height="15.0" fill="rgb(246,64,41)" rx="2" ry="2" />
<text  x="385.42" y="1951.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (23 samples, 0.12%)</title><rect x="1123.7" y="2037" width="1.5" height="15.0" fill="rgb(222,82,40)" rx="2" ry="2" />
<text  x="1126.72" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.1" y="165" width="0.1" height="15.0" fill="rgb(209,159,30)" rx="2" ry="2" />
<text  x="1190.10" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1187.0" y="1141" width="0.2" height="15.0" fill="rgb(244,141,11)" rx="2" ry="2" />
<text  x="1190.03" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="194.4" y="1589" width="0.1" height="15.0" fill="rgb(254,94,53)" rx="2" ry="2" />
<text  x="197.38" y="1599.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (2 samples, 0.01%)</title><rect x="513.2" y="1861" width="0.1" height="15.0" fill="rgb(224,167,24)" rx="2" ry="2" />
<text  x="516.21" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1186.7" y="629" width="0.3" height="15.0" fill="rgb(251,173,18)" rx="2" ry="2" />
<text  x="1189.72" y="639.5" ></text>
</g>
<g >
<title>__dynamic_cast (5 samples, 0.03%)</title><rect x="145.5" y="1605" width="0.3" height="15.0" fill="rgb(209,131,33)" rx="2" ry="2" />
<text  x="148.52" y="1615.5" ></text>
</g>
<g >
<title>boost::algorithm::join&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, char [2]&gt; (23 samples, 0.12%)</title><rect x="555.1" y="1941" width="1.4" height="15.0" fill="rgb(217,221,21)" rx="2" ry="2" />
<text  x="558.06" y="1951.5" ></text>
</g>
<g >
<title>TAgencyRating::ScoreUrl (479 samples, 2.56%)</title><rect x="195.1" y="1989" width="30.3" height="15.0" fill="rgb(252,70,46)" rx="2" ry="2" />
<text  x="198.14" y="1999.5" >TA..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1186.7" y="469" width="0.3" height="15.0" fill="rgb(211,57,0)" rx="2" ry="2" />
<text  x="1189.72" y="479.5" ></text>
</g>
<g >
<title>[unknown] (319 samples, 1.71%)</title><rect x="57.9" y="725" width="20.1" height="15.0" fill="rgb(237,6,43)" rx="2" ry="2" />
<text  x="60.91" y="735.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="57.6" y="1701" width="0.1" height="15.0" fill="rgb(250,115,10)" rx="2" ry="2" />
<text  x="60.59" y="1711.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotPut (2 samples, 0.01%)</title><rect x="215.5" y="1637" width="0.2" height="15.0" fill="rgb(250,62,24)" rx="2" ry="2" />
<text  x="218.52" y="1647.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (6 samples, 0.03%)</title><rect x="199.7" y="1557" width="0.4" height="15.0" fill="rgb(210,112,17)" rx="2" ry="2" />
<text  x="202.68" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="1186.3" y="1573" width="0.3" height="15.0" fill="rgb(228,184,27)" rx="2" ry="2" />
<text  x="1189.34" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1186.7" y="501" width="0.3" height="15.0" fill="rgb(219,29,43)" rx="2" ry="2" />
<text  x="1189.72" y="511.5" ></text>
</g>
<g >
<title>memcpy (2 samples, 0.01%)</title><rect x="560.9" y="1877" width="0.2" height="15.0" fill="rgb(244,149,41)" rx="2" ry="2" />
<text  x="563.93" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1186.4" y="1125" width="0.2" height="15.0" fill="rgb(243,117,37)" rx="2" ry="2" />
<text  x="1189.40" y="1135.5" ></text>
</g>
<g >
<title>[unknown] (339 samples, 1.81%)</title><rect x="57.9" y="1189" width="21.4" height="15.0" fill="rgb(213,155,52)" rx="2" ry="2" />
<text  x="60.91" y="1199.5" >[..</text>
</g>
<g >
<title>__lru_cache_add (3 samples, 0.02%)</title><rect x="25.0" y="1941" width="0.1" height="15.0" fill="rgb(208,198,25)" rx="2" ry="2" />
<text  x="27.96" y="1951.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="553.8" y="1845" width="0.1" height="15.0" fill="rgb(205,224,53)" rx="2" ry="2" />
<text  x="556.79" y="1855.5" ></text>
</g>
<g >
<title>page_fault (34 samples, 0.18%)</title><rect x="55.4" y="2021" width="2.2" height="15.0" fill="rgb(236,100,42)" rx="2" ry="2" />
<text  x="58.45" y="2031.5" ></text>
</g>
<g >
<title>onmt::is_alphabet (2 samples, 0.01%)</title><rect x="723.6" y="1893" width="0.1" height="15.0" fill="rgb(207,134,31)" rx="2" ry="2" />
<text  x="726.59" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (73 samples, 0.39%)</title><rect x="195.8" y="1653" width="4.6" height="15.0" fill="rgb(234,132,17)" rx="2" ry="2" />
<text  x="198.83" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.0" y="1845" width="0.2" height="15.0" fill="rgb(222,94,13)" rx="2" ry="2" />
<text  x="1190.03" y="1855.5" ></text>
</g>
<g >
<title>unmap_region (2 samples, 0.01%)</title><rect x="82.0" y="1269" width="0.1" height="15.0" fill="rgb(242,174,20)" rx="2" ry="2" />
<text  x="85.02" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (94 samples, 0.50%)</title><rect x="149.0" y="1669" width="5.9" height="15.0" fill="rgb(253,92,8)" rx="2" ry="2" />
<text  x="151.99" y="1679.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.04%)</title><rect x="1189.3" y="2037" width="0.4" height="15.0" fill="rgb(218,205,34)" rx="2" ry="2" />
<text  x="1192.31" y="2047.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::computeSubwords (12 samples, 0.06%)</title><rect x="528.5" y="1893" width="0.8" height="15.0" fill="rgb(210,228,15)" rx="2" ry="2" />
<text  x="531.55" y="1903.5" ></text>
</g>
<g >
<title>__asan::AsanThread::stack_bottom (2 samples, 0.01%)</title><rect x="146.5" y="1589" width="0.2" height="15.0" fill="rgb(236,186,50)" rx="2" ry="2" />
<text  x="149.53" y="1599.5" ></text>
</g>
<g >
<title>__asan::AsanTSDGet (3 samples, 0.02%)</title><rect x="1117.1" y="2037" width="0.2" height="15.0" fill="rgb(209,64,38)" rx="2" ry="2" />
<text  x="1120.09" y="2047.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (383 samples, 2.05%)</title><rect x="1121.8" y="2053" width="24.2" height="15.0" fill="rgb(206,50,9)" rx="2" ry="2" />
<text  x="1124.83" y="2063.5" >s..</text>
</g>
<g >
<title>[libc-2.27.so] (3 samples, 0.02%)</title><rect x="475.3" y="1925" width="0.2" height="15.0" fill="rgb(233,147,36)" rx="2" ry="2" />
<text  x="478.33" y="1935.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="92.2" y="1973" width="0.2" height="15.0" fill="rgb(214,18,41)" rx="2" ry="2" />
<text  x="95.25" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (75 samples, 0.40%)</title><rect x="144.0" y="1669" width="4.7" height="15.0" fill="rgb(223,180,31)" rx="2" ry="2" />
<text  x="147.01" y="1679.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (2 samples, 0.01%)</title><rect x="639.4" y="1781" width="0.1" height="15.0" fill="rgb(240,128,13)" rx="2" ry="2" />
<text  x="642.39" y="1791.5" ></text>
</g>
<g >
<title>__asan::PoisonShadow (95 samples, 0.51%)</title><rect x="49.5" y="2021" width="5.9" height="15.0" fill="rgb(232,132,48)" rx="2" ry="2" />
<text  x="52.45" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1186.4" y="37" width="0.2" height="15.0" fill="rgb(239,102,16)" rx="2" ry="2" />
<text  x="1189.40" y="47.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1187.0" y="1285" width="0.2" height="15.0" fill="rgb(216,118,38)" rx="2" ry="2" />
<text  x="1190.03" y="1295.5" ></text>
</g>
<g >
<title>[unknown] (319 samples, 1.71%)</title><rect x="57.9" y="693" width="20.1" height="15.0" fill="rgb(208,177,20)" rx="2" ry="2" />
<text  x="60.91" y="703.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (11 samples, 0.06%)</title><rect x="938.4" y="1909" width="0.7" height="15.0" fill="rgb(208,111,51)" rx="2" ry="2" />
<text  x="941.40" y="1919.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (2 samples, 0.01%)</title><rect x="639.4" y="1765" width="0.1" height="15.0" fill="rgb(206,83,47)" rx="2" ry="2" />
<text  x="642.39" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1187.0" y="2053" width="0.2" height="15.0" fill="rgb(205,106,39)" rx="2" ry="2" />
<text  x="1190.03" y="2063.5" ></text>
</g>
<g >
<title>on_each_cpu_cond_mask (27 samples, 0.14%)</title><rect x="939.9" y="1877" width="1.7" height="15.0" fill="rgb(226,173,8)" rx="2" ry="2" />
<text  x="942.91" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (4 samples, 0.02%)</title><rect x="164.5" y="1765" width="0.2" height="15.0" fill="rgb(236,221,38)" rx="2" ry="2" />
<text  x="167.46" y="1775.5" ></text>
</g>
<g >
<title>__sanitizer::internal_munmap (2 samples, 0.01%)</title><rect x="91.6" y="1925" width="0.1" height="15.0" fill="rgb(221,37,0)" rx="2" ry="2" />
<text  x="94.62" y="1935.5" ></text>
</g>
<g >
<title>handle_mm_fault (3 samples, 0.02%)</title><rect x="1014.9" y="1989" width="0.2" height="15.0" fill="rgb(211,202,29)" rx="2" ry="2" />
<text  x="1017.90" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (406 samples, 2.17%)</title><rect x="57.8" y="1445" width="25.7" height="15.0" fill="rgb(249,179,17)" rx="2" ry="2" />
<text  x="60.85" y="1455.5" >[..</text>
</g>
<g >
<title>nlohmann::detail::parser&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::parse (131 samples, 0.70%)</title><rect x="128.9" y="1973" width="8.2" height="15.0" fill="rgb(217,84,54)" rx="2" ry="2" />
<text  x="131.86" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (61 samples, 0.33%)</title><rect x="155.3" y="1765" width="3.9" height="15.0" fill="rgb(219,162,40)" rx="2" ry="2" />
<text  x="158.31" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="194.5" y="1525" width="0.1" height="15.0" fill="rgb(233,74,4)" rx="2" ry="2" />
<text  x="197.51" y="1535.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::_M_do_set (3,626 samples, 19.40%)</title><rect x="517.1" y="2021" width="228.9" height="15.0" fill="rgb(232,18,52)" rx="2" ry="2" />
<text  x="520.12" y="2031.5" >std::__future_base::_State_bas..</text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.01%)</title><rect x="189.9" y="1669" width="0.1" height="15.0" fill="rgb(207,212,32)" rx="2" ry="2" />
<text  x="192.90" y="1679.5" ></text>
</g>
<g >
<title>__asan_memcpy (2 samples, 0.01%)</title><rect x="558.3" y="1893" width="0.1" height="15.0" fill="rgb(205,53,21)" rx="2" ry="2" />
<text  x="561.28" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1186.2" y="709" width="0.1" height="15.0" fill="rgb(205,63,7)" rx="2" ry="2" />
<text  x="1189.21" y="719.5" ></text>
</g>
<g >
<title>unmap_single_vma (2 samples, 0.01%)</title><rect x="83.3" y="1301" width="0.2" height="15.0" fill="rgb(248,107,31)" rx="2" ry="2" />
<text  x="86.35" y="1311.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="78.5" y="1045" width="0.1" height="15.0" fill="rgb(234,149,13)" rx="2" ry="2" />
<text  x="81.49" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1186.4" y="133" width="0.2" height="15.0" fill="rgb(250,35,27)" rx="2" ry="2" />
<text  x="1189.40" y="143.5" ></text>
</g>
<g >
<title>smp_call_function_single (2 samples, 0.01%)</title><rect x="82.0" y="1125" width="0.1" height="15.0" fill="rgb(239,14,51)" rx="2" ry="2" />
<text  x="85.02" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (6 samples, 0.03%)</title><rect x="193.7" y="1845" width="0.4" height="15.0" fill="rgb(215,45,34)" rx="2" ry="2" />
<text  x="196.68" y="1855.5" ></text>
</g>
<g >
<title>__asan::AsanThread::stack_top (2 samples, 0.01%)</title><rect x="190.7" y="1653" width="0.1" height="15.0" fill="rgb(206,60,32)" rx="2" ry="2" />
<text  x="193.72" y="1663.5" ></text>
</g>
<g >
<title>std::__future_base::_Task_state&lt;std::_Bind&lt;Annotate (13 samples, 0.07%)</title><rect x="27.4" y="2021" width="0.8" height="15.0" fill="rgb(254,197,25)" rx="2" ry="2" />
<text  x="30.36" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1186.4" y="293" width="0.2" height="15.0" fill="rgb(227,172,35)" rx="2" ry="2" />
<text  x="1189.40" y="303.5" ></text>
</g>
<g >
<title>__vm_munmap (2 samples, 0.01%)</title><rect x="82.0" y="1301" width="0.1" height="15.0" fill="rgb(223,184,22)" rx="2" ry="2" />
<text  x="85.02" y="1311.5" ></text>
</g>
<g >
<title>page_fault (3 samples, 0.02%)</title><rect x="719.0" y="1877" width="0.2" height="15.0" fill="rgb(246,176,21)" rx="2" ry="2" />
<text  x="722.05" y="1887.5" ></text>
</g>
<g >
<title>__handle_mm_fault (25 samples, 0.13%)</title><rect x="500.0" y="1893" width="1.6" height="15.0" fill="rgb(227,103,2)" rx="2" ry="2" />
<text  x="503.01" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (380 samples, 2.03%)</title><rect x="57.8" y="1365" width="24.0" height="15.0" fill="rgb(225,102,53)" rx="2" ry="2" />
<text  x="60.85" y="1375.5" >[..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1186.1" y="1957" width="0.1" height="15.0" fill="rgb(214,166,39)" rx="2" ry="2" />
<text  x="1189.09" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (332 samples, 1.78%)</title><rect x="57.9" y="1109" width="21.0" height="15.0" fill="rgb(237,119,48)" rx="2" ry="2" />
<text  x="60.91" y="1119.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (3 samples, 0.02%)</title><rect x="177.7" y="1605" width="0.1" height="15.0" fill="rgb(205,193,21)" rx="2" ry="2" />
<text  x="180.65" y="1615.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::~Dictionary (3 samples, 0.02%)</title><rect x="509.0" y="1989" width="0.2" height="15.0" fill="rgb(221,120,46)" rx="2" ry="2" />
<text  x="512.04" y="1999.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::pushHash (2 samples, 0.01%)</title><rect x="480.3" y="1909" width="0.1" height="15.0" fill="rgb(241,158,54)" rx="2" ry="2" />
<text  x="483.26" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (4 samples, 0.02%)</title><rect x="159.2" y="1797" width="0.2" height="15.0" fill="rgb(217,88,1)" rx="2" ry="2" />
<text  x="162.16" y="1807.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (4 samples, 0.02%)</title><rect x="745.1" y="1957" width="0.3" height="15.0" fill="rgb(241,48,18)" rx="2" ry="2" />
<text  x="748.12" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="225.1" y="1429" width="0.1" height="15.0" fill="rgb(215,37,47)" rx="2" ry="2" />
<text  x="228.06" y="1439.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (3 samples, 0.02%)</title><rect x="554.0" y="1893" width="0.2" height="15.0" fill="rgb(234,80,18)" rx="2" ry="2" />
<text  x="557.05" y="1903.5" ></text>
</g>
<g >
<title>syscall (5 samples, 0.03%)</title><rect x="137.8" y="1973" width="0.3" height="15.0" fill="rgb(226,91,51)" rx="2" ry="2" />
<text  x="140.82" y="1983.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="86.8" y="1653" width="0.1" height="15.0" fill="rgb(225,18,11)" rx="2" ry="2" />
<text  x="89.82" y="1663.5" ></text>
</g>
<g >
<title>__pthread_getspecific (2 samples, 0.01%)</title><rect x="157.5" y="1637" width="0.1" height="15.0" fill="rgb(227,153,48)" rx="2" ry="2" />
<text  x="160.52" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1186.2" y="1621" width="0.1" height="15.0" fill="rgb(219,147,35)" rx="2" ry="2" />
<text  x="1189.21" y="1631.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::basic_json&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, 0&gt; (2 samples, 0.01%)</title><rect x="128.9" y="1925" width="0.1" height="15.0" fill="rgb(242,75,18)" rx="2" ry="2" />
<text  x="131.92" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (34 samples, 0.18%)</title><rect x="872.7" y="2021" width="2.2" height="15.0" fill="rgb(247,165,18)" rx="2" ry="2" />
<text  x="875.75" y="2031.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.01%)</title><rect x="486.3" y="1957" width="0.1" height="15.0" fill="rgb(243,213,39)" rx="2" ry="2" />
<text  x="489.25" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="57.6" y="1637" width="0.1" height="15.0" fill="rgb(240,42,53)" rx="2" ry="2" />
<text  x="60.59" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.02%)</title><rect x="1186.3" y="1589" width="0.3" height="15.0" fill="rgb(221,170,30)" rx="2" ry="2" />
<text  x="1189.34" y="1599.5" ></text>
</g>
<g >
<title>unmap_single_vma (4 samples, 0.02%)</title><rect x="513.5" y="1957" width="0.3" height="15.0" fill="rgb(214,206,10)" rx="2" ry="2" />
<text  x="516.52" y="1967.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (4 samples, 0.02%)</title><rect x="471.5" y="1941" width="0.3" height="15.0" fill="rgb(252,159,6)" rx="2" ry="2" />
<text  x="474.55" y="1951.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (2 samples, 0.01%)</title><rect x="643.4" y="1765" width="0.1" height="15.0" fill="rgb(222,162,9)" rx="2" ry="2" />
<text  x="646.36" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1186.7" y="933" width="0.3" height="15.0" fill="rgb(254,210,10)" rx="2" ry="2" />
<text  x="1189.72" y="943.5" ></text>
</g>
<g >
<title>[unknown] (459 samples, 2.46%)</title><rect x="57.8" y="1653" width="29.0" height="15.0" fill="rgb(217,96,26)" rx="2" ry="2" />
<text  x="60.85" y="1663.5" >[u..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1186.2" y="997" width="0.1" height="15.0" fill="rgb(214,20,4)" rx="2" ry="2" />
<text  x="1189.21" y="1007.5" ></text>
</g>
<g >
<title>[unknown] (324 samples, 1.73%)</title><rect x="57.9" y="1013" width="20.5" height="15.0" fill="rgb(240,208,20)" rx="2" ry="2" />
<text  x="60.91" y="1023.5" ></text>
</g>
<g >
<title>clear_page_erms (3 samples, 0.02%)</title><rect x="490.2" y="1813" width="0.2" height="15.0" fill="rgb(252,159,7)" rx="2" ry="2" />
<text  x="493.17" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (77 samples, 0.41%)</title><rect x="188.6" y="1797" width="4.9" height="15.0" fill="rgb(208,1,51)" rx="2" ry="2" />
<text  x="191.63" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1186.2" y="53" width="0.1" height="15.0" fill="rgb(216,223,36)" rx="2" ry="2" />
<text  x="1189.21" y="63.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (6 samples, 0.03%)</title><rect x="27.8" y="1957" width="0.4" height="15.0" fill="rgb(206,87,15)" rx="2" ry="2" />
<text  x="30.80" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (2 samples, 0.01%)</title><rect x="193.7" y="1765" width="0.2" height="15.0" fill="rgb(234,211,6)" rx="2" ry="2" />
<text  x="196.75" y="1775.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (12 samples, 0.06%)</title><rect x="566.5" y="1877" width="0.7" height="15.0" fill="rgb(219,66,42)" rx="2" ry="2" />
<text  x="569.48" y="1887.5" ></text>
</g>
<g >
<title>__asan_memcpy (3 samples, 0.02%)</title><rect x="161.9" y="1669" width="0.2" height="15.0" fill="rgb(218,109,22)" rx="2" ry="2" />
<text  x="164.93" y="1679.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (2 samples, 0.01%)</title><rect x="1188.2" y="2037" width="0.1" height="15.0" fill="rgb(221,65,24)" rx="2" ry="2" />
<text  x="1191.17" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1186.4" y="1173" width="0.2" height="15.0" fill="rgb(220,90,44)" rx="2" ry="2" />
<text  x="1189.40" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.1" y="149" width="0.1" height="15.0" fill="rgb(210,73,40)" rx="2" ry="2" />
<text  x="1190.10" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1186.4" y="53" width="0.2" height="15.0" fill="rgb(238,172,48)" rx="2" ry="2" />
<text  x="1189.40" y="63.5" ></text>
</g>
<g >
<title>smp_call_function_many (2 samples, 0.01%)</title><rect x="82.0" y="1141" width="0.1" height="15.0" fill="rgb(211,88,9)" rx="2" ry="2" />
<text  x="85.02" y="1151.5" ></text>
</g>
<g >
<title>__sanitizer::mem_is_zero (3 samples, 0.02%)</title><rect x="330.1" y="1957" width="0.2" height="15.0" fill="rgb(252,189,11)" rx="2" ry="2" />
<text  x="333.09" y="1967.5" ></text>
</g>
<g >
<title>__clock_gettime (6 samples, 0.03%)</title><rect x="127.0" y="2037" width="0.4" height="15.0" fill="rgb(222,76,20)" rx="2" ry="2" />
<text  x="130.03" y="2047.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (7 samples, 0.04%)</title><rect x="25.7" y="1925" width="0.5" height="15.0" fill="rgb(219,223,46)" rx="2" ry="2" />
<text  x="28.72" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1186.4" y="101" width="0.2" height="15.0" fill="rgb(242,197,52)" rx="2" ry="2" />
<text  x="1189.40" y="111.5" ></text>
</g>
<g >
<title>[unknown] (326 samples, 1.74%)</title><rect x="57.9" y="1045" width="20.6" height="15.0" fill="rgb(235,169,34)" rx="2" ry="2" />
<text  x="60.91" y="1055.5" ></text>
</g>
<g >
<title>unmap_vmas (2 samples, 0.01%)</title><rect x="83.3" y="1317" width="0.2" height="15.0" fill="rgb(248,207,53)" rx="2" ry="2" />
<text  x="86.35" y="1327.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="57.6" y="1941" width="0.1" height="15.0" fill="rgb(229,226,20)" rx="2" ry="2" />
<text  x="60.59" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1186.2" y="1509" width="0.1" height="15.0" fill="rgb(236,216,14)" rx="2" ry="2" />
<text  x="1189.21" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1186.4" y="1189" width="0.2" height="15.0" fill="rgb(211,6,23)" rx="2" ry="2" />
<text  x="1189.40" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="165.8" y="1493" width="0.5" height="15.0" fill="rgb(244,127,22)" rx="2" ry="2" />
<text  x="168.85" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1186.4" y="325" width="0.2" height="15.0" fill="rgb(210,154,15)" rx="2" ry="2" />
<text  x="1189.40" y="335.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="57.6" y="1429" width="0.1" height="15.0" fill="rgb(247,46,30)" rx="2" ry="2" />
<text  x="60.59" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (2 samples, 0.01%)</title><rect x="224.0" y="1797" width="0.2" height="15.0" fill="rgb(209,223,38)" rx="2" ry="2" />
<text  x="227.05" y="1807.5" ></text>
</g>
<g >
<title>__do_munmap (2 samples, 0.01%)</title><rect x="86.4" y="1541" width="0.2" height="15.0" fill="rgb(213,195,50)" rx="2" ry="2" />
<text  x="89.44" y="1551.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (3 samples, 0.02%)</title><rect x="86.0" y="1605" width="0.2" height="15.0" fill="rgb(230,24,0)" rx="2" ry="2" />
<text  x="89.00" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (5 samples, 0.03%)</title><rect x="217.5" y="1749" width="0.3" height="15.0" fill="rgb(238,198,22)" rx="2" ry="2" />
<text  x="220.48" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1186.2" y="133" width="0.1" height="15.0" fill="rgb(248,109,47)" rx="2" ry="2" />
<text  x="1189.21" y="143.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (4 samples, 0.02%)</title><rect x="869.2" y="2037" width="0.2" height="15.0" fill="rgb(232,43,46)" rx="2" ry="2" />
<text  x="872.15" y="2047.5" ></text>
</g>
<g >
<title>fasttext::DenseMatrix::addRowToVector (1,052 samples, 5.63%)</title><rect x="403.5" y="1957" width="66.4" height="15.0" fill="rgb(249,11,54)" rx="2" ry="2" />
<text  x="406.50" y="1967.5" >fasttex..</text>
</g>
<g >
<title>_raw_spin_lock (2 samples, 0.01%)</title><rect x="23.2" y="1957" width="0.1" height="15.0" fill="rgb(223,49,50)" rx="2" ry="2" />
<text  x="26.19" y="1967.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::getLine (373 samples, 2.00%)</title><rect x="530.7" y="1925" width="23.5" height="15.0" fill="rgb(206,112,46)" rx="2" ry="2" />
<text  x="533.69" y="1935.5" >f..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1186.7" y="1013" width="0.3" height="15.0" fill="rgb(210,73,18)" rx="2" ry="2" />
<text  x="1189.72" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="225.1" y="1589" width="0.1" height="15.0" fill="rgb(235,28,43)" rx="2" ry="2" />
<text  x="228.06" y="1599.5" ></text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::scan_string (118 samples, 0.63%)</title><rect x="129.5" y="1941" width="7.4" height="15.0" fill="rgb(218,55,22)" rx="2" ry="2" />
<text  x="132.49" y="1951.5" ></text>
</g>
<g >
<title>tgnews (18,694 samples, 100.00%)</title><rect x="10.0" y="2069" width="1180.0" height="15.0" fill="rgb(252,157,45)" rx="2" ry="2" />
<text  x="13.00" y="2079.5" >tgnews</text>
</g>
<g >
<title>unmap_region (2 samples, 0.01%)</title><rect x="83.3" y="1333" width="0.2" height="15.0" fill="rgb(227,68,25)" rx="2" ry="2" />
<text  x="86.35" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1186.2" y="757" width="0.1" height="15.0" fill="rgb(205,225,41)" rx="2" ry="2" />
<text  x="1189.21" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1186.4" y="165" width="0.2" height="15.0" fill="rgb(243,28,31)" rx="2" ry="2" />
<text  x="1189.40" y="175.5" ></text>
</g>
<g >
<title>__handle_mm_fault (2 samples, 0.01%)</title><rect x="719.1" y="1813" width="0.1" height="15.0" fill="rgb(243,186,3)" rx="2" ry="2" />
<text  x="722.11" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1187.0" y="469" width="0.2" height="15.0" fill="rgb(254,111,12)" rx="2" ry="2" />
<text  x="1190.03" y="479.5" ></text>
</g>
<g >
<title>[unknown] (313 samples, 1.67%)</title><rect x="57.9" y="389" width="19.8" height="15.0" fill="rgb(240,102,4)" rx="2" ry="2" />
<text  x="60.91" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int&gt; (13 samples, 0.07%)</title><rect x="871.9" y="2037" width="0.8" height="15.0" fill="rgb(249,7,4)" rx="2" ry="2" />
<text  x="874.93" y="2047.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.01%)</title><rect x="153.1" y="1605" width="0.1" height="15.0" fill="rgb(217,83,42)" rx="2" ry="2" />
<text  x="156.10" y="1615.5" ></text>
</g>
<g >
<title>__lsan::ResetTagsCb (3 samples, 0.02%)</title><rect x="511.8" y="2037" width="0.2" height="15.0" fill="rgb(232,58,54)" rx="2" ry="2" />
<text  x="514.82" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1186.4" y="197" width="0.2" height="15.0" fill="rgb(230,226,54)" rx="2" ry="2" />
<text  x="1189.40" y="207.5" ></text>
</g>
<g >
<title>[unknown] (374 samples, 2.00%)</title><rect x="57.8" y="1333" width="23.7" height="15.0" fill="rgb(220,135,44)" rx="2" ry="2" />
<text  x="60.85" y="1343.5" >[..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (464 samples, 2.48%)</title><rect x="195.4" y="1925" width="29.3" height="15.0" fill="rgb(209,193,26)" rx="2" ry="2" />
<text  x="198.39" y="1935.5" >st..</text>
</g>
<g >
<title>[unknown] (309 samples, 1.65%)</title><rect x="57.9" y="277" width="19.5" height="15.0" fill="rgb(248,168,17)" rx="2" ry="2" />
<text  x="60.91" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (172 samples, 0.92%)</title><rect x="195.4" y="1749" width="10.8" height="15.0" fill="rgb(241,208,28)" rx="2" ry="2" />
<text  x="198.39" y="1759.5" ></text>
</g>
<g >
<title>__mod_node_page_state (2 samples, 0.01%)</title><rect x="936.4" y="1925" width="0.2" height="15.0" fill="rgb(237,192,32)" rx="2" ry="2" />
<text  x="939.44" y="1935.5" ></text>
</g>
<g >
<title>do_mmap (17 samples, 0.09%)</title><rect x="755.8" y="1941" width="1.1" height="15.0" fill="rgb(229,174,4)" rx="2" ry="2" />
<text  x="758.78" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="225.1" y="1317" width="0.1" height="15.0" fill="rgb(237,74,30)" rx="2" ry="2" />
<text  x="228.06" y="1327.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (3 samples, 0.02%)</title><rect x="127.5" y="1909" width="0.2" height="15.0" fill="rgb(206,86,13)" rx="2" ry="2" />
<text  x="130.47" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (75 samples, 0.40%)</title><rect x="183.6" y="1685" width="4.7" height="15.0" fill="rgb(227,72,7)" rx="2" ry="2" />
<text  x="186.59" y="1695.5" ></text>
</g>
<g >
<title>RunFasttextClf (381 samples, 2.04%)</title><rect x="530.3" y="1957" width="24.1" height="15.0" fill="rgb(235,126,39)" rx="2" ry="2" />
<text  x="533.31" y="1967.5" >R..</text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (4 samples, 0.02%)</title><rect x="82.8" y="1413" width="0.2" height="15.0" fill="rgb(228,104,27)" rx="2" ry="2" />
<text  x="85.78" y="1423.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_stringbuf (20 samples, 0.11%)</title><rect x="803.8" y="2037" width="1.2" height="15.0" fill="rgb(209,90,11)" rx="2" ry="2" />
<text  x="806.76" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1186.6" y="2021" width="0.4" height="15.0" fill="rgb(210,85,17)" rx="2" ry="2" />
<text  x="1189.59" y="2031.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (8 samples, 0.04%)</title><rect x="163.3" y="1669" width="0.5" height="15.0" fill="rgb(248,127,32)" rx="2" ry="2" />
<text  x="166.26" y="1679.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (8 samples, 0.04%)</title><rect x="555.9" y="1925" width="0.5" height="15.0" fill="rgb(219,31,4)" rx="2" ry="2" />
<text  x="558.88" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.0" y="309" width="0.2" height="15.0" fill="rgb(227,85,48)" rx="2" ry="2" />
<text  x="1190.03" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1186.2" y="1813" width="0.1" height="15.0" fill="rgb(207,193,15)" rx="2" ry="2" />
<text  x="1189.21" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1186.4" y="117" width="0.2" height="15.0" fill="rgb(242,152,29)" rx="2" ry="2" />
<text  x="1189.40" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="1186.3" y="1461" width="0.3" height="15.0" fill="rgb(235,45,1)" rx="2" ry="2" />
<text  x="1189.34" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (77 samples, 0.41%)</title><rect x="188.6" y="1781" width="4.9" height="15.0" fill="rgb(241,138,37)" rx="2" ry="2" />
<text  x="191.63" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1186.2" y="1445" width="0.1" height="15.0" fill="rgb(235,215,6)" rx="2" ry="2" />
<text  x="1189.21" y="1455.5" ></text>
</g>
<g >
<title>GetHost (445 samples, 2.38%)</title><rect x="166.5" y="1957" width="28.1" height="15.0" fill="rgb(222,106,2)" rx="2" ry="2" />
<text  x="169.54" y="1967.5" >G..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1186.6" y="1957" width="0.4" height="15.0" fill="rgb(233,143,15)" rx="2" ry="2" />
<text  x="1189.59" y="1967.5" ></text>
</g>
<g >
<title>__asan::Allocator::Allocate (1,050 samples, 5.62%)</title><rect x="875.8" y="2053" width="66.3" height="15.0" fill="rgb(251,146,2)" rx="2" ry="2" />
<text  x="878.78" y="2063.5" >__asan:..</text>
</g>
<g >
<title>DetectLanguage[abi:cxx11] (384 samples, 2.05%)</title><rect x="530.3" y="1973" width="24.2" height="15.0" fill="rgb(214,224,44)" rx="2" ry="2" />
<text  x="533.25" y="1983.5" >D..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1186.2" y="37" width="0.1" height="15.0" fill="rgb(214,139,1)" rx="2" ry="2" />
<text  x="1189.21" y="47.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (77 samples, 0.41%)</title><rect x="188.6" y="1765" width="4.9" height="15.0" fill="rgb(210,75,18)" rx="2" ry="2" />
<text  x="191.63" y="1775.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::Unwind (3 samples, 0.02%)</title><rect x="171.0" y="1541" width="0.2" height="15.0" fill="rgb(209,60,2)" rx="2" ry="2" />
<text  x="173.96" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (79 samples, 0.42%)</title><rect x="206.6" y="1685" width="4.9" height="15.0" fill="rgb(242,7,32)" rx="2" ry="2" />
<text  x="209.56" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.0" y="261" width="0.2" height="15.0" fill="rgb(248,185,50)" rx="2" ry="2" />
<text  x="1190.03" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1186.7" y="757" width="0.3" height="15.0" fill="rgb(223,191,36)" rx="2" ry="2" />
<text  x="1189.72" y="767.5" ></text>
</g>
<g >
<title>syscall (13 samples, 0.07%)</title><rect x="27.4" y="2005" width="0.8" height="15.0" fill="rgb(237,2,49)" rx="2" ry="2" />
<text  x="30.36" y="2015.5" ></text>
</g>
<g >
<title>strcmp@plt (4 samples, 0.02%)</title><rect x="43.0" y="2037" width="0.3" height="15.0" fill="rgb(243,65,52)" rx="2" ry="2" />
<text  x="46.01" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (569 samples, 3.04%)</title><rect x="57.8" y="2021" width="36.0" height="15.0" fill="rgb(208,157,44)" rx="2" ry="2" />
<text  x="60.85" y="2031.5" >[un..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1186.2" y="1173" width="0.1" height="15.0" fill="rgb(233,218,30)" rx="2" ry="2" />
<text  x="1189.21" y="1183.5" ></text>
</g>
<g >
<title>handle_mm_fault (100 samples, 0.53%)</title><rect x="935.5" y="1989" width="6.3" height="15.0" fill="rgb(210,44,19)" rx="2" ry="2" />
<text  x="938.49" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (4 samples, 0.02%)</title><rect x="159.2" y="1765" width="0.2" height="15.0" fill="rgb(248,148,31)" rx="2" ry="2" />
<text  x="162.16" y="1775.5" ></text>
</g>
<g >
<title>RunFasttextClf (198 samples, 1.06%)</title><rect x="517.4" y="1957" width="12.5" height="15.0" fill="rgb(219,48,20)" rx="2" ry="2" />
<text  x="520.37" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1186.4" y="853" width="0.2" height="15.0" fill="rgb(232,7,33)" rx="2" ry="2" />
<text  x="1189.40" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (427 samples, 2.28%)</title><rect x="166.7" y="1877" width="26.9" height="15.0" fill="rgb(207,74,48)" rx="2" ry="2" />
<text  x="169.67" y="1887.5" >s..</text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (72 samples, 0.39%)</title><rect x="805.0" y="2037" width="4.6" height="15.0" fill="rgb(224,105,10)" rx="2" ry="2" />
<text  x="808.02" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1186.6" y="1573" width="0.4" height="15.0" fill="rgb(242,142,0)" rx="2" ry="2" />
<text  x="1189.59" y="1583.5" ></text>
</g>
<g >
<title>operator delete (8 samples, 0.04%)</title><rect x="181.7" y="1589" width="0.5" height="15.0" fill="rgb(210,76,49)" rx="2" ry="2" />
<text  x="184.69" y="1599.5" ></text>
</g>
<g >
<title>__interceptor_memcmp (2 samples, 0.01%)</title><rect x="476.8" y="1925" width="0.2" height="15.0" fill="rgb(230,76,36)" rx="2" ry="2" />
<text  x="479.85" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1186.7" y="869" width="0.3" height="15.0" fill="rgb(234,91,29)" rx="2" ry="2" />
<text  x="1189.72" y="879.5" ></text>
</g>
<g >
<title>__asan::AsanTSDGet (15 samples, 0.08%)</title><rect x="1153.3" y="2037" width="0.9" height="15.0" fill="rgb(241,228,15)" rx="2" ry="2" />
<text  x="1156.26" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (92 samples, 0.49%)</title><rect x="200.4" y="1733" width="5.8" height="15.0" fill="rgb(242,116,3)" rx="2" ry="2" />
<text  x="203.44" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1186.2" y="1045" width="0.1" height="15.0" fill="rgb(236,170,28)" rx="2" ry="2" />
<text  x="1189.21" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="1186.8" y="197" width="0.2" height="15.0" fill="rgb(250,26,34)" rx="2" ry="2" />
<text  x="1189.78" y="207.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (4 samples, 0.02%)</title><rect x="209.3" y="1605" width="0.2" height="15.0" fill="rgb(230,177,31)" rx="2" ry="2" />
<text  x="212.28" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (8 samples, 0.04%)</title><rect x="43.5" y="2021" width="0.5" height="15.0" fill="rgb(216,226,51)" rx="2" ry="2" />
<text  x="46.45" y="2031.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (131 samples, 0.70%)</title><rect x="108.1" y="2037" width="8.3" height="15.0" fill="rgb(232,204,42)" rx="2" ry="2" />
<text  x="111.09" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1186.7" y="325" width="0.3" height="15.0" fill="rgb(229,191,30)" rx="2" ry="2" />
<text  x="1189.72" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1187.0" y="1669" width="0.2" height="15.0" fill="rgb(252,40,33)" rx="2" ry="2" />
<text  x="1190.03" y="1679.5" ></text>
</g>
<g >
<title>onmt::unicode::is_separator (79 samples, 0.42%)</title><rect x="714.0" y="1877" width="5.0" height="15.0" fill="rgb(248,120,42)" rx="2" ry="2" />
<text  x="717.00" y="1887.5" ></text>
</g>
<g >
<title>__dynamic_cast (50 samples, 0.27%)</title><rect x="992.9" y="2053" width="3.1" height="15.0" fill="rgb(205,210,1)" rx="2" ry="2" />
<text  x="995.87" y="2063.5" ></text>
</g>
<g >
<title>__pthread_getspecific (108 samples, 0.58%)</title><rect x="999.8" y="2053" width="6.8" height="15.0" fill="rgb(223,146,9)" rx="2" ry="2" />
<text  x="1002.75" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (77 samples, 0.41%)</title><rect x="139.0" y="1701" width="4.9" height="15.0" fill="rgb(221,221,23)" rx="2" ry="2" />
<text  x="142.02" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="57.6" y="1749" width="0.1" height="15.0" fill="rgb(246,12,37)" rx="2" ry="2" />
<text  x="60.59" y="1759.5" ></text>
</g>
<g >
<title>try_charge (3 samples, 0.02%)</title><rect x="26.2" y="1925" width="0.1" height="15.0" fill="rgb(252,89,27)" rx="2" ry="2" />
<text  x="29.16" y="1935.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64LocalCache&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&gt; &gt;::Deallocate (2 samples, 0.01%)</title><rect x="90.4" y="1829" width="0.1" height="15.0" fill="rgb(229,78,9)" rx="2" ry="2" />
<text  x="93.35" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1186.2" y="453" width="0.1" height="15.0" fill="rgb(236,217,35)" rx="2" ry="2" />
<text  x="1189.21" y="463.5" ></text>
</g>
<g >
<title>std::__atomic_futex_unsigned_base::_M_futex_wait_until (2 samples, 0.01%)</title><rect x="1105.4" y="2053" width="0.1" height="15.0" fill="rgb(251,88,34)" rx="2" ry="2" />
<text  x="1108.42" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.02%)</title><rect x="755.4" y="2005" width="0.3" height="15.0" fill="rgb(218,184,38)" rx="2" ry="2" />
<text  x="758.41" y="2015.5" ></text>
</g>
<g >
<title>flush_tlb_mm_range (4 samples, 0.02%)</title><rect x="57.2" y="1893" width="0.2" height="15.0" fill="rgb(206,5,32)" rx="2" ry="2" />
<text  x="60.15" y="1903.5" ></text>
</g>
<g >
<title>fasttext::Model::predict (3 samples, 0.02%)</title><rect x="760.5" y="2037" width="0.2" height="15.0" fill="rgb(215,79,43)" rx="2" ry="2" />
<text  x="763.52" y="2047.5" ></text>
</g>
<g >
<title>__sanitizer::ThreadContextBase::OnJoined (4 samples, 0.02%)</title><rect x="755.4" y="2037" width="0.3" height="15.0" fill="rgb(206,0,3)" rx="2" ry="2" />
<text  x="758.41" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1186.2" y="309" width="0.1" height="15.0" fill="rgb(228,100,3)" rx="2" ry="2" />
<text  x="1189.21" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1186.6" y="2037" width="0.4" height="15.0" fill="rgb(254,12,13)" rx="2" ry="2" />
<text  x="1189.59" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="194.5" y="1669" width="0.1" height="15.0" fill="rgb(242,40,12)" rx="2" ry="2" />
<text  x="197.51" y="1679.5" ></text>
</g>
<g >
<title>try_charge (3 samples, 0.02%)</title><rect x="682.9" y="1733" width="0.2" height="15.0" fill="rgb(242,119,10)" rx="2" ry="2" />
<text  x="685.94" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.02%)</title><rect x="166.0" y="1205" width="0.3" height="15.0" fill="rgb(237,174,7)" rx="2" ry="2" />
<text  x="169.04" y="1215.5" ></text>
</g>
<g >
<title>call_rwsem_wake (2 samples, 0.01%)</title><rect x="1097.2" y="1941" width="0.1" height="15.0" fill="rgb(247,129,52)" rx="2" ry="2" />
<text  x="1100.21" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (696 samples, 3.72%)</title><rect x="57.7" y="2037" width="44.0" height="15.0" fill="rgb(247,203,51)" rx="2" ry="2" />
<text  x="60.72" y="2047.5" >[unk..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (78 samples, 0.42%)</title><rect x="159.5" y="1813" width="4.9" height="15.0" fill="rgb(221,8,2)" rx="2" ry="2" />
<text  x="162.47" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (314 samples, 1.68%)</title><rect x="57.9" y="405" width="19.8" height="15.0" fill="rgb(206,107,1)" rx="2" ry="2" />
<text  x="60.91" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1187.0" y="1621" width="0.2" height="15.0" fill="rgb(214,2,50)" rx="2" ry="2" />
<text  x="1190.03" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (319 samples, 1.71%)</title><rect x="57.9" y="773" width="20.1" height="15.0" fill="rgb(219,201,27)" rx="2" ry="2" />
<text  x="60.91" y="783.5" ></text>
</g>
<g >
<title>Eigen::internal::gemv_dense_selector&lt;2, 1, true&gt;::run&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; &gt; (325 samples, 1.74%)</title><rect x="382.8" y="1941" width="20.5" height="15.0" fill="rgb(230,50,14)" rx="2" ry="2" />
<text  x="385.80" y="1951.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (7 samples, 0.04%)</title><rect x="526.5" y="1909" width="0.5" height="15.0" fill="rgb(236,12,37)" rx="2" ry="2" />
<text  x="529.53" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (9 samples, 0.05%)</title><rect x="138.5" y="1701" width="0.5" height="15.0" fill="rgb(208,37,33)" rx="2" ry="2" />
<text  x="141.45" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1186.2" y="149" width="0.1" height="15.0" fill="rgb(219,16,3)" rx="2" ry="2" />
<text  x="1189.21" y="159.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (2 samples, 0.01%)</title><rect x="141.4" y="1557" width="0.1" height="15.0" fill="rgb(254,81,48)" rx="2" ry="2" />
<text  x="144.36" y="1567.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (4 samples, 0.02%)</title><rect x="869.2" y="2005" width="0.2" height="15.0" fill="rgb(242,196,1)" rx="2" ry="2" />
<text  x="872.15" y="2015.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="165.3" y="1765" width="0.2" height="15.0" fill="rgb(239,78,35)" rx="2" ry="2" />
<text  x="168.34" y="1775.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_Alloc_node&gt; (4 samples, 0.02%)</title><rect x="508.7" y="1797" width="0.3" height="15.0" fill="rgb(253,179,33)" rx="2" ry="2" />
<text  x="511.73" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (63 samples, 0.34%)</title><rect x="196.3" y="1589" width="3.9" height="15.0" fill="rgb(249,227,54)" rx="2" ry="2" />
<text  x="199.27" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1186.4" y="1365" width="0.2" height="15.0" fill="rgb(252,155,49)" rx="2" ry="2" />
<text  x="1189.40" y="1375.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (2 samples, 0.01%)</title><rect x="100.9" y="2005" width="0.1" height="15.0" fill="rgb(252,146,25)" rx="2" ry="2" />
<text  x="103.90" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="194.5" y="1685" width="0.1" height="15.0" fill="rgb(223,187,41)" rx="2" ry="2" />
<text  x="197.51" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (449 samples, 2.40%)</title><rect x="195.4" y="1861" width="28.3" height="15.0" fill="rgb(243,228,32)" rx="2" ry="2" />
<text  x="198.39" y="1871.5" >st..</text>
</g>
<g >
<title>may_expand_vm (2 samples, 0.01%)</title><rect x="1096.3" y="1941" width="0.1" height="15.0" fill="rgb(221,7,10)" rx="2" ry="2" />
<text  x="1099.26" y="1951.5" ></text>
</g>
<g >
<title>GetHost (479 samples, 2.56%)</title><rect x="195.1" y="1973" width="30.3" height="15.0" fill="rgb(223,201,13)" rx="2" ry="2" />
<text  x="198.14" y="1983.5" >Ge..</text>
</g>
<g >
<title>do_page_fault (32 samples, 0.17%)</title><rect x="681.1" y="1829" width="2.0" height="15.0" fill="rgb(252,211,15)" rx="2" ry="2" />
<text  x="684.11" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.02%)</title><rect x="1186.8" y="213" width="0.2" height="15.0" fill="rgb(215,38,38)" rx="2" ry="2" />
<text  x="1189.78" y="223.5" ></text>
</g>
<g >
<title>__asan::AsanTSDGet (6 samples, 0.03%)</title><rect x="577.3" y="1877" width="0.4" height="15.0" fill="rgb(208,132,51)" rx="2" ry="2" />
<text  x="580.28" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="57.6" y="1525" width="0.1" height="15.0" fill="rgb(247,227,28)" rx="2" ry="2" />
<text  x="60.59" y="1535.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.02%)</title><rect x="221.7" y="1669" width="0.3" height="15.0" fill="rgb(246,26,3)" rx="2" ry="2" />
<text  x="224.71" y="1679.5" ></text>
</g>
<g >
<title>page_fault (4 samples, 0.02%)</title><rect x="1014.8" y="2037" width="0.3" height="15.0" fill="rgb(207,172,3)" rx="2" ry="2" />
<text  x="1017.84" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (88 samples, 0.47%)</title><rect x="172.5" y="1621" width="5.5" height="15.0" fill="rgb(240,96,20)" rx="2" ry="2" />
<text  x="175.48" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1186.6" y="1653" width="0.4" height="15.0" fill="rgb(248,186,49)" rx="2" ry="2" />
<text  x="1189.59" y="1663.5" ></text>
</g>
<g >
<title>release_pages (2 samples, 0.01%)</title><rect x="1096.6" y="1813" width="0.2" height="15.0" fill="rgb(212,170,9)" rx="2" ry="2" />
<text  x="1099.64" y="1823.5" ></text>
</g>
<g >
<title>smp_call_function_single (3 samples, 0.02%)</title><rect x="57.2" y="1813" width="0.2" height="15.0" fill="rgb(242,25,29)" rx="2" ry="2" />
<text  x="60.22" y="1823.5" ></text>
</g>
<g >
<title>onmt::add_final_token&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (38 samples, 0.20%)</title><rect x="558.8" y="1893" width="2.4" height="15.0" fill="rgb(211,111,27)" rx="2" ry="2" />
<text  x="561.84" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (5 samples, 0.03%)</title><rect x="217.5" y="1781" width="0.3" height="15.0" fill="rgb(247,225,27)" rx="2" ry="2" />
<text  x="220.48" y="1791.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;std::__detail::_State&lt;char&gt; const*, std::__detail::_State&lt;char&gt;*&gt; (8 samples, 0.04%)</title><rect x="138.5" y="1653" width="0.5" height="15.0" fill="rgb(215,211,42)" rx="2" ry="2" />
<text  x="141.52" y="1663.5" ></text>
</g>
<g >
<title>__asan::GetMallocContextSize (3 samples, 0.02%)</title><rect x="604.2" y="1845" width="0.2" height="15.0" fill="rgb(228,139,48)" rx="2" ry="2" />
<text  x="607.23" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1186.6" y="1989" width="0.4" height="15.0" fill="rgb(238,13,38)" rx="2" ry="2" />
<text  x="1189.59" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (320 samples, 1.71%)</title><rect x="57.9" y="885" width="20.2" height="15.0" fill="rgb(233,54,30)" rx="2" ry="2" />
<text  x="60.91" y="895.5" ></text>
</g>
<g >
<title>handle_mm_fault (19 samples, 0.10%)</title><rect x="681.9" y="1797" width="1.2" height="15.0" fill="rgb(221,125,46)" rx="2" ry="2" />
<text  x="684.93" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (306 samples, 1.64%)</title><rect x="57.9" y="101" width="19.3" height="15.0" fill="rgb(207,19,54)" rx="2" ry="2" />
<text  x="60.91" y="111.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1187.0" y="997" width="0.2" height="15.0" fill="rgb(228,86,35)" rx="2" ry="2" />
<text  x="1190.03" y="1007.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;TThreadPool::TThreadPool (17 samples, 0.09%)</title><rect x="27.1" y="2037" width="1.1" height="15.0" fill="rgb(231,131,44)" rx="2" ry="2" />
<text  x="30.11" y="2047.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::basic_regex&lt;char const*&gt; (435 samples, 2.33%)</title><rect x="138.3" y="1957" width="27.4" height="15.0" fill="rgb(254,110,14)" rx="2" ry="2" />
<text  x="141.26" y="1967.5" >s..</text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (7 samples, 0.04%)</title><rect x="142.7" y="1557" width="0.4" height="15.0" fill="rgb(209,220,28)" rx="2" ry="2" />
<text  x="145.68" y="1567.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (22 samples, 0.12%)</title><rect x="512.4" y="2021" width="1.4" height="15.0" fill="rgb(250,4,10)" rx="2" ry="2" />
<text  x="515.39" y="2031.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (4 samples, 0.02%)</title><rect x="1146.4" y="2037" width="0.3" height="15.0" fill="rgb(213,98,13)" rx="2" ry="2" />
<text  x="1149.45" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.02%)</title><rect x="44.2" y="2021" width="0.3" height="15.0" fill="rgb(236,19,7)" rx="2" ry="2" />
<text  x="47.21" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1186.4" y="837" width="0.2" height="15.0" fill="rgb(225,184,51)" rx="2" ry="2" />
<text  x="1189.40" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1186.6" y="1861" width="0.4" height="15.0" fill="rgb(248,158,21)" rx="2" ry="2" />
<text  x="1189.59" y="1871.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="126.9" y="2037" width="0.1" height="15.0" fill="rgb(211,174,48)" rx="2" ry="2" />
<text  x="129.90" y="2047.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (2 samples, 0.01%)</title><rect x="204.5" y="1589" width="0.1" height="15.0" fill="rgb(216,220,0)" rx="2" ry="2" />
<text  x="207.48" y="1599.5" ></text>
</g>
<g >
<title>__asan::Allocator::Allocate (16 samples, 0.09%)</title><rect x="101.7" y="2037" width="1.0" height="15.0" fill="rgb(248,36,5)" rx="2" ry="2" />
<text  x="104.65" y="2047.5" ></text>
</g>
<g >
<title>TDocument::TDocument (10 samples, 0.05%)</title><rect x="127.9" y="1989" width="0.6" height="15.0" fill="rgb(235,163,27)" rx="2" ry="2" />
<text  x="130.91" y="1999.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (53 samples, 0.28%)</title><rect x="202.3" y="1605" width="3.4" height="15.0" fill="rgb(207,133,40)" rx="2" ry="2" />
<text  x="205.33" y="1615.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64LocalCache&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&gt; &gt;::Deallocate (2 samples, 0.01%)</title><rect x="79.5" y="1189" width="0.1" height="15.0" fill="rgb(243,179,7)" rx="2" ry="2" />
<text  x="82.50" y="1199.5" ></text>
</g>
<g >
<title>[[vdso]] (6 samples, 0.03%)</title><rect x="127.0" y="2021" width="0.4" height="15.0" fill="rgb(232,143,9)" rx="2" ry="2" />
<text  x="130.03" y="2031.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::Unwind (4 samples, 0.02%)</title><rect x="191.6" y="1653" width="0.3" height="15.0" fill="rgb(212,68,9)" rx="2" ry="2" />
<text  x="194.60" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1186.4" y="917" width="0.2" height="15.0" fill="rgb(229,104,28)" rx="2" ry="2" />
<text  x="1189.40" y="927.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.01%)</title><rect x="941.9" y="2037" width="0.2" height="15.0" fill="rgb(217,61,8)" rx="2" ry="2" />
<text  x="944.93" y="2047.5" ></text>
</g>
<g >
<title>page_add_new_anon_rmap (2 samples, 0.01%)</title><rect x="939.1" y="1925" width="0.1" height="15.0" fill="rgb(218,176,40)" rx="2" ry="2" />
<text  x="942.09" y="1935.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (3 samples, 0.02%)</title><rect x="100.9" y="2021" width="0.2" height="15.0" fill="rgb(212,38,49)" rx="2" ry="2" />
<text  x="103.90" y="2031.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (4 samples, 0.02%)</title><rect x="600.6" y="1845" width="0.2" height="15.0" fill="rgb(235,86,9)" rx="2" ry="2" />
<text  x="603.57" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1186.2" y="1093" width="0.1" height="15.0" fill="rgb(220,133,27)" rx="2" ry="2" />
<text  x="1189.21" y="1103.5" ></text>
</g>
<g >
<title>vfs_read (3 samples, 0.02%)</title><rect x="127.5" y="1957" width="0.2" height="15.0" fill="rgb(233,103,15)" rx="2" ry="2" />
<text  x="130.47" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.0" y="453" width="0.2" height="15.0" fill="rgb(219,35,43)" rx="2" ry="2" />
<text  x="1190.03" y="463.5" ></text>
</g>
<g >
<title>unmap_region (6 samples, 0.03%)</title><rect x="1096.4" y="1909" width="0.4" height="15.0" fill="rgb(208,124,48)" rx="2" ry="2" />
<text  x="1099.39" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="224.9" y="1845" width="0.4" height="15.0" fill="rgb(208,223,39)" rx="2" ry="2" />
<text  x="227.93" y="1855.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.01%)</title><rect x="159.7" y="1701" width="0.1" height="15.0" fill="rgb(247,113,22)" rx="2" ry="2" />
<text  x="162.66" y="1711.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.01%)</title><rect x="168.6" y="1557" width="0.2" height="15.0" fill="rgb(252,141,22)" rx="2" ry="2" />
<text  x="171.63" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (511 samples, 2.73%)</title><rect x="57.8" y="1829" width="32.3" height="15.0" fill="rgb(206,96,37)" rx="2" ry="2" />
<text  x="60.85" y="1839.5" >[u..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="1105.5" y="2021" width="0.2" height="15.0" fill="rgb(231,131,15)" rx="2" ry="2" />
<text  x="1108.54" y="2031.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;std::unique_ptr&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;  (3,626 samples, 19.40%)</title><rect x="517.1" y="2005" width="228.9" height="15.0" fill="rgb(234,118,33)" rx="2" ry="2" />
<text  x="520.12" y="2015.5" >std::_Function_handler&lt;std::un..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1186.4" y="997" width="0.2" height="15.0" fill="rgb(253,90,15)" rx="2" ry="2" />
<text  x="1189.40" y="1007.5" ></text>
</g>
<g >
<title>[libOpenNMTTokenizer.so] (2 samples, 0.01%)</title><rect x="562.5" y="1893" width="0.1" height="15.0" fill="rgb(240,26,6)" rx="2" ry="2" />
<text  x="565.51" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1186.2" y="581" width="0.1" height="15.0" fill="rgb(250,216,20)" rx="2" ry="2" />
<text  x="1189.21" y="591.5" ></text>
</g>
<g >
<title>fasttext::Vector::addRow (10 samples, 0.05%)</title><rect x="791.8" y="2037" width="0.7" height="15.0" fill="rgb(243,187,32)" rx="2" ry="2" />
<text  x="794.83" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1186.7" y="709" width="0.3" height="15.0" fill="rgb(252,70,37)" rx="2" ry="2" />
<text  x="1189.72" y="719.5" ></text>
</g>
<g >
<title>do_page_fault (5 samples, 0.03%)</title><rect x="1188.9" y="2005" width="0.3" height="15.0" fill="rgb(246,187,7)" rx="2" ry="2" />
<text  x="1191.86" y="2015.5" ></text>
</g>
<g >
<title>__vma_adjust (3 samples, 0.02%)</title><rect x="756.0" y="1877" width="0.2" height="15.0" fill="rgb(221,79,19)" rx="2" ry="2" />
<text  x="758.97" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (79 samples, 0.42%)</title><rect x="206.6" y="1669" width="4.9" height="15.0" fill="rgb(219,120,26)" rx="2" ry="2" />
<text  x="209.56" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_quantifier (2 samples, 0.01%)</title><rect x="164.8" y="1829" width="0.2" height="15.0" fill="rgb(236,122,51)" rx="2" ry="2" />
<text  x="167.84" y="1839.5" ></text>
</g>
<g >
<title>__interceptor_strcmp (7 samples, 0.04%)</title><rect x="42.6" y="2037" width="0.4" height="15.0" fill="rgb(215,9,23)" rx="2" ry="2" />
<text  x="45.57" y="2047.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::Unwind (11 samples, 0.06%)</title><rect x="581.9" y="1877" width="0.7" height="15.0" fill="rgb(244,98,30)" rx="2" ry="2" />
<text  x="584.95" y="1887.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (3 samples, 0.02%)</title><rect x="335.5" y="1989" width="0.1" height="15.0" fill="rgb(214,219,10)" rx="2" ry="2" />
<text  x="338.46" y="1999.5" ></text>
</g>
<g >
<title>Preprocess (3,015 samples, 16.13%)</title><rect x="554.6" y="1957" width="190.3" height="15.0" fill="rgb(210,206,14)" rx="2" ry="2" />
<text  x="557.55" y="1967.5" >Preprocess</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="166.2" y="1157" width="0.1" height="15.0" fill="rgb(254,115,15)" rx="2" ry="2" />
<text  x="169.16" y="1167.5" ></text>
</g>
<g >
<title>fasttext::DenseMatrix::addRowToVector (995 samples, 5.32%)</title><rect x="251.9" y="1973" width="62.9" height="15.0" fill="rgb(226,165,48)" rx="2" ry="2" />
<text  x="254.95" y="1983.5" >fastte..</text>
</g>
<g >
<title>__asan_memset (2 samples, 0.01%)</title><rect x="320.7" y="1941" width="0.2" height="15.0" fill="rgb(233,229,53)" rx="2" ry="2" />
<text  x="323.75" y="1951.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::computeSubwords (13 samples, 0.07%)</title><rect x="869.9" y="1957" width="0.8" height="15.0" fill="rgb(232,50,53)" rx="2" ry="2" />
<text  x="872.91" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.04%)</title><rect x="165.8" y="1733" width="0.6" height="15.0" fill="rgb(236,140,31)" rx="2" ry="2" />
<text  x="168.85" y="1743.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="79.0" y="1141" width="0.1" height="15.0" fill="rgb(216,196,13)" rx="2" ry="2" />
<text  x="81.99" y="1151.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (20 samples, 0.11%)</title><rect x="638.3" y="1877" width="1.2" height="15.0" fill="rgb(220,46,16)" rx="2" ry="2" />
<text  x="641.25" y="1887.5" ></text>
</g>
<g >
<title>cpumask_any_but (3 samples, 0.02%)</title><rect x="939.7" y="1893" width="0.1" height="15.0" fill="rgb(233,50,9)" rx="2" ry="2" />
<text  x="942.66" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1186.4" y="757" width="0.2" height="15.0" fill="rgb(215,12,40)" rx="2" ry="2" />
<text  x="1189.40" y="767.5" ></text>
</g>
<g >
<title>native_flush_tlb_others (3 samples, 0.02%)</title><rect x="513.0" y="1893" width="0.1" height="15.0" fill="rgb(211,179,30)" rx="2" ry="2" />
<text  x="515.95" y="1903.5" ></text>
</g>
<g >
<title>fasttext::FastText::loadModel (10 samples, 0.05%)</title><rect x="506.8" y="1989" width="0.7" height="15.0" fill="rgb(227,7,27)" rx="2" ry="2" />
<text  x="509.83" y="1999.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (3 samples, 0.02%)</title><rect x="216.9" y="1653" width="0.2" height="15.0" fill="rgb(214,156,1)" rx="2" ry="2" />
<text  x="219.91" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1186.2" y="245" width="0.1" height="15.0" fill="rgb(232,183,27)" rx="2" ry="2" />
<text  x="1189.21" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (424 samples, 2.27%)</title><rect x="138.3" y="1893" width="26.8" height="15.0" fill="rgb(213,178,45)" rx="2" ry="2" />
<text  x="141.33" y="1903.5" >s..</text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.02%)</title><rect x="139.3" y="1589" width="0.2" height="15.0" fill="rgb(247,92,39)" rx="2" ry="2" />
<text  x="142.27" y="1599.5" ></text>
</g>
<g >
<title>__sanitizer::internal_munmap (2 samples, 0.01%)</title><rect x="87.1" y="1653" width="0.1" height="15.0" fill="rgb(206,116,32)" rx="2" ry="2" />
<text  x="90.07" y="1663.5" ></text>
</g>
<g >
<title>[tgnews] (2 samples, 0.01%)</title><rect x="57.6" y="2037" width="0.1" height="15.0" fill="rgb(230,110,6)" rx="2" ry="2" />
<text  x="60.59" y="2047.5" ></text>
</g>
<g >
<title>__pthread_getspecific (11 samples, 0.06%)</title><rect x="580.9" y="1877" width="0.7" height="15.0" fill="rgb(206,32,49)" rx="2" ry="2" />
<text  x="583.94" y="1887.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (2 samples, 0.01%)</title><rect x="82.0" y="1253" width="0.1" height="15.0" fill="rgb(213,77,49)" rx="2" ry="2" />
<text  x="85.02" y="1263.5" ></text>
</g>
<g >
<title>do_page_fault (8 samples, 0.04%)</title><rect x="643.2" y="1845" width="0.5" height="15.0" fill="rgb(242,216,21)" rx="2" ry="2" />
<text  x="646.18" y="1855.5" ></text>
</g>
<g >
<title>__vfs_read (3 samples, 0.02%)</title><rect x="127.5" y="1941" width="0.2" height="15.0" fill="rgb(214,2,26)" rx="2" ry="2" />
<text  x="130.47" y="1951.5" ></text>
</g>
<g >
<title>__pthread_once_slow (3,630 samples, 19.42%)</title><rect x="516.9" y="2037" width="229.1" height="15.0" fill="rgb(250,146,38)" rx="2" ry="2" />
<text  x="519.87" y="2047.5" >__pthread_once_slow</text>
</g>
<g >
<title>__handle_mm_fault (4 samples, 0.02%)</title><rect x="1098.1" y="1957" width="0.2" height="15.0" fill="rgb(205,214,38)" rx="2" ry="2" />
<text  x="1101.09" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (59 samples, 0.32%)</title><rect x="155.4" y="1701" width="3.7" height="15.0" fill="rgb(247,156,0)" rx="2" ry="2" />
<text  x="158.37" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="194.4" y="1749" width="0.2" height="15.0" fill="rgb(236,89,13)" rx="2" ry="2" />
<text  x="197.38" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1186.2" y="1797" width="0.1" height="15.0" fill="rgb(214,44,16)" rx="2" ry="2" />
<text  x="1189.21" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (74 samples, 0.40%)</title><rect x="139.1" y="1605" width="4.7" height="15.0" fill="rgb(239,214,29)" rx="2" ry="2" />
<text  x="142.15" y="1615.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;nlohmann::detail::json_ref&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; const*, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;*&gt; (2 samples, 0.01%)</title><rect x="507.5" y="1973" width="0.2" height="15.0" fill="rgb(210,93,22)" rx="2" ry="2" />
<text  x="510.53" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1186.4" y="773" width="0.2" height="15.0" fill="rgb(240,143,26)" rx="2" ry="2" />
<text  x="1189.40" y="783.5" ></text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.02%)</title><rect x="218.1" y="1701" width="0.2" height="15.0" fill="rgb(246,139,23)" rx="2" ry="2" />
<text  x="221.11" y="1711.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; const&amp;&gt; (2 samples, 0.01%)</title><rect x="508.9" y="1765" width="0.1" height="15.0" fill="rgb(238,106,24)" rx="2" ry="2" />
<text  x="511.85" y="1775.5" ></text>
</g>
<g >
<title>__asan::Allocator::Deallocate (2 samples, 0.01%)</title><rect x="202.8" y="1589" width="0.2" height="15.0" fill="rgb(247,110,11)" rx="2" ry="2" />
<text  x="205.84" y="1599.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (208 samples, 1.11%)</title><rect x="44.5" y="2037" width="13.1" height="15.0" fill="rgb(228,123,33)" rx="2" ry="2" />
<text  x="47.46" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (2 samples, 0.01%)</title><rect x="224.0" y="1813" width="0.2" height="15.0" fill="rgb(254,112,54)" rx="2" ry="2" />
<text  x="227.05" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (59 samples, 0.32%)</title><rect x="155.4" y="1685" width="3.7" height="15.0" fill="rgb(232,167,5)" rx="2" ry="2" />
<text  x="158.37" y="1695.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_range_insert&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (2 samples, 0.01%)</title><rect x="871.7" y="2037" width="0.2" height="15.0" fill="rgb(236,44,48)" rx="2" ry="2" />
<text  x="874.74" y="2047.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (9 samples, 0.05%)</title><rect x="176.8" y="1573" width="0.6" height="15.0" fill="rgb(220,144,54)" rx="2" ry="2" />
<text  x="179.83" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (316 samples, 1.69%)</title><rect x="57.9" y="613" width="20.0" height="15.0" fill="rgb(241,49,45)" rx="2" ry="2" />
<text  x="60.91" y="623.5" ></text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.02%)</title><rect x="178.3" y="1621" width="0.2" height="15.0" fill="rgb(221,133,31)" rx="2" ry="2" />
<text  x="181.28" y="1631.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (5 samples, 0.03%)</title><rect x="581.6" y="1877" width="0.3" height="15.0" fill="rgb(240,137,30)" rx="2" ry="2" />
<text  x="584.63" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="225.0" y="1669" width="0.2" height="15.0" fill="rgb(234,22,52)" rx="2" ry="2" />
<text  x="227.99" y="1679.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::Unwind (2 samples, 0.01%)</title><rect x="221.5" y="1669" width="0.1" height="15.0" fill="rgb(216,161,23)" rx="2" ry="2" />
<text  x="224.46" y="1679.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt; &gt;::_M_manager (9 samples, 0.05%)</title><rect x="802.1" y="2037" width="0.5" height="15.0" fill="rgb(249,214,36)" rx="2" ry="2" />
<text  x="805.05" y="2047.5" ></text>
</g>
<g >
<title>fasttext::Matrix::size (17 samples, 0.09%)</title><rect x="759.4" y="2037" width="1.1" height="15.0" fill="rgb(233,63,20)" rx="2" ry="2" />
<text  x="762.45" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1187.0" y="757" width="0.2" height="15.0" fill="rgb(246,207,44)" rx="2" ry="2" />
<text  x="1190.03" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (5 samples, 0.03%)</title><rect x="223.9" y="1829" width="0.3" height="15.0" fill="rgb(241,188,7)" rx="2" ry="2" />
<text  x="226.86" y="1839.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::future&lt;std::result_of&lt;Annotate (3 samples, 0.02%)</title><rect x="27.2" y="2021" width="0.2" height="15.0" fill="rgb(235,107,16)" rx="2" ry="2" />
<text  x="30.17" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="165.8" y="1381" width="0.5" height="15.0" fill="rgb(211,38,21)" rx="2" ry="2" />
<text  x="168.85" y="1391.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (2 samples, 0.01%)</title><rect x="57.0" y="1893" width="0.1" height="15.0" fill="rgb(206,107,22)" rx="2" ry="2" />
<text  x="59.96" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="225.0" y="1637" width="0.2" height="15.0" fill="rgb(227,80,28)" rx="2" ry="2" />
<text  x="227.99" y="1647.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (4 samples, 0.02%)</title><rect x="128.0" y="1973" width="0.3" height="15.0" fill="rgb(254,44,5)" rx="2" ry="2" />
<text  x="131.04" y="1983.5" ></text>
</g>
<g >
<title>__sanitizer::MonotonicNanoTime (3 samples, 0.02%)</title><rect x="1015.2" y="2053" width="0.1" height="15.0" fill="rgb(244,0,31)" rx="2" ry="2" />
<text  x="1018.15" y="2063.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (2 samples, 0.01%)</title><rect x="869.0" y="1989" width="0.1" height="15.0" fill="rgb(215,48,15)" rx="2" ry="2" />
<text  x="871.96" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (75 samples, 0.40%)</title><rect x="188.6" y="1717" width="4.8" height="15.0" fill="rgb(235,131,9)" rx="2" ry="2" />
<text  x="191.63" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="166.0" y="1125" width="0.2" height="15.0" fill="rgb(220,169,21)" rx="2" ry="2" />
<text  x="169.04" y="1135.5" ></text>
</g>
<g >
<title>operator new (8 samples, 0.04%)</title><rect x="222.0" y="1669" width="0.5" height="15.0" fill="rgb(224,76,41)" rx="2" ry="2" />
<text  x="224.96" y="1679.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (36 samples, 0.19%)</title><rect x="156.5" y="1653" width="2.3" height="15.0" fill="rgb(232,88,33)" rx="2" ry="2" />
<text  x="159.51" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (81 samples, 0.43%)</title><rect x="206.6" y="1749" width="5.1" height="15.0" fill="rgb(245,77,54)" rx="2" ry="2" />
<text  x="209.56" y="1759.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (22 samples, 0.12%)</title><rect x="755.8" y="1973" width="1.4" height="15.0" fill="rgb(207,92,35)" rx="2" ry="2" />
<text  x="758.78" y="1983.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (3 samples, 0.02%)</title><rect x="175.1" y="1573" width="0.2" height="15.0" fill="rgb(239,67,40)" rx="2" ry="2" />
<text  x="178.13" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="194.4" y="1637" width="0.1" height="15.0" fill="rgb(238,9,2)" rx="2" ry="2" />
<text  x="197.38" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (76 samples, 0.41%)</title><rect x="183.6" y="1765" width="4.8" height="15.0" fill="rgb(246,122,28)" rx="2" ry="2" />
<text  x="186.59" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="759.3" y="2021" width="0.1" height="15.0" fill="rgb(224,211,40)" rx="2" ry="2" />
<text  x="762.32" y="2031.5" ></text>
</g>
<g >
<title>__do_munmap (2 samples, 0.01%)</title><rect x="87.1" y="1573" width="0.1" height="15.0" fill="rgb(217,133,37)" rx="2" ry="2" />
<text  x="90.07" y="1583.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (2 samples, 0.01%)</title><rect x="79.9" y="1221" width="0.2" height="15.0" fill="rgb(251,54,22)" rx="2" ry="2" />
<text  x="82.94" y="1231.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (10 samples, 0.05%)</title><rect x="802.9" y="2037" width="0.7" height="15.0" fill="rgb(231,111,54)" rx="2" ry="2" />
<text  x="805.94" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1186.2" y="437" width="0.1" height="15.0" fill="rgb(215,41,13)" rx="2" ry="2" />
<text  x="1189.21" y="447.5" ></text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (2 samples, 0.01%)</title><rect x="937.5" y="1925" width="0.1" height="15.0" fill="rgb(239,64,34)" rx="2" ry="2" />
<text  x="940.51" y="1935.5" ></text>
</g>
<g >
<title>do_page_fault (134 samples, 0.72%)</title><rect x="933.5" y="2021" width="8.4" height="15.0" fill="rgb(218,127,7)" rx="2" ry="2" />
<text  x="936.47" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1186.7" y="1061" width="0.3" height="15.0" fill="rgb(229,117,37)" rx="2" ry="2" />
<text  x="1189.72" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (2 samples, 0.01%)</title><rect x="223.5" y="1829" width="0.2" height="15.0" fill="rgb(222,38,14)" rx="2" ry="2" />
<text  x="226.54" y="1839.5" ></text>
</g>
<g >
<title>__asan::Allocator::Deallocate (6 samples, 0.03%)</title><rect x="576.3" y="1877" width="0.4" height="15.0" fill="rgb(214,226,51)" rx="2" ry="2" />
<text  x="579.33" y="1887.5" ></text>
</g>
<g >
<title>__asan::asan_memalign (9 samples, 0.05%)</title><rect x="1161.4" y="2037" width="0.6" height="15.0" fill="rgb(251,63,4)" rx="2" ry="2" />
<text  x="1164.41" y="2047.5" ></text>
</g>
<g >
<title>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::dump (4 samples, 0.02%)</title><rect x="508.0" y="1925" width="0.3" height="15.0" fill="rgb(233,96,46)" rx="2" ry="2" />
<text  x="511.03" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="194.4" y="1461" width="0.1" height="15.0" fill="rgb(211,47,1)" rx="2" ry="2" />
<text  x="197.38" y="1471.5" ></text>
</g>
<g >
<title>operator delete[] (3 samples, 0.02%)</title><rect x="1104.7" y="2053" width="0.1" height="15.0" fill="rgb(236,155,46)" rx="2" ry="2" />
<text  x="1107.66" y="2063.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="154.8" y="1637" width="0.1" height="15.0" fill="rgb(234,155,3)" rx="2" ry="2" />
<text  x="157.80" y="1647.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="1094.5" y="2021" width="0.1" height="15.0" fill="rgb(207,141,17)" rx="2" ry="2" />
<text  x="1097.50" y="2031.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (8 samples, 0.04%)</title><rect x="320.2" y="1941" width="0.5" height="15.0" fill="rgb(223,74,3)" rx="2" ry="2" />
<text  x="323.18" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1186.6" y="1925" width="0.4" height="15.0" fill="rgb(221,85,19)" rx="2" ry="2" />
<text  x="1189.59" y="1935.5" ></text>
</g>
<g >
<title>__do_page_fault (5 samples, 0.03%)</title><rect x="1188.9" y="1989" width="0.3" height="15.0" fill="rgb(215,4,24)" rx="2" ry="2" />
<text  x="1191.86" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1186.7" y="1493" width="0.3" height="15.0" fill="rgb(221,219,42)" rx="2" ry="2" />
<text  x="1189.65" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (79 samples, 0.42%)</title><rect x="206.6" y="1717" width="4.9" height="15.0" fill="rgb(249,223,14)" rx="2" ry="2" />
<text  x="209.56" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.1" y="181" width="0.1" height="15.0" fill="rgb(209,169,15)" rx="2" ry="2" />
<text  x="1190.10" y="191.5" ></text>
</g>
<g >
<title>fasttext::FastText::createLoss (10 samples, 0.05%)</title><rect x="506.8" y="1973" width="0.7" height="15.0" fill="rgb(217,54,21)" rx="2" ry="2" />
<text  x="509.83" y="1983.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (4 samples, 0.02%)</title><rect x="582.6" y="1877" width="0.3" height="15.0" fill="rgb(226,1,3)" rx="2" ry="2" />
<text  x="585.64" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1186.7" y="1189" width="0.3" height="15.0" fill="rgb(208,161,46)" rx="2" ry="2" />
<text  x="1189.72" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (449 samples, 2.40%)</title><rect x="195.4" y="1845" width="28.3" height="15.0" fill="rgb(232,169,8)" rx="2" ry="2" />
<text  x="198.39" y="1855.5" >st..</text>
</g>
<g >
<title>mem_cgroup_try_charge (8 samples, 0.04%)</title><rect x="682.6" y="1749" width="0.5" height="15.0" fill="rgb(251,167,39)" rx="2" ry="2" />
<text  x="685.63" y="1759.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (2 samples, 0.01%)</title><rect x="753.0" y="1941" width="0.1" height="15.0" fill="rgb(233,137,15)" rx="2" ry="2" />
<text  x="756.01" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1186.7" y="1461" width="0.3" height="15.0" fill="rgb(229,169,49)" rx="2" ry="2" />
<text  x="1189.65" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1186.7" y="693" width="0.3" height="15.0" fill="rgb(248,18,1)" rx="2" ry="2" />
<text  x="1189.72" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="194.3" y="1845" width="0.3" height="15.0" fill="rgb(227,97,11)" rx="2" ry="2" />
<text  x="197.32" y="1855.5" ></text>
</g>
<g >
<title>__asan::asan_memalign (3 samples, 0.02%)</title><rect x="592.6" y="1861" width="0.1" height="15.0" fill="rgb(224,6,17)" rx="2" ry="2" />
<text  x="595.55" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1186.7" y="789" width="0.3" height="15.0" fill="rgb(205,175,34)" rx="2" ry="2" />
<text  x="1189.72" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.05%)</title><rect x="165.8" y="1765" width="0.6" height="15.0" fill="rgb(217,35,54)" rx="2" ry="2" />
<text  x="168.85" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (370 samples, 1.98%)</title><rect x="57.8" y="1317" width="23.4" height="15.0" fill="rgb(206,53,35)" rx="2" ry="2" />
<text  x="60.85" y="1327.5" >[..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1186.7" y="917" width="0.3" height="15.0" fill="rgb(249,0,41)" rx="2" ry="2" />
<text  x="1189.72" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="225.1" y="1605" width="0.1" height="15.0" fill="rgb(213,39,40)" rx="2" ry="2" />
<text  x="228.06" y="1615.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (2 samples, 0.01%)</title><rect x="81.7" y="1349" width="0.1" height="15.0" fill="rgb(223,21,18)" rx="2" ry="2" />
<text  x="84.71" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (90 samples, 0.48%)</title><rect x="172.3" y="1717" width="5.7" height="15.0" fill="rgb(217,100,14)" rx="2" ry="2" />
<text  x="175.35" y="1727.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::set (38 samples, 0.20%)</title><rect x="565.0" y="1893" width="2.4" height="15.0" fill="rgb(216,214,37)" rx="2" ry="2" />
<text  x="567.97" y="1903.5" ></text>
</g>
<g >
<title>std::vector&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::allocator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;::_M_realloc_insert&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; const&amp;&gt; (5 samples, 0.03%)</title><rect x="508.7" y="1989" width="0.3" height="15.0" fill="rgb(213,66,53)" rx="2" ry="2" />
<text  x="511.73" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="1186.3" y="1509" width="0.3" height="15.0" fill="rgb(252,141,17)" rx="2" ry="2" />
<text  x="1189.34" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt;,  (9 samples, 0.05%)</title><rect x="224.8" y="1957" width="0.6" height="15.0" fill="rgb(222,100,27)" rx="2" ry="2" />
<text  x="227.80" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.0" y="1893" width="0.2" height="15.0" fill="rgb(225,45,29)" rx="2" ry="2" />
<text  x="1190.03" y="1903.5" ></text>
</g>
<g >
<title>__dynamic_cast (4 samples, 0.02%)</title><rect x="188.9" y="1685" width="0.2" height="15.0" fill="rgb(241,113,40)" rx="2" ry="2" />
<text  x="191.89" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="165.8" y="1461" width="0.5" height="15.0" fill="rgb(214,224,15)" rx="2" ry="2" />
<text  x="168.85" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="194.5" y="1365" width="0.1" height="15.0" fill="rgb(252,69,19)" rx="2" ry="2" />
<text  x="197.51" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (92 samples, 0.49%)</title><rect x="200.4" y="1717" width="5.8" height="15.0" fill="rgb(230,110,47)" rx="2" ry="2" />
<text  x="203.44" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="225.1" y="1541" width="0.1" height="15.0" fill="rgb(216,129,42)" rx="2" ry="2" />
<text  x="228.06" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1186.4" y="1205" width="0.2" height="15.0" fill="rgb(242,20,46)" rx="2" ry="2" />
<text  x="1189.40" y="1215.5" ></text>
</g>
<g >
<title>[unknown] (321 samples, 1.72%)</title><rect x="57.9" y="949" width="20.3" height="15.0" fill="rgb(222,23,3)" rx="2" ry="2" />
<text  x="60.91" y="959.5" ></text>
</g>
<g >
<title>memcpy@plt (2 samples, 0.01%)</title><rect x="1104.5" y="2053" width="0.2" height="15.0" fill="rgb(209,8,4)" rx="2" ry="2" />
<text  x="1107.53" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.0" y="293" width="0.2" height="15.0" fill="rgb(212,185,18)" rx="2" ry="2" />
<text  x="1190.03" y="303.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (2 samples, 0.01%)</title><rect x="1098.2" y="1941" width="0.1" height="15.0" fill="rgb(240,12,26)" rx="2" ry="2" />
<text  x="1101.22" y="1951.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (3 samples, 0.02%)</title><rect x="555.7" y="1925" width="0.2" height="15.0" fill="rgb(226,4,36)" rx="2" ry="2" />
<text  x="558.69" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1186.4" y="949" width="0.2" height="15.0" fill="rgb(228,59,20)" rx="2" ry="2" />
<text  x="1189.40" y="959.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotPut (21 samples, 0.11%)</title><rect x="1094.7" y="2053" width="1.3" height="15.0" fill="rgb(217,175,42)" rx="2" ry="2" />
<text  x="1097.69" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1186.2" y="1957" width="0.1" height="15.0" fill="rgb(236,53,11)" rx="2" ry="2" />
<text  x="1189.21" y="1967.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="1105.5" y="2005" width="0.2" height="15.0" fill="rgb(244,36,26)" rx="2" ry="2" />
<text  x="1108.54" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.05%)</title><rect x="165.8" y="1893" width="0.6" height="15.0" fill="rgb(207,160,9)" rx="2" ry="2" />
<text  x="168.85" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="166.0" y="1157" width="0.2" height="15.0" fill="rgb(208,209,15)" rx="2" ry="2" />
<text  x="169.04" y="1167.5" ></text>
</g>
<g >
<title>fasttext::QuantMatrix::addRowToVector (28 samples, 0.15%)</title><rect x="1098.7" y="2053" width="1.8" height="15.0" fill="rgb(215,4,47)" rx="2" ry="2" />
<text  x="1101.73" y="2063.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (3 samples, 0.02%)</title><rect x="796.1" y="2005" width="0.1" height="15.0" fill="rgb(232,20,23)" rx="2" ry="2" />
<text  x="799.06" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (497 samples, 2.66%)</title><rect x="57.8" y="1781" width="31.4" height="15.0" fill="rgb(233,224,37)" rx="2" ry="2" />
<text  x="60.85" y="1791.5" >[u..</text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="57.6" y="1653" width="0.1" height="15.0" fill="rgb(228,199,33)" rx="2" ry="2" />
<text  x="60.59" y="1663.5" ></text>
</g>
<g >
<title>TDocument::PreprocessTextFields (3,017 samples, 16.14%)</title><rect x="554.5" y="1973" width="190.4" height="15.0" fill="rgb(216,228,0)" rx="2" ry="2" />
<text  x="557.49" y="1983.5" >TDocument::PreprocessTex..</text>
</g>
<g >
<title>[unknown] (332 samples, 1.78%)</title><rect x="57.9" y="1125" width="21.0" height="15.0" fill="rgb(251,166,8)" rx="2" ry="2" />
<text  x="60.91" y="1135.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="314.6" y="1941" width="0.2" height="15.0" fill="rgb(226,39,26)" rx="2" ry="2" />
<text  x="317.63" y="1951.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.01%)</title><rect x="173.9" y="1589" width="0.1" height="15.0" fill="rgb(233,194,33)" rx="2" ry="2" />
<text  x="176.86" y="1599.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (3 samples, 0.02%)</title><rect x="938.8" y="1893" width="0.2" height="15.0" fill="rgb(232,95,1)" rx="2" ry="2" />
<text  x="941.78" y="1903.5" ></text>
</g>
<g >
<title>do_syscall_64 (20 samples, 0.11%)</title><rect x="1096.1" y="2021" width="1.3" height="15.0" fill="rgb(243,70,53)" rx="2" ry="2" />
<text  x="1099.14" y="2031.5" ></text>
</g>
<g >
<title>native_write_msr (23 samples, 0.12%)</title><rect x="940.2" y="1765" width="1.4" height="15.0" fill="rgb(226,226,53)" rx="2" ry="2" />
<text  x="943.16" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="194.4" y="1717" width="0.1" height="15.0" fill="rgb(207,45,48)" rx="2" ry="2" />
<text  x="197.38" y="1727.5" ></text>
</g>
<g >
<title>do_exit (5 samples, 0.03%)</title><rect x="1097.5" y="1989" width="0.3" height="15.0" fill="rgb(218,87,3)" rx="2" ry="2" />
<text  x="1100.46" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="194.4" y="1541" width="0.1" height="15.0" fill="rgb(213,117,21)" rx="2" ry="2" />
<text  x="197.38" y="1551.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::Unwind (3 samples, 0.02%)</title><rect x="605.2" y="1845" width="0.2" height="15.0" fill="rgb(250,116,29)" rx="2" ry="2" />
<text  x="608.18" y="1855.5" ></text>
</g>
<g >
<title>__sanitizer::internal_munmap (4 samples, 0.02%)</title><rect x="757.2" y="2037" width="0.2" height="15.0" fill="rgb(245,74,22)" rx="2" ry="2" />
<text  x="760.17" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1186.4" y="565" width="0.2" height="15.0" fill="rgb(220,143,9)" rx="2" ry="2" />
<text  x="1189.40" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1186.4" y="1221" width="0.2" height="15.0" fill="rgb(221,50,48)" rx="2" ry="2" />
<text  x="1189.40" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3 samples, 0.02%)</title><rect x="223.9" y="1813" width="0.1" height="15.0" fill="rgb(219,62,39)" rx="2" ry="2" />
<text  x="226.86" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="225.1" y="1413" width="0.1" height="15.0" fill="rgb(223,15,9)" rx="2" ry="2" />
<text  x="228.06" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (94 samples, 0.50%)</title><rect x="149.0" y="1701" width="5.9" height="15.0" fill="rgb(214,100,12)" rx="2" ry="2" />
<text  x="151.99" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="1186.3" y="1813" width="0.3" height="15.0" fill="rgb(223,153,47)" rx="2" ry="2" />
<text  x="1189.34" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="165.8" y="1589" width="0.5" height="15.0" fill="rgb(220,15,2)" rx="2" ry="2" />
<text  x="168.85" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.0" y="1637" width="0.2" height="15.0" fill="rgb(222,41,26)" rx="2" ry="2" />
<text  x="1190.03" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="57.6" y="1781" width="0.1" height="15.0" fill="rgb(211,39,22)" rx="2" ry="2" />
<text  x="60.59" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1186.7" y="677" width="0.3" height="15.0" fill="rgb(205,73,4)" rx="2" ry="2" />
<text  x="1189.72" y="687.5" ></text>
</g>
<g >
<title>fasttext::DenseMatrix::load (8 samples, 0.04%)</title><rect x="1097.8" y="2053" width="0.5" height="15.0" fill="rgb(227,90,8)" rx="2" ry="2" />
<text  x="1100.84" y="2063.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::get_case (2 samples, 0.01%)</title><rect x="558.4" y="1893" width="0.1" height="15.0" fill="rgb(234,225,48)" rx="2" ry="2" />
<text  x="561.40" y="1903.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (4 samples, 0.02%)</title><rect x="871.4" y="2005" width="0.3" height="15.0" fill="rgb(209,120,20)" rx="2" ry="2" />
<text  x="874.42" y="2015.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="224.3" y="1765" width="0.1" height="15.0" fill="rgb(223,121,27)" rx="2" ry="2" />
<text  x="227.30" y="1775.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (18 samples, 0.10%)</title><rect x="1174.4" y="2037" width="1.1" height="15.0" fill="rgb(252,88,33)" rx="2" ry="2" />
<text  x="1177.41" y="2047.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (5 samples, 0.03%)</title><rect x="84.8" y="1541" width="0.3" height="15.0" fill="rgb(218,64,16)" rx="2" ry="2" />
<text  x="87.80" y="1551.5" ></text>
</g>
<g >
<title>do_syscall_64 (5 samples, 0.03%)</title><rect x="1097.5" y="2037" width="0.3" height="15.0" fill="rgb(220,24,49)" rx="2" ry="2" />
<text  x="1100.46" y="2047.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (3 samples, 0.02%)</title><rect x="745.4" y="1957" width="0.2" height="15.0" fill="rgb(209,16,47)" rx="2" ry="2" />
<text  x="748.37" y="1967.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.03%)</title><rect x="480.5" y="1925" width="0.3" height="15.0" fill="rgb(245,90,49)" rx="2" ry="2" />
<text  x="483.51" y="1935.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.02%)</title><rect x="1118.9" y="2037" width="0.2" height="15.0" fill="rgb(210,78,5)" rx="2" ry="2" />
<text  x="1121.86" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.0" y="1301" width="0.2" height="15.0" fill="rgb(215,114,20)" rx="2" ry="2" />
<text  x="1190.03" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (78 samples, 0.42%)</title><rect x="206.6" y="1653" width="4.9" height="15.0" fill="rgb(229,142,37)" rx="2" ry="2" />
<text  x="209.62" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="1186.3" y="1653" width="0.3" height="15.0" fill="rgb(208,18,43)" rx="2" ry="2" />
<text  x="1189.34" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (306 samples, 1.64%)</title><rect x="57.9" y="85" width="19.3" height="15.0" fill="rgb(231,78,54)" rx="2" ry="2" />
<text  x="60.91" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1186.6" y="1877" width="0.4" height="15.0" fill="rgb(240,141,2)" rx="2" ry="2" />
<text  x="1189.59" y="1887.5" ></text>
</g>
<g >
<title>sqrtf32 (2 samples, 0.01%)</title><rect x="334.6" y="1989" width="0.1" height="15.0" fill="rgb(244,83,36)" rx="2" ry="2" />
<text  x="337.57" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (88 samples, 0.47%)</title><rect x="211.9" y="1749" width="5.5" height="15.0" fill="rgb(246,96,0)" rx="2" ry="2" />
<text  x="214.86" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1187.0" y="1909" width="0.2" height="15.0" fill="rgb(252,207,53)" rx="2" ry="2" />
<text  x="1190.03" y="1919.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64LocalCache&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&gt; &gt;::Deallocate (2 samples, 0.01%)</title><rect x="84.4" y="1509" width="0.1" height="15.0" fill="rgb(208,138,10)" rx="2" ry="2" />
<text  x="87.42" y="1519.5" ></text>
</g>
<g >
<title>__handle_mm_fault (3 samples, 0.02%)</title><rect x="1018.6" y="1973" width="0.2" height="15.0" fill="rgb(218,116,33)" rx="2" ry="2" />
<text  x="1021.56" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1186.4" y="533" width="0.2" height="15.0" fill="rgb(224,27,8)" rx="2" ry="2" />
<text  x="1189.40" y="543.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (20 samples, 0.11%)</title><rect x="1096.1" y="2037" width="1.3" height="15.0" fill="rgb(222,135,30)" rx="2" ry="2" />
<text  x="1099.14" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (8 samples, 0.04%)</title><rect x="165.2" y="1877" width="0.5" height="15.0" fill="rgb(224,12,29)" rx="2" ry="2" />
<text  x="168.15" y="1887.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&gt;::MaybeReleaseToOS (3 samples, 0.02%)</title><rect x="1017.0" y="2053" width="0.2" height="15.0" fill="rgb(244,148,18)" rx="2" ry="2" />
<text  x="1019.98" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (261 samples, 1.40%)</title><rect x="195.4" y="1781" width="16.5" height="15.0" fill="rgb(221,144,14)" rx="2" ry="2" />
<text  x="198.39" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (452 samples, 2.42%)</title><rect x="57.8" y="1621" width="28.6" height="15.0" fill="rgb(213,165,28)" rx="2" ry="2" />
<text  x="60.85" y="1631.5" >[u..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="82.5" y="1365" width="0.1" height="15.0" fill="rgb(248,46,26)" rx="2" ry="2" />
<text  x="85.46" y="1375.5" ></text>
</g>
<g >
<title>[unknown] (315 samples, 1.69%)</title><rect x="57.9" y="501" width="19.9" height="15.0" fill="rgb(222,137,1)" rx="2" ry="2" />
<text  x="60.91" y="511.5" ></text>
</g>
<g >
<title>std::__stable_sort_adaptive&lt;__gnu_cxx::__normal_iterator&lt;TDocument*, std::vector&lt;TDocument, std::allocator&lt;TDocument&gt; &gt; &gt;, TDocument*, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;main::$_1&gt; &gt; (5 samples, 0.03%)</title><rect x="509.4" y="2005" width="0.3" height="15.0" fill="rgb(238,219,38)" rx="2" ry="2" />
<text  x="512.36" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (5 samples, 0.03%)</title><rect x="164.5" y="1781" width="0.3" height="15.0" fill="rgb(242,125,3)" rx="2" ry="2" />
<text  x="167.46" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (320 samples, 1.71%)</title><rect x="57.9" y="837" width="20.2" height="15.0" fill="rgb(248,165,1)" rx="2" ry="2" />
<text  x="60.91" y="847.5" ></text>
</g>
<g >
<title>[unknown] (541 samples, 2.89%)</title><rect x="57.8" y="1957" width="34.2" height="15.0" fill="rgb(234,35,32)" rx="2" ry="2" />
<text  x="60.85" y="1967.5" >[u..</text>
</g>
<g >
<title>do_mmap (14 samples, 0.07%)</title><rect x="1096.3" y="1957" width="0.8" height="15.0" fill="rgb(221,51,31)" rx="2" ry="2" />
<text  x="1099.26" y="1967.5" ></text>
</g>
<g >
<title>free_unref_page_list (3 samples, 0.02%)</title><rect x="1097.6" y="1845" width="0.2" height="15.0" fill="rgb(207,216,40)" rx="2" ry="2" />
<text  x="1100.59" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1186.7" y="549" width="0.3" height="15.0" fill="rgb(215,146,47)" rx="2" ry="2" />
<text  x="1189.72" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="224.9" y="1813" width="0.4" height="15.0" fill="rgb(240,196,16)" rx="2" ry="2" />
<text  x="227.93" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="225.0" y="1701" width="0.2" height="15.0" fill="rgb(212,84,48)" rx="2" ry="2" />
<text  x="227.99" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1186.7" y="965" width="0.3" height="15.0" fill="rgb(230,171,1)" rx="2" ry="2" />
<text  x="1189.72" y="975.5" ></text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.02%)</title><rect x="95.3" y="2021" width="0.2" height="15.0" fill="rgb(254,195,29)" rx="2" ry="2" />
<text  x="98.28" y="2031.5" ></text>
</g>
<g >
<title>mem_cgroup_commit_charge (2 samples, 0.01%)</title><rect x="937.6" y="1925" width="0.2" height="15.0" fill="rgb(216,9,24)" rx="2" ry="2" />
<text  x="940.64" y="1935.5" ></text>
</g>
<g >
<title>get_page_from_freelist (3 samples, 0.02%)</title><rect x="752.6" y="1909" width="0.2" height="15.0" fill="rgb(251,166,47)" rx="2" ry="2" />
<text  x="755.63" y="1919.5" ></text>
</g>
<g >
<title>smp_call_function_many (26 samples, 0.14%)</title><rect x="940.0" y="1845" width="1.6" height="15.0" fill="rgb(252,118,15)" rx="2" ry="2" />
<text  x="942.97" y="1855.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.01%)</title><rect x="203.8" y="1589" width="0.2" height="15.0" fill="rgb(209,184,0)" rx="2" ry="2" />
<text  x="206.85" y="1599.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::Unwind (3 samples, 0.02%)</title><rect x="157.7" y="1637" width="0.2" height="15.0" fill="rgb(227,164,22)" rx="2" ry="2" />
<text  x="160.71" y="1647.5" ></text>
</g>
<g >
<title>exit_mmap (5 samples, 0.03%)</title><rect x="1097.5" y="1957" width="0.3" height="15.0" fill="rgb(231,129,34)" rx="2" ry="2" />
<text  x="1100.46" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (91 samples, 0.49%)</title><rect x="217.8" y="1781" width="5.7" height="15.0" fill="rgb(238,178,42)" rx="2" ry="2" />
<text  x="220.80" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.02%)</title><rect x="1186.3" y="1637" width="0.3" height="15.0" fill="rgb(250,70,49)" rx="2" ry="2" />
<text  x="1189.34" y="1647.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.03%)</title><rect x="1104.8" y="2053" width="0.4" height="15.0" fill="rgb(246,3,34)" rx="2" ry="2" />
<text  x="1107.85" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1186.4" y="1381" width="0.2" height="15.0" fill="rgb(231,53,51)" rx="2" ry="2" />
<text  x="1189.40" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (75 samples, 0.40%)</title><rect x="139.1" y="1653" width="4.7" height="15.0" fill="rgb(226,121,11)" rx="2" ry="2" />
<text  x="142.08" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (309 samples, 1.65%)</title><rect x="57.9" y="245" width="19.5" height="15.0" fill="rgb(252,15,10)" rx="2" ry="2" />
<text  x="60.91" y="255.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="57.6" y="1685" width="0.1" height="15.0" fill="rgb(207,228,43)" rx="2" ry="2" />
<text  x="60.59" y="1695.5" ></text>
</g>
<g >
<title>strlen@plt (2 samples, 0.01%)</title><rect x="1189.9" y="2053" width="0.1" height="15.0" fill="rgb(207,168,53)" rx="2" ry="2" />
<text  x="1192.87" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (62 samples, 0.33%)</title><rect x="139.5" y="1589" width="3.9" height="15.0" fill="rgb(209,169,18)" rx="2" ry="2" />
<text  x="142.46" y="1599.5" ></text>
</g>
<g >
<title>__vm_munmap (2 samples, 0.01%)</title><rect x="87.1" y="1589" width="0.1" height="15.0" fill="rgb(232,107,42)" rx="2" ry="2" />
<text  x="90.07" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (14 samples, 0.07%)</title><rect x="223.8" y="1893" width="0.9" height="15.0" fill="rgb(211,58,33)" rx="2" ry="2" />
<text  x="226.79" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="194.3" y="1813" width="0.3" height="15.0" fill="rgb(208,43,5)" rx="2" ry="2" />
<text  x="197.32" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="194.3" y="1861" width="0.3" height="15.0" fill="rgb(220,225,47)" rx="2" ry="2" />
<text  x="197.32" y="1871.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::Unwind (2 samples, 0.01%)</title><rect x="162.4" y="1669" width="0.2" height="15.0" fill="rgb(248,100,48)" rx="2" ry="2" />
<text  x="165.44" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1186.7" y="1269" width="0.3" height="15.0" fill="rgb(206,123,31)" rx="2" ry="2" />
<text  x="1189.72" y="1279.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (2 samples, 0.01%)</title><rect x="251.5" y="1957" width="0.1" height="15.0" fill="rgb(212,104,10)" rx="2" ry="2" />
<text  x="254.50" y="1967.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (6 samples, 0.03%)</title><rect x="490.2" y="1829" width="0.3" height="15.0" fill="rgb(228,10,0)" rx="2" ry="2" />
<text  x="493.17" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (6 samples, 0.03%)</title><rect x="193.7" y="1861" width="0.4" height="15.0" fill="rgb(225,193,30)" rx="2" ry="2" />
<text  x="196.68" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1186.2" y="1861" width="0.1" height="15.0" fill="rgb(230,171,12)" rx="2" ry="2" />
<text  x="1189.21" y="1871.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (2 samples, 0.01%)</title><rect x="89.0" y="1765" width="0.1" height="15.0" fill="rgb(252,52,54)" rx="2" ry="2" />
<text  x="91.97" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.05%)</title><rect x="165.8" y="1877" width="0.6" height="15.0" fill="rgb(248,102,2)" rx="2" ry="2" />
<text  x="168.85" y="1887.5" ></text>
</g>
<g >
<title>onmt::unicode::cp_to_utf8[abi:cxx11] (10 samples, 0.05%)</title><rect x="583.7" y="1877" width="0.6" height="15.0" fill="rgb(223,197,20)" rx="2" ry="2" />
<text  x="586.65" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1186.2" y="277" width="0.1" height="15.0" fill="rgb(227,132,28)" rx="2" ry="2" />
<text  x="1189.21" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1186.6" y="1685" width="0.4" height="15.0" fill="rgb(224,115,27)" rx="2" ry="2" />
<text  x="1189.59" y="1695.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (22 samples, 0.12%)</title><rect x="668.0" y="1861" width="1.4" height="15.0" fill="rgb(248,70,26)" rx="2" ry="2" />
<text  x="671.05" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.0" y="1109" width="0.2" height="15.0" fill="rgb(237,218,10)" rx="2" ry="2" />
<text  x="1190.03" y="1119.5" ></text>
</g>
<g >
<title>Eigen::DenseCoeffsBase&lt;Eigen::Transpose&lt;Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_sum_op&lt;float, float&gt;, Eigen::Product&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0&gt; const, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const&gt;, 0&gt;::coeff (325 samples, 1.74%)</title><rect x="231.3" y="1973" width="20.5" height="15.0" fill="rgb(223,29,16)" rx="2" ry="2" />
<text  x="234.31" y="1983.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64LocalCache&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&gt; &gt;::Deallocate (34 samples, 0.18%)</title><rect x="75.1" y="37" width="2.1" height="15.0" fill="rgb(229,200,41)" rx="2" ry="2" />
<text  x="78.08" y="47.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::json_value::destroy (3 samples, 0.02%)</title><rect x="508.3" y="2005" width="0.2" height="15.0" fill="rgb(216,119,37)" rx="2" ry="2" />
<text  x="511.28" y="2015.5" ></text>
</g>
<g >
<title>rwsem_wake (4 samples, 0.02%)</title><rect x="756.9" y="1909" width="0.3" height="15.0" fill="rgb(212,174,11)" rx="2" ry="2" />
<text  x="759.92" y="1919.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::basic_json (4 samples, 0.02%)</title><rect x="508.7" y="1829" width="0.3" height="15.0" fill="rgb(234,117,34)" rx="2" ry="2" />
<text  x="511.73" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.0" y="1589" width="0.2" height="15.0" fill="rgb(247,35,9)" rx="2" ry="2" />
<text  x="1190.03" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="1186.8" y="85" width="0.2" height="15.0" fill="rgb(233,10,15)" rx="2" ry="2" />
<text  x="1189.78" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (182 samples, 0.97%)</title><rect x="166.7" y="1749" width="11.5" height="15.0" fill="rgb(225,179,46)" rx="2" ry="2" />
<text  x="169.73" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (13 samples, 0.07%)</title><rect x="758.0" y="2021" width="0.8" height="15.0" fill="rgb(205,38,13)" rx="2" ry="2" />
<text  x="760.99" y="2031.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.01%)</title><rect x="619.4" y="1877" width="0.2" height="15.0" fill="rgb(239,74,40)" rx="2" ry="2" />
<text  x="622.44" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_quantifier (2 samples, 0.01%)</title><rect x="143.9" y="1717" width="0.1" height="15.0" fill="rgb(221,157,1)" rx="2" ry="2" />
<text  x="146.88" y="1727.5" ></text>
</g>
<g >
<title>__pthread_getspecific (49 samples, 0.26%)</title><rect x="513.8" y="2037" width="3.1" height="15.0" fill="rgb(230,168,1)" rx="2" ry="2" />
<text  x="516.78" y="2047.5" ></text>
</g>
<g >
<title>mem_cgroup_throttle_swaprate (3 samples, 0.02%)</title><rect x="25.3" y="1941" width="0.2" height="15.0" fill="rgb(238,118,42)" rx="2" ry="2" />
<text  x="28.34" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1186.7" y="885" width="0.3" height="15.0" fill="rgb(224,145,11)" rx="2" ry="2" />
<text  x="1189.72" y="895.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (3 samples, 0.02%)</title><rect x="158.4" y="1637" width="0.2" height="15.0" fill="rgb(232,29,9)" rx="2" ry="2" />
<text  x="161.40" y="1647.5" ></text>
</g>
<g >
<title>__sanitizer::internal_mmap (22 samples, 0.12%)</title><rect x="1096.0" y="2053" width="1.4" height="15.0" fill="rgb(236,59,34)" rx="2" ry="2" />
<text  x="1099.01" y="2063.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (2 samples, 0.01%)</title><rect x="209.8" y="1605" width="0.2" height="15.0" fill="rgb(215,127,31)" rx="2" ry="2" />
<text  x="212.84" y="1615.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (37 samples, 0.20%)</title><rect x="185.4" y="1637" width="2.4" height="15.0" fill="rgb(231,72,43)" rx="2" ry="2" />
<text  x="188.42" y="1647.5" ></text>
</g>
<g >
<title>generic_file_read_iter (2 samples, 0.01%)</title><rect x="1105.5" y="1893" width="0.2" height="15.0" fill="rgb(251,199,32)" rx="2" ry="2" />
<text  x="1108.54" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.05%)</title><rect x="165.8" y="1749" width="0.6" height="15.0" fill="rgb(236,152,52)" rx="2" ry="2" />
<text  x="168.85" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (84 samples, 0.45%)</title><rect x="167.0" y="1685" width="5.3" height="15.0" fill="rgb(250,10,23)" rx="2" ry="2" />
<text  x="170.05" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1186.2" y="773" width="0.1" height="15.0" fill="rgb(245,124,26)" rx="2" ry="2" />
<text  x="1189.21" y="783.5" ></text>
</g>
<g >
<title>std::operator&gt;&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="506.6" y="1973" width="0.2" height="15.0" fill="rgb(221,181,45)" rx="2" ry="2" />
<text  x="509.64" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1186.2" y="613" width="0.1" height="15.0" fill="rgb(232,194,34)" rx="2" ry="2" />
<text  x="1189.21" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="225.1" y="1557" width="0.1" height="15.0" fill="rgb(205,126,8)" rx="2" ry="2" />
<text  x="228.06" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1186.2" y="1653" width="0.1" height="15.0" fill="rgb(237,185,37)" rx="2" ry="2" />
<text  x="1189.21" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="57.6" y="1973" width="0.1" height="15.0" fill="rgb(247,208,20)" rx="2" ry="2" />
<text  x="60.59" y="1983.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (2 samples, 0.01%)</title><rect x="200.2" y="1589" width="0.2" height="15.0" fill="rgb(216,26,32)" rx="2" ry="2" />
<text  x="203.25" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="1186.1" y="1973" width="0.2" height="15.0" fill="rgb(238,129,3)" rx="2" ry="2" />
<text  x="1189.09" y="1983.5" ></text>
</g>
<g >
<title>onmt::unicode::get_case (256 samples, 1.37%)</title><rect x="683.2" y="1877" width="16.2" height="15.0" fill="rgb(251,193,39)" rx="2" ry="2" />
<text  x="686.19" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1186.7" y="997" width="0.3" height="15.0" fill="rgb(238,139,23)" rx="2" ry="2" />
<text  x="1189.72" y="1007.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="57.6" y="1861" width="0.1" height="15.0" fill="rgb(249,77,22)" rx="2" ry="2" />
<text  x="60.59" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="57.6" y="1509" width="0.1" height="15.0" fill="rgb(213,44,36)" rx="2" ry="2" />
<text  x="60.59" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1186.2" y="1205" width="0.1" height="15.0" fill="rgb(221,107,28)" rx="2" ry="2" />
<text  x="1189.21" y="1215.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::~collate (19 samples, 0.10%)</title><rect x="809.6" y="2037" width="1.2" height="15.0" fill="rgb(225,1,38)" rx="2" ry="2" />
<text  x="812.56" y="2047.5" ></text>
</g>
<g >
<title>native_send_call_func_single_ipi (24 samples, 0.13%)</title><rect x="940.1" y="1797" width="1.5" height="15.0" fill="rgb(226,45,51)" rx="2" ry="2" />
<text  x="943.10" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1186.4" y="1061" width="0.2" height="15.0" fill="rgb(211,28,9)" rx="2" ry="2" />
<text  x="1189.40" y="1071.5" ></text>
</g>
<g >
<title>[unknown] (492 samples, 2.63%)</title><rect x="57.8" y="1765" width="31.1" height="15.0" fill="rgb(253,167,26)" rx="2" ry="2" />
<text  x="60.85" y="1775.5" >[u..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1186.4" y="581" width="0.2" height="15.0" fill="rgb(216,223,32)" rx="2" ry="2" />
<text  x="1189.40" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (90 samples, 0.48%)</title><rect x="172.3" y="1685" width="5.7" height="15.0" fill="rgb(234,161,2)" rx="2" ry="2" />
<text  x="175.35" y="1695.5" ></text>
</g>
<g >
<title>TSlinkClustering::ClusterBatch (2,711 samples, 14.50%)</title><rect x="335.6" y="1989" width="171.2" height="15.0" fill="rgb(236,70,36)" rx="2" ry="2" />
<text  x="338.65" y="1999.5" >TSlinkClustering::Clus..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="194.5" y="1301" width="0.1" height="15.0" fill="rgb(206,57,48)" rx="2" ry="2" />
<text  x="197.51" y="1311.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="57.6" y="1445" width="0.1" height="15.0" fill="rgb(254,71,45)" rx="2" ry="2" />
<text  x="60.59" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1186.2" y="1685" width="0.1" height="15.0" fill="rgb(220,148,27)" rx="2" ry="2" />
<text  x="1189.21" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="57.6" y="1573" width="0.1" height="15.0" fill="rgb(240,120,22)" rx="2" ry="2" />
<text  x="60.59" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1186.4" y="1445" width="0.2" height="15.0" fill="rgb(211,220,22)" rx="2" ry="2" />
<text  x="1189.40" y="1455.5" ></text>
</g>
<g >
<title>Eigen::DenseBase&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; &gt;::setConstant (2 samples, 0.01%)</title><rect x="382.3" y="1941" width="0.1" height="15.0" fill="rgb(237,23,45)" rx="2" ry="2" />
<text  x="385.29" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.0" y="1349" width="0.2" height="15.0" fill="rgb(225,135,51)" rx="2" ry="2" />
<text  x="1190.03" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="225.0" y="1685" width="0.2" height="15.0" fill="rgb(220,88,12)" rx="2" ry="2" />
<text  x="227.99" y="1695.5" ></text>
</g>
<g >
<title>native_write_msr (3 samples, 0.02%)</title><rect x="57.2" y="1749" width="0.2" height="15.0" fill="rgb(208,182,38)" rx="2" ry="2" />
<text  x="60.22" y="1759.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (2 samples, 0.01%)</title><rect x="796.2" y="2005" width="0.2" height="15.0" fill="rgb(253,183,48)" rx="2" ry="2" />
<text  x="799.25" y="2015.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;std::__detail::_State&lt;char&gt; const*, std::__detail::_State&lt;char&gt;*&gt; (5 samples, 0.03%)</title><rect x="166.7" y="1637" width="0.3" height="15.0" fill="rgb(209,33,33)" rx="2" ry="2" />
<text  x="169.73" y="1647.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.02%)</title><rect x="187.1" y="1621" width="0.2" height="15.0" fill="rgb(212,145,47)" rx="2" ry="2" />
<text  x="190.12" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (315 samples, 1.69%)</title><rect x="57.9" y="517" width="19.9" height="15.0" fill="rgb(254,49,14)" rx="2" ry="2" />
<text  x="60.91" y="527.5" ></text>
</g>
<g >
<title>clear_page_erms (16 samples, 0.09%)</title><rect x="500.2" y="1845" width="1.0" height="15.0" fill="rgb(235,43,42)" rx="2" ry="2" />
<text  x="503.20" y="1855.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.03%)</title><rect x="1119.1" y="2037" width="0.3" height="15.0" fill="rgb(240,191,35)" rx="2" ry="2" />
<text  x="1122.05" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (163 samples, 0.87%)</title><rect x="138.5" y="1749" width="10.2" height="15.0" fill="rgb(226,177,2)" rx="2" ry="2" />
<text  x="141.45" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (60 samples, 0.32%)</title><rect x="155.3" y="1733" width="3.8" height="15.0" fill="rgb(228,88,33)" rx="2" ry="2" />
<text  x="158.31" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1186.7" y="1029" width="0.3" height="15.0" fill="rgb(213,11,12)" rx="2" ry="2" />
<text  x="1189.72" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.05%)</title><rect x="165.8" y="1941" width="0.6" height="15.0" fill="rgb(228,71,3)" rx="2" ry="2" />
<text  x="168.78" y="1951.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (10 samples, 0.05%)</title><rect x="810.1" y="2005" width="0.7" height="15.0" fill="rgb(254,65,30)" rx="2" ry="2" />
<text  x="813.13" y="2015.5" ></text>
</g>
<g >
<title>__pthread_getspecific (5 samples, 0.03%)</title><rect x="204.0" y="1589" width="0.3" height="15.0" fill="rgb(249,212,23)" rx="2" ry="2" />
<text  x="206.97" y="1599.5" ></text>
</g>
<g >
<title>TSlinkClustering::Cluster (2,712 samples, 14.51%)</title><rect x="335.6" y="2005" width="171.2" height="15.0" fill="rgb(231,207,23)" rx="2" ry="2" />
<text  x="338.65" y="2015.5" >TSlinkClustering::Clus..</text>
</g>
<g >
<title>mem_cgroup_try_charge (2 samples, 0.01%)</title><rect x="507.3" y="1845" width="0.2" height="15.0" fill="rgb(212,32,32)" rx="2" ry="2" />
<text  x="510.34" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="224.9" y="1909" width="0.4" height="15.0" fill="rgb(217,220,8)" rx="2" ry="2" />
<text  x="227.87" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="194.3" y="1797" width="0.3" height="15.0" fill="rgb(231,202,0)" rx="2" ry="2" />
<text  x="197.32" y="1807.5" ></text>
</g>
<g >
<title>__tls_get_addr (2 samples, 0.01%)</title><rect x="757.4" y="2037" width="0.2" height="15.0" fill="rgb(218,117,37)" rx="2" ry="2" />
<text  x="760.43" y="2047.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (4 samples, 0.02%)</title><rect x="485.9" y="1941" width="0.2" height="15.0" fill="rgb(226,18,52)" rx="2" ry="2" />
<text  x="488.88" y="1951.5" ></text>
</g>
<g >
<title>fasttext::FastText::getDimension (31 samples, 0.17%)</title><rect x="330.6" y="1989" width="2.0" height="15.0" fill="rgb(239,174,47)" rx="2" ry="2" />
<text  x="333.60" y="1999.5" ></text>
</g>
<g >
<title>alloc_pages_vma (8 samples, 0.04%)</title><rect x="667.1" y="1765" width="0.5" height="15.0" fill="rgb(237,77,13)" rx="2" ry="2" />
<text  x="670.10" y="1775.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (3 samples, 0.02%)</title><rect x="92.6" y="1989" width="0.2" height="15.0" fill="rgb(225,47,34)" rx="2" ry="2" />
<text  x="95.56" y="1999.5" ></text>
</g>
<g >
<title>try_to_wake_up (4 samples, 0.02%)</title><rect x="756.9" y="1877" width="0.3" height="15.0" fill="rgb(241,140,22)" rx="2" ry="2" />
<text  x="759.92" y="1887.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (4 samples, 0.02%)</title><rect x="192.9" y="1653" width="0.2" height="15.0" fill="rgb(232,198,36)" rx="2" ry="2" />
<text  x="195.86" y="1663.5" ></text>
</g>
<g >
<title>__dynamic_cast (4 samples, 0.02%)</title><rect x="156.2" y="1653" width="0.2" height="15.0" fill="rgb(244,131,37)" rx="2" ry="2" />
<text  x="159.19" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1186.7" y="1557" width="0.3" height="15.0" fill="rgb(208,125,51)" rx="2" ry="2" />
<text  x="1189.65" y="1567.5" ></text>
</g>
<g >
<title>__vm_munmap (4 samples, 0.02%)</title><rect x="757.2" y="1973" width="0.2" height="15.0" fill="rgb(211,133,51)" rx="2" ry="2" />
<text  x="760.17" y="1983.5" ></text>
</g>
<g >
<title>alloc_pages_vma (15 samples, 0.08%)</title><rect x="936.6" y="1925" width="0.9" height="15.0" fill="rgb(209,55,15)" rx="2" ry="2" />
<text  x="939.57" y="1935.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (37 samples, 0.20%)</title><rect x="1119.5" y="2053" width="2.3" height="15.0" fill="rgb(237,220,20)" rx="2" ry="2" />
<text  x="1122.49" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.04%)</title><rect x="165.8" y="1717" width="0.6" height="15.0" fill="rgb(221,51,9)" rx="2" ry="2" />
<text  x="168.85" y="1727.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.01%)</title><rect x="144.3" y="1621" width="0.1" height="15.0" fill="rgb(229,135,34)" rx="2" ry="2" />
<text  x="147.32" y="1631.5" ></text>
</g>
<g >
<title>__sanitizer::LargeMmapAllocator&lt;__asan::AsanMapUnmapCallback, __sanitizer::LargeMmapAllocatorPtrArrayDynamic&gt;::Allocate (4 samples, 0.02%)</title><rect x="1014.8" y="2053" width="0.3" height="15.0" fill="rgb(233,23,48)" rx="2" ry="2" />
<text  x="1017.84" y="2063.5" ></text>
</g>
<g >
<title>page_fault (13 samples, 0.07%)</title><rect x="638.7" y="1861" width="0.8" height="15.0" fill="rgb(227,5,35)" rx="2" ry="2" />
<text  x="641.69" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (313 samples, 1.67%)</title><rect x="57.9" y="373" width="19.8" height="15.0" fill="rgb(217,187,16)" rx="2" ry="2" />
<text  x="60.91" y="383.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.01%)</title><rect x="213.6" y="1653" width="0.1" height="15.0" fill="rgb(248,166,20)" rx="2" ry="2" />
<text  x="216.57" y="1663.5" ></text>
</g>
<g >
<title>__lsan::MarkIndirectlyLeakedCb (4 samples, 0.02%)</title><rect x="511.1" y="2037" width="0.3" height="15.0" fill="rgb(217,22,53)" rx="2" ry="2" />
<text  x="514.12" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (73 samples, 0.39%)</title><rect x="195.8" y="1701" width="4.6" height="15.0" fill="rgb(250,46,52)" rx="2" ry="2" />
<text  x="198.83" y="1711.5" ></text>
</g>
<g >
<title>onmt::unicode::is_separator (4 samples, 0.02%)</title><rect x="725.0" y="1893" width="0.3" height="15.0" fill="rgb(212,202,54)" rx="2" ry="2" />
<text  x="728.04" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1186.4" y="85" width="0.2" height="15.0" fill="rgb(207,206,37)" rx="2" ry="2" />
<text  x="1189.40" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1186.7" y="389" width="0.3" height="15.0" fill="rgb(220,220,13)" rx="2" ry="2" />
<text  x="1189.72" y="399.5" ></text>
</g>
<g >
<title>__asan_memcpy (3 samples, 0.02%)</title><rect x="203.7" y="1589" width="0.1" height="15.0" fill="rgb(239,210,48)" rx="2" ry="2" />
<text  x="206.66" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1187.0" y="2005" width="0.2" height="15.0" fill="rgb(233,71,36)" rx="2" ry="2" />
<text  x="1190.03" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (87 samples, 0.47%)</title><rect x="211.9" y="1733" width="5.5" height="15.0" fill="rgb(225,25,43)" rx="2" ry="2" />
<text  x="214.86" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="57.6" y="1317" width="0.1" height="15.0" fill="rgb(233,182,22)" rx="2" ry="2" />
<text  x="60.59" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1187.0" y="1381" width="0.2" height="15.0" fill="rgb(235,211,39)" rx="2" ry="2" />
<text  x="1190.03" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.0" y="1829" width="0.2" height="15.0" fill="rgb(208,224,20)" rx="2" ry="2" />
<text  x="1190.03" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1186.4" y="549" width="0.2" height="15.0" fill="rgb(240,9,39)" rx="2" ry="2" />
<text  x="1189.40" y="559.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (2 samples, 0.01%)</title><rect x="82.5" y="1333" width="0.1" height="15.0" fill="rgb(206,135,40)" rx="2" ry="2" />
<text  x="85.46" y="1343.5" ></text>
</g>
<g >
<title>unmap_vmas (2 samples, 0.01%)</title><rect x="756.5" y="1877" width="0.1" height="15.0" fill="rgb(228,107,53)" rx="2" ry="2" />
<text  x="759.48" y="1887.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (263 samples, 1.41%)</title><rect x="10.0" y="2053" width="16.6" height="15.0" fill="rgb(226,205,3)" rx="2" ry="2" />
<text  x="13.00" y="2063.5" ></text>
</g>
<g >
<title>unmap_page_range (2 samples, 0.01%)</title><rect x="83.3" y="1285" width="0.2" height="15.0" fill="rgb(242,216,52)" rx="2" ry="2" />
<text  x="86.35" y="1295.5" ></text>
</g>
<g >
<title>boost::optional_detail::optional_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::assign (2 samples, 0.01%)</title><rect x="509.5" y="1941" width="0.1" height="15.0" fill="rgb(242,79,36)" rx="2" ry="2" />
<text  x="512.48" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1186.4" y="1285" width="0.2" height="15.0" fill="rgb(226,155,14)" rx="2" ry="2" />
<text  x="1189.40" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.0" y="1413" width="0.2" height="15.0" fill="rgb(210,118,48)" rx="2" ry="2" />
<text  x="1190.03" y="1423.5" ></text>
</g>
<g >
<title>__asan_memcpy (6 samples, 0.03%)</title><rect x="560.5" y="1877" width="0.4" height="15.0" fill="rgb(208,146,51)" rx="2" ry="2" />
<text  x="563.55" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1186.6" y="1893" width="0.4" height="15.0" fill="rgb(211,84,5)" rx="2" ry="2" />
<text  x="1189.59" y="1903.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int const&amp;&gt; (4 samples, 0.02%)</title><rect x="1187.5" y="2053" width="0.3" height="15.0" fill="rgb(230,81,4)" rx="2" ry="2" />
<text  x="1190.54" y="2063.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (3 samples, 0.02%)</title><rect x="25.0" y="1925" width="0.1" height="15.0" fill="rgb(222,22,20)" rx="2" ry="2" />
<text  x="27.96" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.0" y="725" width="0.2" height="15.0" fill="rgb(205,198,11)" rx="2" ry="2" />
<text  x="1190.03" y="735.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (2 samples, 0.01%)</title><rect x="1098.2" y="1925" width="0.1" height="15.0" fill="rgb(236,8,11)" rx="2" ry="2" />
<text  x="1101.22" y="1935.5" ></text>
</g>
<g >
<title>x2apic_send_IPI (2 samples, 0.01%)</title><rect x="513.0" y="1781" width="0.1" height="15.0" fill="rgb(220,190,16)" rx="2" ry="2" />
<text  x="516.02" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1186.2" y="789" width="0.1" height="15.0" fill="rgb(251,53,26)" rx="2" ry="2" />
<text  x="1189.21" y="799.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.01%)</title><rect x="216.0" y="1637" width="0.2" height="15.0" fill="rgb(220,168,30)" rx="2" ry="2" />
<text  x="219.03" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (434 samples, 2.32%)</title><rect x="166.7" y="1893" width="27.4" height="15.0" fill="rgb(225,206,39)" rx="2" ry="2" />
<text  x="169.67" y="1903.5" >s..</text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (9 samples, 0.05%)</title><rect x="138.5" y="1669" width="0.5" height="15.0" fill="rgb(239,45,36)" rx="2" ry="2" />
<text  x="141.45" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1186.2" y="357" width="0.1" height="15.0" fill="rgb(251,157,19)" rx="2" ry="2" />
<text  x="1189.21" y="367.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (6 samples, 0.03%)</title><rect x="94.5" y="2021" width="0.4" height="15.0" fill="rgb(215,175,52)" rx="2" ry="2" />
<text  x="97.52" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1186.7" y="421" width="0.3" height="15.0" fill="rgb(228,172,20)" rx="2" ry="2" />
<text  x="1189.72" y="431.5" ></text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (2 samples, 0.01%)</title><rect x="1014.9" y="1957" width="0.1" height="15.0" fill="rgb(251,22,0)" rx="2" ry="2" />
<text  x="1017.90" y="1967.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="206.0" y="1621" width="0.1" height="15.0" fill="rgb(237,157,36)" rx="2" ry="2" />
<text  x="208.99" y="1631.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (5 samples, 0.03%)</title><rect x="217.5" y="1733" width="0.3" height="15.0" fill="rgb(223,65,29)" rx="2" ry="2" />
<text  x="220.48" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (344 samples, 1.84%)</title><rect x="57.9" y="1205" width="21.7" height="15.0" fill="rgb(227,21,14)" rx="2" ry="2" />
<text  x="60.91" y="1215.5" >[..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1186.4" y="869" width="0.2" height="15.0" fill="rgb(247,52,7)" rx="2" ry="2" />
<text  x="1189.40" y="879.5" ></text>
</g>
<g >
<title>TDocument::TDocument (8 samples, 0.04%)</title><rect x="335.1" y="2005" width="0.5" height="15.0" fill="rgb(252,126,15)" rx="2" ry="2" />
<text  x="338.14" y="2015.5" ></text>
</g>
<g >
<title>Eigen::internal::general_matrix_matrix_product&lt;long, float, 0, false, float, 1, false, 0, 1&gt;::run (132 samples, 0.71%)</title><rect x="491.1" y="1925" width="8.3" height="15.0" fill="rgb(215,163,13)" rx="2" ry="2" />
<text  x="494.05" y="1935.5" ></text>
</g>
<g >
<title>ksys_read (3 samples, 0.02%)</title><rect x="127.5" y="1973" width="0.2" height="15.0" fill="rgb(233,190,16)" rx="2" ry="2" />
<text  x="130.47" y="1983.5" ></text>
</g>
<g >
<title>Eigen::DenseBase&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt;::setConstant (36 samples, 0.19%)</title><rect x="488.8" y="1941" width="2.3" height="15.0" fill="rgb(234,7,51)" rx="2" ry="2" />
<text  x="491.78" y="1951.5" ></text>
</g>
<g >
<title>__interceptor_memcpy (13 samples, 0.07%)</title><rect x="997.4" y="2053" width="0.8" height="15.0" fill="rgb(212,110,17)" rx="2" ry="2" />
<text  x="1000.35" y="2063.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::_M_default_append (2 samples, 0.01%)</title><rect x="166.4" y="1941" width="0.1" height="15.0" fill="rgb(235,113,28)" rx="2" ry="2" />
<text  x="169.42" y="1951.5" ></text>
</g>
<g >
<title>fasttext::Loss::predict (2 samples, 0.01%)</title><rect x="1098.3" y="2053" width="0.2" height="15.0" fill="rgb(254,35,42)" rx="2" ry="2" />
<text  x="1101.35" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (76 samples, 0.41%)</title><rect x="159.5" y="1717" width="4.8" height="15.0" fill="rgb(217,125,33)" rx="2" ry="2" />
<text  x="162.54" y="1727.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="83.3" y="1413" width="0.2" height="15.0" fill="rgb(253,112,7)" rx="2" ry="2" />
<text  x="86.35" y="1423.5" ></text>
</g>
<g >
<title>operator new (11 samples, 0.06%)</title><rect x="605.4" y="1845" width="0.7" height="15.0" fill="rgb(209,41,24)" rx="2" ry="2" />
<text  x="608.37" y="1855.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (34 samples, 0.18%)</title><rect x="872.7" y="2005" width="2.2" height="15.0" fill="rgb(238,158,53)" rx="2" ry="2" />
<text  x="875.75" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1187.0" y="1093" width="0.2" height="15.0" fill="rgb(211,176,2)" rx="2" ry="2" />
<text  x="1190.03" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.0" y="1077" width="0.2" height="15.0" fill="rgb(247,191,5)" rx="2" ry="2" />
<text  x="1190.03" y="1087.5" ></text>
</g>
<g >
<title>__asan::AsanTSDGet (31 samples, 0.17%)</title><rect x="961.9" y="2053" width="1.9" height="15.0" fill="rgb(238,7,52)" rx="2" ry="2" />
<text  x="964.88" y="2063.5" ></text>
</g>
<g >
<title>__asan_memset (6 samples, 0.03%)</title><rect x="563.3" y="1893" width="0.3" height="15.0" fill="rgb(205,204,16)" rx="2" ry="2" />
<text  x="566.26" y="1903.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (13 samples, 0.07%)</title><rect x="758.0" y="2005" width="0.8" height="15.0" fill="rgb(213,55,14)" rx="2" ry="2" />
<text  x="760.99" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1187.0" y="1957" width="0.2" height="15.0" fill="rgb(241,143,8)" rx="2" ry="2" />
<text  x="1190.03" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_BracketMatcher (2 samples, 0.01%)</title><rect x="138.9" y="1621" width="0.1" height="15.0" fill="rgb(228,212,53)" rx="2" ry="2" />
<text  x="141.89" y="1631.5" ></text>
</g>
<g >
<title>__do_page_fault (3 samples, 0.02%)</title><rect x="94.3" y="1973" width="0.2" height="15.0" fill="rgb(236,170,25)" rx="2" ry="2" />
<text  x="97.33" y="1983.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (3 samples, 0.02%)</title><rect x="198.4" y="1557" width="0.2" height="15.0" fill="rgb(249,136,23)" rx="2" ry="2" />
<text  x="201.42" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="166.0" y="1237" width="0.3" height="15.0" fill="rgb(231,41,27)" rx="2" ry="2" />
<text  x="169.04" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="225.1" y="1525" width="0.1" height="15.0" fill="rgb(249,188,22)" rx="2" ry="2" />
<text  x="228.06" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1186.4" y="677" width="0.2" height="15.0" fill="rgb(212,184,20)" rx="2" ry="2" />
<text  x="1189.40" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (8 samples, 0.04%)</title><rect x="165.2" y="1893" width="0.5" height="15.0" fill="rgb(211,220,37)" rx="2" ry="2" />
<text  x="168.15" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1186.7" y="565" width="0.3" height="15.0" fill="rgb(239,90,15)" rx="2" ry="2" />
<text  x="1189.72" y="575.5" ></text>
</g>
<g >
<title>alloc_pages_vma (4 samples, 0.02%)</title><rect x="639.1" y="1781" width="0.2" height="15.0" fill="rgb(246,154,51)" rx="2" ry="2" />
<text  x="642.07" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1186.4" y="1141" width="0.2" height="15.0" fill="rgb(251,222,50)" rx="2" ry="2" />
<text  x="1189.40" y="1151.5" ></text>
</g>
<g >
<title>fasttext::FastText::predictLine (191 samples, 1.02%)</title><rect x="517.8" y="1941" width="12.0" height="15.0" fill="rgb(252,101,8)" rx="2" ry="2" />
<text  x="520.75" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1187.0" y="805" width="0.2" height="15.0" fill="rgb(216,38,0)" rx="2" ry="2" />
<text  x="1190.03" y="815.5" ></text>
</g>
<g >
<title>__asan::AsanTSDGet (2 samples, 0.01%)</title><rect x="146.4" y="1589" width="0.1" height="15.0" fill="rgb(241,32,24)" rx="2" ry="2" />
<text  x="149.41" y="1599.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (8 samples, 0.04%)</title><rect x="210.5" y="1605" width="0.5" height="15.0" fill="rgb(246,169,6)" rx="2" ry="2" />
<text  x="213.54" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1186.4" y="469" width="0.2" height="15.0" fill="rgb(253,167,43)" rx="2" ry="2" />
<text  x="1189.40" y="479.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (5 samples, 0.03%)</title><rect x="1146.1" y="2037" width="0.3" height="15.0" fill="rgb(220,109,29)" rx="2" ry="2" />
<text  x="1149.13" y="2047.5" ></text>
</g>
<g >
<title>finish_task_switch (6 samples, 0.03%)</title><rect x="27.8" y="1909" width="0.4" height="15.0" fill="rgb(207,8,5)" rx="2" ry="2" />
<text  x="30.80" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.02%)</title><rect x="166.0" y="1253" width="0.3" height="15.0" fill="rgb(220,168,20)" rx="2" ry="2" />
<text  x="169.04" y="1263.5" ></text>
</g>
<g >
<title>do_page_fault (4 samples, 0.02%)</title><rect x="507.2" y="1925" width="0.3" height="15.0" fill="rgb(235,170,12)" rx="2" ry="2" />
<text  x="510.21" y="1935.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::basic_json (6 samples, 0.03%)</title><rect x="507.5" y="2005" width="0.3" height="15.0" fill="rgb(246,51,38)" rx="2" ry="2" />
<text  x="510.46" y="2015.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::basic_json (4 samples, 0.02%)</title><rect x="508.7" y="1973" width="0.3" height="15.0" fill="rgb(209,87,36)" rx="2" ry="2" />
<text  x="511.73" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="57.6" y="1589" width="0.1" height="15.0" fill="rgb(212,122,53)" rx="2" ry="2" />
<text  x="60.59" y="1599.5" ></text>
</g>
<g >
<title>native_flush_tlb_others (29 samples, 0.16%)</title><rect x="939.9" y="1893" width="1.8" height="15.0" fill="rgb(224,147,52)" rx="2" ry="2" />
<text  x="942.91" y="1903.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::operator[] (3 samples, 0.02%)</title><rect x="136.9" y="1941" width="0.2" height="15.0" fill="rgb(237,71,38)" rx="2" ry="2" />
<text  x="139.94" y="1951.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (265 samples, 1.42%)</title><rect x="726.2" y="1893" width="16.8" height="15.0" fill="rgb(206,156,50)" rx="2" ry="2" />
<text  x="729.24" y="1903.5" ></text>
</g>
<g >
<title>__handle_mm_fault (5 samples, 0.03%)</title><rect x="643.3" y="1797" width="0.3" height="15.0" fill="rgb(211,185,29)" rx="2" ry="2" />
<text  x="646.30" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1186.6" y="1637" width="0.4" height="15.0" fill="rgb(209,69,5)" rx="2" ry="2" />
<text  x="1189.59" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="165.8" y="1365" width="0.5" height="15.0" fill="rgb(205,152,22)" rx="2" ry="2" />
<text  x="168.85" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Scanner&lt;char&gt;::_M_scan_normal (2 samples, 0.01%)</title><rect x="155.1" y="1749" width="0.1" height="15.0" fill="rgb(229,216,33)" rx="2" ry="2" />
<text  x="158.12" y="1759.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="88.6" y="1749" width="0.2" height="15.0" fill="rgb(227,58,11)" rx="2" ry="2" />
<text  x="91.65" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (28 samples, 0.15%)</title><rect x="869.5" y="2021" width="1.7" height="15.0" fill="rgb(228,155,31)" rx="2" ry="2" />
<text  x="872.47" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (99 samples, 0.53%)</title><rect x="149.0" y="1765" width="6.2" height="15.0" fill="rgb(219,136,25)" rx="2" ry="2" />
<text  x="151.99" y="1775.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="82.0" y="1333" width="0.1" height="15.0" fill="rgb(225,10,22)" rx="2" ry="2" />
<text  x="85.02" y="1343.5" ></text>
</g>
<g >
<title>new_sync_read (3 samples, 0.02%)</title><rect x="127.5" y="1925" width="0.2" height="15.0" fill="rgb(215,104,44)" rx="2" ry="2" />
<text  x="130.47" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="165.8" y="1621" width="0.5" height="15.0" fill="rgb(209,129,38)" rx="2" ry="2" />
<text  x="168.85" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="57.6" y="1605" width="0.1" height="15.0" fill="rgb(205,56,48)" rx="2" ry="2" />
<text  x="60.59" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.0" y="2037" width="0.2" height="15.0" fill="rgb(242,33,33)" rx="2" ry="2" />
<text  x="1190.03" y="2047.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (2 samples, 0.01%)</title><rect x="174.3" y="1573" width="0.1" height="15.0" fill="rgb(233,192,50)" rx="2" ry="2" />
<text  x="177.31" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (316 samples, 1.69%)</title><rect x="57.9" y="629" width="20.0" height="15.0" fill="rgb(223,16,5)" rx="2" ry="2" />
<text  x="60.91" y="639.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.03%)</title><rect x="1097.5" y="2053" width="0.3" height="15.0" fill="rgb(217,114,33)" rx="2" ry="2" />
<text  x="1100.46" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (73 samples, 0.39%)</title><rect x="195.8" y="1669" width="4.6" height="15.0" fill="rgb(233,114,30)" rx="2" ry="2" />
<text  x="198.83" y="1679.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (53 samples, 0.28%)</title><rect x="174.1" y="1589" width="3.3" height="15.0" fill="rgb(236,135,39)" rx="2" ry="2" />
<text  x="177.05" y="1599.5" ></text>
</g>
<g >
<title>__lsan::CollectIgnoredCb (4 samples, 0.02%)</title><rect x="509.7" y="2037" width="0.3" height="15.0" fill="rgb(230,46,5)" rx="2" ry="2" />
<text  x="512.74" y="2047.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (32 samples, 0.17%)</title><rect x="1149.1" y="2037" width="2.0" height="15.0" fill="rgb(211,52,26)" rx="2" ry="2" />
<text  x="1152.10" y="2047.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.03%)</title><rect x="142.4" y="1557" width="0.3" height="15.0" fill="rgb(207,47,48)" rx="2" ry="2" />
<text  x="145.37" y="1567.5" ></text>
</g>
<g >
<title>__asan::AsanTSDGet (2 samples, 0.01%)</title><rect x="140.9" y="1557" width="0.1" height="15.0" fill="rgb(237,163,2)" rx="2" ry="2" />
<text  x="143.91" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (84 samples, 0.45%)</title><rect x="206.6" y="1765" width="5.3" height="15.0" fill="rgb(223,223,5)" rx="2" ry="2" />
<text  x="209.56" y="1775.5" ></text>
</g>
<g >
<title>page_fault (4 samples, 0.02%)</title><rect x="507.2" y="1941" width="0.3" height="15.0" fill="rgb(220,76,41)" rx="2" ry="2" />
<text  x="510.21" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="57.6" y="1957" width="0.1" height="15.0" fill="rgb(246,210,22)" rx="2" ry="2" />
<text  x="60.59" y="1967.5" ></text>
</g>
<g >
<title>fasttext::Vector::zero (9 samples, 0.05%)</title><rect x="329.7" y="1973" width="0.6" height="15.0" fill="rgb(209,123,33)" rx="2" ry="2" />
<text  x="332.71" y="1983.5" ></text>
</g>
<g >
<title>fasttext::Matrix::size (33 samples, 0.18%)</title><rect x="325.9" y="1973" width="2.1" height="15.0" fill="rgb(218,66,40)" rx="2" ry="2" />
<text  x="328.92" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (13,189 samples, 70.55%)</title><rect x="43.3" y="2053" width="832.5" height="15.0" fill="rgb(241,214,46)" rx="2" ry="2" />
<text  x="46.27" y="2063.5" >[unknown]</text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="57.6" y="1909" width="0.1" height="15.0" fill="rgb(247,125,31)" rx="2" ry="2" />
<text  x="60.59" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="194.4" y="1509" width="0.1" height="15.0" fill="rgb(249,43,21)" rx="2" ry="2" />
<text  x="197.38" y="1519.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="91.7" y="1941" width="0.2" height="15.0" fill="rgb(242,99,51)" rx="2" ry="2" />
<text  x="94.74" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (3 samples, 0.02%)</title><rect x="165.3" y="1829" width="0.2" height="15.0" fill="rgb(206,213,27)" rx="2" ry="2" />
<text  x="168.34" y="1839.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::computeSubwords (331 samples, 1.77%)</title><rect x="533.1" y="1893" width="20.9" height="15.0" fill="rgb(216,61,33)" rx="2" ry="2" />
<text  x="536.09" y="1903.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (2 samples, 0.01%)</title><rect x="203.0" y="1589" width="0.1" height="15.0" fill="rgb(211,180,31)" rx="2" ry="2" />
<text  x="205.96" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (75 samples, 0.40%)</title><rect x="183.6" y="1701" width="4.7" height="15.0" fill="rgb(207,32,17)" rx="2" ry="2" />
<text  x="186.59" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1186.2" y="1525" width="0.1" height="15.0" fill="rgb(211,61,26)" rx="2" ry="2" />
<text  x="1189.21" y="1535.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::create&lt;std::vector&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::allocator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::vector&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::allocator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; const&amp;&gt; (4 samples, 0.02%)</title><rect x="508.7" y="1877" width="0.3" height="15.0" fill="rgb(228,223,20)" rx="2" ry="2" />
<text  x="511.73" y="1887.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::append@plt (3 samples, 0.02%)</title><rect x="564.7" y="1893" width="0.2" height="15.0" fill="rgb(229,130,29)" rx="2" ry="2" />
<text  x="567.71" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (9 samples, 0.05%)</title><rect x="809.6" y="1989" width="0.5" height="15.0" fill="rgb(213,162,19)" rx="2" ry="2" />
<text  x="812.56" y="1999.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::readWord (5 samples, 0.03%)</title><rect x="529.4" y="1925" width="0.3" height="15.0" fill="rgb(243,39,13)" rx="2" ry="2" />
<text  x="532.43" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (329 samples, 1.76%)</title><rect x="57.9" y="1061" width="20.8" height="15.0" fill="rgb(224,190,0)" rx="2" ry="2" />
<text  x="60.91" y="1071.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (6 samples, 0.03%)</title><rect x="1120.2" y="2037" width="0.4" height="15.0" fill="rgb(240,72,15)" rx="2" ry="2" />
<text  x="1123.19" y="2047.5" ></text>
</g>
<g >
<title>do_page_fault (34 samples, 0.18%)</title><rect x="55.4" y="2005" width="2.2" height="15.0" fill="rgb(213,178,52)" rx="2" ry="2" />
<text  x="58.45" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.0" y="629" width="0.2" height="15.0" fill="rgb(208,176,29)" rx="2" ry="2" />
<text  x="1190.03" y="639.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (5 samples, 0.03%)</title><rect x="82.1" y="1381" width="0.4" height="15.0" fill="rgb(229,63,12)" rx="2" ry="2" />
<text  x="85.15" y="1391.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="57.6" y="1877" width="0.1" height="15.0" fill="rgb(240,188,48)" rx="2" ry="2" />
<text  x="60.59" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (310 samples, 1.66%)</title><rect x="57.9" y="309" width="19.6" height="15.0" fill="rgb(221,129,29)" rx="2" ry="2" />
<text  x="60.91" y="319.5" ></text>
</g>
<g >
<title>__sanitizer::CombinedAllocator&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&gt;, __sanitizer::SizeClassAllocatorLocalCache&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&gt; &gt;, __sanitizer::LargeMmapAllocator&lt;__asan::AsanMapUnmapCallback, __sanitizer::LargeMmapAllocatorPtrArrayDynamic&gt; &gt;::Allocate (129 samples, 0.69%)</title><rect x="1006.7" y="2053" width="8.1" height="15.0" fill="rgb(232,198,1)" rx="2" ry="2" />
<text  x="1009.69" y="2063.5" ></text>
</g>
<g >
<title>handle_mm_fault (25 samples, 0.13%)</title><rect x="500.0" y="1909" width="1.6" height="15.0" fill="rgb(209,24,50)" rx="2" ry="2" />
<text  x="503.01" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.02%)</title><rect x="1186.3" y="1973" width="0.3" height="15.0" fill="rgb(206,156,9)" rx="2" ry="2" />
<text  x="1189.34" y="1983.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (9 samples, 0.05%)</title><rect x="476.3" y="1925" width="0.5" height="15.0" fill="rgb(220,48,3)" rx="2" ry="2" />
<text  x="479.28" y="1935.5" ></text>
</g>
<g >
<title>__sanitizer::BlockingMutex::Lock (5 samples, 0.03%)</title><rect x="746.0" y="2037" width="0.3" height="15.0" fill="rgb(240,65,42)" rx="2" ry="2" />
<text  x="749.00" y="2047.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="188.4" y="1717" width="0.1" height="15.0" fill="rgb(221,19,1)" rx="2" ry="2" />
<text  x="191.38" y="1727.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::basic_json (4 samples, 0.02%)</title><rect x="508.7" y="1893" width="0.3" height="15.0" fill="rgb(212,187,52)" rx="2" ry="2" />
<text  x="511.73" y="1903.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::dump (5 samples, 0.03%)</title><rect x="508.0" y="2005" width="0.3" height="15.0" fill="rgb(244,141,53)" rx="2" ry="2" />
<text  x="510.97" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="194.5" y="1477" width="0.1" height="15.0" fill="rgb(249,79,9)" rx="2" ry="2" />
<text  x="197.51" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="166.2" y="1141" width="0.1" height="15.0" fill="rgb(238,159,23)" rx="2" ry="2" />
<text  x="169.16" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.0" y="549" width="0.2" height="15.0" fill="rgb(233,180,10)" rx="2" ry="2" />
<text  x="1190.03" y="559.5" ></text>
</g>
<g >
<title>__sanitizer_weak_hook_memcmp (14 samples, 0.07%)</title><rect x="1145.1" y="2037" width="0.9" height="15.0" fill="rgb(242,10,7)" rx="2" ry="2" />
<text  x="1148.12" y="2047.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (6 samples, 0.03%)</title><rect x="143.4" y="1589" width="0.4" height="15.0" fill="rgb(219,205,2)" rx="2" ry="2" />
<text  x="146.44" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1186.4" y="1413" width="0.2" height="15.0" fill="rgb(244,163,1)" rx="2" ry="2" />
<text  x="1189.40" y="1423.5" ></text>
</g>
<g >
<title>generic_file_read_iter (3 samples, 0.02%)</title><rect x="127.5" y="1893" width="0.2" height="15.0" fill="rgb(212,93,10)" rx="2" ry="2" />
<text  x="130.47" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.02%)</title><rect x="1186.8" y="165" width="0.2" height="15.0" fill="rgb(243,219,11)" rx="2" ry="2" />
<text  x="1189.78" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1186.4" y="1013" width="0.2" height="15.0" fill="rgb(216,104,21)" rx="2" ry="2" />
<text  x="1189.40" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (75 samples, 0.40%)</title><rect x="139.1" y="1621" width="4.7" height="15.0" fill="rgb(231,112,24)" rx="2" ry="2" />
<text  x="142.08" y="1631.5" ></text>
</g>
<g >
<title>__asan::CanPoisonMemory (12 samples, 0.06%)</title><rect x="963.8" y="2053" width="0.8" height="15.0" fill="rgb(229,180,23)" rx="2" ry="2" />
<text  x="966.83" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.0" y="821" width="0.2" height="15.0" fill="rgb(250,125,3)" rx="2" ry="2" />
<text  x="1190.03" y="831.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::push_back (4 samples, 0.02%)</title><rect x="871.4" y="2037" width="0.3" height="15.0" fill="rgb(216,45,11)" rx="2" ry="2" />
<text  x="874.42" y="2047.5" ></text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.02%)</title><rect x="157.3" y="1637" width="0.2" height="15.0" fill="rgb(239,228,45)" rx="2" ry="2" />
<text  x="160.33" y="1647.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.01%)</title><rect x="872.6" y="2021" width="0.1" height="15.0" fill="rgb(235,111,25)" rx="2" ry="2" />
<text  x="875.62" y="2031.5" ></text>
</g>
<g >
<title>__asan::Allocator::Deallocate (2 samples, 0.01%)</title><rect x="219.9" y="1669" width="0.2" height="15.0" fill="rgb(229,213,3)" rx="2" ry="2" />
<text  x="222.94" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.02%)</title><rect x="869.2" y="2021" width="0.2" height="15.0" fill="rgb(245,142,42)" rx="2" ry="2" />
<text  x="872.15" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1187.0" y="1525" width="0.2" height="15.0" fill="rgb(235,191,2)" rx="2" ry="2" />
<text  x="1190.03" y="1535.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (2 samples, 0.01%)</title><rect x="85.1" y="1541" width="0.1" height="15.0" fill="rgb(238,175,40)" rx="2" ry="2" />
<text  x="88.12" y="1551.5" ></text>
</g>
<g >
<title>__do_page_fault (8 samples, 0.04%)</title><rect x="643.2" y="1829" width="0.5" height="15.0" fill="rgb(235,17,9)" rx="2" ry="2" />
<text  x="646.18" y="1839.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (2 samples, 0.01%)</title><rect x="639.4" y="1749" width="0.1" height="15.0" fill="rgb(249,216,15)" rx="2" ry="2" />
<text  x="642.39" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.02%)</title><rect x="1186.3" y="1685" width="0.3" height="15.0" fill="rgb(228,228,46)" rx="2" ry="2" />
<text  x="1189.34" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1186.6" y="1909" width="0.4" height="15.0" fill="rgb(224,81,36)" rx="2" ry="2" />
<text  x="1189.59" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1186.7" y="373" width="0.3" height="15.0" fill="rgb(216,193,15)" rx="2" ry="2" />
<text  x="1189.72" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1186.7" y="1205" width="0.3" height="15.0" fill="rgb(226,67,7)" rx="2" ry="2" />
<text  x="1189.72" y="1215.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="57.6" y="1349" width="0.1" height="15.0" fill="rgb(212,102,6)" rx="2" ry="2" />
<text  x="60.59" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (56 samples, 0.30%)</title><rect x="184.3" y="1653" width="3.6" height="15.0" fill="rgb(232,26,15)" rx="2" ry="2" />
<text  x="187.34" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1186.7" y="1397" width="0.3" height="15.0" fill="rgb(211,228,41)" rx="2" ry="2" />
<text  x="1189.65" y="1407.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::Unwind (3 samples, 0.02%)</title><rect x="204.3" y="1589" width="0.2" height="15.0" fill="rgb(239,120,53)" rx="2" ry="2" />
<text  x="207.29" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1186.4" y="1029" width="0.2" height="15.0" fill="rgb(243,119,20)" rx="2" ry="2" />
<text  x="1189.40" y="1039.5" ></text>
</g>
<g >
<title>__x64_sys_read (2 samples, 0.01%)</title><rect x="1105.5" y="1989" width="0.2" height="15.0" fill="rgb(225,15,17)" rx="2" ry="2" />
<text  x="1108.54" y="1999.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find (16 samples, 0.09%)</title><rect x="1146.0" y="2053" width="1.0" height="15.0" fill="rgb(250,48,50)" rx="2" ry="2" />
<text  x="1149.00" y="2063.5" ></text>
</g>
<g >
<title>virtual thunk to std::__cxx11::basic_istringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_istringstream (2 samples, 0.01%)</title><rect x="875.6" y="2037" width="0.1" height="15.0" fill="rgb(242,99,45)" rx="2" ry="2" />
<text  x="878.59" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (509 samples, 2.72%)</title><rect x="57.8" y="1813" width="32.2" height="15.0" fill="rgb(213,190,49)" rx="2" ry="2" />
<text  x="60.85" y="1823.5" >[u..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1187.0" y="853" width="0.2" height="15.0" fill="rgb(243,132,49)" rx="2" ry="2" />
<text  x="1190.03" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="166.0" y="1221" width="0.3" height="15.0" fill="rgb(207,24,0)" rx="2" ry="2" />
<text  x="169.04" y="1231.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (22 samples, 0.12%)</title><rect x="578.1" y="1877" width="1.4" height="15.0" fill="rgb(216,21,37)" rx="2" ry="2" />
<text  x="581.10" y="1887.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="88.5" y="1733" width="0.1" height="15.0" fill="rgb(238,70,21)" rx="2" ry="2" />
<text  x="91.46" y="1743.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (3 samples, 0.02%)</title><rect x="92.8" y="1989" width="0.2" height="15.0" fill="rgb(250,83,34)" rx="2" ry="2" />
<text  x="95.82" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (76 samples, 0.41%)</title><rect x="139.0" y="1685" width="4.8" height="15.0" fill="rgb(253,121,34)" rx="2" ry="2" />
<text  x="142.02" y="1695.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (2 samples, 0.01%)</title><rect x="803.6" y="2037" width="0.1" height="15.0" fill="rgb(239,39,24)" rx="2" ry="2" />
<text  x="806.57" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1186.2" y="341" width="0.1" height="15.0" fill="rgb(220,51,41)" rx="2" ry="2" />
<text  x="1189.21" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (89 samples, 0.48%)</title><rect x="166.7" y="1701" width="5.6" height="15.0" fill="rgb(245,142,26)" rx="2" ry="2" />
<text  x="169.73" y="1711.5" ></text>
</g>
<g >
<title>__lsan::CollectLeaksCb (2 samples, 0.01%)</title><rect x="95.5" y="2021" width="0.2" height="15.0" fill="rgb(253,118,26)" rx="2" ry="2" />
<text  x="98.53" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1187.0" y="949" width="0.2" height="15.0" fill="rgb(253,145,13)" rx="2" ry="2" />
<text  x="1190.03" y="959.5" ></text>
</g>
<g >
<title>__asan::AsanThread::stack_top (2 samples, 0.01%)</title><rect x="209.0" y="1605" width="0.1" height="15.0" fill="rgb(227,171,22)" rx="2" ry="2" />
<text  x="211.96" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1186.7" y="1445" width="0.3" height="15.0" fill="rgb(223,185,25)" rx="2" ry="2" />
<text  x="1189.65" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="194.5" y="1445" width="0.1" height="15.0" fill="rgb(205,3,18)" rx="2" ry="2" />
<text  x="197.51" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (5 samples, 0.03%)</title><rect x="193.7" y="1813" width="0.3" height="15.0" fill="rgb(246,150,33)" rx="2" ry="2" />
<text  x="196.68" y="1823.5" ></text>
</g>
<g >
<title>__x64_sys_futex (7 samples, 0.04%)</title><rect x="27.4" y="1957" width="0.4" height="15.0" fill="rgb(254,225,50)" rx="2" ry="2" />
<text  x="30.36" y="1967.5" ></text>
</g>
<g >
<title>onmt::CaseModifier::extract_case_type (3 samples, 0.02%)</title><rect x="557.0" y="1909" width="0.2" height="15.0" fill="rgb(207,167,9)" rx="2" ry="2" />
<text  x="560.01" y="1919.5" ></text>
</g>
<g >
<title>__asan::Allocator::Deallocate (2 samples, 0.01%)</title><rect x="156.9" y="1637" width="0.1" height="15.0" fill="rgb(251,40,12)" rx="2" ry="2" />
<text  x="159.88" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="165.8" y="1637" width="0.5" height="15.0" fill="rgb(208,164,23)" rx="2" ry="2" />
<text  x="168.85" y="1647.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (2 samples, 0.01%)</title><rect x="757.3" y="1861" width="0.1" height="15.0" fill="rgb(223,200,29)" rx="2" ry="2" />
<text  x="760.30" y="1871.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::do_tolower (2 samples, 0.01%)</title><rect x="205.7" y="1605" width="0.2" height="15.0" fill="rgb(221,104,47)" rx="2" ry="2" />
<text  x="208.74" y="1615.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="501.8" y="1957" width="0.1" height="15.0" fill="rgb(241,77,3)" rx="2" ry="2" />
<text  x="504.78" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="194.4" y="1701" width="0.1" height="15.0" fill="rgb(247,121,21)" rx="2" ry="2" />
<text  x="197.38" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.0" y="197" width="0.2" height="15.0" fill="rgb(254,90,45)" rx="2" ry="2" />
<text  x="1190.03" y="207.5" ></text>
</g>
<g >
<title>__asan::AsanTSDGet (2 samples, 0.01%)</title><rect x="203.1" y="1589" width="0.1" height="15.0" fill="rgb(238,124,50)" rx="2" ry="2" />
<text  x="206.09" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1186.4" y="1109" width="0.2" height="15.0" fill="rgb(212,126,14)" rx="2" ry="2" />
<text  x="1189.40" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (83 samples, 0.44%)</title><rect x="178.3" y="1669" width="5.2" height="15.0" fill="rgb(228,158,25)" rx="2" ry="2" />
<text  x="181.28" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="194.3" y="1925" width="0.3" height="15.0" fill="rgb(236,37,46)" rx="2" ry="2" />
<text  x="197.32" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1186.2" y="1493" width="0.1" height="15.0" fill="rgb(208,229,45)" rx="2" ry="2" />
<text  x="1189.21" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (91 samples, 0.49%)</title><rect x="217.8" y="1813" width="5.7" height="15.0" fill="rgb(218,83,26)" rx="2" ry="2" />
<text  x="220.80" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.0" y="437" width="0.2" height="15.0" fill="rgb(243,147,29)" rx="2" ry="2" />
<text  x="1190.03" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1186.7" y="741" width="0.3" height="15.0" fill="rgb(228,207,4)" rx="2" ry="2" />
<text  x="1189.72" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (94 samples, 0.50%)</title><rect x="149.0" y="1685" width="5.9" height="15.0" fill="rgb(247,77,25)" rx="2" ry="2" />
<text  x="151.99" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="224.9" y="1797" width="0.4" height="15.0" fill="rgb(228,164,17)" rx="2" ry="2" />
<text  x="227.93" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (364 samples, 1.95%)</title><rect x="57.8" y="1269" width="23.0" height="15.0" fill="rgb(252,62,3)" rx="2" ry="2" />
<text  x="60.85" y="1279.5" >[..</text>
</g>
<g >
<title>__lsan::GetUserBegin (8 samples, 0.04%)</title><rect x="510.2" y="2037" width="0.5" height="15.0" fill="rgb(214,156,51)" rx="2" ry="2" />
<text  x="513.24" y="2047.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (6 samples, 0.03%)</title><rect x="667.7" y="1749" width="0.3" height="15.0" fill="rgb(249,161,38)" rx="2" ry="2" />
<text  x="670.67" y="1759.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (4 samples, 0.02%)</title><rect x="90.7" y="1861" width="0.2" height="15.0" fill="rgb(233,222,29)" rx="2" ry="2" />
<text  x="93.67" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1186.6" y="1717" width="0.4" height="15.0" fill="rgb(226,64,39)" rx="2" ry="2" />
<text  x="1189.59" y="1727.5" ></text>
</g>
<g >
<title>TDocument::TDocument (13 samples, 0.07%)</title><rect x="744.9" y="1973" width="0.8" height="15.0" fill="rgb(248,148,4)" rx="2" ry="2" />
<text  x="747.93" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1186.4" y="1045" width="0.2" height="15.0" fill="rgb(205,102,38)" rx="2" ry="2" />
<text  x="1189.40" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1186.4" y="885" width="0.2" height="15.0" fill="rgb(212,195,17)" rx="2" ry="2" />
<text  x="1189.40" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.0" y="245" width="0.2" height="15.0" fill="rgb(253,4,8)" rx="2" ry="2" />
<text  x="1190.03" y="255.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="57.6" y="1621" width="0.1" height="15.0" fill="rgb(238,162,25)" rx="2" ry="2" />
<text  x="60.59" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1186.4" y="597" width="0.2" height="15.0" fill="rgb(224,193,41)" rx="2" ry="2" />
<text  x="1189.40" y="607.5" ></text>
</g>
<g >
<title>page_fault (8 samples, 0.04%)</title><rect x="643.2" y="1861" width="0.5" height="15.0" fill="rgb(217,90,14)" rx="2" ry="2" />
<text  x="646.18" y="1871.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::json_value::destroy (5 samples, 0.03%)</title><rect x="128.5" y="1989" width="0.4" height="15.0" fill="rgb(234,85,25)" rx="2" ry="2" />
<text  x="131.54" y="1999.5" ></text>
</g>
<g >
<title>ptep_clear_flush (4 samples, 0.02%)</title><rect x="57.2" y="1909" width="0.2" height="15.0" fill="rgb(211,23,13)" rx="2" ry="2" />
<text  x="60.15" y="1919.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="517.0" y="2005" width="0.1" height="15.0" fill="rgb(205,82,44)" rx="2" ry="2" />
<text  x="519.99" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1186.7" y="1093" width="0.3" height="15.0" fill="rgb(226,69,38)" rx="2" ry="2" />
<text  x="1189.72" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1186.2" y="1845" width="0.1" height="15.0" fill="rgb(245,94,32)" rx="2" ry="2" />
<text  x="1189.21" y="1855.5" ></text>
</g>
<g >
<title>page_add_new_anon_rmap (2 samples, 0.01%)</title><rect x="490.9" y="1845" width="0.2" height="15.0" fill="rgb(237,1,36)" rx="2" ry="2" />
<text  x="493.93" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (75 samples, 0.40%)</title><rect x="144.0" y="1701" width="4.7" height="15.0" fill="rgb(243,77,10)" rx="2" ry="2" />
<text  x="147.01" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1186.2" y="1189" width="0.1" height="15.0" fill="rgb(251,20,17)" rx="2" ry="2" />
<text  x="1189.21" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="1186.8" y="37" width="0.2" height="15.0" fill="rgb(234,25,50)" rx="2" ry="2" />
<text  x="1189.78" y="47.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::json_value::destroy (4 samples, 0.02%)</title><rect x="128.6" y="1973" width="0.3" height="15.0" fill="rgb(226,157,45)" rx="2" ry="2" />
<text  x="131.61" y="1983.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="164.2" y="1701" width="0.1" height="15.0" fill="rgb(254,40,23)" rx="2" ry="2" />
<text  x="167.21" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (83 samples, 0.44%)</title><rect x="167.0" y="1669" width="5.3" height="15.0" fill="rgb(251,124,23)" rx="2" ry="2" />
<text  x="170.05" y="1679.5" ></text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::get (19 samples, 0.10%)</title><rect x="135.7" y="1909" width="1.2" height="15.0" fill="rgb(247,223,11)" rx="2" ry="2" />
<text  x="138.74" y="1919.5" ></text>
</g>
<g >
<title>onmt::CaseModifier::extract_case_type (58 samples, 0.31%)</title><rect x="796.4" y="2037" width="3.6" height="15.0" fill="rgb(254,92,12)" rx="2" ry="2" />
<text  x="799.37" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (84 samples, 0.45%)</title><rect x="178.2" y="1717" width="5.3" height="15.0" fill="rgb(215,103,19)" rx="2" ry="2" />
<text  x="181.22" y="1727.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::getSubwords (2 samples, 0.01%)</title><rect x="469.9" y="1957" width="0.1" height="15.0" fill="rgb(234,175,44)" rx="2" ry="2" />
<text  x="472.91" y="1967.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::create&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (2 samples, 0.01%)</title><rect x="128.9" y="1893" width="0.1" height="15.0" fill="rgb(214,198,26)" rx="2" ry="2" />
<text  x="131.92" y="1903.5" ></text>
</g>
<g >
<title>onmt::unicode::is_number (11 samples, 0.06%)</title><rect x="713.3" y="1877" width="0.7" height="15.0" fill="rgb(247,149,8)" rx="2" ry="2" />
<text  x="716.30" y="1887.5" ></text>
</g>
<g >
<title>lru_add_drain_cpu (2 samples, 0.01%)</title><rect x="756.4" y="1861" width="0.1" height="15.0" fill="rgb(215,188,0)" rx="2" ry="2" />
<text  x="759.35" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1186.6" y="1589" width="0.4" height="15.0" fill="rgb(227,1,52)" rx="2" ry="2" />
<text  x="1189.59" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="225.1" y="1461" width="0.1" height="15.0" fill="rgb(224,96,14)" rx="2" ry="2" />
<text  x="228.06" y="1471.5" ></text>
</g>
<g >
<title>on_each_cpu_cond_mask (3 samples, 0.02%)</title><rect x="513.0" y="1877" width="0.1" height="15.0" fill="rgb(252,48,26)" rx="2" ry="2" />
<text  x="515.95" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1186.7" y="277" width="0.3" height="15.0" fill="rgb(245,215,6)" rx="2" ry="2" />
<text  x="1189.72" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="194.5" y="1461" width="0.1" height="15.0" fill="rgb(242,104,36)" rx="2" ry="2" />
<text  x="197.51" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1186.2" y="1749" width="0.1" height="15.0" fill="rgb(227,64,50)" rx="2" ry="2" />
<text  x="1189.21" y="1759.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (39 samples, 0.21%)</title><rect x="145.9" y="1605" width="2.5" height="15.0" fill="rgb(252,228,44)" rx="2" ry="2" />
<text  x="148.90" y="1615.5" ></text>
</g>
<g >
<title>__sanitizer::RunMallocHooks (14 samples, 0.07%)</title><rect x="1016.0" y="2053" width="0.9" height="15.0" fill="rgb(219,8,9)" rx="2" ry="2" />
<text  x="1019.04" y="2063.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (147 samples, 0.79%)</title><rect x="1105.7" y="2053" width="9.2" height="15.0" fill="rgb(232,85,4)" rx="2" ry="2" />
<text  x="1108.67" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (2 samples, 0.01%)</title><rect x="224.0" y="1781" width="0.2" height="15.0" fill="rgb(248,128,31)" rx="2" ry="2" />
<text  x="227.05" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (7 samples, 0.04%)</title><rect x="193.6" y="1877" width="0.5" height="15.0" fill="rgb(254,159,11)" rx="2" ry="2" />
<text  x="196.62" y="1887.5" ></text>
</g>
<g >
<title>lru_add_drain (2 samples, 0.01%)</title><rect x="756.4" y="1877" width="0.1" height="15.0" fill="rgb(225,9,37)" rx="2" ry="2" />
<text  x="759.35" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1186.2" y="1765" width="0.1" height="15.0" fill="rgb(243,117,32)" rx="2" ry="2" />
<text  x="1189.21" y="1775.5" ></text>
</g>
<g >
<title>__libc_read (2 samples, 0.01%)</title><rect x="1105.5" y="2037" width="0.2" height="15.0" fill="rgb(219,27,29)" rx="2" ry="2" />
<text  x="1108.54" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1186.4" y="1317" width="0.2" height="15.0" fill="rgb(231,59,51)" rx="2" ry="2" />
<text  x="1189.40" y="1327.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="57.6" y="1461" width="0.1" height="15.0" fill="rgb(246,151,2)" rx="2" ry="2" />
<text  x="60.59" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1187.0" y="1237" width="0.2" height="15.0" fill="rgb(217,202,12)" rx="2" ry="2" />
<text  x="1190.03" y="1247.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;fasttext::FastText, std::default_delete&lt;fasttext::FastText&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;fasttext::FastText, std::default_delete&lt;fasttext::FastText&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (3 samples, 0.02%)</title><rect x="509.0" y="2005" width="0.2" height="15.0" fill="rgb(233,106,33)" rx="2" ry="2" />
<text  x="512.04" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1186.6" y="1701" width="0.4" height="15.0" fill="rgb(253,87,54)" rx="2" ry="2" />
<text  x="1189.59" y="1711.5" ></text>
</g>
<g >
<title>__asan::GetMallocContextSize (2 samples, 0.01%)</title><rect x="578.0" y="1877" width="0.1" height="15.0" fill="rgb(233,203,14)" rx="2" ry="2" />
<text  x="580.97" y="1887.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::append (13 samples, 0.07%)</title><rect x="643.7" y="1877" width="0.8" height="15.0" fill="rgb(231,197,53)" rx="2" ry="2" />
<text  x="646.68" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="1186.3" y="1525" width="0.3" height="15.0" fill="rgb(238,150,32)" rx="2" ry="2" />
<text  x="1189.34" y="1535.5" ></text>
</g>
<g >
<title>__asan_memcpy (2 samples, 0.01%)</title><rect x="221.0" y="1669" width="0.1" height="15.0" fill="rgb(252,94,49)" rx="2" ry="2" />
<text  x="223.95" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1186.4" y="261" width="0.2" height="15.0" fill="rgb(243,212,11)" rx="2" ry="2" />
<text  x="1189.40" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.1" y="37" width="0.1" height="15.0" fill="rgb(238,98,49)" rx="2" ry="2" />
<text  x="1190.10" y="47.5" ></text>
</g>
<g >
<title>__handle_mm_fault (24 samples, 0.13%)</title><rect x="56.0" y="1957" width="1.5" height="15.0" fill="rgb(250,100,27)" rx="2" ry="2" />
<text  x="59.02" y="1967.5" ></text>
</g>
<g >
<title>free_unref_page_list (2 samples, 0.01%)</title><rect x="1096.6" y="1797" width="0.2" height="15.0" fill="rgb(213,154,4)" rx="2" ry="2" />
<text  x="1099.64" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.02%)</title><rect x="1186.3" y="1925" width="0.3" height="15.0" fill="rgb(240,104,47)" rx="2" ry="2" />
<text  x="1189.34" y="1935.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::create&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt; const&amp;&gt; (4 samples, 0.02%)</title><rect x="508.7" y="1957" width="0.3" height="15.0" fill="rgb(227,134,49)" rx="2" ry="2" />
<text  x="511.73" y="1967.5" ></text>
</g>
<g >
<title>__vm_munmap (3 samples, 0.02%)</title><rect x="86.4" y="1557" width="0.2" height="15.0" fill="rgb(208,67,10)" rx="2" ry="2" />
<text  x="89.44" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (9 samples, 0.05%)</title><rect x="802.1" y="2021" width="0.5" height="15.0" fill="rgb(222,88,17)" rx="2" ry="2" />
<text  x="805.05" y="2031.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (5 samples, 0.03%)</title><rect x="195.5" y="1669" width="0.3" height="15.0" fill="rgb(238,184,26)" rx="2" ry="2" />
<text  x="198.52" y="1679.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (6 samples, 0.03%)</title><rect x="1096.4" y="1893" width="0.4" height="15.0" fill="rgb(236,119,16)" rx="2" ry="2" />
<text  x="1099.39" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1186.7" y="1333" width="0.3" height="15.0" fill="rgb(228,50,39)" rx="2" ry="2" />
<text  x="1189.65" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1186.7" y="1157" width="0.3" height="15.0" fill="rgb(254,186,6)" rx="2" ry="2" />
<text  x="1189.72" y="1167.5" ></text>
</g>
<g >
<title>__interceptor_strlen (2 samples, 0.01%)</title><rect x="556.4" y="1925" width="0.1" height="15.0" fill="rgb(234,73,42)" rx="2" ry="2" />
<text  x="559.38" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="225.1" y="1493" width="0.1" height="15.0" fill="rgb(240,166,52)" rx="2" ry="2" />
<text  x="228.06" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1186.7" y="517" width="0.3" height="15.0" fill="rgb(231,108,45)" rx="2" ry="2" />
<text  x="1189.72" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1186.2" y="1909" width="0.1" height="15.0" fill="rgb(223,160,45)" rx="2" ry="2" />
<text  x="1189.21" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (81 samples, 0.43%)</title><rect x="206.6" y="1733" width="5.1" height="15.0" fill="rgb(237,38,29)" rx="2" ry="2" />
<text  x="209.56" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1187.0" y="1333" width="0.2" height="15.0" fill="rgb(212,186,36)" rx="2" ry="2" />
<text  x="1190.03" y="1343.5" ></text>
</g>
<g >
<title>__madvise (27 samples, 0.14%)</title><rect x="512.1" y="2037" width="1.7" height="15.0" fill="rgb(237,226,37)" rx="2" ry="2" />
<text  x="515.07" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.05%)</title><rect x="165.8" y="1781" width="0.6" height="15.0" fill="rgb(216,182,5)" rx="2" ry="2" />
<text  x="168.85" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="165.9" y="1189" width="0.1" height="15.0" fill="rgb(236,105,49)" rx="2" ry="2" />
<text  x="168.91" y="1199.5" ></text>
</g>
<g >
<title>native_write_msr (2 samples, 0.01%)</title><rect x="513.0" y="1765" width="0.1" height="15.0" fill="rgb(211,47,16)" rx="2" ry="2" />
<text  x="516.02" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.02%)</title><rect x="1186.3" y="1733" width="0.3" height="15.0" fill="rgb(235,207,39)" rx="2" ry="2" />
<text  x="1189.34" y="1743.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (6 samples, 0.03%)</title><rect x="319.8" y="1941" width="0.4" height="15.0" fill="rgb(227,43,46)" rx="2" ry="2" />
<text  x="322.80" y="1951.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (21 samples, 0.11%)</title><rect x="1151.9" y="2037" width="1.4" height="15.0" fill="rgb(228,146,49)" rx="2" ry="2" />
<text  x="1154.94" y="2047.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.01%)</title><rect x="187.0" y="1621" width="0.1" height="15.0" fill="rgb(220,178,51)" rx="2" ry="2" />
<text  x="189.99" y="1631.5" ></text>
</g>
<g >
<title>std::locale::locale (3 samples, 0.02%)</title><rect x="506.3" y="1973" width="0.2" height="15.0" fill="rgb(205,214,29)" rx="2" ry="2" />
<text  x="509.26" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_BracketMatcher (2 samples, 0.01%)</title><rect x="166.9" y="1605" width="0.1" height="15.0" fill="rgb(231,88,19)" rx="2" ry="2" />
<text  x="169.92" y="1615.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (5 samples, 0.03%)</title><rect x="174.7" y="1573" width="0.3" height="15.0" fill="rgb(213,57,43)" rx="2" ry="2" />
<text  x="177.68" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (309 samples, 1.65%)</title><rect x="57.9" y="261" width="19.5" height="15.0" fill="rgb(247,46,41)" rx="2" ry="2" />
<text  x="60.91" y="271.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (4 samples, 0.02%)</title><rect x="89.2" y="1781" width="0.3" height="15.0" fill="rgb(252,224,51)" rx="2" ry="2" />
<text  x="92.22" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (310 samples, 1.66%)</title><rect x="57.9" y="293" width="19.6" height="15.0" fill="rgb(231,145,45)" rx="2" ry="2" />
<text  x="60.91" y="303.5" ></text>
</g>
<g >
<title>nlohmann::detail::external_constructor&lt; (2 samples, 0.01%)</title><rect x="128.9" y="1909" width="0.1" height="15.0" fill="rgb(230,89,37)" rx="2" ry="2" />
<text  x="131.92" y="1919.5" ></text>
</g>
<g >
<title>fasttext::FastText::getWordVector (176 samples, 0.94%)</title><rect x="314.8" y="1973" width="11.1" height="15.0" fill="rgb(252,0,51)" rx="2" ry="2" />
<text  x="317.82" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.02%)</title><rect x="872.0" y="2021" width="0.2" height="15.0" fill="rgb(253,126,11)" rx="2" ry="2" />
<text  x="874.99" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="1186.3" y="1989" width="0.3" height="15.0" fill="rgb(211,188,46)" rx="2" ry="2" />
<text  x="1189.34" y="1999.5" ></text>
</g>
<g >
<title>find_vma (3 samples, 0.02%)</title><rect x="935.3" y="1989" width="0.2" height="15.0" fill="rgb(208,137,28)" rx="2" ry="2" />
<text  x="938.30" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (377 samples, 2.02%)</title><rect x="57.8" y="1349" width="23.8" height="15.0" fill="rgb(227,167,44)" rx="2" ry="2" />
<text  x="60.85" y="1359.5" >[..</text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (27 samples, 0.14%)</title><rect x="73.3" y="37" width="1.7" height="15.0" fill="rgb(210,34,49)" rx="2" ry="2" />
<text  x="76.31" y="47.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::has_features (2 samples, 0.01%)</title><rect x="558.5" y="1893" width="0.2" height="15.0" fill="rgb(247,95,20)" rx="2" ry="2" />
<text  x="561.53" y="1903.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (9 samples, 0.05%)</title><rect x="576.7" y="1877" width="0.6" height="15.0" fill="rgb(244,5,6)" rx="2" ry="2" />
<text  x="579.71" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (87 samples, 0.47%)</title><rect x="211.9" y="1717" width="5.5" height="15.0" fill="rgb(230,6,39)" rx="2" ry="2" />
<text  x="214.86" y="1727.5" ></text>
</g>
<g >
<title>handle_mm_fault (4 samples, 0.02%)</title><rect x="507.2" y="1893" width="0.3" height="15.0" fill="rgb(212,214,42)" rx="2" ry="2" />
<text  x="510.21" y="1903.5" ></text>
</g>
<g >
<title>get_page_from_freelist (8 samples, 0.04%)</title><rect x="937.0" y="1893" width="0.5" height="15.0" fill="rgb(205,76,30)" rx="2" ry="2" />
<text  x="940.01" y="1903.5" ></text>
</g>
<g >
<title>__pthread_getspecific (39 samples, 0.21%)</title><rect x="1171.9" y="2037" width="2.5" height="15.0" fill="rgb(222,132,33)" rx="2" ry="2" />
<text  x="1174.95" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (449 samples, 2.40%)</title><rect x="195.4" y="1877" width="28.3" height="15.0" fill="rgb(224,218,42)" rx="2" ry="2" />
<text  x="198.39" y="1887.5" >st..</text>
</g>
<g >
<title>__handle_mm_fault (3 samples, 0.02%)</title><rect x="1189.0" y="1957" width="0.2" height="15.0" fill="rgb(212,22,28)" rx="2" ry="2" />
<text  x="1191.99" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1186.7" y="821" width="0.3" height="15.0" fill="rgb(245,69,1)" rx="2" ry="2" />
<text  x="1189.72" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (76 samples, 0.41%)</title><rect x="178.5" y="1621" width="4.8" height="15.0" fill="rgb(249,135,19)" rx="2" ry="2" />
<text  x="181.54" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1186.7" y="949" width="0.3" height="15.0" fill="rgb(246,208,18)" rx="2" ry="2" />
<text  x="1189.72" y="959.5" ></text>
</g>
<g >
<title>do_page_fault (29 samples, 0.16%)</title><rect x="489.2" y="1909" width="1.9" height="15.0" fill="rgb(233,37,49)" rx="2" ry="2" />
<text  x="492.22" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1186.2" y="917" width="0.1" height="15.0" fill="rgb(242,5,3)" rx="2" ry="2" />
<text  x="1189.21" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (167 samples, 0.89%)</title><rect x="138.5" y="1765" width="10.5" height="15.0" fill="rgb(209,101,22)" rx="2" ry="2" />
<text  x="141.45" y="1775.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::getLine (181 samples, 0.97%)</title><rect x="517.9" y="1925" width="11.5" height="15.0" fill="rgb(220,167,54)" rx="2" ry="2" />
<text  x="520.94" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (306 samples, 1.64%)</title><rect x="57.9" y="69" width="19.3" height="15.0" fill="rgb(206,183,19)" rx="2" ry="2" />
<text  x="60.91" y="79.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (3 samples, 0.02%)</title><rect x="157.1" y="1637" width="0.2" height="15.0" fill="rgb(254,128,23)" rx="2" ry="2" />
<text  x="160.07" y="1647.5" ></text>
</g>
<g >
<title>handle_mm_fault (3 samples, 0.02%)</title><rect x="1018.6" y="1989" width="0.2" height="15.0" fill="rgb(214,96,36)" rx="2" ry="2" />
<text  x="1021.56" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1186.2" y="965" width="0.1" height="15.0" fill="rgb(226,134,11)" rx="2" ry="2" />
<text  x="1189.21" y="975.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (15 samples, 0.08%)</title><rect x="512.6" y="1925" width="0.9" height="15.0" fill="rgb(218,35,39)" rx="2" ry="2" />
<text  x="515.58" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1186.2" y="101" width="0.1" height="15.0" fill="rgb(218,223,44)" rx="2" ry="2" />
<text  x="1189.21" y="111.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1187.0" y="325" width="0.2" height="15.0" fill="rgb(241,31,49)" rx="2" ry="2" />
<text  x="1190.03" y="335.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="57.6" y="1829" width="0.1" height="15.0" fill="rgb(209,14,40)" rx="2" ry="2" />
<text  x="60.59" y="1839.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (24 samples, 0.13%)</title><rect x="23.4" y="1941" width="1.6" height="15.0" fill="rgb(242,140,16)" rx="2" ry="2" />
<text  x="26.44" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="1186.3" y="1765" width="0.3" height="15.0" fill="rgb(224,122,38)" rx="2" ry="2" />
<text  x="1189.34" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="1186.3" y="1941" width="0.3" height="15.0" fill="rgb(205,50,1)" rx="2" ry="2" />
<text  x="1189.34" y="1951.5" ></text>
</g>
<g >
<title>__asan::Allocator::GetAsanChunkByAddrFastLocked (86 samples, 0.46%)</title><rect x="102.7" y="2037" width="5.4" height="15.0" fill="rgb(253,201,44)" rx="2" ry="2" />
<text  x="105.66" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1186.6" y="1733" width="0.4" height="15.0" fill="rgb(208,52,36)" rx="2" ry="2" />
<text  x="1189.59" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (924 samples, 4.94%)</title><rect x="810.8" y="2021" width="58.3" height="15.0" fill="rgb(227,219,32)" rx="2" ry="2" />
<text  x="813.76" y="2031.5" >[unkno..</text>
</g>
<g >
<title>__asan_memcpy (5 samples, 0.03%)</title><rect x="170.0" y="1541" width="0.3" height="15.0" fill="rgb(245,109,38)" rx="2" ry="2" />
<text  x="173.01" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (550 samples, 2.94%)</title><rect x="57.8" y="1989" width="34.8" height="15.0" fill="rgb(238,102,28)" rx="2" ry="2" />
<text  x="60.85" y="1999.5" >[u..</text>
</g>
<g >
<title>[unknown] (52 samples, 0.28%)</title><rect x="806.3" y="2021" width="3.3" height="15.0" fill="rgb(205,28,20)" rx="2" ry="2" />
<text  x="809.28" y="2031.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (11 samples, 0.06%)</title><rect x="1109.6" y="2037" width="0.7" height="15.0" fill="rgb(209,210,54)" rx="2" ry="2" />
<text  x="1112.58" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (315 samples, 1.69%)</title><rect x="57.9" y="549" width="19.9" height="15.0" fill="rgb(216,198,48)" rx="2" ry="2" />
<text  x="60.91" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="1186.3" y="1717" width="0.3" height="15.0" fill="rgb(212,37,15)" rx="2" ry="2" />
<text  x="1189.34" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1186.2" y="725" width="0.1" height="15.0" fill="rgb(212,51,54)" rx="2" ry="2" />
<text  x="1189.21" y="735.5" ></text>
</g>
<g >
<title>[unknown] (314 samples, 1.68%)</title><rect x="57.9" y="421" width="19.8" height="15.0" fill="rgb(217,81,10)" rx="2" ry="2" />
<text  x="60.91" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (9 samples, 0.05%)</title><rect x="223.9" y="1845" width="0.5" height="15.0" fill="rgb(216,21,5)" rx="2" ry="2" />
<text  x="226.86" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (90 samples, 0.48%)</title><rect x="217.8" y="1765" width="5.7" height="15.0" fill="rgb(215,195,13)" rx="2" ry="2" />
<text  x="220.80" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1186.4" y="1269" width="0.2" height="15.0" fill="rgb(251,141,22)" rx="2" ry="2" />
<text  x="1189.40" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (2 samples, 0.01%)</title><rect x="223.5" y="1765" width="0.2" height="15.0" fill="rgb(234,173,49)" rx="2" ry="2" />
<text  x="226.54" y="1775.5" ></text>
</g>
<g >
<title>__sanitizer::QuarantineCache&lt;__asan::QuarantineCallback&gt;::MergeBatches (18 samples, 0.10%)</title><rect x="753.2" y="2037" width="1.1" height="15.0" fill="rgb(210,21,11)" rx="2" ry="2" />
<text  x="756.20" y="2047.5" ></text>
</g>
<g >
<title>__sanitizer::internal_memmove (2 samples, 0.01%)</title><rect x="217.9" y="1717" width="0.1" height="15.0" fill="rgb(222,28,13)" rx="2" ry="2" />
<text  x="220.86" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1186.2" y="1717" width="0.1" height="15.0" fill="rgb(232,4,48)" rx="2" ry="2" />
<text  x="1189.21" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="225.0" y="1653" width="0.2" height="15.0" fill="rgb(247,59,1)" rx="2" ry="2" />
<text  x="227.99" y="1663.5" ></text>
</g>
<g >
<title>__asan::AsanThread::stack_bottom (2 samples, 0.01%)</title><rect x="169.5" y="1541" width="0.1" height="15.0" fill="rgb(233,33,20)" rx="2" ry="2" />
<text  x="172.51" y="1551.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (57 samples, 0.30%)</title><rect x="219.5" y="1685" width="3.6" height="15.0" fill="rgb(248,192,30)" rx="2" ry="2" />
<text  x="222.50" y="1695.5" ></text>
</g>
<g >
<title>clear_page_erms (2 samples, 0.01%)</title><rect x="719.1" y="1765" width="0.1" height="15.0" fill="rgb(213,195,37)" rx="2" ry="2" />
<text  x="722.11" y="1775.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (2 samples, 0.01%)</title><rect x="215.3" y="1637" width="0.1" height="15.0" fill="rgb(209,75,7)" rx="2" ry="2" />
<text  x="218.27" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.0" y="405" width="0.2" height="15.0" fill="rgb(254,189,43)" rx="2" ry="2" />
<text  x="1190.03" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.0" y="1013" width="0.2" height="15.0" fill="rgb(230,108,43)" rx="2" ry="2" />
<text  x="1190.03" y="1023.5" ></text>
</g>
<g >
<title>[unknown] (520 samples, 2.78%)</title><rect x="57.8" y="1861" width="32.9" height="15.0" fill="rgb(237,22,6)" rx="2" ry="2" />
<text  x="60.85" y="1871.5" >[u..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1186.2" y="261" width="0.1" height="15.0" fill="rgb(213,221,23)" rx="2" ry="2" />
<text  x="1189.21" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="225.1" y="1333" width="0.1" height="15.0" fill="rgb(212,53,37)" rx="2" ry="2" />
<text  x="228.06" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (73 samples, 0.39%)</title><rect x="167.6" y="1573" width="4.6" height="15.0" fill="rgb(223,71,40)" rx="2" ry="2" />
<text  x="170.62" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="165.8" y="1429" width="0.5" height="15.0" fill="rgb(229,45,49)" rx="2" ry="2" />
<text  x="168.85" y="1439.5" ></text>
</g>
<g >
<title>__asan::asan_delete (5 samples, 0.03%)</title><rect x="579.5" y="1877" width="0.3" height="15.0" fill="rgb(234,155,8)" rx="2" ry="2" />
<text  x="582.49" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (330 samples, 1.77%)</title><rect x="57.9" y="1093" width="20.8" height="15.0" fill="rgb(227,59,25)" rx="2" ry="2" />
<text  x="60.91" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.0" y="1173" width="0.2" height="15.0" fill="rgb(219,84,41)" rx="2" ry="2" />
<text  x="1190.03" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1186.4" y="1253" width="0.2" height="15.0" fill="rgb(223,228,41)" rx="2" ry="2" />
<text  x="1189.40" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1186.4" y="181" width="0.2" height="15.0" fill="rgb(221,80,43)" rx="2" ry="2" />
<text  x="1189.40" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="166.0" y="1189" width="0.3" height="15.0" fill="rgb(253,142,18)" rx="2" ry="2" />
<text  x="169.04" y="1199.5" ></text>
</g>
<g >
<title>do_page_fault (4 samples, 0.02%)</title><rect x="1014.8" y="2021" width="0.3" height="15.0" fill="rgb(233,188,0)" rx="2" ry="2" />
<text  x="1017.84" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="165.8" y="1397" width="0.5" height="15.0" fill="rgb(209,29,10)" rx="2" ry="2" />
<text  x="168.85" y="1407.5" ></text>
</g>
<g >
<title>try_charge (3 samples, 0.02%)</title><rect x="490.7" y="1813" width="0.2" height="15.0" fill="rgb(219,169,19)" rx="2" ry="2" />
<text  x="493.74" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (534 samples, 2.86%)</title><rect x="57.8" y="1925" width="33.8" height="15.0" fill="rgb(223,46,2)" rx="2" ry="2" />
<text  x="60.85" y="1935.5" >[u..</text>
</g>
<g >
<title>__asan::AsanThread::stack_top (8 samples, 0.04%)</title><rect x="1154.7" y="2037" width="0.5" height="15.0" fill="rgb(224,81,17)" rx="2" ry="2" />
<text  x="1157.65" y="2047.5" ></text>
</g>
<g >
<title>page_fault (19 samples, 0.10%)</title><rect x="666.8" y="1845" width="1.2" height="15.0" fill="rgb(208,95,23)" rx="2" ry="2" />
<text  x="669.85" y="1855.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.03%)</title><rect x="199.3" y="1557" width="0.4" height="15.0" fill="rgb(213,200,1)" rx="2" ry="2" />
<text  x="202.30" y="1567.5" ></text>
</g>
<g >
<title>__do_page_fault (13 samples, 0.07%)</title><rect x="752.4" y="1989" width="0.8" height="15.0" fill="rgb(251,227,54)" rx="2" ry="2" />
<text  x="755.38" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="57.6" y="1557" width="0.1" height="15.0" fill="rgb(218,137,50)" rx="2" ry="2" />
<text  x="60.59" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="26.9" y="2037" width="0.1" height="15.0" fill="rgb(211,134,2)" rx="2" ry="2" />
<text  x="29.85" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="165.8" y="1605" width="0.5" height="15.0" fill="rgb(243,120,47)" rx="2" ry="2" />
<text  x="168.85" y="1615.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (2 samples, 0.01%)</title><rect x="803.8" y="2005" width="0.1" height="15.0" fill="rgb(244,47,52)" rx="2" ry="2" />
<text  x="806.76" y="2015.5" ></text>
</g>
<g >
<title>__asan::AsanThread::stack_top (2 samples, 0.01%)</title><rect x="1188.0" y="2037" width="0.2" height="15.0" fill="rgb(249,138,3)" rx="2" ry="2" />
<text  x="1191.04" y="2047.5" ></text>
</g>
<g >
<title>onmt::Tokenizer::tokenize_text (1,636 samples, 8.75%)</title><rect x="620.3" y="1893" width="103.3" height="15.0" fill="rgb(250,60,29)" rx="2" ry="2" />
<text  x="623.33" y="1903.5" >onmt::Tokeni..</text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (3 samples, 0.02%)</title><rect x="217.1" y="1669" width="0.2" height="15.0" fill="rgb(219,221,27)" rx="2" ry="2" />
<text  x="220.10" y="1679.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (3 samples, 0.02%)</title><rect x="80.4" y="1253" width="0.2" height="15.0" fill="rgb(212,77,47)" rx="2" ry="2" />
<text  x="83.38" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="194.4" y="1573" width="0.1" height="15.0" fill="rgb(240,120,47)" rx="2" ry="2" />
<text  x="197.38" y="1583.5" ></text>
</g>
<g >
<title>__do_page_fault (32 samples, 0.17%)</title><rect x="681.1" y="1813" width="2.0" height="15.0" fill="rgb(229,226,54)" rx="2" ry="2" />
<text  x="684.11" y="1823.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (5 samples, 0.03%)</title><rect x="743.2" y="1893" width="0.3" height="15.0" fill="rgb(231,202,36)" rx="2" ry="2" />
<text  x="746.16" y="1903.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (5 samples, 0.03%)</title><rect x="490.6" y="1845" width="0.3" height="15.0" fill="rgb(249,213,7)" rx="2" ry="2" />
<text  x="493.61" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (65 samples, 0.35%)</title><rect x="207.3" y="1637" width="4.1" height="15.0" fill="rgb(245,13,9)" rx="2" ry="2" />
<text  x="210.32" y="1647.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (2 samples, 0.01%)</title><rect x="198.9" y="1557" width="0.1" height="15.0" fill="rgb(232,211,30)" rx="2" ry="2" />
<text  x="201.86" y="1567.5" ></text>
</g>
<g >
<title>__asan::RZSize2Log (63 samples, 0.34%)</title><rect x="983.7" y="2053" width="3.9" height="15.0" fill="rgb(215,228,15)" rx="2" ry="2" />
<text  x="986.65" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1186.7" y="533" width="0.3" height="15.0" fill="rgb(229,70,50)" rx="2" ry="2" />
<text  x="1189.72" y="543.5" ></text>
</g>
<g >
<title>up_write (2 samples, 0.01%)</title><rect x="1097.2" y="1957" width="0.1" height="15.0" fill="rgb(254,185,39)" rx="2" ry="2" />
<text  x="1100.21" y="1967.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (8 samples, 0.04%)</title><rect x="43.5" y="2005" width="0.5" height="15.0" fill="rgb(220,58,4)" rx="2" ry="2" />
<text  x="46.45" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1186.7" y="357" width="0.3" height="15.0" fill="rgb(234,195,7)" rx="2" ry="2" />
<text  x="1189.72" y="367.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.02%)</title><rect x="137.9" y="1957" width="0.2" height="15.0" fill="rgb(205,26,21)" rx="2" ry="2" />
<text  x="140.88" y="1967.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::json_value::destroy (2 samples, 0.01%)</title><rect x="507.7" y="1989" width="0.1" height="15.0" fill="rgb(250,78,49)" rx="2" ry="2" />
<text  x="510.65" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.0" y="533" width="0.2" height="15.0" fill="rgb(205,156,40)" rx="2" ry="2" />
<text  x="1190.03" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.1" y="85" width="0.1" height="15.0" fill="rgb(215,193,51)" rx="2" ry="2" />
<text  x="1190.10" y="95.5" ></text>
</g>
<g >
<title>__sanitizer::RunFreeHooks (11 samples, 0.06%)</title><rect x="1015.3" y="2053" width="0.7" height="15.0" fill="rgb(228,116,4)" rx="2" ry="2" />
<text  x="1018.34" y="2063.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.01%)</title><rect x="160.9" y="1685" width="0.2" height="15.0" fill="rgb(218,136,39)" rx="2" ry="2" />
<text  x="163.92" y="1695.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (2 samples, 0.01%)</title><rect x="191.9" y="1653" width="0.1" height="15.0" fill="rgb(227,172,16)" rx="2" ry="2" />
<text  x="194.85" y="1663.5" ></text>
</g>
<g >
<title>__do_munmap (4 samples, 0.02%)</title><rect x="757.2" y="1957" width="0.2" height="15.0" fill="rgb(238,161,33)" rx="2" ry="2" />
<text  x="760.17" y="1967.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (3 samples, 0.02%)</title><rect x="127.5" y="1861" width="0.2" height="15.0" fill="rgb(205,8,31)" rx="2" ry="2" />
<text  x="130.47" y="1871.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (4 samples, 0.02%)</title><rect x="757.2" y="1989" width="0.2" height="15.0" fill="rgb(218,124,12)" rx="2" ry="2" />
<text  x="760.17" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1186.4" y="1301" width="0.2" height="15.0" fill="rgb(226,163,37)" rx="2" ry="2" />
<text  x="1189.40" y="1311.5" ></text>
</g>
<g >
<title>flush_tlb_mm_range (39 samples, 0.21%)</title><rect x="939.3" y="1909" width="2.4" height="15.0" fill="rgb(234,86,14)" rx="2" ry="2" />
<text  x="942.28" y="1919.5" ></text>
</g>
<g >
<title>Eigen::DenseCoeffsBase&lt;Eigen::Transpose&lt;Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_sum_op&lt;float, float&gt;, Eigen::Product&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0&gt; const, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const&gt;, 0&gt;::coeff (342 samples, 1.83%)</title><rect x="381.9" y="1957" width="21.6" height="15.0" fill="rgb(217,138,36)" rx="2" ry="2" />
<text  x="384.91" y="1967.5" >E..</text>
</g>
<g >
<title>__do_page_fault (34 samples, 0.18%)</title><rect x="55.4" y="1989" width="2.2" height="15.0" fill="rgb(232,203,29)" rx="2" ry="2" />
<text  x="58.45" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (96 samples, 0.51%)</title><rect x="149.0" y="1733" width="6.1" height="15.0" fill="rgb(233,159,45)" rx="2" ry="2" />
<text  x="151.99" y="1743.5" ></text>
</g>
<g >
<title>on_each_cpu_cond_mask (4 samples, 0.02%)</title><rect x="1096.4" y="1813" width="0.2" height="15.0" fill="rgb(211,6,42)" rx="2" ry="2" />
<text  x="1099.39" y="1823.5" ></text>
</g>
<g >
<title>__asan_memcpy (14 samples, 0.07%)</title><rect x="601.6" y="1845" width="0.9" height="15.0" fill="rgb(215,214,31)" rx="2" ry="2" />
<text  x="604.64" y="1855.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="330.3" y="1973" width="0.1" height="15.0" fill="rgb(229,172,27)" rx="2" ry="2" />
<text  x="333.28" y="1983.5" ></text>
</g>
<g >
<title>__asan::asan_memalign (3 samples, 0.02%)</title><rect x="152.7" y="1605" width="0.1" height="15.0" fill="rgb(243,104,38)" rx="2" ry="2" />
<text  x="155.66" y="1615.5" ></text>
</g>
<g >
<title>__dynamic_cast (6 samples, 0.03%)</title><rect x="201.9" y="1605" width="0.4" height="15.0" fill="rgb(247,32,16)" rx="2" ry="2" />
<text  x="204.89" y="1615.5" ></text>
</g>
<g >
<title>__dynamic_cast (6 samples, 0.03%)</title><rect x="212.3" y="1669" width="0.4" height="15.0" fill="rgb(234,218,16)" rx="2" ry="2" />
<text  x="215.31" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (2 samples, 0.01%)</title><rect x="188.4" y="1765" width="0.1" height="15.0" fill="rgb(232,197,31)" rx="2" ry="2" />
<text  x="191.38" y="1775.5" ></text>
</g>
<g >
<title>fasttext::Vector::norm (30 samples, 0.16%)</title><rect x="504.2" y="1973" width="1.9" height="15.0" fill="rgb(251,98,28)" rx="2" ry="2" />
<text  x="507.24" y="1983.5" ></text>
</g>
<g >
<title>get_page_from_freelist (9 samples, 0.05%)</title><rect x="24.4" y="1925" width="0.6" height="15.0" fill="rgb(247,80,51)" rx="2" ry="2" />
<text  x="27.39" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1186.2" y="1925" width="0.1" height="15.0" fill="rgb(212,19,22)" rx="2" ry="2" />
<text  x="1189.21" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="165.8" y="1653" width="0.5" height="15.0" fill="rgb(214,202,8)" rx="2" ry="2" />
<text  x="168.85" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1186.4" y="373" width="0.2" height="15.0" fill="rgb(252,43,15)" rx="2" ry="2" />
<text  x="1189.40" y="383.5" ></text>
</g>
<g >
<title>__dynamic_cast (5 samples, 0.03%)</title><rect x="149.5" y="1637" width="0.3" height="15.0" fill="rgb(232,139,20)" rx="2" ry="2" />
<text  x="152.50" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="224.9" y="1829" width="0.4" height="15.0" fill="rgb(205,107,7)" rx="2" ry="2" />
<text  x="227.93" y="1839.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (4 samples, 0.02%)</title><rect x="169.7" y="1541" width="0.3" height="15.0" fill="rgb(233,100,11)" rx="2" ry="2" />
<text  x="172.70" y="1551.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (5 samples, 0.03%)</title><rect x="166.7" y="1653" width="0.3" height="15.0" fill="rgb(250,193,20)" rx="2" ry="2" />
<text  x="169.73" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (67 samples, 0.36%)</title><rect x="189.1" y="1685" width="4.3" height="15.0" fill="rgb(226,228,34)" rx="2" ry="2" />
<text  x="192.14" y="1695.5" ></text>
</g>
<g >
<title>__interceptor_strlen (10 samples, 0.05%)</title><rect x="998.2" y="2053" width="0.6" height="15.0" fill="rgb(225,119,46)" rx="2" ry="2" />
<text  x="1001.17" y="2063.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (5 samples, 0.03%)</title><rect x="158.8" y="1669" width="0.3" height="15.0" fill="rgb(249,104,25)" rx="2" ry="2" />
<text  x="161.78" y="1679.5" ></text>
</g>
<g >
<title>__sanitizer::StackTrace::GetCurrentPc (2 samples, 0.01%)</title><rect x="1118.5" y="2037" width="0.1" height="15.0" fill="rgb(251,45,25)" rx="2" ry="2" />
<text  x="1121.48" y="2047.5" ></text>
</g>
<g >
<title>futex_wait (4 samples, 0.02%)</title><rect x="137.9" y="1893" width="0.2" height="15.0" fill="rgb(221,57,0)" rx="2" ry="2" />
<text  x="140.88" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (77 samples, 0.41%)</title><rect x="218.3" y="1701" width="4.9" height="15.0" fill="rgb(232,21,42)" rx="2" ry="2" />
<text  x="221.30" y="1711.5" ></text>
</g>
<g >
<title>__strxfrm_l (3 samples, 0.02%)</title><rect x="1178.6" y="2037" width="0.2" height="15.0" fill="rgb(218,209,14)" rx="2" ry="2" />
<text  x="1181.64" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="165.9" y="1301" width="0.4" height="15.0" fill="rgb(230,0,14)" rx="2" ry="2" />
<text  x="168.91" y="1311.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (24 samples, 0.13%)</title><rect x="755.7" y="2021" width="1.5" height="15.0" fill="rgb(229,191,33)" rx="2" ry="2" />
<text  x="758.66" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (319 samples, 1.71%)</title><rect x="57.9" y="709" width="20.1" height="15.0" fill="rgb(211,69,41)" rx="2" ry="2" />
<text  x="60.91" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1187.0" y="1189" width="0.2" height="15.0" fill="rgb(254,50,3)" rx="2" ry="2" />
<text  x="1190.03" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (426 samples, 2.28%)</title><rect x="166.7" y="1861" width="26.9" height="15.0" fill="rgb(254,192,50)" rx="2" ry="2" />
<text  x="169.67" y="1871.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1186.7" y="837" width="0.3" height="15.0" fill="rgb(241,193,36)" rx="2" ry="2" />
<text  x="1189.72" y="847.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::pushHash (6 samples, 0.03%)</title><rect x="325.0" y="1925" width="0.4" height="15.0" fill="rgb(217,203,46)" rx="2" ry="2" />
<text  x="327.98" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (531 samples, 2.84%)</title><rect x="57.8" y="1893" width="33.6" height="15.0" fill="rgb(243,183,9)" rx="2" ry="2" />
<text  x="60.85" y="1903.5" >[u..</text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="84.5" y="1525" width="0.2" height="15.0" fill="rgb(245,94,18)" rx="2" ry="2" />
<text  x="87.55" y="1535.5" ></text>
</g>
<g >
<title>fasttext::Vector::zero (8 samples, 0.04%)</title><rect x="485.7" y="1957" width="0.6" height="15.0" fill="rgb(227,208,4)" rx="2" ry="2" />
<text  x="488.75" y="1967.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (2 samples, 0.01%)</title><rect x="87.1" y="1605" width="0.1" height="15.0" fill="rgb(234,34,11)" rx="2" ry="2" />
<text  x="90.07" y="1615.5" ></text>
</g>
<g >
<title>__lsan::ForEachChunk (3 samples, 0.02%)</title><rect x="510.1" y="2037" width="0.1" height="15.0" fill="rgb(246,4,37)" rx="2" ry="2" />
<text  x="513.05" y="2047.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (2 samples, 0.01%)</title><rect x="941.9" y="2005" width="0.2" height="15.0" fill="rgb(243,196,30)" rx="2" ry="2" />
<text  x="944.93" y="2015.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (3 samples, 0.02%)</title><rect x="81.2" y="1317" width="0.2" height="15.0" fill="rgb(245,27,24)" rx="2" ry="2" />
<text  x="84.20" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_try_char (4 samples, 0.02%)</title><rect x="206.2" y="1733" width="0.3" height="15.0" fill="rgb(222,219,48)" rx="2" ry="2" />
<text  x="209.25" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1186.2" y="837" width="0.1" height="15.0" fill="rgb(248,101,2)" rx="2" ry="2" />
<text  x="1189.21" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (6 samples, 0.03%)</title><rect x="195.5" y="1701" width="0.3" height="15.0" fill="rgb(252,30,41)" rx="2" ry="2" />
<text  x="198.45" y="1711.5" ></text>
</g>
<g >
<title>__sanitizer::internal_memmove (20 samples, 0.11%)</title><rect x="322.2" y="1941" width="1.3" height="15.0" fill="rgb(224,147,4)" rx="2" ry="2" />
<text  x="325.20" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1186.2" y="1349" width="0.1" height="15.0" fill="rgb(221,211,45)" rx="2" ry="2" />
<text  x="1189.21" y="1359.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (38 samples, 0.20%)</title><rect x="990.5" y="2053" width="2.4" height="15.0" fill="rgb(241,196,47)" rx="2" ry="2" />
<text  x="993.47" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1186.7" y="229" width="0.3" height="15.0" fill="rgb(248,78,24)" rx="2" ry="2" />
<text  x="1189.72" y="239.5" ></text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.02%)</title><rect x="208.0" y="1621" width="0.1" height="15.0" fill="rgb(223,229,32)" rx="2" ry="2" />
<text  x="210.95" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (311 samples, 1.66%)</title><rect x="57.9" y="341" width="19.6" height="15.0" fill="rgb(242,14,32)" rx="2" ry="2" />
<text  x="60.91" y="351.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (2 samples, 0.01%)</title><rect x="561.1" y="1781" width="0.1" height="15.0" fill="rgb(219,145,32)" rx="2" ry="2" />
<text  x="564.05" y="1791.5" ></text>
</g>
<g >
<title>__do_page_fault (3 samples, 0.02%)</title><rect x="1018.6" y="2005" width="0.2" height="15.0" fill="rgb(210,132,53)" rx="2" ry="2" />
<text  x="1021.56" y="2015.5" ></text>
</g>
<g >
<title>__sanitizer::internal_munmap (2 samples, 0.01%)</title><rect x="82.0" y="1365" width="0.1" height="15.0" fill="rgb(209,155,34)" rx="2" ry="2" />
<text  x="85.02" y="1375.5" ></text>
</g>
<g >
<title>__libc_start_main (6,053 samples, 32.38%)</title><rect x="127.7" y="2037" width="382.0" height="15.0" fill="rgb(253,17,51)" rx="2" ry="2" />
<text  x="130.66" y="2047.5" >__libc_start_main</text>
</g>
</g>
</svg>
