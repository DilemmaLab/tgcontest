<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="2134" onload="init(evt)" viewBox="0 0 1200 2134" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="2134.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="2117" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="2117" > </text>
<g id="frames">
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.0" y="1141" width="0.4" height="15.0" fill="rgb(245,9,31)" rx="2" ry="2" />
<text  x="1164.04" y="1151.5" ></text>
</g>
<g >
<title>mem_cgroup_throttle_swaprate (2 samples, 0.03%)</title><rect x="419.6" y="1861" width="0.3" height="15.0" fill="rgb(236,29,6)" rx="2" ry="2" />
<text  x="422.57" y="1871.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::clear (3 samples, 0.05%)</title><rect x="606.3" y="1893" width="0.6" height="15.0" fill="rgb(206,110,42)" rx="2" ry="2" />
<text  x="609.30" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="127.5" y="1605" width="0.4" height="15.0" fill="rgb(222,132,11)" rx="2" ry="2" />
<text  x="130.53" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (189 samples, 3.01%)</title><rect x="154.6" y="1829" width="35.5" height="15.0" fill="rgb(243,57,53)" rx="2" ry="2" />
<text  x="157.61" y="1839.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.0" y="885" width="0.4" height="15.0" fill="rgb(207,149,31)" rx="2" ry="2" />
<text  x="1164.04" y="895.5" ></text>
</g>
<g >
<title>alloc_pages_vma (2 samples, 0.03%)</title><rect x="666.5" y="1781" width="0.4" height="15.0" fill="rgb(254,169,14)" rx="2" ry="2" />
<text  x="669.47" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (15 samples, 0.24%)</title><rect x="74.9" y="2021" width="2.8" height="15.0" fill="rgb(227,158,3)" rx="2" ry="2" />
<text  x="77.88" y="2031.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::json_value::destroy (1 samples, 0.02%)</title><rect x="81.1" y="1989" width="0.2" height="15.0" fill="rgb(248,62,3)" rx="2" ry="2" />
<text  x="84.08" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="127.2" y="1653" width="0.3" height="15.0" fill="rgb(223,36,35)" rx="2" ry="2" />
<text  x="130.15" y="1663.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="34.6" y="1909" width="0.4" height="15.0" fill="rgb(226,119,25)" rx="2" ry="2" />
<text  x="37.63" y="1919.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::append@plt (4 samples, 0.06%)</title><rect x="605.5" y="1893" width="0.8" height="15.0" fill="rgb(244,29,47)" rx="2" ry="2" />
<text  x="608.55" y="1903.5" ></text>
</g>
<g >
<title>do_page_fault (5 samples, 0.08%)</title><rect x="73.9" y="2005" width="1.0" height="15.0" fill="rgb(253,77,17)" rx="2" ry="2" />
<text  x="76.94" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="127.5" y="1573" width="0.4" height="15.0" fill="rgb(252,49,44)" rx="2" ry="2" />
<text  x="130.53" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (35 samples, 0.56%)</title><rect x="183.6" y="1765" width="6.5" height="15.0" fill="rgb(227,52,45)" rx="2" ry="2" />
<text  x="186.57" y="1775.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (2 samples, 0.03%)</title><rect x="666.5" y="1765" width="0.4" height="15.0" fill="rgb(207,115,18)" rx="2" ry="2" />
<text  x="669.47" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.4" y="965" width="0.4" height="15.0" fill="rgb(254,115,9)" rx="2" ry="2" />
<text  x="1164.42" y="975.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (1 samples, 0.02%)</title><rect x="99.7" y="1573" width="0.2" height="15.0" fill="rgb(214,159,11)" rx="2" ry="2" />
<text  x="102.70" y="1583.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="832.0" y="1877" width="0.1" height="15.0" fill="rgb(247,14,14)" rx="2" ry="2" />
<text  x="834.96" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.4" y="1253" width="0.4" height="15.0" fill="rgb(214,69,16)" rx="2" ry="2" />
<text  x="1164.42" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.0" y="549" width="0.4" height="15.0" fill="rgb(210,131,14)" rx="2" ry="2" />
<text  x="1164.04" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="891.8" y="1189" width="0.1" height="15.0" fill="rgb(218,31,42)" rx="2" ry="2" />
<text  x="894.76" y="1199.5" ></text>
</g>
<g >
<title>[unknown] (7 samples, 0.11%)</title><rect x="863.2" y="1989" width="1.3" height="15.0" fill="rgb(208,40,10)" rx="2" ry="2" />
<text  x="866.17" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.4" y="1189" width="0.4" height="15.0" fill="rgb(233,205,52)" rx="2" ry="2" />
<text  x="1164.42" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (1 samples, 0.02%)</title><rect x="190.7" y="1765" width="0.2" height="15.0" fill="rgb(238,226,35)" rx="2" ry="2" />
<text  x="193.71" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="1381" width="0.4" height="15.0" fill="rgb(245,197,25)" rx="2" ry="2" />
<text  x="77.88" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="891.8" y="869" width="0.1" height="15.0" fill="rgb(214,153,13)" rx="2" ry="2" />
<text  x="894.76" y="879.5" ></text>
</g>
<g >
<title>try_charge (1 samples, 0.02%)</title><rect x="843.2" y="1909" width="0.2" height="15.0" fill="rgb(215,50,36)" rx="2" ry="2" />
<text  x="846.24" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="1557" width="0.4" height="15.0" fill="rgb(246,190,53)" rx="2" ry="2" />
<text  x="77.88" y="1567.5" ></text>
</g>
<g >
<title>onmt::is_alphabet@plt (3 samples, 0.05%)</title><rect x="747.9" y="1893" width="0.6" height="15.0" fill="rgb(246,205,14)" rx="2" ry="2" />
<text  x="750.90" y="1903.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="324.0" y="1989" width="0.2" height="15.0" fill="rgb(206,18,1)" rx="2" ry="2" />
<text  x="327.04" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="127.2" y="549" width="0.1" height="15.0" fill="rgb(225,225,51)" rx="2" ry="2" />
<text  x="130.15" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="127.5" y="821" width="0.4" height="15.0" fill="rgb(240,117,32)" rx="2" ry="2" />
<text  x="130.53" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="192.2" y="1573" width="0.4" height="15.0" fill="rgb(209,205,15)" rx="2" ry="2" />
<text  x="195.22" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="127.2" y="421" width="0.1" height="15.0" fill="rgb(206,154,17)" rx="2" ry="2" />
<text  x="130.15" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.0" y="277" width="0.4" height="15.0" fill="rgb(233,104,36)" rx="2" ry="2" />
<text  x="1164.04" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="151.8" y="165" width="0.2" height="15.0" fill="rgb(205,89,45)" rx="2" ry="2" />
<text  x="154.79" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (2 samples, 0.03%)</title><rect x="190.5" y="1861" width="0.4" height="15.0" fill="rgb(242,91,27)" rx="2" ry="2" />
<text  x="193.53" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="192.4" y="533" width="0.2" height="15.0" fill="rgb(224,198,39)" rx="2" ry="2" />
<text  x="195.41" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="151.6" y="1541" width="0.6" height="15.0" fill="rgb(250,7,42)" rx="2" ry="2" />
<text  x="154.60" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="152.0" y="853" width="0.2" height="15.0" fill="rgb(206,107,47)" rx="2" ry="2" />
<text  x="154.98" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="127.2" y="453" width="0.1" height="15.0" fill="rgb(252,149,14)" rx="2" ry="2" />
<text  x="130.15" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="127.2" y="357" width="0.1" height="15.0" fill="rgb(224,124,22)" rx="2" ry="2" />
<text  x="130.15" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_Compiler (126 samples, 2.01%)</title><rect x="127.9" y="1925" width="23.7" height="15.0" fill="rgb(224,70,6)" rx="2" ry="2" />
<text  x="130.91" y="1935.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.4" y="549" width="0.4" height="15.0" fill="rgb(227,50,34)" rx="2" ry="2" />
<text  x="1164.42" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (26 samples, 0.41%)</title><rect x="121.7" y="1717" width="4.9" height="15.0" fill="rgb(231,183,48)" rx="2" ry="2" />
<text  x="124.70" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.0" y="1445" width="0.4" height="15.0" fill="rgb(241,104,5)" rx="2" ry="2" />
<text  x="1164.04" y="1455.5" ></text>
</g>
<g >
<title>TDocument::operator= (1 samples, 0.02%)</title><rect x="573.8" y="1957" width="0.2" height="15.0" fill="rgb(237,166,7)" rx="2" ry="2" />
<text  x="576.77" y="1967.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1140.4" y="2005" width="0.1" height="15.0" fill="rgb(217,175,42)" rx="2" ry="2" />
<text  x="1143.36" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="151.8" y="1109" width="0.2" height="15.0" fill="rgb(237,208,20)" rx="2" ry="2" />
<text  x="154.79" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="127.2" y="949" width="0.1" height="15.0" fill="rgb(211,57,2)" rx="2" ry="2" />
<text  x="130.15" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.4" y="1589" width="0.4" height="15.0" fill="rgb(237,99,42)" rx="2" ry="2" />
<text  x="1164.42" y="1599.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="70.7" y="2005" width="0.2" height="15.0" fill="rgb(231,163,45)" rx="2" ry="2" />
<text  x="73.74" y="2015.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="742.6" y="1845" width="0.2" height="15.0" fill="rgb(218,25,27)" rx="2" ry="2" />
<text  x="745.63" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.4" y="1957" width="0.4" height="15.0" fill="rgb(228,71,7)" rx="2" ry="2" />
<text  x="1164.42" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.4" y="1317" width="0.4" height="15.0" fill="rgb(250,101,13)" rx="2" ry="2" />
<text  x="1164.42" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="192.4" y="581" width="0.2" height="15.0" fill="rgb(246,89,28)" rx="2" ry="2" />
<text  x="195.41" y="591.5" ></text>
</g>
<g >
<title>__libc_read (4 samples, 0.06%)</title><rect x="891.0" y="2053" width="0.8" height="15.0" fill="rgb(241,40,6)" rx="2" ry="2" />
<text  x="894.00" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="151.8" y="405" width="0.2" height="15.0" fill="rgb(212,191,27)" rx="2" ry="2" />
<text  x="154.79" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="127.2" y="613" width="0.1" height="15.0" fill="rgb(252,58,39)" rx="2" ry="2" />
<text  x="130.15" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="192.4" y="997" width="0.2" height="15.0" fill="rgb(209,136,33)" rx="2" ry="2" />
<text  x="195.41" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (165 samples, 2.63%)</title><rect x="95.6" y="1829" width="31.0" height="15.0" fill="rgb(231,67,34)" rx="2" ry="2" />
<text  x="98.56" y="1839.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="891.8" y="597" width="0.1" height="15.0" fill="rgb(245,116,25)" rx="2" ry="2" />
<text  x="894.76" y="607.5" ></text>
</g>
<g >
<title>std::locale::locale (2 samples, 0.03%)</title><rect x="324.8" y="1989" width="0.4" height="15.0" fill="rgb(211,179,12)" rx="2" ry="2" />
<text  x="327.79" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="891.8" y="565" width="0.1" height="15.0" fill="rgb(249,214,5)" rx="2" ry="2" />
<text  x="894.76" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (3 samples, 0.05%)</title><rect x="124.7" y="1685" width="0.6" height="15.0" fill="rgb(208,195,11)" rx="2" ry="2" />
<text  x="127.71" y="1695.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::getSubwords (3 samples, 0.05%)</title><rect x="306.2" y="1989" width="0.5" height="15.0" fill="rgb(216,190,41)" rx="2" ry="2" />
<text  x="309.18" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (25 samples, 0.40%)</title><rect x="146.3" y="1781" width="4.7" height="15.0" fill="rgb(206,180,42)" rx="2" ry="2" />
<text  x="149.33" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="127.2" y="1541" width="0.3" height="15.0" fill="rgb(232,175,10)" rx="2" ry="2" />
<text  x="130.15" y="1551.5" ></text>
</g>
<g >
<title>free@plt (3 samples, 0.05%)</title><rect x="603.7" y="1893" width="0.5" height="15.0" fill="rgb(241,44,16)" rx="2" ry="2" />
<text  x="606.67" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (124 samples, 1.98%)</title><rect x="127.9" y="1861" width="23.3" height="15.0" fill="rgb(244,11,28)" rx="2" ry="2" />
<text  x="130.91" y="1871.5" >s..</text>
</g>
<g >
<title>onmt::Tokenizer::tokenize (1,377 samples, 21.94%)</title><rect x="578.3" y="1925" width="258.9" height="15.0" fill="rgb(211,137,53)" rx="2" ry="2" />
<text  x="581.28" y="1935.5" >onmt::Tokenizer::tokenize</text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (17 samples, 0.27%)</title><rect x="111.0" y="1637" width="3.2" height="15.0" fill="rgb(217,133,28)" rx="2" ry="2" />
<text  x="113.98" y="1647.5" ></text>
</g>
<g >
<title>mmput (1 samples, 0.02%)</title><rect x="923.2" y="1973" width="0.1" height="15.0" fill="rgb(214,43,43)" rx="2" ry="2" />
<text  x="926.16" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="151.8" y="837" width="0.2" height="15.0" fill="rgb(242,2,45)" rx="2" ry="2" />
<text  x="154.79" y="847.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::basic_regex&lt;char const*&gt; (166 samples, 2.65%)</title><rect x="95.4" y="1957" width="31.2" height="15.0" fill="rgb(236,130,41)" rx="2" ry="2" />
<text  x="98.37" y="1967.5" >st..</text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="305.6" y="1877" width="0.2" height="15.0" fill="rgb(254,219,12)" rx="2" ry="2" />
<text  x="308.61" y="1887.5" ></text>
</g>
<g >
<title>unmap_page_range (1 samples, 0.02%)</title><rect x="433.3" y="1829" width="0.2" height="15.0" fill="rgb(210,155,42)" rx="2" ry="2" />
<text  x="436.30" y="1839.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::json_value::destroy (1 samples, 0.02%)</title><rect x="572.3" y="1973" width="0.2" height="15.0" fill="rgb(213,26,13)" rx="2" ry="2" />
<text  x="575.26" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="127.5" y="1621" width="0.4" height="15.0" fill="rgb(239,225,47)" rx="2" ry="2" />
<text  x="130.53" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1161.0" y="37" width="0.2" height="15.0" fill="rgb(218,64,37)" rx="2" ry="2" />
<text  x="1164.04" y="47.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.0" y="533" width="0.4" height="15.0" fill="rgb(224,13,11)" rx="2" ry="2" />
<text  x="1164.04" y="543.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="157.8" y="1589" width="0.2" height="15.0" fill="rgb(231,60,22)" rx="2" ry="2" />
<text  x="160.81" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (15 samples, 0.24%)</title><rect x="98.2" y="1589" width="2.8" height="15.0" fill="rgb(235,49,26)" rx="2" ry="2" />
<text  x="101.19" y="1599.5" ></text>
</g>
<g >
<title>rcu_gp_kthread_wake (1 samples, 0.02%)</title><rect x="1116.7" y="1941" width="0.1" height="15.0" fill="rgb(232,186,9)" rx="2" ry="2" />
<text  x="1119.66" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.0" y="1941" width="0.4" height="15.0" fill="rgb(246,45,39)" rx="2" ry="2" />
<text  x="1164.04" y="1951.5" ></text>
</g>
<g >
<title>main (2,628 samples, 41.88%)</title><rect x="80.1" y="2021" width="494.2" height="15.0" fill="rgb(224,163,15)" rx="2" ry="2" />
<text  x="83.14" y="2031.5" >main</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="152.0" y="901" width="0.2" height="15.0" fill="rgb(253,136,25)" rx="2" ry="2" />
<text  x="154.98" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (122 samples, 1.94%)</title><rect x="128.1" y="1813" width="22.9" height="15.0" fill="rgb(235,45,23)" rx="2" ry="2" />
<text  x="131.09" y="1823.5" >s..</text>
</g>
<g >
<title>onmt::ITokenizer::tokenize (1,377 samples, 21.94%)</title><rect x="578.3" y="1941" width="258.9" height="15.0" fill="rgb(213,16,31)" rx="2" ry="2" />
<text  x="581.28" y="1951.5" >onmt::ITokenizer::tokenize</text>
</g>
<g >
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="732.9" y="1829" width="0.1" height="15.0" fill="rgb(241,29,26)" rx="2" ry="2" />
<text  x="735.86" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.0" y="1637" width="0.4" height="15.0" fill="rgb(225,190,49)" rx="2" ry="2" />
<text  x="1164.04" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.4" y="181" width="0.4" height="15.0" fill="rgb(233,93,4)" rx="2" ry="2" />
<text  x="1164.42" y="191.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (2 samples, 0.03%)</title><rect x="995.9" y="2021" width="0.4" height="15.0" fill="rgb(222,45,13)" rx="2" ry="2" />
<text  x="998.93" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="127.2" y="885" width="0.1" height="15.0" fill="rgb(218,76,44)" rx="2" ry="2" />
<text  x="130.15" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Scanner&lt;char&gt;::_M_eat_escape_ecma (1 samples, 0.02%)</title><rect x="177.0" y="1749" width="0.2" height="15.0" fill="rgb(243,77,27)" rx="2" ry="2" />
<text  x="179.99" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (165 samples, 2.63%)</title><rect x="95.6" y="1861" width="31.0" height="15.0" fill="rgb(209,87,9)" rx="2" ry="2" />
<text  x="98.56" y="1871.5" >st..</text>
</g>
<g >
<title>std::istream::sentry::sentry (8 samples, 0.13%)</title><rect x="855.1" y="2005" width="1.5" height="15.0" fill="rgb(242,113,48)" rx="2" ry="2" />
<text  x="858.09" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="152.0" y="949" width="0.2" height="15.0" fill="rgb(237,220,7)" rx="2" ry="2" />
<text  x="154.98" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (32 samples, 0.51%)</title><rect x="115.1" y="1765" width="6.0" height="15.0" fill="rgb(233,224,50)" rx="2" ry="2" />
<text  x="118.12" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="891.8" y="261" width="0.1" height="15.0" fill="rgb(252,93,6)" rx="2" ry="2" />
<text  x="894.76" y="271.5" ></text>
</g>
<g >
<title>all (6,275 samples, 100%)</title><rect x="10.0" y="2085" width="1180.0" height="15.0" fill="rgb(219,193,22)" rx="2" ry="2" />
<text  x="13.00" y="2095.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="127.2" y="1061" width="0.1" height="15.0" fill="rgb(250,202,34)" rx="2" ry="2" />
<text  x="130.15" y="1071.5" ></text>
</g>
<g >
<title>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::dump (2 samples, 0.03%)</title><rect x="572.5" y="1941" width="0.3" height="15.0" fill="rgb(224,28,39)" rx="2" ry="2" />
<text  x="575.45" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="127.5" y="1557" width="0.4" height="15.0" fill="rgb(253,52,38)" rx="2" ry="2" />
<text  x="130.53" y="1567.5" ></text>
</g>
<g >
<title>Eigen::internal::general_matrix_vector_product&lt;long, float, Eigen::internal::const_blas_data_mapper&lt;float, long, 1&gt;, 1, false, float, Eigen::internal::const_blas_data_mapper&lt;float, long, 0&gt;, false, 0&gt;::run (150 samples, 2.39%)</title><rect x="42.7" y="2037" width="28.2" height="15.0" fill="rgb(226,24,18)" rx="2" ry="2" />
<text  x="45.72" y="2047.5" >E..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (1 samples, 0.02%)</title><rect x="170.2" y="1749" width="0.2" height="15.0" fill="rgb(241,50,25)" rx="2" ry="2" />
<text  x="173.22" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (191 samples, 3.04%)</title><rect x="154.6" y="1861" width="35.9" height="15.0" fill="rgb(220,113,23)" rx="2" ry="2" />
<text  x="157.61" y="1871.5" >std..</text>
</g>
<g >
<title>__do_page_fault (45 samples, 0.72%)</title><rect x="412.0" y="1925" width="8.5" height="15.0" fill="rgb(238,206,19)" rx="2" ry="2" />
<text  x="415.05" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="127.2" y="1125" width="0.1" height="15.0" fill="rgb(233,191,37)" rx="2" ry="2" />
<text  x="130.15" y="1135.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="789" width="0.4" height="15.0" fill="rgb(243,16,11)" rx="2" ry="2" />
<text  x="77.88" y="799.5" ></text>
</g>
<g >
<title>unmap_page_range (1 samples, 0.02%)</title><rect x="923.2" y="1909" width="0.1" height="15.0" fill="rgb(219,177,41)" rx="2" ry="2" />
<text  x="926.16" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="152.0" y="565" width="0.2" height="15.0" fill="rgb(225,172,36)" rx="2" ry="2" />
<text  x="154.98" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.0" y="1845" width="0.4" height="15.0" fill="rgb(230,27,11)" rx="2" ry="2" />
<text  x="1164.04" y="1855.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (1 samples, 0.02%)</title><rect x="130.2" y="1557" width="0.2" height="15.0" fill="rgb(247,163,14)" rx="2" ry="2" />
<text  x="133.16" y="1567.5" ></text>
</g>
<g >
<title>__pthread_once (1 samples, 0.02%)</title><rect x="866.6" y="2005" width="0.1" height="15.0" fill="rgb(225,107,36)" rx="2" ry="2" />
<text  x="869.56" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.0" y="1541" width="0.4" height="15.0" fill="rgb(206,145,16)" rx="2" ry="2" />
<text  x="1164.04" y="1551.5" ></text>
</g>
<g >
<title>__vm_munmap (1 samples, 0.02%)</title><rect x="433.3" y="1909" width="0.2" height="15.0" fill="rgb(216,118,20)" rx="2" ry="2" />
<text  x="436.30" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="151.8" y="949" width="0.2" height="15.0" fill="rgb(213,83,16)" rx="2" ry="2" />
<text  x="154.79" y="959.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="326.1" y="1957" width="0.2" height="15.0" fill="rgb(219,119,3)" rx="2" ry="2" />
<text  x="329.11" y="1967.5" ></text>
</g>
<g >
<title>nlohmann::detail::input_stream_adapter::get_character (4 samples, 0.06%)</title><rect x="89.7" y="1909" width="0.8" height="15.0" fill="rgb(244,156,16)" rx="2" ry="2" />
<text  x="92.73" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="127.2" y="853" width="0.1" height="15.0" fill="rgb(223,90,44)" rx="2" ry="2" />
<text  x="130.15" y="863.5" ></text>
</g>
<g >
<title>kthread_blkcg (1 samples, 0.02%)</title><rect x="419.8" y="1845" width="0.1" height="15.0" fill="rgb(208,54,12)" rx="2" ry="2" />
<text  x="422.76" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (1 samples, 0.02%)</title><rect x="190.7" y="1797" width="0.2" height="15.0" fill="rgb(210,199,29)" rx="2" ry="2" />
<text  x="193.71" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="891.8" y="933" width="0.1" height="15.0" fill="rgb(245,140,35)" rx="2" ry="2" />
<text  x="894.76" y="943.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::json_value::destroy (1 samples, 0.02%)</title><rect x="81.5" y="1925" width="0.1" height="15.0" fill="rgb(229,172,33)" rx="2" ry="2" />
<text  x="84.46" y="1935.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt;@plt (3 samples, 0.05%)</title><rect x="853.8" y="2037" width="0.5" height="15.0" fill="rgb(215,23,50)" rx="2" ry="2" />
<text  x="856.77" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="127.2" y="821" width="0.1" height="15.0" fill="rgb(215,136,21)" rx="2" ry="2" />
<text  x="130.15" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="891.8" y="901" width="0.1" height="15.0" fill="rgb(217,51,10)" rx="2" ry="2" />
<text  x="894.76" y="911.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (13 samples, 0.21%)</title><rect x="408.3" y="1845" width="2.4" height="15.0" fill="rgb(218,23,50)" rx="2" ry="2" />
<text  x="411.29" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="1109" width="0.4" height="15.0" fill="rgb(234,50,25)" rx="2" ry="2" />
<text  x="77.88" y="1119.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="853.4" y="2005" width="0.2" height="15.0" fill="rgb(222,57,13)" rx="2" ry="2" />
<text  x="856.39" y="2015.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_Alloc_node&gt; (1 samples, 0.02%)</title><rect x="574.1" y="1957" width="0.2" height="15.0" fill="rgb(253,10,17)" rx="2" ry="2" />
<text  x="577.14" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.4" y="1285" width="0.4" height="15.0" fill="rgb(208,174,33)" rx="2" ry="2" />
<text  x="1164.42" y="1295.5" ></text>
</g>
<g >
<title>operator new (12 samples, 0.19%)</title><rect x="1114.6" y="2053" width="2.2" height="15.0" fill="rgb(224,122,21)" rx="2" ry="2" />
<text  x="1117.59" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="192.4" y="837" width="0.2" height="15.0" fill="rgb(242,96,38)" rx="2" ry="2" />
<text  x="195.41" y="847.5" ></text>
</g>
<g >
<title>std::locale::operator= (1 samples, 0.02%)</title><rect x="191.7" y="1925" width="0.1" height="15.0" fill="rgb(216,222,31)" rx="2" ry="2" />
<text  x="194.65" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="151.6" y="1893" width="0.6" height="15.0" fill="rgb(251,107,33)" rx="2" ry="2" />
<text  x="154.60" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.0" y="1557" width="0.4" height="15.0" fill="rgb(240,127,41)" rx="2" ry="2" />
<text  x="1164.04" y="1567.5" ></text>
</g>
<g >
<title>strlen@plt (6 samples, 0.10%)</title><rect x="835.0" y="1893" width="1.1" height="15.0" fill="rgb(242,159,11)" rx="2" ry="2" />
<text  x="837.97" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="151.6" y="1349" width="0.6" height="15.0" fill="rgb(218,111,20)" rx="2" ry="2" />
<text  x="154.60" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (18 samples, 0.29%)</title><rect x="128.1" y="1605" width="3.4" height="15.0" fill="rgb(241,144,34)" rx="2" ry="2" />
<text  x="131.09" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.0" y="1525" width="0.4" height="15.0" fill="rgb(239,179,53)" rx="2" ry="2" />
<text  x="1164.04" y="1535.5" ></text>
</g>
<g >
<title>page_fault (45 samples, 0.72%)</title><rect x="412.0" y="1957" width="8.5" height="15.0" fill="rgb(249,150,44)" rx="2" ry="2" />
<text  x="415.05" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="1269" width="0.4" height="15.0" fill="rgb(210,73,11)" rx="2" ry="2" />
<text  x="77.88" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="152.0" y="613" width="0.2" height="15.0" fill="rgb(205,47,43)" rx="2" ry="2" />
<text  x="154.98" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (3 samples, 0.05%)</title><rect x="837.2" y="1941" width="0.6" height="15.0" fill="rgb(232,211,1)" rx="2" ry="2" />
<text  x="840.22" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="891.8" y="373" width="0.1" height="15.0" fill="rgb(251,176,23)" rx="2" ry="2" />
<text  x="894.76" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.11%)</title><rect x="126.6" y="1941" width="1.3" height="15.0" fill="rgb(218,79,36)" rx="2" ry="2" />
<text  x="129.59" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="192.4" y="1461" width="0.2" height="15.0" fill="rgb(238,0,31)" rx="2" ry="2" />
<text  x="195.41" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="192.4" y="949" width="0.2" height="15.0" fill="rgb(221,197,10)" rx="2" ry="2" />
<text  x="195.41" y="959.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::getId (115 samples, 1.83%)</title><rect x="942.7" y="2053" width="21.6" height="15.0" fill="rgb(244,35,22)" rx="2" ry="2" />
<text  x="945.72" y="2063.5" >f..</text>
</g>
<g >
<title>__handle_mm_fault (3 samples, 0.05%)</title><rect x="842.9" y="1957" width="0.5" height="15.0" fill="rgb(207,80,27)" rx="2" ry="2" />
<text  x="845.86" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="891.8" y="1013" width="0.1" height="15.0" fill="rgb(229,5,48)" rx="2" ry="2" />
<text  x="894.76" y="1023.5" ></text>
</g>
<g >
<title>main (1 samples, 0.02%)</title><rect x="891.8" y="2037" width="0.1" height="15.0" fill="rgb(225,88,41)" rx="2" ry="2" />
<text  x="894.76" y="2047.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::set (6 samples, 0.10%)</title><rect x="606.9" y="1893" width="1.1" height="15.0" fill="rgb(239,169,23)" rx="2" ry="2" />
<text  x="609.86" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_expression_term&lt;false, false&gt; (1 samples, 0.02%)</title><rect x="137.3" y="1621" width="0.2" height="15.0" fill="rgb(211,73,42)" rx="2" ry="2" />
<text  x="140.31" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="152.0" y="1125" width="0.2" height="15.0" fill="rgb(239,53,38)" rx="2" ry="2" />
<text  x="154.98" y="1135.5" ></text>
</g>
<g >
<title>__munmap (2 samples, 0.03%)</title><rect x="570.4" y="1989" width="0.4" height="15.0" fill="rgb(217,43,19)" rx="2" ry="2" />
<text  x="573.38" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (25 samples, 0.40%)</title><rect x="146.3" y="1797" width="4.7" height="15.0" fill="rgb(216,47,50)" rx="2" ry="2" />
<text  x="149.33" y="1807.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="548.6" y="1941" width="0.2" height="15.0" fill="rgb(227,226,5)" rx="2" ry="2" />
<text  x="551.57" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_expression_term&lt;false, false&gt; (1 samples, 0.02%)</title><rect x="176.8" y="1653" width="0.2" height="15.0" fill="rgb(242,166,20)" rx="2" ry="2" />
<text  x="179.80" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.0" y="309" width="0.4" height="15.0" fill="rgb(232,34,21)" rx="2" ry="2" />
<text  x="1164.04" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (120 samples, 1.91%)</title><rect x="154.6" y="1781" width="22.6" height="15.0" fill="rgb(219,124,1)" rx="2" ry="2" />
<text  x="157.61" y="1791.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.4" y="1973" width="0.4" height="15.0" fill="rgb(234,222,2)" rx="2" ry="2" />
<text  x="1164.42" y="1983.5" ></text>
</g>
<g >
<title>unmap_page_range (2 samples, 0.03%)</title><rect x="570.4" y="1845" width="0.4" height="15.0" fill="rgb(248,42,34)" rx="2" ry="2" />
<text  x="573.38" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (195 samples, 3.11%)</title><rect x="154.6" y="1909" width="36.7" height="15.0" fill="rgb(252,200,16)" rx="2" ry="2" />
<text  x="157.61" y="1919.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.0" y="709" width="0.4" height="15.0" fill="rgb(230,215,44)" rx="2" ry="2" />
<text  x="1164.04" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (35 samples, 0.56%)</title><rect x="183.6" y="1733" width="6.5" height="15.0" fill="rgb(214,100,41)" rx="2" ry="2" />
<text  x="186.57" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (24 samples, 0.38%)</title><rect x="146.3" y="1701" width="4.5" height="15.0" fill="rgb(253,68,25)" rx="2" ry="2" />
<text  x="149.33" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="127.2" y="1637" width="0.3" height="15.0" fill="rgb(227,165,44)" rx="2" ry="2" />
<text  x="130.15" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (4,387 samples, 69.91%)</title><rect x="42.7" y="2053" width="825.0" height="15.0" fill="rgb(234,54,39)" rx="2" ry="2" />
<text  x="45.72" y="2063.5" >[unknown]</text>
</g>
<g >
<title>cfree (3 samples, 0.05%)</title><rect x="138.1" y="1621" width="0.5" height="15.0" fill="rgb(208,118,14)" rx="2" ry="2" />
<text  x="141.06" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="192.4" y="757" width="0.2" height="15.0" fill="rgb(241,224,38)" rx="2" ry="2" />
<text  x="195.41" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="127.5" y="757" width="0.4" height="15.0" fill="rgb(232,124,8)" rx="2" ry="2" />
<text  x="130.53" y="767.5" ></text>
</g>
<g >
<title>__do_page_fault (5 samples, 0.08%)</title><rect x="842.5" y="1989" width="0.9" height="15.0" fill="rgb(229,188,4)" rx="2" ry="2" />
<text  x="845.49" y="1999.5" ></text>
</g>
<g >
<title>unmap_vmas (1 samples, 0.02%)</title><rect x="891.9" y="1941" width="0.2" height="15.0" fill="rgb(238,105,4)" rx="2" ry="2" />
<text  x="894.94" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="152.0" y="1189" width="0.2" height="15.0" fill="rgb(226,187,32)" rx="2" ry="2" />
<text  x="154.98" y="1199.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::push_back (1 samples, 0.02%)</title><rect x="573.4" y="2005" width="0.2" height="15.0" fill="rgb(249,186,12)" rx="2" ry="2" />
<text  x="576.39" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (72 samples, 1.15%)</title><rect x="95.6" y="1765" width="13.5" height="15.0" fill="rgb(239,131,45)" rx="2" ry="2" />
<text  x="98.56" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="127.5" y="1381" width="0.4" height="15.0" fill="rgb(220,40,42)" rx="2" ry="2" />
<text  x="130.53" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.0" y="1173" width="0.4" height="15.0" fill="rgb(226,213,0)" rx="2" ry="2" />
<text  x="1164.04" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="192.2" y="1541" width="0.4" height="15.0" fill="rgb(243,14,24)" rx="2" ry="2" />
<text  x="195.22" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="192.4" y="517" width="0.2" height="15.0" fill="rgb(207,85,38)" rx="2" ry="2" />
<text  x="195.41" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1161.0" y="85" width="0.2" height="15.0" fill="rgb(235,26,7)" rx="2" ry="2" />
<text  x="1164.04" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (36 samples, 0.57%)</title><rect x="163.4" y="1669" width="6.8" height="15.0" fill="rgb(217,6,43)" rx="2" ry="2" />
<text  x="166.45" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.08%)</title><rect x="127.0" y="1877" width="0.9" height="15.0" fill="rgb(248,140,23)" rx="2" ry="2" />
<text  x="129.97" y="1887.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.02%)</title><rect x="167.6" y="1605" width="0.2" height="15.0" fill="rgb(221,29,14)" rx="2" ry="2" />
<text  x="170.58" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="192.4" y="613" width="0.2" height="15.0" fill="rgb(214,95,21)" rx="2" ry="2" />
<text  x="195.41" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="127.5" y="869" width="0.4" height="15.0" fill="rgb(212,63,49)" rx="2" ry="2" />
<text  x="130.53" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.4" y="901" width="0.4" height="15.0" fill="rgb(254,13,0)" rx="2" ry="2" />
<text  x="1164.42" y="911.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.02%)</title><rect x="124.5" y="1685" width="0.2" height="15.0" fill="rgb(217,204,22)" rx="2" ry="2" />
<text  x="127.52" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_repeat (1 samples, 0.02%)</title><rect x="183.2" y="1717" width="0.2" height="15.0" fill="rgb(235,32,35)" rx="2" ry="2" />
<text  x="186.19" y="1727.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;, std::tuple&lt;&gt; &gt; (1 samples, 0.02%)</title><rect x="93.7" y="1925" width="0.2" height="15.0" fill="rgb(250,18,22)" rx="2" ry="2" />
<text  x="96.68" y="1935.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (3 samples, 0.05%)</title><rect x="180.9" y="1653" width="0.6" height="15.0" fill="rgb(239,9,53)" rx="2" ry="2" />
<text  x="183.94" y="1663.5" ></text>
</g>
<g >
<title>do_page_fault (8 samples, 0.13%)</title><rect x="698.3" y="1845" width="1.5" height="15.0" fill="rgb(217,55,19)" rx="2" ry="2" />
<text  x="701.25" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.4" y="261" width="0.4" height="15.0" fill="rgb(233,71,26)" rx="2" ry="2" />
<text  x="1164.42" y="271.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="114.9" y="1637" width="0.2" height="15.0" fill="rgb(220,98,1)" rx="2" ry="2" />
<text  x="117.93" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="597" width="0.4" height="15.0" fill="rgb(229,127,44)" rx="2" ry="2" />
<text  x="77.88" y="607.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="1477" width="0.4" height="15.0" fill="rgb(228,215,3)" rx="2" ry="2" />
<text  x="77.88" y="1487.5" ></text>
</g>
<g >
<title>fasttext::ProductQuantizer::addcode (203 samples, 3.24%)</title><rect x="1047.8" y="2053" width="38.2" height="15.0" fill="rgb(249,89,18)" rx="2" ry="2" />
<text  x="1050.84" y="2063.5" >fas..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="127.5" y="1141" width="0.4" height="15.0" fill="rgb(238,8,8)" rx="2" ry="2" />
<text  x="130.53" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="127.2" y="1685" width="0.3" height="15.0" fill="rgb(252,204,29)" rx="2" ry="2" />
<text  x="130.15" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="127.2" y="245" width="0.1" height="15.0" fill="rgb(251,86,21)" rx="2" ry="2" />
<text  x="130.15" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="891.8" y="133" width="0.1" height="15.0" fill="rgb(217,168,49)" rx="2" ry="2" />
<text  x="894.76" y="143.5" ></text>
</g>
<g >
<title>operator delete@plt (4 samples, 0.06%)</title><rect x="1113.3" y="2053" width="0.7" height="15.0" fill="rgb(240,228,19)" rx="2" ry="2" />
<text  x="1116.28" y="2063.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="188.6" y="1685" width="0.2" height="15.0" fill="rgb(225,151,48)" rx="2" ry="2" />
<text  x="191.65" y="1695.5" ></text>
</g>
<g >
<title>tlb_flush_mmu_free (2 samples, 0.03%)</title><rect x="570.4" y="1829" width="0.4" height="15.0" fill="rgb(206,141,16)" rx="2" ry="2" />
<text  x="573.38" y="1839.5" ></text>
</g>
<g >
<title>fasttext::DenseMatrix::addRowToVector (522 samples, 8.32%)</title><rect x="207.6" y="1989" width="98.2" height="15.0" fill="rgb(247,146,15)" rx="2" ry="2" />
<text  x="210.64" y="1999.5" >fasttext::D..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.4" y="837" width="0.4" height="15.0" fill="rgb(229,169,17)" rx="2" ry="2" />
<text  x="1164.42" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="891.8" y="1893" width="0.1" height="15.0" fill="rgb(239,134,29)" rx="2" ry="2" />
<text  x="894.76" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="821" width="0.4" height="15.0" fill="rgb(241,219,1)" rx="2" ry="2" />
<text  x="77.88" y="831.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="853.4" y="2021" width="0.2" height="15.0" fill="rgb(251,56,38)" rx="2" ry="2" />
<text  x="856.39" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="127.2" y="1445" width="0.1" height="15.0" fill="rgb(231,58,10)" rx="2" ry="2" />
<text  x="130.15" y="1455.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="1813" width="0.4" height="15.0" fill="rgb(248,117,48)" rx="2" ry="2" />
<text  x="77.88" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="151.8" y="805" width="0.2" height="15.0" fill="rgb(223,102,42)" rx="2" ry="2" />
<text  x="154.79" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.0" y="1477" width="0.4" height="15.0" fill="rgb(226,5,7)" rx="2" ry="2" />
<text  x="1164.04" y="1487.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="213" width="0.4" height="15.0" fill="rgb(214,188,50)" rx="2" ry="2" />
<text  x="77.88" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="891.8" y="629" width="0.1" height="15.0" fill="rgb(215,157,25)" rx="2" ry="2" />
<text  x="894.76" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="127.5" y="965" width="0.4" height="15.0" fill="rgb(211,211,40)" rx="2" ry="2" />
<text  x="130.53" y="975.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (3 samples, 0.05%)</title><rect x="160.6" y="1573" width="0.6" height="15.0" fill="rgb(209,137,27)" rx="2" ry="2" />
<text  x="163.63" y="1583.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (1 samples, 0.02%)</title><rect x="130.4" y="1557" width="0.1" height="15.0" fill="rgb(222,65,38)" rx="2" ry="2" />
<text  x="133.35" y="1567.5" ></text>
</g>
<g >
<title>alloc_pages_vma (13 samples, 0.21%)</title><rect x="408.3" y="1861" width="2.4" height="15.0" fill="rgb(249,42,47)" rx="2" ry="2" />
<text  x="411.29" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="891.8" y="1429" width="0.1" height="15.0" fill="rgb(213,104,30)" rx="2" ry="2" />
<text  x="894.76" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="127.2" y="565" width="0.1" height="15.0" fill="rgb(231,111,35)" rx="2" ry="2" />
<text  x="130.15" y="575.5" ></text>
</g>
<g >
<title>onmt::add_final_token&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (13 samples, 0.21%)</title><rect x="582.8" y="1893" width="2.4" height="15.0" fill="rgb(212,186,15)" rx="2" ry="2" />
<text  x="585.79" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="151.8" y="293" width="0.2" height="15.0" fill="rgb(229,192,31)" rx="2" ry="2" />
<text  x="154.79" y="303.5" ></text>
</g>
<g >
<title>__vfs_read (4 samples, 0.06%)</title><rect x="79.4" y="1941" width="0.7" height="15.0" fill="rgb(205,65,36)" rx="2" ry="2" />
<text  x="82.39" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.0" y="1381" width="0.4" height="15.0" fill="rgb(220,67,3)" rx="2" ry="2" />
<text  x="1164.04" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="127.2" y="1525" width="0.3" height="15.0" fill="rgb(208,157,47)" rx="2" ry="2" />
<text  x="130.15" y="1535.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find (4 samples, 0.06%)</title><rect x="836.1" y="1909" width="0.7" height="15.0" fill="rgb(249,142,45)" rx="2" ry="2" />
<text  x="839.09" y="1919.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (4 samples, 0.06%)</title><rect x="838.4" y="1973" width="0.7" height="15.0" fill="rgb(214,145,18)" rx="2" ry="2" />
<text  x="841.35" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (32 samples, 0.51%)</title><rect x="109.1" y="1653" width="6.0" height="15.0" fill="rgb(234,2,25)" rx="2" ry="2" />
<text  x="112.10" y="1663.5" ></text>
</g>
<g >
<title>handle_mm_fault (3 samples, 0.05%)</title><rect x="842.9" y="1973" width="0.5" height="15.0" fill="rgb(242,174,45)" rx="2" ry="2" />
<text  x="845.86" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="549" width="0.4" height="15.0" fill="rgb(220,69,47)" rx="2" ry="2" />
<text  x="77.88" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (35 samples, 0.56%)</title><rect x="170.4" y="1749" width="6.6" height="15.0" fill="rgb(228,213,34)" rx="2" ry="2" />
<text  x="173.40" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (25 samples, 0.40%)</title><rect x="146.3" y="1717" width="4.7" height="15.0" fill="rgb(218,43,24)" rx="2" ry="2" />
<text  x="149.33" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="192.2" y="1653" width="0.4" height="15.0" fill="rgb(223,130,28)" rx="2" ry="2" />
<text  x="195.22" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="127.5" y="981" width="0.4" height="15.0" fill="rgb(224,225,47)" rx="2" ry="2" />
<text  x="130.53" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (20 samples, 0.32%)</title><rect x="104.4" y="1621" width="3.8" height="15.0" fill="rgb(218,105,2)" rx="2" ry="2" />
<text  x="107.40" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (22 samples, 0.35%)</title><rect x="137.5" y="1749" width="4.1" height="15.0" fill="rgb(213,39,7)" rx="2" ry="2" />
<text  x="140.50" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="869" width="0.4" height="15.0" fill="rgb(220,11,35)" rx="2" ry="2" />
<text  x="77.88" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.0" y="949" width="0.4" height="15.0" fill="rgb(245,174,15)" rx="2" ry="2" />
<text  x="1164.04" y="959.5" ></text>
</g>
<g >
<title>__dynamic_cast (6 samples, 0.10%)</title><rect x="142.2" y="1653" width="1.1" height="15.0" fill="rgb(240,96,11)" rx="2" ry="2" />
<text  x="145.20" y="1663.5" ></text>
</g>
<g >
<title>nlohmann::detail::input_stream_adapter::get_character (1 samples, 0.02%)</title><rect x="92.2" y="1909" width="0.2" height="15.0" fill="rgb(213,10,24)" rx="2" ry="2" />
<text  x="95.18" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.4" y="1893" width="0.4" height="15.0" fill="rgb(243,70,17)" rx="2" ry="2" />
<text  x="1164.42" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (1 samples, 0.02%)</title><rect x="151.0" y="1797" width="0.2" height="15.0" fill="rgb(239,24,8)" rx="2" ry="2" />
<text  x="154.04" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.4" y="1637" width="0.4" height="15.0" fill="rgb(220,75,37)" rx="2" ry="2" />
<text  x="1164.42" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="152.0" y="277" width="0.2" height="15.0" fill="rgb(210,27,45)" rx="2" ry="2" />
<text  x="154.98" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (39 samples, 0.62%)</title><rect x="101.8" y="1733" width="7.3" height="15.0" fill="rgb(232,183,24)" rx="2" ry="2" />
<text  x="104.77" y="1743.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (1 samples, 0.02%)</title><rect x="93.9" y="1989" width="0.2" height="15.0" fill="rgb(232,67,51)" rx="2" ry="2" />
<text  x="96.87" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="867.1" y="2005" width="0.2" height="15.0" fill="rgb(217,115,26)" rx="2" ry="2" />
<text  x="870.12" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="891.8" y="213" width="0.1" height="15.0" fill="rgb(206,220,47)" rx="2" ry="2" />
<text  x="894.76" y="223.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="453" width="0.4" height="15.0" fill="rgb(234,124,47)" rx="2" ry="2" />
<text  x="77.88" y="463.5" ></text>
</g>
<g >
<title>futex_wake (12 samples, 0.19%)</title><rect x="39.9" y="1941" width="2.3" height="15.0" fill="rgb(220,20,27)" rx="2" ry="2" />
<text  x="42.90" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="152.0" y="661" width="0.2" height="15.0" fill="rgb(219,226,43)" rx="2" ry="2" />
<text  x="154.98" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="127.2" y="1461" width="0.1" height="15.0" fill="rgb(240,94,2)" rx="2" ry="2" />
<text  x="130.15" y="1471.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.02%)</title><rect x="411.9" y="1909" width="0.1" height="15.0" fill="rgb(211,145,53)" rx="2" ry="2" />
<text  x="414.86" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="69" width="0.4" height="15.0" fill="rgb(251,35,5)" rx="2" ry="2" />
<text  x="77.88" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="151.8" y="437" width="0.2" height="15.0" fill="rgb(250,19,40)" rx="2" ry="2" />
<text  x="154.79" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_try_char (1 samples, 0.02%)</title><rect x="190.0" y="1717" width="0.1" height="15.0" fill="rgb(228,201,5)" rx="2" ry="2" />
<text  x="192.96" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="192.0" y="1829" width="0.6" height="15.0" fill="rgb(252,216,30)" rx="2" ry="2" />
<text  x="195.03" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.4" y="453" width="0.4" height="15.0" fill="rgb(241,33,15)" rx="2" ry="2" />
<text  x="1164.42" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.4" y="853" width="0.4" height="15.0" fill="rgb(220,214,27)" rx="2" ry="2" />
<text  x="1164.42" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_quantifier (1 samples, 0.02%)</title><rect x="183.2" y="1733" width="0.2" height="15.0" fill="rgb(222,45,9)" rx="2" ry="2" />
<text  x="186.19" y="1743.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (1 samples, 0.02%)</title><rect x="130.5" y="1557" width="0.2" height="15.0" fill="rgb(219,150,32)" rx="2" ry="2" />
<text  x="133.54" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="1445" width="0.4" height="15.0" fill="rgb(254,199,53)" rx="2" ry="2" />
<text  x="77.88" y="1455.5" ></text>
</g>
<g >
<title>__handle_mm_fault (2 samples, 0.03%)</title><rect x="666.5" y="1797" width="0.4" height="15.0" fill="rgb(246,212,7)" rx="2" ry="2" />
<text  x="669.47" y="1807.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (21 samples, 0.33%)</title><rect x="819.0" y="1893" width="3.9" height="15.0" fill="rgb(254,215,35)" rx="2" ry="2" />
<text  x="821.98" y="1903.5" ></text>
</g>
<g >
<title>touch_atime (1 samples, 0.02%)</title><rect x="80.0" y="1877" width="0.1" height="15.0" fill="rgb(245,84,35)" rx="2" ry="2" />
<text  x="82.95" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="127.2" y="1701" width="0.3" height="15.0" fill="rgb(207,75,48)" rx="2" ry="2" />
<text  x="130.15" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (25 samples, 0.40%)</title><rect x="141.6" y="1701" width="4.7" height="15.0" fill="rgb(252,153,12)" rx="2" ry="2" />
<text  x="144.63" y="1711.5" ></text>
</g>
<g >
<title>malloc@plt (2 samples, 0.03%)</title><rect x="1110.5" y="2053" width="0.3" height="15.0" fill="rgb(254,199,43)" rx="2" ry="2" />
<text  x="1113.46" y="2063.5" ></text>
</g>
<g >
<title>clear_page_erms (10 samples, 0.16%)</title><rect x="408.5" y="1829" width="1.9" height="15.0" fill="rgb(231,179,37)" rx="2" ry="2" />
<text  x="411.47" y="1839.5" ></text>
</g>
<g >
<title>onmt::unicode::is_letter (283 samples, 4.51%)</title><rect x="751.8" y="1893" width="53.3" height="15.0" fill="rgb(247,3,24)" rx="2" ry="2" />
<text  x="754.85" y="1903.5" >onmt:..</text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="149" width="0.4" height="15.0" fill="rgb(248,75,24)" rx="2" ry="2" />
<text  x="77.88" y="159.5" ></text>
</g>
<g >
<title>ksys_read (4 samples, 0.06%)</title><rect x="79.4" y="1973" width="0.7" height="15.0" fill="rgb(245,32,23)" rx="2" ry="2" />
<text  x="82.39" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (2 samples, 0.03%)</title><rect x="141.6" y="1669" width="0.4" height="15.0" fill="rgb(223,57,4)" rx="2" ry="2" />
<text  x="144.63" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="891.8" y="245" width="0.1" height="15.0" fill="rgb(214,135,47)" rx="2" ry="2" />
<text  x="894.76" y="255.5" ></text>
</g>
<g >
<title>handle_mm_fault (3 samples, 0.05%)</title><rect x="74.3" y="1973" width="0.6" height="15.0" fill="rgb(215,36,8)" rx="2" ry="2" />
<text  x="77.31" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="192.2" y="1701" width="0.4" height="15.0" fill="rgb(224,211,10)" rx="2" ry="2" />
<text  x="195.22" y="1711.5" ></text>
</g>
<g >
<title>__munmap (1 samples, 0.02%)</title><rect x="891.9" y="2053" width="0.2" height="15.0" fill="rgb(250,5,1)" rx="2" ry="2" />
<text  x="894.94" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (31 samples, 0.49%)</title><rect x="131.7" y="1637" width="5.8" height="15.0" fill="rgb(212,205,49)" rx="2" ry="2" />
<text  x="134.67" y="1647.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::getLine (1 samples, 0.02%)</title><rect x="840.4" y="2037" width="0.2" height="15.0" fill="rgb(252,23,41)" rx="2" ry="2" />
<text  x="843.42" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="127.2" y="341" width="0.1" height="15.0" fill="rgb(232,146,11)" rx="2" ry="2" />
<text  x="130.15" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="192.4" y="805" width="0.2" height="15.0" fill="rgb(239,115,17)" rx="2" ry="2" />
<text  x="195.41" y="815.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="548.6" y="1957" width="0.2" height="15.0" fill="rgb(219,12,54)" rx="2" ry="2" />
<text  x="551.57" y="1967.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::_M_realloc_insert&lt;int&gt; (1 samples, 0.02%)</title><rect x="837.0" y="1909" width="0.2" height="15.0" fill="rgb(217,157,35)" rx="2" ry="2" />
<text  x="840.03" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="127.5" y="1685" width="0.4" height="15.0" fill="rgb(219,168,11)" rx="2" ry="2" />
<text  x="130.53" y="1695.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (2 samples, 0.03%)</title><rect x="107.4" y="1605" width="0.4" height="15.0" fill="rgb(210,199,17)" rx="2" ry="2" />
<text  x="110.41" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.0" y="741" width="0.4" height="15.0" fill="rgb(249,199,18)" rx="2" ry="2" />
<text  x="1164.04" y="751.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="997" width="0.4" height="15.0" fill="rgb(224,184,32)" rx="2" ry="2" />
<text  x="77.88" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="127.3" y="1461" width="0.2" height="15.0" fill="rgb(241,71,23)" rx="2" ry="2" />
<text  x="130.34" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (27 samples, 0.43%)</title><rect x="121.5" y="1765" width="5.1" height="15.0" fill="rgb(234,97,27)" rx="2" ry="2" />
<text  x="124.51" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="127.2" y="1381" width="0.1" height="15.0" fill="rgb(236,93,22)" rx="2" ry="2" />
<text  x="130.15" y="1391.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="120.6" y="1653" width="0.2" height="15.0" fill="rgb(231,37,15)" rx="2" ry="2" />
<text  x="123.57" y="1663.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.24%)</title><rect x="39.9" y="2005" width="2.8" height="15.0" fill="rgb(208,28,30)" rx="2" ry="2" />
<text  x="42.90" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="127.2" y="677" width="0.1" height="15.0" fill="rgb(218,56,47)" rx="2" ry="2" />
<text  x="130.15" y="687.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::do_tolower (1 samples, 0.02%)</title><rect x="114.2" y="1637" width="0.2" height="15.0" fill="rgb(210,40,32)" rx="2" ry="2" />
<text  x="117.18" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (22 samples, 0.35%)</title><rect x="137.5" y="1685" width="4.1" height="15.0" fill="rgb(253,215,5)" rx="2" ry="2" />
<text  x="140.50" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="192.4" y="1493" width="0.2" height="15.0" fill="rgb(239,115,24)" rx="2" ry="2" />
<text  x="195.41" y="1503.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (4 samples, 0.06%)</title><rect x="125.6" y="1701" width="0.8" height="15.0" fill="rgb(217,184,23)" rx="2" ry="2" />
<text  x="128.65" y="1711.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (1 samples, 0.02%)</title><rect x="136.0" y="1589" width="0.2" height="15.0" fill="rgb(224,80,12)" rx="2" ry="2" />
<text  x="138.99" y="1599.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="891.9" y="2021" width="0.2" height="15.0" fill="rgb(207,157,17)" rx="2" ry="2" />
<text  x="894.94" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="152.0" y="885" width="0.2" height="15.0" fill="rgb(228,199,30)" rx="2" ry="2" />
<text  x="154.98" y="895.5" ></text>
</g>
<g >
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="702.2" y="1781" width="0.2" height="15.0" fill="rgb(214,153,26)" rx="2" ry="2" />
<text  x="705.20" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="152.0" y="1157" width="0.2" height="15.0" fill="rgb(208,92,48)" rx="2" ry="2" />
<text  x="154.98" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="891.8" y="1061" width="0.1" height="15.0" fill="rgb(211,94,23)" rx="2" ry="2" />
<text  x="894.76" y="1071.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (3 samples, 0.05%)</title><rect x="699.0" y="1765" width="0.6" height="15.0" fill="rgb(220,114,28)" rx="2" ry="2" />
<text  x="702.01" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="1509" width="0.4" height="15.0" fill="rgb(205,209,49)" rx="2" ry="2" />
<text  x="77.88" y="1519.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="229" width="0.4" height="15.0" fill="rgb(230,57,13)" rx="2" ry="2" />
<text  x="77.88" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="151.8" y="613" width="0.2" height="15.0" fill="rgb(213,142,42)" rx="2" ry="2" />
<text  x="154.79" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.4" y="613" width="0.4" height="15.0" fill="rgb(225,229,31)" rx="2" ry="2" />
<text  x="1164.42" y="623.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="698.1" y="1765" width="0.2" height="15.0" fill="rgb(227,90,29)" rx="2" ry="2" />
<text  x="701.07" y="1775.5" ></text>
</g>
<g >
<title>operator delete@plt (1 samples, 0.02%)</title><rect x="121.1" y="1733" width="0.2" height="15.0" fill="rgb(210,178,1)" rx="2" ry="2" />
<text  x="124.14" y="1743.5" ></text>
</g>
<g >
<title>std::ios_base::ios_base (1 samples, 0.02%)</title><rect x="866.7" y="2005" width="0.2" height="15.0" fill="rgb(231,125,49)" rx="2" ry="2" />
<text  x="869.75" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="152.0" y="1205" width="0.2" height="15.0" fill="rgb(229,229,34)" rx="2" ry="2" />
<text  x="154.98" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.0" y="965" width="0.4" height="15.0" fill="rgb(209,185,31)" rx="2" ry="2" />
<text  x="1164.04" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.08%)</title><rect x="127.0" y="1797" width="0.9" height="15.0" fill="rgb(226,221,23)" rx="2" ry="2" />
<text  x="129.97" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (34 samples, 0.54%)</title><rect x="170.6" y="1685" width="6.4" height="15.0" fill="rgb(207,203,36)" rx="2" ry="2" />
<text  x="173.59" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="151.8" y="1205" width="0.2" height="15.0" fill="rgb(205,103,50)" rx="2" ry="2" />
<text  x="154.79" y="1215.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.03%)</title><rect x="97.8" y="1589" width="0.4" height="15.0" fill="rgb(226,186,47)" rx="2" ry="2" />
<text  x="100.82" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt;,  (4 samples, 0.06%)</title><rect x="151.6" y="1941" width="0.8" height="15.0" fill="rgb(211,178,24)" rx="2" ry="2" />
<text  x="154.60" y="1951.5" ></text>
</g>
<g >
<title>unmap_page_range (1 samples, 0.02%)</title><rect x="891.9" y="1909" width="0.2" height="15.0" fill="rgb(211,114,38)" rx="2" ry="2" />
<text  x="894.94" y="1919.5" ></text>
</g>
<g >
<title>__dynamic_cast (4 samples, 0.06%)</title><rect x="121.9" y="1701" width="0.7" height="15.0" fill="rgb(213,38,22)" rx="2" ry="2" />
<text  x="124.89" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="127.5" y="1765" width="0.4" height="15.0" fill="rgb(207,26,48)" rx="2" ry="2" />
<text  x="130.53" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt;,  (1 samples, 0.02%)</title><rect x="891.8" y="1957" width="0.1" height="15.0" fill="rgb(237,7,2)" rx="2" ry="2" />
<text  x="894.76" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (1 samples, 0.02%)</title><rect x="190.3" y="1845" width="0.2" height="15.0" fill="rgb(250,80,27)" rx="2" ry="2" />
<text  x="193.34" y="1855.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.02%)</title><rect x="137.9" y="1621" width="0.2" height="15.0" fill="rgb(205,161,17)" rx="2" ry="2" />
<text  x="140.87" y="1631.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (10 samples, 0.16%)</title><rect x="867.7" y="2053" width="1.9" height="15.0" fill="rgb(210,198,13)" rx="2" ry="2" />
<text  x="870.69" y="2063.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (1 samples, 0.02%)</title><rect x="843.2" y="1925" width="0.2" height="15.0" fill="rgb(219,111,24)" rx="2" ry="2" />
<text  x="846.24" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="127.3" y="1413" width="0.2" height="15.0" fill="rgb(245,161,26)" rx="2" ry="2" />
<text  x="130.34" y="1423.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;std::__future_base::_Task_state&lt;std::_Bind&lt;Annotate (2 samples, 0.03%)</title><rect x="94.2" y="1973" width="0.4" height="15.0" fill="rgb(247,154,15)" rx="2" ry="2" />
<text  x="97.25" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="192.4" y="1077" width="0.2" height="15.0" fill="rgb(215,99,32)" rx="2" ry="2" />
<text  x="195.41" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="192.2" y="1445" width="0.2" height="15.0" fill="rgb(232,52,40)" rx="2" ry="2" />
<text  x="195.22" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.0" y="1109" width="0.4" height="15.0" fill="rgb(243,55,35)" rx="2" ry="2" />
<text  x="1164.04" y="1119.5" ></text>
</g>
<g >
<title>__strxfrm_l (2 samples, 0.03%)</title><rect x="892.1" y="2053" width="0.4" height="15.0" fill="rgb(208,57,53)" rx="2" ry="2" />
<text  x="895.13" y="2063.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct@plt (1 samples, 0.02%)</title><rect x="585.4" y="1893" width="0.2" height="15.0" fill="rgb(228,131,5)" rx="2" ry="2" />
<text  x="588.43" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.0" y="1797" width="0.4" height="15.0" fill="rgb(220,80,23)" rx="2" ry="2" />
<text  x="1164.04" y="1807.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (1 samples, 0.02%)</title><rect x="136.7" y="1605" width="0.2" height="15.0" fill="rgb(205,207,9)" rx="2" ry="2" />
<text  x="139.74" y="1615.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (2 samples, 0.03%)</title><rect x="804.5" y="1877" width="0.4" height="15.0" fill="rgb(237,4,20)" rx="2" ry="2" />
<text  x="807.50" y="1887.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (5 samples, 0.08%)</title><rect x="99.9" y="1573" width="0.9" height="15.0" fill="rgb(223,86,14)" rx="2" ry="2" />
<text  x="102.89" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="1957" width="0.4" height="15.0" fill="rgb(220,100,30)" rx="2" ry="2" />
<text  x="77.88" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (2 samples, 0.03%)</title><rect x="190.5" y="1845" width="0.4" height="15.0" fill="rgb(246,119,11)" rx="2" ry="2" />
<text  x="193.53" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="949" width="0.4" height="15.0" fill="rgb(225,46,12)" rx="2" ry="2" />
<text  x="77.88" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (1 samples, 0.02%)</title><rect x="137.5" y="1637" width="0.2" height="15.0" fill="rgb(244,180,9)" rx="2" ry="2" />
<text  x="140.50" y="1647.5" ></text>
</g>
<g >
<title>__dynamic_cast (7 samples, 0.11%)</title><rect x="155.7" y="1589" width="1.4" height="15.0" fill="rgb(210,193,19)" rx="2" ry="2" />
<text  x="158.74" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="152.0" y="773" width="0.2" height="15.0" fill="rgb(218,229,33)" rx="2" ry="2" />
<text  x="154.98" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="891.8" y="1205" width="0.1" height="15.0" fill="rgb(215,205,11)" rx="2" ry="2" />
<text  x="894.76" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="127.2" y="597" width="0.1" height="15.0" fill="rgb(218,98,48)" rx="2" ry="2" />
<text  x="130.15" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="127.2" y="965" width="0.1" height="15.0" fill="rgb(230,178,39)" rx="2" ry="2" />
<text  x="130.15" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (32 samples, 0.51%)</title><rect x="177.2" y="1733" width="6.0" height="15.0" fill="rgb(216,162,3)" rx="2" ry="2" />
<text  x="180.17" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Scanner&lt;char&gt;::_Scanner (2 samples, 0.03%)</title><rect x="191.3" y="1925" width="0.4" height="15.0" fill="rgb(213,11,32)" rx="2" ry="2" />
<text  x="194.28" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="1541" width="0.4" height="15.0" fill="rgb(254,128,53)" rx="2" ry="2" />
<text  x="77.88" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="127.2" y="1477" width="0.1" height="15.0" fill="rgb(216,193,43)" rx="2" ry="2" />
<text  x="130.15" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="152.0" y="229" width="0.2" height="15.0" fill="rgb(205,137,10)" rx="2" ry="2" />
<text  x="154.98" y="239.5" ></text>
</g>
<g >
<title>TAgencyRating::ScoreUrl (206 samples, 3.28%)</title><rect x="153.9" y="1989" width="38.7" height="15.0" fill="rgb(207,58,46)" rx="2" ry="2" />
<text  x="156.86" y="1999.5" >TAg..</text>
</g>
<g >
<title>fasttext::Dictionary::getSubwords (1 samples, 0.02%)</title><rect x="548.9" y="1973" width="0.2" height="15.0" fill="rgb(248,195,19)" rx="2" ry="2" />
<text  x="551.95" y="1983.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="117.4" y="1669" width="0.2" height="15.0" fill="rgb(214,166,39)" rx="2" ry="2" />
<text  x="120.38" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="261" width="0.4" height="15.0" fill="rgb(241,124,11)" rx="2" ry="2" />
<text  x="77.88" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::construct&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="573.4" y="1989" width="0.2" height="15.0" fill="rgb(227,95,37)" rx="2" ry="2" />
<text  x="576.39" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="127.5" y="997" width="0.4" height="15.0" fill="rgb(212,205,43)" rx="2" ry="2" />
<text  x="130.53" y="1007.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="429.7" y="1957" width="0.2" height="15.0" fill="rgb(223,39,36)" rx="2" ry="2" />
<text  x="432.72" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.11%)</title><rect x="126.6" y="1909" width="1.3" height="15.0" fill="rgb(248,87,21)" rx="2" ry="2" />
<text  x="129.59" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="891.8" y="1493" width="0.1" height="15.0" fill="rgb(249,12,42)" rx="2" ry="2" />
<text  x="894.76" y="1503.5" ></text>
</g>
<g >
<title>__x64_sys_read (4 samples, 0.06%)</title><rect x="891.0" y="2005" width="0.8" height="15.0" fill="rgb(221,66,24)" rx="2" ry="2" />
<text  x="894.00" y="2015.5" ></text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.02%)</title><rect x="74.5" y="1941" width="0.2" height="15.0" fill="rgb(209,186,46)" rx="2" ry="2" />
<text  x="77.50" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="152.0" y="389" width="0.2" height="15.0" fill="rgb(226,210,28)" rx="2" ry="2" />
<text  x="154.98" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.4" y="1125" width="0.4" height="15.0" fill="rgb(211,194,31)" rx="2" ry="2" />
<text  x="1164.42" y="1135.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (2 samples, 0.03%)</title><rect x="150.5" y="1685" width="0.3" height="15.0" fill="rgb(253,0,37)" rx="2" ry="2" />
<text  x="153.47" y="1695.5" ></text>
</g>
<g >
<title>onmt::CaseModifier::extract_case_type (147 samples, 2.34%)</title><rect x="608.0" y="1893" width="27.6" height="15.0" fill="rgb(207,6,46)" rx="2" ry="2" />
<text  x="610.99" y="1903.5" >o..</text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="341" width="0.4" height="15.0" fill="rgb(240,168,26)" rx="2" ry="2" />
<text  x="77.88" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="151.6" y="1589" width="0.6" height="15.0" fill="rgb(245,175,19)" rx="2" ry="2" />
<text  x="154.60" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.0" y="1973" width="0.4" height="15.0" fill="rgb(208,215,29)" rx="2" ry="2" />
<text  x="1164.04" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="127.2" y="309" width="0.1" height="15.0" fill="rgb(218,73,2)" rx="2" ry="2" />
<text  x="130.15" y="319.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.02%)</title><rect x="80.5" y="1957" width="0.2" height="15.0" fill="rgb(243,47,1)" rx="2" ry="2" />
<text  x="83.52" y="1967.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="548.6" y="1925" width="0.2" height="15.0" fill="rgb(218,217,7)" rx="2" ry="2" />
<text  x="551.57" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="192.4" y="1045" width="0.2" height="15.0" fill="rgb(237,170,26)" rx="2" ry="2" />
<text  x="195.41" y="1055.5" ></text>
</g>
<g >
<title>Eigen::internal::generic_product_impl&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt;, Eigen::DenseShape, Eigen::DenseShape, 8&gt;::evalTo&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt; (1 samples, 0.02%)</title><rect x="153.7" y="1973" width="0.2" height="15.0" fill="rgb(208,141,34)" rx="2" ry="2" />
<text  x="156.67" y="1983.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::computeSubwords (3 samples, 0.05%)</title><rect x="839.9" y="2037" width="0.5" height="15.0" fill="rgb(251,50,46)" rx="2" ry="2" />
<text  x="842.85" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.0" y="853" width="0.4" height="15.0" fill="rgb(246,99,53)" rx="2" ry="2" />
<text  x="1164.04" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="127.2" y="229" width="0.1" height="15.0" fill="rgb(235,130,44)" rx="2" ry="2" />
<text  x="130.15" y="239.5" ></text>
</g>
<g >
<title>ktime_get_coarse_real_ts64 (1 samples, 0.02%)</title><rect x="80.0" y="1829" width="0.1" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="82.95" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="151.8" y="1317" width="0.4" height="15.0" fill="rgb(250,205,7)" rx="2" ry="2" />
<text  x="154.79" y="1327.5" ></text>
</g>
<g >
<title>do_syscall_64 (4 samples, 0.06%)</title><rect x="891.0" y="2021" width="0.8" height="15.0" fill="rgb(233,173,15)" rx="2" ry="2" />
<text  x="894.00" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_Compiler (166 samples, 2.65%)</title><rect x="95.4" y="1941" width="31.2" height="15.0" fill="rgb(248,142,43)" rx="2" ry="2" />
<text  x="98.37" y="1951.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.0" y="229" width="0.4" height="15.0" fill="rgb(226,127,40)" rx="2" ry="2" />
<text  x="1164.04" y="239.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="867.1" y="2021" width="0.2" height="15.0" fill="rgb(250,53,20)" rx="2" ry="2" />
<text  x="870.12" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="373" width="0.4" height="15.0" fill="rgb(213,221,15)" rx="2" ry="2" />
<text  x="77.88" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="192.4" y="1365" width="0.2" height="15.0" fill="rgb(210,108,40)" rx="2" ry="2" />
<text  x="195.41" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.4" y="1205" width="0.4" height="15.0" fill="rgb(252,220,33)" rx="2" ry="2" />
<text  x="1164.42" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.0" y="1925" width="0.4" height="15.0" fill="rgb(234,150,2)" rx="2" ry="2" />
<text  x="1164.04" y="1935.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="575.8" y="1957" width="0.2" height="15.0" fill="rgb(211,226,33)" rx="2" ry="2" />
<text  x="578.84" y="1967.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="169.3" y="1589" width="0.2" height="15.0" fill="rgb(250,60,40)" rx="2" ry="2" />
<text  x="172.28" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.4" y="981" width="0.4" height="15.0" fill="rgb(237,29,17)" rx="2" ry="2" />
<text  x="1164.42" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="192.4" y="1317" width="0.2" height="15.0" fill="rgb(212,19,18)" rx="2" ry="2" />
<text  x="195.41" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="891.8" y="1765" width="0.1" height="15.0" fill="rgb(231,227,3)" rx="2" ry="2" />
<text  x="894.76" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (1 samples, 0.02%)</title><rect x="151.0" y="1813" width="0.2" height="15.0" fill="rgb(240,155,15)" rx="2" ry="2" />
<text  x="154.04" y="1823.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (3 samples, 0.05%)</title><rect x="113.6" y="1621" width="0.6" height="15.0" fill="rgb(212,144,54)" rx="2" ry="2" />
<text  x="116.61" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="293" width="0.4" height="15.0" fill="rgb(251,133,28)" rx="2" ry="2" />
<text  x="77.88" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.0" y="1909" width="0.4" height="15.0" fill="rgb(249,192,20)" rx="2" ry="2" />
<text  x="1164.04" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="709" width="0.4" height="15.0" fill="rgb(213,65,10)" rx="2" ry="2" />
<text  x="77.88" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="891.8" y="1381" width="0.1" height="15.0" fill="rgb(235,121,45)" rx="2" ry="2" />
<text  x="894.76" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="151.6" y="1525" width="0.6" height="15.0" fill="rgb(213,83,25)" rx="2" ry="2" />
<text  x="154.60" y="1535.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (2 samples, 0.03%)</title><rect x="139.6" y="1605" width="0.3" height="15.0" fill="rgb(246,66,36)" rx="2" ry="2" />
<text  x="142.56" y="1615.5" ></text>
</g>
<g >
<title>__libc_start_main (2,628 samples, 41.88%)</title><rect x="80.1" y="2037" width="494.2" height="15.0" fill="rgb(217,189,31)" rx="2" ry="2" />
<text  x="83.14" y="2047.5" >__libc_start_main</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="151.8" y="597" width="0.2" height="15.0" fill="rgb(218,99,37)" rx="2" ry="2" />
<text  x="154.79" y="607.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.03%)</title><rect x="165.9" y="1621" width="0.4" height="15.0" fill="rgb(242,53,32)" rx="2" ry="2" />
<text  x="168.89" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (36 samples, 0.57%)</title><rect x="163.4" y="1717" width="6.8" height="15.0" fill="rgb(234,36,45)" rx="2" ry="2" />
<text  x="166.45" y="1727.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (1 samples, 0.02%)</title><rect x="411.5" y="1845" width="0.2" height="15.0" fill="rgb(205,37,49)" rx="2" ry="2" />
<text  x="414.48" y="1855.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="605.4" y="1861" width="0.1" height="15.0" fill="rgb(251,205,32)" rx="2" ry="2" />
<text  x="608.36" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="891.8" y="1605" width="0.1" height="15.0" fill="rgb(230,169,40)" rx="2" ry="2" />
<text  x="894.76" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1161.2" y="53" width="0.2" height="15.0" fill="rgb(235,195,13)" rx="2" ry="2" />
<text  x="1164.23" y="63.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="2005" width="0.4" height="15.0" fill="rgb(225,164,36)" rx="2" ry="2" />
<text  x="77.88" y="2015.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (2 samples, 0.03%)</title><rect x="141.3" y="1621" width="0.3" height="15.0" fill="rgb(229,194,19)" rx="2" ry="2" />
<text  x="144.26" y="1631.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="548.6" y="1909" width="0.2" height="15.0" fill="rgb(211,64,18)" rx="2" ry="2" />
<text  x="551.57" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="192.4" y="549" width="0.2" height="15.0" fill="rgb(234,63,41)" rx="2" ry="2" />
<text  x="195.41" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (125 samples, 1.99%)</title><rect x="127.9" y="1893" width="23.5" height="15.0" fill="rgb(240,226,24)" rx="2" ry="2" />
<text  x="130.91" y="1903.5" >s..</text>
</g>
<g >
<title>[libstdc++.so.6.0.25] (26 samples, 0.41%)</title><rect x="37.8" y="2053" width="4.9" height="15.0" fill="rgb(223,189,49)" rx="2" ry="2" />
<text  x="40.83" y="2063.5" ></text>
</g>
<g >
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="699.8" y="1781" width="0.1" height="15.0" fill="rgb(208,203,10)" rx="2" ry="2" />
<text  x="702.76" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.4" y="709" width="0.4" height="15.0" fill="rgb(226,128,17)" rx="2" ry="2" />
<text  x="1164.42" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="891.8" y="165" width="0.1" height="15.0" fill="rgb(250,126,35)" rx="2" ry="2" />
<text  x="894.76" y="175.5" ></text>
</g>
<g >
<title>fasttext::FastText::getDimension (5 samples, 0.08%)</title><rect x="549.1" y="1973" width="1.0" height="15.0" fill="rgb(229,49,25)" rx="2" ry="2" />
<text  x="552.13" y="1983.5" ></text>
</g>
<g >
<title>__dynamic_cast (6 samples, 0.10%)</title><rect x="96.3" y="1589" width="1.1" height="15.0" fill="rgb(216,80,26)" rx="2" ry="2" />
<text  x="99.31" y="1599.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::append (7 samples, 0.11%)</title><rect x="604.2" y="1893" width="1.3" height="15.0" fill="rgb(237,98,21)" rx="2" ry="2" />
<text  x="607.23" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="891.8" y="1237" width="0.1" height="15.0" fill="rgb(224,153,26)" rx="2" ry="2" />
<text  x="894.76" y="1247.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::initNgrams (1 samples, 0.02%)</title><rect x="840.6" y="2037" width="0.2" height="15.0" fill="rgb(214,141,54)" rx="2" ry="2" />
<text  x="843.61" y="2047.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (16 samples, 0.25%)</title><rect x="429.9" y="1973" width="3.0" height="15.0" fill="rgb(205,33,30)" rx="2" ry="2" />
<text  x="432.91" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="197" width="0.4" height="15.0" fill="rgb(217,47,31)" rx="2" ry="2" />
<text  x="77.88" y="207.5" ></text>
</g>
<g >
<title>__handle_mm_fault (37 samples, 0.59%)</title><rect x="413.4" y="1893" width="6.9" height="15.0" fill="rgb(253,201,40)" rx="2" ry="2" />
<text  x="416.36" y="1903.5" ></text>
</g>
<g >
<title>std::operator&gt;&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;@plt (1 samples, 0.02%)</title><rect x="325.7" y="1989" width="0.2" height="15.0" fill="rgb(207,68,13)" rx="2" ry="2" />
<text  x="328.73" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="127.2" y="133" width="0.1" height="15.0" fill="rgb(227,71,26)" rx="2" ry="2" />
<text  x="130.15" y="143.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="891.8" y="1541" width="0.1" height="15.0" fill="rgb(231,126,9)" rx="2" ry="2" />
<text  x="894.76" y="1551.5" ></text>
</g>
<g >
<title>fasttext::FastText::predictLine (1 samples, 0.02%)</title><rect x="576.0" y="1957" width="0.2" height="15.0" fill="rgb(217,192,0)" rx="2" ry="2" />
<text  x="579.02" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (26 samples, 0.41%)</title><rect x="121.7" y="1733" width="4.9" height="15.0" fill="rgb(223,89,48)" rx="2" ry="2" />
<text  x="124.70" y="1743.5" ></text>
</g>
<g >
<title>std::istream::sentry::sentry (3 samples, 0.05%)</title><rect x="1189.1" y="2053" width="0.5" height="15.0" fill="rgb(207,153,44)" rx="2" ry="2" />
<text  x="1192.06" y="2063.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (1 samples, 0.02%)</title><rect x="130.9" y="1573" width="0.2" height="15.0" fill="rgb(249,171,1)" rx="2" ry="2" />
<text  x="133.91" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="152.0" y="805" width="0.2" height="15.0" fill="rgb(223,71,5)" rx="2" ry="2" />
<text  x="154.98" y="815.5" ></text>
</g>
<g >
<title>operator delete@plt (1 samples, 0.02%)</title><rect x="818.8" y="1893" width="0.2" height="15.0" fill="rgb(215,107,11)" rx="2" ry="2" />
<text  x="821.79" y="1903.5" ></text>
</g>
<g >
<title>page_fault (5 samples, 0.08%)</title><rect x="73.9" y="2021" width="1.0" height="15.0" fill="rgb(224,192,26)" rx="2" ry="2" />
<text  x="76.94" y="2031.5" ></text>
</g>
<g >
<title>fasttext::Vector::mul (21 samples, 0.33%)</title><rect x="313.1" y="1989" width="4.0" height="15.0" fill="rgb(229,70,21)" rx="2" ry="2" />
<text  x="316.13" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.0" y="1605" width="0.4" height="15.0" fill="rgb(206,108,1)" rx="2" ry="2" />
<text  x="1164.04" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="891.8" y="1509" width="0.1" height="15.0" fill="rgb(213,155,53)" rx="2" ry="2" />
<text  x="894.76" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="192.4" y="789" width="0.2" height="15.0" fill="rgb(233,117,52)" rx="2" ry="2" />
<text  x="195.41" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (33 samples, 0.53%)</title><rect x="177.2" y="1765" width="6.2" height="15.0" fill="rgb(221,203,1)" rx="2" ry="2" />
<text  x="180.17" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.4" y="1157" width="0.4" height="15.0" fill="rgb(229,93,14)" rx="2" ry="2" />
<text  x="1164.42" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.0" y="293" width="0.4" height="15.0" fill="rgb(224,198,32)" rx="2" ry="2" />
<text  x="1164.04" y="303.5" ></text>
</g>
<g >
<title>tlb_flush_mmu_free (1 samples, 0.02%)</title><rect x="923.2" y="1893" width="0.1" height="15.0" fill="rgb(209,107,53)" rx="2" ry="2" />
<text  x="926.16" y="1903.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (4 samples, 0.06%)</title><rect x="112.5" y="1621" width="0.7" height="15.0" fill="rgb(211,131,26)" rx="2" ry="2" />
<text  x="115.49" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.0" y="197" width="0.4" height="15.0" fill="rgb(232,7,12)" rx="2" ry="2" />
<text  x="1164.04" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="574.1" y="1941" width="0.2" height="15.0" fill="rgb(227,223,18)" rx="2" ry="2" />
<text  x="577.14" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (1 samples, 0.02%)</title><rect x="170.4" y="1701" width="0.2" height="15.0" fill="rgb(224,215,2)" rx="2" ry="2" />
<text  x="173.40" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="127.5" y="1253" width="0.4" height="15.0" fill="rgb(213,201,12)" rx="2" ry="2" />
<text  x="130.53" y="1263.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1140.4" y="2021" width="0.1" height="15.0" fill="rgb(251,40,20)" rx="2" ry="2" />
<text  x="1143.36" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.0" y="149" width="0.4" height="15.0" fill="rgb(247,55,20)" rx="2" ry="2" />
<text  x="1164.04" y="159.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.02%)</title><rect x="732.9" y="1813" width="0.1" height="15.0" fill="rgb(230,108,24)" rx="2" ry="2" />
<text  x="735.86" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.08%)</title><rect x="127.0" y="1813" width="0.9" height="15.0" fill="rgb(235,222,32)" rx="2" ry="2" />
<text  x="129.97" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1161.2" y="85" width="0.2" height="15.0" fill="rgb(212,18,19)" rx="2" ry="2" />
<text  x="1164.23" y="95.5" ></text>
</g>
<g >
<title>__x64_sys_futex (3 samples, 0.05%)</title><rect x="94.6" y="1925" width="0.6" height="15.0" fill="rgb(232,21,25)" rx="2" ry="2" />
<text  x="97.62" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (32 samples, 0.51%)</title><rect x="109.1" y="1749" width="6.0" height="15.0" fill="rgb(224,128,26)" rx="2" ry="2" />
<text  x="112.10" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.0" y="645" width="0.4" height="15.0" fill="rgb(218,189,27)" rx="2" ry="2" />
<text  x="1164.04" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (4 samples, 0.06%)</title><rect x="1131.3" y="2053" width="0.8" height="15.0" fill="rgb(244,73,49)" rx="2" ry="2" />
<text  x="1134.33" y="2063.5" ></text>
</g>
<g >
<title>fasttext::DenseMatrix::dotRow (3 samples, 0.05%)</title><rect x="923.3" y="2053" width="0.6" height="15.0" fill="rgb(243,192,13)" rx="2" ry="2" />
<text  x="926.35" y="2063.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (1 samples, 0.02%)</title><rect x="130.7" y="1557" width="0.2" height="15.0" fill="rgb(228,31,38)" rx="2" ry="2" />
<text  x="133.73" y="1567.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="305.6" y="1925" width="0.2" height="15.0" fill="rgb(249,228,17)" rx="2" ry="2" />
<text  x="308.61" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="891.8" y="693" width="0.1" height="15.0" fill="rgb(205,24,17)" rx="2" ry="2" />
<text  x="894.76" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="127.2" y="693" width="0.1" height="15.0" fill="rgb(220,218,9)" rx="2" ry="2" />
<text  x="130.15" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (32 samples, 0.51%)</title><rect x="109.1" y="1765" width="6.0" height="15.0" fill="rgb(243,109,2)" rx="2" ry="2" />
<text  x="112.10" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.4" y="629" width="0.4" height="15.0" fill="rgb(240,16,39)" rx="2" ry="2" />
<text  x="1164.42" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1161.2" y="101" width="0.2" height="15.0" fill="rgb(244,128,49)" rx="2" ry="2" />
<text  x="1164.23" y="111.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (20 samples, 0.32%)</title><rect x="201.6" y="1989" width="3.8" height="15.0" fill="rgb(217,199,10)" rx="2" ry="2" />
<text  x="204.62" y="1999.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.02%)</title><rect x="42.5" y="1973" width="0.2" height="15.0" fill="rgb(247,155,5)" rx="2" ry="2" />
<text  x="45.53" y="1983.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.25] (1 samples, 0.02%)</title><rect x="170.2" y="1701" width="0.2" height="15.0" fill="rgb(249,15,18)" rx="2" ry="2" />
<text  x="173.22" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="151.8" y="565" width="0.2" height="15.0" fill="rgb(234,182,32)" rx="2" ry="2" />
<text  x="154.79" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.4" y="1733" width="0.4" height="15.0" fill="rgb(240,175,25)" rx="2" ry="2" />
<text  x="1164.42" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="151.8" y="645" width="0.2" height="15.0" fill="rgb(240,138,8)" rx="2" ry="2" />
<text  x="154.79" y="655.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (2 samples, 0.03%)</title><rect x="419.9" y="1861" width="0.4" height="15.0" fill="rgb(243,52,54)" rx="2" ry="2" />
<text  x="422.94" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.0" y="1365" width="0.4" height="15.0" fill="rgb(251,38,32)" rx="2" ry="2" />
<text  x="1164.04" y="1375.5" ></text>
</g>
<g >
<title>unmap_vmas (1 samples, 0.02%)</title><rect x="433.3" y="1861" width="0.2" height="15.0" fill="rgb(211,184,47)" rx="2" ry="2" />
<text  x="436.30" y="1871.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="698.1" y="1781" width="0.2" height="15.0" fill="rgb(232,20,48)" rx="2" ry="2" />
<text  x="701.07" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="1717" width="0.4" height="15.0" fill="rgb(241,12,36)" rx="2" ry="2" />
<text  x="77.88" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="152.0" y="245" width="0.2" height="15.0" fill="rgb(217,189,42)" rx="2" ry="2" />
<text  x="154.98" y="255.5" ></text>
</g>
<g >
<title>vfs_read (4 samples, 0.06%)</title><rect x="891.0" y="1973" width="0.8" height="15.0" fill="rgb(228,77,9)" rx="2" ry="2" />
<text  x="894.00" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1161.2" y="37" width="0.2" height="15.0" fill="rgb(224,121,30)" rx="2" ry="2" />
<text  x="1164.23" y="47.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.02%)</title><rect x="732.9" y="1797" width="0.1" height="15.0" fill="rgb(239,219,24)" rx="2" ry="2" />
<text  x="735.86" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (165 samples, 2.63%)</title><rect x="95.6" y="1893" width="31.0" height="15.0" fill="rgb(221,70,13)" rx="2" ry="2" />
<text  x="98.56" y="1903.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="152.0" y="869" width="0.2" height="15.0" fill="rgb(232,190,16)" rx="2" ry="2" />
<text  x="154.98" y="879.5" ></text>
</g>
<g >
<title>std::__merge_adaptive&lt;__gnu_cxx::__normal_iterator&lt;TWeightedDoc*, std::vector&lt;TWeightedDoc, std::allocator&lt;TWeightedDoc&gt; &gt; &gt;, long, TWeightedDoc*, __gnu_cxx::__ops::_Iter_comp_iter&lt;TNewsCluster::SortByWeights (1 samples, 0.02%)</title><rect x="201.4" y="1957" width="0.2" height="15.0" fill="rgb(207,113,35)" rx="2" ry="2" />
<text  x="204.43" y="1967.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (2 samples, 0.03%)</title><rect x="113.2" y="1621" width="0.4" height="15.0" fill="rgb(205,69,17)" rx="2" ry="2" />
<text  x="116.24" y="1631.5" ></text>
</g>
<g >
<title>futex_wait (3 samples, 0.05%)</title><rect x="94.6" y="1893" width="0.6" height="15.0" fill="rgb(232,0,21)" rx="2" ry="2" />
<text  x="97.62" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="485" width="0.4" height="15.0" fill="rgb(229,107,20)" rx="2" ry="2" />
<text  x="77.88" y="495.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (140 samples, 2.23%)</title><rect x="10.0" y="2053" width="26.3" height="15.0" fill="rgb(246,41,53)" rx="2" ry="2" />
<text  x="13.00" y="2063.5" >[..</text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (3 samples, 0.05%)</title><rect x="38.6" y="2021" width="0.5" height="15.0" fill="rgb(242,27,30)" rx="2" ry="2" />
<text  x="41.58" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="127.2" y="261" width="0.1" height="15.0" fill="rgb(215,159,16)" rx="2" ry="2" />
<text  x="130.15" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (25 samples, 0.40%)</title><rect x="146.3" y="1749" width="4.7" height="15.0" fill="rgb(251,84,11)" rx="2" ry="2" />
<text  x="149.33" y="1759.5" ></text>
</g>
<g >
<title>__do_page_fault (5 samples, 0.08%)</title><rect x="73.9" y="1989" width="1.0" height="15.0" fill="rgb(206,65,46)" rx="2" ry="2" />
<text  x="76.94" y="1999.5" ></text>
</g>
<g >
<title>nlohmann::detail::parser&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::sax_parse_internal&lt;nlohmann::detail::json_sax_dom_parser&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; (67 samples, 1.07%)</title><rect x="81.3" y="1957" width="12.6" height="15.0" fill="rgb(251,156,31)" rx="2" ry="2" />
<text  x="84.27" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1161.0" y="101" width="0.2" height="15.0" fill="rgb(227,138,19)" rx="2" ry="2" />
<text  x="1164.04" y="111.5" ></text>
</g>
<g >
<title>do_page_fault (5 samples, 0.08%)</title><rect x="842.5" y="2005" width="0.9" height="15.0" fill="rgb(225,5,17)" rx="2" ry="2" />
<text  x="845.49" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="127.5" y="1285" width="0.4" height="15.0" fill="rgb(236,34,32)" rx="2" ry="2" />
<text  x="130.53" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.0" y="453" width="0.4" height="15.0" fill="rgb(205,213,1)" rx="2" ry="2" />
<text  x="1164.04" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="151.6" y="1925" width="0.6" height="15.0" fill="rgb(228,191,28)" rx="2" ry="2" />
<text  x="154.60" y="1935.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (50 samples, 0.80%)</title><rect x="733.4" y="1877" width="9.4" height="15.0" fill="rgb(236,151,23)" rx="2" ry="2" />
<text  x="736.42" y="1887.5" ></text>
</g>
<g >
<title>Eigen::internal::generic_product_impl&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt;, Eigen::DenseShape, Eigen::DenseShape, 8&gt;::scaleAndAddTo&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt; (1 samples, 0.02%)</title><rect x="153.7" y="1957" width="0.2" height="15.0" fill="rgb(250,88,41)" rx="2" ry="2" />
<text  x="156.67" y="1967.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.02%)</title><rect x="867.3" y="2005" width="0.2" height="15.0" fill="rgb(238,17,1)" rx="2" ry="2" />
<text  x="870.31" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="1413" width="0.4" height="15.0" fill="rgb(230,151,5)" rx="2" ry="2" />
<text  x="77.88" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (22 samples, 0.35%)</title><rect x="137.5" y="1701" width="4.1" height="15.0" fill="rgb(221,128,15)" rx="2" ry="2" />
<text  x="140.50" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.0" y="165" width="0.4" height="15.0" fill="rgb(235,56,0)" rx="2" ry="2" />
<text  x="1164.04" y="175.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_istringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_istringstream (1 samples, 0.02%)</title><rect x="567.7" y="1973" width="0.2" height="15.0" fill="rgb(224,122,22)" rx="2" ry="2" />
<text  x="570.75" y="1983.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::json_value::destroy (3 samples, 0.05%)</title><rect x="572.8" y="2005" width="0.6" height="15.0" fill="rgb(222,33,48)" rx="2" ry="2" />
<text  x="575.83" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (2 samples, 0.03%)</title><rect x="121.1" y="1797" width="0.4" height="15.0" fill="rgb(239,210,19)" rx="2" ry="2" />
<text  x="124.14" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="151.8" y="373" width="0.2" height="15.0" fill="rgb(213,72,23)" rx="2" ry="2" />
<text  x="154.79" y="383.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="1973" width="0.4" height="15.0" fill="rgb(232,188,7)" rx="2" ry="2" />
<text  x="77.88" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="891.8" y="1093" width="0.1" height="15.0" fill="rgb(221,63,18)" rx="2" ry="2" />
<text  x="894.76" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="127.2" y="789" width="0.1" height="15.0" fill="rgb(236,208,6)" rx="2" ry="2" />
<text  x="130.15" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="151.6" y="1557" width="0.6" height="15.0" fill="rgb(250,63,38)" rx="2" ry="2" />
<text  x="154.60" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (1 samples, 0.02%)</title><rect x="190.7" y="1813" width="0.2" height="15.0" fill="rgb(225,22,37)" rx="2" ry="2" />
<text  x="193.71" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="891.8" y="1813" width="0.1" height="15.0" fill="rgb(245,44,30)" rx="2" ry="2" />
<text  x="894.76" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="1253" width="0.4" height="15.0" fill="rgb(250,136,37)" rx="2" ry="2" />
<text  x="77.88" y="1263.5" ></text>
</g>
<g >
<title>fasttext::Vector::norm (32 samples, 0.51%)</title><rect x="561.0" y="1973" width="6.0" height="15.0" fill="rgb(214,114,21)" rx="2" ry="2" />
<text  x="563.98" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (138 samples, 2.20%)</title><rect x="95.6" y="1813" width="25.9" height="15.0" fill="rgb(254,170,45)" rx="2" ry="2" />
<text  x="98.56" y="1823.5" >s..</text>
</g>
<g >
<title>page_fault (1 samples, 0.02%)</title><rect x="326.1" y="1989" width="0.2" height="15.0" fill="rgb(227,221,46)" rx="2" ry="2" />
<text  x="329.11" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="127.2" y="469" width="0.1" height="15.0" fill="rgb(212,80,7)" rx="2" ry="2" />
<text  x="130.15" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="127.2" y="213" width="0.1" height="15.0" fill="rgb(206,34,48)" rx="2" ry="2" />
<text  x="130.15" y="223.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="133.5" y="1605" width="0.2" height="15.0" fill="rgb(221,144,29)" rx="2" ry="2" />
<text  x="136.55" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="127.5" y="1653" width="0.4" height="15.0" fill="rgb(217,113,49)" rx="2" ry="2" />
<text  x="130.53" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="152.0" y="1141" width="0.2" height="15.0" fill="rgb(236,159,31)" rx="2" ry="2" />
<text  x="154.98" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_subexpr_begin (1 samples, 0.02%)</title><rect x="151.2" y="1861" width="0.2" height="15.0" fill="rgb(230,56,3)" rx="2" ry="2" />
<text  x="154.22" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="127.2" y="1749" width="0.3" height="15.0" fill="rgb(251,24,18)" rx="2" ry="2" />
<text  x="130.15" y="1759.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (6 samples, 0.10%)</title><rect x="570.8" y="2005" width="1.1" height="15.0" fill="rgb(209,133,13)" rx="2" ry="2" />
<text  x="573.76" y="2015.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append@plt (4 samples, 0.06%)</title><rect x="1129.3" y="2053" width="0.7" height="15.0" fill="rgb(223,96,5)" rx="2" ry="2" />
<text  x="1132.26" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.0" y="405" width="0.4" height="15.0" fill="rgb(242,182,50)" rx="2" ry="2" />
<text  x="1164.04" y="415.5" ></text>
</g>
<g >
<title>__dynamic_cast (9 samples, 0.14%)</title><rect x="131.7" y="1605" width="1.7" height="15.0" fill="rgb(221,175,4)" rx="2" ry="2" />
<text  x="134.67" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.0" y="1653" width="0.4" height="15.0" fill="rgb(231,122,54)" rx="2" ry="2" />
<text  x="1164.04" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="891.8" y="1045" width="0.1" height="15.0" fill="rgb(213,16,9)" rx="2" ry="2" />
<text  x="894.76" y="1055.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="305.6" y="1909" width="0.2" height="15.0" fill="rgb(253,83,51)" rx="2" ry="2" />
<text  x="308.61" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.4" y="1797" width="0.4" height="15.0" fill="rgb(218,75,33)" rx="2" ry="2" />
<text  x="1164.42" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (45 samples, 0.72%)</title><rect x="155.0" y="1685" width="8.4" height="15.0" fill="rgb(226,160,54)" rx="2" ry="2" />
<text  x="157.98" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="891.8" y="1781" width="0.1" height="15.0" fill="rgb(231,140,45)" rx="2" ry="2" />
<text  x="894.76" y="1791.5" ></text>
</g>
<g >
<title>std::locale::~locale (1 samples, 0.02%)</title><rect x="568.9" y="1973" width="0.2" height="15.0" fill="rgb(220,226,3)" rx="2" ry="2" />
<text  x="571.88" y="1983.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (1 samples, 0.02%)</title><rect x="139.9" y="1605" width="0.2" height="15.0" fill="rgb(250,101,35)" rx="2" ry="2" />
<text  x="142.94" y="1615.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (4 samples, 0.06%)</title><rect x="35.2" y="1941" width="0.8" height="15.0" fill="rgb(220,220,21)" rx="2" ry="2" />
<text  x="38.20" y="1951.5" ></text>
</g>
<g >
<title>std::__move_merge&lt;__gnu_cxx::__normal_iterator&lt;TDocument*, std::vector&lt;TDocument, std::allocator&lt;TDocument&gt; &gt; &gt;, TDocument*, __gnu_cxx::__ops::_Iter_comp_iter&lt;main::$_0&gt; &gt; (2 samples, 0.03%)</title><rect x="573.8" y="1973" width="0.3" height="15.0" fill="rgb(248,1,18)" rx="2" ry="2" />
<text  x="576.77" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.0" y="1221" width="0.4" height="15.0" fill="rgb(215,220,31)" rx="2" ry="2" />
<text  x="1164.04" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="151.8" y="277" width="0.2" height="15.0" fill="rgb(229,82,22)" rx="2" ry="2" />
<text  x="154.79" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.4" y="1045" width="0.4" height="15.0" fill="rgb(231,166,11)" rx="2" ry="2" />
<text  x="1164.42" y="1055.5" ></text>
</g>
<g >
<title>rcu_process_callbacks (1 samples, 0.02%)</title><rect x="70.7" y="1957" width="0.2" height="15.0" fill="rgb(249,137,32)" rx="2" ry="2" />
<text  x="73.74" y="1967.5" ></text>
</g>
<g >
<title>fasttext::Vector::zero (1 samples, 0.02%)</title><rect x="323.7" y="1989" width="0.2" height="15.0" fill="rgb(236,75,44)" rx="2" ry="2" />
<text  x="326.66" y="1999.5" ></text>
</g>
<g >
<title>fasttext::ProductQuantizer::addcode (2 samples, 0.03%)</title><rect x="78.1" y="2021" width="0.3" height="15.0" fill="rgb(220,193,39)" rx="2" ry="2" />
<text  x="81.07" y="2031.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (7 samples, 0.11%)</title><rect x="576.8" y="1941" width="1.3" height="15.0" fill="rgb(245,83,2)" rx="2" ry="2" />
<text  x="579.78" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="127.2" y="933" width="0.1" height="15.0" fill="rgb(240,68,41)" rx="2" ry="2" />
<text  x="130.15" y="943.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (1 samples, 0.02%)</title><rect x="923.2" y="2021" width="0.1" height="15.0" fill="rgb(228,50,6)" rx="2" ry="2" />
<text  x="926.16" y="2031.5" ></text>
</g>
<g >
<title>handle_mm_fault (5 samples, 0.08%)</title><rect x="698.8" y="1813" width="1.0" height="15.0" fill="rgb(207,164,31)" rx="2" ry="2" />
<text  x="701.82" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="151.6" y="1829" width="0.6" height="15.0" fill="rgb(227,176,52)" rx="2" ry="2" />
<text  x="154.60" y="1839.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (1 samples, 0.02%)</title><rect x="141.1" y="1621" width="0.2" height="15.0" fill="rgb(222,164,31)" rx="2" ry="2" />
<text  x="144.07" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="192.4" y="1429" width="0.2" height="15.0" fill="rgb(208,2,17)" rx="2" ry="2" />
<text  x="195.41" y="1439.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1085.8" y="2005" width="0.2" height="15.0" fill="rgb(209,5,10)" rx="2" ry="2" />
<text  x="1088.82" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="127.2" y="1285" width="0.1" height="15.0" fill="rgb(228,115,41)" rx="2" ry="2" />
<text  x="130.15" y="1295.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::readWord (40 samples, 0.64%)</title><rect x="1039.7" y="2053" width="7.6" height="15.0" fill="rgb(242,70,20)" rx="2" ry="2" />
<text  x="1042.75" y="2063.5" ></text>
</g>
<g >
<title>Eigen::internal::generic_product_impl&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt;, Eigen::DenseShape, Eigen::DenseShape, 8&gt;::scaleAndAddTo&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt; (28 samples, 0.45%)</title><rect x="398.9" y="1941" width="5.2" height="15.0" fill="rgb(228,74,47)" rx="2" ry="2" />
<text  x="401.88" y="1951.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (1 samples, 0.02%)</title><rect x="35.2" y="1925" width="0.2" height="15.0" fill="rgb(240,126,50)" rx="2" ry="2" />
<text  x="38.20" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="151.6" y="1445" width="0.6" height="15.0" fill="rgb(215,194,53)" rx="2" ry="2" />
<text  x="154.60" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="152.0" y="1285" width="0.2" height="15.0" fill="rgb(217,180,8)" rx="2" ry="2" />
<text  x="154.98" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="127.5" y="917" width="0.4" height="15.0" fill="rgb(214,130,14)" rx="2" ry="2" />
<text  x="130.53" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (1 samples, 0.02%)</title><rect x="95.6" y="1653" width="0.1" height="15.0" fill="rgb(253,131,11)" rx="2" ry="2" />
<text  x="98.56" y="1663.5" ></text>
</g>
<g >
<title>Eigen::internal::call_dense_assignment_loop&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_sum_op&lt;float, float&gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_quotient_op&lt;float, float&gt;, Eigen::CwiseUnaryOp&lt;Eigen::internal::scalar_opposite_op&lt;float&gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_sum_op&lt;float, float&gt;, Eigen::ArrayWrapper&lt;Eigen::Product&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt;, 0&gt; const&gt; const, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Array&lt;float, -1, -1, 0, -1, -1&gt; const&gt; const&gt; const&gt; const, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Array&lt;float, -1, -1, 0, -1, -1&gt; const&gt; const&gt; const, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Array&lt;float, -1, -1, 0, -1, -1&gt; const&gt; const&gt;, Eigen::internal::assign_op&lt;float, float&gt; &gt; (129 samples, 2.06%)</title><rect x="396.3" y="1973" width="24.2" height="15.0" fill="rgb(252,114,3)" rx="2" ry="2" />
<text  x="399.25" y="1983.5" >E..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (195 samples, 3.11%)</title><rect x="154.6" y="1925" width="36.7" height="15.0" fill="rgb(207,98,41)" rx="2" ry="2" />
<text  x="157.61" y="1935.5" >std..</text>
</g>
<g >
<title>std::ctype&lt;char&gt;::do_tolower (2 samples, 0.03%)</title><rect x="125.3" y="1701" width="0.3" height="15.0" fill="rgb(232,95,2)" rx="2" ry="2" />
<text  x="128.27" y="1711.5" ></text>
</g>
<g >
<title>cfree (5 samples, 0.08%)</title><rect x="147.5" y="1685" width="0.9" height="15.0" fill="rgb(209,151,33)" rx="2" ry="2" />
<text  x="150.46" y="1695.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct (1 samples, 0.02%)</title><rect x="585.2" y="1893" width="0.2" height="15.0" fill="rgb(220,187,47)" rx="2" ry="2" />
<text  x="588.24" y="1903.5" ></text>
</g>
<g >
<title>virtual thunk to std::__cxx11::basic_istringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_istringstream (2 samples, 0.03%)</title><rect x="867.3" y="2037" width="0.4" height="15.0" fill="rgb(251,71,47)" rx="2" ry="2" />
<text  x="870.31" y="2047.5" ></text>
</g>
<g >
<title>malloc (18 samples, 0.29%)</title><rect x="850.0" y="2037" width="3.4" height="15.0" fill="rgb(206,43,16)" rx="2" ry="2" />
<text  x="853.01" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="891.8" y="1141" width="0.1" height="15.0" fill="rgb(207,46,45)" rx="2" ry="2" />
<text  x="894.76" y="1151.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (1 samples, 0.02%)</title><rect x="74.7" y="1925" width="0.2" height="15.0" fill="rgb(220,46,39)" rx="2" ry="2" />
<text  x="77.69" y="1935.5" ></text>
</g>
<g >
<title>__libc_start_main (1 samples, 0.02%)</title><rect x="891.8" y="2053" width="0.1" height="15.0" fill="rgb(237,97,39)" rx="2" ry="2" />
<text  x="894.76" y="2063.5" ></text>
</g>
<g >
<title>__lru_cache_add (2 samples, 0.03%)</title><rect x="34.6" y="1941" width="0.4" height="15.0" fill="rgb(245,175,22)" rx="2" ry="2" />
<text  x="37.63" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (23 samples, 0.37%)</title><rect x="142.0" y="1669" width="4.3" height="15.0" fill="rgb(221,54,26)" rx="2" ry="2" />
<text  x="145.01" y="1679.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (3 samples, 0.05%)</title><rect x="159.1" y="1573" width="0.6" height="15.0" fill="rgb(240,77,51)" rx="2" ry="2" />
<text  x="162.12" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="127.5" y="853" width="0.4" height="15.0" fill="rgb(246,122,27)" rx="2" ry="2" />
<text  x="130.53" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="152.0" y="373" width="0.2" height="15.0" fill="rgb(221,69,52)" rx="2" ry="2" />
<text  x="154.98" y="383.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="433.3" y="1765" width="0.2" height="15.0" fill="rgb(210,89,35)" rx="2" ry="2" />
<text  x="436.30" y="1775.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_sync@plt (1 samples, 0.02%)</title><rect x="867.5" y="2005" width="0.2" height="15.0" fill="rgb(209,156,34)" rx="2" ry="2" />
<text  x="870.50" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="152.0" y="1013" width="0.2" height="15.0" fill="rgb(252,39,49)" rx="2" ry="2" />
<text  x="154.98" y="1023.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1116.7" y="2037" width="0.1" height="15.0" fill="rgb(223,137,14)" rx="2" ry="2" />
<text  x="1119.66" y="2047.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="419.0" y="1829" width="0.4" height="15.0" fill="rgb(240,29,23)" rx="2" ry="2" />
<text  x="422.00" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (31 samples, 0.49%)</title><rect x="131.7" y="1685" width="5.8" height="15.0" fill="rgb(221,5,14)" rx="2" ry="2" />
<text  x="134.67" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="891.8" y="661" width="0.1" height="15.0" fill="rgb(212,130,4)" rx="2" ry="2" />
<text  x="894.76" y="671.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="185.3" y="1701" width="0.1" height="15.0" fill="rgb(221,18,9)" rx="2" ry="2" />
<text  x="188.26" y="1711.5" ></text>
</g>
<g >
<title>page_counter_try_charge (1 samples, 0.02%)</title><rect x="411.5" y="1829" width="0.2" height="15.0" fill="rgb(242,66,44)" rx="2" ry="2" />
<text  x="414.48" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="891.8" y="1717" width="0.1" height="15.0" fill="rgb(246,164,35)" rx="2" ry="2" />
<text  x="894.76" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (39 samples, 0.62%)</title><rect x="101.8" y="1669" width="7.3" height="15.0" fill="rgb(211,60,21)" rx="2" ry="2" />
<text  x="104.77" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="127.2" y="1333" width="0.1" height="15.0" fill="rgb(208,10,2)" rx="2" ry="2" />
<text  x="130.15" y="1343.5" ></text>
</g>
<g >
<title>__do_page_fault (32 samples, 0.51%)</title><rect x="405.8" y="1909" width="6.1" height="15.0" fill="rgb(212,128,9)" rx="2" ry="2" />
<text  x="408.84" y="1919.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock (2 samples, 0.03%)</title><rect x="39.5" y="2037" width="0.4" height="15.0" fill="rgb(243,42,45)" rx="2" ry="2" />
<text  x="42.52" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (33 samples, 0.53%)</title><rect x="95.6" y="1685" width="6.2" height="15.0" fill="rgb(227,67,27)" rx="2" ry="2" />
<text  x="98.56" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="151.8" y="469" width="0.2" height="15.0" fill="rgb(252,130,33)" rx="2" ry="2" />
<text  x="154.79" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="127.2" y="981" width="0.1" height="15.0" fill="rgb(216,192,28)" rx="2" ry="2" />
<text  x="130.15" y="991.5" ></text>
</g>
<g >
<title>finish_task_switch (2 samples, 0.03%)</title><rect x="995.9" y="1957" width="0.4" height="15.0" fill="rgb(251,41,16)" rx="2" ry="2" />
<text  x="998.93" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (2 samples, 0.03%)</title><rect x="101.8" y="1637" width="0.3" height="15.0" fill="rgb(228,180,7)" rx="2" ry="2" />
<text  x="104.77" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="151.8" y="677" width="0.2" height="15.0" fill="rgb(238,143,20)" rx="2" ry="2" />
<text  x="154.79" y="687.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="702.2" y="1829" width="0.2" height="15.0" fill="rgb(226,196,10)" rx="2" ry="2" />
<text  x="705.20" y="1839.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (1 samples, 0.02%)</title><rect x="181.9" y="1653" width="0.2" height="15.0" fill="rgb(235,98,47)" rx="2" ry="2" />
<text  x="184.88" y="1663.5" ></text>
</g>
<g >
<title>onmt::unicode::get_case@plt (1 samples, 0.02%)</title><rect x="749.8" y="1893" width="0.2" height="15.0" fill="rgb(212,82,41)" rx="2" ry="2" />
<text  x="752.78" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="152.0" y="1221" width="0.2" height="15.0" fill="rgb(209,140,34)" rx="2" ry="2" />
<text  x="154.98" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="192.4" y="885" width="0.2" height="15.0" fill="rgb(228,71,42)" rx="2" ry="2" />
<text  x="195.41" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="127.5" y="1125" width="0.4" height="15.0" fill="rgb(249,38,46)" rx="2" ry="2" />
<text  x="130.53" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (1 samples, 0.02%)</title><rect x="190.7" y="1781" width="0.2" height="15.0" fill="rgb(214,158,50)" rx="2" ry="2" />
<text  x="193.71" y="1791.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace_aux (1 samples, 0.02%)</title><rect x="121.5" y="1733" width="0.2" height="15.0" fill="rgb(249,82,27)" rx="2" ry="2" />
<text  x="124.51" y="1743.5" ></text>
</g>
<g >
<title>onmt::unicode::explode_utf8 (66 samples, 1.05%)</title><rect x="622.3" y="1877" width="12.4" height="15.0" fill="rgb(243,68,40)" rx="2" ry="2" />
<text  x="625.28" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="891.8" y="1317" width="0.1" height="15.0" fill="rgb(227,217,50)" rx="2" ry="2" />
<text  x="894.76" y="1327.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt;@plt (1 samples, 0.02%)</title><rect x="146.1" y="1653" width="0.2" height="15.0" fill="rgb(231,229,44)" rx="2" ry="2" />
<text  x="149.15" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="192.4" y="725" width="0.2" height="15.0" fill="rgb(246,115,21)" rx="2" ry="2" />
<text  x="195.41" y="735.5" ></text>
</g>
<g >
<title>Eigen::internal::general_matrix_matrix_product&lt;long, float, 0, false, float, 1, false, 0, 1&gt;::run (1 samples, 0.02%)</title><rect x="153.7" y="1941" width="0.2" height="15.0" fill="rgb(232,208,12)" rx="2" ry="2" />
<text  x="156.67" y="1951.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.05%)</title><rect x="94.6" y="1957" width="0.6" height="15.0" fill="rgb(231,220,47)" rx="2" ry="2" />
<text  x="97.62" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="151.8" y="517" width="0.2" height="15.0" fill="rgb(217,180,37)" rx="2" ry="2" />
<text  x="154.79" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.11%)</title><rect x="126.6" y="1893" width="1.3" height="15.0" fill="rgb(246,86,4)" rx="2" ry="2" />
<text  x="129.59" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="1029" width="0.4" height="15.0" fill="rgb(221,20,25)" rx="2" ry="2" />
<text  x="77.88" y="1039.5" ></text>
</g>
<g >
<title>fasttext::Vector::addRow (3 samples, 0.05%)</title><rect x="78.8" y="2021" width="0.6" height="15.0" fill="rgb(206,92,9)" rx="2" ry="2" />
<text  x="81.83" y="2031.5" ></text>
</g>
<g >
<title>__raw_callee_save___pv_queued_spin_unlock (1 samples, 0.02%)</title><rect x="413.7" y="1877" width="0.2" height="15.0" fill="rgb(239,3,23)" rx="2" ry="2" />
<text  x="416.74" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="192.2" y="1429" width="0.2" height="15.0" fill="rgb(248,118,31)" rx="2" ry="2" />
<text  x="195.22" y="1439.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare@plt (2 samples, 0.03%)</title><rect x="832.1" y="1893" width="0.4" height="15.0" fill="rgb(212,168,9)" rx="2" ry="2" />
<text  x="835.15" y="1903.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1116.7" y="1989" width="0.1" height="15.0" fill="rgb(223,52,30)" rx="2" ry="2" />
<text  x="1119.66" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_expression_term&lt;false, false&gt; (1 samples, 0.02%)</title><rect x="163.3" y="1605" width="0.1" height="15.0" fill="rgb(218,104,5)" rx="2" ry="2" />
<text  x="166.26" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (97 samples, 1.55%)</title><rect x="128.1" y="1797" width="18.2" height="15.0" fill="rgb(231,3,29)" rx="2" ry="2" />
<text  x="131.09" y="1807.5" ></text>
</g>
<g >
<title>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::dump (2 samples, 0.03%)</title><rect x="572.5" y="1989" width="0.3" height="15.0" fill="rgb(207,156,13)" rx="2" ry="2" />
<text  x="575.45" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="151.8" y="709" width="0.2" height="15.0" fill="rgb(209,214,50)" rx="2" ry="2" />
<text  x="154.79" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (47 samples, 0.75%)</title><rect x="154.6" y="1733" width="8.8" height="15.0" fill="rgb(235,147,13)" rx="2" ry="2" />
<text  x="157.61" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="192.4" y="1445" width="0.2" height="15.0" fill="rgb(212,191,14)" rx="2" ry="2" />
<text  x="195.41" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="127.2" y="1269" width="0.1" height="15.0" fill="rgb(235,29,5)" rx="2" ry="2" />
<text  x="130.15" y="1279.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_Alloc_node&gt; (1 samples, 0.02%)</title><rect x="574.1" y="1845" width="0.2" height="15.0" fill="rgb(236,22,47)" rx="2" ry="2" />
<text  x="577.14" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.4" y="949" width="0.4" height="15.0" fill="rgb(232,201,44)" rx="2" ry="2" />
<text  x="1164.42" y="959.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="405" width="0.4" height="15.0" fill="rgb(241,3,24)" rx="2" ry="2" />
<text  x="77.88" y="415.5" ></text>
</g>
<g >
<title>__dynamic_cast (7 samples, 0.11%)</title><rect x="102.7" y="1621" width="1.3" height="15.0" fill="rgb(209,202,42)" rx="2" ry="2" />
<text  x="105.71" y="1631.5" ></text>
</g>
<g >
<title>clear_page_erms (3 samples, 0.05%)</title><rect x="699.0" y="1749" width="0.6" height="15.0" fill="rgb(216,29,12)" rx="2" ry="2" />
<text  x="702.01" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="891.8" y="1109" width="0.1" height="15.0" fill="rgb(215,87,18)" rx="2" ry="2" />
<text  x="894.76" y="1119.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="1669" width="0.4" height="15.0" fill="rgb(236,87,49)" rx="2" ry="2" />
<text  x="77.88" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="629" width="0.4" height="15.0" fill="rgb(232,161,13)" rx="2" ry="2" />
<text  x="77.88" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="192.4" y="869" width="0.2" height="15.0" fill="rgb(223,54,39)" rx="2" ry="2" />
<text  x="195.41" y="879.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="751.7" y="1877" width="0.1" height="15.0" fill="rgb(254,73,23)" rx="2" ry="2" />
<text  x="754.66" y="1887.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::dump (2 samples, 0.03%)</title><rect x="572.5" y="2005" width="0.3" height="15.0" fill="rgb(237,80,48)" rx="2" ry="2" />
<text  x="575.45" y="2015.5" ></text>
</g>
<g >
<title>std::operator&gt;&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (16 samples, 0.25%)</title><rect x="856.6" y="2005" width="3.0" height="15.0" fill="rgb(234,186,46)" rx="2" ry="2" />
<text  x="859.59" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="127.2" y="1589" width="0.3" height="15.0" fill="rgb(207,167,42)" rx="2" ry="2" />
<text  x="130.15" y="1599.5" ></text>
</g>
<g >
<title>onmt::unicode::is_letter@plt (2 samples, 0.03%)</title><rect x="733.0" y="1877" width="0.4" height="15.0" fill="rgb(220,90,41)" rx="2" ry="2" />
<text  x="736.04" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="891.8" y="1877" width="0.1" height="15.0" fill="rgb(242,17,4)" rx="2" ry="2" />
<text  x="894.76" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.0" y="1733" width="0.4" height="15.0" fill="rgb(228,74,18)" rx="2" ry="2" />
<text  x="1164.04" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="151.8" y="885" width="0.2" height="15.0" fill="rgb(247,150,42)" rx="2" ry="2" />
<text  x="154.79" y="895.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (6 samples, 0.10%)</title><rect x="33.5" y="1941" width="1.1" height="15.0" fill="rgb(215,206,54)" rx="2" ry="2" />
<text  x="36.51" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="151.8" y="245" width="0.2" height="15.0" fill="rgb(247,52,34)" rx="2" ry="2" />
<text  x="154.79" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="127.2" y="1109" width="0.1" height="15.0" fill="rgb(239,115,47)" rx="2" ry="2" />
<text  x="130.15" y="1119.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="433.3" y="1941" width="0.2" height="15.0" fill="rgb(211,35,8)" rx="2" ry="2" />
<text  x="436.30" y="1951.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::do_tolower (1 samples, 0.02%)</title><rect x="175.9" y="1637" width="0.1" height="15.0" fill="rgb(214,83,50)" rx="2" ry="2" />
<text  x="178.86" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="533" width="0.4" height="15.0" fill="rgb(233,147,19)" rx="2" ry="2" />
<text  x="77.88" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="127.2" y="389" width="0.1" height="15.0" fill="rgb(219,57,13)" rx="2" ry="2" />
<text  x="130.15" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (33 samples, 0.53%)</title><rect x="95.6" y="1733" width="6.2" height="15.0" fill="rgb(219,123,1)" rx="2" ry="2" />
<text  x="98.56" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (33 samples, 0.53%)</title><rect x="170.6" y="1653" width="6.2" height="15.0" fill="rgb(250,185,16)" rx="2" ry="2" />
<text  x="173.59" y="1663.5" ></text>
</g>
<g >
<title>Eigen::PlainObjectBase&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt;::PlainObjectBase&lt;Eigen::Product&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt;, 0&gt; &gt; (1 samples, 0.02%)</title><rect x="153.7" y="1989" width="0.2" height="15.0" fill="rgb(213,148,13)" rx="2" ry="2" />
<text  x="156.67" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="1429" width="0.4" height="15.0" fill="rgb(213,221,39)" rx="2" ry="2" />
<text  x="77.88" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="127.5" y="1221" width="0.4" height="15.0" fill="rgb(227,35,13)" rx="2" ry="2" />
<text  x="130.53" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_try_char (1 samples, 0.02%)</title><rect x="170.2" y="1733" width="0.2" height="15.0" fill="rgb(239,209,47)" rx="2" ry="2" />
<text  x="173.22" y="1743.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::~collate (17 samples, 0.27%)</title><rect x="863.2" y="2037" width="3.2" height="15.0" fill="rgb(249,214,30)" rx="2" ry="2" />
<text  x="866.17" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (153 samples, 2.44%)</title><rect x="154.6" y="1813" width="28.8" height="15.0" fill="rgb(236,206,22)" rx="2" ry="2" />
<text  x="157.61" y="1823.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="192.0" y="1845" width="0.6" height="15.0" fill="rgb(230,27,6)" rx="2" ry="2" />
<text  x="195.03" y="1855.5" ></text>
</g>
<g >
<title>fasttext::NegativeSamplingLoss::NegativeSamplingLoss (8 samples, 0.13%)</title><rect x="841.9" y="2037" width="1.5" height="15.0" fill="rgb(208,180,30)" rx="2" ry="2" />
<text  x="844.92" y="2047.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.03%)</title><rect x="112.1" y="1621" width="0.4" height="15.0" fill="rgb(220,128,34)" rx="2" ry="2" />
<text  x="115.11" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="192.4" y="693" width="0.2" height="15.0" fill="rgb(235,162,35)" rx="2" ry="2" />
<text  x="195.41" y="703.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (3 samples, 0.05%)</title><rect x="106.8" y="1605" width="0.6" height="15.0" fill="rgb(250,97,3)" rx="2" ry="2" />
<text  x="109.84" y="1615.5" ></text>
</g>
<g >
<title>std::__merge_without_buffer&lt;__gnu_cxx::__normal_iterator&lt;TWeightedDoc*, std::vector&lt;TWeightedDoc, std::allocator&lt;TWeightedDoc&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;TNewsCluster::SortByWeights (142 samples, 2.26%)</title><rect x="1161.8" y="2053" width="26.7" height="15.0" fill="rgb(218,64,45)" rx="2" ry="2" />
<text  x="1164.79" y="2063.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.0" y="373" width="0.4" height="15.0" fill="rgb(220,226,54)" rx="2" ry="2" />
<text  x="1164.04" y="383.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2 samples, 0.03%)</title><rect x="407.9" y="1861" width="0.4" height="15.0" fill="rgb(231,4,27)" rx="2" ry="2" />
<text  x="410.91" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="127.2" y="1141" width="0.1" height="15.0" fill="rgb(231,114,24)" rx="2" ry="2" />
<text  x="130.15" y="1151.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="1493" width="0.4" height="15.0" fill="rgb(241,49,41)" rx="2" ry="2" />
<text  x="77.88" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="192.4" y="1013" width="0.2" height="15.0" fill="rgb(228,25,49)" rx="2" ry="2" />
<text  x="195.41" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="891.8" y="501" width="0.1" height="15.0" fill="rgb(249,34,30)" rx="2" ry="2" />
<text  x="894.76" y="511.5" ></text>
</g>
<g >
<title>release_pages (1 samples, 0.02%)</title><rect x="419.4" y="1829" width="0.2" height="15.0" fill="rgb(215,61,49)" rx="2" ry="2" />
<text  x="422.38" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="891.8" y="1365" width="0.1" height="15.0" fill="rgb(218,192,35)" rx="2" ry="2" />
<text  x="894.76" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="151.8" y="325" width="0.2" height="15.0" fill="rgb(208,97,26)" rx="2" ry="2" />
<text  x="154.79" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.4" y="53" width="0.4" height="15.0" fill="rgb(205,227,34)" rx="2" ry="2" />
<text  x="1164.42" y="63.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="127.5" y="773" width="0.4" height="15.0" fill="rgb(211,27,13)" rx="2" ry="2" />
<text  x="130.53" y="783.5" ></text>
</g>
<g >
<title>copy_page_to_iter (3 samples, 0.05%)</title><rect x="891.2" y="1893" width="0.6" height="15.0" fill="rgb(219,196,46)" rx="2" ry="2" />
<text  x="894.19" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.0" y="1669" width="0.4" height="15.0" fill="rgb(243,213,37)" rx="2" ry="2" />
<text  x="1164.04" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="127.2" y="1733" width="0.3" height="15.0" fill="rgb(234,3,22)" rx="2" ry="2" />
<text  x="130.15" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="1285" width="0.4" height="15.0" fill="rgb(226,86,14)" rx="2" ry="2" />
<text  x="77.88" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="152.0" y="1237" width="0.2" height="15.0" fill="rgb(217,133,21)" rx="2" ry="2" />
<text  x="154.98" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="192.4" y="917" width="0.2" height="15.0" fill="rgb(251,219,29)" rx="2" ry="2" />
<text  x="195.41" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.0" y="1717" width="0.4" height="15.0" fill="rgb(225,99,8)" rx="2" ry="2" />
<text  x="1164.04" y="1727.5" ></text>
</g>
<g >
<title>strcmp@plt (7 samples, 0.11%)</title><rect x="1187.2" y="2037" width="1.3" height="15.0" fill="rgb(248,183,18)" rx="2" ry="2" />
<text  x="1190.18" y="2047.5" ></text>
</g>
<g >
<title>__do_page_fault (4 samples, 0.06%)</title><rect x="666.1" y="1829" width="0.8" height="15.0" fill="rgb(250,185,31)" rx="2" ry="2" />
<text  x="669.10" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.08%)</title><rect x="127.0" y="1861" width="0.9" height="15.0" fill="rgb(231,77,46)" rx="2" ry="2" />
<text  x="129.97" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="1141" width="0.4" height="15.0" fill="rgb(237,148,39)" rx="2" ry="2" />
<text  x="77.88" y="1151.5" ></text>
</g>
<g >
<title>wake_up_q (11 samples, 0.18%)</title><rect x="40.1" y="1925" width="2.1" height="15.0" fill="rgb(221,227,42)" rx="2" ry="2" />
<text  x="43.09" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (19 samples, 0.30%)</title><rect x="128.1" y="1701" width="3.6" height="15.0" fill="rgb(216,166,45)" rx="2" ry="2" />
<text  x="131.09" y="1711.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (9 samples, 0.14%)</title><rect x="832.7" y="1893" width="1.7" height="15.0" fill="rgb(231,154,8)" rx="2" ry="2" />
<text  x="835.71" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="192.4" y="1381" width="0.2" height="15.0" fill="rgb(225,213,16)" rx="2" ry="2" />
<text  x="195.41" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.4" y="85" width="0.4" height="15.0" fill="rgb(251,16,42)" rx="2" ry="2" />
<text  x="1164.42" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="192.2" y="1525" width="0.4" height="15.0" fill="rgb(229,211,32)" rx="2" ry="2" />
<text  x="195.22" y="1535.5" ></text>
</g>
<g >
<title>cfree (3 samples, 0.05%)</title><rect x="110.2" y="1637" width="0.6" height="15.0" fill="rgb(221,197,15)" rx="2" ry="2" />
<text  x="113.23" y="1647.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace_aux (2 samples, 0.03%)</title><rect x="1134.3" y="2053" width="0.4" height="15.0" fill="rgb(221,56,39)" rx="2" ry="2" />
<text  x="1137.34" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.0" y="981" width="0.4" height="15.0" fill="rgb(229,214,15)" rx="2" ry="2" />
<text  x="1164.04" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="192.4" y="1301" width="0.2" height="15.0" fill="rgb(209,184,12)" rx="2" ry="2" />
<text  x="195.41" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="152.0" y="597" width="0.2" height="15.0" fill="rgb(233,166,22)" rx="2" ry="2" />
<text  x="154.98" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.4" y="1301" width="0.4" height="15.0" fill="rgb(224,91,2)" rx="2" ry="2" />
<text  x="1164.42" y="1311.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (4 samples, 0.06%)</title><rect x="174.9" y="1621" width="0.8" height="15.0" fill="rgb(212,2,3)" rx="2" ry="2" />
<text  x="177.92" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.0" y="757" width="0.4" height="15.0" fill="rgb(217,64,49)" rx="2" ry="2" />
<text  x="1164.04" y="767.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="32.6" y="2037" width="0.2" height="15.0" fill="rgb(236,157,27)" rx="2" ry="2" />
<text  x="35.57" y="2047.5" ></text>
</g>
<g >
<title>TDocument::TDocument (2 samples, 0.03%)</title><rect x="325.9" y="2005" width="0.4" height="15.0" fill="rgb(212,97,24)" rx="2" ry="2" />
<text  x="328.92" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (50 samples, 0.80%)</title><rect x="128.1" y="1749" width="9.4" height="15.0" fill="rgb(207,118,1)" rx="2" ry="2" />
<text  x="131.09" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.4" y="1813" width="0.4" height="15.0" fill="rgb(244,181,32)" rx="2" ry="2" />
<text  x="1164.42" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="151.8" y="917" width="0.2" height="15.0" fill="rgb(219,122,20)" rx="2" ry="2" />
<text  x="154.79" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="891.8" y="1333" width="0.1" height="15.0" fill="rgb(236,180,18)" rx="2" ry="2" />
<text  x="894.76" y="1343.5" ></text>
</g>
<g >
<title>mem_cgroup_commit_charge (1 samples, 0.02%)</title><rect x="80.5" y="1893" width="0.2" height="15.0" fill="rgb(246,209,41)" rx="2" ry="2" />
<text  x="83.52" y="1903.5" ></text>
</g>
<g >
<title>__handle_mm_fault (27 samples, 0.43%)</title><rect x="406.8" y="1877" width="5.1" height="15.0" fill="rgb(249,2,11)" rx="2" ry="2" />
<text  x="409.78" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="1653" width="0.4" height="15.0" fill="rgb(247,10,2)" rx="2" ry="2" />
<text  x="77.88" y="1663.5" ></text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.02%)</title><rect x="843.1" y="1909" width="0.1" height="15.0" fill="rgb(210,196,3)" rx="2" ry="2" />
<text  x="846.05" y="1919.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (1 samples, 0.02%)</title><rect x="433.3" y="1797" width="0.2" height="15.0" fill="rgb(222,127,1)" rx="2" ry="2" />
<text  x="436.30" y="1807.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (21 samples, 0.33%)</title><rect x="70.9" y="2037" width="4.0" height="15.0" fill="rgb(222,189,33)" rx="2" ry="2" />
<text  x="73.93" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1161.2" y="69" width="0.2" height="15.0" fill="rgb(222,86,46)" rx="2" ry="2" />
<text  x="1164.23" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="891.8" y="917" width="0.1" height="15.0" fill="rgb(239,215,50)" rx="2" ry="2" />
<text  x="894.76" y="927.5" ></text>
</g>
<g >
<title>TDocument::PreprocessTextFields (1,392 samples, 22.18%)</title><rect x="576.6" y="1973" width="261.8" height="15.0" fill="rgb(238,119,31)" rx="2" ry="2" />
<text  x="579.59" y="1983.5" >TDocument::PreprocessTextFields</text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="1092.0" y="2005" width="0.2" height="15.0" fill="rgb(219,1,22)" rx="2" ry="2" />
<text  x="1095.03" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="1605" width="0.4" height="15.0" fill="rgb(205,123,25)" rx="2" ry="2" />
<text  x="77.88" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="151.8" y="581" width="0.2" height="15.0" fill="rgb(233,146,27)" rx="2" ry="2" />
<text  x="154.79" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="151.8" y="965" width="0.2" height="15.0" fill="rgb(232,131,11)" rx="2" ry="2" />
<text  x="154.79" y="975.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="1397" width="0.4" height="15.0" fill="rgb(235,61,48)" rx="2" ry="2" />
<text  x="77.88" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (2 samples, 0.03%)</title><rect x="154.6" y="1685" width="0.4" height="15.0" fill="rgb(234,82,37)" rx="2" ry="2" />
<text  x="157.61" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.0" y="1781" width="0.4" height="15.0" fill="rgb(247,225,14)" rx="2" ry="2" />
<text  x="1164.04" y="1791.5" ></text>
</g>
<g >
<title>onmt::CaseModifier::extract_case_type@plt (2 samples, 0.03%)</title><rect x="579.8" y="1909" width="0.4" height="15.0" fill="rgb(229,30,3)" rx="2" ry="2" />
<text  x="582.78" y="1919.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="574.1" y="1829" width="0.2" height="15.0" fill="rgb(241,172,35)" rx="2" ry="2" />
<text  x="577.14" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.0" y="1493" width="0.4" height="15.0" fill="rgb(223,55,50)" rx="2" ry="2" />
<text  x="1164.04" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="127.5" y="1093" width="0.4" height="15.0" fill="rgb(240,217,14)" rx="2" ry="2" />
<text  x="130.53" y="1103.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="837" width="0.4" height="15.0" fill="rgb(236,141,40)" rx="2" ry="2" />
<text  x="77.88" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (35 samples, 0.56%)</title><rect x="183.6" y="1749" width="6.5" height="15.0" fill="rgb(241,183,50)" rx="2" ry="2" />
<text  x="186.57" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (1 samples, 0.02%)</title><rect x="183.4" y="1765" width="0.2" height="15.0" fill="rgb(218,27,40)" rx="2" ry="2" />
<text  x="186.38" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.0" y="1269" width="0.4" height="15.0" fill="rgb(216,76,46)" rx="2" ry="2" />
<text  x="1164.04" y="1279.5" ></text>
</g>
<g >
<title>__handle_mm_fault (16 samples, 0.25%)</title><rect x="32.9" y="1973" width="3.1" height="15.0" fill="rgb(222,70,6)" rx="2" ry="2" />
<text  x="35.94" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.4" y="389" width="0.4" height="15.0" fill="rgb(221,141,17)" rx="2" ry="2" />
<text  x="1164.42" y="399.5" ></text>
</g>
<g >
<title>copy_page_to_iter (3 samples, 0.05%)</title><rect x="79.4" y="1877" width="0.6" height="15.0" fill="rgb(219,89,29)" rx="2" ry="2" />
<text  x="82.39" y="1887.5" ></text>
</g>
<g >
<title>TAgencyRating::ScoreUrl (1 samples, 0.02%)</title><rect x="891.8" y="1989" width="0.1" height="15.0" fill="rgb(229,146,48)" rx="2" ry="2" />
<text  x="894.76" y="1999.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="433.3" y="1957" width="0.2" height="15.0" fill="rgb(251,25,53)" rx="2" ry="2" />
<text  x="436.30" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="1877" width="0.4" height="15.0" fill="rgb(243,70,36)" rx="2" ry="2" />
<text  x="77.88" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="181" width="0.4" height="15.0" fill="rgb(230,142,48)" rx="2" ry="2" />
<text  x="77.88" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="127.5" y="805" width="0.4" height="15.0" fill="rgb(216,43,12)" rx="2" ry="2" />
<text  x="130.53" y="815.5" ></text>
</g>
<g >
<title>do_futex (3 samples, 0.05%)</title><rect x="94.6" y="1909" width="0.6" height="15.0" fill="rgb(242,158,44)" rx="2" ry="2" />
<text  x="97.62" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="152.0" y="357" width="0.2" height="15.0" fill="rgb(244,146,35)" rx="2" ry="2" />
<text  x="154.98" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="152.0" y="517" width="0.2" height="15.0" fill="rgb(229,159,25)" rx="2" ry="2" />
<text  x="154.98" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.0" y="1285" width="0.4" height="15.0" fill="rgb(213,223,8)" rx="2" ry="2" />
<text  x="1164.04" y="1295.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (4 samples, 0.06%)</title><rect x="35.2" y="1957" width="0.8" height="15.0" fill="rgb(221,191,48)" rx="2" ry="2" />
<text  x="38.20" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.0" y="1093" width="0.4" height="15.0" fill="rgb(236,73,13)" rx="2" ry="2" />
<text  x="1164.04" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="127.3" y="1445" width="0.2" height="15.0" fill="rgb(213,55,15)" rx="2" ry="2" />
<text  x="130.34" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (25 samples, 0.40%)</title><rect x="146.3" y="1733" width="4.7" height="15.0" fill="rgb(205,159,33)" rx="2" ry="2" />
<text  x="149.33" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.0" y="1413" width="0.4" height="15.0" fill="rgb(238,45,28)" rx="2" ry="2" />
<text  x="1164.04" y="1423.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::_Bind&lt;Annotate (1,407 samples, 22.42%)</title><rect x="575.1" y="1989" width="264.6" height="15.0" fill="rgb(230,196,11)" rx="2" ry="2" />
<text  x="578.08" y="1999.5" >std::__invoke&lt;std::_Bind&lt;Annotate</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (35 samples, 0.56%)</title><rect x="170.4" y="1733" width="6.6" height="15.0" fill="rgb(239,48,22)" rx="2" ry="2" />
<text  x="173.40" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="152.0" y="1109" width="0.2" height="15.0" fill="rgb(247,42,3)" rx="2" ry="2" />
<text  x="154.98" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="192.4" y="1125" width="0.2" height="15.0" fill="rgb(209,29,32)" rx="2" ry="2" />
<text  x="195.41" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="127.2" y="773" width="0.1" height="15.0" fill="rgb(228,142,19)" rx="2" ry="2" />
<text  x="130.15" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="891.8" y="1845" width="0.1" height="15.0" fill="rgb(252,47,42)" rx="2" ry="2" />
<text  x="894.76" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.4" y="1013" width="0.4" height="15.0" fill="rgb(237,22,13)" rx="2" ry="2" />
<text  x="1164.42" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (165 samples, 2.63%)</title><rect x="95.6" y="1877" width="31.0" height="15.0" fill="rgb(231,136,19)" rx="2" ry="2" />
<text  x="98.56" y="1887.5" >st..</text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="1893" width="0.4" height="15.0" fill="rgb(224,181,15)" rx="2" ry="2" />
<text  x="77.88" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.4" y="693" width="0.4" height="15.0" fill="rgb(209,121,1)" rx="2" ry="2" />
<text  x="1164.42" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="127.5" y="1669" width="0.4" height="15.0" fill="rgb(240,98,53)" rx="2" ry="2" />
<text  x="130.53" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="1461" width="0.4" height="15.0" fill="rgb(228,108,19)" rx="2" ry="2" />
<text  x="77.88" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.06%)</title><rect x="127.2" y="1781" width="0.7" height="15.0" fill="rgb(206,155,39)" rx="2" ry="2" />
<text  x="130.15" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (190 samples, 3.03%)</title><rect x="154.6" y="1845" width="35.7" height="15.0" fill="rgb(241,190,50)" rx="2" ry="2" />
<text  x="157.61" y="1855.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="151.6" y="1765" width="0.6" height="15.0" fill="rgb(221,13,31)" rx="2" ry="2" />
<text  x="154.60" y="1775.5" ></text>
</g>
<g >
<title>try_to_wake_up (11 samples, 0.18%)</title><rect x="40.1" y="1909" width="2.1" height="15.0" fill="rgb(245,123,27)" rx="2" ry="2" />
<text  x="43.09" y="1919.5" ></text>
</g>
<g >
<title>fasttext::ProductQuantizer::addcode (35 samples, 0.56%)</title><rect x="843.4" y="2037" width="6.6" height="15.0" fill="rgb(227,204,30)" rx="2" ry="2" />
<text  x="846.43" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (32 samples, 0.51%)</title><rect x="95.7" y="1605" width="6.1" height="15.0" fill="rgb(224,126,27)" rx="2" ry="2" />
<text  x="98.75" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="192.4" y="661" width="0.2" height="15.0" fill="rgb(249,180,25)" rx="2" ry="2" />
<text  x="195.41" y="671.5" ></text>
</g>
<g >
<title>std::__merge_sort_with_buffer&lt;__gnu_cxx::__normal_iterator&lt;TDocument*, std::vector&lt;TDocument, std::allocator&lt;TDocument&gt; &gt; &gt;, TDocument*, __gnu_cxx::__ops::_Iter_comp_iter&lt;main::$_0&gt; &gt; (2 samples, 0.03%)</title><rect x="573.8" y="1989" width="0.3" height="15.0" fill="rgb(228,135,8)" rx="2" ry="2" />
<text  x="576.77" y="1999.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1140.4" y="1989" width="0.1" height="15.0" fill="rgb(246,82,54)" rx="2" ry="2" />
<text  x="1143.36" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="151.8" y="1077" width="0.2" height="15.0" fill="rgb(214,140,39)" rx="2" ry="2" />
<text  x="154.79" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.0" y="517" width="0.4" height="15.0" fill="rgb(207,160,44)" rx="2" ry="2" />
<text  x="1164.04" y="527.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1116.7" y="2021" width="0.1" height="15.0" fill="rgb(236,38,35)" rx="2" ry="2" />
<text  x="1119.66" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.0" y="485" width="0.4" height="15.0" fill="rgb(244,204,50)" rx="2" ry="2" />
<text  x="1164.04" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.0" y="933" width="0.4" height="15.0" fill="rgb(230,184,9)" rx="2" ry="2" />
<text  x="1164.04" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="151.8" y="629" width="0.2" height="15.0" fill="rgb(226,28,36)" rx="2" ry="2" />
<text  x="154.79" y="639.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="70.7" y="1893" width="0.2" height="15.0" fill="rgb(206,126,54)" rx="2" ry="2" />
<text  x="73.74" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.0" y="1509" width="0.4" height="15.0" fill="rgb(250,64,24)" rx="2" ry="2" />
<text  x="1164.04" y="1519.5" ></text>
</g>
<g >
<title>cfree (7 samples, 0.11%)</title><rect x="206.3" y="1989" width="1.3" height="15.0" fill="rgb(218,107,37)" rx="2" ry="2" />
<text  x="209.32" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="127.5" y="1269" width="0.4" height="15.0" fill="rgb(215,87,4)" rx="2" ry="2" />
<text  x="130.53" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="152.0" y="309" width="0.2" height="15.0" fill="rgb(240,92,32)" rx="2" ry="2" />
<text  x="154.98" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="151.8" y="1029" width="0.2" height="15.0" fill="rgb(246,101,45)" rx="2" ry="2" />
<text  x="154.79" y="1039.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::operator[] (2 samples, 0.03%)</title><rect x="93.5" y="1941" width="0.4" height="15.0" fill="rgb(232,59,46)" rx="2" ry="2" />
<text  x="96.49" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.0" y="725" width="0.4" height="15.0" fill="rgb(229,74,7)" rx="2" ry="2" />
<text  x="1164.04" y="735.5" ></text>
</g>
<g >
<title>page_fault (19 samples, 0.30%)</title><rect x="32.8" y="2037" width="3.5" height="15.0" fill="rgb(245,157,36)" rx="2" ry="2" />
<text  x="35.75" y="2047.5" ></text>
</g>
<g >
<title>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::dump (1 samples, 0.02%)</title><rect x="572.6" y="1925" width="0.2" height="15.0" fill="rgb(220,213,22)" rx="2" ry="2" />
<text  x="575.64" y="1935.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="169.3" y="1573" width="0.2" height="15.0" fill="rgb(245,71,23)" rx="2" ry="2" />
<text  x="172.28" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.4" y="517" width="0.4" height="15.0" fill="rgb(249,24,37)" rx="2" ry="2" />
<text  x="1164.42" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="152.0" y="709" width="0.2" height="15.0" fill="rgb(228,86,39)" rx="2" ry="2" />
<text  x="154.98" y="719.5" ></text>
</g>
<g >
<title>Rank (307 samples, 4.89%)</title><rect x="95.2" y="2005" width="57.7" height="15.0" fill="rgb(231,90,17)" rx="2" ry="2" />
<text  x="98.19" y="2015.5" >Rank</text>
</g>
<g >
<title>smp_apic_timer_interrupt (2 samples, 0.03%)</title><rect x="804.5" y="1861" width="0.4" height="15.0" fill="rgb(205,38,48)" rx="2" ry="2" />
<text  x="807.50" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="127.2" y="293" width="0.1" height="15.0" fill="rgb(232,185,45)" rx="2" ry="2" />
<text  x="130.15" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (1 samples, 0.02%)</title><rect x="151.2" y="1877" width="0.2" height="15.0" fill="rgb(236,67,43)" rx="2" ry="2" />
<text  x="154.22" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.0" y="261" width="0.4" height="15.0" fill="rgb(215,137,2)" rx="2" ry="2" />
<text  x="1164.04" y="271.5" ></text>
</g>
<g >
<title>fasttext::QuantMatrix::addRowToVector (2 samples, 0.03%)</title><rect x="78.4" y="2021" width="0.4" height="15.0" fill="rgb(253,112,14)" rx="2" ry="2" />
<text  x="81.45" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="192.4" y="1189" width="0.2" height="15.0" fill="rgb(235,8,22)" rx="2" ry="2" />
<text  x="195.41" y="1199.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::do_tolower (2 samples, 0.03%)</title><rect x="188.8" y="1701" width="0.4" height="15.0" fill="rgb(245,194,18)" rx="2" ry="2" />
<text  x="191.83" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.4" y="373" width="0.4" height="15.0" fill="rgb(229,84,1)" rx="2" ry="2" />
<text  x="1164.42" y="383.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="305.6" y="1973" width="0.2" height="15.0" fill="rgb(241,212,8)" rx="2" ry="2" />
<text  x="308.61" y="1983.5" ></text>
</g>
<g >
<title>__raw_callee_save___pv_queued_spin_unlock (1 samples, 0.02%)</title><rect x="420.3" y="1893" width="0.2" height="15.0" fill="rgb(224,110,2)" rx="2" ry="2" />
<text  x="423.32" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.4" y="1653" width="0.4" height="15.0" fill="rgb(227,219,22)" rx="2" ry="2" />
<text  x="1164.42" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="192.2" y="1589" width="0.4" height="15.0" fill="rgb(225,165,13)" rx="2" ry="2" />
<text  x="195.22" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="192.4" y="1333" width="0.2" height="15.0" fill="rgb(236,5,16)" rx="2" ry="2" />
<text  x="195.41" y="1343.5" ></text>
</g>
<g >
<title>swake_up_one (1 samples, 0.02%)</title><rect x="70.7" y="1909" width="0.2" height="15.0" fill="rgb(240,56,26)" rx="2" ry="2" />
<text  x="73.74" y="1919.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (1 samples, 0.02%)</title><rect x="152.4" y="1957" width="0.1" height="15.0" fill="rgb(224,143,34)" rx="2" ry="2" />
<text  x="155.35" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.0" y="805" width="0.4" height="15.0" fill="rgb(248,62,17)" rx="2" ry="2" />
<text  x="1164.04" y="815.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find@plt (1 samples, 0.02%)</title><rect x="836.8" y="1909" width="0.2" height="15.0" fill="rgb(226,91,0)" rx="2" ry="2" />
<text  x="839.85" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="891.8" y="1525" width="0.1" height="15.0" fill="rgb(238,57,6)" rx="2" ry="2" />
<text  x="894.76" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.0" y="1573" width="0.4" height="15.0" fill="rgb(233,123,19)" rx="2" ry="2" />
<text  x="1164.04" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="1989" width="0.4" height="15.0" fill="rgb(246,51,2)" rx="2" ry="2" />
<text  x="77.88" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="151.8" y="997" width="0.2" height="15.0" fill="rgb(224,111,12)" rx="2" ry="2" />
<text  x="154.79" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="127.2" y="1013" width="0.1" height="15.0" fill="rgb(239,169,6)" rx="2" ry="2" />
<text  x="130.15" y="1023.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="605.4" y="1877" width="0.1" height="15.0" fill="rgb(242,180,15)" rx="2" ry="2" />
<text  x="608.36" y="1887.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1085.8" y="1989" width="0.2" height="15.0" fill="rgb(246,154,11)" rx="2" ry="2" />
<text  x="1088.82" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="891.8" y="1125" width="0.1" height="15.0" fill="rgb(249,66,16)" rx="2" ry="2" />
<text  x="894.76" y="1135.5" ></text>
</g>
<g >
<title>alloc_pages_vma (6 samples, 0.10%)</title><rect x="33.5" y="1957" width="1.1" height="15.0" fill="rgb(249,123,15)" rx="2" ry="2" />
<text  x="36.51" y="1967.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="804.9" y="1861" width="0.2" height="15.0" fill="rgb(244,206,6)" rx="2" ry="2" />
<text  x="807.88" y="1871.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (1 samples, 0.02%)</title><rect x="168.7" y="1605" width="0.2" height="15.0" fill="rgb(208,211,18)" rx="2" ry="2" />
<text  x="171.71" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="192.4" y="773" width="0.2" height="15.0" fill="rgb(250,169,49)" rx="2" ry="2" />
<text  x="195.41" y="783.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (3 samples, 0.05%)</title><rect x="1130.0" y="2053" width="0.6" height="15.0" fill="rgb(232,175,11)" rx="2" ry="2" />
<text  x="1133.01" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.0" y="1397" width="0.4" height="15.0" fill="rgb(216,213,8)" rx="2" ry="2" />
<text  x="1164.04" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Scanner&lt;char&gt;::_Scanner (1 samples, 0.02%)</title><rect x="151.4" y="1909" width="0.2" height="15.0" fill="rgb(206,179,21)" rx="2" ry="2" />
<text  x="154.41" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="127.2" y="741" width="0.1" height="15.0" fill="rgb(220,23,6)" rx="2" ry="2" />
<text  x="130.15" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="127.2" y="437" width="0.1" height="15.0" fill="rgb(215,12,20)" rx="2" ry="2" />
<text  x="130.15" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.4" y="789" width="0.4" height="15.0" fill="rgb(208,199,51)" rx="2" ry="2" />
<text  x="1164.42" y="799.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.02%)</title><rect x="699.8" y="1813" width="0.1" height="15.0" fill="rgb(223,195,38)" rx="2" ry="2" />
<text  x="702.76" y="1823.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (1 samples, 0.02%)</title><rect x="854.3" y="2037" width="0.2" height="15.0" fill="rgb(238,21,9)" rx="2" ry="2" />
<text  x="857.33" y="2047.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="923.2" y="2037" width="0.1" height="15.0" fill="rgb(252,214,48)" rx="2" ry="2" />
<text  x="926.16" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.4" y="1509" width="0.4" height="15.0" fill="rgb(213,99,3)" rx="2" ry="2" />
<text  x="1164.42" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="127.2" y="1573" width="0.3" height="15.0" fill="rgb(218,8,37)" rx="2" ry="2" />
<text  x="130.15" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="127.2" y="1317" width="0.1" height="15.0" fill="rgb(206,59,44)" rx="2" ry="2" />
<text  x="130.15" y="1327.5" ></text>
</g>
<g >
<title>__libc_read (4 samples, 0.06%)</title><rect x="79.4" y="2037" width="0.7" height="15.0" fill="rgb(224,130,10)" rx="2" ry="2" />
<text  x="82.39" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="192.2" y="1493" width="0.2" height="15.0" fill="rgb(252,38,43)" rx="2" ry="2" />
<text  x="195.22" y="1503.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::do_tolower (2 samples, 0.03%)</title><rect x="168.9" y="1621" width="0.4" height="15.0" fill="rgb(231,220,11)" rx="2" ry="2" />
<text  x="171.90" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="127.2" y="1621" width="0.3" height="15.0" fill="rgb(218,141,25)" rx="2" ry="2" />
<text  x="130.15" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.4" y="1365" width="0.4" height="15.0" fill="rgb(207,2,6)" rx="2" ry="2" />
<text  x="1164.42" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="127.5" y="1333" width="0.4" height="15.0" fill="rgb(218,111,54)" rx="2" ry="2" />
<text  x="130.53" y="1343.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (63 samples, 1.00%)</title><rect x="1175.3" y="2037" width="11.9" height="15.0" fill="rgb(221,25,1)" rx="2" ry="2" />
<text  x="1178.33" y="2047.5" ></text>
</g>
<g >
<title>Summarize (920 samples, 14.66%)</title><rect x="152.9" y="2005" width="173.0" height="15.0" fill="rgb(234,110,0)" rx="2" ry="2" />
<text  x="155.92" y="2015.5" >Summarize</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.06%)</title><rect x="191.8" y="1893" width="0.8" height="15.0" fill="rgb(235,173,31)" rx="2" ry="2" />
<text  x="194.84" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="127.2" y="1365" width="0.1" height="15.0" fill="rgb(231,147,37)" rx="2" ry="2" />
<text  x="130.15" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.4" y="101" width="0.4" height="15.0" fill="rgb(228,68,5)" rx="2" ry="2" />
<text  x="1164.42" y="111.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="891.8" y="1637" width="0.1" height="15.0" fill="rgb(247,86,5)" rx="2" ry="2" />
<text  x="894.76" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="192.4" y="965" width="0.2" height="15.0" fill="rgb(217,30,24)" rx="2" ry="2" />
<text  x="195.41" y="975.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.03%)</title><rect x="432.9" y="1973" width="0.4" height="15.0" fill="rgb(235,126,46)" rx="2" ry="2" />
<text  x="435.92" y="1983.5" ></text>
</g>
<g >
<title>std::future&lt;boost::optional&lt;TDocument&gt; &gt;::get (6 samples, 0.10%)</title><rect x="94.1" y="1989" width="1.1" height="15.0" fill="rgb(216,64,20)" rx="2" ry="2" />
<text  x="97.06" y="1999.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (9 samples, 0.14%)</title><rect x="665.2" y="1877" width="1.7" height="15.0" fill="rgb(219,76,20)" rx="2" ry="2" />
<text  x="668.16" y="1887.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="183.8" y="1717" width="0.1" height="15.0" fill="rgb(239,39,14)" rx="2" ry="2" />
<text  x="186.76" y="1727.5" ></text>
</g>
<g >
<title>ComputeClusterWeight (306 samples, 4.88%)</title><rect x="95.2" y="1989" width="57.5" height="15.0" fill="rgb(241,117,28)" rx="2" ry="2" />
<text  x="98.19" y="1999.5" >Comput..</text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (3 samples, 0.05%)</title><rect x="187.9" y="1685" width="0.6" height="15.0" fill="rgb(251,49,29)" rx="2" ry="2" />
<text  x="190.89" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.4" y="1989" width="0.4" height="15.0" fill="rgb(228,44,44)" rx="2" ry="2" />
<text  x="1164.42" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="151.6" y="1637" width="0.6" height="15.0" fill="rgb(223,22,22)" rx="2" ry="2" />
<text  x="154.60" y="1647.5" ></text>
</g>
<g >
<title>__dynamic_cast (5 samples, 0.08%)</title><rect x="205.4" y="1989" width="0.9" height="15.0" fill="rgb(231,201,28)" rx="2" ry="2" />
<text  x="208.38" y="1999.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::basic_json (1 samples, 0.02%)</title><rect x="572.3" y="2005" width="0.2" height="15.0" fill="rgb(233,194,30)" rx="2" ry="2" />
<text  x="575.26" y="2015.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::getId (2 samples, 0.03%)</title><rect x="305.8" y="1989" width="0.4" height="15.0" fill="rgb(250,218,7)" rx="2" ry="2" />
<text  x="308.80" y="1999.5" ></text>
</g>
<g >
<title>unmap_region (1 samples, 0.02%)</title><rect x="433.3" y="1877" width="0.2" height="15.0" fill="rgb(231,10,42)" rx="2" ry="2" />
<text  x="436.30" y="1887.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::_M_transform@plt (4 samples, 0.06%)</title><rect x="1141.5" y="2053" width="0.7" height="15.0" fill="rgb(233,50,40)" rx="2" ry="2" />
<text  x="1144.48" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="891.8" y="1557" width="0.1" height="15.0" fill="rgb(207,214,29)" rx="2" ry="2" />
<text  x="894.76" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (1 samples, 0.02%)</title><rect x="190.7" y="1733" width="0.2" height="15.0" fill="rgb(207,59,40)" rx="2" ry="2" />
<text  x="193.71" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="891.8" y="405" width="0.1" height="15.0" fill="rgb(241,157,12)" rx="2" ry="2" />
<text  x="894.76" y="415.5" ></text>
</g>
<g >
<title>operator delete[] (3 samples, 0.05%)</title><rect x="1114.0" y="2053" width="0.6" height="15.0" fill="rgb(205,178,26)" rx="2" ry="2" />
<text  x="1117.03" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.0" y="661" width="0.4" height="15.0" fill="rgb(209,98,49)" rx="2" ry="2" />
<text  x="1164.04" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (31 samples, 0.49%)</title><rect x="131.7" y="1701" width="5.8" height="15.0" fill="rgb(210,117,13)" rx="2" ry="2" />
<text  x="134.67" y="1711.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::pushHash (227 samples, 3.62%)</title><rect x="997.1" y="2053" width="42.6" height="15.0" fill="rgb(249,42,1)" rx="2" ry="2" />
<text  x="1000.06" y="2063.5" >fast..</text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (1 samples, 0.02%)</title><rect x="183.2" y="1701" width="0.2" height="15.0" fill="rgb(221,220,21)" rx="2" ry="2" />
<text  x="186.19" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.4" y="1541" width="0.4" height="15.0" fill="rgb(238,0,35)" rx="2" ry="2" />
<text  x="1164.42" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="152.0" y="261" width="0.2" height="15.0" fill="rgb(238,107,42)" rx="2" ry="2" />
<text  x="154.98" y="271.5" ></text>
</g>
<g >
<title>alloc_pages_vma (3 samples, 0.05%)</title><rect x="699.0" y="1781" width="0.6" height="15.0" fill="rgb(208,34,31)" rx="2" ry="2" />
<text  x="702.01" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="1685" width="0.4" height="15.0" fill="rgb(228,114,4)" rx="2" ry="2" />
<text  x="77.88" y="1695.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::json_value::destroy (1 samples, 0.02%)</title><rect x="573.2" y="1989" width="0.2" height="15.0" fill="rgb(231,136,11)" rx="2" ry="2" />
<text  x="576.20" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="891.8" y="277" width="0.1" height="15.0" fill="rgb(215,203,45)" rx="2" ry="2" />
<text  x="894.76" y="287.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (2 samples, 0.03%)</title><rect x="570.4" y="1813" width="0.4" height="15.0" fill="rgb(248,34,10)" rx="2" ry="2" />
<text  x="573.38" y="1823.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id@plt (1 samples, 0.02%)</title><rect x="145.8" y="1653" width="0.2" height="15.0" fill="rgb(205,9,11)" rx="2" ry="2" />
<text  x="148.77" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (32 samples, 0.51%)</title><rect x="109.1" y="1733" width="6.0" height="15.0" fill="rgb(247,3,19)" rx="2" ry="2" />
<text  x="112.10" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="891.8" y="709" width="0.1" height="15.0" fill="rgb(220,171,3)" rx="2" ry="2" />
<text  x="894.76" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.4" y="149" width="0.4" height="15.0" fill="rgb(219,223,42)" rx="2" ry="2" />
<text  x="1164.42" y="159.5" ></text>
</g>
<g >
<title>cfree (21 samples, 0.33%)</title><rect x="599.7" y="1893" width="4.0" height="15.0" fill="rgb(220,196,30)" rx="2" ry="2" />
<text  x="602.72" y="1903.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="169.3" y="1557" width="0.2" height="15.0" fill="rgb(245,63,26)" rx="2" ry="2" />
<text  x="172.28" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.0" y="1333" width="0.4" height="15.0" fill="rgb(232,226,4)" rx="2" ry="2" />
<text  x="1164.04" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="192.4" y="709" width="0.2" height="15.0" fill="rgb(231,15,35)" rx="2" ry="2" />
<text  x="195.41" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (1 samples, 0.02%)</title><rect x="190.7" y="1749" width="0.2" height="15.0" fill="rgb(242,223,12)" rx="2" ry="2" />
<text  x="193.71" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="1861" width="0.4" height="15.0" fill="rgb(215,4,41)" rx="2" ry="2" />
<text  x="77.88" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="127.5" y="1493" width="0.4" height="15.0" fill="rgb(225,187,49)" rx="2" ry="2" />
<text  x="130.53" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="127.5" y="1365" width="0.4" height="15.0" fill="rgb(247,101,25)" rx="2" ry="2" />
<text  x="130.53" y="1375.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.06%)</title><rect x="891.0" y="2037" width="0.8" height="15.0" fill="rgb(215,7,14)" rx="2" ry="2" />
<text  x="894.00" y="2047.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::has_features@plt (2 samples, 0.03%)</title><rect x="578.7" y="1909" width="0.3" height="15.0" fill="rgb(252,57,10)" rx="2" ry="2" />
<text  x="581.66" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.0" y="677" width="0.4" height="15.0" fill="rgb(244,220,16)" rx="2" ry="2" />
<text  x="1164.04" y="687.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::reserve (3 samples, 0.05%)</title><rect x="635.1" y="1877" width="0.5" height="15.0" fill="rgb(210,156,17)" rx="2" ry="2" />
<text  x="638.07" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="151.6" y="1701" width="0.6" height="15.0" fill="rgb(250,81,10)" rx="2" ry="2" />
<text  x="154.60" y="1711.5" ></text>
</g>
<g >
<title>fasttext::FastText::getDimension (6 samples, 0.10%)</title><rect x="306.7" y="1989" width="1.2" height="15.0" fill="rgb(240,200,0)" rx="2" ry="2" />
<text  x="309.74" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.4" y="597" width="0.4" height="15.0" fill="rgb(237,11,0)" rx="2" ry="2" />
<text  x="1164.42" y="607.5" ></text>
</g>
<g >
<title>onmt::unicode::is_number (9 samples, 0.14%)</title><rect x="806.8" y="1893" width="1.7" height="15.0" fill="rgb(219,21,43)" rx="2" ry="2" />
<text  x="809.76" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="127.2" y="869" width="0.1" height="15.0" fill="rgb(217,132,3)" rx="2" ry="2" />
<text  x="130.15" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.0" y="181" width="0.4" height="15.0" fill="rgb(217,130,7)" rx="2" ry="2" />
<text  x="1164.04" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.08%)</title><rect x="127.0" y="1845" width="0.9" height="15.0" fill="rgb(208,57,26)" rx="2" ry="2" />
<text  x="129.97" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (124 samples, 1.98%)</title><rect x="127.9" y="1845" width="23.3" height="15.0" fill="rgb(245,197,39)" rx="2" ry="2" />
<text  x="130.91" y="1855.5" >s..</text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.02%)</title><rect x="843.1" y="1941" width="0.1" height="15.0" fill="rgb(223,132,8)" rx="2" ry="2" />
<text  x="846.05" y="1951.5" ></text>
</g>
<g >
<title>__dynamic_cast (5 samples, 0.08%)</title><rect x="109.3" y="1637" width="0.9" height="15.0" fill="rgb(220,177,9)" rx="2" ry="2" />
<text  x="112.29" y="1647.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (2 samples, 0.03%)</title><rect x="187.1" y="1685" width="0.4" height="15.0" fill="rgb(225,192,27)" rx="2" ry="2" />
<text  x="190.14" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="127.5" y="1589" width="0.4" height="15.0" fill="rgb(237,222,30)" rx="2" ry="2" />
<text  x="130.53" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (32 samples, 0.51%)</title><rect x="115.1" y="1717" width="6.0" height="15.0" fill="rgb(244,211,7)" rx="2" ry="2" />
<text  x="118.12" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="151.8" y="1093" width="0.2" height="15.0" fill="rgb(240,173,11)" rx="2" ry="2" />
<text  x="154.79" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.0" y="2037" width="0.4" height="15.0" fill="rgb(230,158,23)" rx="2" ry="2" />
<text  x="1164.04" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="151.8" y="1141" width="0.2" height="15.0" fill="rgb(241,121,47)" rx="2" ry="2" />
<text  x="154.79" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="891.8" y="229" width="0.1" height="15.0" fill="rgb(229,180,25)" rx="2" ry="2" />
<text  x="894.76" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (1 samples, 0.02%)</title><rect x="137.3" y="1605" width="0.2" height="15.0" fill="rgb(210,223,50)" rx="2" ry="2" />
<text  x="140.31" y="1615.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (5 samples, 0.08%)</title><rect x="162.1" y="1589" width="1.0" height="15.0" fill="rgb(236,178,9)" rx="2" ry="2" />
<text  x="165.13" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (2 samples, 0.03%)</title><rect x="190.5" y="1829" width="0.4" height="15.0" fill="rgb(225,91,47)" rx="2" ry="2" />
<text  x="193.53" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (8 samples, 0.13%)</title><rect x="129.4" y="1573" width="1.5" height="15.0" fill="rgb(208,148,6)" rx="2" ry="2" />
<text  x="132.41" y="1583.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::basic_json (1 samples, 0.02%)</title><rect x="574.1" y="1877" width="0.2" height="15.0" fill="rgb(227,62,27)" rx="2" ry="2" />
<text  x="577.14" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="891.8" y="1413" width="0.1" height="15.0" fill="rgb(220,92,29)" rx="2" ry="2" />
<text  x="894.76" y="1423.5" ></text>
</g>
<g >
<title>std::ios_base::_M_init (1 samples, 0.02%)</title><rect x="854.9" y="2005" width="0.2" height="15.0" fill="rgb(234,220,32)" rx="2" ry="2" />
<text  x="857.90" y="2015.5" ></text>
</g>
<g >
<title>nlohmann::detail::parser&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::parse (67 samples, 1.07%)</title><rect x="81.3" y="1973" width="12.6" height="15.0" fill="rgb(225,147,45)" rx="2" ry="2" />
<text  x="84.27" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.4" y="421" width="0.4" height="15.0" fill="rgb(222,139,52)" rx="2" ry="2" />
<text  x="1164.42" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="127.5" y="1717" width="0.4" height="15.0" fill="rgb(220,122,48)" rx="2" ry="2" />
<text  x="130.53" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="152.0" y="645" width="0.2" height="15.0" fill="rgb(234,139,37)" rx="2" ry="2" />
<text  x="154.98" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append@plt (5 samples, 0.08%)</title><rect x="822.9" y="1893" width="1.0" height="15.0" fill="rgb(228,50,50)" rx="2" ry="2" />
<text  x="825.93" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="192.2" y="1621" width="0.4" height="15.0" fill="rgb(213,59,45)" rx="2" ry="2" />
<text  x="195.22" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (25 samples, 0.40%)</title><rect x="141.6" y="1733" width="4.7" height="15.0" fill="rgb(221,58,7)" rx="2" ry="2" />
<text  x="144.63" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="192.4" y="981" width="0.2" height="15.0" fill="rgb(230,138,33)" rx="2" ry="2" />
<text  x="195.41" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.4" y="2021" width="0.4" height="15.0" fill="rgb(231,227,29)" rx="2" ry="2" />
<text  x="1164.42" y="2031.5" ></text>
</g>
<g >
<title>cfree (1 samples, 0.02%)</title><rect x="178.7" y="1669" width="0.2" height="15.0" fill="rgb(221,47,22)" rx="2" ry="2" />
<text  x="181.68" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (19 samples, 0.30%)</title><rect x="128.1" y="1653" width="3.6" height="15.0" fill="rgb(205,166,5)" rx="2" ry="2" />
<text  x="131.09" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.4" y="997" width="0.4" height="15.0" fill="rgb(244,117,51)" rx="2" ry="2" />
<text  x="1164.42" y="1007.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (1 samples, 0.02%)</title><rect x="699.6" y="1781" width="0.2" height="15.0" fill="rgb(216,205,17)" rx="2" ry="2" />
<text  x="702.57" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt;,  (4 samples, 0.06%)</title><rect x="191.8" y="1957" width="0.8" height="15.0" fill="rgb(219,120,42)" rx="2" ry="2" />
<text  x="194.84" y="1967.5" ></text>
</g>
<g >
<title>tlb_flush_mmu_free (1 samples, 0.02%)</title><rect x="433.3" y="1813" width="0.2" height="15.0" fill="rgb(239,162,4)" rx="2" ry="2" />
<text  x="436.30" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (39 samples, 0.62%)</title><rect x="101.8" y="1685" width="7.3" height="15.0" fill="rgb(219,15,9)" rx="2" ry="2" />
<text  x="104.77" y="1695.5" ></text>
</g>
<g >
<title>unmap_region (2 samples, 0.03%)</title><rect x="570.4" y="1893" width="0.4" height="15.0" fill="rgb(221,199,53)" rx="2" ry="2" />
<text  x="573.38" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.0" y="901" width="0.4" height="15.0" fill="rgb(230,96,30)" rx="2" ry="2" />
<text  x="1164.04" y="911.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="1125" width="0.4" height="15.0" fill="rgb(227,96,20)" rx="2" ry="2" />
<text  x="77.88" y="1135.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="1173" width="0.4" height="15.0" fill="rgb(230,1,22)" rx="2" ry="2" />
<text  x="77.88" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="127.5" y="1397" width="0.4" height="15.0" fill="rgb(239,74,36)" rx="2" ry="2" />
<text  x="130.53" y="1407.5" ></text>
</g>
<g >
<title>nlohmann::detail::input_stream_adapter::get_character (1 samples, 0.02%)</title><rect x="93.3" y="1893" width="0.2" height="15.0" fill="rgb(221,15,17)" rx="2" ry="2" />
<text  x="96.31" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="151.8" y="869" width="0.2" height="15.0" fill="rgb(236,154,35)" rx="2" ry="2" />
<text  x="154.79" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (36 samples, 0.57%)</title><rect x="170.4" y="1765" width="6.8" height="15.0" fill="rgb(246,101,32)" rx="2" ry="2" />
<text  x="173.40" y="1775.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.03%)</title><rect x="634.7" y="1877" width="0.4" height="15.0" fill="rgb(237,24,54)" rx="2" ry="2" />
<text  x="637.69" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="53" width="0.4" height="15.0" fill="rgb(232,5,41)" rx="2" ry="2" />
<text  x="77.88" y="63.5" ></text>
</g>
<g >
<title>GetHost (1 samples, 0.02%)</title><rect x="891.8" y="1973" width="0.1" height="15.0" fill="rgb(248,16,15)" rx="2" ry="2" />
<text  x="894.76" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="151.8" y="533" width="0.2" height="15.0" fill="rgb(216,174,45)" rx="2" ry="2" />
<text  x="154.79" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="127.2" y="1509" width="0.3" height="15.0" fill="rgb(248,106,30)" rx="2" ry="2" />
<text  x="130.15" y="1519.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="698.1" y="1861" width="0.2" height="15.0" fill="rgb(228,46,37)" rx="2" ry="2" />
<text  x="701.07" y="1871.5" ></text>
</g>
<g >
<title>free_unref_page_prepare.part.72 (1 samples, 0.02%)</title><rect x="570.6" y="1765" width="0.2" height="15.0" fill="rgb(241,179,9)" rx="2" ry="2" />
<text  x="573.57" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.4" y="1861" width="0.4" height="15.0" fill="rgb(244,19,48)" rx="2" ry="2" />
<text  x="1164.42" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="192.4" y="1061" width="0.2" height="15.0" fill="rgb(209,32,37)" rx="2" ry="2" />
<text  x="195.41" y="1071.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="804.5" y="1845" width="0.4" height="15.0" fill="rgb(252,35,24)" rx="2" ry="2" />
<text  x="807.50" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="127.2" y="1093" width="0.1" height="15.0" fill="rgb(237,125,49)" rx="2" ry="2" />
<text  x="130.15" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.4" y="229" width="0.4" height="15.0" fill="rgb(233,174,47)" rx="2" ry="2" />
<text  x="1164.42" y="239.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="933" width="0.4" height="15.0" fill="rgb(218,88,8)" rx="2" ry="2" />
<text  x="77.88" y="943.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="843.1" y="1925" width="0.1" height="15.0" fill="rgb(252,199,16)" rx="2" ry="2" />
<text  x="846.05" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.4" y="661" width="0.4" height="15.0" fill="rgb(207,198,3)" rx="2" ry="2" />
<text  x="1164.42" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="151.8" y="1253" width="0.2" height="15.0" fill="rgb(231,17,15)" rx="2" ry="2" />
<text  x="154.79" y="1263.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="605.4" y="1845" width="0.1" height="15.0" fill="rgb(213,182,28)" rx="2" ry="2" />
<text  x="608.36" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="192.4" y="1221" width="0.2" height="15.0" fill="rgb(242,47,1)" rx="2" ry="2" />
<text  x="195.41" y="1231.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="70.7" y="2021" width="0.2" height="15.0" fill="rgb(207,219,1)" rx="2" ry="2" />
<text  x="73.74" y="2031.5" ></text>
</g>
<g >
<title>malloc (2 samples, 0.03%)</title><rect x="143.3" y="1653" width="0.4" height="15.0" fill="rgb(240,3,3)" rx="2" ry="2" />
<text  x="146.33" y="1663.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (2 samples, 0.03%)</title><rect x="181.5" y="1653" width="0.4" height="15.0" fill="rgb(247,219,13)" rx="2" ry="2" />
<text  x="184.50" y="1663.5" ></text>
</g>
<g >
<title>onmt::unicode::get_case (13 samples, 0.21%)</title><rect x="699.9" y="1877" width="2.5" height="15.0" fill="rgb(227,46,39)" rx="2" ry="2" />
<text  x="702.95" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="1093" width="0.4" height="15.0" fill="rgb(238,221,16)" rx="2" ry="2" />
<text  x="77.88" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="151.8" y="1045" width="0.2" height="15.0" fill="rgb(205,181,30)" rx="2" ry="2" />
<text  x="154.79" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (2 samples, 0.03%)</title><rect x="121.1" y="1749" width="0.4" height="15.0" fill="rgb(214,62,25)" rx="2" ry="2" />
<text  x="124.14" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="151.6" y="1429" width="0.6" height="15.0" fill="rgb(211,147,52)" rx="2" ry="2" />
<text  x="154.60" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="891.8" y="1829" width="0.1" height="15.0" fill="rgb(232,97,35)" rx="2" ry="2" />
<text  x="894.76" y="1839.5" ></text>
</g>
<g >
<title>std::locale::locale (3 samples, 0.05%)</title><rect x="568.3" y="1973" width="0.6" height="15.0" fill="rgb(241,130,21)" rx="2" ry="2" />
<text  x="571.31" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="192.4" y="1397" width="0.2" height="15.0" fill="rgb(220,100,49)" rx="2" ry="2" />
<text  x="195.41" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="891.8" y="389" width="0.1" height="15.0" fill="rgb(226,223,42)" rx="2" ry="2" />
<text  x="894.76" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_istringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_istringstream@plt (1 samples, 0.02%)</title><rect x="576.4" y="1957" width="0.2" height="15.0" fill="rgb(234,64,2)" rx="2" ry="2" />
<text  x="579.40" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (32 samples, 0.51%)</title><rect x="109.1" y="1701" width="6.0" height="15.0" fill="rgb(241,141,39)" rx="2" ry="2" />
<text  x="112.10" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="1573" width="0.4" height="15.0" fill="rgb(208,223,48)" rx="2" ry="2" />
<text  x="77.88" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_quantifier (1 samples, 0.02%)</title><rect x="131.5" y="1637" width="0.2" height="15.0" fill="rgb(209,94,32)" rx="2" ry="2" />
<text  x="134.48" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="151.6" y="1877" width="0.6" height="15.0" fill="rgb(232,152,49)" rx="2" ry="2" />
<text  x="154.60" y="1887.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.02%)</title><rect x="853.4" y="1989" width="0.2" height="15.0" fill="rgb(239,101,5)" rx="2" ry="2" />
<text  x="856.39" y="1999.5" ></text>
</g>
<g >
<title>clear_page_erms (5 samples, 0.08%)</title><rect x="33.7" y="1925" width="0.9" height="15.0" fill="rgb(232,146,20)" rx="2" ry="2" />
<text  x="36.69" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (83 samples, 1.32%)</title><rect x="154.6" y="1749" width="15.6" height="15.0" fill="rgb(206,218,37)" rx="2" ry="2" />
<text  x="157.61" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="891.8" y="1653" width="0.1" height="15.0" fill="rgb(234,154,17)" rx="2" ry="2" />
<text  x="894.76" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="151.6" y="1573" width="0.6" height="15.0" fill="rgb(246,128,12)" rx="2" ry="2" />
<text  x="154.60" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="151.8" y="821" width="0.2" height="15.0" fill="rgb(232,79,1)" rx="2" ry="2" />
<text  x="154.79" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.4" y="1077" width="0.4" height="15.0" fill="rgb(209,95,33)" rx="2" ry="2" />
<text  x="1164.42" y="1087.5" ></text>
</g>
<g >
<title>Rank (1 samples, 0.02%)</title><rect x="891.8" y="2021" width="0.1" height="15.0" fill="rgb(244,92,18)" rx="2" ry="2" />
<text  x="894.76" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="127.2" y="1349" width="0.1" height="15.0" fill="rgb(206,103,44)" rx="2" ry="2" />
<text  x="130.15" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (35 samples, 0.56%)</title><rect x="163.6" y="1637" width="6.6" height="15.0" fill="rgb(223,127,46)" rx="2" ry="2" />
<text  x="166.64" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.0" y="1957" width="0.4" height="15.0" fill="rgb(251,157,48)" rx="2" ry="2" />
<text  x="1164.04" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (33 samples, 0.53%)</title><rect x="95.6" y="1717" width="6.2" height="15.0" fill="rgb(223,5,17)" rx="2" ry="2" />
<text  x="98.56" y="1727.5" ></text>
</g>
<g >
<title>cfree (2 samples, 0.03%)</title><rect x="165.3" y="1621" width="0.4" height="15.0" fill="rgb(244,101,24)" rx="2" ry="2" />
<text  x="168.33" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="152.0" y="821" width="0.2" height="15.0" fill="rgb(243,147,52)" rx="2" ry="2" />
<text  x="154.98" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="192.4" y="1109" width="0.2" height="15.0" fill="rgb(219,183,4)" rx="2" ry="2" />
<text  x="195.41" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="127.5" y="1061" width="0.4" height="15.0" fill="rgb(237,10,19)" rx="2" ry="2" />
<text  x="130.53" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (165 samples, 2.63%)</title><rect x="95.6" y="1909" width="31.0" height="15.0" fill="rgb(248,157,4)" rx="2" ry="2" />
<text  x="98.56" y="1919.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="127.2" y="1237" width="0.1" height="15.0" fill="rgb(245,38,49)" rx="2" ry="2" />
<text  x="130.15" y="1247.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="501" width="0.4" height="15.0" fill="rgb(240,152,24)" rx="2" ry="2" />
<text  x="77.88" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="151.8" y="741" width="0.2" height="15.0" fill="rgb(211,193,51)" rx="2" ry="2" />
<text  x="154.79" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.06%)</title><rect x="191.8" y="1925" width="0.8" height="15.0" fill="rgb(234,126,54)" rx="2" ry="2" />
<text  x="194.84" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="127.2" y="533" width="0.1" height="15.0" fill="rgb(245,37,13)" rx="2" ry="2" />
<text  x="130.15" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.4" y="821" width="0.4" height="15.0" fill="rgb(214,128,37)" rx="2" ry="2" />
<text  x="1164.42" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="127.2" y="1157" width="0.1" height="15.0" fill="rgb(216,228,13)" rx="2" ry="2" />
<text  x="130.15" y="1167.5" ></text>
</g>
<g >
<title>std::__stable_sort_adaptive&lt;__gnu_cxx::__normal_iterator&lt;TWeightedDoc*, std::vector&lt;TWeightedDoc, std::allocator&lt;TWeightedDoc&gt; &gt; &gt;, TWeightedDoc*, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;TNewsCluster::SortByWeights (1 samples, 0.02%)</title><rect x="201.4" y="1973" width="0.2" height="15.0" fill="rgb(234,35,41)" rx="2" ry="2" />
<text  x="204.43" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="192.2" y="1397" width="0.2" height="15.0" fill="rgb(209,129,19)" rx="2" ry="2" />
<text  x="195.22" y="1407.5" ></text>
</g>
<g >
<title>memcpy@plt (2 samples, 0.03%)</title><rect x="666.9" y="1877" width="0.3" height="15.0" fill="rgb(233,226,13)" rx="2" ry="2" />
<text  x="669.85" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (21 samples, 0.33%)</title><rect x="137.7" y="1637" width="3.9" height="15.0" fill="rgb(212,155,37)" rx="2" ry="2" />
<text  x="140.68" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="192.2" y="1605" width="0.4" height="15.0" fill="rgb(223,8,2)" rx="2" ry="2" />
<text  x="195.22" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="891.8" y="1749" width="0.1" height="15.0" fill="rgb(250,89,20)" rx="2" ry="2" />
<text  x="894.76" y="1759.5" ></text>
</g>
<g >
<title>page_fault (8 samples, 0.13%)</title><rect x="698.3" y="1861" width="1.5" height="15.0" fill="rgb(251,78,27)" rx="2" ry="2" />
<text  x="701.25" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (32 samples, 0.51%)</title><rect x="109.1" y="1685" width="6.0" height="15.0" fill="rgb(241,179,38)" rx="2" ry="2" />
<text  x="112.10" y="1695.5" ></text>
</g>
<g >
<title>schedule (2 samples, 0.03%)</title><rect x="42.2" y="1957" width="0.3" height="15.0" fill="rgb(228,99,43)" rx="2" ry="2" />
<text  x="45.16" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="151.8" y="773" width="0.2" height="15.0" fill="rgb(237,111,14)" rx="2" ry="2" />
<text  x="154.79" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.4" y="741" width="0.4" height="15.0" fill="rgb(245,80,35)" rx="2" ry="2" />
<text  x="1164.42" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.0" y="389" width="0.4" height="15.0" fill="rgb(236,176,22)" rx="2" ry="2" />
<text  x="1164.04" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (14 samples, 0.22%)</title><rect x="166.3" y="1621" width="2.6" height="15.0" fill="rgb(208,222,36)" rx="2" ry="2" />
<text  x="169.27" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="127.5" y="1525" width="0.4" height="15.0" fill="rgb(248,111,2)" rx="2" ry="2" />
<text  x="130.53" y="1535.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (63 samples, 1.00%)</title><rect x="1117.4" y="2053" width="11.9" height="15.0" fill="rgb(235,161,50)" rx="2" ry="2" />
<text  x="1120.41" y="2063.5" ></text>
</g>
<g >
<title>malloc@plt (1 samples, 0.02%)</title><rect x="621.5" y="1877" width="0.2" height="15.0" fill="rgb(212,33,51)" rx="2" ry="2" />
<text  x="624.53" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="151.8" y="1269" width="0.2" height="15.0" fill="rgb(207,80,25)" rx="2" ry="2" />
<text  x="154.79" y="1279.5" ></text>
</g>
<g >
<title>onmt::CaseModifier::extract_case_type (1 samples, 0.02%)</title><rect x="579.6" y="1909" width="0.2" height="15.0" fill="rgb(237,22,32)" rx="2" ry="2" />
<text  x="582.60" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.4" y="1397" width="0.4" height="15.0" fill="rgb(212,24,35)" rx="2" ry="2" />
<text  x="1164.42" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (39 samples, 0.62%)</title><rect x="101.8" y="1653" width="7.3" height="15.0" fill="rgb(240,67,20)" rx="2" ry="2" />
<text  x="104.77" y="1663.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.03%)</title><rect x="99.3" y="1573" width="0.4" height="15.0" fill="rgb(210,163,29)" rx="2" ry="2" />
<text  x="102.32" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="151.8" y="933" width="0.2" height="15.0" fill="rgb(226,85,21)" rx="2" ry="2" />
<text  x="154.79" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="127.2" y="1717" width="0.3" height="15.0" fill="rgb(210,154,24)" rx="2" ry="2" />
<text  x="130.15" y="1727.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_stringbuf (27 samples, 0.43%)</title><rect x="854.5" y="2037" width="5.1" height="15.0" fill="rgb(245,140,29)" rx="2" ry="2" />
<text  x="857.52" y="2047.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="574.0" y="1957" width="0.1" height="15.0" fill="rgb(212,94,54)" rx="2" ry="2" />
<text  x="576.96" y="1967.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt;@plt (1 samples, 0.02%)</title><rect x="176.6" y="1637" width="0.2" height="15.0" fill="rgb(231,187,10)" rx="2" ry="2" />
<text  x="179.61" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="127.5" y="1637" width="0.4" height="15.0" fill="rgb(212,157,25)" rx="2" ry="2" />
<text  x="130.53" y="1647.5" ></text>
</g>
<g >
<title>__schedule (2 samples, 0.03%)</title><rect x="42.2" y="1941" width="0.3" height="15.0" fill="rgb(209,212,39)" rx="2" ry="2" />
<text  x="45.16" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (32 samples, 0.51%)</title><rect x="95.7" y="1653" width="6.1" height="15.0" fill="rgb(250,104,45)" rx="2" ry="2" />
<text  x="98.75" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (18 samples, 0.29%)</title><rect x="185.4" y="1701" width="3.4" height="15.0" fill="rgb(215,22,44)" rx="2" ry="2" />
<text  x="188.45" y="1711.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (1 samples, 0.02%)</title><rect x="188.5" y="1685" width="0.1" height="15.0" fill="rgb(245,162,38)" rx="2" ry="2" />
<text  x="191.46" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="773" width="0.4" height="15.0" fill="rgb(238,115,8)" rx="2" ry="2" />
<text  x="77.88" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.0" y="613" width="0.4" height="15.0" fill="rgb(213,75,13)" rx="2" ry="2" />
<text  x="1164.04" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="152.0" y="1045" width="0.2" height="15.0" fill="rgb(214,14,14)" rx="2" ry="2" />
<text  x="154.98" y="1055.5" ></text>
</g>
<g >
<title>Eigen::internal::gebp_kernel&lt;float, float, long, Eigen::internal::blas_data_mapper&lt;float, long, 0, 0, 1&gt;, 48, 4, false, false&gt;::operator (28 samples, 0.45%)</title><rect x="398.9" y="1909" width="5.2" height="15.0" fill="rgb(249,182,32)" rx="2" ry="2" />
<text  x="401.88" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="127.2" y="581" width="0.1" height="15.0" fill="rgb(234,58,8)" rx="2" ry="2" />
<text  x="130.15" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="127.5" y="949" width="0.4" height="15.0" fill="rgb(226,208,43)" rx="2" ry="2" />
<text  x="130.53" y="959.5" ></text>
</g>
<g >
<title>std::__future_base::_Result_base::~_Result_base (1 samples, 0.02%)</title><rect x="94.4" y="1957" width="0.2" height="15.0" fill="rgb(225,228,14)" rx="2" ry="2" />
<text  x="97.43" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.0" y="1589" width="0.4" height="15.0" fill="rgb(230,121,51)" rx="2" ry="2" />
<text  x="1164.04" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_assertion (1 samples, 0.02%)</title><rect x="170.4" y="1685" width="0.2" height="15.0" fill="rgb(237,183,22)" rx="2" ry="2" />
<text  x="173.40" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="151.6" y="1621" width="0.6" height="15.0" fill="rgb(205,54,46)" rx="2" ry="2" />
<text  x="154.60" y="1631.5" ></text>
</g>
<g >
<title>operator new@plt (1 samples, 0.02%)</title><rect x="576.2" y="1957" width="0.2" height="15.0" fill="rgb(238,208,51)" rx="2" ry="2" />
<text  x="579.21" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (1 samples, 0.02%)</title><rect x="151.0" y="1829" width="0.2" height="15.0" fill="rgb(241,24,42)" rx="2" ry="2" />
<text  x="154.04" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="151.6" y="1653" width="0.6" height="15.0" fill="rgb(226,129,20)" rx="2" ry="2" />
<text  x="154.60" y="1663.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (7 samples, 0.11%)</title><rect x="619.8" y="1877" width="1.4" height="15.0" fill="rgb(251,159,17)" rx="2" ry="2" />
<text  x="622.84" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="891.8" y="1925" width="0.1" height="15.0" fill="rgb(236,203,33)" rx="2" ry="2" />
<text  x="894.76" y="1935.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (23 samples, 0.37%)</title><rect x="1151.1" y="2037" width="4.3" height="15.0" fill="rgb(233,166,32)" rx="2" ry="2" />
<text  x="1154.07" y="2047.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="169.3" y="1605" width="0.2" height="15.0" fill="rgb(219,25,24)" rx="2" ry="2" />
<text  x="172.28" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="192.4" y="1477" width="0.2" height="15.0" fill="rgb(250,31,7)" rx="2" ry="2" />
<text  x="195.41" y="1487.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="133.4" y="1605" width="0.1" height="15.0" fill="rgb(218,182,16)" rx="2" ry="2" />
<text  x="136.36" y="1615.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (7 samples, 0.11%)</title><rect x="863.2" y="1973" width="1.3" height="15.0" fill="rgb(225,50,46)" rx="2" ry="2" />
<text  x="866.17" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="891.8" y="1285" width="0.1" height="15.0" fill="rgb(235,209,24)" rx="2" ry="2" />
<text  x="894.76" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="127.5" y="1429" width="0.4" height="15.0" fill="rgb(232,169,52)" rx="2" ry="2" />
<text  x="130.53" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.0" y="357" width="0.4" height="15.0" fill="rgb(241,121,0)" rx="2" ry="2" />
<text  x="1164.04" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.4" y="1269" width="0.4" height="15.0" fill="rgb(245,32,14)" rx="2" ry="2" />
<text  x="1164.42" y="1279.5" ></text>
</g>
<g >
<title>cfree (4 samples, 0.06%)</title><rect x="157.1" y="1589" width="0.7" height="15.0" fill="rgb(247,49,9)" rx="2" ry="2" />
<text  x="160.05" y="1599.5" ></text>
</g>
<g >
<title>do_exit (1 samples, 0.02%)</title><rect x="923.2" y="1989" width="0.1" height="15.0" fill="rgb(235,170,48)" rx="2" ry="2" />
<text  x="926.16" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="101" width="0.4" height="15.0" fill="rgb(210,221,32)" rx="2" ry="2" />
<text  x="77.88" y="111.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="127.2" y="405" width="0.1" height="15.0" fill="rgb(246,210,19)" rx="2" ry="2" />
<text  x="130.15" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="192.4" y="1269" width="0.2" height="15.0" fill="rgb(205,53,36)" rx="2" ry="2" />
<text  x="195.41" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (50 samples, 0.80%)</title><rect x="128.1" y="1733" width="9.4" height="15.0" fill="rgb(232,161,22)" rx="2" ry="2" />
<text  x="131.09" y="1743.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="70.7" y="1989" width="0.2" height="15.0" fill="rgb(240,98,42)" rx="2" ry="2" />
<text  x="73.74" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="891.8" y="581" width="0.1" height="15.0" fill="rgb(218,132,43)" rx="2" ry="2" />
<text  x="894.76" y="591.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1140.4" y="2037" width="0.1" height="15.0" fill="rgb(210,40,42)" rx="2" ry="2" />
<text  x="1143.36" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="192.2" y="1509" width="0.2" height="15.0" fill="rgb(205,119,34)" rx="2" ry="2" />
<text  x="195.22" y="1519.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="1589" width="0.4" height="15.0" fill="rgb(227,95,0)" rx="2" ry="2" />
<text  x="77.88" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.0" y="1429" width="0.4" height="15.0" fill="rgb(234,203,8)" rx="2" ry="2" />
<text  x="1164.04" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.4" y="69" width="0.4" height="15.0" fill="rgb(228,57,23)" rx="2" ry="2" />
<text  x="1164.42" y="79.5" ></text>
</g>
<g >
<title>cfree (2 samples, 0.03%)</title><rect x="433.5" y="1973" width="0.4" height="15.0" fill="rgb(237,217,15)" rx="2" ry="2" />
<text  x="436.48" y="1983.5" ></text>
</g>
<g >
<title>syscall (15 samples, 0.24%)</title><rect x="39.9" y="2021" width="2.8" height="15.0" fill="rgb(222,80,21)" rx="2" ry="2" />
<text  x="42.90" y="2031.5" ></text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::next_byte_in_range (16 samples, 0.25%)</title><rect x="90.5" y="1925" width="3.0" height="15.0" fill="rgb(229,45,28)" rx="2" ry="2" />
<text  x="93.48" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.4" y="533" width="0.4" height="15.0" fill="rgb(207,222,21)" rx="2" ry="2" />
<text  x="1164.42" y="543.5" ></text>
</g>
<g >
<title>schedule (2 samples, 0.03%)</title><rect x="995.9" y="1989" width="0.4" height="15.0" fill="rgb(233,132,24)" rx="2" ry="2" />
<text  x="998.93" y="1999.5" ></text>
</g>
<g >
<title>generic_file_read_iter (4 samples, 0.06%)</title><rect x="79.4" y="1893" width="0.7" height="15.0" fill="rgb(211,214,25)" rx="2" ry="2" />
<text  x="82.39" y="1903.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="570.4" y="1973" width="0.4" height="15.0" fill="rgb(208,20,51)" rx="2" ry="2" />
<text  x="573.38" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.4" y="1237" width="0.4" height="15.0" fill="rgb(215,99,47)" rx="2" ry="2" />
<text  x="1164.42" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (32 samples, 0.51%)</title><rect x="109.1" y="1717" width="6.0" height="15.0" fill="rgb(226,116,15)" rx="2" ry="2" />
<text  x="112.10" y="1727.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="702.2" y="1861" width="0.2" height="15.0" fill="rgb(226,193,51)" rx="2" ry="2" />
<text  x="705.20" y="1871.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="305.6" y="1941" width="0.2" height="15.0" fill="rgb(243,167,21)" rx="2" ry="2" />
<text  x="308.61" y="1951.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::do_tolower (2 samples, 0.03%)</title><rect x="108.2" y="1621" width="0.3" height="15.0" fill="rgb(207,174,31)" rx="2" ry="2" />
<text  x="111.16" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.4" y="1941" width="0.4" height="15.0" fill="rgb(210,12,30)" rx="2" ry="2" />
<text  x="1164.42" y="1951.5" ></text>
</g>
<g >
<title>__tlb_remove_page_size (1 samples, 0.02%)</title><rect x="891.9" y="1893" width="0.2" height="15.0" fill="rgb(245,57,3)" rx="2" ry="2" />
<text  x="894.94" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="152.0" y="1077" width="0.2" height="15.0" fill="rgb(253,2,31)" rx="2" ry="2" />
<text  x="154.98" y="1087.5" ></text>
</g>
<g >
<title>std::locale::~locale (2 samples, 0.03%)</title><rect x="325.2" y="1989" width="0.3" height="15.0" fill="rgb(216,228,36)" rx="2" ry="2" />
<text  x="328.17" y="1999.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.03%)</title><rect x="818.4" y="1893" width="0.4" height="15.0" fill="rgb(253,122,6)" rx="2" ry="2" />
<text  x="821.42" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.4" y="117" width="0.4" height="15.0" fill="rgb(248,143,30)" rx="2" ry="2" />
<text  x="1164.42" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="127.5" y="1109" width="0.4" height="15.0" fill="rgb(240,35,14)" rx="2" ry="2" />
<text  x="130.53" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.4" y="1909" width="0.4" height="15.0" fill="rgb(225,112,43)" rx="2" ry="2" />
<text  x="1164.42" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="151.6" y="1685" width="0.6" height="15.0" fill="rgb(227,72,6)" rx="2" ry="2" />
<text  x="154.60" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="192.4" y="1205" width="0.2" height="15.0" fill="rgb(246,7,8)" rx="2" ry="2" />
<text  x="195.41" y="1215.5" ></text>
</g>
<g >
<title>rcu_gp_kthread_wake (1 samples, 0.02%)</title><rect x="70.7" y="1925" width="0.2" height="15.0" fill="rgb(253,41,19)" rx="2" ry="2" />
<text  x="73.74" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (25 samples, 0.40%)</title><rect x="141.6" y="1685" width="4.7" height="15.0" fill="rgb(227,22,49)" rx="2" ry="2" />
<text  x="144.63" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="192.4" y="821" width="0.2" height="15.0" fill="rgb(211,22,20)" rx="2" ry="2" />
<text  x="195.41" y="831.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;@plt (1 samples, 0.02%)</title><rect x="853.4" y="2037" width="0.2" height="15.0" fill="rgb(226,185,1)" rx="2" ry="2" />
<text  x="856.39" y="2047.5" ></text>
</g>
<g >
<title>handle_mm_fault (2 samples, 0.03%)</title><rect x="666.5" y="1813" width="0.4" height="15.0" fill="rgb(240,58,29)" rx="2" ry="2" />
<text  x="669.47" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="891.8" y="453" width="0.1" height="15.0" fill="rgb(219,127,33)" rx="2" ry="2" />
<text  x="894.76" y="463.5" ></text>
</g>
<g >
<title>free_unref_page_list (2 samples, 0.03%)</title><rect x="570.4" y="1781" width="0.4" height="15.0" fill="rgb(235,58,26)" rx="2" ry="2" />
<text  x="573.38" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.0" y="501" width="0.4" height="15.0" fill="rgb(227,70,35)" rx="2" ry="2" />
<text  x="1164.04" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (124 samples, 1.98%)</title><rect x="127.9" y="1877" width="23.3" height="15.0" fill="rgb(230,44,11)" rx="2" ry="2" />
<text  x="130.91" y="1887.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="152.0" y="581" width="0.2" height="15.0" fill="rgb(223,199,6)" rx="2" ry="2" />
<text  x="154.98" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.0" y="869" width="0.4" height="15.0" fill="rgb(247,134,41)" rx="2" ry="2" />
<text  x="1164.04" y="879.5" ></text>
</g>
<g >
<title>operator new@plt (2 samples, 0.03%)</title><rect x="1116.8" y="2053" width="0.4" height="15.0" fill="rgb(225,121,41)" rx="2" ry="2" />
<text  x="1119.85" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.0" y="1349" width="0.4" height="15.0" fill="rgb(222,8,4)" rx="2" ry="2" />
<text  x="1164.04" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (19 samples, 0.30%)</title><rect x="128.1" y="1669" width="3.6" height="15.0" fill="rgb(252,74,28)" rx="2" ry="2" />
<text  x="131.09" y="1679.5" ></text>
</g>
<g >
<title>page_fault (4 samples, 0.06%)</title><rect x="666.1" y="1861" width="0.8" height="15.0" fill="rgb(250,83,8)" rx="2" ry="2" />
<text  x="669.10" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="127.2" y="1253" width="0.1" height="15.0" fill="rgb(206,167,54)" rx="2" ry="2" />
<text  x="130.15" y="1263.5" ></text>
</g>
<g >
<title>TFastTextEmbedder::GetSentenceEmbedding (46 samples, 0.73%)</title><rect x="192.6" y="1989" width="8.6" height="15.0" fill="rgb(227,119,43)" rx="2" ry="2" />
<text  x="195.59" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="891.8" y="85" width="0.1" height="15.0" fill="rgb(223,145,26)" rx="2" ry="2" />
<text  x="894.76" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="891.8" y="1269" width="0.1" height="15.0" fill="rgb(212,201,45)" rx="2" ry="2" />
<text  x="894.76" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.4" y="1669" width="0.4" height="15.0" fill="rgb(231,23,49)" rx="2" ry="2" />
<text  x="1164.42" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="891.8" y="149" width="0.1" height="15.0" fill="rgb(229,121,12)" rx="2" ry="2" />
<text  x="894.76" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="192.4" y="645" width="0.2" height="15.0" fill="rgb(234,33,14)" rx="2" ry="2" />
<text  x="195.41" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="127.2" y="1493" width="0.3" height="15.0" fill="rgb(210,156,54)" rx="2" ry="2" />
<text  x="130.15" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="151.8" y="357" width="0.2" height="15.0" fill="rgb(222,21,17)" rx="2" ry="2" />
<text  x="154.79" y="367.5" ></text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::get (6 samples, 0.10%)</title><rect x="92.4" y="1909" width="1.1" height="15.0" fill="rgb(248,79,20)" rx="2" ry="2" />
<text  x="95.36" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="151.8" y="1013" width="0.2" height="15.0" fill="rgb(248,223,11)" rx="2" ry="2" />
<text  x="154.79" y="1023.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.02%)</title><rect x="80.5" y="1973" width="0.2" height="15.0" fill="rgb(224,45,20)" rx="2" ry="2" />
<text  x="83.52" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (22 samples, 0.35%)</title><rect x="137.5" y="1717" width="4.1" height="15.0" fill="rgb(223,94,38)" rx="2" ry="2" />
<text  x="140.50" y="1727.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (3 samples, 0.05%)</title><rect x="101.2" y="1589" width="0.6" height="15.0" fill="rgb(225,13,4)" rx="2" ry="2" />
<text  x="104.20" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="891.8" y="1477" width="0.1" height="15.0" fill="rgb(225,55,39)" rx="2" ry="2" />
<text  x="894.76" y="1487.5" ></text>
</g>
<g >
<title>__dynamic_cast (7 samples, 0.11%)</title><rect x="115.7" y="1669" width="1.3" height="15.0" fill="rgb(217,68,53)" rx="2" ry="2" />
<text  x="118.68" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (13 samples, 0.21%)</title><rect x="133.9" y="1605" width="2.5" height="15.0" fill="rgb(250,131,23)" rx="2" ry="2" />
<text  x="136.92" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.4" y="133" width="0.4" height="15.0" fill="rgb(240,105,16)" rx="2" ry="2" />
<text  x="1164.42" y="143.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (12 samples, 0.19%)</title><rect x="75.4" y="2005" width="2.3" height="15.0" fill="rgb(240,150,23)" rx="2" ry="2" />
<text  x="78.44" y="2015.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="804.9" y="1877" width="0.2" height="15.0" fill="rgb(247,7,8)" rx="2" ry="2" />
<text  x="807.88" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="245" width="0.4" height="15.0" fill="rgb(227,7,4)" rx="2" ry="2" />
<text  x="77.88" y="255.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::getLabel[abi:cxx11] (1 samples, 0.02%)</title><rect x="38.8" y="2005" width="0.2" height="15.0" fill="rgb(249,150,44)" rx="2" ry="2" />
<text  x="41.77" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="192.4" y="1237" width="0.2" height="15.0" fill="rgb(223,76,0)" rx="2" ry="2" />
<text  x="195.41" y="1247.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (2 samples, 0.03%)</title><rect x="42.2" y="1973" width="0.3" height="15.0" fill="rgb(206,60,0)" rx="2" ry="2" />
<text  x="45.16" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.0" y="213" width="0.4" height="15.0" fill="rgb(246,80,9)" rx="2" ry="2" />
<text  x="1164.04" y="223.5" ></text>
</g>
<g >
<title>__do_munmap (1 samples, 0.02%)</title><rect x="433.3" y="1893" width="0.2" height="15.0" fill="rgb(221,57,6)" rx="2" ry="2" />
<text  x="436.30" y="1903.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (2 samples, 0.03%)</title><rect x="120.8" y="1669" width="0.3" height="15.0" fill="rgb(226,98,27)" rx="2" ry="2" />
<text  x="123.76" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="151.6" y="1845" width="0.6" height="15.0" fill="rgb(212,109,35)" rx="2" ry="2" />
<text  x="154.60" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (1 samples, 0.02%)</title><rect x="163.4" y="1637" width="0.2" height="15.0" fill="rgb(226,101,54)" rx="2" ry="2" />
<text  x="166.45" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="151.6" y="1509" width="0.6" height="15.0" fill="rgb(246,141,36)" rx="2" ry="2" />
<text  x="154.60" y="1519.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="853" width="0.4" height="15.0" fill="rgb(227,71,43)" rx="2" ry="2" />
<text  x="77.88" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.4" y="469" width="0.4" height="15.0" fill="rgb(206,123,24)" rx="2" ry="2" />
<text  x="1164.42" y="479.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.03%)</title><rect x="119.4" y="1653" width="0.4" height="15.0" fill="rgb(206,119,41)" rx="2" ry="2" />
<text  x="122.44" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="357" width="0.4" height="15.0" fill="rgb(220,133,44)" rx="2" ry="2" />
<text  x="77.88" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.0" y="565" width="0.4" height="15.0" fill="rgb(206,160,51)" rx="2" ry="2" />
<text  x="1164.04" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (2 samples, 0.03%)</title><rect x="154.6" y="1701" width="0.4" height="15.0" fill="rgb(214,116,36)" rx="2" ry="2" />
<text  x="157.61" y="1711.5" ></text>
</g>
<g >
<title>rcu_report_qs_rnp (1 samples, 0.02%)</title><rect x="70.7" y="1941" width="0.2" height="15.0" fill="rgb(208,117,22)" rx="2" ry="2" />
<text  x="73.74" y="1951.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (4 samples, 0.06%)</title><rect x="891.0" y="1925" width="0.8" height="15.0" fill="rgb(215,180,49)" rx="2" ry="2" />
<text  x="894.00" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.4" y="565" width="0.4" height="15.0" fill="rgb(235,113,34)" rx="2" ry="2" />
<text  x="1164.42" y="575.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="891.9" y="1845" width="0.2" height="15.0" fill="rgb(241,76,51)" rx="2" ry="2" />
<text  x="894.94" y="1855.5" ></text>
</g>
<g >
<title>Preprocess (1,390 samples, 22.15%)</title><rect x="576.6" y="1957" width="261.4" height="15.0" fill="rgb(237,115,11)" rx="2" ry="2" />
<text  x="579.59" y="1967.5" >Preprocess</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.4" y="1925" width="0.4" height="15.0" fill="rgb(240,41,10)" rx="2" ry="2" />
<text  x="1164.42" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="127.2" y="1765" width="0.3" height="15.0" fill="rgb(247,189,6)" rx="2" ry="2" />
<text  x="130.15" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (32 samples, 0.51%)</title><rect x="115.1" y="1749" width="6.0" height="15.0" fill="rgb(250,217,8)" rx="2" ry="2" />
<text  x="118.12" y="1759.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (5 samples, 0.08%)</title><rect x="159.7" y="1573" width="0.9" height="15.0" fill="rgb(235,148,16)" rx="2" ry="2" />
<text  x="162.69" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (32 samples, 0.51%)</title><rect x="95.7" y="1637" width="6.1" height="15.0" fill="rgb(211,126,6)" rx="2" ry="2" />
<text  x="98.75" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="192.0" y="1813" width="0.6" height="15.0" fill="rgb(245,5,18)" rx="2" ry="2" />
<text  x="195.03" y="1823.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::construct&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="574.1" y="1989" width="0.2" height="15.0" fill="rgb(210,97,15)" rx="2" ry="2" />
<text  x="577.14" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (47 samples, 0.75%)</title><rect x="154.6" y="1717" width="8.8" height="15.0" fill="rgb(236,169,44)" rx="2" ry="2" />
<text  x="157.61" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="165" width="0.4" height="15.0" fill="rgb(212,219,14)" rx="2" ry="2" />
<text  x="77.88" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="127.2" y="517" width="0.1" height="15.0" fill="rgb(237,118,13)" rx="2" ry="2" />
<text  x="130.15" y="527.5" ></text>
</g>
<g >
<title>operator new@plt (1 samples, 0.02%)</title><rect x="39.0" y="2005" width="0.1" height="15.0" fill="rgb(247,113,21)" rx="2" ry="2" />
<text  x="41.96" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="151.6" y="1413" width="0.6" height="15.0" fill="rgb(223,191,9)" rx="2" ry="2" />
<text  x="154.60" y="1423.5" ></text>
</g>
<g >
<title>rcu_process_callbacks (1 samples, 0.02%)</title><rect x="1116.7" y="1973" width="0.1" height="15.0" fill="rgb(234,186,4)" rx="2" ry="2" />
<text  x="1119.66" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="421" width="0.4" height="15.0" fill="rgb(250,4,2)" rx="2" ry="2" />
<text  x="77.88" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="891.8" y="997" width="0.1" height="15.0" fill="rgb(216,23,8)" rx="2" ry="2" />
<text  x="894.76" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="192.4" y="901" width="0.2" height="15.0" fill="rgb(237,185,8)" rx="2" ry="2" />
<text  x="195.41" y="911.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="1349" width="0.4" height="15.0" fill="rgb(243,90,24)" rx="2" ry="2" />
<text  x="77.88" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.0" y="1205" width="0.4" height="15.0" fill="rgb(205,14,48)" rx="2" ry="2" />
<text  x="1164.04" y="1215.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="325" width="0.4" height="15.0" fill="rgb(239,214,6)" rx="2" ry="2" />
<text  x="77.88" y="335.5" ></text>
</g>
<g >
<title>[unknown] (17 samples, 0.27%)</title><rect x="863.2" y="2021" width="3.2" height="15.0" fill="rgb(236,95,19)" rx="2" ry="2" />
<text  x="866.17" y="2031.5" ></text>
</g>
<g >
<title>memcpy@plt (2 samples, 0.03%)</title><rect x="621.7" y="1877" width="0.4" height="15.0" fill="rgb(249,168,39)" rx="2" ry="2" />
<text  x="624.72" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="891.8" y="357" width="0.1" height="15.0" fill="rgb(233,157,19)" rx="2" ry="2" />
<text  x="894.76" y="367.5" ></text>
</g>
<g >
<title>__dynamic_cast (6 samples, 0.10%)</title><rect x="164.2" y="1621" width="1.1" height="15.0" fill="rgb(231,31,50)" rx="2" ry="2" />
<text  x="167.20" y="1631.5" ></text>
</g>
<g >
<title>__do_page_fault (19 samples, 0.30%)</title><rect x="32.8" y="2005" width="3.5" height="15.0" fill="rgb(214,221,23)" rx="2" ry="2" />
<text  x="35.75" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.4" y="437" width="0.4" height="15.0" fill="rgb(218,205,50)" rx="2" ry="2" />
<text  x="1164.42" y="447.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="751.7" y="1845" width="0.1" height="15.0" fill="rgb(211,172,14)" rx="2" ry="2" />
<text  x="754.66" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="1205" width="0.4" height="15.0" fill="rgb(242,150,36)" rx="2" ry="2" />
<text  x="77.88" y="1215.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="885" width="0.4" height="15.0" fill="rgb(215,58,9)" rx="2" ry="2" />
<text  x="77.88" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.4" y="485" width="0.4" height="15.0" fill="rgb(233,42,27)" rx="2" ry="2" />
<text  x="1164.42" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (36 samples, 0.57%)</title><rect x="183.4" y="1813" width="6.7" height="15.0" fill="rgb(225,75,50)" rx="2" ry="2" />
<text  x="186.38" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="192.2" y="1477" width="0.2" height="15.0" fill="rgb(219,152,10)" rx="2" ry="2" />
<text  x="195.22" y="1487.5" ></text>
</g>
<g >
<title>__do_munmap (1 samples, 0.02%)</title><rect x="891.9" y="1973" width="0.2" height="15.0" fill="rgb(209,130,6)" rx="2" ry="2" />
<text  x="894.94" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.4" y="677" width="0.4" height="15.0" fill="rgb(216,134,12)" rx="2" ry="2" />
<text  x="1164.42" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="192.2" y="1413" width="0.2" height="15.0" fill="rgb(221,143,4)" rx="2" ry="2" />
<text  x="195.22" y="1423.5" ></text>
</g>
<g >
<title>TSlinkClustering::ClusterBatch (1,298 samples, 20.69%)</title><rect x="326.3" y="1989" width="244.1" height="15.0" fill="rgb(215,171,2)" rx="2" ry="2" />
<text  x="329.30" y="1999.5" >TSlinkClustering::ClusterBatch</text>
</g>
<g >
<title>__dynamic_cast (6 samples, 0.10%)</title><rect x="146.3" y="1685" width="1.2" height="15.0" fill="rgb(241,194,2)" rx="2" ry="2" />
<text  x="149.33" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="151.8" y="453" width="0.2" height="15.0" fill="rgb(215,74,29)" rx="2" ry="2" />
<text  x="154.79" y="463.5" ></text>
</g>
<g >
<title>current_time (1 samples, 0.02%)</title><rect x="80.0" y="1845" width="0.1" height="15.0" fill="rgb(221,149,33)" rx="2" ry="2" />
<text  x="82.95" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.4" y="293" width="0.4" height="15.0" fill="rgb(206,6,36)" rx="2" ry="2" />
<text  x="1164.42" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (19 samples, 0.30%)</title><rect x="859.6" y="2037" width="3.6" height="15.0" fill="rgb(248,215,33)" rx="2" ry="2" />
<text  x="862.60" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.4" y="1221" width="0.4" height="15.0" fill="rgb(251,197,28)" rx="2" ry="2" />
<text  x="1164.42" y="1231.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::_M_do_set (1,408 samples, 22.44%)</title><rect x="574.9" y="2021" width="264.8" height="15.0" fill="rgb(228,21,37)" rx="2" ry="2" />
<text  x="577.90" y="2031.5" >std::__future_base::_State_baseV2::..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="891.8" y="773" width="0.1" height="15.0" fill="rgb(241,116,18)" rx="2" ry="2" />
<text  x="894.76" y="783.5" ></text>
</g>
<g >
<title>std::locale::locale (1 samples, 0.02%)</title><rect x="866.9" y="2005" width="0.2" height="15.0" fill="rgb(228,226,42)" rx="2" ry="2" />
<text  x="869.93" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="891.8" y="725" width="0.1" height="15.0" fill="rgb(214,175,19)" rx="2" ry="2" />
<text  x="894.76" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="192.0" y="1861" width="0.6" height="15.0" fill="rgb(219,220,27)" rx="2" ry="2" />
<text  x="195.03" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (123 samples, 1.96%)</title><rect x="127.9" y="1829" width="23.1" height="15.0" fill="rgb(240,141,40)" rx="2" ry="2" />
<text  x="130.91" y="1839.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="151.8" y="1189" width="0.2" height="15.0" fill="rgb(223,208,50)" rx="2" ry="2" />
<text  x="154.79" y="1199.5" ></text>
</g>
<g >
<title>DetectLanguage[abi:cxx11] (3 samples, 0.05%)</title><rect x="576.0" y="1973" width="0.6" height="15.0" fill="rgb(217,102,44)" rx="2" ry="2" />
<text  x="579.02" y="1983.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::do_tolower (1 samples, 0.02%)</title><rect x="140.9" y="1621" width="0.2" height="15.0" fill="rgb(211,101,46)" rx="2" ry="2" />
<text  x="143.88" y="1631.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.02%)</title><rect x="326.1" y="1973" width="0.2" height="15.0" fill="rgb(241,153,3)" rx="2" ry="2" />
<text  x="329.11" y="1983.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="832.0" y="1829" width="0.1" height="15.0" fill="rgb(237,120,50)" rx="2" ry="2" />
<text  x="834.96" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.0" y="1077" width="0.4" height="15.0" fill="rgb(239,64,8)" rx="2" ry="2" />
<text  x="1164.04" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="152.0" y="933" width="0.2" height="15.0" fill="rgb(223,16,3)" rx="2" ry="2" />
<text  x="154.98" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="151.8" y="421" width="0.2" height="15.0" fill="rgb(253,50,50)" rx="2" ry="2" />
<text  x="154.79" y="431.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (3 samples, 0.05%)</title><rect x="79.4" y="1861" width="0.6" height="15.0" fill="rgb(221,109,53)" rx="2" ry="2" />
<text  x="82.39" y="1871.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append@plt (1 samples, 0.02%)</title><rect x="854.7" y="2005" width="0.2" height="15.0" fill="rgb(254,90,9)" rx="2" ry="2" />
<text  x="857.71" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (18 samples, 0.29%)</title><rect x="128.1" y="1589" width="3.4" height="15.0" fill="rgb(233,50,39)" rx="2" ry="2" />
<text  x="131.09" y="1599.5" ></text>
</g>
<g >
<title>unmap_single_vma (1 samples, 0.02%)</title><rect x="891.9" y="1925" width="0.2" height="15.0" fill="rgb(238,144,28)" rx="2" ry="2" />
<text  x="894.94" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (45 samples, 0.72%)</title><rect x="155.0" y="1669" width="8.4" height="15.0" fill="rgb(252,52,41)" rx="2" ry="2" />
<text  x="157.98" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="309" width="0.4" height="15.0" fill="rgb(219,216,54)" rx="2" ry="2" />
<text  x="77.88" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (166 samples, 2.65%)</title><rect x="95.4" y="1925" width="31.2" height="15.0" fill="rgb(208,172,13)" rx="2" ry="2" />
<text  x="98.37" y="1935.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.4" y="1557" width="0.4" height="15.0" fill="rgb(235,218,16)" rx="2" ry="2" />
<text  x="1164.42" y="1567.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1085.8" y="2037" width="0.2" height="15.0" fill="rgb(247,213,36)" rx="2" ry="2" />
<text  x="1088.82" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.4" y="1493" width="0.4" height="15.0" fill="rgb(207,3,7)" rx="2" ry="2" />
<text  x="1164.42" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="127.5" y="1413" width="0.4" height="15.0" fill="rgb(240,187,1)" rx="2" ry="2" />
<text  x="130.53" y="1423.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="70.7" y="1973" width="0.2" height="15.0" fill="rgb(250,21,14)" rx="2" ry="2" />
<text  x="73.74" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="581" width="0.4" height="15.0" fill="rgb(230,135,7)" rx="2" ry="2" />
<text  x="77.88" y="591.5" ></text>
</g>
<g >
<title>[unknown] (27 samples, 0.43%)</title><rect x="854.5" y="2021" width="5.1" height="15.0" fill="rgb(224,222,43)" rx="2" ry="2" />
<text  x="857.52" y="2031.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::create&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="81.3" y="1925" width="0.2" height="15.0" fill="rgb(250,55,42)" rx="2" ry="2" />
<text  x="84.27" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="152.0" y="325" width="0.2" height="15.0" fill="rgb(214,156,44)" rx="2" ry="2" />
<text  x="154.98" y="335.5" ></text>
</g>
<g >
<title>cfree (1 samples, 0.02%)</title><rect x="97.4" y="1589" width="0.2" height="15.0" fill="rgb(248,44,34)" rx="2" ry="2" />
<text  x="100.44" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (32 samples, 0.51%)</title><rect x="115.1" y="1701" width="6.0" height="15.0" fill="rgb(211,56,7)" rx="2" ry="2" />
<text  x="118.12" y="1711.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (1 samples, 0.02%)</title><rect x="114.4" y="1637" width="0.2" height="15.0" fill="rgb(236,23,49)" rx="2" ry="2" />
<text  x="117.37" y="1647.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.02%)</title><rect x="702.2" y="1813" width="0.2" height="15.0" fill="rgb(253,144,10)" rx="2" ry="2" />
<text  x="705.20" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="891.8" y="949" width="0.1" height="15.0" fill="rgb(226,72,47)" rx="2" ry="2" />
<text  x="894.76" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.4" y="405" width="0.4" height="15.0" fill="rgb(241,120,47)" rx="2" ry="2" />
<text  x="1164.42" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="151.6" y="1717" width="0.6" height="15.0" fill="rgb(208,42,10)" rx="2" ry="2" />
<text  x="154.60" y="1727.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="305.6" y="1957" width="0.2" height="15.0" fill="rgb(240,198,51)" rx="2" ry="2" />
<text  x="308.61" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt;,  (7 samples, 0.11%)</title><rect x="126.6" y="1957" width="1.3" height="15.0" fill="rgb(236,56,10)" rx="2" ry="2" />
<text  x="129.59" y="1967.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (1 samples, 0.02%)</title><rect x="891.8" y="37" width="0.1" height="15.0" fill="rgb(244,102,52)" rx="2" ry="2" />
<text  x="894.76" y="47.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.02%)</title><rect x="699.8" y="1797" width="0.1" height="15.0" fill="rgb(254,11,42)" rx="2" ry="2" />
<text  x="702.76" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="891.8" y="293" width="0.1" height="15.0" fill="rgb(211,96,15)" rx="2" ry="2" />
<text  x="894.76" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="127.2" y="1669" width="0.3" height="15.0" fill="rgb(234,46,27)" rx="2" ry="2" />
<text  x="130.15" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="192.4" y="1509" width="0.2" height="15.0" fill="rgb(208,227,40)" rx="2" ry="2" />
<text  x="195.41" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (45 samples, 0.72%)</title><rect x="155.0" y="1637" width="8.4" height="15.0" fill="rgb(210,180,28)" rx="2" ry="2" />
<text  x="157.98" y="1647.5" ></text>
</g>
<g >
<title>onmt::Tokenizer::tokenize (1,332 samples, 21.23%)</title><rect x="585.6" y="1909" width="250.5" height="15.0" fill="rgb(249,8,41)" rx="2" ry="2" />
<text  x="588.61" y="1919.5" >onmt::Tokenizer::tokenize</text>
</g>
<g >
<title>std::ctype&lt;char&gt;::do_tolower (2 samples, 0.03%)</title><rect x="136.4" y="1605" width="0.3" height="15.0" fill="rgb(250,224,39)" rx="2" ry="2" />
<text  x="139.37" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="192.2" y="1749" width="0.4" height="15.0" fill="rgb(246,24,39)" rx="2" ry="2" />
<text  x="195.22" y="1759.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::basic_json (1 samples, 0.02%)</title><rect x="574.1" y="1925" width="0.2" height="15.0" fill="rgb(252,112,5)" rx="2" ry="2" />
<text  x="577.14" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="152.0" y="677" width="0.2" height="15.0" fill="rgb(227,19,54)" rx="2" ry="2" />
<text  x="154.98" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="152.0" y="757" width="0.2" height="15.0" fill="rgb(244,19,53)" rx="2" ry="2" />
<text  x="154.98" y="767.5" ></text>
</g>
<g >
<title>unmap_vmas (2 samples, 0.03%)</title><rect x="570.4" y="1877" width="0.4" height="15.0" fill="rgb(228,16,33)" rx="2" ry="2" />
<text  x="573.38" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="151.6" y="1493" width="0.6" height="15.0" fill="rgb(229,62,19)" rx="2" ry="2" />
<text  x="154.60" y="1503.5" ></text>
</g>
<g >
<title>__dynamic_cast (8 samples, 0.13%)</title><rect x="170.8" y="1637" width="1.5" height="15.0" fill="rgb(222,120,28)" rx="2" ry="2" />
<text  x="173.78" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="1525" width="0.4" height="15.0" fill="rgb(245,62,29)" rx="2" ry="2" />
<text  x="77.88" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="152.0" y="341" width="0.2" height="15.0" fill="rgb(224,80,5)" rx="2" ry="2" />
<text  x="154.98" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="127.2" y="85" width="0.1" height="15.0" fill="rgb(244,192,24)" rx="2" ry="2" />
<text  x="130.15" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (19 samples, 0.30%)</title><rect x="128.1" y="1717" width="3.6" height="15.0" fill="rgb(219,86,48)" rx="2" ry="2" />
<text  x="131.09" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.4" y="1525" width="0.4" height="15.0" fill="rgb(237,178,14)" rx="2" ry="2" />
<text  x="1164.42" y="1535.5" ></text>
</g>
<g >
<title>cfree (2 samples, 0.03%)</title><rect x="838.0" y="1957" width="0.4" height="15.0" fill="rgb(222,115,8)" rx="2" ry="2" />
<text  x="840.97" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="192.4" y="1029" width="0.2" height="15.0" fill="rgb(218,39,19)" rx="2" ry="2" />
<text  x="195.41" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="151.6" y="1909" width="0.6" height="15.0" fill="rgb(235,194,13)" rx="2" ry="2" />
<text  x="154.60" y="1919.5" ></text>
</g>
<g >
<title>Eigen::internal::product_evaluator&lt;Eigen::Product&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0&gt;, 7, Eigen::DenseShape, Eigen::DenseShape, float, float&gt;::product_evaluator (1 samples, 0.02%)</title><rect x="429.5" y="1957" width="0.2" height="15.0" fill="rgb(226,154,23)" rx="2" ry="2" />
<text  x="432.53" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.11%)</title><rect x="126.6" y="1925" width="1.3" height="15.0" fill="rgb(241,133,54)" rx="2" ry="2" />
<text  x="129.59" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="151.8" y="1061" width="0.2" height="15.0" fill="rgb(244,160,29)" rx="2" ry="2" />
<text  x="154.79" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="127.2" y="117" width="0.1" height="15.0" fill="rgb(233,198,24)" rx="2" ry="2" />
<text  x="130.15" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="151.8" y="725" width="0.2" height="15.0" fill="rgb(234,23,27)" rx="2" ry="2" />
<text  x="154.79" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.4" y="325" width="0.4" height="15.0" fill="rgb(213,144,18)" rx="2" ry="2" />
<text  x="1164.42" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="192.4" y="1349" width="0.2" height="15.0" fill="rgb(209,150,8)" rx="2" ry="2" />
<text  x="195.41" y="1359.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (1 samples, 0.02%)</title><rect x="175.7" y="1621" width="0.2" height="15.0" fill="rgb(242,229,36)" rx="2" ry="2" />
<text  x="178.67" y="1631.5" ></text>
</g>
<g >
<title>strchr@plt (1 samples, 0.02%)</title><rect x="163.3" y="1589" width="0.1" height="15.0" fill="rgb(230,163,11)" rx="2" ry="2" />
<text  x="166.26" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (31 samples, 0.49%)</title><rect x="131.7" y="1669" width="5.8" height="15.0" fill="rgb(220,205,11)" rx="2" ry="2" />
<text  x="134.67" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.4" y="277" width="0.4" height="15.0" fill="rgb(220,110,10)" rx="2" ry="2" />
<text  x="1164.42" y="287.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.03%)</title><rect x="186.8" y="1685" width="0.3" height="15.0" fill="rgb(213,225,12)" rx="2" ry="2" />
<text  x="189.76" y="1695.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (1 samples, 0.02%)</title><rect x="74.7" y="1941" width="0.2" height="15.0" fill="rgb(251,127,37)" rx="2" ry="2" />
<text  x="77.69" y="1951.5" ></text>
</g>
<g >
<title>std::messages&lt;wchar_t&gt;::~messages@plt (1 samples, 0.02%)</title><rect x="867.1" y="2037" width="0.2" height="15.0" fill="rgb(253,160,15)" rx="2" ry="2" />
<text  x="870.12" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.0" y="2005" width="0.4" height="15.0" fill="rgb(231,85,40)" rx="2" ry="2" />
<text  x="1164.04" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="1157" width="0.4" height="15.0" fill="rgb(250,17,24)" rx="2" ry="2" />
<text  x="77.88" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.4" y="917" width="0.4" height="15.0" fill="rgb(239,140,46)" rx="2" ry="2" />
<text  x="1164.42" y="927.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id@plt (1 samples, 0.02%)</title><rect x="169.3" y="1621" width="0.2" height="15.0" fill="rgb(208,73,4)" rx="2" ry="2" />
<text  x="172.28" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.0" y="469" width="0.4" height="15.0" fill="rgb(227,213,25)" rx="2" ry="2" />
<text  x="1164.04" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (32 samples, 0.51%)</title><rect x="109.1" y="1669" width="6.0" height="15.0" fill="rgb(223,116,49)" rx="2" ry="2" />
<text  x="112.10" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.0" y="597" width="0.4" height="15.0" fill="rgb(212,77,24)" rx="2" ry="2" />
<text  x="1164.04" y="607.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (1 samples, 0.02%)</title><rect x="75.1" y="37" width="0.2" height="15.0" fill="rgb(232,23,17)" rx="2" ry="2" />
<text  x="78.06" y="47.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="32.6" y="1989" width="0.2" height="15.0" fill="rgb(237,178,7)" rx="2" ry="2" />
<text  x="35.57" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="127.5" y="1189" width="0.4" height="15.0" fill="rgb(225,209,1)" rx="2" ry="2" />
<text  x="130.53" y="1199.5" ></text>
</g>
<g >
<title>page_fault (33 samples, 0.53%)</title><rect x="405.8" y="1941" width="6.2" height="15.0" fill="rgb(234,26,4)" rx="2" ry="2" />
<text  x="408.84" y="1951.5" ></text>
</g>
<g >
<title>cfree (2 samples, 0.03%)</title><rect x="571.9" y="2005" width="0.4" height="15.0" fill="rgb(253,51,18)" rx="2" ry="2" />
<text  x="574.89" y="2015.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsgetn@plt (1 samples, 0.02%)</title><rect x="1188.5" y="2053" width="0.2" height="15.0" fill="rgb(226,113,35)" rx="2" ry="2" />
<text  x="1191.50" y="2063.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="698.1" y="1845" width="0.2" height="15.0" fill="rgb(249,82,21)" rx="2" ry="2" />
<text  x="701.07" y="1855.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (11 samples, 0.18%)</title><rect x="1132.3" y="2053" width="2.0" height="15.0" fill="rgb(253,94,34)" rx="2" ry="2" />
<text  x="1135.27" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="891.8" y="677" width="0.1" height="15.0" fill="rgb(252,44,53)" rx="2" ry="2" />
<text  x="894.76" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.0" y="1749" width="0.4" height="15.0" fill="rgb(208,131,33)" rx="2" ry="2" />
<text  x="1164.04" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="151.8" y="661" width="0.2" height="15.0" fill="rgb(227,22,7)" rx="2" ry="2" />
<text  x="154.79" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.0" y="1685" width="0.4" height="15.0" fill="rgb(229,214,9)" rx="2" ry="2" />
<text  x="1164.04" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="152.0" y="453" width="0.2" height="15.0" fill="rgb(221,100,20)" rx="2" ry="2" />
<text  x="154.98" y="463.5" ></text>
</g>
<g >
<title>TFastTextEmbedder::GetSentenceEmbedding (50 samples, 0.80%)</title><rect x="420.5" y="1973" width="9.4" height="15.0" fill="rgb(246,183,40)" rx="2" ry="2" />
<text  x="423.51" y="1983.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (1 samples, 0.02%)</title><rect x="101.0" y="1589" width="0.2" height="15.0" fill="rgb(226,142,10)" rx="2" ry="2" />
<text  x="104.02" y="1599.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (4 samples, 0.06%)</title><rect x="169.5" y="1621" width="0.7" height="15.0" fill="rgb(236,79,7)" rx="2" ry="2" />
<text  x="172.46" y="1631.5" ></text>
</g>
<g >
<title>unmap_vmas (1 samples, 0.02%)</title><rect x="923.2" y="1941" width="0.1" height="15.0" fill="rgb(220,174,8)" rx="2" ry="2" />
<text  x="926.16" y="1951.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.06%)</title><rect x="79.4" y="2021" width="0.7" height="15.0" fill="rgb(220,66,11)" rx="2" ry="2" />
<text  x="82.39" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (45 samples, 0.72%)</title><rect x="155.0" y="1701" width="8.4" height="15.0" fill="rgb(242,114,25)" rx="2" ry="2" />
<text  x="157.98" y="1711.5" ></text>
</g>
<g >
<title>generic_file_read_iter (4 samples, 0.06%)</title><rect x="891.0" y="1909" width="0.8" height="15.0" fill="rgb(249,117,19)" rx="2" ry="2" />
<text  x="894.00" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="127.2" y="1413" width="0.1" height="15.0" fill="rgb(206,2,16)" rx="2" ry="2" />
<text  x="130.15" y="1423.5" ></text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::get (30 samples, 0.48%)</title><rect x="84.8" y="1925" width="5.7" height="15.0" fill="rgb(240,57,29)" rx="2" ry="2" />
<text  x="87.84" y="1935.5" ></text>
</g>
<g >
<title>__schedule (2 samples, 0.03%)</title><rect x="995.9" y="1973" width="0.4" height="15.0" fill="rgb(249,0,46)" rx="2" ry="2" />
<text  x="998.93" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="1909" width="0.4" height="15.0" fill="rgb(217,223,34)" rx="2" ry="2" />
<text  x="77.88" y="1919.5" ></text>
</g>
<g >
<title>finish_task_switch (2 samples, 0.03%)</title><rect x="42.2" y="1925" width="0.3" height="15.0" fill="rgb(225,122,5)" rx="2" ry="2" />
<text  x="45.16" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="1797" width="0.4" height="15.0" fill="rgb(222,82,10)" rx="2" ry="2" />
<text  x="77.88" y="1807.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1085.8" y="2021" width="0.2" height="15.0" fill="rgb(220,76,1)" rx="2" ry="2" />
<text  x="1088.82" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (84 samples, 1.34%)</title><rect x="154.6" y="1765" width="15.8" height="15.0" fill="rgb(239,197,14)" rx="2" ry="2" />
<text  x="157.61" y="1775.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::push_back (2 samples, 0.03%)</title><rect x="1189.6" y="2053" width="0.4" height="15.0" fill="rgb(253,150,34)" rx="2" ry="2" />
<text  x="1192.62" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="891.8" y="1909" width="0.1" height="15.0" fill="rgb(209,191,20)" rx="2" ry="2" />
<text  x="894.76" y="1919.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (2 samples, 0.03%)</title><rect x="80.7" y="1989" width="0.4" height="15.0" fill="rgb(207,105,47)" rx="2" ry="2" />
<text  x="83.71" y="1999.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.03%)</title><rect x="633.9" y="1861" width="0.4" height="15.0" fill="rgb(239,37,37)" rx="2" ry="2" />
<text  x="636.94" y="1871.5" ></text>
</g>
<g >
<title>memcmp@plt (5 samples, 0.08%)</title><rect x="1110.8" y="2053" width="1.0" height="15.0" fill="rgb(254,116,52)" rx="2" ry="2" />
<text  x="1113.83" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="152.0" y="997" width="0.2" height="15.0" fill="rgb(237,13,10)" rx="2" ry="2" />
<text  x="154.98" y="1007.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (6 samples, 0.10%)</title><rect x="105.7" y="1605" width="1.1" height="15.0" fill="rgb(250,27,37)" rx="2" ry="2" />
<text  x="108.72" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="151.8" y="197" width="0.2" height="15.0" fill="rgb(229,95,34)" rx="2" ry="2" />
<text  x="154.79" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (17 samples, 0.27%)</title><rect x="172.7" y="1637" width="3.2" height="15.0" fill="rgb(242,21,26)" rx="2" ry="2" />
<text  x="175.66" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="127.5" y="1349" width="0.4" height="15.0" fill="rgb(217,137,49)" rx="2" ry="2" />
<text  x="130.53" y="1359.5" ></text>
</g>
<g >
<title>std::istream::sentry::sentry (3 samples, 0.05%)</title><rect x="324.2" y="1989" width="0.6" height="15.0" fill="rgb(234,65,15)" rx="2" ry="2" />
<text  x="327.23" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (32 samples, 0.51%)</title><rect x="177.2" y="1685" width="6.0" height="15.0" fill="rgb(250,92,16)" rx="2" ry="2" />
<text  x="180.17" y="1695.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (1 samples, 0.02%)</title><rect x="145.6" y="1637" width="0.2" height="15.0" fill="rgb(237,4,46)" rx="2" ry="2" />
<text  x="148.58" y="1647.5" ></text>
</g>
<g >
<title>exit_mmap (1 samples, 0.02%)</title><rect x="923.2" y="1957" width="0.1" height="15.0" fill="rgb(216,165,47)" rx="2" ry="2" />
<text  x="926.16" y="1967.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (42 samples, 0.67%)</title><rect x="404.1" y="1957" width="7.9" height="15.0" fill="rgb(251,89,36)" rx="2" ry="2" />
<text  x="407.15" y="1967.5" ></text>
</g>
<g >
<title>finish_task_switch (3 samples, 0.05%)</title><rect x="94.6" y="1829" width="0.6" height="15.0" fill="rgb(246,73,11)" rx="2" ry="2" />
<text  x="97.62" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="127.5" y="1477" width="0.4" height="15.0" fill="rgb(227,180,53)" rx="2" ry="2" />
<text  x="130.53" y="1487.5" ></text>
</g>
<g >
<title>do_page_fault (33 samples, 0.53%)</title><rect x="405.8" y="1925" width="6.2" height="15.0" fill="rgb(254,8,8)" rx="2" ry="2" />
<text  x="408.84" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.4" y="1093" width="0.4" height="15.0" fill="rgb(206,28,22)" rx="2" ry="2" />
<text  x="1164.42" y="1103.5" ></text>
</g>
<g >
<title>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::dump (2 samples, 0.03%)</title><rect x="572.5" y="1957" width="0.3" height="15.0" fill="rgb(253,92,22)" rx="2" ry="2" />
<text  x="575.45" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="192.0" y="1797" width="0.6" height="15.0" fill="rgb(238,221,51)" rx="2" ry="2" />
<text  x="195.03" y="1807.5" ></text>
</g>
<g >
<title>__vm_munmap (1 samples, 0.02%)</title><rect x="891.9" y="1989" width="0.2" height="15.0" fill="rgb(218,91,28)" rx="2" ry="2" />
<text  x="894.94" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.4" y="1429" width="0.4" height="15.0" fill="rgb(227,93,6)" rx="2" ry="2" />
<text  x="1164.42" y="1439.5" ></text>
</g>
<g >
<title>handle_mm_fault (27 samples, 0.43%)</title><rect x="406.8" y="1893" width="5.1" height="15.0" fill="rgb(214,173,15)" rx="2" ry="2" />
<text  x="409.78" y="1903.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::getLine (170 samples, 2.71%)</title><rect x="964.3" y="2053" width="32.0" height="15.0" fill="rgb(225,120,38)" rx="2" ry="2" />
<text  x="967.34" y="2063.5" >fa..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="127.2" y="277" width="0.1" height="15.0" fill="rgb(252,160,34)" rx="2" ry="2" />
<text  x="130.15" y="287.5" ></text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::scan (3 samples, 0.05%)</title><rect x="81.6" y="1941" width="0.6" height="15.0" fill="rgb(238,59,1)" rx="2" ry="2" />
<text  x="84.65" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="151.8" y="229" width="0.2" height="15.0" fill="rgb(211,111,50)" rx="2" ry="2" />
<text  x="154.79" y="239.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="38.6" y="2005" width="0.2" height="15.0" fill="rgb(219,131,22)" rx="2" ry="2" />
<text  x="41.58" y="2015.5" ></text>
</g>
<g >
<title>do_group_exit (1 samples, 0.02%)</title><rect x="923.2" y="2005" width="0.1" height="15.0" fill="rgb(241,170,30)" rx="2" ry="2" />
<text  x="926.16" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="1013" width="0.4" height="15.0" fill="rgb(250,95,15)" rx="2" ry="2" />
<text  x="77.88" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="192.2" y="1637" width="0.4" height="15.0" fill="rgb(208,146,45)" rx="2" ry="2" />
<text  x="195.22" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="151.8" y="213" width="0.2" height="15.0" fill="rgb(218,114,16)" rx="2" ry="2" />
<text  x="154.79" y="223.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::str[abi:cxx11]@plt (1 samples, 0.02%)</title><rect x="579.4" y="1909" width="0.2" height="15.0" fill="rgb(216,187,29)" rx="2" ry="2" />
<text  x="582.41" y="1919.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::json_value::destroy (1 samples, 0.02%)</title><rect x="839.1" y="1973" width="0.2" height="15.0" fill="rgb(210,17,43)" rx="2" ry="2" />
<text  x="842.10" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.4" y="1685" width="0.4" height="15.0" fill="rgb(212,63,13)" rx="2" ry="2" />
<text  x="1164.42" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="891.8" y="197" width="0.1" height="15.0" fill="rgb(227,125,39)" rx="2" ry="2" />
<text  x="894.76" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="192.0" y="1765" width="0.6" height="15.0" fill="rgb(249,107,8)" rx="2" ry="2" />
<text  x="195.03" y="1775.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="567.2" y="1973" width="0.2" height="15.0" fill="rgb(247,144,7)" rx="2" ry="2" />
<text  x="570.19" y="1983.5" ></text>
</g>
<g >
<title>__dynamic_cast (7 samples, 0.11%)</title><rect x="177.4" y="1669" width="1.3" height="15.0" fill="rgb(225,116,25)" rx="2" ry="2" />
<text  x="180.36" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="192.4" y="597" width="0.2" height="15.0" fill="rgb(254,134,13)" rx="2" ry="2" />
<text  x="195.41" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="127.5" y="1461" width="0.4" height="15.0" fill="rgb(236,105,8)" rx="2" ry="2" />
<text  x="130.53" y="1471.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::addSubwords (4 samples, 0.06%)</title><rect x="923.9" y="2053" width="0.8" height="15.0" fill="rgb(231,23,40)" rx="2" ry="2" />
<text  x="926.91" y="2063.5" ></text>
</g>
<g >
<title>__tls_get_addr@plt (1 samples, 0.02%)</title><rect x="839.7" y="2037" width="0.2" height="15.0" fill="rgb(211,193,30)" rx="2" ry="2" />
<text  x="842.67" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.0" y="1253" width="0.4" height="15.0" fill="rgb(247,86,21)" rx="2" ry="2" />
<text  x="1164.04" y="1263.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::should_preserve (2 samples, 0.03%)</title><rect x="579.0" y="1909" width="0.4" height="15.0" fill="rgb(249,221,31)" rx="2" ry="2" />
<text  x="582.03" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Scanner&lt;char&gt;::_M_scan_normal (2 samples, 0.03%)</title><rect x="191.3" y="1909" width="0.4" height="15.0" fill="rgb(243,197,23)" rx="2" ry="2" />
<text  x="194.28" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (4 samples, 0.06%)</title><rect x="190.5" y="1893" width="0.8" height="15.0" fill="rgb(232,28,51)" rx="2" ry="2" />
<text  x="193.53" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.4" y="1845" width="0.4" height="15.0" fill="rgb(213,109,29)" rx="2" ry="2" />
<text  x="1164.42" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="277" width="0.4" height="15.0" fill="rgb(250,208,24)" rx="2" ry="2" />
<text  x="77.88" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="891.8" y="437" width="0.1" height="15.0" fill="rgb(248,196,11)" rx="2" ry="2" />
<text  x="894.76" y="447.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="32.6" y="2021" width="0.2" height="15.0" fill="rgb(231,119,26)" rx="2" ry="2" />
<text  x="35.57" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="151.6" y="1749" width="0.6" height="15.0" fill="rgb(211,219,5)" rx="2" ry="2" />
<text  x="154.60" y="1759.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (3 samples, 0.05%)</title><rect x="108.5" y="1621" width="0.6" height="15.0" fill="rgb(233,209,22)" rx="2" ry="2" />
<text  x="111.54" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (18 samples, 0.29%)</title><rect x="128.1" y="1637" width="3.4" height="15.0" fill="rgb(229,214,48)" rx="2" ry="2" />
<text  x="131.09" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (31 samples, 0.49%)</title><rect x="131.7" y="1717" width="5.8" height="15.0" fill="rgb(205,22,26)" rx="2" ry="2" />
<text  x="134.67" y="1727.5" ></text>
</g>
<g >
<title>__handle_mm_fault (2 samples, 0.03%)</title><rect x="74.5" y="1957" width="0.4" height="15.0" fill="rgb(213,104,5)" rx="2" ry="2" />
<text  x="77.50" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="127.3" y="1477" width="0.2" height="15.0" fill="rgb(215,86,33)" rx="2" ry="2" />
<text  x="130.34" y="1487.5" ></text>
</g>
<g >
<title>unmap_single_vma (1 samples, 0.02%)</title><rect x="923.2" y="1925" width="0.1" height="15.0" fill="rgb(227,161,8)" rx="2" ry="2" />
<text  x="926.16" y="1935.5" ></text>
</g>
<g >
<title>do_syscall_64 (3 samples, 0.05%)</title><rect x="94.6" y="1941" width="0.6" height="15.0" fill="rgb(237,83,10)" rx="2" ry="2" />
<text  x="97.62" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="677" width="0.4" height="15.0" fill="rgb(254,104,49)" rx="2" ry="2" />
<text  x="77.88" y="687.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="104.2" y="1621" width="0.2" height="15.0" fill="rgb(208,153,39)" rx="2" ry="2" />
<text  x="107.21" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="891.8" y="1173" width="0.1" height="15.0" fill="rgb(215,224,11)" rx="2" ry="2" />
<text  x="894.76" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="127.2" y="709" width="0.1" height="15.0" fill="rgb(223,190,47)" rx="2" ry="2" />
<text  x="130.15" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="891.8" y="1797" width="0.1" height="15.0" fill="rgb(235,89,37)" rx="2" ry="2" />
<text  x="894.76" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="891.8" y="533" width="0.1" height="15.0" fill="rgb(235,12,50)" rx="2" ry="2" />
<text  x="894.76" y="543.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="1765" width="0.4" height="15.0" fill="rgb(222,62,0)" rx="2" ry="2" />
<text  x="77.88" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="151.6" y="1781" width="0.6" height="15.0" fill="rgb(220,107,21)" rx="2" ry="2" />
<text  x="154.60" y="1791.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (56 samples, 0.89%)</title><rect x="869.6" y="2053" width="10.5" height="15.0" fill="rgb(232,209,8)" rx="2" ry="2" />
<text  x="872.57" y="2063.5" ></text>
</g>
<g >
<title>std::locale::locale (1 samples, 0.02%)</title><rect x="38.4" y="2021" width="0.2" height="15.0" fill="rgb(217,35,52)" rx="2" ry="2" />
<text  x="41.40" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="891.8" y="53" width="0.1" height="15.0" fill="rgb(225,121,18)" rx="2" ry="2" />
<text  x="894.76" y="63.5" ></text>
</g>
<g >
<title>std::__stable_sort_adaptive&lt;__gnu_cxx::__normal_iterator&lt;TDocument*, std::vector&lt;TDocument, std::allocator&lt;TDocument&gt; &gt; &gt;, TDocument*, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;main::$_0&gt; &gt; (2 samples, 0.03%)</title><rect x="573.8" y="2005" width="0.3" height="15.0" fill="rgb(242,192,36)" rx="2" ry="2" />
<text  x="576.77" y="2015.5" ></text>
</g>
<g >
<title>std::__numpunct_cache&lt;char&gt;::~__numpunct_cache (1 samples, 0.02%)</title><rect x="866.4" y="2037" width="0.2" height="15.0" fill="rgb(205,148,5)" rx="2" ry="2" />
<text  x="869.37" y="2047.5" ></text>
</g>
<g >
<title>page_fault (5 samples, 0.08%)</title><rect x="842.5" y="2021" width="0.9" height="15.0" fill="rgb(242,134,52)" rx="2" ry="2" />
<text  x="845.49" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.0" y="133" width="0.4" height="15.0" fill="rgb(225,61,17)" rx="2" ry="2" />
<text  x="1164.04" y="143.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (1 samples, 0.02%)</title><rect x="891.9" y="2005" width="0.2" height="15.0" fill="rgb(224,68,31)" rx="2" ry="2" />
<text  x="894.94" y="2015.5" ></text>
</g>
<g >
<title>RunFasttextClf (2 samples, 0.03%)</title><rect x="575.5" y="1957" width="0.3" height="15.0" fill="rgb(220,111,8)" rx="2" ry="2" />
<text  x="578.46" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (27 samples, 0.43%)</title><rect x="121.5" y="1797" width="5.1" height="15.0" fill="rgb(228,136,12)" rx="2" ry="2" />
<text  x="124.51" y="1807.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (4 samples, 0.06%)</title><rect x="119.8" y="1653" width="0.8" height="15.0" fill="rgb(217,165,21)" rx="2" ry="2" />
<text  x="122.82" y="1663.5" ></text>
</g>
<g >
<title>mem_cgroup_throttle_swaprate (3 samples, 0.05%)</title><rect x="410.9" y="1845" width="0.6" height="15.0" fill="rgb(224,193,41)" rx="2" ry="2" />
<text  x="413.92" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="891.8" y="1077" width="0.1" height="15.0" fill="rgb(215,80,44)" rx="2" ry="2" />
<text  x="894.76" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="151.8" y="1173" width="0.2" height="15.0" fill="rgb(207,127,33)" rx="2" ry="2" />
<text  x="154.79" y="1183.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="1781" width="0.4" height="15.0" fill="rgb(214,94,4)" rx="2" ry="2" />
<text  x="77.88" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.4" y="933" width="0.4" height="15.0" fill="rgb(212,168,47)" rx="2" ry="2" />
<text  x="1164.42" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="891.8" y="1301" width="0.1" height="15.0" fill="rgb(233,222,45)" rx="2" ry="2" />
<text  x="894.76" y="1311.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (1 samples, 0.02%)</title><rect x="854.5" y="2005" width="0.2" height="15.0" fill="rgb(250,1,11)" rx="2" ry="2" />
<text  x="857.52" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="127.2" y="1605" width="0.3" height="15.0" fill="rgb(243,3,26)" rx="2" ry="2" />
<text  x="130.15" y="1615.5" ></text>
</g>
<g >
<title>do_page_fault (45 samples, 0.72%)</title><rect x="412.0" y="1941" width="8.5" height="15.0" fill="rgb(229,219,23)" rx="2" ry="2" />
<text  x="415.05" y="1951.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;TThreadPool::TThreadPool (15 samples, 0.24%)</title><rect x="39.9" y="2037" width="2.8" height="15.0" fill="rgb(247,103,27)" rx="2" ry="2" />
<text  x="42.90" y="2047.5" ></text>
</g>
<g >
<title>__do_munmap (2 samples, 0.03%)</title><rect x="570.4" y="1909" width="0.4" height="15.0" fill="rgb(214,110,33)" rx="2" ry="2" />
<text  x="573.38" y="1919.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find_last_of (1 samples, 0.02%)</title><rect x="573.6" y="2005" width="0.2" height="15.0" fill="rgb(250,211,12)" rx="2" ry="2" />
<text  x="576.58" y="2015.5" ></text>
</g>
<g >
<title>release_pages (1 samples, 0.02%)</title><rect x="433.3" y="1781" width="0.2" height="15.0" fill="rgb(205,108,48)" rx="2" ry="2" />
<text  x="436.30" y="1791.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (1 samples, 0.02%)</title><rect x="699.6" y="1765" width="0.2" height="15.0" fill="rgb(232,104,10)" rx="2" ry="2" />
<text  x="702.57" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (32 samples, 0.51%)</title><rect x="115.1" y="1781" width="6.0" height="15.0" fill="rgb(244,201,34)" rx="2" ry="2" />
<text  x="118.12" y="1791.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (31 samples, 0.49%)</title><rect x="1134.7" y="2053" width="5.8" height="15.0" fill="rgb(252,204,42)" rx="2" ry="2" />
<text  x="1137.71" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.4" y="1829" width="0.4" height="15.0" fill="rgb(232,168,14)" rx="2" ry="2" />
<text  x="1164.42" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="151.8" y="501" width="0.2" height="15.0" fill="rgb(228,168,8)" rx="2" ry="2" />
<text  x="154.79" y="511.5" ></text>
</g>
<g >
<title>onmt::unicode::is_letter@plt (9 samples, 0.14%)</title><rect x="805.1" y="1893" width="1.7" height="15.0" fill="rgb(219,226,22)" rx="2" ry="2" />
<text  x="808.07" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.4" y="2053" width="0.4" height="15.0" fill="rgb(243,45,11)" rx="2" ry="2" />
<text  x="1164.42" y="2063.5" ></text>
</g>
<g >
<title>fasttext::FastText::getWordVector (15 samples, 0.24%)</title><rect x="307.9" y="1989" width="2.8" height="15.0" fill="rgb(225,59,45)" rx="2" ry="2" />
<text  x="310.87" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="1301" width="0.4" height="15.0" fill="rgb(227,161,25)" rx="2" ry="2" />
<text  x="77.88" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="152.0" y="629" width="0.2" height="15.0" fill="rgb(214,96,1)" rx="2" ry="2" />
<text  x="154.98" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="891.8" y="1701" width="0.1" height="15.0" fill="rgb(216,82,29)" rx="2" ry="2" />
<text  x="894.76" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="127.5" y="1541" width="0.4" height="15.0" fill="rgb(222,4,32)" rx="2" ry="2" />
<text  x="130.53" y="1551.5" ></text>
</g>
<g >
<title>DetectCategory (3 samples, 0.05%)</title><rect x="575.5" y="1973" width="0.5" height="15.0" fill="rgb(228,209,10)" rx="2" ry="2" />
<text  x="578.46" y="1983.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::basic_regex&lt;char const*&gt; (200 samples, 3.19%)</title><rect x="154.2" y="1957" width="37.6" height="15.0" fill="rgb(206,49,45)" rx="2" ry="2" />
<text  x="157.23" y="1967.5" >std..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (191 samples, 3.04%)</title><rect x="154.6" y="1877" width="35.9" height="15.0" fill="rgb(239,160,54)" rx="2" ry="2" />
<text  x="157.61" y="1887.5" >std..</text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::create&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="574.1" y="1861" width="0.2" height="15.0" fill="rgb(221,144,11)" rx="2" ry="2" />
<text  x="577.14" y="1871.5" ></text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::get (2 samples, 0.03%)</title><rect x="81.8" y="1925" width="0.4" height="15.0" fill="rgb(219,228,53)" rx="2" ry="2" />
<text  x="84.83" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="151.8" y="1221" width="0.2" height="15.0" fill="rgb(224,43,50)" rx="2" ry="2" />
<text  x="154.79" y="1231.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.05%)</title><rect x="1112.7" y="2053" width="0.6" height="15.0" fill="rgb(249,149,40)" rx="2" ry="2" />
<text  x="1115.71" y="2063.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (3 samples, 0.05%)</title><rect x="176.0" y="1637" width="0.6" height="15.0" fill="rgb(244,47,8)" rx="2" ry="2" />
<text  x="179.05" y="1647.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="305.6" y="1893" width="0.2" height="15.0" fill="rgb(226,115,13)" rx="2" ry="2" />
<text  x="308.61" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="151.8" y="901" width="0.2" height="15.0" fill="rgb(241,162,51)" rx="2" ry="2" />
<text  x="154.79" y="911.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="751.7" y="1861" width="0.1" height="15.0" fill="rgb(229,98,1)" rx="2" ry="2" />
<text  x="754.66" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (44 samples, 0.70%)</title><rect x="155.0" y="1605" width="8.3" height="15.0" fill="rgb(226,153,2)" rx="2" ry="2" />
<text  x="157.98" y="1615.5" ></text>
</g>
<g >
<title>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::dump_escaped (1 samples, 0.02%)</title><rect x="572.6" y="1909" width="0.2" height="15.0" fill="rgb(220,169,54)" rx="2" ry="2" />
<text  x="575.64" y="1919.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (2 samples, 0.03%)</title><rect x="570.4" y="1941" width="0.4" height="15.0" fill="rgb(248,128,21)" rx="2" ry="2" />
<text  x="573.38" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="127.5" y="1749" width="0.4" height="15.0" fill="rgb(225,68,33)" rx="2" ry="2" />
<text  x="130.53" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="127.5" y="1301" width="0.4" height="15.0" fill="rgb(222,179,3)" rx="2" ry="2" />
<text  x="130.53" y="1311.5" ></text>
</g>
<g >
<title>fasttext::Vector::Vector (1 samples, 0.02%)</title><rect x="1091.8" y="2053" width="0.2" height="15.0" fill="rgb(224,28,27)" rx="2" ry="2" />
<text  x="1094.84" y="2063.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="751.7" y="1829" width="0.1" height="15.0" fill="rgb(218,196,41)" rx="2" ry="2" />
<text  x="754.66" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="1733" width="0.4" height="15.0" fill="rgb(236,99,5)" rx="2" ry="2" />
<text  x="77.88" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="192.4" y="1413" width="0.2" height="15.0" fill="rgb(254,204,40)" rx="2" ry="2" />
<text  x="195.41" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="151.8" y="853" width="0.2" height="15.0" fill="rgb(242,112,38)" rx="2" ry="2" />
<text  x="154.79" y="863.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="757" width="0.4" height="15.0" fill="rgb(219,81,18)" rx="2" ry="2" />
<text  x="77.88" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="127.5" y="1701" width="0.4" height="15.0" fill="rgb(254,178,25)" rx="2" ry="2" />
<text  x="130.53" y="1711.5" ></text>
</g>
<g >
<title>std::locale::~locale (1 samples, 0.02%)</title><rect x="152.5" y="1957" width="0.2" height="15.0" fill="rgb(222,223,29)" rx="2" ry="2" />
<text  x="155.54" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (34 samples, 0.54%)</title><rect x="170.6" y="1669" width="6.4" height="15.0" fill="rgb(246,108,29)" rx="2" ry="2" />
<text  x="173.59" y="1679.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (3 samples, 0.05%)</title><rect x="145.0" y="1637" width="0.6" height="15.0" fill="rgb(227,207,38)" rx="2" ry="2" />
<text  x="148.02" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (11 samples, 0.18%)</title><rect x="123.2" y="1701" width="2.1" height="15.0" fill="rgb(226,104,53)" rx="2" ry="2" />
<text  x="126.20" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_Compiler (200 samples, 3.19%)</title><rect x="154.2" y="1941" width="37.6" height="15.0" fill="rgb(238,45,53)" rx="2" ry="2" />
<text  x="157.23" y="1951.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="127.2" y="1189" width="0.1" height="15.0" fill="rgb(244,56,26)" rx="2" ry="2" />
<text  x="130.15" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="151.6" y="1861" width="0.6" height="15.0" fill="rgb(249,143,19)" rx="2" ry="2" />
<text  x="154.60" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.4" y="309" width="0.4" height="15.0" fill="rgb(208,24,28)" rx="2" ry="2" />
<text  x="1164.42" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (32 samples, 0.51%)</title><rect x="177.2" y="1701" width="6.0" height="15.0" fill="rgb(215,167,11)" rx="2" ry="2" />
<text  x="180.17" y="1711.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_Alloc_node&gt; (1 samples, 0.02%)</title><rect x="574.1" y="1973" width="0.2" height="15.0" fill="rgb(211,201,17)" rx="2" ry="2" />
<text  x="577.14" y="1983.5" ></text>
</g>
<g >
<title>__dynamic_cast (4 samples, 0.06%)</title><rect x="128.5" y="1573" width="0.7" height="15.0" fill="rgb(227,29,45)" rx="2" ry="2" />
<text  x="131.47" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="693" width="0.4" height="15.0" fill="rgb(215,76,54)" rx="2" ry="2" />
<text  x="77.88" y="703.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="469" width="0.4" height="15.0" fill="rgb(242,175,53)" rx="2" ry="2" />
<text  x="77.88" y="479.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (3 samples, 0.05%)</title><rect x="189.4" y="1701" width="0.6" height="15.0" fill="rgb(211,67,30)" rx="2" ry="2" />
<text  x="192.40" y="1711.5" ></text>
</g>
<g >
<title>ksys_read (4 samples, 0.06%)</title><rect x="891.0" y="1989" width="0.8" height="15.0" fill="rgb(247,217,43)" rx="2" ry="2" />
<text  x="894.00" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="437" width="0.4" height="15.0" fill="rgb(229,65,29)" rx="2" ry="2" />
<text  x="77.88" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.0" y="1061" width="0.4" height="15.0" fill="rgb(210,84,45)" rx="2" ry="2" />
<text  x="1164.04" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.4" y="1717" width="0.4" height="15.0" fill="rgb(246,37,53)" rx="2" ry="2" />
<text  x="1164.42" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.06%)</title><rect x="191.8" y="1909" width="0.8" height="15.0" fill="rgb(242,71,44)" rx="2" ry="2" />
<text  x="194.84" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.0" y="837" width="0.4" height="15.0" fill="rgb(213,219,46)" rx="2" ry="2" />
<text  x="1164.04" y="847.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="33.3" y="1957" width="0.2" height="15.0" fill="rgb(220,155,14)" rx="2" ry="2" />
<text  x="36.32" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="127.5" y="1173" width="0.4" height="15.0" fill="rgb(222,7,30)" rx="2" ry="2" />
<text  x="130.53" y="1183.5" ></text>
</g>
<g >
<title>__schedule (3 samples, 0.05%)</title><rect x="94.6" y="1845" width="0.6" height="15.0" fill="rgb(234,211,35)" rx="2" ry="2" />
<text  x="97.62" y="1855.5" ></text>
</g>
<g >
<title>alloc_pages_vma (26 samples, 0.41%)</title><rect x="413.9" y="1877" width="4.9" height="15.0" fill="rgb(253,8,12)" rx="2" ry="2" />
<text  x="416.93" y="1887.5" ></text>
</g>
<g >
<title>__vm_munmap (2 samples, 0.03%)</title><rect x="570.4" y="1925" width="0.4" height="15.0" fill="rgb(231,210,51)" rx="2" ry="2" />
<text  x="573.38" y="1935.5" ></text>
</g>
<g >
<title>__handle_mm_fault (4 samples, 0.06%)</title><rect x="699.0" y="1797" width="0.8" height="15.0" fill="rgb(220,209,6)" rx="2" ry="2" />
<text  x="702.01" y="1807.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="126.4" y="1701" width="0.2" height="15.0" fill="rgb(228,220,4)" rx="2" ry="2" />
<text  x="129.40" y="1711.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.03%)</title><rect x="135.6" y="1589" width="0.4" height="15.0" fill="rgb(208,86,20)" rx="2" ry="2" />
<text  x="138.62" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="152.0" y="1173" width="0.2" height="15.0" fill="rgb(219,61,17)" rx="2" ry="2" />
<text  x="154.98" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="891.8" y="1573" width="0.1" height="15.0" fill="rgb(247,144,3)" rx="2" ry="2" />
<text  x="894.76" y="1583.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="699.8" y="1861" width="0.1" height="15.0" fill="rgb(253,155,44)" rx="2" ry="2" />
<text  x="702.76" y="1871.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="117.6" y="1669" width="0.2" height="15.0" fill="rgb(229,67,4)" rx="2" ry="2" />
<text  x="120.56" y="1679.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.25] (1 samples, 0.02%)</title><rect x="38.4" y="2037" width="0.2" height="15.0" fill="rgb(232,79,42)" rx="2" ry="2" />
<text  x="41.40" y="2047.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="80.5" y="1925" width="0.2" height="15.0" fill="rgb(231,22,37)" rx="2" ry="2" />
<text  x="83.52" y="1935.5" ></text>
</g>
<g >
<title>cfree (1 samples, 0.02%)</title><rect x="172.3" y="1637" width="0.2" height="15.0" fill="rgb(251,215,54)" rx="2" ry="2" />
<text  x="175.29" y="1647.5" ></text>
</g>
<g >
<title>onmt::Tokenizer::tokenize_text (570 samples, 9.08%)</title><rect x="635.6" y="1893" width="107.2" height="15.0" fill="rgb(254,114,14)" rx="2" ry="2" />
<text  x="638.64" y="1903.5" >onmt::Tokeniz..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.4" y="1061" width="0.4" height="15.0" fill="rgb(217,59,18)" rx="2" ry="2" />
<text  x="1164.42" y="1071.5" ></text>
</g>
<g >
<title>Eigen::internal::general_matrix_matrix_product&lt;long, float, 0, false, float, 1, false, 0, 1&gt;::run (28 samples, 0.45%)</title><rect x="398.9" y="1925" width="5.2" height="15.0" fill="rgb(226,53,42)" rx="2" ry="2" />
<text  x="401.88" y="1935.5" ></text>
</g>
<g >
<title>__pthread_once_slow (1,411 samples, 22.49%)</title><rect x="574.3" y="2037" width="265.4" height="15.0" fill="rgb(231,57,23)" rx="2" ry="2" />
<text  x="577.33" y="2047.5" >__pthread_once_slow</text>
</g>
<g >
<title>fasttext::Dictionary::pushHash (6 samples, 0.10%)</title><rect x="840.8" y="2037" width="1.1" height="15.0" fill="rgb(222,203,26)" rx="2" ry="2" />
<text  x="843.80" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.0" y="1301" width="0.4" height="15.0" fill="rgb(225,198,51)" rx="2" ry="2" />
<text  x="1164.04" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="192.4" y="677" width="0.2" height="15.0" fill="rgb(219,76,1)" rx="2" ry="2" />
<text  x="195.41" y="687.5" ></text>
</g>
<g >
<title>Eigen::internal::generic_product_impl&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt;, Eigen::DenseShape, Eigen::DenseShape, 8&gt;::evalTo&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt; (28 samples, 0.45%)</title><rect x="398.9" y="1957" width="5.2" height="15.0" fill="rgb(230,52,31)" rx="2" ry="2" />
<text  x="401.88" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.0" y="1813" width="0.4" height="15.0" fill="rgb(240,177,51)" rx="2" ry="2" />
<text  x="1164.04" y="1823.5" ></text>
</g>
<g >
<title>try_charge (3 samples, 0.05%)</title><rect x="35.4" y="1925" width="0.6" height="15.0" fill="rgb(241,7,4)" rx="2" ry="2" />
<text  x="38.39" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.4" y="773" width="0.4" height="15.0" fill="rgb(219,10,24)" rx="2" ry="2" />
<text  x="1164.42" y="783.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="732.9" y="1861" width="0.1" height="15.0" fill="rgb(220,106,10)" rx="2" ry="2" />
<text  x="735.86" y="1871.5" ></text>
</g>
<g >
<title>onmt::unicode::get_lower (10 samples, 0.16%)</title><rect x="750.0" y="1893" width="1.8" height="15.0" fill="rgb(215,52,8)" rx="2" ry="2" />
<text  x="752.97" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="891.8" y="789" width="0.1" height="15.0" fill="rgb(215,175,3)" rx="2" ry="2" />
<text  x="894.76" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="152.0" y="1253" width="0.2" height="15.0" fill="rgb(244,175,22)" rx="2" ry="2" />
<text  x="154.98" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.4" y="1333" width="0.4" height="15.0" fill="rgb(232,66,54)" rx="2" ry="2" />
<text  x="1164.42" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="151.8" y="261" width="0.2" height="15.0" fill="rgb(213,183,6)" rx="2" ry="2" />
<text  x="154.79" y="271.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::load (4 samples, 0.06%)</title><rect x="996.3" y="2053" width="0.8" height="15.0" fill="rgb(248,208,13)" rx="2" ry="2" />
<text  x="999.31" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="891.8" y="1461" width="0.1" height="15.0" fill="rgb(235,63,45)" rx="2" ry="2" />
<text  x="894.76" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_subexpr_begin (1 samples, 0.02%)</title><rect x="191.1" y="1877" width="0.2" height="15.0" fill="rgb(208,133,21)" rx="2" ry="2" />
<text  x="194.09" y="1887.5" ></text>
</g>
<g >
<title>fasttext::Model::predict (1 samples, 0.02%)</title><rect x="77.9" y="2021" width="0.2" height="15.0" fill="rgb(224,98,22)" rx="2" ry="2" />
<text  x="80.89" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.4" y="1877" width="0.4" height="15.0" fill="rgb(253,116,40)" rx="2" ry="2" />
<text  x="1164.42" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="192.2" y="1733" width="0.4" height="15.0" fill="rgb(246,217,46)" rx="2" ry="2" />
<text  x="195.22" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (27 samples, 0.43%)</title><rect x="121.5" y="1749" width="5.1" height="15.0" fill="rgb(231,104,40)" rx="2" ry="2" />
<text  x="124.51" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="891.8" y="181" width="0.1" height="15.0" fill="rgb(223,10,12)" rx="2" ry="2" />
<text  x="894.76" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="127.2" y="901" width="0.1" height="15.0" fill="rgb(245,108,23)" rx="2" ry="2" />
<text  x="130.15" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (33 samples, 0.53%)</title><rect x="177.2" y="1781" width="6.2" height="15.0" fill="rgb(206,116,9)" rx="2" ry="2" />
<text  x="180.17" y="1791.5" ></text>
</g>
<g >
<title>unmap_single_vma (1 samples, 0.02%)</title><rect x="433.3" y="1845" width="0.2" height="15.0" fill="rgb(233,143,7)" rx="2" ry="2" />
<text  x="436.30" y="1855.5" ></text>
</g>
<g >
<title>TAgencyRating::ScoreUrl (132 samples, 2.10%)</title><rect x="127.9" y="1973" width="24.8" height="15.0" fill="rgb(226,176,22)" rx="2" ry="2" />
<text  x="130.91" y="1983.5" >T..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.0" y="1189" width="0.4" height="15.0" fill="rgb(235,29,23)" rx="2" ry="2" />
<text  x="1164.04" y="1199.5" ></text>
</g>
<g >
<title>operator new@plt (1 samples, 0.02%)</title><rect x="133.7" y="1605" width="0.2" height="15.0" fill="rgb(217,136,36)" rx="2" ry="2" />
<text  x="136.74" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="127.2" y="1301" width="0.1" height="15.0" fill="rgb(238,2,41)" rx="2" ry="2" />
<text  x="130.15" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="151.8" y="981" width="0.2" height="15.0" fill="rgb(206,194,20)" rx="2" ry="2" />
<text  x="154.79" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.4" y="1349" width="0.4" height="15.0" fill="rgb(226,204,21)" rx="2" ry="2" />
<text  x="1164.42" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (39 samples, 0.62%)</title><rect x="101.8" y="1717" width="7.3" height="15.0" fill="rgb(237,157,27)" rx="2" ry="2" />
<text  x="104.77" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="891.8" y="549" width="0.1" height="15.0" fill="rgb(220,121,4)" rx="2" ry="2" />
<text  x="894.76" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.4" y="1765" width="0.4" height="15.0" fill="rgb(223,180,7)" rx="2" ry="2" />
<text  x="1164.42" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="152.0" y="485" width="0.2" height="15.0" fill="rgb(248,136,32)" rx="2" ry="2" />
<text  x="154.98" y="495.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.03%)</title><rect x="995.9" y="2037" width="0.4" height="15.0" fill="rgb(236,126,51)" rx="2" ry="2" />
<text  x="998.93" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="805" width="0.4" height="15.0" fill="rgb(248,94,29)" rx="2" ry="2" />
<text  x="77.88" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (32 samples, 0.51%)</title><rect x="115.1" y="1685" width="6.0" height="15.0" fill="rgb(238,136,52)" rx="2" ry="2" />
<text  x="118.12" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.0" y="773" width="0.4" height="15.0" fill="rgb(212,103,0)" rx="2" ry="2" />
<text  x="1164.04" y="783.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="117" width="0.4" height="15.0" fill="rgb(247,95,12)" rx="2" ry="2" />
<text  x="77.88" y="127.5" ></text>
</g>
<g >
<title>TNewsCluster::SortByWeights (2 samples, 0.03%)</title><rect x="201.2" y="1989" width="0.4" height="15.0" fill="rgb(209,117,30)" rx="2" ry="2" />
<text  x="204.24" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="152.0" y="965" width="0.2" height="15.0" fill="rgb(238,28,18)" rx="2" ry="2" />
<text  x="154.98" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="152.0" y="437" width="0.2" height="15.0" fill="rgb(226,49,1)" rx="2" ry="2" />
<text  x="154.98" y="447.5" ></text>
</g>
<g >
<title>do_syscall_64 (15 samples, 0.24%)</title><rect x="39.9" y="1989" width="2.8" height="15.0" fill="rgb(206,144,20)" rx="2" ry="2" />
<text  x="42.90" y="1999.5" ></text>
</g>
<g >
<title>__strxfrm_l (30 samples, 0.48%)</title><rect x="1155.4" y="2037" width="5.6" height="15.0" fill="rgb(253,223,48)" rx="2" ry="2" />
<text  x="1158.40" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (125 samples, 1.99%)</title><rect x="127.9" y="1909" width="23.5" height="15.0" fill="rgb(241,92,27)" rx="2" ry="2" />
<text  x="130.91" y="1919.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.0" y="1237" width="0.4" height="15.0" fill="rgb(254,159,10)" rx="2" ry="2" />
<text  x="1164.04" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="151.8" y="757" width="0.2" height="15.0" fill="rgb(247,173,15)" rx="2" ry="2" />
<text  x="154.79" y="767.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.08%)</title><rect x="38.6" y="2037" width="0.9" height="15.0" fill="rgb(219,37,2)" rx="2" ry="2" />
<text  x="41.58" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.0" y="1861" width="0.4" height="15.0" fill="rgb(212,197,54)" rx="2" ry="2" />
<text  x="1164.04" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.4" y="1749" width="0.4" height="15.0" fill="rgb(228,223,18)" rx="2" ry="2" />
<text  x="1164.42" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (1 samples, 0.02%)</title><rect x="151.0" y="1781" width="0.2" height="15.0" fill="rgb(244,105,14)" rx="2" ry="2" />
<text  x="154.04" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="192.2" y="1669" width="0.4" height="15.0" fill="rgb(245,174,52)" rx="2" ry="2" />
<text  x="195.22" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.0" y="1829" width="0.4" height="15.0" fill="rgb(220,176,1)" rx="2" ry="2" />
<text  x="1164.04" y="1839.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::reserve (2 samples, 0.03%)</title><rect x="634.3" y="1861" width="0.4" height="15.0" fill="rgb(251,212,26)" rx="2" ry="2" />
<text  x="637.32" y="1871.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (4 samples, 0.06%)</title><rect x="410.9" y="1861" width="0.8" height="15.0" fill="rgb(239,55,47)" rx="2" ry="2" />
<text  x="413.92" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="127.2" y="1029" width="0.1" height="15.0" fill="rgb(221,115,16)" rx="2" ry="2" />
<text  x="130.15" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="127.5" y="789" width="0.4" height="15.0" fill="rgb(225,131,4)" rx="2" ry="2" />
<text  x="130.53" y="799.5" ></text>
</g>
<g >
<title>tgnews (6,275 samples, 100.00%)</title><rect x="10.0" y="2069" width="1180.0" height="15.0" fill="rgb(208,63,48)" rx="2" ry="2" />
<text  x="13.00" y="2079.5" >tgnews</text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (11 samples, 0.18%)</title><rect x="143.7" y="1653" width="2.1" height="15.0" fill="rgb(216,176,49)" rx="2" ry="2" />
<text  x="146.70" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.4" y="581" width="0.4" height="15.0" fill="rgb(247,27,15)" rx="2" ry="2" />
<text  x="1164.42" y="591.5" ></text>
</g>
<g >
<title>nlohmann::detail::output_string_adapter&lt;char, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::write_characters (1 samples, 0.02%)</title><rect x="572.5" y="1925" width="0.1" height="15.0" fill="rgb(218,106,43)" rx="2" ry="2" />
<text  x="575.45" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (32 samples, 0.51%)</title><rect x="95.7" y="1621" width="6.1" height="15.0" fill="rgb(206,42,26)" rx="2" ry="2" />
<text  x="98.75" y="1631.5" ></text>
</g>
<g >
<title>__x64_sys_read (4 samples, 0.06%)</title><rect x="79.4" y="1989" width="0.7" height="15.0" fill="rgb(211,66,27)" rx="2" ry="2" />
<text  x="82.39" y="1999.5" ></text>
</g>
<g >
<title>clear_page_erms (25 samples, 0.40%)</title><rect x="413.9" y="1845" width="4.7" height="15.0" fill="rgb(239,35,12)" rx="2" ry="2" />
<text  x="416.93" y="1855.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1116.7" y="2005" width="0.1" height="15.0" fill="rgb(220,97,18)" rx="2" ry="2" />
<text  x="1119.66" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.4" y="1605" width="0.4" height="15.0" fill="rgb(210,149,34)" rx="2" ry="2" />
<text  x="1164.42" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="192.2" y="1685" width="0.4" height="15.0" fill="rgb(242,178,2)" rx="2" ry="2" />
<text  x="195.22" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (30 samples, 0.48%)</title><rect x="131.7" y="1621" width="5.6" height="15.0" fill="rgb(236,57,37)" rx="2" ry="2" />
<text  x="134.67" y="1631.5" ></text>
</g>
<g >
<title>pfn_pte (2 samples, 0.03%)</title><rect x="36.0" y="1973" width="0.3" height="15.0" fill="rgb(214,164,2)" rx="2" ry="2" />
<text  x="38.95" y="1983.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.02%)</title><rect x="867.1" y="1989" width="0.2" height="15.0" fill="rgb(216,127,38)" rx="2" ry="2" />
<text  x="870.12" y="1999.5" ></text>
</g>
<g >
<title>cfree (1 samples, 0.02%)</title><rect x="183.6" y="1717" width="0.2" height="15.0" fill="rgb(237,116,7)" rx="2" ry="2" />
<text  x="186.57" y="1727.5" ></text>
</g>
<g >
<title>get_page_from_freelist (2 samples, 0.03%)</title><rect x="410.4" y="1829" width="0.3" height="15.0" fill="rgb(235,62,7)" rx="2" ry="2" />
<text  x="413.35" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.0" y="917" width="0.4" height="15.0" fill="rgb(209,64,19)" rx="2" ry="2" />
<text  x="1164.04" y="927.5" ></text>
</g>
<g >
<title>unmap_region (1 samples, 0.02%)</title><rect x="891.9" y="1957" width="0.2" height="15.0" fill="rgb(253,152,20)" rx="2" ry="2" />
<text  x="894.94" y="1967.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::basic_regex&lt;char const*&gt; (126 samples, 2.01%)</title><rect x="127.9" y="1941" width="23.7" height="15.0" fill="rgb(237,181,33)" rx="2" ry="2" />
<text  x="130.91" y="1951.5" >s..</text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (12 samples, 0.19%)</title><rect x="138.6" y="1621" width="2.3" height="15.0" fill="rgb(231,157,8)" rx="2" ry="2" />
<text  x="141.62" y="1631.5" ></text>
</g>
<g >
<title>__dynamic_cast (58 samples, 0.92%)</title><rect x="880.1" y="2053" width="10.9" height="15.0" fill="rgb(250,157,35)" rx="2" ry="2" />
<text  x="883.10" y="2063.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="891.9" y="2037" width="0.2" height="15.0" fill="rgb(217,204,26)" rx="2" ry="2" />
<text  x="894.94" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="192.2" y="1717" width="0.4" height="15.0" fill="rgb(239,206,9)" rx="2" ry="2" />
<text  x="195.22" y="1727.5" ></text>
</g>
<g >
<title>try_charge (1 samples, 0.02%)</title><rect x="699.6" y="1749" width="0.2" height="15.0" fill="rgb(208,58,47)" rx="2" ry="2" />
<text  x="702.57" y="1759.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (2 samples, 0.03%)</title><rect x="136.9" y="1605" width="0.4" height="15.0" fill="rgb(207,136,36)" rx="2" ry="2" />
<text  x="139.93" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="192.2" y="1365" width="0.2" height="15.0" fill="rgb(252,130,14)" rx="2" ry="2" />
<text  x="195.22" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.0" y="629" width="0.4" height="15.0" fill="rgb(218,47,40)" rx="2" ry="2" />
<text  x="1164.04" y="639.5" ></text>
</g>
<g >
<title>fasttext::DenseMatrix::addRowToVector (611 samples, 9.74%)</title><rect x="433.9" y="1973" width="114.9" height="15.0" fill="rgb(211,38,25)" rx="2" ry="2" />
<text  x="436.86" y="1983.5" >fasttext::Dens..</text>
</g>
<g >
<title>__vfs_read (4 samples, 0.06%)</title><rect x="891.0" y="1957" width="0.8" height="15.0" fill="rgb(242,156,53)" rx="2" ry="2" />
<text  x="894.00" y="1967.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (4 samples, 0.06%)</title><rect x="182.1" y="1653" width="0.7" height="15.0" fill="rgb(229,60,37)" rx="2" ry="2" />
<text  x="185.06" y="1663.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (11 samples, 0.18%)</title><rect x="40.1" y="1893" width="2.1" height="15.0" fill="rgb(222,64,51)" rx="2" ry="2" />
<text  x="43.09" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1161.2" y="117" width="0.2" height="15.0" fill="rgb(238,149,22)" rx="2" ry="2" />
<text  x="1164.23" y="127.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.02%)</title><rect x="1092.0" y="2021" width="0.2" height="15.0" fill="rgb(253,200,15)" rx="2" ry="2" />
<text  x="1095.03" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.0" y="1621" width="0.4" height="15.0" fill="rgb(223,28,5)" rx="2" ry="2" />
<text  x="1164.04" y="1631.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id@plt (2 samples, 0.03%)</title><rect x="161.8" y="1589" width="0.3" height="15.0" fill="rgb(236,104,46)" rx="2" ry="2" />
<text  x="164.75" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (45 samples, 0.72%)</title><rect x="155.0" y="1621" width="8.4" height="15.0" fill="rgb(254,133,23)" rx="2" ry="2" />
<text  x="157.98" y="1631.5" ></text>
</g>
<g >
<title>fasttext::ProductQuantizer::get_centroids (6 samples, 0.10%)</title><rect x="1086.0" y="2053" width="1.1" height="15.0" fill="rgb(217,212,33)" rx="2" ry="2" />
<text  x="1089.01" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (27 samples, 0.43%)</title><rect x="121.5" y="1813" width="5.1" height="15.0" fill="rgb(214,162,18)" rx="2" ry="2" />
<text  x="124.51" y="1823.5" ></text>
</g>
<g >
<title>__pthread_once (2 samples, 0.03%)</title><rect x="153.9" y="1957" width="0.3" height="15.0" fill="rgb(225,118,50)" rx="2" ry="2" />
<text  x="156.86" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="1045" width="0.4" height="15.0" fill="rgb(232,145,32)" rx="2" ry="2" />
<text  x="77.88" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="891.8" y="421" width="0.1" height="15.0" fill="rgb(239,144,53)" rx="2" ry="2" />
<text  x="894.76" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.4" y="1029" width="0.4" height="15.0" fill="rgb(205,112,30)" rx="2" ry="2" />
<text  x="1164.42" y="1039.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="832.0" y="1861" width="0.1" height="15.0" fill="rgb(212,103,14)" rx="2" ry="2" />
<text  x="834.96" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.4" y="1445" width="0.4" height="15.0" fill="rgb(230,210,18)" rx="2" ry="2" />
<text  x="1164.42" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_expression_term&lt;false, false&gt; (1 samples, 0.02%)</title><rect x="150.8" y="1701" width="0.2" height="15.0" fill="rgb(209,94,18)" rx="2" ry="2" />
<text  x="153.85" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.0" y="1765" width="0.4" height="15.0" fill="rgb(219,47,26)" rx="2" ry="2" />
<text  x="1164.04" y="1775.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="131.3" y="1573" width="0.2" height="15.0" fill="rgb(239,115,48)" rx="2" ry="2" />
<text  x="134.29" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (19 samples, 0.30%)</title><rect x="128.1" y="1685" width="3.6" height="15.0" fill="rgb(238,125,31)" rx="2" ry="2" />
<text  x="131.09" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.4" y="341" width="0.4" height="15.0" fill="rgb(243,76,33)" rx="2" ry="2" />
<text  x="1164.42" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.4" y="645" width="0.4" height="15.0" fill="rgb(223,32,43)" rx="2" ry="2" />
<text  x="1164.42" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="127.2" y="501" width="0.1" height="15.0" fill="rgb(249,110,49)" rx="2" ry="2" />
<text  x="130.15" y="511.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="702.2" y="1845" width="0.2" height="15.0" fill="rgb(220,3,29)" rx="2" ry="2" />
<text  x="705.20" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (104 samples, 1.66%)</title><rect x="95.6" y="1781" width="19.5" height="15.0" fill="rgb(226,81,24)" rx="2" ry="2" />
<text  x="98.56" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="127.5" y="1157" width="0.4" height="15.0" fill="rgb(241,117,45)" rx="2" ry="2" />
<text  x="130.53" y="1167.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (70 samples, 1.12%)</title><rect x="586.6" y="1893" width="13.1" height="15.0" fill="rgb(217,36,38)" rx="2" ry="2" />
<text  x="589.55" y="1903.5" ></text>
</g>
<g >
<title>release_pages (2 samples, 0.03%)</title><rect x="570.4" y="1797" width="0.4" height="15.0" fill="rgb(237,139,31)" rx="2" ry="2" />
<text  x="573.38" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="152.0" y="1029" width="0.2" height="15.0" fill="rgb(220,87,54)" rx="2" ry="2" />
<text  x="154.98" y="1039.5" ></text>
</g>
<g >
<title>cfree (163 samples, 2.60%)</title><rect x="892.5" y="2053" width="30.7" height="15.0" fill="rgb(247,108,47)" rx="2" ry="2" />
<text  x="895.51" y="2063.5" >cf..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="192.4" y="1093" width="0.2" height="15.0" fill="rgb(208,90,49)" rx="2" ry="2" />
<text  x="195.41" y="1103.5" ></text>
</g>
<g >
<title>fasttext::Vector::norm (35 samples, 0.56%)</title><rect x="317.1" y="1989" width="6.6" height="15.0" fill="rgb(233,2,36)" rx="2" ry="2" />
<text  x="320.08" y="1999.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (1 samples, 0.02%)</title><rect x="433.3" y="1925" width="0.2" height="15.0" fill="rgb(225,198,11)" rx="2" ry="2" />
<text  x="436.30" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="891.8" y="853" width="0.1" height="15.0" fill="rgb(250,159,22)" rx="2" ry="2" />
<text  x="894.76" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="152.0" y="693" width="0.2" height="15.0" fill="rgb(225,163,53)" rx="2" ry="2" />
<text  x="154.98" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (31 samples, 0.49%)</title><rect x="131.7" y="1653" width="5.8" height="15.0" fill="rgb(234,167,29)" rx="2" ry="2" />
<text  x="134.67" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.0" y="437" width="0.4" height="15.0" fill="rgb(254,23,35)" rx="2" ry="2" />
<text  x="1164.04" y="447.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;std::unique_ptr&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;  (1,407 samples, 22.42%)</title><rect x="575.1" y="2005" width="264.6" height="15.0" fill="rgb(227,225,47)" rx="2" ry="2" />
<text  x="578.08" y="2015.5" >std::_Function_handler&lt;std::unique_..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="891.8" y="1861" width="0.1" height="15.0" fill="rgb(232,31,31)" rx="2" ry="2" />
<text  x="894.76" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (2 samples, 0.03%)</title><rect x="121.1" y="1781" width="0.4" height="15.0" fill="rgb(242,160,5)" rx="2" ry="2" />
<text  x="124.14" y="1791.5" ></text>
</g>
<g >
<title>fasttext::entry::entry (1 samples, 0.02%)</title><rect x="1092.0" y="2053" width="0.2" height="15.0" fill="rgb(216,183,50)" rx="2" ry="2" />
<text  x="1095.03" y="2063.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (1 samples, 0.02%)</title><rect x="35.0" y="1957" width="0.2" height="15.0" fill="rgb(228,85,34)" rx="2" ry="2" />
<text  x="38.01" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (33 samples, 0.53%)</title><rect x="95.6" y="1669" width="6.2" height="15.0" fill="rgb(207,21,11)" rx="2" ry="2" />
<text  x="98.56" y="1679.5" ></text>
</g>
<g >
<title>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::dump (2 samples, 0.03%)</title><rect x="572.5" y="1973" width="0.3" height="15.0" fill="rgb(224,161,3)" rx="2" ry="2" />
<text  x="575.45" y="1983.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id@plt (2 samples, 0.03%)</title><rect x="114.6" y="1637" width="0.3" height="15.0" fill="rgb(251,191,28)" rx="2" ry="2" />
<text  x="117.55" y="1647.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (2 samples, 0.03%)</title><rect x="34.6" y="1925" width="0.4" height="15.0" fill="rgb(230,169,40)" rx="2" ry="2" />
<text  x="37.63" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="151.8" y="1285" width="0.2" height="15.0" fill="rgb(242,166,5)" rx="2" ry="2" />
<text  x="154.79" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (191 samples, 3.04%)</title><rect x="154.6" y="1893" width="35.9" height="15.0" fill="rgb(221,209,39)" rx="2" ry="2" />
<text  x="157.61" y="1903.5" >std..</text>
</g>
<g >
<title>alloc_pages_current (1 samples, 0.02%)</title><rect x="891.9" y="1861" width="0.2" height="15.0" fill="rgb(254,100,33)" rx="2" ry="2" />
<text  x="894.94" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="192.4" y="1141" width="0.2" height="15.0" fill="rgb(237,213,39)" rx="2" ry="2" />
<text  x="195.41" y="1151.5" ></text>
</g>
<g >
<title>[libm-2.27.so] (8 samples, 0.13%)</title><rect x="36.3" y="2053" width="1.5" height="15.0" fill="rgb(216,7,51)" rx="2" ry="2" />
<text  x="39.33" y="2063.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="698.1" y="1797" width="0.2" height="15.0" fill="rgb(227,103,51)" rx="2" ry="2" />
<text  x="701.07" y="1807.5" ></text>
</g>
<g >
<title>nlohmann::detail::json_sax_dom_parser&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::handle_value&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (2 samples, 0.03%)</title><rect x="81.3" y="1941" width="0.3" height="15.0" fill="rgb(215,112,19)" rx="2" ry="2" />
<text  x="84.27" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="151.8" y="693" width="0.2" height="15.0" fill="rgb(240,95,48)" rx="2" ry="2" />
<text  x="154.79" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Scanner&lt;char&gt;::_M_scan_normal (1 samples, 0.02%)</title><rect x="190.3" y="1813" width="0.2" height="15.0" fill="rgb(210,174,40)" rx="2" ry="2" />
<text  x="193.34" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="127.2" y="629" width="0.1" height="15.0" fill="rgb(226,46,45)" rx="2" ry="2" />
<text  x="130.15" y="639.5" ></text>
</g>
<g >
<title>fasttext::Vector::addVector (9 samples, 0.14%)</title><rect x="311.4" y="1989" width="1.7" height="15.0" fill="rgb(220,58,46)" rx="2" ry="2" />
<text  x="314.44" y="1999.5" ></text>
</g>
<g >
<title>onmt::is_alphabet (27 samples, 0.43%)</title><rect x="742.8" y="1893" width="5.1" height="15.0" fill="rgb(247,75,7)" rx="2" ry="2" />
<text  x="745.82" y="1903.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="699.8" y="1829" width="0.1" height="15.0" fill="rgb(245,216,6)" rx="2" ry="2" />
<text  x="702.76" y="1839.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="146.0" y="1653" width="0.1" height="15.0" fill="rgb(210,38,19)" rx="2" ry="2" />
<text  x="148.96" y="1663.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="698.1" y="1829" width="0.2" height="15.0" fill="rgb(220,112,48)" rx="2" ry="2" />
<text  x="701.07" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="127.2" y="1173" width="0.1" height="15.0" fill="rgb(243,229,31)" rx="2" ry="2" />
<text  x="130.15" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="127.5" y="933" width="0.4" height="15.0" fill="rgb(208,146,5)" rx="2" ry="2" />
<text  x="130.53" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (97 samples, 1.55%)</title><rect x="128.1" y="1781" width="18.2" height="15.0" fill="rgb(221,78,11)" rx="2" ry="2" />
<text  x="131.09" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="891.8" y="117" width="0.1" height="15.0" fill="rgb(215,72,14)" rx="2" ry="2" />
<text  x="894.76" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="151.8" y="1237" width="0.2" height="15.0" fill="rgb(254,153,6)" rx="2" ry="2" />
<text  x="154.79" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (32 samples, 0.51%)</title><rect x="115.1" y="1733" width="6.0" height="15.0" fill="rgb(229,121,33)" rx="2" ry="2" />
<text  x="118.12" y="1743.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::getId (1 samples, 0.02%)</title><rect x="548.8" y="1973" width="0.1" height="15.0" fill="rgb(231,44,0)" rx="2" ry="2" />
<text  x="551.76" y="1983.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (1 samples, 0.02%)</title><rect x="832.5" y="1893" width="0.2" height="15.0" fill="rgb(236,183,7)" rx="2" ry="2" />
<text  x="835.52" y="1903.5" ></text>
</g>
<g >
<title>operator new[] (1 samples, 0.02%)</title><rect x="1117.2" y="2053" width="0.2" height="15.0" fill="rgb(242,44,6)" rx="2" ry="2" />
<text  x="1120.23" y="2063.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (4 samples, 0.06%)</title><rect x="168.0" y="1605" width="0.7" height="15.0" fill="rgb(243,106,54)" rx="2" ry="2" />
<text  x="170.96" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="151.6" y="1461" width="0.6" height="15.0" fill="rgb(234,63,45)" rx="2" ry="2" />
<text  x="154.60" y="1471.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::value (1 samples, 0.02%)</title><rect x="170.2" y="1717" width="0.2" height="15.0" fill="rgb(226,178,32)" rx="2" ry="2" />
<text  x="173.22" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="151.6" y="1381" width="0.6" height="15.0" fill="rgb(205,11,0)" rx="2" ry="2" />
<text  x="154.60" y="1391.5" ></text>
</g>
<g >
<title>std::operator&gt;&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (5 samples, 0.08%)</title><rect x="569.1" y="1973" width="0.9" height="15.0" fill="rgb(219,74,38)" rx="2" ry="2" />
<text  x="572.07" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="151.8" y="133" width="0.2" height="15.0" fill="rgb(226,77,18)" rx="2" ry="2" />
<text  x="154.79" y="143.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="127.2" y="1557" width="0.3" height="15.0" fill="rgb(213,145,37)" rx="2" ry="2" />
<text  x="130.15" y="1567.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (10 samples, 0.16%)</title><rect x="864.5" y="2005" width="1.9" height="15.0" fill="rgb(216,110,10)" rx="2" ry="2" />
<text  x="867.49" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="891.8" y="101" width="0.1" height="15.0" fill="rgb(211,171,16)" rx="2" ry="2" />
<text  x="894.76" y="111.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.4" y="197" width="0.4" height="15.0" fill="rgb(238,25,14)" rx="2" ry="2" />
<text  x="1164.42" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="891.8" y="485" width="0.1" height="15.0" fill="rgb(249,172,45)" rx="2" ry="2" />
<text  x="894.76" y="495.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="32.6" y="2005" width="0.2" height="15.0" fill="rgb(240,47,1)" rx="2" ry="2" />
<text  x="35.57" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="133" width="0.4" height="15.0" fill="rgb(217,48,51)" rx="2" ry="2" />
<text  x="77.88" y="143.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="866.4" y="2021" width="0.2" height="15.0" fill="rgb(237,12,50)" rx="2" ry="2" />
<text  x="869.37" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (22 samples, 0.35%)</title><rect x="137.5" y="1669" width="4.1" height="15.0" fill="rgb(245,177,46)" rx="2" ry="2" />
<text  x="140.50" y="1679.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.03%)</title><rect x="839.3" y="1973" width="0.4" height="15.0" fill="rgb(242,189,44)" rx="2" ry="2" />
<text  x="842.29" y="1983.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;std::__detail::_State&lt;char&gt; const*, std::__detail::_State&lt;char&gt;*&gt; (1 samples, 0.02%)</title><rect x="154.8" y="1653" width="0.2" height="15.0" fill="rgb(225,179,13)" rx="2" ry="2" />
<text  x="157.80" y="1663.5" ></text>
</g>
<g >
<title>atime_needs_update (1 samples, 0.02%)</title><rect x="80.0" y="1861" width="0.1" height="15.0" fill="rgb(251,51,54)" rx="2" ry="2" />
<text  x="82.95" y="1871.5" ></text>
</g>
<g >
<title>cfree (1 samples, 0.02%)</title><rect x="185.1" y="1701" width="0.2" height="15.0" fill="rgb(240,33,4)" rx="2" ry="2" />
<text  x="188.07" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="192.4" y="1173" width="0.2" height="15.0" fill="rgb(218,176,34)" rx="2" ry="2" />
<text  x="195.41" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.0" y="997" width="0.4" height="15.0" fill="rgb(221,37,12)" rx="2" ry="2" />
<text  x="1164.04" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="891.8" y="1397" width="0.1" height="15.0" fill="rgb(225,105,48)" rx="2" ry="2" />
<text  x="894.76" y="1407.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id@plt (1 samples, 0.02%)</title><rect x="107.8" y="1605" width="0.2" height="15.0" fill="rgb(230,151,43)" rx="2" ry="2" />
<text  x="110.78" y="1615.5" ></text>
</g>
<g >
<title>std::vector&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::allocator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;::_M_realloc_insert&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="574.1" y="2005" width="0.2" height="15.0" fill="rgb(219,70,9)" rx="2" ry="2" />
<text  x="577.14" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="192.0" y="1781" width="0.6" height="15.0" fill="rgb(215,101,31)" rx="2" ry="2" />
<text  x="195.03" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="127.2" y="997" width="0.1" height="15.0" fill="rgb(217,145,14)" rx="2" ry="2" />
<text  x="130.15" y="1007.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (1 samples, 0.02%)</title><rect x="100.8" y="1573" width="0.2" height="15.0" fill="rgb(239,68,52)" rx="2" ry="2" />
<text  x="103.83" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="152.0" y="549" width="0.2" height="15.0" fill="rgb(249,50,30)" rx="2" ry="2" />
<text  x="154.98" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="152.0" y="421" width="0.2" height="15.0" fill="rgb(242,81,21)" rx="2" ry="2" />
<text  x="154.98" y="431.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.02%)</title><rect x="154.2" y="1925" width="0.2" height="15.0" fill="rgb(211,115,15)" rx="2" ry="2" />
<text  x="157.23" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.0" y="2053" width="0.4" height="15.0" fill="rgb(225,47,54)" rx="2" ry="2" />
<text  x="1164.04" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (24 samples, 0.38%)</title><rect x="74.9" y="2037" width="4.5" height="15.0" fill="rgb(210,33,51)" rx="2" ry="2" />
<text  x="77.88" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="127.2" y="1045" width="0.1" height="15.0" fill="rgb(211,30,52)" rx="2" ry="2" />
<text  x="130.15" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="891.8" y="741" width="0.1" height="15.0" fill="rgb(218,144,12)" rx="2" ry="2" />
<text  x="894.76" y="751.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="1749" width="0.4" height="15.0" fill="rgb(219,6,6)" rx="2" ry="2" />
<text  x="77.88" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="1365" width="0.4" height="15.0" fill="rgb(223,55,17)" rx="2" ry="2" />
<text  x="77.88" y="1375.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (3 samples, 0.05%)</title><rect x="891.2" y="1877" width="0.6" height="15.0" fill="rgb(229,162,21)" rx="2" ry="2" />
<text  x="894.19" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (39 samples, 0.62%)</title><rect x="101.8" y="1701" width="7.3" height="15.0" fill="rgb(250,206,2)" rx="2" ry="2" />
<text  x="104.77" y="1711.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.02%)</title><rect x="180.7" y="1653" width="0.2" height="15.0" fill="rgb(216,4,41)" rx="2" ry="2" />
<text  x="183.75" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (36 samples, 0.57%)</title><rect x="183.4" y="1797" width="6.7" height="15.0" fill="rgb(216,193,48)" rx="2" ry="2" />
<text  x="186.38" y="1807.5" ></text>
</g>
<g >
<title>clear_page_erms (2 samples, 0.03%)</title><rect x="666.5" y="1749" width="0.4" height="15.0" fill="rgb(210,47,53)" rx="2" ry="2" />
<text  x="669.47" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="127.2" y="805" width="0.1" height="15.0" fill="rgb(243,120,47)" rx="2" ry="2" />
<text  x="130.15" y="815.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="965" width="0.4" height="15.0" fill="rgb(224,84,47)" rx="2" ry="2" />
<text  x="77.88" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.4" y="869" width="0.4" height="15.0" fill="rgb(212,80,17)" rx="2" ry="2" />
<text  x="1164.42" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.4" y="2037" width="0.4" height="15.0" fill="rgb(225,209,36)" rx="2" ry="2" />
<text  x="1164.42" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="1061" width="0.4" height="15.0" fill="rgb(211,123,28)" rx="2" ry="2" />
<text  x="77.88" y="1071.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="832.0" y="1845" width="0.1" height="15.0" fill="rgb(215,202,32)" rx="2" ry="2" />
<text  x="834.96" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="1845" width="0.4" height="15.0" fill="rgb(247,185,27)" rx="2" ry="2" />
<text  x="77.88" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="127.5" y="1317" width="0.4" height="15.0" fill="rgb(223,45,54)" rx="2" ry="2" />
<text  x="130.53" y="1327.5" ></text>
</g>
<g >
<title>TSlinkClustering::Cluster (1,300 samples, 20.72%)</title><rect x="326.3" y="2005" width="244.5" height="15.0" fill="rgb(233,7,39)" rx="2" ry="2" />
<text  x="329.30" y="2015.5" >TSlinkClustering::Cluster</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="127.2" y="1205" width="0.1" height="15.0" fill="rgb(234,120,25)" rx="2" ry="2" />
<text  x="130.15" y="1215.5" ></text>
</g>
<g >
<title>malloc (2 samples, 0.03%)</title><rect x="621.2" y="1877" width="0.3" height="15.0" fill="rgb(251,174,50)" rx="2" ry="2" />
<text  x="624.16" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (18 samples, 0.29%)</title><rect x="128.1" y="1621" width="3.4" height="15.0" fill="rgb(238,196,41)" rx="2" ry="2" />
<text  x="131.09" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (27 samples, 0.43%)</title><rect x="121.5" y="1781" width="5.1" height="15.0" fill="rgb(225,191,30)" rx="2" ry="2" />
<text  x="124.51" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (25 samples, 0.40%)</title><rect x="141.6" y="1765" width="4.7" height="15.0" fill="rgb(215,112,32)" rx="2" ry="2" />
<text  x="144.63" y="1775.5" ></text>
</g>
<g >
<title>onmt::unicode::is_separator (51 samples, 0.81%)</title><rect x="808.5" y="1893" width="9.5" height="15.0" fill="rgb(207,55,3)" rx="2" ry="2" />
<text  x="811.45" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="151.6" y="1669" width="0.6" height="15.0" fill="rgb(228,161,39)" rx="2" ry="2" />
<text  x="154.60" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="152.0" y="1061" width="0.2" height="15.0" fill="rgb(236,15,13)" rx="2" ry="2" />
<text  x="154.98" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="192.4" y="1285" width="0.2" height="15.0" fill="rgb(214,133,18)" rx="2" ry="2" />
<text  x="195.41" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="151.6" y="1605" width="0.6" height="15.0" fill="rgb(242,153,36)" rx="2" ry="2" />
<text  x="154.60" y="1615.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (44 samples, 0.70%)</title><rect x="823.9" y="1893" width="8.2" height="15.0" fill="rgb(239,31,11)" rx="2" ry="2" />
<text  x="826.87" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (2 samples, 0.03%)</title><rect x="190.5" y="1877" width="0.4" height="15.0" fill="rgb(220,123,12)" rx="2" ry="2" />
<text  x="193.53" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="901" width="0.4" height="15.0" fill="rgb(248,42,31)" rx="2" ry="2" />
<text  x="77.88" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="151.6" y="1333" width="0.6" height="15.0" fill="rgb(245,155,37)" rx="2" ry="2" />
<text  x="154.60" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="151.8" y="1125" width="0.2" height="15.0" fill="rgb(235,163,53)" rx="2" ry="2" />
<text  x="154.79" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="152.0" y="789" width="0.2" height="15.0" fill="rgb(211,93,26)" rx="2" ry="2" />
<text  x="154.98" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="891.8" y="645" width="0.1" height="15.0" fill="rgb(226,74,49)" rx="2" ry="2" />
<text  x="894.76" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="152.0" y="533" width="0.2" height="15.0" fill="rgb(211,88,12)" rx="2" ry="2" />
<text  x="154.98" y="543.5" ></text>
</g>
<g >
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="732.9" y="1781" width="0.1" height="15.0" fill="rgb(254,95,26)" rx="2" ry="2" />
<text  x="735.86" y="1791.5" ></text>
</g>
<g >
<title>fasttext::FastText::getWordVector (16 samples, 0.25%)</title><rect x="550.1" y="1973" width="3.0" height="15.0" fill="rgb(212,192,7)" rx="2" ry="2" />
<text  x="553.07" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="891.8" y="821" width="0.1" height="15.0" fill="rgb(247,181,7)" rx="2" ry="2" />
<text  x="894.76" y="831.5" ></text>
</g>
<g >
<title>do_page_fault (19 samples, 0.30%)</title><rect x="32.8" y="2021" width="3.5" height="15.0" fill="rgb(233,87,1)" rx="2" ry="2" />
<text  x="35.75" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="151.6" y="1813" width="0.6" height="15.0" fill="rgb(253,148,17)" rx="2" ry="2" />
<text  x="154.60" y="1823.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (4 samples, 0.06%)</title><rect x="140.1" y="1605" width="0.8" height="15.0" fill="rgb(229,96,54)" rx="2" ry="2" />
<text  x="143.13" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.0" y="341" width="0.4" height="15.0" fill="rgb(233,189,7)" rx="2" ry="2" />
<text  x="1164.04" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (36 samples, 0.57%)</title><rect x="163.4" y="1701" width="6.8" height="15.0" fill="rgb(222,69,14)" rx="2" ry="2" />
<text  x="166.45" y="1711.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.02%)</title><rect x="853.6" y="2037" width="0.2" height="15.0" fill="rgb(234,173,53)" rx="2" ry="2" />
<text  x="856.58" y="2047.5" ></text>
</g>
<g >
<title>std::istream::sentry::sentry (2 samples, 0.03%)</title><rect x="567.9" y="1973" width="0.4" height="15.0" fill="rgb(250,58,35)" rx="2" ry="2" />
<text  x="570.94" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="151.8" y="1157" width="0.2" height="15.0" fill="rgb(209,6,8)" rx="2" ry="2" />
<text  x="154.79" y="1167.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (2 samples, 0.03%)</title><rect x="139.2" y="1605" width="0.4" height="15.0" fill="rgb(245,146,27)" rx="2" ry="2" />
<text  x="142.19" y="1615.5" ></text>
</g>
<g >
<title>onmt::unicode::explode_utf8 (1 samples, 0.02%)</title><rect x="748.5" y="1893" width="0.2" height="15.0" fill="rgb(232,51,50)" rx="2" ry="2" />
<text  x="751.46" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.0" y="2021" width="0.4" height="15.0" fill="rgb(238,97,48)" rx="2" ry="2" />
<text  x="1164.04" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="192.4" y="629" width="0.2" height="15.0" fill="rgb(233,203,25)" rx="2" ry="2" />
<text  x="195.41" y="639.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (1 samples, 0.02%)</title><rect x="150.3" y="1669" width="0.2" height="15.0" fill="rgb(248,209,11)" rx="2" ry="2" />
<text  x="153.28" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.4" y="1621" width="0.4" height="15.0" fill="rgb(254,79,22)" rx="2" ry="2" />
<text  x="1164.42" y="1631.5" ></text>
</g>
<g >
<title>std::ios_base::~ios_base (3 samples, 0.05%)</title><rect x="866.6" y="2037" width="0.5" height="15.0" fill="rgb(217,3,43)" rx="2" ry="2" />
<text  x="869.56" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="645" width="0.4" height="15.0" fill="rgb(221,173,6)" rx="2" ry="2" />
<text  x="77.88" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="152.0" y="837" width="0.2" height="15.0" fill="rgb(212,161,21)" rx="2" ry="2" />
<text  x="154.98" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="151.8" y="309" width="0.2" height="15.0" fill="rgb(226,163,0)" rx="2" ry="2" />
<text  x="154.79" y="319.5" ></text>
</g>
<g >
<title>Annotate (80 samples, 1.27%)</title><rect x="80.1" y="2005" width="15.1" height="15.0" fill="rgb(235,186,22)" rx="2" ry="2" />
<text  x="83.14" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="127.2" y="725" width="0.1" height="15.0" fill="rgb(211,227,22)" rx="2" ry="2" />
<text  x="130.15" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (36 samples, 0.57%)</title><rect x="183.4" y="1781" width="6.7" height="15.0" fill="rgb(227,219,29)" rx="2" ry="2" />
<text  x="186.38" y="1791.5" ></text>
</g>
<g >
<title>onmt::unicode::explode_utf8_with_marks (174 samples, 2.77%)</title><rect x="667.2" y="1877" width="32.7" height="15.0" fill="rgb(248,63,15)" rx="2" ry="2" />
<text  x="670.23" y="1887.5" >on..</text>
</g>
<g >
<title>pmd_devmap_trans_unstable (1 samples, 0.02%)</title><rect x="411.7" y="1861" width="0.2" height="15.0" fill="rgb(217,176,3)" rx="2" ry="2" />
<text  x="414.67" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="127.5" y="837" width="0.4" height="15.0" fill="rgb(217,213,25)" rx="2" ry="2" />
<text  x="130.53" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (32 samples, 0.51%)</title><rect x="177.2" y="1717" width="6.0" height="15.0" fill="rgb(242,111,32)" rx="2" ry="2" />
<text  x="180.17" y="1727.5" ></text>
</g>
<g >
<title>__munmap (1 samples, 0.02%)</title><rect x="433.3" y="1973" width="0.2" height="15.0" fill="rgb(207,187,48)" rx="2" ry="2" />
<text  x="436.30" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="1189" width="0.4" height="15.0" fill="rgb(215,213,39)" rx="2" ry="2" />
<text  x="77.88" y="1199.5" ></text>
</g>
<g >
<title>malloc (2 samples, 0.03%)</title><rect x="633.6" y="1861" width="0.3" height="15.0" fill="rgb(223,79,22)" rx="2" ry="2" />
<text  x="636.57" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.4" y="757" width="0.4" height="15.0" fill="rgb(224,70,54)" rx="2" ry="2" />
<text  x="1164.42" y="767.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::_M_default_append (1 samples, 0.02%)</title><rect x="152.2" y="1925" width="0.2" height="15.0" fill="rgb(247,20,54)" rx="2" ry="2" />
<text  x="155.16" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="192.4" y="853" width="0.2" height="15.0" fill="rgb(249,116,46)" rx="2" ry="2" />
<text  x="195.41" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="127.5" y="901" width="0.4" height="15.0" fill="rgb(211,144,27)" rx="2" ry="2" />
<text  x="130.53" y="911.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (72 samples, 1.15%)</title><rect x="1161.8" y="2037" width="13.5" height="15.0" fill="rgb(252,195,50)" rx="2" ry="2" />
<text  x="1164.79" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (33 samples, 0.53%)</title><rect x="95.6" y="1701" width="6.2" height="15.0" fill="rgb(218,12,4)" rx="2" ry="2" />
<text  x="98.56" y="1711.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="152.7" y="1989" width="0.2" height="15.0" fill="rgb(237,37,20)" rx="2" ry="2" />
<text  x="155.73" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="1637" width="0.4" height="15.0" fill="rgb(233,168,32)" rx="2" ry="2" />
<text  x="77.88" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="127.5" y="1029" width="0.4" height="15.0" fill="rgb(249,226,44)" rx="2" ry="2" />
<text  x="130.53" y="1039.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="1317" width="0.4" height="15.0" fill="rgb(244,61,29)" rx="2" ry="2" />
<text  x="77.88" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.08%)</title><rect x="127.0" y="1829" width="0.9" height="15.0" fill="rgb(230,81,21)" rx="2" ry="2" />
<text  x="129.97" y="1839.5" ></text>
</g>
<g >
<title>new_sync_read (4 samples, 0.06%)</title><rect x="891.0" y="1941" width="0.8" height="15.0" fill="rgb(238,92,1)" rx="2" ry="2" />
<text  x="894.00" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="127.2" y="917" width="0.1" height="15.0" fill="rgb(224,184,20)" rx="2" ry="2" />
<text  x="130.15" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.0" y="1029" width="0.4" height="15.0" fill="rgb(214,194,2)" rx="2" ry="2" />
<text  x="1164.04" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="891.8" y="1941" width="0.1" height="15.0" fill="rgb(210,26,25)" rx="2" ry="2" />
<text  x="894.76" y="1951.5" ></text>
</g>
<g >
<title>std::locale::operator= (2 samples, 0.03%)</title><rect x="39.1" y="2021" width="0.4" height="15.0" fill="rgb(237,4,29)" rx="2" ry="2" />
<text  x="42.15" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (36 samples, 0.57%)</title><rect x="163.4" y="1653" width="6.8" height="15.0" fill="rgb(221,133,20)" rx="2" ry="2" />
<text  x="166.45" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (35 samples, 0.56%)</title><rect x="170.4" y="1717" width="6.6" height="15.0" fill="rgb(233,131,32)" rx="2" ry="2" />
<text  x="173.40" y="1727.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="80.5" y="1941" width="0.2" height="15.0" fill="rgb(206,130,34)" rx="2" ry="2" />
<text  x="83.52" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.4" y="1573" width="0.4" height="15.0" fill="rgb(206,29,15)" rx="2" ry="2" />
<text  x="1164.42" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="152.0" y="469" width="0.2" height="15.0" fill="rgb(230,16,17)" rx="2" ry="2" />
<text  x="154.98" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="151.6" y="1317" width="0.2" height="15.0" fill="rgb(251,43,53)" rx="2" ry="2" />
<text  x="154.60" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.0" y="245" width="0.4" height="15.0" fill="rgb(250,191,31)" rx="2" ry="2" />
<text  x="1164.04" y="255.5" ></text>
</g>
<g >
<title>new_sync_read (4 samples, 0.06%)</title><rect x="79.4" y="1925" width="0.7" height="15.0" fill="rgb(247,196,42)" rx="2" ry="2" />
<text  x="82.39" y="1935.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="742.6" y="1861" width="0.2" height="15.0" fill="rgb(206,81,7)" rx="2" ry="2" />
<text  x="745.63" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1161.0" y="69" width="0.2" height="15.0" fill="rgb(217,164,39)" rx="2" ry="2" />
<text  x="1164.04" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.4" y="1461" width="0.4" height="15.0" fill="rgb(244,142,38)" rx="2" ry="2" />
<text  x="1164.42" y="1471.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="389" width="0.4" height="15.0" fill="rgb(248,227,22)" rx="2" ry="2" />
<text  x="77.88" y="399.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;std::__detail::_State&lt;char&gt; const*, std::__detail::_State&lt;char&gt;*&gt; (1 samples, 0.02%)</title><rect x="121.3" y="1717" width="0.2" height="15.0" fill="rgb(241,216,39)" rx="2" ry="2" />
<text  x="124.32" y="1727.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="570.4" y="1957" width="0.4" height="15.0" fill="rgb(235,46,54)" rx="2" ry="2" />
<text  x="573.38" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.0" y="1157" width="0.4" height="15.0" fill="rgb(208,76,19)" rx="2" ry="2" />
<text  x="1164.04" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.4" y="1413" width="0.4" height="15.0" fill="rgb(205,183,3)" rx="2" ry="2" />
<text  x="1164.42" y="1423.5" ></text>
</g>
<g >
<title>[unknown] (7 samples, 0.11%)</title><rect x="863.2" y="2005" width="1.3" height="15.0" fill="rgb(253,70,42)" rx="2" ry="2" />
<text  x="866.17" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="127.5" y="1205" width="0.4" height="15.0" fill="rgb(245,110,11)" rx="2" ry="2" />
<text  x="130.53" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="127.5" y="1445" width="0.4" height="15.0" fill="rgb(219,134,46)" rx="2" ry="2" />
<text  x="130.53" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1161.0" y="117" width="0.2" height="15.0" fill="rgb(209,87,6)" rx="2" ry="2" />
<text  x="1164.04" y="127.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="917" width="0.4" height="15.0" fill="rgb(216,160,30)" rx="2" ry="2" />
<text  x="77.88" y="927.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (4 samples, 0.06%)</title><rect x="418.8" y="1845" width="0.8" height="15.0" fill="rgb(213,53,33)" rx="2" ry="2" />
<text  x="421.82" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="891.8" y="1221" width="0.1" height="15.0" fill="rgb(220,92,52)" rx="2" ry="2" />
<text  x="894.76" y="1231.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (100 samples, 1.59%)</title><rect x="1142.2" y="2053" width="18.8" height="15.0" fill="rgb(241,227,29)" rx="2" ry="2" />
<text  x="1145.24" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="127.2" y="661" width="0.1" height="15.0" fill="rgb(221,147,51)" rx="2" ry="2" />
<text  x="130.15" y="671.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="80.5" y="1909" width="0.2" height="15.0" fill="rgb(235,177,19)" rx="2" ry="2" />
<text  x="83.52" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.4" y="1701" width="0.4" height="15.0" fill="rgb(238,67,9)" rx="2" ry="2" />
<text  x="1164.42" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="127.2" y="1077" width="0.1" height="15.0" fill="rgb(241,141,45)" rx="2" ry="2" />
<text  x="130.15" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.4" y="1781" width="0.4" height="15.0" fill="rgb(252,148,47)" rx="2" ry="2" />
<text  x="1164.42" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="152.0" y="1269" width="0.2" height="15.0" fill="rgb(225,150,30)" rx="2" ry="2" />
<text  x="154.98" y="1279.5" ></text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (4 samples, 0.06%)</title><rect x="418.8" y="1877" width="0.8" height="15.0" fill="rgb(222,102,28)" rx="2" ry="2" />
<text  x="421.82" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.0" y="581" width="0.4" height="15.0" fill="rgb(212,172,8)" rx="2" ry="2" />
<text  x="1164.04" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.0" y="789" width="0.4" height="15.0" fill="rgb(244,76,22)" rx="2" ry="2" />
<text  x="1164.04" y="799.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="108.0" y="1605" width="0.2" height="15.0" fill="rgb(205,207,39)" rx="2" ry="2" />
<text  x="110.97" y="1615.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="121.3" y="1733" width="0.2" height="15.0" fill="rgb(238,148,13)" rx="2" ry="2" />
<text  x="124.32" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="891.8" y="981" width="0.1" height="15.0" fill="rgb(231,197,1)" rx="2" ry="2" />
<text  x="894.76" y="991.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (26 samples, 0.41%)</title><rect x="413.9" y="1861" width="4.9" height="15.0" fill="rgb(245,57,10)" rx="2" ry="2" />
<text  x="416.93" y="1871.5" ></text>
</g>
<g >
<title>cfree (1 samples, 0.02%)</title><rect x="104.0" y="1621" width="0.2" height="15.0" fill="rgb(213,196,50)" rx="2" ry="2" />
<text  x="107.02" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.4" y="805" width="0.4" height="15.0" fill="rgb(209,179,50)" rx="2" ry="2" />
<text  x="1164.42" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="891.8" y="1157" width="0.1" height="15.0" fill="rgb(244,190,51)" rx="2" ry="2" />
<text  x="894.76" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (72 samples, 1.15%)</title><rect x="95.6" y="1749" width="13.5" height="15.0" fill="rgb(223,192,9)" rx="2" ry="2" />
<text  x="98.56" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="192.4" y="1253" width="0.2" height="15.0" fill="rgb(226,117,35)" rx="2" ry="2" />
<text  x="195.41" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="127.2" y="165" width="0.1" height="15.0" fill="rgb(238,129,39)" rx="2" ry="2" />
<text  x="130.15" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.4" y="1477" width="0.4" height="15.0" fill="rgb(225,15,24)" rx="2" ry="2" />
<text  x="1164.42" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="127.5" y="1509" width="0.4" height="15.0" fill="rgb(241,192,14)" rx="2" ry="2" />
<text  x="130.53" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_try_char (1 samples, 0.02%)</title><rect x="190.3" y="1829" width="0.2" height="15.0" fill="rgb(243,55,15)" rx="2" ry="2" />
<text  x="193.34" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.0" y="421" width="0.4" height="15.0" fill="rgb(243,51,24)" rx="2" ry="2" />
<text  x="1164.04" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (45 samples, 0.72%)</title><rect x="155.0" y="1653" width="8.4" height="15.0" fill="rgb(253,161,42)" rx="2" ry="2" />
<text  x="157.98" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="127.5" y="1237" width="0.4" height="15.0" fill="rgb(221,79,50)" rx="2" ry="2" />
<text  x="130.53" y="1247.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="804.5" y="1829" width="0.4" height="15.0" fill="rgb(218,91,8)" rx="2" ry="2" />
<text  x="807.50" y="1839.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="110.8" y="1637" width="0.2" height="15.0" fill="rgb(222,134,0)" rx="2" ry="2" />
<text  x="113.79" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="517" width="0.4" height="15.0" fill="rgb(232,222,43)" rx="2" ry="2" />
<text  x="77.88" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (36 samples, 0.57%)</title><rect x="163.4" y="1733" width="6.8" height="15.0" fill="rgb(206,219,2)" rx="2" ry="2" />
<text  x="166.45" y="1743.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="74.5" y="1909" width="0.2" height="15.0" fill="rgb(215,92,20)" rx="2" ry="2" />
<text  x="77.50" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="1925" width="0.4" height="15.0" fill="rgb(232,226,12)" rx="2" ry="2" />
<text  x="77.88" y="1935.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (1 samples, 0.02%)</title><rect x="167.8" y="1605" width="0.2" height="15.0" fill="rgb(225,10,44)" rx="2" ry="2" />
<text  x="170.77" y="1615.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id@plt (1 samples, 0.02%)</title><rect x="131.1" y="1573" width="0.2" height="15.0" fill="rgb(253,156,27)" rx="2" ry="2" />
<text  x="134.10" y="1583.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate@plt (1 samples, 0.02%)</title><rect x="1132.1" y="2053" width="0.2" height="15.0" fill="rgb(214,115,1)" rx="2" ry="2" />
<text  x="1135.08" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (1 samples, 0.02%)</title><rect x="190.1" y="1829" width="0.2" height="15.0" fill="rgb(232,198,27)" rx="2" ry="2" />
<text  x="193.15" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="151.8" y="341" width="0.2" height="15.0" fill="rgb(217,174,45)" rx="2" ry="2" />
<text  x="154.79" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (37 samples, 0.59%)</title><rect x="102.1" y="1637" width="7.0" height="15.0" fill="rgb(239,145,22)" rx="2" ry="2" />
<text  x="105.14" y="1647.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::load (1 samples, 0.02%)</title><rect x="74.9" y="37" width="0.2" height="15.0" fill="rgb(245,193,22)" rx="2" ry="2" />
<text  x="77.88" y="47.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.03%)</title><rect x="567.4" y="1973" width="0.3" height="15.0" fill="rgb(228,55,26)" rx="2" ry="2" />
<text  x="570.37" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="1701" width="0.4" height="15.0" fill="rgb(226,159,26)" rx="2" ry="2" />
<text  x="77.88" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.0" y="1045" width="0.4" height="15.0" fill="rgb(206,65,30)" rx="2" ry="2" />
<text  x="1164.04" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="151.8" y="789" width="0.2" height="15.0" fill="rgb(243,25,25)" rx="2" ry="2" />
<text  x="154.79" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="891.8" y="309" width="0.1" height="15.0" fill="rgb(254,141,48)" rx="2" ry="2" />
<text  x="894.76" y="319.5" ></text>
</g>
<g >
<title>Eigen::internal::gebp_kernel&lt;float, float, long, Eigen::internal::blas_data_mapper&lt;float, long, 0, 0, 1&gt;, 48, 4, false, false&gt;::operator (1 samples, 0.02%)</title><rect x="153.7" y="1925" width="0.2" height="15.0" fill="rgb(232,194,39)" rx="2" ry="2" />
<text  x="156.67" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="85" width="0.4" height="15.0" fill="rgb(216,165,44)" rx="2" ry="2" />
<text  x="77.88" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (36 samples, 0.57%)</title><rect x="163.4" y="1685" width="6.8" height="15.0" fill="rgb(252,227,37)" rx="2" ry="2" />
<text  x="166.45" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="891.8" y="1733" width="0.1" height="15.0" fill="rgb(208,85,51)" rx="2" ry="2" />
<text  x="894.76" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="152.0" y="1093" width="0.2" height="15.0" fill="rgb(209,125,42)" rx="2" ry="2" />
<text  x="154.98" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.4" y="245" width="0.4" height="15.0" fill="rgb(222,171,39)" rx="2" ry="2" />
<text  x="1164.42" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="891.8" y="69" width="0.1" height="15.0" fill="rgb(223,75,50)" rx="2" ry="2" />
<text  x="894.76" y="79.5" ></text>
</g>
<g >
<title>onmt::CaseModifier::type_to_char (1 samples, 0.02%)</title><rect x="582.6" y="1893" width="0.2" height="15.0" fill="rgb(210,101,39)" rx="2" ry="2" />
<text  x="585.61" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (25 samples, 0.40%)</title><rect x="141.6" y="1717" width="4.7" height="15.0" fill="rgb(205,35,47)" rx="2" ry="2" />
<text  x="144.63" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="127.2" y="1397" width="0.1" height="15.0" fill="rgb(225,139,7)" rx="2" ry="2" />
<text  x="130.15" y="1407.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="613" width="0.4" height="15.0" fill="rgb(219,70,1)" rx="2" ry="2" />
<text  x="77.88" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="152.0" y="741" width="0.2" height="15.0" fill="rgb(212,33,54)" rx="2" ry="2" />
<text  x="154.98" y="751.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="1116.7" y="1909" width="0.1" height="15.0" fill="rgb(230,108,12)" rx="2" ry="2" />
<text  x="1119.66" y="1919.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="74.5" y="1925" width="0.2" height="15.0" fill="rgb(228,204,52)" rx="2" ry="2" />
<text  x="77.50" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="891.8" y="341" width="0.1" height="15.0" fill="rgb(237,119,52)" rx="2" ry="2" />
<text  x="894.76" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.4" y="1381" width="0.4" height="15.0" fill="rgb(250,219,15)" rx="2" ry="2" />
<text  x="1164.42" y="1391.5" ></text>
</g>
<g >
<title>malloc (92 samples, 1.47%)</title><rect x="1093.2" y="2053" width="17.3" height="15.0" fill="rgb(213,122,5)" rx="2" ry="2" />
<text  x="1096.16" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="565" width="0.4" height="15.0" fill="rgb(215,202,41)" rx="2" ry="2" />
<text  x="77.88" y="575.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (1 samples, 0.02%)</title><rect x="843.2" y="1941" width="0.2" height="15.0" fill="rgb(249,141,25)" rx="2" ry="2" />
<text  x="846.24" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (25 samples, 0.40%)</title><rect x="141.6" y="1749" width="4.7" height="15.0" fill="rgb(212,48,40)" rx="2" ry="2" />
<text  x="144.63" y="1759.5" ></text>
</g>
<g >
<title>vfs_read (4 samples, 0.06%)</title><rect x="79.4" y="1957" width="0.7" height="15.0" fill="rgb(227,196,42)" rx="2" ry="2" />
<text  x="82.39" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="891.8" y="325" width="0.1" height="15.0" fill="rgb(253,120,24)" rx="2" ry="2" />
<text  x="894.76" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="891.8" y="1029" width="0.1" height="15.0" fill="rgb(235,85,4)" rx="2" ry="2" />
<text  x="894.76" y="1039.5" ></text>
</g>
<g >
<title>__get_free_pages (1 samples, 0.02%)</title><rect x="891.9" y="1877" width="0.2" height="15.0" fill="rgb(210,44,41)" rx="2" ry="2" />
<text  x="894.94" y="1887.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::json_value::destroy (1 samples, 0.02%)</title><rect x="572.3" y="1989" width="0.2" height="15.0" fill="rgb(231,104,44)" rx="2" ry="2" />
<text  x="575.26" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="192.4" y="1157" width="0.2" height="15.0" fill="rgb(248,196,33)" rx="2" ry="2" />
<text  x="195.41" y="1167.5" ></text>
</g>
<g >
<title>fasttext::HierarchicalSoftmaxLoss::dfs (3 samples, 0.05%)</title><rect x="1047.3" y="2053" width="0.5" height="15.0" fill="rgb(233,193,26)" rx="2" ry="2" />
<text  x="1050.27" y="2063.5" ></text>
</g>
<g >
<title>__dynamic_cast@plt (1 samples, 0.02%)</title><rect x="139.0" y="1605" width="0.2" height="15.0" fill="rgb(225,82,26)" rx="2" ry="2" />
<text  x="142.00" y="1615.5" ></text>
</g>
<g >
<title>strlen@plt (1 samples, 0.02%)</title><rect x="837.8" y="1941" width="0.2" height="15.0" fill="rgb(247,116,24)" rx="2" ry="2" />
<text  x="840.79" y="1951.5" ></text>
</g>
<g >
<title>do_page_fault (4 samples, 0.06%)</title><rect x="666.1" y="1845" width="0.8" height="15.0" fill="rgb(215,179,45)" rx="2" ry="2" />
<text  x="669.10" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="866.6" y="2021" width="0.5" height="15.0" fill="rgb(206,203,20)" rx="2" ry="2" />
<text  x="869.56" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (16 samples, 0.25%)</title><rect x="117.8" y="1669" width="3.0" height="15.0" fill="rgb(217,9,32)" rx="2" ry="2" />
<text  x="120.75" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="127.2" y="485" width="0.1" height="15.0" fill="rgb(209,151,22)" rx="2" ry="2" />
<text  x="130.15" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="152.0" y="405" width="0.2" height="15.0" fill="rgb(248,44,24)" rx="2" ry="2" />
<text  x="154.98" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.06%)</title><rect x="191.8" y="1941" width="0.8" height="15.0" fill="rgb(227,121,5)" rx="2" ry="2" />
<text  x="194.84" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.4" y="357" width="0.4" height="15.0" fill="rgb(225,191,20)" rx="2" ry="2" />
<text  x="1164.42" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="152.0" y="725" width="0.2" height="15.0" fill="rgb(230,150,28)" rx="2" ry="2" />
<text  x="154.98" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="891.8" y="1349" width="0.1" height="15.0" fill="rgb(220,48,46)" rx="2" ry="2" />
<text  x="894.76" y="1359.5" ></text>
</g>
<g >
<title>swake_up_one (1 samples, 0.02%)</title><rect x="1116.7" y="1925" width="0.1" height="15.0" fill="rgb(209,96,20)" rx="2" ry="2" />
<text  x="1119.66" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="127.5" y="885" width="0.4" height="15.0" fill="rgb(222,118,19)" rx="2" ry="2" />
<text  x="130.53" y="895.5" ></text>
</g>
<g >
<title>std::operator&gt;&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;@plt (2 samples, 0.03%)</title><rect x="570.0" y="1973" width="0.4" height="15.0" fill="rgb(214,98,28)" rx="2" ry="2" />
<text  x="573.01" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="127.5" y="1077" width="0.4" height="15.0" fill="rgb(235,103,8)" rx="2" ry="2" />
<text  x="130.53" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.4" y="1141" width="0.4" height="15.0" fill="rgb(225,121,33)" rx="2" ry="2" />
<text  x="1164.42" y="1151.5" ></text>
</g>
<g >
<title>free@plt (5 samples, 0.08%)</title><rect x="1092.2" y="2053" width="1.0" height="15.0" fill="rgb(225,124,0)" rx="2" ry="2" />
<text  x="1095.22" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (165 samples, 2.63%)</title><rect x="95.6" y="1845" width="31.0" height="15.0" fill="rgb(230,41,51)" rx="2" ry="2" />
<text  x="98.56" y="1855.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="127.2" y="181" width="0.1" height="15.0" fill="rgb(223,198,22)" rx="2" ry="2" />
<text  x="130.15" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="891.8" y="805" width="0.1" height="15.0" fill="rgb(224,119,9)" rx="2" ry="2" />
<text  x="894.76" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (25 samples, 0.40%)</title><rect x="146.3" y="1765" width="4.7" height="15.0" fill="rgb(207,68,20)" rx="2" ry="2" />
<text  x="149.33" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="127.5" y="1733" width="0.4" height="15.0" fill="rgb(237,44,5)" rx="2" ry="2" />
<text  x="130.53" y="1743.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="148.4" y="1685" width="0.2" height="15.0" fill="rgb(225,223,4)" rx="2" ry="2" />
<text  x="151.40" y="1695.5" ></text>
</g>
<g >
<title>ComputeClusterWeight (1 samples, 0.02%)</title><rect x="891.8" y="2005" width="0.1" height="15.0" fill="rgb(231,96,19)" rx="2" ry="2" />
<text  x="894.76" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (33 samples, 0.53%)</title><rect x="177.2" y="1749" width="6.2" height="15.0" fill="rgb(239,187,11)" rx="2" ry="2" />
<text  x="180.17" y="1759.5" ></text>
</g>
<g >
<title>onmt::unicode::cp_to_utf8[abi:cxx11] (1 samples, 0.02%)</title><rect x="622.1" y="1877" width="0.2" height="15.0" fill="rgb(220,198,40)" rx="2" ry="2" />
<text  x="625.10" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="192.2" y="1381" width="0.2" height="15.0" fill="rgb(230,221,46)" rx="2" ry="2" />
<text  x="195.22" y="1391.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (4 samples, 0.06%)</title><rect x="419.6" y="1877" width="0.7" height="15.0" fill="rgb(248,2,43)" rx="2" ry="2" />
<text  x="422.57" y="1887.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="923.2" y="2053" width="0.1" height="15.0" fill="rgb(211,49,22)" rx="2" ry="2" />
<text  x="926.16" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="867.3" y="2021" width="0.4" height="15.0" fill="rgb(209,116,1)" rx="2" ry="2" />
<text  x="870.31" y="2031.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;std::__detail::_StateSeq&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::allocator&lt;std::__detail::_StateSeq&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; &gt;::_M_initialize_map (1 samples, 0.02%)</title><rect x="154.4" y="1925" width="0.2" height="15.0" fill="rgb(244,46,49)" rx="2" ry="2" />
<text  x="157.42" y="1935.5" ></text>
</g>
<g >
<title>fasttext::Vector::addVector (16 samples, 0.25%)</title><rect x="553.6" y="1973" width="3.1" height="15.0" fill="rgb(248,25,9)" rx="2" ry="2" />
<text  x="556.65" y="1983.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::_M_transform (5 samples, 0.08%)</title><rect x="1140.5" y="2053" width="1.0" height="15.0" fill="rgb(207,88,8)" rx="2" ry="2" />
<text  x="1143.54" y="2063.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="418.6" y="1845" width="0.2" height="15.0" fill="rgb(232,21,16)" rx="2" ry="2" />
<text  x="421.63" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="192.4" y="933" width="0.2" height="15.0" fill="rgb(211,2,11)" rx="2" ry="2" />
<text  x="195.41" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="127.3" y="1429" width="0.2" height="15.0" fill="rgb(210,100,29)" rx="2" ry="2" />
<text  x="130.34" y="1439.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (2 samples, 0.03%)</title><rect x="154.6" y="1669" width="0.4" height="15.0" fill="rgb(236,114,28)" rx="2" ry="2" />
<text  x="157.61" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="127.2" y="325" width="0.1" height="15.0" fill="rgb(241,223,29)" rx="2" ry="2" />
<text  x="130.15" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="192.2" y="1461" width="0.2" height="15.0" fill="rgb(254,72,8)" rx="2" ry="2" />
<text  x="195.22" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="891.8" y="965" width="0.1" height="15.0" fill="rgb(253,42,25)" rx="2" ry="2" />
<text  x="894.76" y="975.5" ></text>
</g>
<g >
<title>onmt::unicode::is_separator@plt (2 samples, 0.03%)</title><rect x="818.0" y="1893" width="0.4" height="15.0" fill="rgb(237,194,13)" rx="2" ry="2" />
<text  x="821.04" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.0" y="1893" width="0.4" height="15.0" fill="rgb(248,161,44)" rx="2" ry="2" />
<text  x="1164.04" y="1903.5" ></text>
</g>
<g >
<title>std::istream::get (2 samples, 0.03%)</title><rect x="1188.7" y="2053" width="0.4" height="15.0" fill="rgb(212,186,4)" rx="2" ry="2" />
<text  x="1191.68" y="2063.5" ></text>
</g>
<g >
<title>cfree (2 samples, 0.03%)</title><rect x="117.0" y="1669" width="0.4" height="15.0" fill="rgb(206,123,30)" rx="2" ry="2" />
<text  x="120.00" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (34 samples, 0.54%)</title><rect x="170.6" y="1701" width="6.4" height="15.0" fill="rgb(232,165,38)" rx="2" ry="2" />
<text  x="173.59" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.4" y="501" width="0.4" height="15.0" fill="rgb(235,112,45)" rx="2" ry="2" />
<text  x="1164.42" y="511.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (2 samples, 0.03%)</title><rect x="182.8" y="1669" width="0.4" height="15.0" fill="rgb(208,217,15)" rx="2" ry="2" />
<text  x="185.82" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="1077" width="0.4" height="15.0" fill="rgb(216,110,30)" rx="2" ry="2" />
<text  x="77.88" y="1087.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="1621" width="0.4" height="15.0" fill="rgb(214,131,52)" rx="2" ry="2" />
<text  x="77.88" y="1631.5" ></text>
</g>
<g >
<title>operator new@plt (1 samples, 0.02%)</title><rect x="172.5" y="1637" width="0.2" height="15.0" fill="rgb(247,144,50)" rx="2" ry="2" />
<text  x="175.47" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (20 samples, 0.32%)</title><rect x="179.1" y="1669" width="3.7" height="15.0" fill="rgb(228,58,24)" rx="2" ry="2" />
<text  x="182.05" y="1679.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (3 samples, 0.05%)</title><rect x="94.6" y="1877" width="0.6" height="15.0" fill="rgb(234,3,4)" rx="2" ry="2" />
<text  x="97.62" y="1887.5" ></text>
</g>
<g >
<title>GetHost (206 samples, 3.28%)</title><rect x="153.9" y="1973" width="38.7" height="15.0" fill="rgb(208,40,18)" rx="2" ry="2" />
<text  x="156.86" y="1983.5" >Get..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="127.2" y="149" width="0.1" height="15.0" fill="rgb(216,6,20)" rx="2" ry="2" />
<text  x="130.15" y="159.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="1829" width="0.4" height="15.0" fill="rgb(225,176,8)" rx="2" ry="2" />
<text  x="77.88" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.4" y="1109" width="0.4" height="15.0" fill="rgb(245,67,30)" rx="2" ry="2" />
<text  x="1164.42" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="152.0" y="917" width="0.2" height="15.0" fill="rgb(236,65,36)" rx="2" ry="2" />
<text  x="154.98" y="927.5" ></text>
</g>
<g >
<title>memcpy@plt (5 samples, 0.08%)</title><rect x="1111.8" y="2053" width="0.9" height="15.0" fill="rgb(245,155,7)" rx="2" ry="2" />
<text  x="1114.77" y="2063.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (1 samples, 0.02%)</title><rect x="136.2" y="1589" width="0.2" height="15.0" fill="rgb(211,118,31)" rx="2" ry="2" />
<text  x="139.18" y="1599.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt;@plt (3 samples, 0.05%)</title><rect x="834.4" y="1893" width="0.6" height="15.0" fill="rgb(213,107,4)" rx="2" ry="2" />
<text  x="837.40" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="127.5" y="1045" width="0.4" height="15.0" fill="rgb(223,21,21)" rx="2" ry="2" />
<text  x="130.53" y="1055.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (2 samples, 0.03%)</title><rect x="995.9" y="2005" width="0.4" height="15.0" fill="rgb(251,129,38)" rx="2" ry="2" />
<text  x="998.93" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="891.8" y="469" width="0.1" height="15.0" fill="rgb(245,166,18)" rx="2" ry="2" />
<text  x="894.76" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="151.8" y="1301" width="0.4" height="15.0" fill="rgb(246,122,28)" rx="2" ry="2" />
<text  x="154.79" y="1311.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.02%)</title><rect x="149.9" y="1669" width="0.2" height="15.0" fill="rgb(240,221,18)" rx="2" ry="2" />
<text  x="152.91" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="891.8" y="1685" width="0.1" height="15.0" fill="rgb(229,74,37)" rx="2" ry="2" />
<text  x="894.76" y="1695.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="699.8" y="1845" width="0.1" height="15.0" fill="rgb(218,223,20)" rx="2" ry="2" />
<text  x="702.76" y="1855.5" ></text>
</g>
<g >
<title>malloc (3 samples, 0.05%)</title><rect x="122.6" y="1701" width="0.6" height="15.0" fill="rgb(248,159,31)" rx="2" ry="2" />
<text  x="125.64" y="1711.5" ></text>
</g>
<g >
<title>do_syscall_64 (4 samples, 0.06%)</title><rect x="79.4" y="2005" width="0.7" height="15.0" fill="rgb(216,166,52)" rx="2" ry="2" />
<text  x="82.39" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="891.8" y="837" width="0.1" height="15.0" fill="rgb(221,216,30)" rx="2" ry="2" />
<text  x="894.76" y="847.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.03%)</title><rect x="174.5" y="1621" width="0.4" height="15.0" fill="rgb(244,218,44)" rx="2" ry="2" />
<text  x="177.54" y="1631.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.02%)</title><rect x="77.7" y="2021" width="0.2" height="15.0" fill="rgb(225,15,43)" rx="2" ry="2" />
<text  x="80.70" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1161.0" y="53" width="0.2" height="15.0" fill="rgb(228,131,2)" rx="2" ry="2" />
<text  x="1164.04" y="63.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="151.6" y="1733" width="0.6" height="15.0" fill="rgb(240,95,27)" rx="2" ry="2" />
<text  x="154.60" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="1941" width="0.4" height="15.0" fill="rgb(232,2,54)" rx="2" ry="2" />
<text  x="77.88" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (20 samples, 0.32%)</title><rect x="158.0" y="1589" width="3.8" height="15.0" fill="rgb(209,72,18)" rx="2" ry="2" />
<text  x="160.99" y="1599.5" ></text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::scan_string (60 samples, 0.96%)</title><rect x="82.2" y="1941" width="11.3" height="15.0" fill="rgb(229,149,21)" rx="2" ry="2" />
<text  x="85.21" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.06%)</title><rect x="191.8" y="1877" width="0.8" height="15.0" fill="rgb(238,83,1)" rx="2" ry="2" />
<text  x="194.84" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="127.5" y="1013" width="0.4" height="15.0" fill="rgb(209,128,25)" rx="2" ry="2" />
<text  x="130.53" y="1023.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.02%)</title><rect x="1092.0" y="2037" width="0.2" height="15.0" fill="rgb(217,49,46)" rx="2" ry="2" />
<text  x="1095.03" y="2047.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="698.1" y="1813" width="0.2" height="15.0" fill="rgb(236,82,37)" rx="2" ry="2" />
<text  x="701.07" y="1823.5" ></text>
</g>
<g >
<title>nlohmann::operator&gt;&gt; (67 samples, 1.07%)</title><rect x="81.3" y="1989" width="12.6" height="15.0" fill="rgb(251,133,13)" rx="2" ry="2" />
<text  x="84.27" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="127.2" y="757" width="0.1" height="15.0" fill="rgb(242,186,15)" rx="2" ry="2" />
<text  x="130.15" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="192.4" y="741" width="0.2" height="15.0" fill="rgb(224,201,46)" rx="2" ry="2" />
<text  x="195.41" y="751.5" ></text>
</g>
<g >
<title>fasttext::Vector::addRow (3 samples, 0.05%)</title><rect x="553.1" y="1973" width="0.5" height="15.0" fill="rgb(252,228,53)" rx="2" ry="2" />
<text  x="556.08" y="1983.5" ></text>
</g>
<g >
<title>fasttext::Vector::addRow (4 samples, 0.06%)</title><rect x="310.7" y="1989" width="0.7" height="15.0" fill="rgb(219,165,34)" rx="2" ry="2" />
<text  x="313.69" y="1999.5" ></text>
</g>
<g >
<title>__do_page_fault (8 samples, 0.13%)</title><rect x="698.3" y="1829" width="1.5" height="15.0" fill="rgb(241,220,0)" rx="2" ry="2" />
<text  x="701.25" y="1839.5" ></text>
</g>
<g >
<title>cfree (1 samples, 0.02%)</title><rect x="129.2" y="1573" width="0.2" height="15.0" fill="rgb(249,78,35)" rx="2" ry="2" />
<text  x="132.22" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="127.2" y="373" width="0.1" height="15.0" fill="rgb(245,217,7)" rx="2" ry="2" />
<text  x="130.15" y="383.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="981" width="0.4" height="15.0" fill="rgb(231,182,6)" rx="2" ry="2" />
<text  x="77.88" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="127.2" y="101" width="0.1" height="15.0" fill="rgb(215,65,40)" rx="2" ry="2" />
<text  x="130.15" y="111.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.0" y="1701" width="0.4" height="15.0" fill="rgb(254,29,3)" rx="2" ry="2" />
<text  x="1164.04" y="1711.5" ></text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (2 samples, 0.03%)</title><rect x="34.6" y="1957" width="0.4" height="15.0" fill="rgb(215,31,44)" rx="2" ry="2" />
<text  x="37.63" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.0" y="1989" width="0.4" height="15.0" fill="rgb(232,83,30)" rx="2" ry="2" />
<text  x="1164.04" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (32 samples, 0.51%)</title><rect x="183.9" y="1717" width="6.1" height="15.0" fill="rgb(246,162,26)" rx="2" ry="2" />
<text  x="186.94" y="1727.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct (3 samples, 0.05%)</title><rect x="1130.6" y="2053" width="0.5" height="15.0" fill="rgb(245,4,48)" rx="2" ry="2" />
<text  x="1133.58" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="127.2" y="1429" width="0.1" height="15.0" fill="rgb(216,78,12)" rx="2" ry="2" />
<text  x="130.15" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.0" y="1877" width="0.4" height="15.0" fill="rgb(216,174,8)" rx="2" ry="2" />
<text  x="1164.04" y="1887.5" ></text>
</g>
<g >
<title>@plt (4 samples, 0.06%)</title><rect x="1150.3" y="2037" width="0.8" height="15.0" fill="rgb(211,69,50)" rx="2" ry="2" />
<text  x="1153.32" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="151.6" y="1397" width="0.6" height="15.0" fill="rgb(252,129,37)" rx="2" ry="2" />
<text  x="154.60" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="152.0" y="981" width="0.2" height="15.0" fill="rgb(214,149,44)" rx="2" ry="2" />
<text  x="154.98" y="991.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (4 samples, 0.06%)</title><rect x="79.4" y="1909" width="0.7" height="15.0" fill="rgb(223,224,52)" rx="2" ry="2" />
<text  x="82.39" y="1919.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (2 samples, 0.03%)</title><rect x="187.5" y="1685" width="0.4" height="15.0" fill="rgb(211,120,18)" rx="2" ry="2" />
<text  x="190.52" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="741" width="0.4" height="15.0" fill="rgb(233,78,3)" rx="2" ry="2" />
<text  x="77.88" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.4" y="885" width="0.4" height="15.0" fill="rgb(250,42,53)" rx="2" ry="2" />
<text  x="1164.42" y="895.5" ></text>
</g>
<g >
<title>boost::algorithm::join&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, char [2]&gt; (1 samples, 0.02%)</title><rect x="578.1" y="1941" width="0.2" height="15.0" fill="rgb(237,183,18)" rx="2" ry="2" />
<text  x="581.09" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="1221" width="0.4" height="15.0" fill="rgb(249,184,23)" rx="2" ry="2" />
<text  x="77.88" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="151.8" y="149" width="0.2" height="15.0" fill="rgb(227,145,33)" rx="2" ry="2" />
<text  x="154.79" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.0" y="1317" width="0.4" height="15.0" fill="rgb(242,179,52)" rx="2" ry="2" />
<text  x="1164.04" y="1327.5" ></text>
</g>
<g >
<title>TDocument::TDocument (2 samples, 0.03%)</title><rect x="80.3" y="1989" width="0.4" height="15.0" fill="rgb(249,190,22)" rx="2" ry="2" />
<text  x="83.33" y="1999.5" ></text>
</g>
<g >
<title>rcu_report_qs_rnp (1 samples, 0.02%)</title><rect x="1116.7" y="1957" width="0.1" height="15.0" fill="rgb(226,141,39)" rx="2" ry="2" />
<text  x="1119.66" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="152.0" y="293" width="0.2" height="15.0" fill="rgb(208,55,29)" rx="2" ry="2" />
<text  x="154.98" y="303.5" ></text>
</g>
<g >
<title>mem_cgroup_throttle_swaprate (1 samples, 0.02%)</title><rect x="410.7" y="1861" width="0.2" height="15.0" fill="rgb(211,33,35)" rx="2" ry="2" />
<text  x="413.73" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="151.8" y="485" width="0.2" height="15.0" fill="rgb(236,182,8)" rx="2" ry="2" />
<text  x="154.79" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="127.2" y="1221" width="0.1" height="15.0" fill="rgb(237,94,21)" rx="2" ry="2" />
<text  x="130.15" y="1231.5" ></text>
</g>
<g >
<title>onmt::unicode::explode_utf8@plt (1 samples, 0.02%)</title><rect x="748.7" y="1893" width="0.1" height="15.0" fill="rgb(234,79,35)" rx="2" ry="2" />
<text  x="751.65" y="1903.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (1 samples, 0.02%)</title><rect x="189.2" y="1701" width="0.2" height="15.0" fill="rgb(223,120,20)" rx="2" ry="2" />
<text  x="192.21" y="1711.5" ></text>
</g>
<g >
<title>std::num_get&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_extract_int&lt;long&gt; (1 samples, 0.02%)</title><rect x="866.4" y="2005" width="0.2" height="15.0" fill="rgb(221,80,23)" rx="2" ry="2" />
<text  x="869.37" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (1 samples, 0.02%)</title><rect x="190.1" y="1813" width="0.2" height="15.0" fill="rgb(247,76,48)" rx="2" ry="2" />
<text  x="193.15" y="1823.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; const*, std::vector&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::allocator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;*&gt; (1 samples, 0.02%)</title><rect x="574.1" y="1893" width="0.2" height="15.0" fill="rgb(206,179,16)" rx="2" ry="2" />
<text  x="577.14" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_try_char (1 samples, 0.02%)</title><rect x="190.9" y="1877" width="0.2" height="15.0" fill="rgb(251,70,32)" rx="2" ry="2" />
<text  x="193.90" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="891.8" y="1621" width="0.1" height="15.0" fill="rgb(246,226,50)" rx="2" ry="2" />
<text  x="894.76" y="1631.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="742.6" y="1829" width="0.2" height="15.0" fill="rgb(240,188,29)" rx="2" ry="2" />
<text  x="745.63" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.4" y="213" width="0.4" height="15.0" fill="rgb(216,83,29)" rx="2" ry="2" />
<text  x="1164.42" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (153 samples, 2.44%)</title><rect x="154.6" y="1797" width="28.8" height="15.0" fill="rgb(241,159,45)" rx="2" ry="2" />
<text  x="157.61" y="1807.5" >st..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (72 samples, 1.15%)</title><rect x="128.1" y="1765" width="13.5" height="15.0" fill="rgb(224,4,46)" rx="2" ry="2" />
<text  x="131.09" y="1775.5" ></text>
</g>
<g >
<title>schedule (3 samples, 0.05%)</title><rect x="94.6" y="1861" width="0.6" height="15.0" fill="rgb(211,209,15)" rx="2" ry="2" />
<text  x="97.62" y="1871.5" ></text>
</g>
<g >
<title>free@plt (1 samples, 0.02%)</title><rect x="323.9" y="1989" width="0.1" height="15.0" fill="rgb(213,162,0)" rx="2" ry="2" />
<text  x="326.85" y="1999.5" ></text>
</g>
<g >
<title>release_pages (1 samples, 0.02%)</title><rect x="923.2" y="1861" width="0.1" height="15.0" fill="rgb(239,116,33)" rx="2" ry="2" />
<text  x="926.16" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.4" y="165" width="0.4" height="15.0" fill="rgb(251,183,1)" rx="2" ry="2" />
<text  x="1164.42" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="151.6" y="1477" width="0.6" height="15.0" fill="rgb(224,119,10)" rx="2" ry="2" />
<text  x="154.60" y="1487.5" ></text>
</g>
<g >
<title>GetHost (130 samples, 2.07%)</title><rect x="127.9" y="1957" width="24.5" height="15.0" fill="rgb(251,183,54)" rx="2" ry="2" />
<text  x="130.91" y="1967.5" >G..</text>
</g>
<g >
<title>__schedule (1 samples, 0.02%)</title><rect x="702.2" y="1797" width="0.2" height="15.0" fill="rgb(210,174,2)" rx="2" ry="2" />
<text  x="705.20" y="1807.5" ></text>
</g>
<g >
<title>fasttext::Vector::mul (23 samples, 0.37%)</title><rect x="556.7" y="1973" width="4.3" height="15.0" fill="rgb(225,108,9)" rx="2" ry="2" />
<text  x="559.65" y="1983.5" ></text>
</g>
<g >
<title>__lru_cache_add (4 samples, 0.06%)</title><rect x="418.8" y="1861" width="0.8" height="15.0" fill="rgb(242,211,42)" rx="2" ry="2" />
<text  x="421.82" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.4" y="1173" width="0.4" height="15.0" fill="rgb(214,94,9)" rx="2" ry="2" />
<text  x="1164.42" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="891.8" y="1253" width="0.1" height="15.0" fill="rgb(226,98,7)" rx="2" ry="2" />
<text  x="894.76" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.4" y="725" width="0.4" height="15.0" fill="rgb(239,144,26)" rx="2" ry="2" />
<text  x="1164.42" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.0" y="1461" width="0.4" height="15.0" fill="rgb(216,40,53)" rx="2" ry="2" />
<text  x="1164.04" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="891.8" y="757" width="0.1" height="15.0" fill="rgb(215,84,1)" rx="2" ry="2" />
<text  x="894.76" y="767.5" ></text>
</g>
<g >
<title>onmt::unicode::get_case (5 samples, 0.08%)</title><rect x="748.8" y="1893" width="1.0" height="15.0" fill="rgb(242,90,54)" rx="2" ry="2" />
<text  x="751.84" y="1903.5" ></text>
</g>
<g >
<title>free@plt (1 samples, 0.02%)</title><rect x="165.7" y="1621" width="0.2" height="15.0" fill="rgb(219,121,34)" rx="2" ry="2" />
<text  x="168.70" y="1631.5" ></text>
</g>
<g >
<title>onmt::Tokenizer::finalize_tokens (29 samples, 0.46%)</title><rect x="580.2" y="1909" width="5.4" height="15.0" fill="rgb(211,47,36)" rx="2" ry="2" />
<text  x="583.16" y="1919.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (3 samples, 0.05%)</title><rect x="161.2" y="1573" width="0.6" height="15.0" fill="rgb(224,195,28)" rx="2" ry="2" />
<text  x="164.19" y="1583.5" ></text>
</g>
<g >
<title>Eigen::internal::gemv_dense_selector&lt;2, 1, true&gt;::run&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; &gt; (1 samples, 0.02%)</title><rect x="429.5" y="1941" width="0.2" height="15.0" fill="rgb(211,201,48)" rx="2" ry="2" />
<text  x="432.53" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="891.8" y="1445" width="0.1" height="15.0" fill="rgb(223,61,0)" rx="2" ry="2" />
<text  x="894.76" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="192.2" y="1557" width="0.4" height="15.0" fill="rgb(241,120,32)" rx="2" ry="2" />
<text  x="195.22" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (22 samples, 0.35%)</title><rect x="137.5" y="1653" width="4.1" height="15.0" fill="rgb(224,110,48)" rx="2" ry="2" />
<text  x="140.50" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="1237" width="0.4" height="15.0" fill="rgb(208,112,54)" rx="2" ry="2" />
<text  x="77.88" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="151.8" y="181" width="0.2" height="15.0" fill="rgb(249,211,41)" rx="2" ry="2" />
<text  x="154.79" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (1 samples, 0.02%)</title><rect x="150.1" y="1669" width="0.2" height="15.0" fill="rgb(244,8,40)" rx="2" ry="2" />
<text  x="153.10" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="192.4" y="501" width="0.2" height="15.0" fill="rgb(239,156,27)" rx="2" ry="2" />
<text  x="195.41" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_assertion (1 samples, 0.02%)</title><rect x="183.4" y="1749" width="0.2" height="15.0" fill="rgb(225,53,13)" rx="2" ry="2" />
<text  x="186.38" y="1759.5" ></text>
</g>
<g >
<title>fasttext::Loss::predict (1 samples, 0.02%)</title><rect x="75.3" y="2005" width="0.1" height="15.0" fill="rgb(234,176,36)" rx="2" ry="2" />
<text  x="78.25" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="891.8" y="1669" width="0.1" height="15.0" fill="rgb(249,113,9)" rx="2" ry="2" />
<text  x="894.76" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (2 samples, 0.03%)</title><rect x="121.1" y="1765" width="0.4" height="15.0" fill="rgb(222,76,6)" rx="2" ry="2" />
<text  x="124.14" y="1775.5" ></text>
</g>
<g >
<title>handle_mm_fault (18 samples, 0.29%)</title><rect x="32.9" y="1989" width="3.4" height="15.0" fill="rgb(208,111,4)" rx="2" ry="2" />
<text  x="35.94" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="1333" width="0.4" height="15.0" fill="rgb(207,190,27)" rx="2" ry="2" />
<text  x="77.88" y="1343.5" ></text>
</g>
<g >
<title>free_unref_page_list (1 samples, 0.02%)</title><rect x="923.2" y="1845" width="0.1" height="15.0" fill="rgb(235,118,19)" rx="2" ry="2" />
<text  x="926.16" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.0" y="693" width="0.4" height="15.0" fill="rgb(225,70,41)" rx="2" ry="2" />
<text  x="1164.04" y="703.5" ></text>
</g>
<g >
<title>do_futex (12 samples, 0.19%)</title><rect x="39.9" y="1957" width="2.3" height="15.0" fill="rgb(233,128,20)" rx="2" ry="2" />
<text  x="42.90" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="725" width="0.4" height="15.0" fill="rgb(220,207,4)" rx="2" ry="2" />
<text  x="77.88" y="735.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_construct_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;, std::tuple&lt;&gt; &gt; (1 samples, 0.02%)</title><rect x="93.7" y="1909" width="0.2" height="15.0" fill="rgb(218,26,36)" rx="2" ry="2" />
<text  x="96.68" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="151.8" y="389" width="0.2" height="15.0" fill="rgb(216,212,54)" rx="2" ry="2" />
<text  x="154.79" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="127.2" y="837" width="0.1" height="15.0" fill="rgb(240,66,21)" rx="2" ry="2" />
<text  x="130.15" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="891.8" y="613" width="0.1" height="15.0" fill="rgb(224,219,49)" rx="2" ry="2" />
<text  x="894.76" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.0" y="1013" width="0.4" height="15.0" fill="rgb(226,108,22)" rx="2" ry="2" />
<text  x="1164.04" y="1023.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (1 samples, 0.02%)</title><rect x="923.2" y="1877" width="0.1" height="15.0" fill="rgb(253,20,4)" rx="2" ry="2" />
<text  x="926.16" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (136 samples, 2.17%)</title><rect x="95.6" y="1797" width="25.5" height="15.0" fill="rgb(207,172,3)" rx="2" ry="2" />
<text  x="98.56" y="1807.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="151.6" y="1797" width="0.6" height="15.0" fill="rgb(221,187,49)" rx="2" ry="2" />
<text  x="154.60" y="1807.5" ></text>
</g>
<g >
<title>unmap_single_vma (2 samples, 0.03%)</title><rect x="570.4" y="1861" width="0.4" height="15.0" fill="rgb(213,178,54)" rx="2" ry="2" />
<text  x="573.38" y="1871.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::computeSubwords (96 samples, 1.53%)</title><rect x="924.7" y="2053" width="18.0" height="15.0" fill="rgb(232,42,51)" rx="2" ry="2" />
<text  x="927.66" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="192.4" y="565" width="0.2" height="15.0" fill="rgb(208,165,34)" rx="2" ry="2" />
<text  x="195.41" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create@plt (1 samples, 0.02%)</title><rect x="1131.1" y="2053" width="0.2" height="15.0" fill="rgb(217,94,48)" rx="2" ry="2" />
<text  x="1134.14" y="2063.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (1 samples, 0.02%)</title><rect x="178.9" y="1669" width="0.2" height="15.0" fill="rgb(242,127,14)" rx="2" ry="2" />
<text  x="181.87" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.0" y="325" width="0.4" height="15.0" fill="rgb(251,87,37)" rx="2" ry="2" />
<text  x="1164.04" y="335.5" ></text>
</g>
<g >
<title>free@plt (1 samples, 0.02%)</title><rect x="567.0" y="1973" width="0.2" height="15.0" fill="rgb(223,146,7)" rx="2" ry="2" />
<text  x="570.00" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.0" y="821" width="0.4" height="15.0" fill="rgb(235,47,45)" rx="2" ry="2" />
<text  x="1164.04" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.4" y="2005" width="0.4" height="15.0" fill="rgb(221,76,40)" rx="2" ry="2" />
<text  x="1164.42" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1161.4" y="37" width="0.4" height="15.0" fill="rgb(220,105,0)" rx="2" ry="2" />
<text  x="1164.42" y="47.5" ></text>
</g>
<g >
<title>syscall (3 samples, 0.05%)</title><rect x="94.6" y="1973" width="0.6" height="15.0" fill="rgb(205,172,52)" rx="2" ry="2" />
<text  x="97.62" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="74.9" y="661" width="0.4" height="15.0" fill="rgb(252,228,27)" rx="2" ry="2" />
<text  x="77.88" y="671.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="97.6" y="1589" width="0.2" height="15.0" fill="rgb(218,147,6)" rx="2" ry="2" />
<text  x="100.63" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="891.8" y="517" width="0.1" height="15.0" fill="rgb(224,109,43)" rx="2" ry="2" />
<text  x="894.76" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="127.2" y="645" width="0.1" height="15.0" fill="rgb(215,88,6)" rx="2" ry="2" />
<text  x="130.15" y="655.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="804.9" y="1845" width="0.2" height="15.0" fill="rgb(229,110,51)" rx="2" ry="2" />
<text  x="807.88" y="1855.5" ></text>
</g>
<g >
<title>handle_mm_fault (38 samples, 0.61%)</title><rect x="413.4" y="1909" width="7.1" height="15.0" fill="rgb(227,200,5)" rx="2" ry="2" />
<text  x="416.36" y="1919.5" ></text>
</g>
<g >
<title>TDocument::~TDocument (1 samples, 0.02%)</title><rect x="94.2" y="1957" width="0.2" height="15.0" fill="rgb(227,130,27)" rx="2" ry="2" />
<text  x="97.25" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (22 samples, 0.35%)</title><rect x="137.5" y="1733" width="4.1" height="15.0" fill="rgb(211,222,49)" rx="2" ry="2" />
<text  x="140.50" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (10 samples, 0.16%)</title><rect x="148.6" y="1685" width="1.9" height="15.0" fill="rgb(248,42,39)" rx="2" ry="2" />
<text  x="151.59" y="1695.5" ></text>
</g>
<g >
<title>onmt::unicode::is_letter (163 samples, 2.60%)</title><rect x="702.4" y="1877" width="30.6" height="15.0" fill="rgb(213,61,54)" rx="2" ry="2" />
<text  x="705.39" y="1887.5" >on..</text>
</g>
<g >
<title>__dynamic_cast (5 samples, 0.08%)</title><rect x="184.1" y="1701" width="1.0" height="15.0" fill="rgb(246,27,7)" rx="2" ry="2" />
<text  x="187.13" y="1711.5" ></text>
</g>
<g >
<title>__x64_sys_futex (12 samples, 0.19%)</title><rect x="39.9" y="1973" width="2.3" height="15.0" fill="rgb(237,153,6)" rx="2" ry="2" />
<text  x="42.90" y="1983.5" ></text>
</g>
<g >
<title>std::operator&gt;&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="325.5" y="1989" width="0.2" height="15.0" fill="rgb(237,53,12)" rx="2" ry="2" />
<text  x="328.54" y="1999.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="548.6" y="1893" width="0.2" height="15.0" fill="rgb(245,10,44)" rx="2" ry="2" />
<text  x="551.57" y="1903.5" ></text>
</g>
<g >
<title>fasttext::QuantMatrix::addRowToVector (25 samples, 0.40%)</title><rect x="1087.1" y="2053" width="4.7" height="15.0" fill="rgb(207,170,19)" rx="2" ry="2" />
<text  x="1090.14" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="151.8" y="549" width="0.2" height="15.0" fill="rgb(242,181,3)" rx="2" ry="2" />
<text  x="154.79" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="152.0" y="501" width="0.2" height="15.0" fill="rgb(206,27,24)" rx="2" ry="2" />
<text  x="154.98" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="151.6" y="1365" width="0.6" height="15.0" fill="rgb(239,113,46)" rx="2" ry="2" />
<text  x="154.60" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="891.8" y="1589" width="0.1" height="15.0" fill="rgb(206,74,17)" rx="2" ry="2" />
<text  x="894.76" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="127.2" y="197" width="0.1" height="15.0" fill="rgb(213,96,4)" rx="2" ry="2" />
<text  x="130.15" y="207.5" ></text>
</g>
<g >
<title>nlohmann::detail::input_stream_adapter::get_character (2 samples, 0.03%)</title><rect x="84.5" y="1925" width="0.3" height="15.0" fill="rgb(248,18,28)" rx="2" ry="2" />
<text  x="87.47" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1161.0" y="1125" width="0.4" height="15.0" fill="rgb(234,78,2)" rx="2" ry="2" />
<text  x="1164.04" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="891.8" y="885" width="0.1" height="15.0" fill="rgb(250,167,7)" rx="2" ry="2" />
<text  x="894.76" y="895.5" ></text>
</g>
<g >
<title>GetHost (174 samples, 2.77%)</title><rect x="95.2" y="1973" width="32.7" height="15.0" fill="rgb(245,195,36)" rx="2" ry="2" />
<text  x="98.19" y="1983.5" >Ge..</text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt;@plt (1 samples, 0.02%)</title><rect x="163.1" y="1589" width="0.2" height="15.0" fill="rgb(240,213,20)" rx="2" ry="2" />
<text  x="166.07" y="1599.5" ></text>
</g>
<g >
<title>std::vector&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::allocator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;::vector (1 samples, 0.02%)</title><rect x="574.1" y="1909" width="0.2" height="15.0" fill="rgb(219,68,10)" rx="2" ry="2" />
<text  x="577.14" y="1919.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="732.9" y="1845" width="0.1" height="15.0" fill="rgb(247,191,7)" rx="2" ry="2" />
<text  x="735.86" y="1855.5" ></text>
</g>
</g>
</svg>
