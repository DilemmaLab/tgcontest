<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="2134" onload="init(evt)" viewBox="0 0 1200 2134" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="2134.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="2117" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="2117" > </text>
<g id="frames">
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.2" y="933" width="0.2" height="15.0" fill="rgb(219,27,33)" rx="2" ry="2" />
<text  x="1173.24" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.0" y="981" width="0.1" height="15.0" fill="rgb(246,60,54)" rx="2" ry="2" />
<text  x="1171.95" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (30 samples, 0.47%)</title><rect x="150.5" y="1749" width="5.5" height="15.0" fill="rgb(242,80,50)" rx="2" ry="2" />
<text  x="153.51" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.0" y="1845" width="0.1" height="15.0" fill="rgb(205,50,7)" rx="2" ry="2" />
<text  x="1171.95" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (2 samples, 0.03%)</title><rect x="172.8" y="1749" width="0.4" height="15.0" fill="rgb(241,209,31)" rx="2" ry="2" />
<text  x="175.85" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.8" y="1973" width="0.2" height="15.0" fill="rgb(205,39,24)" rx="2" ry="2" />
<text  x="1171.77" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.0" y="1637" width="0.1" height="15.0" fill="rgb(217,59,2)" rx="2" ry="2" />
<text  x="1171.95" y="1647.5" ></text>
</g>
<g >
<title>onmt::unicode::is_letter@plt (4 samples, 0.06%)</title><rect x="821.3" y="1893" width="0.7" height="15.0" fill="rgb(211,51,49)" rx="2" ry="2" />
<text  x="824.28" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="129.6" y="885" width="0.2" height="15.0" fill="rgb(230,203,26)" rx="2" ry="2" />
<text  x="132.64" y="895.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (1 samples, 0.02%)</title><rect x="584.8" y="1813" width="0.2" height="15.0" fill="rgb(218,32,44)" rx="2" ry="2" />
<text  x="587.77" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="129.8" y="1349" width="0.2" height="15.0" fill="rgb(231,127,28)" rx="2" ry="2" />
<text  x="132.83" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="130.4" y="1413" width="0.2" height="15.0" fill="rgb(231,45,38)" rx="2" ry="2" />
<text  x="133.38" y="1423.5" ></text>
</g>
<g >
<title>pmd_page_vaddr (1 samples, 0.02%)</title><rect x="423.4" y="1877" width="0.2" height="15.0" fill="rgb(231,94,54)" rx="2" ry="2" />
<text  x="426.40" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.6" y="1781" width="0.2" height="15.0" fill="rgb(241,127,45)" rx="2" ry="2" />
<text  x="1171.58" y="1791.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (67 samples, 1.05%)</title><rect x="601.2" y="1893" width="12.4" height="15.0" fill="rgb(211,178,52)" rx="2" ry="2" />
<text  x="604.20" y="1903.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="152.0" y="1685" width="0.2" height="15.0" fill="rgb(224,28,16)" rx="2" ry="2" />
<text  x="154.98" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="129.6" y="197" width="0.2" height="15.0" fill="rgb(240,80,36)" rx="2" ry="2" />
<text  x="132.64" y="207.5" ></text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.05%)</title><rect x="162.0" y="1573" width="0.5" height="15.0" fill="rgb(226,214,49)" rx="2" ry="2" />
<text  x="164.95" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.6" y="885" width="0.2" height="15.0" fill="rgb(220,133,21)" rx="2" ry="2" />
<text  x="1171.58" y="895.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::json_value::destroy (2 samples, 0.03%)</title><rect x="587.0" y="2005" width="0.4" height="15.0" fill="rgb(207,199,43)" rx="2" ry="2" />
<text  x="589.98" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.2" y="629" width="0.2" height="15.0" fill="rgb(230,63,32)" rx="2" ry="2" />
<text  x="1173.24" y="639.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="341" width="0.3" height="15.0" fill="rgb(220,39,9)" rx="2" ry="2" />
<text  x="82.98" y="351.5" ></text>
</g>
<g >
<title>std::__future_base::_Result_base::~_Result_base (2 samples, 0.03%)</title><rect x="99.2" y="1957" width="0.3" height="15.0" fill="rgb(212,8,5)" rx="2" ry="2" />
<text  x="102.18" y="1967.5" ></text>
</g>
<g >
<title>new_sync_read (2 samples, 0.03%)</title><rect x="906.4" y="1941" width="0.4" height="15.0" fill="rgb(216,192,42)" rx="2" ry="2" />
<text  x="909.40" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.8" y="1621" width="0.2" height="15.0" fill="rgb(254,72,28)" rx="2" ry="2" />
<text  x="1171.77" y="1631.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (4 samples, 0.06%)</title><rect x="422.7" y="1845" width="0.7" height="15.0" fill="rgb(249,185,18)" rx="2" ry="2" />
<text  x="425.66" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="997" width="0.3" height="15.0" fill="rgb(235,194,12)" rx="2" ry="2" />
<text  x="82.98" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.8" y="1029" width="0.2" height="15.0" fill="rgb(254,123,7)" rx="2" ry="2" />
<text  x="1171.77" y="1039.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (1 samples, 0.02%)</title><rect x="585.7" y="1861" width="0.2" height="15.0" fill="rgb(209,132,25)" rx="2" ry="2" />
<text  x="588.69" y="1871.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.02%)</title><rect x="631.7" y="1813" width="0.1" height="15.0" fill="rgb(250,33,5)" rx="2" ry="2" />
<text  x="634.66" y="1823.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::basic_regex&lt;char const*&gt; (158 samples, 2.47%)</title><rect x="100.3" y="1957" width="29.2" height="15.0" fill="rgb(250,202,52)" rx="2" ry="2" />
<text  x="103.29" y="1967.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.6" y="1269" width="0.2" height="15.0" fill="rgb(233,103,16)" rx="2" ry="2" />
<text  x="1171.58" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.1" y="69" width="0.2" height="15.0" fill="rgb(250,107,16)" rx="2" ry="2" />
<text  x="1172.14" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (1 samples, 0.02%)</title><rect x="100.7" y="1637" width="0.1" height="15.0" fill="rgb(239,30,5)" rx="2" ry="2" />
<text  x="103.66" y="1647.5" ></text>
</g>
<g >
<title>Eigen::internal::generic_product_impl&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt;, Eigen::DenseShape, Eigen::DenseShape, 8&gt;::scaleAndAddTo&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt; (29 samples, 0.45%)</title><rect x="410.7" y="1941" width="5.3" height="15.0" fill="rgb(206,22,5)" rx="2" ry="2" />
<text  x="413.66" y="1951.5" ></text>
</g>
<g >
<title>handle_mm_fault (18 samples, 0.28%)</title><rect x="36.0" y="1989" width="3.4" height="15.0" fill="rgb(248,56,19)" rx="2" ry="2" />
<text  x="39.03" y="1999.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="314.8" y="1957" width="0.2" height="15.0" fill="rgb(216,200,23)" rx="2" ry="2" />
<text  x="317.83" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_quantifier (1 samples, 0.02%)</title><rect x="112.3" y="1685" width="0.2" height="15.0" fill="rgb(208,12,43)" rx="2" ry="2" />
<text  x="115.29" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="69" width="0.1" height="15.0" fill="rgb(223,222,45)" rx="2" ry="2" />
<text  x="1173.06" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.6" y="1445" width="0.2" height="15.0" fill="rgb(240,8,16)" rx="2" ry="2" />
<text  x="1171.58" y="1455.5" ></text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::get (9 samples, 0.14%)</title><rect x="96.8" y="1909" width="1.6" height="15.0" fill="rgb(240,35,42)" rx="2" ry="2" />
<text  x="99.78" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="1829" width="0.1" height="15.0" fill="rgb(206,23,44)" rx="2" ry="2" />
<text  x="1173.06" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.2" y="1493" width="0.2" height="15.0" fill="rgb(227,174,8)" rx="2" ry="2" />
<text  x="1173.24" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.0" y="1749" width="0.1" height="15.0" fill="rgb(252,88,47)" rx="2" ry="2" />
<text  x="1171.95" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="149" width="0.1" height="15.0" fill="rgb(252,161,3)" rx="2" ry="2" />
<text  x="1173.06" y="159.5" ></text>
</g>
<g >
<title>std::__merge_sort_with_buffer&lt;__gnu_cxx::__normal_iterator&lt;TDocument*, std::vector&lt;TDocument, std::allocator&lt;TDocument&gt; &gt; &gt;, TDocument*, __gnu_cxx::__ops::_Iter_comp_iter&lt;main::$_0&gt; &gt; (2 samples, 0.03%)</title><rect x="587.7" y="1989" width="0.4" height="15.0" fill="rgb(210,73,26)" rx="2" ry="2" />
<text  x="590.72" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="1813" width="0.1" height="15.0" fill="rgb(242,197,39)" rx="2" ry="2" />
<text  x="1173.06" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.0" y="741" width="0.1" height="15.0" fill="rgb(227,169,7)" rx="2" ry="2" />
<text  x="1171.95" y="751.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (1 samples, 0.02%)</title><rect x="144.4" y="1605" width="0.2" height="15.0" fill="rgb(224,8,23)" rx="2" ry="2" />
<text  x="147.41" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.06%)</title><rect x="129.6" y="1509" width="0.8" height="15.0" fill="rgb(221,26,30)" rx="2" ry="2" />
<text  x="132.64" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.08%)</title><rect x="129.6" y="1797" width="1.0" height="15.0" fill="rgb(223,52,45)" rx="2" ry="2" />
<text  x="132.64" y="1807.5" ></text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (1 samples, 0.02%)</title><rect x="715.9" y="1781" width="0.1" height="15.0" fill="rgb(235,157,14)" rx="2" ry="2" />
<text  x="718.86" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.2" y="1269" width="0.2" height="15.0" fill="rgb(253,128,50)" rx="2" ry="2" />
<text  x="1173.24" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.6" y="1861" width="0.2" height="15.0" fill="rgb(240,104,40)" rx="2" ry="2" />
<text  x="1171.58" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.8" y="181" width="0.2" height="15.0" fill="rgb(253,2,7)" rx="2" ry="2" />
<text  x="1171.77" y="191.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="1429" width="0.3" height="15.0" fill="rgb(251,215,31)" rx="2" ry="2" />
<text  x="82.98" y="1439.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (2 samples, 0.03%)</title><rect x="79.1" y="1925" width="0.3" height="15.0" fill="rgb(218,83,6)" rx="2" ry="2" />
<text  x="82.05" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (27 samples, 0.42%)</title><rect x="118.2" y="1701" width="5.0" height="15.0" fill="rgb(214,160,16)" rx="2" ry="2" />
<text  x="121.20" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="130.4" y="1125" width="0.2" height="15.0" fill="rgb(241,105,31)" rx="2" ry="2" />
<text  x="133.38" y="1135.5" ></text>
</g>
<g >
<title>unmap_vmas (1 samples, 0.02%)</title><rect x="584.8" y="1877" width="0.2" height="15.0" fill="rgb(217,215,4)" rx="2" ry="2" />
<text  x="587.77" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.6" y="1125" width="0.2" height="15.0" fill="rgb(238,4,16)" rx="2" ry="2" />
<text  x="1171.58" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.08%)</title><rect x="1169.1" y="1637" width="1.0" height="15.0" fill="rgb(210,164,32)" rx="2" ry="2" />
<text  x="1172.14" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (44 samples, 0.69%)</title><rect x="184.8" y="1813" width="8.2" height="15.0" fill="rgb(253,71,38)" rx="2" ry="2" />
<text  x="187.85" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="1237" width="0.1" height="15.0" fill="rgb(250,133,2)" rx="2" ry="2" />
<text  x="1173.06" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="194.6" y="1477" width="0.4" height="15.0" fill="rgb(222,44,22)" rx="2" ry="2" />
<text  x="197.63" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.0" y="549" width="0.1" height="15.0" fill="rgb(211,166,41)" rx="2" ry="2" />
<text  x="1171.95" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (29 samples, 0.45%)</title><rect x="100.8" y="1653" width="5.4" height="15.0" fill="rgb(227,75,24)" rx="2" ry="2" />
<text  x="103.84" y="1663.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (2 samples, 0.03%)</title><rect x="44.7" y="1973" width="0.4" height="15.0" fill="rgb(253,42,43)" rx="2" ry="2" />
<text  x="47.71" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.0" y="357" width="0.1" height="15.0" fill="rgb(207,176,26)" rx="2" ry="2" />
<text  x="1171.95" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.2" y="69" width="0.2" height="15.0" fill="rgb(245,148,48)" rx="2" ry="2" />
<text  x="1173.24" y="79.5" ></text>
</g>
<g >
<title>__vm_munmap (2 samples, 0.03%)</title><rect x="443.3" y="1909" width="0.4" height="15.0" fill="rgb(245,200,20)" rx="2" ry="2" />
<text  x="446.34" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.6" y="1381" width="0.2" height="15.0" fill="rgb(224,15,27)" rx="2" ry="2" />
<text  x="1171.58" y="1391.5" ></text>
</g>
<g >
<title>new_sync_write (1 samples, 0.02%)</title><rect x="880.6" y="1925" width="0.1" height="15.0" fill="rgb(243,32,4)" rx="2" ry="2" />
<text  x="883.55" y="1935.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;TThreadPool::TThreadPool (11 samples, 0.17%)</title><rect x="43.0" y="2037" width="2.1" height="15.0" fill="rgb(247,118,46)" rx="2" ry="2" />
<text  x="46.05" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="130.4" y="1077" width="0.2" height="15.0" fill="rgb(250,81,53)" rx="2" ry="2" />
<text  x="133.38" y="1087.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="437" width="0.3" height="15.0" fill="rgb(225,2,25)" rx="2" ry="2" />
<text  x="82.98" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.1" y="1493" width="0.2" height="15.0" fill="rgb(246,117,52)" rx="2" ry="2" />
<text  x="1172.14" y="1503.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (1 samples, 0.02%)</title><rect x="585.7" y="1957" width="0.2" height="15.0" fill="rgb(252,184,23)" rx="2" ry="2" />
<text  x="588.69" y="1967.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (2 samples, 0.03%)</title><rect x="111.2" y="1621" width="0.3" height="15.0" fill="rgb(250,170,14)" rx="2" ry="2" />
<text  x="114.18" y="1631.5" ></text>
</g>
<g >
<title>cfree (1 samples, 0.02%)</title><rect x="174.3" y="1637" width="0.2" height="15.0" fill="rgb(245,22,5)" rx="2" ry="2" />
<text  x="177.32" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.06%)</title><rect x="1169.3" y="933" width="0.8" height="15.0" fill="rgb(209,51,21)" rx="2" ry="2" />
<text  x="1172.32" y="943.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (2 samples, 0.03%)</title><rect x="559.1" y="1957" width="0.4" height="15.0" fill="rgb(208,149,38)" rx="2" ry="2" />
<text  x="562.10" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (190 samples, 2.97%)</title><rect x="159.4" y="1909" width="35.1" height="15.0" fill="rgb(230,123,22)" rx="2" ry="2" />
<text  x="162.37" y="1919.5" >st..</text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_subexpr_end (1 samples, 0.02%)</title><rect x="146.1" y="1733" width="0.2" height="15.0" fill="rgb(210,95,10)" rx="2" ry="2" />
<text  x="149.08" y="1743.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;std::unique_ptr&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;  (1,429 samples, 22.36%)</title><rect x="589.2" y="2005" width="263.8" height="15.0" fill="rgb(246,62,32)" rx="2" ry="2" />
<text  x="592.20" y="2015.5" >std::_Function_handler&lt;std::unique_..</text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="853" width="0.3" height="15.0" fill="rgb(240,210,51)" rx="2" ry="2" />
<text  x="82.98" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (43 samples, 0.67%)</title><rect x="164.9" y="1669" width="7.9" height="15.0" fill="rgb(210,8,47)" rx="2" ry="2" />
<text  x="167.91" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.0" y="469" width="0.1" height="15.0" fill="rgb(214,191,48)" rx="2" ry="2" />
<text  x="1171.95" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (10 samples, 0.16%)</title><rect x="138.0" y="1605" width="1.8" height="15.0" fill="rgb(234,18,21)" rx="2" ry="2" />
<text  x="140.95" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.2" y="341" width="0.2" height="15.0" fill="rgb(253,54,21)" rx="2" ry="2" />
<text  x="1173.24" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.0" y="933" width="0.1" height="15.0" fill="rgb(219,201,53)" rx="2" ry="2" />
<text  x="1171.95" y="943.5" ></text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.05%)</title><rect x="173.8" y="1637" width="0.5" height="15.0" fill="rgb(250,128,42)" rx="2" ry="2" />
<text  x="176.77" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="245" width="0.3" height="15.0" fill="rgb(208,22,19)" rx="2" ry="2" />
<text  x="82.98" y="255.5" ></text>
</g>
<g >
<title>DetectLanguage[abi:cxx11] (2 samples, 0.03%)</title><rect x="590.7" y="1973" width="0.3" height="15.0" fill="rgb(206,205,39)" rx="2" ry="2" />
<text  x="593.68" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.09%)</title><rect x="1169.0" y="1973" width="1.1" height="15.0" fill="rgb(241,12,6)" rx="2" ry="2" />
<text  x="1171.95" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="1077" width="0.3" height="15.0" fill="rgb(247,90,34)" rx="2" ry="2" />
<text  x="82.98" y="1087.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="79.8" y="1877" width="0.2" height="15.0" fill="rgb(234,72,1)" rx="2" ry="2" />
<text  x="82.79" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.6" y="133" width="0.2" height="15.0" fill="rgb(226,199,18)" rx="2" ry="2" />
<text  x="1171.58" y="143.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (14 samples, 0.22%)</title><rect x="440.6" y="1973" width="2.6" height="15.0" fill="rgb(224,113,11)" rx="2" ry="2" />
<text  x="443.57" y="1983.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="79.8" y="1957" width="0.2" height="15.0" fill="rgb(235,25,54)" rx="2" ry="2" />
<text  x="82.79" y="1967.5" ></text>
</g>
<g >
<title>generic_file_read_iter (2 samples, 0.03%)</title><rect x="906.4" y="1909" width="0.4" height="15.0" fill="rgb(209,108,31)" rx="2" ry="2" />
<text  x="909.40" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (22 samples, 0.34%)</title><rect x="146.3" y="1717" width="4.0" height="15.0" fill="rgb(246,27,54)" rx="2" ry="2" />
<text  x="149.26" y="1727.5" ></text>
</g>
<g >
<title>do_page_fault (2 samples, 0.03%)</title><rect x="856.7" y="2005" width="0.4" height="15.0" fill="rgb(232,153,20)" rx="2" ry="2" />
<text  x="859.73" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="130.4" y="1333" width="0.2" height="15.0" fill="rgb(252,116,49)" rx="2" ry="2" />
<text  x="133.38" y="1343.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (3 samples, 0.05%)</title><rect x="176.7" y="1621" width="0.6" height="15.0" fill="rgb(212,161,7)" rx="2" ry="2" />
<text  x="179.73" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.06%)</title><rect x="1169.3" y="1493" width="0.8" height="15.0" fill="rgb(217,138,42)" rx="2" ry="2" />
<text  x="1172.32" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (31 samples, 0.49%)</title><rect x="100.5" y="1669" width="5.7" height="15.0" fill="rgb(247,206,27)" rx="2" ry="2" />
<text  x="103.47" y="1679.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (3 samples, 0.05%)</title><rect x="1133.7" y="2053" width="0.5" height="15.0" fill="rgb(244,88,5)" rx="2" ry="2" />
<text  x="1136.69" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="130.0" y="1269" width="0.2" height="15.0" fill="rgb(227,81,37)" rx="2" ry="2" />
<text  x="133.01" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="37" width="0.1" height="15.0" fill="rgb(229,210,54)" rx="2" ry="2" />
<text  x="1173.06" y="47.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="84.4" y="1909" width="0.2" height="15.0" fill="rgb(214,46,42)" rx="2" ry="2" />
<text  x="87.41" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (29 samples, 0.45%)</title><rect x="173.2" y="1685" width="5.4" height="15.0" fill="rgb(240,50,31)" rx="2" ry="2" />
<text  x="176.22" y="1695.5" ></text>
</g>
<g >
<title>std::locale::~locale (5 samples, 0.08%)</title><rect x="334.4" y="1989" width="0.9" height="15.0" fill="rgb(206,38,23)" rx="2" ry="2" />
<text  x="337.40" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.06%)</title><rect x="1169.3" y="1077" width="0.8" height="15.0" fill="rgb(253,223,48)" rx="2" ry="2" />
<text  x="1172.32" y="1087.5" ></text>
</g>
<g >
<title>rcu_report_qs_rnp (1 samples, 0.02%)</title><rect x="1045.6" y="1957" width="0.2" height="15.0" fill="rgb(232,42,21)" rx="2" ry="2" />
<text  x="1048.62" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.2" y="1909" width="0.2" height="15.0" fill="rgb(231,153,33)" rx="2" ry="2" />
<text  x="1173.24" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.0" y="117" width="0.1" height="15.0" fill="rgb(252,145,25)" rx="2" ry="2" />
<text  x="1171.95" y="127.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (1 samples, 0.02%)</title><rect x="135.0" y="1557" width="0.2" height="15.0" fill="rgb(205,39,6)" rx="2" ry="2" />
<text  x="138.00" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="949" width="0.1" height="15.0" fill="rgb(246,191,44)" rx="2" ry="2" />
<text  x="1173.06" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="1685" width="0.1" height="15.0" fill="rgb(212,60,3)" rx="2" ry="2" />
<text  x="1173.06" y="1695.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append@plt (2 samples, 0.03%)</title><rect x="837.3" y="1893" width="0.4" height="15.0" fill="rgb(225,140,24)" rx="2" ry="2" />
<text  x="840.35" y="1903.5" ></text>
</g>
<g >
<title>Eigen::internal::general_matrix_vector_product&lt;long, float, Eigen::internal::const_blas_data_mapper&lt;float, long, 1&gt;, 1, false, float, Eigen::internal::const_blas_data_mapper&lt;float, long, 0&gt;, false, 0&gt;::run (160 samples, 2.50%)</title><rect x="45.1" y="2037" width="29.5" height="15.0" fill="rgb(241,67,53)" rx="2" ry="2" />
<text  x="48.08" y="2047.5" >Ei..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.6" y="1365" width="0.2" height="15.0" fill="rgb(243,152,17)" rx="2" ry="2" />
<text  x="1171.58" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (27 samples, 0.42%)</title><rect x="159.6" y="1717" width="4.9" height="15.0" fill="rgb(236,42,8)" rx="2" ry="2" />
<text  x="162.55" y="1727.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (1 samples, 0.02%)</title><rect x="170.6" y="1605" width="0.2" height="15.0" fill="rgb(238,214,44)" rx="2" ry="2" />
<text  x="173.63" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="53" width="0.1" height="15.0" fill="rgb(224,201,39)" rx="2" ry="2" />
<text  x="1173.06" y="63.5" ></text>
</g>
<g >
<title>unmap_region (1 samples, 0.02%)</title><rect x="585.7" y="1909" width="0.2" height="15.0" fill="rgb(216,46,22)" rx="2" ry="2" />
<text  x="588.69" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (1 samples, 0.02%)</title><rect x="129.3" y="1813" width="0.2" height="15.0" fill="rgb(227,110,26)" rx="2" ry="2" />
<text  x="132.27" y="1823.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt;@plt (2 samples, 0.03%)</title><rect x="140.5" y="1605" width="0.4" height="15.0" fill="rgb(208,88,38)" rx="2" ry="2" />
<text  x="143.54" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (31 samples, 0.49%)</title><rect x="112.5" y="1701" width="5.7" height="15.0" fill="rgb(254,96,6)" rx="2" ry="2" />
<text  x="115.47" y="1711.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (2 samples, 0.03%)</title><rect x="192.0" y="1685" width="0.4" height="15.0" fill="rgb(244,103,42)" rx="2" ry="2" />
<text  x="195.05" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (29 samples, 0.45%)</title><rect x="173.2" y="1701" width="5.4" height="15.0" fill="rgb(244,35,28)" rx="2" ry="2" />
<text  x="176.22" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.8" y="1765" width="0.2" height="15.0" fill="rgb(245,185,22)" rx="2" ry="2" />
<text  x="1171.77" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.2" y="1429" width="0.2" height="15.0" fill="rgb(224,117,52)" rx="2" ry="2" />
<text  x="1173.24" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.8" y="1221" width="0.2" height="15.0" fill="rgb(245,204,6)" rx="2" ry="2" />
<text  x="1171.77" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.8" y="245" width="0.2" height="15.0" fill="rgb(220,196,39)" rx="2" ry="2" />
<text  x="1171.77" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="129.6" y="1445" width="0.2" height="15.0" fill="rgb(217,207,20)" rx="2" ry="2" />
<text  x="132.64" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="194.6" y="1557" width="0.4" height="15.0" fill="rgb(247,132,13)" rx="2" ry="2" />
<text  x="197.63" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.2" y="1525" width="0.2" height="15.0" fill="rgb(232,66,8)" rx="2" ry="2" />
<text  x="1173.24" y="1535.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="98.4" y="1941" width="0.2" height="15.0" fill="rgb(241,19,6)" rx="2" ry="2" />
<text  x="101.44" y="1951.5" ></text>
</g>
<g >
<title>boost::algorithm::join&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, char [2]&gt; (2 samples, 0.03%)</title><rect x="592.7" y="1941" width="0.4" height="15.0" fill="rgb(208,14,37)" rx="2" ry="2" />
<text  x="595.71" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.1" y="197" width="0.2" height="15.0" fill="rgb(217,42,31)" rx="2" ry="2" />
<text  x="1172.14" y="207.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="1125" width="0.3" height="15.0" fill="rgb(238,199,44)" rx="2" ry="2" />
<text  x="82.98" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="129.6" y="1317" width="0.2" height="15.0" fill="rgb(253,91,52)" rx="2" ry="2" />
<text  x="132.64" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.8" y="37" width="0.2" height="15.0" fill="rgb(241,189,21)" rx="2" ry="2" />
<text  x="1171.77" y="47.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.0" y="645" width="0.1" height="15.0" fill="rgb(226,205,42)" rx="2" ry="2" />
<text  x="1171.95" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="1045" width="0.1" height="15.0" fill="rgb(212,190,39)" rx="2" ry="2" />
<text  x="1173.06" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.2" y="85" width="0.2" height="15.0" fill="rgb(239,12,38)" rx="2" ry="2" />
<text  x="1173.24" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (25 samples, 0.39%)</title><rect x="159.9" y="1637" width="4.6" height="15.0" fill="rgb(248,121,9)" rx="2" ry="2" />
<text  x="162.92" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="130.4" y="1765" width="0.2" height="15.0" fill="rgb(234,204,7)" rx="2" ry="2" />
<text  x="133.38" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.2" y="1205" width="0.2" height="15.0" fill="rgb(243,225,3)" rx="2" ry="2" />
<text  x="1173.24" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.6" y="869" width="0.2" height="15.0" fill="rgb(242,225,39)" rx="2" ry="2" />
<text  x="1171.58" y="879.5" ></text>
</g>
<g >
<title>Eigen::internal::call_dense_assignment_loop&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_sum_op&lt;float, float&gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_quotient_op&lt;float, float&gt;, Eigen::CwiseUnaryOp&lt;Eigen::internal::scalar_opposite_op&lt;float&gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_sum_op&lt;float, float&gt;, Eigen::ArrayWrapper&lt;Eigen::Product&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt;, 0&gt; const&gt; const, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Array&lt;float, -1, -1, 0, -1, -1&gt; const&gt; const&gt; const&gt; const, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Array&lt;float, -1, -1, 0, -1, -1&gt; const&gt; const&gt; const, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Array&lt;float, -1, -1, 0, -1, -1&gt; const&gt; const&gt;, Eigen::internal::assign_op&lt;float, float&gt; &gt; (129 samples, 2.02%)</title><rect x="407.7" y="1973" width="23.8" height="15.0" fill="rgb(220,135,3)" rx="2" ry="2" />
<text  x="410.70" y="1983.5" >E..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.6" y="565" width="0.2" height="15.0" fill="rgb(212,3,36)" rx="2" ry="2" />
<text  x="1171.58" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="130.4" y="645" width="0.2" height="15.0" fill="rgb(253,43,41)" rx="2" ry="2" />
<text  x="133.38" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (137 samples, 2.14%)</title><rect x="159.6" y="1813" width="25.2" height="15.0" fill="rgb(233,62,48)" rx="2" ry="2" />
<text  x="162.55" y="1823.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.1" y="1477" width="0.2" height="15.0" fill="rgb(247,154,19)" rx="2" ry="2" />
<text  x="1172.14" y="1487.5" ></text>
</g>
<g >
<title>__dynamic_cast (5 samples, 0.08%)</title><rect x="108.8" y="1605" width="0.9" height="15.0" fill="rgb(244,56,31)" rx="2" ry="2" />
<text  x="111.78" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="129.8" y="373" width="0.2" height="15.0" fill="rgb(233,213,46)" rx="2" ry="2" />
<text  x="132.83" y="383.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="773" width="0.3" height="15.0" fill="rgb(206,84,33)" rx="2" ry="2" />
<text  x="82.98" y="783.5" ></text>
</g>
<g >
<title>free@plt (6 samples, 0.09%)</title><rect x="1095.8" y="2053" width="1.1" height="15.0" fill="rgb(234,81,50)" rx="2" ry="2" />
<text  x="1098.84" y="2063.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="748.4" y="1813" width="0.1" height="15.0" fill="rgb(232,60,4)" rx="2" ry="2" />
<text  x="751.35" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="1269" width="0.1" height="15.0" fill="rgb(205,160,29)" rx="2" ry="2" />
<text  x="1173.06" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="1461" width="0.1" height="15.0" fill="rgb(223,96,18)" rx="2" ry="2" />
<text  x="1173.06" y="1471.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1095.5" y="2037" width="0.2" height="15.0" fill="rgb(205,91,27)" rx="2" ry="2" />
<text  x="1098.47" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.0" y="1029" width="0.1" height="15.0" fill="rgb(212,212,44)" rx="2" ry="2" />
<text  x="1171.95" y="1039.5" ></text>
</g>
<g >
<title>__vfs_write (1 samples, 0.02%)</title><rect x="880.6" y="1941" width="0.1" height="15.0" fill="rgb(206,3,17)" rx="2" ry="2" />
<text  x="883.55" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="129.8" y="805" width="0.2" height="15.0" fill="rgb(244,115,39)" rx="2" ry="2" />
<text  x="132.83" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (158 samples, 2.47%)</title><rect x="100.3" y="1909" width="29.2" height="15.0" fill="rgb(240,28,51)" rx="2" ry="2" />
<text  x="103.29" y="1919.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.8" y="1333" width="0.2" height="15.0" fill="rgb(233,197,18)" rx="2" ry="2" />
<text  x="1171.77" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (182 samples, 2.85%)</title><rect x="159.6" y="1829" width="33.6" height="15.0" fill="rgb(254,0,13)" rx="2" ry="2" />
<text  x="162.55" y="1839.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.08%)</title><rect x="1169.1" y="1797" width="1.0" height="15.0" fill="rgb(227,94,32)" rx="2" ry="2" />
<text  x="1172.14" y="1807.5" ></text>
</g>
<g >
<title>futex_wait (3 samples, 0.05%)</title><rect x="99.7" y="1893" width="0.6" height="15.0" fill="rgb(238,22,15)" rx="2" ry="2" />
<text  x="102.73" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="129.6" y="901" width="0.2" height="15.0" fill="rgb(218,222,46)" rx="2" ry="2" />
<text  x="132.64" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.8" y="1173" width="0.2" height="15.0" fill="rgb(253,105,37)" rx="2" ry="2" />
<text  x="1171.77" y="1183.5" ></text>
</g>
<g >
<title>do_page_fault (2 samples, 0.03%)</title><rect x="85.9" y="1893" width="0.4" height="15.0" fill="rgb(214,194,51)" rx="2" ry="2" />
<text  x="88.88" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (124 samples, 1.94%)</title><rect x="100.3" y="1797" width="22.9" height="15.0" fill="rgb(250,166,34)" rx="2" ry="2" />
<text  x="103.29" y="1807.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.2" y="181" width="0.2" height="15.0" fill="rgb(241,203,30)" rx="2" ry="2" />
<text  x="1173.24" y="191.5" ></text>
</g>
<g >
<title>alloc_pages_vma (25 samples, 0.39%)</title><rect x="425.6" y="1877" width="4.6" height="15.0" fill="rgb(211,220,39)" rx="2" ry="2" />
<text  x="428.61" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="725" width="0.1" height="15.0" fill="rgb(215,73,43)" rx="2" ry="2" />
<text  x="1173.06" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.0" y="421" width="0.1" height="15.0" fill="rgb(214,37,30)" rx="2" ry="2" />
<text  x="1171.95" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (1 samples, 0.02%)</title><rect x="156.8" y="1893" width="0.2" height="15.0" fill="rgb(237,76,32)" rx="2" ry="2" />
<text  x="159.78" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="373" width="0.3" height="15.0" fill="rgb(218,130,21)" rx="2" ry="2" />
<text  x="82.98" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="194.6" y="1701" width="0.4" height="15.0" fill="rgb(239,212,26)" rx="2" ry="2" />
<text  x="197.63" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="130.4" y="1445" width="0.2" height="15.0" fill="rgb(240,69,0)" rx="2" ry="2" />
<text  x="133.38" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.8" y="1413" width="0.2" height="15.0" fill="rgb(239,228,16)" rx="2" ry="2" />
<text  x="1171.77" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.8" y="1749" width="0.2" height="15.0" fill="rgb(245,201,1)" rx="2" ry="2" />
<text  x="1171.77" y="1759.5" ></text>
</g>
<g >
<title>Eigen::internal::general_matrix_matrix_product&lt;long, float, 0, false, float, 1, false, 0, 1&gt;::run (29 samples, 0.45%)</title><rect x="410.7" y="1925" width="5.3" height="15.0" fill="rgb(234,199,41)" rx="2" ry="2" />
<text  x="413.66" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (13 samples, 0.20%)</title><rect x="120.4" y="1669" width="2.4" height="15.0" fill="rgb(235,108,19)" rx="2" ry="2" />
<text  x="123.41" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="129.6" y="1013" width="0.2" height="15.0" fill="rgb(224,42,50)" rx="2" ry="2" />
<text  x="132.64" y="1023.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::basic_regex&lt;char const*&gt; (143 samples, 2.24%)</title><rect x="130.6" y="1941" width="26.4" height="15.0" fill="rgb(206,169,9)" rx="2" ry="2" />
<text  x="133.57" y="1951.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.8" y="1381" width="0.2" height="15.0" fill="rgb(240,207,34)" rx="2" ry="2" />
<text  x="1171.77" y="1391.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="1141" width="0.3" height="15.0" fill="rgb(206,91,6)" rx="2" ry="2" />
<text  x="82.98" y="1151.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (2 samples, 0.03%)</title><rect x="139.2" y="1589" width="0.4" height="15.0" fill="rgb(235,47,28)" rx="2" ry="2" />
<text  x="142.24" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.06%)</title><rect x="1169.3" y="597" width="0.8" height="15.0" fill="rgb(221,164,22)" rx="2" ry="2" />
<text  x="1172.32" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.2" y="309" width="0.2" height="15.0" fill="rgb(233,161,22)" rx="2" ry="2" />
<text  x="1173.24" y="319.5" ></text>
</g>
<g >
<title>mem_cgroup_throttle_swaprate (1 samples, 0.02%)</title><rect x="431.0" y="1861" width="0.2" height="15.0" fill="rgb(235,224,30)" rx="2" ry="2" />
<text  x="433.97" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="629" width="0.3" height="15.0" fill="rgb(245,178,37)" rx="2" ry="2" />
<text  x="82.98" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.02%)</title><rect x="83.3" y="1973" width="0.2" height="15.0" fill="rgb(213,126,48)" rx="2" ry="2" />
<text  x="86.30" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="1109" width="0.1" height="15.0" fill="rgb(229,207,52)" rx="2" ry="2" />
<text  x="1173.06" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="129.6" y="1157" width="0.2" height="15.0" fill="rgb(225,27,39)" rx="2" ry="2" />
<text  x="132.64" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (43 samples, 0.67%)</title><rect x="164.9" y="1717" width="7.9" height="15.0" fill="rgb(224,122,42)" rx="2" ry="2" />
<text  x="167.91" y="1727.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (3 samples, 0.05%)</title><rect x="716.0" y="1781" width="0.6" height="15.0" fill="rgb(234,48,13)" rx="2" ry="2" />
<text  x="719.04" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.8" y="1701" width="0.2" height="15.0" fill="rgb(251,18,39)" rx="2" ry="2" />
<text  x="1171.77" y="1711.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="163.6" y="1573" width="0.2" height="15.0" fill="rgb(222,23,49)" rx="2" ry="2" />
<text  x="166.62" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="130.4" y="885" width="0.2" height="15.0" fill="rgb(247,11,10)" rx="2" ry="2" />
<text  x="133.38" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.2" y="229" width="0.2" height="15.0" fill="rgb(232,217,32)" rx="2" ry="2" />
<text  x="1173.24" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.1" y="1349" width="0.2" height="15.0" fill="rgb(214,36,6)" rx="2" ry="2" />
<text  x="1172.14" y="1359.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="1749" width="0.3" height="15.0" fill="rgb(248,148,54)" rx="2" ry="2" />
<text  x="82.98" y="1759.5" ></text>
</g>
<g >
<title>std::operator&gt;&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (18 samples, 0.28%)</title><rect x="867.4" y="2005" width="3.4" height="15.0" fill="rgb(230,214,38)" rx="2" ry="2" />
<text  x="870.44" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.6" y="757" width="0.2" height="15.0" fill="rgb(206,141,7)" rx="2" ry="2" />
<text  x="1171.58" y="767.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (158 samples, 2.47%)</title><rect x="10.2" y="2053" width="29.2" height="15.0" fill="rgb(232,16,33)" rx="2" ry="2" />
<text  x="13.18" y="2063.5" >[l..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (1 samples, 0.02%)</title><rect x="156.4" y="1813" width="0.2" height="15.0" fill="rgb(224,197,19)" rx="2" ry="2" />
<text  x="159.42" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.6" y="1541" width="0.2" height="15.0" fill="rgb(228,161,8)" rx="2" ry="2" />
<text  x="1171.58" y="1551.5" ></text>
</g>
<g >
<title>__handle_mm_fault (24 samples, 0.38%)</title><rect x="419.0" y="1877" width="4.4" height="15.0" fill="rgb(221,141,14)" rx="2" ry="2" />
<text  x="421.97" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.2" y="1253" width="0.2" height="15.0" fill="rgb(240,159,49)" rx="2" ry="2" />
<text  x="1173.24" y="1263.5" ></text>
</g>
<g >
<title>strlen@plt (1 samples, 0.02%)</title><rect x="1189.8" y="2053" width="0.2" height="15.0" fill="rgb(252,95,6)" rx="2" ry="2" />
<text  x="1192.82" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="157.2" y="1365" width="0.1" height="15.0" fill="rgb(249,94,20)" rx="2" ry="2" />
<text  x="160.15" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.0" y="1589" width="0.1" height="15.0" fill="rgb(211,32,51)" rx="2" ry="2" />
<text  x="1171.95" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="194.6" y="1525" width="0.4" height="15.0" fill="rgb(243,103,46)" rx="2" ry="2" />
<text  x="197.63" y="1535.5" ></text>
</g>
<g >
<title>get_vma_policy.part.36 (1 samples, 0.02%)</title><rect x="37.7" y="1957" width="0.2" height="15.0" fill="rgb(235,128,27)" rx="2" ry="2" />
<text  x="40.70" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="129.6" y="1461" width="0.2" height="15.0" fill="rgb(254,207,40)" rx="2" ry="2" />
<text  x="132.64" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.2" y="1077" width="0.2" height="15.0" fill="rgb(206,90,28)" rx="2" ry="2" />
<text  x="1173.24" y="1087.5" ></text>
</g>
<g >
<title>__schedule (2 samples, 0.03%)</title><rect x="99.9" y="1845" width="0.4" height="15.0" fill="rgb(225,63,38)" rx="2" ry="2" />
<text  x="102.92" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (29 samples, 0.45%)</title><rect x="112.7" y="1653" width="5.3" height="15.0" fill="rgb(228,54,4)" rx="2" ry="2" />
<text  x="115.66" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.0" y="1573" width="0.1" height="15.0" fill="rgb(237,50,4)" rx="2" ry="2" />
<text  x="1171.95" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="1653" width="0.1" height="15.0" fill="rgb(234,209,54)" rx="2" ry="2" />
<text  x="1173.06" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="1781" width="0.1" height="15.0" fill="rgb(235,138,20)" rx="2" ry="2" />
<text  x="1173.06" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="1301" width="0.3" height="15.0" fill="rgb(225,138,40)" rx="2" ry="2" />
<text  x="82.98" y="1311.5" ></text>
</g>
<g >
<title>operator delete@plt (1 samples, 0.02%)</title><rect x="580.7" y="1973" width="0.2" height="15.0" fill="rgb(225,146,23)" rx="2" ry="2" />
<text  x="583.71" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="157.2" y="1781" width="0.3" height="15.0" fill="rgb(224,148,22)" rx="2" ry="2" />
<text  x="160.15" y="1791.5" ></text>
</g>
<g >
<title>cfree (2 samples, 0.03%)</title><rect x="180.0" y="1669" width="0.4" height="15.0" fill="rgb(232,166,36)" rx="2" ry="2" />
<text  x="183.05" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="130.2" y="1317" width="0.2" height="15.0" fill="rgb(236,74,49)" rx="2" ry="2" />
<text  x="133.20" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (23 samples, 0.36%)</title><rect x="146.3" y="1765" width="4.2" height="15.0" fill="rgb(214,133,22)" rx="2" ry="2" />
<text  x="149.26" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="130.0" y="1173" width="0.2" height="15.0" fill="rgb(211,99,42)" rx="2" ry="2" />
<text  x="133.01" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.2" y="1381" width="0.2" height="15.0" fill="rgb(249,148,47)" rx="2" ry="2" />
<text  x="1173.24" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.8" y="1477" width="0.2" height="15.0" fill="rgb(244,64,27)" rx="2" ry="2" />
<text  x="1171.77" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.6" y="581" width="0.2" height="15.0" fill="rgb(210,56,35)" rx="2" ry="2" />
<text  x="1171.58" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.2" y="837" width="0.2" height="15.0" fill="rgb(210,23,28)" rx="2" ry="2" />
<text  x="1173.24" y="847.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt;,  (3 samples, 0.05%)</title><rect x="194.5" y="1957" width="0.5" height="15.0" fill="rgb(246,60,11)" rx="2" ry="2" />
<text  x="197.45" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="157.3" y="1717" width="0.2" height="15.0" fill="rgb(206,108,50)" rx="2" ry="2" />
<text  x="160.34" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.08%)</title><rect x="1169.1" y="1685" width="1.0" height="15.0" fill="rgb(207,134,50)" rx="2" ry="2" />
<text  x="1172.14" y="1695.5" ></text>
</g>
<g >
<title>free@plt (2 samples, 0.03%)</title><rect x="332.6" y="1989" width="0.3" height="15.0" fill="rgb(238,87,32)" rx="2" ry="2" />
<text  x="335.56" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="261" width="0.1" height="15.0" fill="rgb(205,139,5)" rx="2" ry="2" />
<text  x="1173.06" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.6" y="1349" width="0.2" height="15.0" fill="rgb(234,135,24)" rx="2" ry="2" />
<text  x="1171.58" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.6" y="517" width="0.2" height="15.0" fill="rgb(220,186,26)" rx="2" ry="2" />
<text  x="1171.58" y="527.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="1765" width="0.3" height="15.0" fill="rgb(252,176,7)" rx="2" ry="2" />
<text  x="82.98" y="1775.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.02%)</title><rect x="103.8" y="1573" width="0.2" height="15.0" fill="rgb(207,183,53)" rx="2" ry="2" />
<text  x="106.79" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (13 samples, 0.20%)</title><rect x="168.6" y="1621" width="2.4" height="15.0" fill="rgb(220,194,48)" rx="2" ry="2" />
<text  x="171.60" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="129.6" y="437" width="0.2" height="15.0" fill="rgb(218,158,21)" rx="2" ry="2" />
<text  x="132.64" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (1 samples, 0.02%)</title><rect x="194.3" y="1845" width="0.2" height="15.0" fill="rgb(222,127,23)" rx="2" ry="2" />
<text  x="197.27" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.2" y="1461" width="0.2" height="15.0" fill="rgb(226,59,18)" rx="2" ry="2" />
<text  x="1173.24" y="1471.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="565" width="0.3" height="15.0" fill="rgb(249,187,25)" rx="2" ry="2" />
<text  x="82.98" y="575.5" ></text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::get (1 samples, 0.02%)</title><rect x="86.3" y="1941" width="0.1" height="15.0" fill="rgb(227,169,29)" rx="2" ry="2" />
<text  x="89.25" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="129.6" y="261" width="0.2" height="15.0" fill="rgb(214,223,49)" rx="2" ry="2" />
<text  x="132.64" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="129.8" y="565" width="0.2" height="15.0" fill="rgb(237,47,3)" rx="2" ry="2" />
<text  x="132.83" y="575.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1045.6" y="1989" width="0.2" height="15.0" fill="rgb(246,105,54)" rx="2" ry="2" />
<text  x="1048.62" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="725" width="0.3" height="15.0" fill="rgb(238,139,23)" rx="2" ry="2" />
<text  x="82.98" y="735.5" ></text>
</g>
<g >
<title>free_unref_page_list (1 samples, 0.02%)</title><rect x="584.8" y="1781" width="0.2" height="15.0" fill="rgb(227,136,31)" rx="2" ry="2" />
<text  x="587.77" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.6" y="1285" width="0.2" height="15.0" fill="rgb(237,101,23)" rx="2" ry="2" />
<text  x="1171.58" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (31 samples, 0.49%)</title><rect x="106.6" y="1653" width="5.7" height="15.0" fill="rgb(241,74,19)" rx="2" ry="2" />
<text  x="109.56" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1168.6" y="2005" width="0.4" height="15.0" fill="rgb(222,23,28)" rx="2" ry="2" />
<text  x="1171.58" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="157.2" y="1861" width="0.3" height="15.0" fill="rgb(244,170,45)" rx="2" ry="2" />
<text  x="160.15" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.6" y="837" width="0.2" height="15.0" fill="rgb(223,128,14)" rx="2" ry="2" />
<text  x="1171.58" y="847.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="1413" width="0.3" height="15.0" fill="rgb(241,29,44)" rx="2" ry="2" />
<text  x="82.98" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="129.6" y="997" width="0.2" height="15.0" fill="rgb(224,74,18)" rx="2" ry="2" />
<text  x="132.64" y="1007.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::addSubwords (8 samples, 0.13%)</title><rect x="933.9" y="2053" width="1.5" height="15.0" fill="rgb(205,18,0)" rx="2" ry="2" />
<text  x="936.91" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="1349" width="0.1" height="15.0" fill="rgb(220,22,53)" rx="2" ry="2" />
<text  x="1173.06" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (29 samples, 0.45%)</title><rect x="173.2" y="1669" width="5.4" height="15.0" fill="rgb(219,22,51)" rx="2" ry="2" />
<text  x="176.22" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.1" y="133" width="0.2" height="15.0" fill="rgb(244,92,0)" rx="2" ry="2" />
<text  x="1172.14" y="143.5" ></text>
</g>
<g >
<title>fasttext::entry::entry (1 samples, 0.02%)</title><rect x="1095.7" y="2053" width="0.1" height="15.0" fill="rgb(207,210,40)" rx="2" ry="2" />
<text  x="1098.65" y="2063.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="180.4" y="1669" width="0.2" height="15.0" fill="rgb(215,52,30)" rx="2" ry="2" />
<text  x="183.42" y="1679.5" ></text>
</g>
<g >
<title>page_fault (2 samples, 0.03%)</title><rect x="85.9" y="1909" width="0.4" height="15.0" fill="rgb(246,188,49)" rx="2" ry="2" />
<text  x="88.88" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (108 samples, 1.69%)</title><rect x="130.6" y="1781" width="19.9" height="15.0" fill="rgb(228,130,33)" rx="2" ry="2" />
<text  x="133.57" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="130.4" y="773" width="0.2" height="15.0" fill="rgb(252,60,32)" rx="2" ry="2" />
<text  x="133.38" y="783.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="549" width="0.3" height="15.0" fill="rgb(241,72,22)" rx="2" ry="2" />
<text  x="82.98" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="130.4" y="1317" width="0.2" height="15.0" fill="rgb(244,143,18)" rx="2" ry="2" />
<text  x="133.38" y="1327.5" ></text>
</g>
<g >
<title>onmt::unicode::is_letter@plt (4 samples, 0.06%)</title><rect x="747.6" y="1877" width="0.8" height="15.0" fill="rgb(211,132,50)" rx="2" ry="2" />
<text  x="750.62" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.06%)</title><rect x="1169.3" y="1045" width="0.8" height="15.0" fill="rgb(215,168,39)" rx="2" ry="2" />
<text  x="1172.32" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="129.6" y="789" width="0.2" height="15.0" fill="rgb(254,47,33)" rx="2" ry="2" />
<text  x="132.64" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.06%)</title><rect x="1169.3" y="757" width="0.8" height="15.0" fill="rgb(228,53,38)" rx="2" ry="2" />
<text  x="1172.32" y="767.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="79.8" y="1973" width="0.2" height="15.0" fill="rgb(249,38,33)" rx="2" ry="2" />
<text  x="82.79" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.8" y="149" width="0.2" height="15.0" fill="rgb(219,162,37)" rx="2" ry="2" />
<text  x="1171.77" y="159.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find (3 samples, 0.05%)</title><rect x="849.5" y="1909" width="0.6" height="15.0" fill="rgb(222,142,22)" rx="2" ry="2" />
<text  x="852.53" y="1919.5" ></text>
</g>
<g >
<title>cfree (1 samples, 0.02%)</title><rect x="593.1" y="1941" width="0.2" height="15.0" fill="rgb(209,91,13)" rx="2" ry="2" />
<text  x="596.08" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="129.6" y="1477" width="0.2" height="15.0" fill="rgb(220,103,13)" rx="2" ry="2" />
<text  x="132.64" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.2" y="1141" width="0.2" height="15.0" fill="rgb(205,126,0)" rx="2" ry="2" />
<text  x="1173.24" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="129.8" y="773" width="0.2" height="15.0" fill="rgb(233,177,14)" rx="2" ry="2" />
<text  x="132.83" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.1" y="725" width="0.2" height="15.0" fill="rgb(207,68,37)" rx="2" ry="2" />
<text  x="1172.14" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.08%)</title><rect x="1169.1" y="1669" width="1.0" height="15.0" fill="rgb(227,119,16)" rx="2" ry="2" />
<text  x="1172.14" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (32 samples, 0.50%)</title><rect x="123.4" y="1749" width="5.9" height="15.0" fill="rgb(236,136,36)" rx="2" ry="2" />
<text  x="126.37" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (27 samples, 0.42%)</title><rect x="865.8" y="2021" width="5.0" height="15.0" fill="rgb(212,126,14)" rx="2" ry="2" />
<text  x="868.78" y="2031.5" ></text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.02%)</title><rect x="84.4" y="1893" width="0.2" height="15.0" fill="rgb(210,170,29)" rx="2" ry="2" />
<text  x="87.41" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="129.8" y="1237" width="0.2" height="15.0" fill="rgb(210,60,37)" rx="2" ry="2" />
<text  x="132.83" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="129.8" y="1205" width="0.2" height="15.0" fill="rgb(243,162,29)" rx="2" ry="2" />
<text  x="132.83" y="1215.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.02%)</title><rect x="748.4" y="1861" width="0.1" height="15.0" fill="rgb(242,155,17)" rx="2" ry="2" />
<text  x="751.35" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.0" y="293" width="0.1" height="15.0" fill="rgb(212,104,3)" rx="2" ry="2" />
<text  x="1171.95" y="303.5" ></text>
</g>
<g >
<title>GetHost (196 samples, 3.07%)</title><rect x="159.0" y="1973" width="36.2" height="15.0" fill="rgb(237,158,9)" rx="2" ry="2" />
<text  x="162.00" y="1983.5" >Get..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (31 samples, 0.49%)</title><rect x="106.6" y="1685" width="5.7" height="15.0" fill="rgb(232,118,50)" rx="2" ry="2" />
<text  x="109.56" y="1695.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (2 samples, 0.03%)</title><rect x="140.2" y="1605" width="0.3" height="15.0" fill="rgb(241,58,37)" rx="2" ry="2" />
<text  x="143.17" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_Compiler (143 samples, 2.24%)</title><rect x="130.6" y="1925" width="26.4" height="15.0" fill="rgb(247,168,24)" rx="2" ry="2" />
<text  x="133.57" y="1935.5" >s..</text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (1 samples, 0.02%)</title><rect x="100.3" y="1685" width="0.2" height="15.0" fill="rgb(207,83,33)" rx="2" ry="2" />
<text  x="103.29" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.06%)</title><rect x="129.6" y="1637" width="0.8" height="15.0" fill="rgb(227,104,18)" rx="2" ry="2" />
<text  x="132.64" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (44 samples, 0.69%)</title><rect x="184.8" y="1733" width="8.2" height="15.0" fill="rgb(252,116,11)" rx="2" ry="2" />
<text  x="187.85" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.2" y="485" width="0.2" height="15.0" fill="rgb(245,203,45)" rx="2" ry="2" />
<text  x="1173.24" y="495.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="1397" width="0.3" height="15.0" fill="rgb(231,134,18)" rx="2" ry="2" />
<text  x="82.98" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.06%)</title><rect x="129.6" y="1701" width="0.8" height="15.0" fill="rgb(235,206,46)" rx="2" ry="2" />
<text  x="132.64" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.1" y="757" width="0.2" height="15.0" fill="rgb(244,52,28)" rx="2" ry="2" />
<text  x="1172.14" y="767.5" ></text>
</g>
<g >
<title>malloc (12 samples, 0.19%)</title><rect x="862.5" y="2037" width="2.2" height="15.0" fill="rgb(254,207,17)" rx="2" ry="2" />
<text  x="865.46" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.2" y="1717" width="0.2" height="15.0" fill="rgb(233,185,48)" rx="2" ry="2" />
<text  x="1173.24" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="194.6" y="1685" width="0.4" height="15.0" fill="rgb(239,9,28)" rx="2" ry="2" />
<text  x="197.63" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (1 samples, 0.02%)</title><rect x="193.9" y="1845" width="0.2" height="15.0" fill="rgb(244,152,48)" rx="2" ry="2" />
<text  x="196.90" y="1855.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::construct&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="587.4" y="1989" width="0.1" height="15.0" fill="rgb(241,121,31)" rx="2" ry="2" />
<text  x="590.35" y="1999.5" ></text>
</g>
<g >
<title>__do_page_fault (29 samples, 0.45%)</title><rect x="418.2" y="1909" width="5.4" height="15.0" fill="rgb(239,57,40)" rx="2" ry="2" />
<text  x="421.23" y="1919.5" ></text>
</g>
<g >
<title>free@plt (1 samples, 0.02%)</title><rect x="132.0" y="1573" width="0.2" height="15.0" fill="rgb(247,65,39)" rx="2" ry="2" />
<text  x="135.04" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (2 samples, 0.03%)</title><rect x="159.6" y="1685" width="0.3" height="15.0" fill="rgb(230,160,25)" rx="2" ry="2" />
<text  x="162.55" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.8" y="613" width="0.2" height="15.0" fill="rgb(220,220,16)" rx="2" ry="2" />
<text  x="1171.77" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find@plt (1 samples, 0.02%)</title><rect x="850.1" y="1909" width="0.2" height="15.0" fill="rgb(210,51,33)" rx="2" ry="2" />
<text  x="853.09" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="1925" width="0.1" height="15.0" fill="rgb(244,11,46)" rx="2" ry="2" />
<text  x="1173.06" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (43 samples, 0.67%)</title><rect x="164.9" y="1701" width="7.9" height="15.0" fill="rgb(250,101,3)" rx="2" ry="2" />
<text  x="167.91" y="1711.5" ></text>
</g>
<g >
<title>operator delete@plt (4 samples, 0.06%)</title><rect x="1113.7" y="2053" width="0.8" height="15.0" fill="rgb(244,104,36)" rx="2" ry="2" />
<text  x="1116.75" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.6" y="1397" width="0.2" height="15.0" fill="rgb(215,80,21)" rx="2" ry="2" />
<text  x="1171.58" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.6" y="1941" width="0.2" height="15.0" fill="rgb(253,208,17)" rx="2" ry="2" />
<text  x="1171.58" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="129.6" y="981" width="0.2" height="15.0" fill="rgb(206,90,15)" rx="2" ry="2" />
<text  x="132.64" y="991.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::~collate (25 samples, 0.39%)</title><rect x="873.7" y="2037" width="4.6" height="15.0" fill="rgb(243,3,6)" rx="2" ry="2" />
<text  x="876.72" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="1669" width="0.3" height="15.0" fill="rgb(248,50,37)" rx="2" ry="2" />
<text  x="82.98" y="1679.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="580.9" y="1973" width="0.2" height="15.0" fill="rgb(226,10,47)" rx="2" ry="2" />
<text  x="583.89" y="1983.5" ></text>
</g>
<g >
<title>rcu_process_callbacks (1 samples, 0.02%)</title><rect x="1045.6" y="1973" width="0.2" height="15.0" fill="rgb(205,68,40)" rx="2" ry="2" />
<text  x="1048.62" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="1045" width="0.3" height="15.0" fill="rgb(253,50,8)" rx="2" ry="2" />
<text  x="82.98" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.8" y="1861" width="0.2" height="15.0" fill="rgb(217,150,0)" rx="2" ry="2" />
<text  x="1171.77" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="129.6" y="373" width="0.2" height="15.0" fill="rgb(244,0,39)" rx="2" ry="2" />
<text  x="132.64" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.6" y="629" width="0.2" height="15.0" fill="rgb(251,72,40)" rx="2" ry="2" />
<text  x="1171.58" y="639.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (4 samples, 0.06%)</title><rect x="585.0" y="2005" width="0.7" height="15.0" fill="rgb(249,199,2)" rx="2" ry="2" />
<text  x="587.95" y="2015.5" ></text>
</g>
<g >
<title>RunFasttextClf (1 samples, 0.02%)</title><rect x="590.7" y="1957" width="0.2" height="15.0" fill="rgb(233,83,3)" rx="2" ry="2" />
<text  x="593.68" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.06%)</title><rect x="1169.3" y="181" width="0.8" height="15.0" fill="rgb(245,131,9)" rx="2" ry="2" />
<text  x="1172.32" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.8" y="757" width="0.2" height="15.0" fill="rgb(210,20,23)" rx="2" ry="2" />
<text  x="1171.77" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_expression_term&lt;false, false&gt; (1 samples, 0.02%)</title><rect x="172.5" y="1637" width="0.2" height="15.0" fill="rgb(206,12,5)" rx="2" ry="2" />
<text  x="175.48" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.1" y="1077" width="0.2" height="15.0" fill="rgb(219,161,52)" rx="2" ry="2" />
<text  x="1172.14" y="1087.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (4 samples, 0.06%)</title><rect x="847.9" y="1893" width="0.7" height="15.0" fill="rgb(217,121,10)" rx="2" ry="2" />
<text  x="850.87" y="1903.5" ></text>
</g>
<g >
<title>fasttext::Vector::addRow (5 samples, 0.08%)</title><rect x="320.0" y="1989" width="0.9" height="15.0" fill="rgb(207,24,53)" rx="2" ry="2" />
<text  x="323.00" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (1 samples, 0.02%)</title><rect x="156.4" y="1797" width="0.2" height="15.0" fill="rgb(250,125,37)" rx="2" ry="2" />
<text  x="159.42" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (44 samples, 0.69%)</title><rect x="164.7" y="1733" width="8.1" height="15.0" fill="rgb(232,190,1)" rx="2" ry="2" />
<text  x="167.72" y="1743.5" ></text>
</g>
<g >
<title>TSlinkClustering::Cluster (1,346 samples, 21.06%)</title><rect x="336.4" y="2005" width="248.6" height="15.0" fill="rgb(239,120,24)" rx="2" ry="2" />
<text  x="339.43" y="2015.5" >TSlinkClustering::Cluster</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="1509" width="0.1" height="15.0" fill="rgb(231,68,7)" rx="2" ry="2" />
<text  x="1173.06" y="1519.5" ></text>
</g>
<g >
<title>do_futex (8 samples, 0.13%)</title><rect x="43.2" y="1957" width="1.5" height="15.0" fill="rgb(242,44,35)" rx="2" ry="2" />
<text  x="46.23" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.1" y="1253" width="0.2" height="15.0" fill="rgb(220,136,3)" rx="2" ry="2" />
<text  x="1172.14" y="1263.5" ></text>
</g>
<g >
<title>strlen@plt (2 samples, 0.03%)</title><rect x="849.2" y="1893" width="0.3" height="15.0" fill="rgb(244,190,11)" rx="2" ry="2" />
<text  x="852.16" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.06%)</title><rect x="1169.3" y="533" width="0.8" height="15.0" fill="rgb(212,64,32)" rx="2" ry="2" />
<text  x="1172.32" y="543.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="443.3" y="1957" width="0.4" height="15.0" fill="rgb(232,201,24)" rx="2" ry="2" />
<text  x="446.34" y="1967.5" ></text>
</g>
<g >
<title>operator new@plt (1 samples, 0.02%)</title><rect x="80.0" y="37" width="0.2" height="15.0" fill="rgb(235,192,22)" rx="2" ry="2" />
<text  x="82.98" y="47.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="130.4" y="1669" width="0.2" height="15.0" fill="rgb(218,168,24)" rx="2" ry="2" />
<text  x="133.38" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="194.6" y="1429" width="0.4" height="15.0" fill="rgb(214,164,13)" rx="2" ry="2" />
<text  x="197.63" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="129.8" y="1365" width="0.2" height="15.0" fill="rgb(236,78,18)" rx="2" ry="2" />
<text  x="132.83" y="1375.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="79.8" y="1893" width="0.2" height="15.0" fill="rgb(249,116,25)" rx="2" ry="2" />
<text  x="82.79" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="129.6" y="1077" width="0.2" height="15.0" fill="rgb(228,219,4)" rx="2" ry="2" />
<text  x="132.64" y="1087.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="79.8" y="2005" width="0.2" height="15.0" fill="rgb(241,15,41)" rx="2" ry="2" />
<text  x="82.79" y="2015.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.03%)</title><rect x="332.9" y="1989" width="0.4" height="15.0" fill="rgb(222,182,36)" rx="2" ry="2" />
<text  x="335.93" y="1999.5" ></text>
</g>
<g >
<title>unmap_single_vma (2 samples, 0.03%)</title><rect x="443.3" y="1845" width="0.4" height="15.0" fill="rgb(229,39,51)" rx="2" ry="2" />
<text  x="446.34" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.8" y="421" width="0.2" height="15.0" fill="rgb(226,127,1)" rx="2" ry="2" />
<text  x="1171.77" y="431.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="261" width="0.3" height="15.0" fill="rgb(205,210,48)" rx="2" ry="2" />
<text  x="82.98" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (141 samples, 2.21%)</title><rect x="130.6" y="1877" width="26.0" height="15.0" fill="rgb(229,33,19)" rx="2" ry="2" />
<text  x="133.57" y="1887.5" >s..</text>
</g>
<g >
<title>__do_page_fault (2 samples, 0.03%)</title><rect x="856.7" y="1989" width="0.4" height="15.0" fill="rgb(238,115,33)" rx="2" ry="2" />
<text  x="859.73" y="1999.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (2 samples, 0.03%)</title><rect x="443.3" y="1797" width="0.4" height="15.0" fill="rgb(217,42,15)" rx="2" ry="2" />
<text  x="446.34" y="1807.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::getId (106 samples, 1.66%)</title><rect x="950.9" y="2053" width="19.6" height="15.0" fill="rgb(229,36,10)" rx="2" ry="2" />
<text  x="953.90" y="2063.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (5 samples, 0.08%)</title><rect x="104.2" y="1573" width="0.9" height="15.0" fill="rgb(207,62,9)" rx="2" ry="2" />
<text  x="107.16" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="194.6" y="1365" width="0.4" height="15.0" fill="rgb(224,82,42)" rx="2" ry="2" />
<text  x="197.63" y="1375.5" ></text>
</g>
<g >
<title>to_json&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; (1 samples, 0.02%)</title><rect x="588.6" y="2005" width="0.2" height="15.0" fill="rgb(217,7,50)" rx="2" ry="2" />
<text  x="591.64" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="130.4" y="1701" width="0.2" height="15.0" fill="rgb(210,11,36)" rx="2" ry="2" />
<text  x="133.38" y="1711.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; const&amp;&gt; (2 samples, 0.03%)</title><rect x="588.3" y="1829" width="0.3" height="15.0" fill="rgb(239,168,21)" rx="2" ry="2" />
<text  x="591.28" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_subexpr_begin (1 samples, 0.02%)</title><rect x="156.8" y="1909" width="0.2" height="15.0" fill="rgb(235,205,34)" rx="2" ry="2" />
<text  x="159.78" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.08%)</title><rect x="1169.1" y="1589" width="1.0" height="15.0" fill="rgb(221,93,40)" rx="2" ry="2" />
<text  x="1172.14" y="1599.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="145.0" y="1605" width="0.2" height="15.0" fill="rgb(226,154,20)" rx="2" ry="2" />
<text  x="147.97" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (66 samples, 1.03%)</title><rect x="100.3" y="1749" width="12.2" height="15.0" fill="rgb(233,17,35)" rx="2" ry="2" />
<text  x="103.29" y="1759.5" ></text>
</g>
<g >
<title>tlb_flush_mmu_free (1 samples, 0.02%)</title><rect x="584.8" y="1829" width="0.2" height="15.0" fill="rgb(213,97,5)" rx="2" ry="2" />
<text  x="587.77" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.0" y="1061" width="0.1" height="15.0" fill="rgb(243,18,31)" rx="2" ry="2" />
<text  x="1171.95" y="1071.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="149.2" y="1589" width="0.2" height="15.0" fill="rgb(227,6,50)" rx="2" ry="2" />
<text  x="152.21" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.1" y="1013" width="0.2" height="15.0" fill="rgb(209,121,6)" rx="2" ry="2" />
<text  x="1172.14" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="581" width="0.1" height="15.0" fill="rgb(240,176,27)" rx="2" ry="2" />
<text  x="1173.06" y="591.5" ></text>
</g>
<g >
<title>__pthread_once (3 samples, 0.05%)</title><rect x="879.1" y="2005" width="0.5" height="15.0" fill="rgb(221,171,42)" rx="2" ry="2" />
<text  x="882.08" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="130.0" y="1413" width="0.4" height="15.0" fill="rgb(217,220,18)" rx="2" ry="2" />
<text  x="133.01" y="1423.5" ></text>
</g>
<g >
<title>onmt::unicode::is_number@plt (1 samples, 0.02%)</title><rect x="824.1" y="1893" width="0.1" height="15.0" fill="rgb(241,9,36)" rx="2" ry="2" />
<text  x="827.05" y="1903.5" ></text>
</g>
<g >
<title>__vfs_read (2 samples, 0.03%)</title><rect x="906.4" y="1957" width="0.4" height="15.0" fill="rgb(239,126,51)" rx="2" ry="2" />
<text  x="909.40" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="1365" width="0.1" height="15.0" fill="rgb(221,189,29)" rx="2" ry="2" />
<text  x="1173.06" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.6" y="1973" width="0.2" height="15.0" fill="rgb(244,222,46)" rx="2" ry="2" />
<text  x="1171.58" y="1983.5" ></text>
</g>
<g >
<title>__x64_sys_read (3 samples, 0.05%)</title><rect x="83.5" y="1989" width="0.5" height="15.0" fill="rgb(246,84,52)" rx="2" ry="2" />
<text  x="86.48" y="1999.5" ></text>
</g>
<g >
<title>nlohmann::operator&gt;&gt; (71 samples, 1.11%)</title><rect x="85.5" y="1989" width="13.1" height="15.0" fill="rgb(247,23,16)" rx="2" ry="2" />
<text  x="88.52" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.6" y="1253" width="0.2" height="15.0" fill="rgb(205,212,40)" rx="2" ry="2" />
<text  x="1171.58" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="129.6" y="85" width="0.2" height="15.0" fill="rgb(249,139,23)" rx="2" ry="2" />
<text  x="132.64" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_Compiler (192 samples, 3.00%)</title><rect x="159.0" y="1941" width="35.5" height="15.0" fill="rgb(220,129,40)" rx="2" ry="2" />
<text  x="162.00" y="1951.5" >std..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (158 samples, 2.47%)</title><rect x="100.3" y="1893" width="29.2" height="15.0" fill="rgb(238,133,18)" rx="2" ry="2" />
<text  x="103.29" y="1903.5" >st..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_quantifier (1 samples, 0.02%)</title><rect x="193.0" y="1813" width="0.2" height="15.0" fill="rgb(205,15,10)" rx="2" ry="2" />
<text  x="195.97" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (1 samples, 0.02%)</title><rect x="129.3" y="1685" width="0.2" height="15.0" fill="rgb(212,31,53)" rx="2" ry="2" />
<text  x="132.27" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.2" y="1045" width="0.2" height="15.0" fill="rgb(242,105,49)" rx="2" ry="2" />
<text  x="1173.24" y="1055.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (2 samples, 0.03%)</title><rect x="163.8" y="1589" width="0.4" height="15.0" fill="rgb(243,69,7)" rx="2" ry="2" />
<text  x="166.80" y="1599.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (1 samples, 0.02%)</title><rect x="1168.6" y="37" width="0.2" height="15.0" fill="rgb(214,107,37)" rx="2" ry="2" />
<text  x="1171.58" y="47.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="129.6" y="949" width="0.2" height="15.0" fill="rgb(242,203,44)" rx="2" ry="2" />
<text  x="132.64" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.8" y="565" width="0.2" height="15.0" fill="rgb(228,158,0)" rx="2" ry="2" />
<text  x="1171.77" y="575.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="213" width="0.3" height="15.0" fill="rgb(217,190,24)" rx="2" ry="2" />
<text  x="82.98" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (43 samples, 0.67%)</title><rect x="164.9" y="1653" width="7.9" height="15.0" fill="rgb(244,124,32)" rx="2" ry="2" />
<text  x="167.91" y="1663.5" ></text>
</g>
<g >
<title>fasttext::FastText::getWordVector (11 samples, 0.17%)</title><rect x="318.0" y="1989" width="2.0" height="15.0" fill="rgb(216,6,47)" rx="2" ry="2" />
<text  x="320.97" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.06%)</title><rect x="1169.3" y="725" width="0.8" height="15.0" fill="rgb(211,207,0)" rx="2" ry="2" />
<text  x="1172.32" y="735.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (2 samples, 0.03%)</title><rect x="135.6" y="1557" width="0.3" height="15.0" fill="rgb(222,42,31)" rx="2" ry="2" />
<text  x="138.55" y="1567.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (1 samples, 0.02%)</title><rect x="144.6" y="1605" width="0.2" height="15.0" fill="rgb(225,218,38)" rx="2" ry="2" />
<text  x="147.60" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.8" y="901" width="0.2" height="15.0" fill="rgb(241,96,49)" rx="2" ry="2" />
<text  x="1171.77" y="911.5" ></text>
</g>
<g >
<title>malloc (5 samples, 0.08%)</title><rect x="630.9" y="1877" width="0.9" height="15.0" fill="rgb(217,176,30)" rx="2" ry="2" />
<text  x="633.93" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.8" y="949" width="0.2" height="15.0" fill="rgb(217,130,38)" rx="2" ry="2" />
<text  x="1171.77" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="129.6" y="1253" width="0.2" height="15.0" fill="rgb(205,53,50)" rx="2" ry="2" />
<text  x="132.64" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="157.2" y="1845" width="0.3" height="15.0" fill="rgb(217,50,41)" rx="2" ry="2" />
<text  x="160.15" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.0" y="917" width="0.1" height="15.0" fill="rgb(217,132,49)" rx="2" ry="2" />
<text  x="1171.95" y="927.5" ></text>
</g>
<g >
<title>[unknown] (12 samples, 0.19%)</title><rect x="873.7" y="2005" width="2.2" height="15.0" fill="rgb(224,215,2)" rx="2" ry="2" />
<text  x="876.72" y="2015.5" ></text>
</g>
<g >
<title>cfree (1 samples, 0.02%)</title><rect x="187.1" y="1701" width="0.1" height="15.0" fill="rgb(253,224,12)" rx="2" ry="2" />
<text  x="190.06" y="1711.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (2 samples, 0.03%)</title><rect x="177.8" y="1637" width="0.4" height="15.0" fill="rgb(217,83,36)" rx="2" ry="2" />
<text  x="180.83" y="1647.5" ></text>
</g>
<g >
<title>unmap_region (2 samples, 0.03%)</title><rect x="443.3" y="1877" width="0.4" height="15.0" fill="rgb(214,163,24)" rx="2" ry="2" />
<text  x="446.34" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.6" y="821" width="0.2" height="15.0" fill="rgb(227,35,26)" rx="2" ry="2" />
<text  x="1171.58" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="130.4" y="725" width="0.2" height="15.0" fill="rgb(228,182,16)" rx="2" ry="2" />
<text  x="133.38" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.2" y="117" width="0.2" height="15.0" fill="rgb(216,210,17)" rx="2" ry="2" />
<text  x="1173.24" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.6" y="165" width="0.2" height="15.0" fill="rgb(230,158,42)" rx="2" ry="2" />
<text  x="1171.58" y="175.5" ></text>
</g>
<g >
<title>Eigen::internal::generic_product_impl&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt;, Eigen::DenseShape, Eigen::DenseShape, 8&gt;::evalTo&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt; (29 samples, 0.45%)</title><rect x="410.7" y="1957" width="5.3" height="15.0" fill="rgb(223,218,53)" rx="2" ry="2" />
<text  x="413.66" y="1967.5" ></text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.05%)</title><rect x="210.7" y="1989" width="0.6" height="15.0" fill="rgb(207,153,33)" rx="2" ry="2" />
<text  x="213.70" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.1" y="453" width="0.2" height="15.0" fill="rgb(242,151,49)" rx="2" ry="2" />
<text  x="1172.14" y="463.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.02%)</title><rect x="182.1" y="1653" width="0.2" height="15.0" fill="rgb(226,212,10)" rx="2" ry="2" />
<text  x="185.08" y="1663.5" ></text>
</g>
<g >
<title>__handle_mm_fault (2 samples, 0.03%)</title><rect x="85.9" y="1845" width="0.4" height="15.0" fill="rgb(222,201,46)" rx="2" ry="2" />
<text  x="88.88" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="129.8" y="885" width="0.2" height="15.0" fill="rgb(232,155,16)" rx="2" ry="2" />
<text  x="132.83" y="895.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.06%)</title><rect x="167.9" y="1621" width="0.7" height="15.0" fill="rgb(215,131,17)" rx="2" ry="2" />
<text  x="170.86" y="1631.5" ></text>
</g>
<g >
<title>__do_munmap (1 samples, 0.02%)</title><rect x="584.8" y="1909" width="0.2" height="15.0" fill="rgb(249,212,35)" rx="2" ry="2" />
<text  x="587.77" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="1253" width="0.1" height="15.0" fill="rgb(216,34,14)" rx="2" ry="2" />
<text  x="1173.06" y="1263.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="150.0" y="1637" width="0.1" height="15.0" fill="rgb(247,202,39)" rx="2" ry="2" />
<text  x="152.95" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="130.4" y="1493" width="0.2" height="15.0" fill="rgb(237,9,15)" rx="2" ry="2" />
<text  x="133.38" y="1503.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="1093" width="0.3" height="15.0" fill="rgb(221,115,19)" rx="2" ry="2" />
<text  x="82.98" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.6" y="1173" width="0.2" height="15.0" fill="rgb(241,111,16)" rx="2" ry="2" />
<text  x="1171.58" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.06%)</title><rect x="1169.3" y="1253" width="0.8" height="15.0" fill="rgb(246,31,53)" rx="2" ry="2" />
<text  x="1172.32" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.08%)</title><rect x="1169.1" y="1877" width="1.0" height="15.0" fill="rgb(217,21,27)" rx="2" ry="2" />
<text  x="1172.14" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.1" y="37" width="0.2" height="15.0" fill="rgb(250,218,20)" rx="2" ry="2" />
<text  x="1172.14" y="47.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.06%)</title><rect x="1169.3" y="581" width="0.8" height="15.0" fill="rgb(225,221,41)" rx="2" ry="2" />
<text  x="1172.32" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.6" y="1829" width="0.2" height="15.0" fill="rgb(224,63,22)" rx="2" ry="2" />
<text  x="1171.58" y="1839.5" ></text>
</g>
<g >
<title>std::__merge_sort_with_buffer&lt;__gnu_cxx::__normal_iterator&lt;TWeightedNewsCluster*, std::vector&lt;TWeightedNewsCluster, std::allocator&lt;TWeightedNewsCluster&gt; &gt; &gt;, TWeightedNewsCluster*, __gnu_cxx::__ops::_Iter_comp_iter&lt;Rank (1 samples, 0.02%)</title><rect x="157.9" y="1973" width="0.2" height="15.0" fill="rgb(242,118,28)" rx="2" ry="2" />
<text  x="160.89" y="1983.5" ></text>
</g>
<g >
<title>onmt::CaseModifier::extract_case_type (148 samples, 2.32%)</title><rect x="618.4" y="1893" width="27.3" height="15.0" fill="rgb(238,169,28)" rx="2" ry="2" />
<text  x="621.37" y="1903.5" >o..</text>
</g>
<g >
<title>__do_page_fault (43 samples, 0.67%)</title><rect x="423.6" y="1925" width="7.9" height="15.0" fill="rgb(218,118,26)" rx="2" ry="2" />
<text  x="426.58" y="1935.5" ></text>
</g>
<g >
<title>nlohmann::detail::parser&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::parse (71 samples, 1.11%)</title><rect x="85.5" y="1973" width="13.1" height="15.0" fill="rgb(238,206,31)" rx="2" ry="2" />
<text  x="88.52" y="1983.5" ></text>
</g>
<g >
<title>release_pages (1 samples, 0.02%)</title><rect x="584.8" y="1797" width="0.2" height="15.0" fill="rgb(242,41,37)" rx="2" ry="2" />
<text  x="587.77" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.6" y="1669" width="0.2" height="15.0" fill="rgb(230,41,39)" rx="2" ry="2" />
<text  x="1171.58" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (1 samples, 0.02%)</title><rect x="146.1" y="1717" width="0.2" height="15.0" fill="rgb(218,10,9)" rx="2" ry="2" />
<text  x="149.08" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="197" width="0.1" height="15.0" fill="rgb(205,208,39)" rx="2" ry="2" />
<text  x="1173.06" y="207.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="1541" width="0.3" height="15.0" fill="rgb(226,186,21)" rx="2" ry="2" />
<text  x="82.98" y="1551.5" ></text>
</g>
<g >
<title>__dynamic_cast (65 samples, 1.02%)</title><rect x="894.4" y="2053" width="12.0" height="15.0" fill="rgb(205,208,13)" rx="2" ry="2" />
<text  x="897.40" y="2063.5" ></text>
</g>
<g >
<title>up_read (2 samples, 0.03%)</title><rect x="716.6" y="1813" width="0.4" height="15.0" fill="rgb(244,168,8)" rx="2" ry="2" />
<text  x="719.60" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.0" y="965" width="0.1" height="15.0" fill="rgb(224,177,54)" rx="2" ry="2" />
<text  x="1171.95" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.06%)</title><rect x="1169.3" y="421" width="0.8" height="15.0" fill="rgb(226,64,14)" rx="2" ry="2" />
<text  x="1172.32" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.2" y="213" width="0.2" height="15.0" fill="rgb(232,215,54)" rx="2" ry="2" />
<text  x="1173.24" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="130.0" y="1029" width="0.2" height="15.0" fill="rgb(218,118,49)" rx="2" ry="2" />
<text  x="133.01" y="1039.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (17 samples, 0.27%)</title><rect x="834.2" y="1893" width="3.1" height="15.0" fill="rgb(213,165,36)" rx="2" ry="2" />
<text  x="837.21" y="1903.5" ></text>
</g>
<g >
<title>memcpy@plt (4 samples, 0.06%)</title><rect x="1112.5" y="2053" width="0.7" height="15.0" fill="rgb(230,5,27)" rx="2" ry="2" />
<text  x="1115.45" y="2063.5" ></text>
</g>
<g >
<title>clear_page_erms (11 samples, 0.17%)</title><rect x="419.3" y="1829" width="2.1" height="15.0" fill="rgb(215,70,43)" rx="2" ry="2" />
<text  x="422.34" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="645" width="0.1" height="15.0" fill="rgb(220,62,13)" rx="2" ry="2" />
<text  x="1173.06" y="655.5" ></text>
</g>
<g >
<title>clear_page_erms (8 samples, 0.13%)</title><rect x="714.2" y="1749" width="1.5" height="15.0" fill="rgb(206,227,48)" rx="2" ry="2" />
<text  x="717.20" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="130.0" y="1205" width="0.2" height="15.0" fill="rgb(223,58,48)" rx="2" ry="2" />
<text  x="133.01" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.6" y="1909" width="0.2" height="15.0" fill="rgb(222,174,49)" rx="2" ry="2" />
<text  x="1171.58" y="1919.5" ></text>
</g>
<g >
<title>Eigen::internal::general_matrix_vector_product&lt;long, float, Eigen::internal::const_blas_data_mapper&lt;float, long, 0&gt;, 0, false, float, Eigen::internal::const_blas_data_mapper&lt;float, long, 1&gt;, false, 0&gt;::run (1 samples, 0.02%)</title><rect x="10.0" y="2053" width="0.2" height="15.0" fill="rgb(228,152,41)" rx="2" ry="2" />
<text  x="13.00" y="2063.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (73 samples, 1.14%)</title><rect x="1118.5" y="2053" width="13.5" height="15.0" fill="rgb(214,203,36)" rx="2" ry="2" />
<text  x="1121.55" y="2063.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (2 samples, 0.03%)</title><rect x="192.6" y="1701" width="0.4" height="15.0" fill="rgb(253,23,44)" rx="2" ry="2" />
<text  x="195.60" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="194.6" y="1317" width="0.4" height="15.0" fill="rgb(247,168,49)" rx="2" ry="2" />
<text  x="197.63" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (1 samples, 0.02%)</title><rect x="159.9" y="1605" width="0.2" height="15.0" fill="rgb(237,101,16)" rx="2" ry="2" />
<text  x="162.92" y="1615.5" ></text>
</g>
<g >
<title>handle_mm_fault (2 samples, 0.03%)</title><rect x="85.9" y="1861" width="0.4" height="15.0" fill="rgb(239,116,41)" rx="2" ry="2" />
<text  x="88.88" y="1871.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (2 samples, 0.03%)</title><rect x="421.9" y="1829" width="0.4" height="15.0" fill="rgb(231,124,42)" rx="2" ry="2" />
<text  x="424.92" y="1839.5" ></text>
</g>
<g >
<title>__handle_mm_fault (15 samples, 0.23%)</title><rect x="36.2" y="1973" width="2.8" height="15.0" fill="rgb(226,46,37)" rx="2" ry="2" />
<text  x="39.22" y="1983.5" ></text>
</g>
<g >
<title>clear_page_erms (24 samples, 0.38%)</title><rect x="425.6" y="1845" width="4.4" height="15.0" fill="rgb(233,201,6)" rx="2" ry="2" />
<text  x="428.61" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.0" y="1829" width="0.1" height="15.0" fill="rgb(205,125,3)" rx="2" ry="2" />
<text  x="1171.95" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.06%)</title><rect x="1169.3" y="1125" width="0.8" height="15.0" fill="rgb(221,73,15)" rx="2" ry="2" />
<text  x="1172.32" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.6" y="1029" width="0.2" height="15.0" fill="rgb(219,32,23)" rx="2" ry="2" />
<text  x="1171.58" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.2" y="901" width="0.2" height="15.0" fill="rgb(243,154,21)" rx="2" ry="2" />
<text  x="1173.24" y="911.5" ></text>
</g>
<g >
<title>fasttext::Model::predict (2 samples, 0.03%)</title><rect x="81.3" y="2021" width="0.3" height="15.0" fill="rgb(234,2,38)" rx="2" ry="2" />
<text  x="84.27" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="245" width="0.1" height="15.0" fill="rgb(230,206,45)" rx="2" ry="2" />
<text  x="1173.06" y="255.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="718.1" y="1861" width="0.2" height="15.0" fill="rgb(216,145,2)" rx="2" ry="2" />
<text  x="721.07" y="1871.5" ></text>
</g>
<g >
<title>__libc_read (2 samples, 0.03%)</title><rect x="906.4" y="2053" width="0.4" height="15.0" fill="rgb(214,227,36)" rx="2" ry="2" />
<text  x="909.40" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="130.0" y="1285" width="0.2" height="15.0" fill="rgb(225,223,28)" rx="2" ry="2" />
<text  x="133.01" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (28 samples, 0.44%)</title><rect x="140.9" y="1669" width="5.2" height="15.0" fill="rgb(222,219,30)" rx="2" ry="2" />
<text  x="143.91" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="129.6" y="1125" width="0.2" height="15.0" fill="rgb(235,197,23)" rx="2" ry="2" />
<text  x="132.64" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="933" width="0.1" height="15.0" fill="rgb(206,140,22)" rx="2" ry="2" />
<text  x="1173.06" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.1" y="965" width="0.2" height="15.0" fill="rgb(218,144,38)" rx="2" ry="2" />
<text  x="1172.14" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (21 samples, 0.33%)</title><rect x="137.0" y="1621" width="3.9" height="15.0" fill="rgb(213,20,54)" rx="2" ry="2" />
<text  x="140.03" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (34 samples, 0.53%)</title><rect x="100.3" y="1733" width="6.3" height="15.0" fill="rgb(240,107,42)" rx="2" ry="2" />
<text  x="103.29" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.06%)</title><rect x="129.6" y="1733" width="0.8" height="15.0" fill="rgb(228,44,6)" rx="2" ry="2" />
<text  x="132.64" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="1733" width="0.1" height="15.0" fill="rgb(228,198,10)" rx="2" ry="2" />
<text  x="1173.06" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (1 samples, 0.02%)</title><rect x="156.6" y="1845" width="0.2" height="15.0" fill="rgb(214,114,2)" rx="2" ry="2" />
<text  x="159.60" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (1 samples, 0.02%)</title><rect x="156.6" y="1877" width="0.2" height="15.0" fill="rgb(219,136,40)" rx="2" ry="2" />
<text  x="159.60" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.2" y="725" width="0.2" height="15.0" fill="rgb(209,18,41)" rx="2" ry="2" />
<text  x="1173.24" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="1557" width="0.1" height="15.0" fill="rgb(221,205,33)" rx="2" ry="2" />
<text  x="1173.06" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_try_char (2 samples, 0.03%)</title><rect x="172.8" y="1733" width="0.4" height="15.0" fill="rgb(244,23,41)" rx="2" ry="2" />
<text  x="175.85" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.8" y="1605" width="0.2" height="15.0" fill="rgb(209,208,46)" rx="2" ry="2" />
<text  x="1171.77" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="1381" width="0.3" height="15.0" fill="rgb(252,55,19)" rx="2" ry="2" />
<text  x="82.98" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (190 samples, 2.97%)</title><rect x="159.4" y="1925" width="35.1" height="15.0" fill="rgb(239,153,51)" rx="2" ry="2" />
<text  x="162.37" y="1935.5" >st..</text>
</g>
<g >
<title>nlohmann::detail::input_stream_adapter::get_character (1 samples, 0.02%)</title><rect x="96.6" y="1909" width="0.2" height="15.0" fill="rgb(221,148,12)" rx="2" ry="2" />
<text  x="99.59" y="1919.5" ></text>
</g>
<g >
<title>copy_page_to_iter (1 samples, 0.02%)</title><rect x="83.9" y="1877" width="0.1" height="15.0" fill="rgb(220,187,12)" rx="2" ry="2" />
<text  x="86.85" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (4,526 samples, 70.82%)</title><rect x="45.1" y="2053" width="835.6" height="15.0" fill="rgb(227,71,7)" rx="2" ry="2" />
<text  x="48.08" y="2063.5" >[unknown]</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.6" y="981" width="0.2" height="15.0" fill="rgb(233,157,24)" rx="2" ry="2" />
<text  x="1171.58" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (103 samples, 1.61%)</title><rect x="159.6" y="1781" width="19.0" height="15.0" fill="rgb(214,22,25)" rx="2" ry="2" />
<text  x="162.55" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="130.4" y="1093" width="0.2" height="15.0" fill="rgb(232,166,43)" rx="2" ry="2" />
<text  x="133.38" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="130.4" y="1141" width="0.2" height="15.0" fill="rgb(252,206,48)" rx="2" ry="2" />
<text  x="133.38" y="1151.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt;@plt (1 samples, 0.02%)</title><rect x="584.6" y="1973" width="0.2" height="15.0" fill="rgb(215,148,34)" rx="2" ry="2" />
<text  x="587.58" y="1983.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt;@plt (3 samples, 0.05%)</title><rect x="848.6" y="1893" width="0.6" height="15.0" fill="rgb(225,226,24)" rx="2" ry="2" />
<text  x="851.61" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="194.6" y="1765" width="0.4" height="15.0" fill="rgb(246,25,26)" rx="2" ry="2" />
<text  x="197.63" y="1775.5" ></text>
</g>
<g >
<title>__handle_mm_fault (13 samples, 0.20%)</title><rect x="714.2" y="1797" width="2.4" height="15.0" fill="rgb(217,184,22)" rx="2" ry="2" />
<text  x="717.20" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.8" y="725" width="0.2" height="15.0" fill="rgb(250,73,51)" rx="2" ry="2" />
<text  x="1171.77" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.8" y="85" width="0.2" height="15.0" fill="rgb(253,127,23)" rx="2" ry="2" />
<text  x="1171.77" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.6" y="389" width="0.2" height="15.0" fill="rgb(253,104,19)" rx="2" ry="2" />
<text  x="1171.58" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (114 samples, 1.78%)</title><rect x="1147.5" y="2053" width="21.1" height="15.0" fill="rgb(220,75,20)" rx="2" ry="2" />
<text  x="1150.53" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="1669" width="0.1" height="15.0" fill="rgb(219,109,39)" rx="2" ry="2" />
<text  x="1173.06" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.1" y="1237" width="0.2" height="15.0" fill="rgb(249,203,19)" rx="2" ry="2" />
<text  x="1172.14" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.2" y="1669" width="0.2" height="15.0" fill="rgb(215,226,10)" rx="2" ry="2" />
<text  x="1173.24" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="129.8" y="357" width="0.2" height="15.0" fill="rgb(221,0,11)" rx="2" ry="2" />
<text  x="132.83" y="367.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="83.3" y="2005" width="0.2" height="15.0" fill="rgb(221,37,3)" rx="2" ry="2" />
<text  x="86.30" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.6" y="309" width="0.2" height="15.0" fill="rgb(222,32,37)" rx="2" ry="2" />
<text  x="1171.58" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.8" y="917" width="0.2" height="15.0" fill="rgb(236,128,11)" rx="2" ry="2" />
<text  x="1171.77" y="927.5" ></text>
</g>
<g >
<title>alloc_pages_vma (15 samples, 0.23%)</title><rect x="419.2" y="1861" width="2.7" height="15.0" fill="rgb(245,112,31)" rx="2" ry="2" />
<text  x="422.15" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.09%)</title><rect x="129.5" y="1909" width="1.1" height="15.0" fill="rgb(247,183,20)" rx="2" ry="2" />
<text  x="132.46" y="1919.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (3 samples, 0.05%)</title><rect x="171.7" y="1621" width="0.6" height="15.0" fill="rgb(225,139,49)" rx="2" ry="2" />
<text  x="174.74" y="1631.5" ></text>
</g>
<g >
<title>write (1 samples, 0.02%)</title><rect x="880.6" y="2037" width="0.1" height="15.0" fill="rgb(243,40,41)" rx="2" ry="2" />
<text  x="883.55" y="2047.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="156.8" y="1877" width="0.2" height="15.0" fill="rgb(252,40,37)" rx="2" ry="2" />
<text  x="159.78" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.2" y="1749" width="0.2" height="15.0" fill="rgb(217,85,50)" rx="2" ry="2" />
<text  x="1173.24" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.6" y="853" width="0.2" height="15.0" fill="rgb(236,204,43)" rx="2" ry="2" />
<text  x="1171.58" y="863.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::clear (1 samples, 0.02%)</title><rect x="616.7" y="1893" width="0.2" height="15.0" fill="rgb(235,42,0)" rx="2" ry="2" />
<text  x="619.71" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.08%)</title><rect x="1169.1" y="1765" width="1.0" height="15.0" fill="rgb(254,128,17)" rx="2" ry="2" />
<text  x="1172.14" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.6" y="1189" width="0.2" height="15.0" fill="rgb(226,77,48)" rx="2" ry="2" />
<text  x="1171.58" y="1199.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::computeSubwords (7 samples, 0.11%)</title><rect x="853.0" y="2037" width="1.3" height="15.0" fill="rgb(242,181,33)" rx="2" ry="2" />
<text  x="856.04" y="2047.5" ></text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (2 samples, 0.03%)</title><rect x="421.9" y="1861" width="0.4" height="15.0" fill="rgb(249,159,11)" rx="2" ry="2" />
<text  x="424.92" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (11 samples, 0.17%)</title><rect x="148.1" y="1653" width="2.0" height="15.0" fill="rgb(245,176,6)" rx="2" ry="2" />
<text  x="151.11" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="129.6" y="613" width="0.2" height="15.0" fill="rgb(225,149,53)" rx="2" ry="2" />
<text  x="132.64" y="623.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="206.6" y="1909" width="0.2" height="15.0" fill="rgb(206,4,8)" rx="2" ry="2" />
<text  x="209.64" y="1919.5" ></text>
</g>
<g >
<title>free@plt (1 samples, 0.02%)</title><rect x="161.0" y="1589" width="0.2" height="15.0" fill="rgb(237,190,26)" rx="2" ry="2" />
<text  x="164.03" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.09%)</title><rect x="1169.0" y="1989" width="1.1" height="15.0" fill="rgb(233,228,28)" rx="2" ry="2" />
<text  x="1171.95" y="1999.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="880.6" y="2021" width="0.1" height="15.0" fill="rgb(252,165,20)" rx="2" ry="2" />
<text  x="883.55" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="757" width="0.3" height="15.0" fill="rgb(253,150,26)" rx="2" ry="2" />
<text  x="82.98" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="1205" width="0.1" height="15.0" fill="rgb(211,185,49)" rx="2" ry="2" />
<text  x="1173.06" y="1215.5" ></text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (3 samples, 0.05%)</title><rect x="430.2" y="1877" width="0.6" height="15.0" fill="rgb(230,6,15)" rx="2" ry="2" />
<text  x="433.23" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.1" y="613" width="0.2" height="15.0" fill="rgb(234,9,31)" rx="2" ry="2" />
<text  x="1172.14" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.09%)</title><rect x="1169.0" y="1957" width="1.1" height="15.0" fill="rgb(230,88,9)" rx="2" ry="2" />
<text  x="1171.95" y="1967.5" ></text>
</g>
<g >
<title>do_syscall_64 (3 samples, 0.05%)</title><rect x="83.5" y="2005" width="0.5" height="15.0" fill="rgb(208,174,13)" rx="2" ry="2" />
<text  x="86.48" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="129.6" y="1349" width="0.2" height="15.0" fill="rgb(239,219,20)" rx="2" ry="2" />
<text  x="132.64" y="1359.5" ></text>
</g>
<g >
<title>cfree (1 samples, 0.02%)</title><rect x="143.5" y="1621" width="0.2" height="15.0" fill="rgb(238,21,45)" rx="2" ry="2" />
<text  x="146.49" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="129.6" y="661" width="0.2" height="15.0" fill="rgb(233,54,14)" rx="2" ry="2" />
<text  x="132.64" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.2" y="1925" width="0.2" height="15.0" fill="rgb(236,221,7)" rx="2" ry="2" />
<text  x="1173.24" y="1935.5" ></text>
</g>
<g >
<title>std::istream::get (1 samples, 0.02%)</title><rect x="1188.2" y="2053" width="0.1" height="15.0" fill="rgb(207,188,47)" rx="2" ry="2" />
<text  x="1191.15" y="2063.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.25] (2 samples, 0.03%)</title><rect x="878.3" y="2005" width="0.4" height="15.0" fill="rgb(246,223,51)" rx="2" ry="2" />
<text  x="881.34" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.8" y="437" width="0.2" height="15.0" fill="rgb(239,28,14)" rx="2" ry="2" />
<text  x="1171.77" y="447.5" ></text>
</g>
<g >
<title>clear_page_erms (5 samples, 0.08%)</title><rect x="36.4" y="1925" width="0.9" height="15.0" fill="rgb(254,32,14)" rx="2" ry="2" />
<text  x="39.40" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.6" y="1013" width="0.2" height="15.0" fill="rgb(236,129,22)" rx="2" ry="2" />
<text  x="1171.58" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.06%)</title><rect x="129.6" y="1525" width="0.8" height="15.0" fill="rgb(210,85,13)" rx="2" ry="2" />
<text  x="132.64" y="1535.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::at (2 samples, 0.03%)</title><rect x="84.0" y="1957" width="0.4" height="15.0" fill="rgb(248,154,3)" rx="2" ry="2" />
<text  x="87.04" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="1941" width="0.1" height="15.0" fill="rgb(229,216,46)" rx="2" ry="2" />
<text  x="1173.06" y="1951.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (3 samples, 0.05%)</title><rect x="79.4" y="2021" width="0.6" height="15.0" fill="rgb(214,217,4)" rx="2" ry="2" />
<text  x="82.42" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.06%)</title><rect x="1169.3" y="1061" width="0.8" height="15.0" fill="rgb(223,181,12)" rx="2" ry="2" />
<text  x="1172.32" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.06%)</title><rect x="1169.3" y="213" width="0.8" height="15.0" fill="rgb(226,67,13)" rx="2" ry="2" />
<text  x="1172.32" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (32 samples, 0.50%)</title><rect x="106.6" y="1717" width="5.9" height="15.0" fill="rgb(251,176,20)" rx="2" ry="2" />
<text  x="109.56" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="357" width="0.3" height="15.0" fill="rgb(242,187,4)" rx="2" ry="2" />
<text  x="82.98" y="367.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="1253" width="0.3" height="15.0" fill="rgb(224,148,33)" rx="2" ry="2" />
<text  x="82.98" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="194.6" y="1445" width="0.4" height="15.0" fill="rgb(252,67,29)" rx="2" ry="2" />
<text  x="197.63" y="1455.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="314.8" y="1941" width="0.2" height="15.0" fill="rgb(220,156,47)" rx="2" ry="2" />
<text  x="317.83" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="469" width="0.3" height="15.0" fill="rgb(217,2,49)" rx="2" ry="2" />
<text  x="82.98" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (27 samples, 0.42%)</title><rect x="118.2" y="1781" width="5.0" height="15.0" fill="rgb(214,72,8)" rx="2" ry="2" />
<text  x="121.20" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="157.2" y="1333" width="0.1" height="15.0" fill="rgb(214,138,52)" rx="2" ry="2" />
<text  x="160.15" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="129.8" y="1189" width="0.2" height="15.0" fill="rgb(248,195,33)" rx="2" ry="2" />
<text  x="132.83" y="1199.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (4 samples, 0.06%)</title><rect x="145.3" y="1621" width="0.8" height="15.0" fill="rgb(224,211,27)" rx="2" ry="2" />
<text  x="148.34" y="1631.5" ></text>
</g>
<g >
<title>Eigen::internal::product_evaluator&lt;Eigen::Product&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0&gt;, 7, Eigen::DenseShape, Eigen::DenseShape, float, float&gt;::product_evaluator (4 samples, 0.06%)</title><rect x="205.5" y="1973" width="0.8" height="15.0" fill="rgb(245,226,41)" rx="2" ry="2" />
<text  x="208.53" y="1983.5" ></text>
</g>
<g >
<title>vfs_write (1 samples, 0.02%)</title><rect x="880.6" y="1957" width="0.1" height="15.0" fill="rgb(217,177,53)" rx="2" ry="2" />
<text  x="883.55" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (29 samples, 0.45%)</title><rect x="100.8" y="1637" width="5.4" height="15.0" fill="rgb(254,43,23)" rx="2" ry="2" />
<text  x="103.84" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.8" y="1061" width="0.2" height="15.0" fill="rgb(229,45,36)" rx="2" ry="2" />
<text  x="1171.77" y="1071.5" ></text>
</g>
<g >
<title>handle_mm_fault (3 samples, 0.05%)</title><rect x="78.9" y="1973" width="0.5" height="15.0" fill="rgb(215,168,18)" rx="2" ry="2" />
<text  x="81.87" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.1" y="245" width="0.2" height="15.0" fill="rgb(244,58,52)" rx="2" ry="2" />
<text  x="1172.14" y="255.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="206.6" y="1877" width="0.2" height="15.0" fill="rgb(211,172,48)" rx="2" ry="2" />
<text  x="209.64" y="1887.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.02%)</title><rect x="81.1" y="2021" width="0.2" height="15.0" fill="rgb(209,70,2)" rx="2" ry="2" />
<text  x="84.08" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="129.8" y="1253" width="0.2" height="15.0" fill="rgb(205,141,53)" rx="2" ry="2" />
<text  x="132.83" y="1263.5" ></text>
</g>
<g >
<title>Sigmoid (1 samples, 0.02%)</title><rect x="158.8" y="1989" width="0.2" height="15.0" fill="rgb(218,169,17)" rx="2" ry="2" />
<text  x="161.82" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="133" width="0.1" height="15.0" fill="rgb(251,74,43)" rx="2" ry="2" />
<text  x="1173.06" y="143.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (4 samples, 0.06%)</title><rect x="80.3" y="2005" width="0.8" height="15.0" fill="rgb(241,48,8)" rx="2" ry="2" />
<text  x="83.35" y="2015.5" ></text>
</g>
<g >
<title>page_fault (2 samples, 0.03%)</title><rect x="856.7" y="2021" width="0.4" height="15.0" fill="rgb(228,101,9)" rx="2" ry="2" />
<text  x="859.73" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.6" y="1413" width="0.2" height="15.0" fill="rgb(210,211,6)" rx="2" ry="2" />
<text  x="1171.58" y="1423.5" ></text>
</g>
<g >
<title>nlohmann::detail::input_stream_adapter::get_character (3 samples, 0.05%)</title><rect x="97.9" y="1893" width="0.5" height="15.0" fill="rgb(229,106,34)" rx="2" ry="2" />
<text  x="100.89" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.6" y="1989" width="0.2" height="15.0" fill="rgb(232,155,20)" rx="2" ry="2" />
<text  x="1171.58" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="437" width="0.1" height="15.0" fill="rgb(251,213,37)" rx="2" ry="2" />
<text  x="1173.06" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.06%)</title><rect x="1169.3" y="1365" width="0.8" height="15.0" fill="rgb(237,162,30)" rx="2" ry="2" />
<text  x="1172.32" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.0" y="1605" width="0.1" height="15.0" fill="rgb(222,154,36)" rx="2" ry="2" />
<text  x="1171.95" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="1893" width="0.3" height="15.0" fill="rgb(239,85,23)" rx="2" ry="2" />
<text  x="82.98" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (158 samples, 2.47%)</title><rect x="100.3" y="1877" width="29.2" height="15.0" fill="rgb(241,55,20)" rx="2" ry="2" />
<text  x="103.29" y="1887.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="194.8" y="1189" width="0.2" height="15.0" fill="rgb(207,104,35)" rx="2" ry="2" />
<text  x="197.82" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (14 samples, 0.22%)</title><rect x="102.9" y="1589" width="2.6" height="15.0" fill="rgb(223,127,33)" rx="2" ry="2" />
<text  x="105.87" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.6" y="1237" width="0.2" height="15.0" fill="rgb(250,61,35)" rx="2" ry="2" />
<text  x="1171.58" y="1247.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (13 samples, 0.20%)</title><rect x="875.9" y="2005" width="2.4" height="15.0" fill="rgb(209,138,54)" rx="2" ry="2" />
<text  x="878.94" y="2015.5" ></text>
</g>
<g >
<title>mem_cgroup_throttle_swaprate (1 samples, 0.02%)</title><rect x="37.9" y="1957" width="0.2" height="15.0" fill="rgb(207,219,36)" rx="2" ry="2" />
<text  x="40.88" y="1967.5" ></text>
</g>
<g >
<title>TSlinkClustering::ClusterBatch (1,345 samples, 21.05%)</title><rect x="336.4" y="1989" width="248.4" height="15.0" fill="rgb(218,155,5)" rx="2" ry="2" />
<text  x="339.43" y="1999.5" >TSlinkClustering::ClusterBatch</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.8" y="133" width="0.2" height="15.0" fill="rgb(246,167,10)" rx="2" ry="2" />
<text  x="1171.77" y="143.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="718.1" y="1845" width="0.2" height="15.0" fill="rgb(210,92,42)" rx="2" ry="2" />
<text  x="721.07" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.2" y="133" width="0.2" height="15.0" fill="rgb(240,147,30)" rx="2" ry="2" />
<text  x="1173.24" y="143.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="129.6" y="773" width="0.2" height="15.0" fill="rgb(243,148,50)" rx="2" ry="2" />
<text  x="132.64" y="783.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::basic_json (2 samples, 0.03%)</title><rect x="586.2" y="2005" width="0.4" height="15.0" fill="rgb(220,156,49)" rx="2" ry="2" />
<text  x="589.24" y="2015.5" ></text>
</g>
<g >
<title>operator new (11 samples, 0.17%)</title><rect x="1115.2" y="2053" width="2.1" height="15.0" fill="rgb(251,101,48)" rx="2" ry="2" />
<text  x="1118.22" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.06%)</title><rect x="129.6" y="1717" width="0.8" height="15.0" fill="rgb(238,223,22)" rx="2" ry="2" />
<text  x="132.64" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (28 samples, 0.44%)</title><rect x="140.9" y="1685" width="5.2" height="15.0" fill="rgb(227,220,43)" rx="2" ry="2" />
<text  x="143.91" y="1695.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::basic_json (1 samples, 0.02%)</title><rect x="588.5" y="1765" width="0.1" height="15.0" fill="rgb(237,227,17)" rx="2" ry="2" />
<text  x="591.46" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (32 samples, 0.50%)</title><rect x="123.4" y="1797" width="5.9" height="15.0" fill="rgb(238,214,40)" rx="2" ry="2" />
<text  x="126.37" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.6" y="53" width="0.2" height="15.0" fill="rgb(217,128,39)" rx="2" ry="2" />
<text  x="1171.58" y="63.5" ></text>
</g>
<g >
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="851.7" y="1845" width="0.2" height="15.0" fill="rgb(246,194,19)" rx="2" ry="2" />
<text  x="854.75" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.6" y="1205" width="0.2" height="15.0" fill="rgb(253,127,37)" rx="2" ry="2" />
<text  x="1171.58" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.2" y="949" width="0.2" height="15.0" fill="rgb(205,85,8)" rx="2" ry="2" />
<text  x="1173.24" y="959.5" ></text>
</g>
<g >
<title>__munmap (1 samples, 0.02%)</title><rect x="585.7" y="2005" width="0.2" height="15.0" fill="rgb(221,168,45)" rx="2" ry="2" />
<text  x="588.69" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="129.6" y="405" width="0.2" height="15.0" fill="rgb(221,19,37)" rx="2" ry="2" />
<text  x="132.64" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.0" y="1317" width="0.1" height="15.0" fill="rgb(215,60,34)" rx="2" ry="2" />
<text  x="1171.95" y="1327.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.03%)</title><rect x="127.2" y="1685" width="0.4" height="15.0" fill="rgb(224,91,17)" rx="2" ry="2" />
<text  x="130.24" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.8" y="597" width="0.2" height="15.0" fill="rgb(229,121,17)" rx="2" ry="2" />
<text  x="1171.77" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.2" y="197" width="0.2" height="15.0" fill="rgb(210,68,39)" rx="2" ry="2" />
<text  x="1173.24" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.6" y="1621" width="0.2" height="15.0" fill="rgb(219,227,13)" rx="2" ry="2" />
<text  x="1171.58" y="1631.5" ></text>
</g>
<g >
<title>std::__move_merge&lt;TDocument*, __gnu_cxx::__normal_iterator&lt;TDocument*, std::vector&lt;TDocument, std::allocator&lt;TDocument&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;main::$_0&gt; &gt; (1 samples, 0.02%)</title><rect x="587.7" y="1973" width="0.2" height="15.0" fill="rgb(245,44,45)" rx="2" ry="2" />
<text  x="590.72" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.2" y="821" width="0.2" height="15.0" fill="rgb(206,159,42)" rx="2" ry="2" />
<text  x="1173.24" y="831.5" ></text>
</g>
<g >
<title>malloc (2 samples, 0.03%)</title><rect x="147.6" y="1653" width="0.3" height="15.0" fill="rgb(226,88,37)" rx="2" ry="2" />
<text  x="150.55" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.1" y="1189" width="0.2" height="15.0" fill="rgb(237,146,5)" rx="2" ry="2" />
<text  x="1172.14" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="129.6" y="629" width="0.2" height="15.0" fill="rgb(216,90,35)" rx="2" ry="2" />
<text  x="132.64" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.8" y="1525" width="0.2" height="15.0" fill="rgb(251,125,31)" rx="2" ry="2" />
<text  x="1171.77" y="1535.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::append (5 samples, 0.08%)</title><rect x="615.6" y="1893" width="0.9" height="15.0" fill="rgb(223,207,45)" rx="2" ry="2" />
<text  x="618.60" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="1061" width="0.1" height="15.0" fill="rgb(233,111,6)" rx="2" ry="2" />
<text  x="1173.06" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.8" y="277" width="0.2" height="15.0" fill="rgb(221,134,28)" rx="2" ry="2" />
<text  x="1171.77" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="194.6" y="1333" width="0.4" height="15.0" fill="rgb(218,152,3)" rx="2" ry="2" />
<text  x="197.63" y="1343.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.02%)</title><rect x="137.0" y="1605" width="0.2" height="15.0" fill="rgb(244,32,26)" rx="2" ry="2" />
<text  x="140.03" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="157.2" y="1477" width="0.1" height="15.0" fill="rgb(207,215,3)" rx="2" ry="2" />
<text  x="160.15" y="1487.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="1013" width="0.3" height="15.0" fill="rgb(218,167,32)" rx="2" ry="2" />
<text  x="82.98" y="1023.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.03%)</title><rect x="116.2" y="1621" width="0.3" height="15.0" fill="rgb(251,54,1)" rx="2" ry="2" />
<text  x="119.16" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="1637" width="0.1" height="15.0" fill="rgb(251,76,35)" rx="2" ry="2" />
<text  x="1173.06" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.2" y="1589" width="0.2" height="15.0" fill="rgb(246,14,47)" rx="2" ry="2" />
<text  x="1173.24" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (32 samples, 0.50%)</title><rect x="123.4" y="1765" width="5.9" height="15.0" fill="rgb(250,199,6)" rx="2" ry="2" />
<text  x="126.37" y="1775.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1131.8" y="2005" width="0.2" height="15.0" fill="rgb(252,18,49)" rx="2" ry="2" />
<text  x="1134.84" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.8" y="549" width="0.2" height="15.0" fill="rgb(208,36,52)" rx="2" ry="2" />
<text  x="1171.77" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.08%)</title><rect x="1169.1" y="1861" width="1.0" height="15.0" fill="rgb(236,96,46)" rx="2" ry="2" />
<text  x="1172.14" y="1871.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="748.4" y="1781" width="0.1" height="15.0" fill="rgb(252,23,5)" rx="2" ry="2" />
<text  x="751.35" y="1791.5" ></text>
</g>
<g >
<title>Rank (313 samples, 4.90%)</title><rect x="100.3" y="2005" width="57.8" height="15.0" fill="rgb(205,209,52)" rx="2" ry="2" />
<text  x="103.29" y="2015.5" >Rank</text>
</g>
<g >
<title>[libc-2.27.so] (40 samples, 0.63%)</title><rect x="1170.4" y="2037" width="7.4" height="15.0" fill="rgb(238,201,13)" rx="2" ry="2" />
<text  x="1173.43" y="2047.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (1 samples, 0.02%)</title><rect x="136.8" y="1573" width="0.2" height="15.0" fill="rgb(229,75,44)" rx="2" ry="2" />
<text  x="139.84" y="1583.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::create&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt; const&amp;&gt; (2 samples, 0.03%)</title><rect x="588.3" y="1861" width="0.3" height="15.0" fill="rgb(252,201,3)" rx="2" ry="2" />
<text  x="591.28" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="149" width="0.3" height="15.0" fill="rgb(209,47,12)" rx="2" ry="2" />
<text  x="82.98" y="159.5" ></text>
</g>
<g >
<title>__x64_sys_futex (8 samples, 0.13%)</title><rect x="43.2" y="1973" width="1.5" height="15.0" fill="rgb(208,222,28)" rx="2" ry="2" />
<text  x="46.23" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.6" y="1557" width="0.2" height="15.0" fill="rgb(220,98,50)" rx="2" ry="2" />
<text  x="1171.58" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.1" y="853" width="0.2" height="15.0" fill="rgb(218,206,14)" rx="2" ry="2" />
<text  x="1172.14" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="129.8" y="485" width="0.2" height="15.0" fill="rgb(219,46,36)" rx="2" ry="2" />
<text  x="132.83" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.8" y="1877" width="0.2" height="15.0" fill="rgb(209,25,21)" rx="2" ry="2" />
<text  x="1171.77" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (25 samples, 0.39%)</title><rect x="159.9" y="1669" width="4.6" height="15.0" fill="rgb(226,60,15)" rx="2" ry="2" />
<text  x="162.92" y="1679.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (3 samples, 0.05%)</title><rect x="996.5" y="2005" width="0.6" height="15.0" fill="rgb(237,63,18)" rx="2" ry="2" />
<text  x="999.50" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (30 samples, 0.47%)</title><rect x="150.5" y="1797" width="5.5" height="15.0" fill="rgb(227,155,6)" rx="2" ry="2" />
<text  x="153.51" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="1445" width="0.1" height="15.0" fill="rgb(216,22,44)" rx="2" ry="2" />
<text  x="1173.06" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="129.6" y="837" width="0.2" height="15.0" fill="rgb(226,185,10)" rx="2" ry="2" />
<text  x="132.64" y="847.5" ></text>
</g>
<g >
<title>cfree (1 samples, 0.02%)</title><rect x="160.8" y="1589" width="0.2" height="15.0" fill="rgb(252,85,49)" rx="2" ry="2" />
<text  x="163.85" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.6" y="85" width="0.2" height="15.0" fill="rgb(249,217,35)" rx="2" ry="2" />
<text  x="1171.58" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (56 samples, 0.88%)</title><rect x="130.6" y="1749" width="10.3" height="15.0" fill="rgb(252,49,27)" rx="2" ry="2" />
<text  x="133.57" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.08%)</title><rect x="129.6" y="1861" width="1.0" height="15.0" fill="rgb(237,197,54)" rx="2" ry="2" />
<text  x="132.64" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="1509" width="0.3" height="15.0" fill="rgb(220,92,26)" rx="2" ry="2" />
<text  x="82.98" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.1" y="1093" width="0.2" height="15.0" fill="rgb(245,161,45)" rx="2" ry="2" />
<text  x="1172.14" y="1103.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (2 samples, 0.03%)</title><rect x="85.9" y="1813" width="0.4" height="15.0" fill="rgb(221,87,3)" rx="2" ry="2" />
<text  x="88.88" y="1823.5" ></text>
</g>
<g >
<title>_raw_spin_lock (3 samples, 0.05%)</title><rect x="425.1" y="1877" width="0.5" height="15.0" fill="rgb(242,71,23)" rx="2" ry="2" />
<text  x="428.06" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="130.4" y="1205" width="0.2" height="15.0" fill="rgb(214,88,51)" rx="2" ry="2" />
<text  x="133.38" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="129.6" y="469" width="0.2" height="15.0" fill="rgb(230,129,37)" rx="2" ry="2" />
<text  x="132.64" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="130.4" y="1253" width="0.2" height="15.0" fill="rgb(219,174,39)" rx="2" ry="2" />
<text  x="133.38" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="917" width="0.1" height="15.0" fill="rgb(239,194,36)" rx="2" ry="2" />
<text  x="1173.06" y="927.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (1 samples, 0.02%)</title><rect x="163.4" y="1573" width="0.2" height="15.0" fill="rgb(205,152,28)" rx="2" ry="2" />
<text  x="166.43" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.1" y="165" width="0.2" height="15.0" fill="rgb(210,163,43)" rx="2" ry="2" />
<text  x="1172.14" y="175.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (48 samples, 0.75%)</title><rect x="1177.8" y="2037" width="8.9" height="15.0" fill="rgb(235,217,27)" rx="2" ry="2" />
<text  x="1180.81" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="129.6" y="101" width="0.2" height="15.0" fill="rgb(233,21,16)" rx="2" ry="2" />
<text  x="132.64" y="111.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (28 samples, 0.44%)</title><rect x="159.6" y="1733" width="5.1" height="15.0" fill="rgb(206,72,16)" rx="2" ry="2" />
<text  x="162.55" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="129.6" y="1333" width="0.2" height="15.0" fill="rgb(231,17,13)" rx="2" ry="2" />
<text  x="132.64" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="129.8" y="1093" width="0.2" height="15.0" fill="rgb(209,214,12)" rx="2" ry="2" />
<text  x="132.83" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.6" y="229" width="0.2" height="15.0" fill="rgb(249,91,9)" rx="2" ry="2" />
<text  x="1171.58" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (2 samples, 0.03%)</title><rect x="194.1" y="1893" width="0.4" height="15.0" fill="rgb(234,40,1)" rx="2" ry="2" />
<text  x="197.08" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="129.6" y="181" width="0.2" height="15.0" fill="rgb(235,171,15)" rx="2" ry="2" />
<text  x="132.64" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.06%)</title><rect x="1169.3" y="149" width="0.8" height="15.0" fill="rgb(224,147,41)" rx="2" ry="2" />
<text  x="1172.32" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (1 samples, 0.02%)</title><rect x="106.4" y="1717" width="0.2" height="15.0" fill="rgb(236,18,9)" rx="2" ry="2" />
<text  x="109.38" y="1727.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (3 samples, 0.05%)</title><rect x="195.2" y="1973" width="0.5" height="15.0" fill="rgb(219,147,7)" rx="2" ry="2" />
<text  x="198.19" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.06%)</title><rect x="1169.3" y="485" width="0.8" height="15.0" fill="rgb(222,41,28)" rx="2" ry="2" />
<text  x="1172.32" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="129.6" y="917" width="0.2" height="15.0" fill="rgb(218,161,47)" rx="2" ry="2" />
<text  x="132.64" y="927.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="533" width="0.3" height="15.0" fill="rgb(216,211,44)" rx="2" ry="2" />
<text  x="82.98" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="129.6" y="1189" width="0.2" height="15.0" fill="rgb(228,53,10)" rx="2" ry="2" />
<text  x="132.64" y="1199.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::json_value::destroy (1 samples, 0.02%)</title><rect x="586.4" y="1973" width="0.2" height="15.0" fill="rgb(249,53,37)" rx="2" ry="2" />
<text  x="589.43" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="130.4" y="949" width="0.2" height="15.0" fill="rgb(244,114,50)" rx="2" ry="2" />
<text  x="133.38" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (142 samples, 2.22%)</title><rect x="130.6" y="1909" width="26.2" height="15.0" fill="rgb(249,22,47)" rx="2" ry="2" />
<text  x="133.57" y="1919.5" >s..</text>
</g>
<g >
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="833.8" y="1845" width="0.2" height="15.0" fill="rgb(214,29,16)" rx="2" ry="2" />
<text  x="836.84" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="645" width="0.3" height="15.0" fill="rgb(220,84,27)" rx="2" ry="2" />
<text  x="82.98" y="655.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (3 samples, 0.05%)</title><rect x="996.5" y="2021" width="0.6" height="15.0" fill="rgb(228,205,51)" rx="2" ry="2" />
<text  x="999.50" y="2031.5" ></text>
</g>
<g >
<title>do_page_fault (29 samples, 0.45%)</title><rect x="418.2" y="1925" width="5.4" height="15.0" fill="rgb(235,204,26)" rx="2" ry="2" />
<text  x="421.23" y="1935.5" ></text>
</g>
<g >
<title>syscall (3 samples, 0.05%)</title><rect x="99.7" y="1973" width="0.6" height="15.0" fill="rgb(242,183,1)" rx="2" ry="2" />
<text  x="102.73" y="1983.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="1095.7" y="1973" width="0.1" height="15.0" fill="rgb(242,184,23)" rx="2" ry="2" />
<text  x="1098.65" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.2" y="1845" width="0.2" height="15.0" fill="rgb(248,143,15)" rx="2" ry="2" />
<text  x="1173.24" y="1855.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::do_tolower (1 samples, 0.02%)</title><rect x="135.9" y="1573" width="0.2" height="15.0" fill="rgb(210,100,10)" rx="2" ry="2" />
<text  x="138.92" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (12 samples, 0.19%)</title><rect x="873.7" y="1989" width="2.2" height="15.0" fill="rgb(248,64,9)" rx="2" ry="2" />
<text  x="876.72" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="157.2" y="1413" width="0.1" height="15.0" fill="rgb(235,6,44)" rx="2" ry="2" />
<text  x="160.15" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (43 samples, 0.67%)</title><rect x="164.9" y="1685" width="7.9" height="15.0" fill="rgb(219,52,46)" rx="2" ry="2" />
<text  x="167.91" y="1695.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::readWord (39 samples, 0.61%)</title><rect x="1045.8" y="2053" width="7.2" height="15.0" fill="rgb(207,28,44)" rx="2" ry="2" />
<text  x="1048.80" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="130.4" y="1589" width="0.2" height="15.0" fill="rgb(217,7,20)" rx="2" ry="2" />
<text  x="133.38" y="1599.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*&gt; (1 samples, 0.02%)</title><rect x="159.7" y="1605" width="0.2" height="15.0" fill="rgb(237,216,6)" rx="2" ry="2" />
<text  x="162.74" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.1" y="789" width="0.2" height="15.0" fill="rgb(240,18,37)" rx="2" ry="2" />
<text  x="1172.14" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.6" y="149" width="0.2" height="15.0" fill="rgb(247,189,17)" rx="2" ry="2" />
<text  x="1171.58" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.0" y="1093" width="0.1" height="15.0" fill="rgb(240,47,49)" rx="2" ry="2" />
<text  x="1171.95" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (29 samples, 0.45%)</title><rect x="173.2" y="1717" width="5.4" height="15.0" fill="rgb(252,171,21)" rx="2" ry="2" />
<text  x="176.22" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="1621" width="0.1" height="15.0" fill="rgb(235,72,49)" rx="2" ry="2" />
<text  x="1173.06" y="1631.5" ></text>
</g>
<g >
<title>fasttext::Vector::mul (17 samples, 0.27%)</title><rect x="322.8" y="1989" width="3.1" height="15.0" fill="rgb(243,209,28)" rx="2" ry="2" />
<text  x="325.77" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (1 samples, 0.02%)</title><rect x="178.4" y="1653" width="0.2" height="15.0" fill="rgb(228,93,23)" rx="2" ry="2" />
<text  x="181.39" y="1663.5" ></text>
</g>
<g >
<title>std::istream::sentry::sentry (2 samples, 0.03%)</title><rect x="333.3" y="1989" width="0.4" height="15.0" fill="rgb(210,229,30)" rx="2" ry="2" />
<text  x="336.30" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.06%)</title><rect x="1169.3" y="773" width="0.8" height="15.0" fill="rgb(238,119,17)" rx="2" ry="2" />
<text  x="1172.32" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.8" y="1349" width="0.2" height="15.0" fill="rgb(252,194,35)" rx="2" ry="2" />
<text  x="1171.77" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="157.2" y="1541" width="0.1" height="15.0" fill="rgb(254,131,48)" rx="2" ry="2" />
<text  x="160.15" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="130.4" y="709" width="0.2" height="15.0" fill="rgb(241,147,4)" rx="2" ry="2" />
<text  x="133.38" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="129.6" y="677" width="0.2" height="15.0" fill="rgb(209,201,27)" rx="2" ry="2" />
<text  x="132.64" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (3 samples, 0.05%)</title><rect x="122.1" y="1653" width="0.5" height="15.0" fill="rgb(237,228,39)" rx="2" ry="2" />
<text  x="125.07" y="1663.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="132.2" y="1573" width="0.2" height="15.0" fill="rgb(240,169,24)" rx="2" ry="2" />
<text  x="135.23" y="1583.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (9 samples, 0.14%)</title><rect x="1134.2" y="2053" width="1.7" height="15.0" fill="rgb(211,174,11)" rx="2" ry="2" />
<text  x="1137.24" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (187 samples, 2.93%)</title><rect x="159.6" y="1893" width="34.5" height="15.0" fill="rgb(239,16,43)" rx="2" ry="2" />
<text  x="162.55" y="1903.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="469" width="0.1" height="15.0" fill="rgb(237,43,9)" rx="2" ry="2" />
<text  x="1173.06" y="479.5" ></text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.02%)</title><rect x="748.4" y="1765" width="0.1" height="15.0" fill="rgb(221,199,18)" rx="2" ry="2" />
<text  x="751.35" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.06%)</title><rect x="1169.3" y="309" width="0.8" height="15.0" fill="rgb(244,132,53)" rx="2" ry="2" />
<text  x="1172.32" y="319.5" ></text>
</g>
<g >
<title>__dynamic_cast (14 samples, 0.22%)</title><rect x="140.9" y="1621" width="2.6" height="15.0" fill="rgb(246,34,48)" rx="2" ry="2" />
<text  x="143.91" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.0" y="37" width="0.1" height="15.0" fill="rgb(240,162,33)" rx="2" ry="2" />
<text  x="1171.95" y="47.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.06%)</title><rect x="1169.3" y="293" width="0.8" height="15.0" fill="rgb(235,215,17)" rx="2" ry="2" />
<text  x="1172.32" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="129.6" y="1221" width="0.2" height="15.0" fill="rgb(219,83,20)" rx="2" ry="2" />
<text  x="132.64" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="181" width="0.1" height="15.0" fill="rgb(229,102,40)" rx="2" ry="2" />
<text  x="1173.06" y="191.5" ></text>
</g>
<g >
<title>free@plt (2 samples, 0.03%)</title><rect x="107.7" y="1621" width="0.3" height="15.0" fill="rgb(248,113,17)" rx="2" ry="2" />
<text  x="110.67" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="157.2" y="1445" width="0.1" height="15.0" fill="rgb(238,147,43)" rx="2" ry="2" />
<text  x="160.15" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="129.6" y="533" width="0.2" height="15.0" fill="rgb(230,75,24)" rx="2" ry="2" />
<text  x="132.64" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="129.8" y="869" width="0.2" height="15.0" fill="rgb(236,220,9)" rx="2" ry="2" />
<text  x="132.83" y="879.5" ></text>
</g>
<g >
<title>kernel_poison_pages (1 samples, 0.02%)</title><rect x="715.7" y="1749" width="0.2" height="15.0" fill="rgb(240,56,42)" rx="2" ry="2" />
<text  x="718.67" y="1759.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="206.6" y="1925" width="0.2" height="15.0" fill="rgb(242,227,24)" rx="2" ry="2" />
<text  x="209.64" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="878.9" y="2021" width="0.2" height="15.0" fill="rgb(229,144,54)" rx="2" ry="2" />
<text  x="881.89" y="2031.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (26 samples, 0.41%)</title><rect x="74.6" y="2037" width="4.8" height="15.0" fill="rgb(254,122,33)" rx="2" ry="2" />
<text  x="77.62" y="2047.5" ></text>
</g>
<g >
<title>ComputeClusterWeight (311 samples, 4.87%)</title><rect x="100.3" y="1989" width="57.4" height="15.0" fill="rgb(217,9,17)" rx="2" ry="2" />
<text  x="103.29" y="1999.5" >Comput..</text>
</g>
<g >
<title>release_pages (2 samples, 0.03%)</title><rect x="443.3" y="1781" width="0.4" height="15.0" fill="rgb(235,167,9)" rx="2" ry="2" />
<text  x="446.34" y="1791.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="114.9" y="1637" width="0.2" height="15.0" fill="rgb(216,126,33)" rx="2" ry="2" />
<text  x="117.87" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.2" y="1413" width="0.2" height="15.0" fill="rgb(210,18,24)" rx="2" ry="2" />
<text  x="1173.24" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.1" y="1365" width="0.2" height="15.0" fill="rgb(244,135,41)" rx="2" ry="2" />
<text  x="1172.14" y="1375.5" ></text>
</g>
<g >
<title>std::__stable_sort_adaptive&lt;__gnu_cxx::__normal_iterator&lt;TWeightedNewsCluster*, std::vector&lt;TWeightedNewsCluster, std::allocator&lt;TWeightedNewsCluster&gt; &gt; &gt;, TWeightedNewsCluster*, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;Rank (1 samples, 0.02%)</title><rect x="157.9" y="1989" width="0.2" height="15.0" fill="rgb(242,11,13)" rx="2" ry="2" />
<text  x="160.89" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (85 samples, 1.33%)</title><rect x="130.6" y="1765" width="15.7" height="15.0" fill="rgb(223,19,1)" rx="2" ry="2" />
<text  x="133.57" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="130.4" y="1749" width="0.2" height="15.0" fill="rgb(232,143,49)" rx="2" ry="2" />
<text  x="133.38" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="129.8" y="1301" width="0.2" height="15.0" fill="rgb(241,11,21)" rx="2" ry="2" />
<text  x="132.83" y="1311.5" ></text>
</g>
<g >
<title>std::istream::sentry::sentry (4 samples, 0.06%)</title><rect x="1188.3" y="2053" width="0.8" height="15.0" fill="rgb(210,19,4)" rx="2" ry="2" />
<text  x="1191.34" y="2063.5" ></text>
</g>
<g >
<title>fasttext::ProductQuantizer::addcode (29 samples, 0.45%)</title><rect x="857.1" y="2037" width="5.4" height="15.0" fill="rgb(232,65,39)" rx="2" ry="2" />
<text  x="860.10" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_quantifier (2 samples, 0.03%)</title><rect x="156.0" y="1813" width="0.4" height="15.0" fill="rgb(251,129,30)" rx="2" ry="2" />
<text  x="159.05" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1168.6" y="2021" width="0.4" height="15.0" fill="rgb(209,105,11)" rx="2" ry="2" />
<text  x="1171.58" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (30 samples, 0.47%)</title><rect x="112.5" y="1669" width="5.5" height="15.0" fill="rgb(239,67,18)" rx="2" ry="2" />
<text  x="115.47" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="129.6" y="309" width="0.2" height="15.0" fill="rgb(245,28,54)" rx="2" ry="2" />
<text  x="132.64" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.0" y="1653" width="0.1" height="15.0" fill="rgb(216,27,50)" rx="2" ry="2" />
<text  x="1171.95" y="1663.5" ></text>
</g>
<g >
<title>release_pages (1 samples, 0.02%)</title><rect x="585.7" y="1813" width="0.2" height="15.0" fill="rgb(247,23,24)" rx="2" ry="2" />
<text  x="588.69" y="1823.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (1 samples, 0.02%)</title><rect x="177.6" y="1637" width="0.2" height="15.0" fill="rgb(228,224,15)" rx="2" ry="2" />
<text  x="180.65" y="1647.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="851.7" y="1909" width="0.2" height="15.0" fill="rgb(215,29,10)" rx="2" ry="2" />
<text  x="854.75" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.1" y="661" width="0.2" height="15.0" fill="rgb(252,45,38)" rx="2" ry="2" />
<text  x="1172.14" y="671.5" ></text>
</g>
<g >
<title>free_unref_page_list (1 samples, 0.02%)</title><rect x="443.5" y="1765" width="0.2" height="15.0" fill="rgb(233,80,28)" rx="2" ry="2" />
<text  x="446.52" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.0" y="1045" width="0.1" height="15.0" fill="rgb(240,71,45)" rx="2" ry="2" />
<text  x="1171.95" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (158 samples, 2.47%)</title><rect x="100.3" y="1925" width="29.2" height="15.0" fill="rgb(250,100,34)" rx="2" ry="2" />
<text  x="103.29" y="1935.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.6" y="1045" width="0.2" height="15.0" fill="rgb(217,213,15)" rx="2" ry="2" />
<text  x="1171.58" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="194.6" y="1269" width="0.4" height="15.0" fill="rgb(226,210,39)" rx="2" ry="2" />
<text  x="197.63" y="1279.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="1957" width="0.3" height="15.0" fill="rgb(237,189,25)" rx="2" ry="2" />
<text  x="82.98" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="129.8" y="901" width="0.2" height="15.0" fill="rgb(225,216,1)" rx="2" ry="2" />
<text  x="132.83" y="911.5" ></text>
</g>
<g >
<title>generic_file_read_iter (1 samples, 0.02%)</title><rect x="83.9" y="1893" width="0.1" height="15.0" fill="rgb(210,175,41)" rx="2" ry="2" />
<text  x="86.85" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.06%)</title><rect x="1169.3" y="1381" width="0.8" height="15.0" fill="rgb(244,205,34)" rx="2" ry="2" />
<text  x="1172.32" y="1391.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="1317" width="0.3" height="15.0" fill="rgb(212,157,20)" rx="2" ry="2" />
<text  x="82.98" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="130.4" y="1637" width="0.2" height="15.0" fill="rgb(212,175,47)" rx="2" ry="2" />
<text  x="133.38" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (35 samples, 0.55%)</title><rect x="130.6" y="1701" width="6.4" height="15.0" fill="rgb(216,189,6)" rx="2" ry="2" />
<text  x="133.57" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="805" width="0.1" height="15.0" fill="rgb(236,118,4)" rx="2" ry="2" />
<text  x="1173.06" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.0" y="1621" width="0.1" height="15.0" fill="rgb(215,29,31)" rx="2" ry="2" />
<text  x="1171.95" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.0" y="1525" width="0.1" height="15.0" fill="rgb(243,205,18)" rx="2" ry="2" />
<text  x="1171.95" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.0" y="1717" width="0.1" height="15.0" fill="rgb(215,167,39)" rx="2" ry="2" />
<text  x="1171.95" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="1589" width="0.3" height="15.0" fill="rgb(223,107,9)" rx="2" ry="2" />
<text  x="82.98" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="157.2" y="1925" width="0.3" height="15.0" fill="rgb(231,95,8)" rx="2" ry="2" />
<text  x="160.15" y="1935.5" ></text>
</g>
<g >
<title>cfree (3 samples, 0.05%)</title><rect x="125.2" y="1701" width="0.6" height="15.0" fill="rgb(251,117,12)" rx="2" ry="2" />
<text  x="128.21" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.2" y="1637" width="0.2" height="15.0" fill="rgb(212,225,5)" rx="2" ry="2" />
<text  x="1173.24" y="1647.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_Alloc_node&gt; (2 samples, 0.03%)</title><rect x="588.3" y="1957" width="0.3" height="15.0" fill="rgb(211,206,4)" rx="2" ry="2" />
<text  x="591.28" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="129.8" y="517" width="0.2" height="15.0" fill="rgb(224,91,36)" rx="2" ry="2" />
<text  x="132.83" y="527.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::clear@plt (2 samples, 0.03%)</title><rect x="616.9" y="1893" width="0.4" height="15.0" fill="rgb(205,16,37)" rx="2" ry="2" />
<text  x="619.89" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.6" y="949" width="0.2" height="15.0" fill="rgb(217,218,49)" rx="2" ry="2" />
<text  x="1171.58" y="959.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="1877" width="0.3" height="15.0" fill="rgb(230,97,19)" rx="2" ry="2" />
<text  x="82.98" y="1887.5" ></text>
</g>
<g >
<title>__dynamic_cast (8 samples, 0.13%)</title><rect x="165.6" y="1621" width="1.5" height="15.0" fill="rgb(237,131,21)" rx="2" ry="2" />
<text  x="168.65" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.1" y="805" width="0.2" height="15.0" fill="rgb(211,40,6)" rx="2" ry="2" />
<text  x="1172.14" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="1093" width="0.1" height="15.0" fill="rgb(219,56,46)" rx="2" ry="2" />
<text  x="1173.06" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (32 samples, 0.50%)</title><rect x="123.4" y="1781" width="5.9" height="15.0" fill="rgb(245,37,52)" rx="2" ry="2" />
<text  x="126.37" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.06%)</title><rect x="129.6" y="1765" width="0.8" height="15.0" fill="rgb(251,222,45)" rx="2" ry="2" />
<text  x="132.64" y="1775.5" ></text>
</g>
<g >
<title>do_syscall_64 (10 samples, 0.16%)</title><rect x="43.2" y="1989" width="1.9" height="15.0" fill="rgb(218,146,49)" rx="2" ry="2" />
<text  x="46.23" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.0" y="405" width="0.1" height="15.0" fill="rgb(245,64,38)" rx="2" ry="2" />
<text  x="1171.95" y="415.5" ></text>
</g>
<g >
<title>onmt::unicode::get_lower@plt (2 samples, 0.03%)</title><rect x="762.4" y="1893" width="0.4" height="15.0" fill="rgb(215,70,18)" rx="2" ry="2" />
<text  x="765.39" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="1077" width="0.1" height="15.0" fill="rgb(245,147,36)" rx="2" ry="2" />
<text  x="1173.06" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (28 samples, 0.44%)</title><rect x="140.9" y="1717" width="5.2" height="15.0" fill="rgb(243,210,13)" rx="2" ry="2" />
<text  x="143.91" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (158 samples, 2.47%)</title><rect x="100.3" y="1861" width="29.2" height="15.0" fill="rgb(231,34,47)" rx="2" ry="2" />
<text  x="103.29" y="1871.5" >st..</text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="443.3" y="1765" width="0.2" height="15.0" fill="rgb(217,100,9)" rx="2" ry="2" />
<text  x="446.34" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="130.0" y="1013" width="0.2" height="15.0" fill="rgb(247,22,31)" rx="2" ry="2" />
<text  x="133.01" y="1023.5" ></text>
</g>
<g >
<title>memcpy@plt (1 samples, 0.02%)</title><rect x="631.8" y="1877" width="0.2" height="15.0" fill="rgb(236,119,5)" rx="2" ry="2" />
<text  x="634.85" y="1887.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (5 samples, 0.08%)</title><rect x="183.0" y="1669" width="0.9" height="15.0" fill="rgb(245,111,39)" rx="2" ry="2" />
<text  x="186.00" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.2" y="677" width="0.2" height="15.0" fill="rgb(235,184,21)" rx="2" ry="2" />
<text  x="1173.24" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="1877" width="0.1" height="15.0" fill="rgb(214,136,48)" rx="2" ry="2" />
<text  x="1173.06" y="1887.5" ></text>
</g>
<g >
<title>operator delete@plt (1 samples, 0.02%)</title><rect x="120.0" y="1669" width="0.2" height="15.0" fill="rgb(242,112,41)" rx="2" ry="2" />
<text  x="123.04" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.0" y="1365" width="0.1" height="15.0" fill="rgb(241,110,42)" rx="2" ry="2" />
<text  x="1171.95" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.8" y="853" width="0.2" height="15.0" fill="rgb(210,211,23)" rx="2" ry="2" />
<text  x="1171.77" y="863.5" ></text>
</g>
<g >
<title>Eigen::internal::gebp_kernel&lt;float, float, long, Eigen::internal::blas_data_mapper&lt;float, long, 0, 0, 1&gt;, 48, 4, false, false&gt;::operator (29 samples, 0.45%)</title><rect x="410.7" y="1909" width="5.3" height="15.0" fill="rgb(242,171,52)" rx="2" ry="2" />
<text  x="413.66" y="1919.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1 samples, 0.02%)</title><rect x="42.9" y="2037" width="0.1" height="15.0" fill="rgb(252,6,2)" rx="2" ry="2" />
<text  x="45.86" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="2005" width="0.3" height="15.0" fill="rgb(207,113,5)" rx="2" ry="2" />
<text  x="82.98" y="2015.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (1 samples, 0.02%)</title><rect x="715.9" y="1749" width="0.1" height="15.0" fill="rgb(233,136,2)" rx="2" ry="2" />
<text  x="718.86" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_subexpr_begin (1 samples, 0.02%)</title><rect x="106.2" y="1685" width="0.2" height="15.0" fill="rgb(237,181,39)" rx="2" ry="2" />
<text  x="109.19" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.1" y="1461" width="0.2" height="15.0" fill="rgb(218,4,19)" rx="2" ry="2" />
<text  x="1172.14" y="1471.5" ></text>
</g>
<g >
<title>finish_task_switch (2 samples, 0.03%)</title><rect x="44.7" y="1925" width="0.4" height="15.0" fill="rgb(229,15,15)" rx="2" ry="2" />
<text  x="47.71" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="130.0" y="1189" width="0.2" height="15.0" fill="rgb(217,192,43)" rx="2" ry="2" />
<text  x="133.01" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="129.8" y="1109" width="0.2" height="15.0" fill="rgb(210,130,38)" rx="2" ry="2" />
<text  x="132.83" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="194.6" y="1397" width="0.4" height="15.0" fill="rgb(224,145,43)" rx="2" ry="2" />
<text  x="197.63" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.0" y="581" width="0.1" height="15.0" fill="rgb(245,20,47)" rx="2" ry="2" />
<text  x="1171.95" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="1189" width="0.1" height="15.0" fill="rgb(218,170,50)" rx="2" ry="2" />
<text  x="1173.06" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="309" width="0.1" height="15.0" fill="rgb(249,69,0)" rx="2" ry="2" />
<text  x="1173.06" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.06%)</title><rect x="1169.3" y="517" width="0.8" height="15.0" fill="rgb(225,135,39)" rx="2" ry="2" />
<text  x="1172.32" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.1" y="773" width="0.2" height="15.0" fill="rgb(223,166,10)" rx="2" ry="2" />
<text  x="1172.14" y="783.5" ></text>
</g>
<g >
<title>operator new@plt (4 samples, 0.06%)</title><rect x="1117.3" y="2053" width="0.7" height="15.0" fill="rgb(220,118,23)" rx="2" ry="2" />
<text  x="1120.25" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (28 samples, 0.44%)</title><rect x="173.2" y="1653" width="5.2" height="15.0" fill="rgb(227,217,26)" rx="2" ry="2" />
<text  x="176.22" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.06%)</title><rect x="1169.3" y="229" width="0.8" height="15.0" fill="rgb(230,20,43)" rx="2" ry="2" />
<text  x="1172.32" y="239.5" ></text>
</g>
<g >
<title>ksys_read (2 samples, 0.03%)</title><rect x="906.4" y="1989" width="0.4" height="15.0" fill="rgb(243,21,49)" rx="2" ry="2" />
<text  x="909.40" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.06%)</title><rect x="1169.3" y="245" width="0.8" height="15.0" fill="rgb(223,183,16)" rx="2" ry="2" />
<text  x="1172.32" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="129.6" y="325" width="0.2" height="15.0" fill="rgb(241,50,50)" rx="2" ry="2" />
<text  x="132.64" y="335.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (3 samples, 0.05%)</title><rect x="852.3" y="1973" width="0.6" height="15.0" fill="rgb(216,105,48)" rx="2" ry="2" />
<text  x="855.30" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="129.6" y="965" width="0.2" height="15.0" fill="rgb(222,117,33)" rx="2" ry="2" />
<text  x="132.64" y="975.5" ></text>
</g>
<g >
<title>alloc_pages_vma (2 samples, 0.03%)</title><rect x="79.1" y="1941" width="0.3" height="15.0" fill="rgb(218,34,43)" rx="2" ry="2" />
<text  x="82.05" y="1951.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1131.8" y="2021" width="0.2" height="15.0" fill="rgb(206,181,45)" rx="2" ry="2" />
<text  x="1134.84" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.8" y="1397" width="0.2" height="15.0" fill="rgb(210,155,46)" rx="2" ry="2" />
<text  x="1171.77" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="85" width="0.1" height="15.0" fill="rgb(230,153,9)" rx="2" ry="2" />
<text  x="1173.06" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.6" y="789" width="0.2" height="15.0" fill="rgb(254,133,16)" rx="2" ry="2" />
<text  x="1171.58" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.8" y="773" width="0.2" height="15.0" fill="rgb(221,3,3)" rx="2" ry="2" />
<text  x="1171.77" y="783.5" ></text>
</g>
<g >
<title>cfree (1 samples, 0.02%)</title><rect x="585.9" y="2005" width="0.2" height="15.0" fill="rgb(212,34,13)" rx="2" ry="2" />
<text  x="588.88" y="2015.5" ></text>
</g>
<g >
<title>generic_perform_write (1 samples, 0.02%)</title><rect x="880.6" y="1877" width="0.1" height="15.0" fill="rgb(254,54,30)" rx="2" ry="2" />
<text  x="883.55" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.06%)</title><rect x="1169.3" y="1141" width="0.8" height="15.0" fill="rgb(235,156,11)" rx="2" ry="2" />
<text  x="1172.32" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.1" y="693" width="0.2" height="15.0" fill="rgb(230,6,16)" rx="2" ry="2" />
<text  x="1172.14" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_quantifier (3 samples, 0.05%)</title><rect x="193.2" y="1829" width="0.5" height="15.0" fill="rgb(214,223,44)" rx="2" ry="2" />
<text  x="196.16" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="130.2" y="1349" width="0.2" height="15.0" fill="rgb(244,166,44)" rx="2" ry="2" />
<text  x="133.20" y="1359.5" ></text>
</g>
<g >
<title>schedule (2 samples, 0.03%)</title><rect x="44.7" y="1957" width="0.4" height="15.0" fill="rgb(213,65,3)" rx="2" ry="2" />
<text  x="47.71" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.8" y="1125" width="0.2" height="15.0" fill="rgb(252,196,2)" rx="2" ry="2" />
<text  x="1171.77" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="341" width="0.1" height="15.0" fill="rgb(242,217,48)" rx="2" ry="2" />
<text  x="1173.06" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="130.4" y="1541" width="0.2" height="15.0" fill="rgb(240,191,24)" rx="2" ry="2" />
<text  x="133.38" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="1573" width="0.1" height="15.0" fill="rgb(252,143,13)" rx="2" ry="2" />
<text  x="1173.06" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (32 samples, 0.50%)</title><rect x="178.8" y="1685" width="5.9" height="15.0" fill="rgb(247,145,1)" rx="2" ry="2" />
<text  x="181.76" y="1695.5" ></text>
</g>
<g >
<title>__do_page_fault (24 samples, 0.38%)</title><rect x="34.9" y="2005" width="4.5" height="15.0" fill="rgb(212,194,30)" rx="2" ry="2" />
<text  x="37.93" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.0" y="261" width="0.1" height="15.0" fill="rgb(254,114,40)" rx="2" ry="2" />
<text  x="1171.95" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (2 samples, 0.03%)</title><rect x="100.5" y="1653" width="0.3" height="15.0" fill="rgb(217,102,4)" rx="2" ry="2" />
<text  x="103.47" y="1663.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (3 samples, 0.05%)</title><rect x="154.8" y="1669" width="0.5" height="15.0" fill="rgb(232,56,48)" rx="2" ry="2" />
<text  x="157.75" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="129.6" y="341" width="0.2" height="15.0" fill="rgb(224,123,28)" rx="2" ry="2" />
<text  x="132.64" y="351.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="389" width="0.3" height="15.0" fill="rgb(227,73,19)" rx="2" ry="2" />
<text  x="82.98" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="129.6" y="565" width="0.2" height="15.0" fill="rgb(239,162,32)" rx="2" ry="2" />
<text  x="132.64" y="575.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="53" width="0.3" height="15.0" fill="rgb(223,23,48)" rx="2" ry="2" />
<text  x="82.98" y="63.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1045.6" y="2021" width="0.2" height="15.0" fill="rgb(233,154,54)" rx="2" ry="2" />
<text  x="1048.62" y="2031.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::do_tolower (1 samples, 0.02%)</title><rect x="128.9" y="1701" width="0.2" height="15.0" fill="rgb(218,9,9)" rx="2" ry="2" />
<text  x="131.90" y="1711.5" ></text>
</g>
<g >
<title>alloc_pages_vma (7 samples, 0.11%)</title><rect x="36.4" y="1957" width="1.3" height="15.0" fill="rgb(231,74,30)" rx="2" ry="2" />
<text  x="39.40" y="1967.5" ></text>
</g>
<g >
<title>get_nprocs@plt (1 samples, 0.02%)</title><rect x="586.1" y="2005" width="0.1" height="15.0" fill="rgb(252,46,6)" rx="2" ry="2" />
<text  x="589.06" y="2015.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (2 samples, 0.03%)</title><rect x="1189.1" y="2053" width="0.3" height="15.0" fill="rgb(227,143,26)" rx="2" ry="2" />
<text  x="1192.08" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.1" y="1269" width="0.2" height="15.0" fill="rgb(229,63,41)" rx="2" ry="2" />
<text  x="1172.14" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.6" y="373" width="0.2" height="15.0" fill="rgb(224,213,39)" rx="2" ry="2" />
<text  x="1171.58" y="383.5" ></text>
</g>
<g >
<title>malloc (3 samples, 0.05%)</title><rect x="187.2" y="1701" width="0.6" height="15.0" fill="rgb(214,68,13)" rx="2" ry="2" />
<text  x="190.25" y="1711.5" ></text>
</g>
<g >
<title>__handle_mm_fault (37 samples, 0.58%)</title><rect x="424.5" y="1893" width="6.8" height="15.0" fill="rgb(219,161,40)" rx="2" ry="2" />
<text  x="427.50" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="293" width="0.1" height="15.0" fill="rgb(226,220,42)" rx="2" ry="2" />
<text  x="1173.06" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="130.4" y="1653" width="0.2" height="15.0" fill="rgb(230,45,37)" rx="2" ry="2" />
<text  x="133.38" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (21 samples, 0.33%)</title><rect x="79.4" y="2037" width="3.9" height="15.0" fill="rgb(230,93,19)" rx="2" ry="2" />
<text  x="82.42" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.6" y="1957" width="0.2" height="15.0" fill="rgb(253,229,27)" rx="2" ry="2" />
<text  x="1171.58" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.6" y="1653" width="0.2" height="15.0" fill="rgb(231,78,40)" rx="2" ry="2" />
<text  x="1171.58" y="1663.5" ></text>
</g>
<g >
<title>alloc_pages_vma (2 samples, 0.03%)</title><rect x="85.9" y="1829" width="0.4" height="15.0" fill="rgb(206,153,30)" rx="2" ry="2" />
<text  x="88.88" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (1 samples, 0.02%)</title><rect x="100.8" y="1605" width="0.2" height="15.0" fill="rgb(245,82,13)" rx="2" ry="2" />
<text  x="103.84" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="1125" width="0.1" height="15.0" fill="rgb(244,152,42)" rx="2" ry="2" />
<text  x="1173.06" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.0" y="1125" width="0.1" height="15.0" fill="rgb(240,212,50)" rx="2" ry="2" />
<text  x="1171.95" y="1135.5" ></text>
</g>
<g >
<title>onmt::unicode::is_letter (317 samples, 4.96%)</title><rect x="762.8" y="1893" width="58.5" height="15.0" fill="rgb(252,77,16)" rx="2" ry="2" />
<text  x="765.76" y="1903.5" >onmt::..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (30 samples, 0.47%)</title><rect x="150.5" y="1781" width="5.5" height="15.0" fill="rgb(210,173,37)" rx="2" ry="2" />
<text  x="153.51" y="1791.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="120.2" y="1669" width="0.2" height="15.0" fill="rgb(235,117,15)" rx="2" ry="2" />
<text  x="123.23" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.1" y="901" width="0.2" height="15.0" fill="rgb(245,171,26)" rx="2" ry="2" />
<text  x="1172.14" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="129.8" y="1285" width="0.2" height="15.0" fill="rgb(236,121,38)" rx="2" ry="2" />
<text  x="132.83" y="1295.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="1045.6" y="1909" width="0.2" height="15.0" fill="rgb(249,95,11)" rx="2" ry="2" />
<text  x="1048.62" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.2" y="1557" width="0.2" height="15.0" fill="rgb(209,12,17)" rx="2" ry="2" />
<text  x="1173.24" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="1845" width="0.1" height="15.0" fill="rgb(207,58,33)" rx="2" ry="2" />
<text  x="1173.06" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.6" y="197" width="0.2" height="15.0" fill="rgb(249,140,19)" rx="2" ry="2" />
<text  x="1171.58" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.09%)</title><rect x="1169.0" y="1893" width="1.1" height="15.0" fill="rgb(229,180,52)" rx="2" ry="2" />
<text  x="1171.95" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="130.4" y="1461" width="0.2" height="15.0" fill="rgb(212,174,16)" rx="2" ry="2" />
<text  x="133.38" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="129.6" y="453" width="0.2" height="15.0" fill="rgb(251,7,51)" rx="2" ry="2" />
<text  x="132.64" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="1493" width="0.1" height="15.0" fill="rgb(230,194,35)" rx="2" ry="2" />
<text  x="1173.06" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.06%)</title><rect x="1169.3" y="341" width="0.8" height="15.0" fill="rgb(221,166,49)" rx="2" ry="2" />
<text  x="1172.32" y="351.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="1605" width="0.3" height="15.0" fill="rgb(215,150,25)" rx="2" ry="2" />
<text  x="82.98" y="1615.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (1 samples, 0.02%)</title><rect x="193.7" y="1829" width="0.2" height="15.0" fill="rgb(207,200,37)" rx="2" ry="2" />
<text  x="196.71" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (22 samples, 0.34%)</title><rect x="146.3" y="1749" width="4.0" height="15.0" fill="rgb(250,220,4)" rx="2" ry="2" />
<text  x="149.26" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="1541" width="0.1" height="15.0" fill="rgb(216,82,42)" rx="2" ry="2" />
<text  x="1173.06" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="277" width="0.3" height="15.0" fill="rgb(212,168,42)" rx="2" ry="2" />
<text  x="82.98" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (35 samples, 0.55%)</title><rect x="130.6" y="1669" width="6.4" height="15.0" fill="rgb(232,3,48)" rx="2" ry="2" />
<text  x="133.57" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="130.2" y="1333" width="0.2" height="15.0" fill="rgb(211,198,19)" rx="2" ry="2" />
<text  x="133.20" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.2" y="661" width="0.2" height="15.0" fill="rgb(241,127,18)" rx="2" ry="2" />
<text  x="1173.24" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.0" y="341" width="0.1" height="15.0" fill="rgb(208,159,52)" rx="2" ry="2" />
<text  x="1171.95" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.06%)</title><rect x="1169.3" y="549" width="0.8" height="15.0" fill="rgb(210,178,8)" rx="2" ry="2" />
<text  x="1172.32" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.1" y="1445" width="0.2" height="15.0" fill="rgb(230,126,50)" rx="2" ry="2" />
<text  x="1172.14" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="129.6" y="213" width="0.2" height="15.0" fill="rgb(254,8,45)" rx="2" ry="2" />
<text  x="132.64" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="661" width="0.1" height="15.0" fill="rgb(243,218,1)" rx="2" ry="2" />
<text  x="1173.06" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.2" y="549" width="0.2" height="15.0" fill="rgb(248,134,18)" rx="2" ry="2" />
<text  x="1173.24" y="559.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="1493" width="0.3" height="15.0" fill="rgb(240,43,15)" rx="2" ry="2" />
<text  x="82.98" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="885" width="0.1" height="15.0" fill="rgb(221,27,1)" rx="2" ry="2" />
<text  x="1173.06" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="1141" width="0.1" height="15.0" fill="rgb(227,210,11)" rx="2" ry="2" />
<text  x="1173.06" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.0" y="133" width="0.1" height="15.0" fill="rgb(206,195,48)" rx="2" ry="2" />
<text  x="1171.95" y="143.5" ></text>
</g>
<g >
<title>std::__basic_future&lt;boost::optional&lt;TDocument&gt; &gt;::_M_get_result (1 samples, 0.02%)</title><rect x="99.5" y="1973" width="0.2" height="15.0" fill="rgb(250,179,3)" rx="2" ry="2" />
<text  x="102.55" y="1983.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (1 samples, 0.02%)</title><rect x="80.2" y="37" width="0.1" height="15.0" fill="rgb(247,90,49)" rx="2" ry="2" />
<text  x="83.16" y="47.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="165" width="0.1" height="15.0" fill="rgb(232,144,9)" rx="2" ry="2" />
<text  x="1173.06" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="1893" width="0.1" height="15.0" fill="rgb(253,89,38)" rx="2" ry="2" />
<text  x="1173.06" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="130.0" y="1397" width="0.4" height="15.0" fill="rgb(241,72,22)" rx="2" ry="2" />
<text  x="133.01" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.6" y="933" width="0.2" height="15.0" fill="rgb(240,109,3)" rx="2" ry="2" />
<text  x="1171.58" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.1" y="1429" width="0.2" height="15.0" fill="rgb(233,106,45)" rx="2" ry="2" />
<text  x="1172.14" y="1439.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::getLine (1 samples, 0.02%)</title><rect x="590.3" y="1957" width="0.2" height="15.0" fill="rgb(222,17,47)" rx="2" ry="2" />
<text  x="593.31" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.08%)</title><rect x="129.6" y="1845" width="1.0" height="15.0" fill="rgb(217,14,18)" rx="2" ry="2" />
<text  x="132.64" y="1855.5" ></text>
</g>
<g >
<title>unmap_single_vma (1 samples, 0.02%)</title><rect x="584.8" y="1861" width="0.2" height="15.0" fill="rgb(245,124,13)" rx="2" ry="2" />
<text  x="587.77" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.8" y="645" width="0.2" height="15.0" fill="rgb(205,98,39)" rx="2" ry="2" />
<text  x="1171.77" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.2" y="501" width="0.2" height="15.0" fill="rgb(221,59,36)" rx="2" ry="2" />
<text  x="1173.24" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="129.8" y="1317" width="0.2" height="15.0" fill="rgb(213,184,49)" rx="2" ry="2" />
<text  x="132.83" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.6" y="1749" width="0.2" height="15.0" fill="rgb(211,48,47)" rx="2" ry="2" />
<text  x="1171.58" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="129.8" y="709" width="0.2" height="15.0" fill="rgb(229,188,41)" rx="2" ry="2" />
<text  x="132.83" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.06%)</title><rect x="1169.3" y="917" width="0.8" height="15.0" fill="rgb(236,42,35)" rx="2" ry="2" />
<text  x="1172.32" y="927.5" ></text>
</g>
<g >
<title>nlohmann::detail::input_stream_adapter::get_character (11 samples, 0.17%)</title><rect x="92.5" y="1909" width="2.1" height="15.0" fill="rgb(223,206,20)" rx="2" ry="2" />
<text  x="95.53" y="1919.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.02%)</title><rect x="78.5" y="1989" width="0.2" height="15.0" fill="rgb(237,185,53)" rx="2" ry="2" />
<text  x="81.50" y="1999.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::load (5 samples, 0.08%)</title><rect x="997.1" y="2053" width="0.9" height="15.0" fill="rgb(231,218,2)" rx="2" ry="2" />
<text  x="1000.06" y="2063.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="115.1" y="1637" width="0.1" height="15.0" fill="rgb(234,60,44)" rx="2" ry="2" />
<text  x="118.06" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.6" y="117" width="0.2" height="15.0" fill="rgb(220,17,41)" rx="2" ry="2" />
<text  x="1171.58" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (157 samples, 2.46%)</title><rect x="100.3" y="1829" width="29.0" height="15.0" fill="rgb(221,78,28)" rx="2" ry="2" />
<text  x="103.29" y="1839.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.0" y="1301" width="0.1" height="15.0" fill="rgb(229,131,53)" rx="2" ry="2" />
<text  x="1171.95" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.2" y="1893" width="0.2" height="15.0" fill="rgb(244,149,47)" rx="2" ry="2" />
<text  x="1173.24" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt;,  (3 samples, 0.05%)</title><rect x="157.0" y="1941" width="0.5" height="15.0" fill="rgb(205,161,49)" rx="2" ry="2" />
<text  x="159.97" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="277" width="0.1" height="15.0" fill="rgb(230,117,54)" rx="2" ry="2" />
<text  x="1173.06" y="287.5" ></text>
</g>
<g >
<title>schedule (2 samples, 0.03%)</title><rect x="99.9" y="1861" width="0.4" height="15.0" fill="rgb(207,223,32)" rx="2" ry="2" />
<text  x="102.92" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (31 samples, 0.49%)</title><rect x="106.6" y="1669" width="5.7" height="15.0" fill="rgb(246,116,44)" rx="2" ry="2" />
<text  x="109.56" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="157.2" y="1829" width="0.3" height="15.0" fill="rgb(234,183,35)" rx="2" ry="2" />
<text  x="160.15" y="1839.5" ></text>
</g>
<g >
<title>cfree (1 samples, 0.02%)</title><rect x="137.2" y="1605" width="0.2" height="15.0" fill="rgb(218,131,12)" rx="2" ry="2" />
<text  x="140.21" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.2" y="1029" width="0.2" height="15.0" fill="rgb(226,154,47)" rx="2" ry="2" />
<text  x="1173.24" y="1039.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::operator[]&lt;char const&gt; (1 samples, 0.02%)</title><rect x="588.8" y="2021" width="0.2" height="15.0" fill="rgb(218,64,38)" rx="2" ry="2" />
<text  x="591.83" y="2031.5" ></text>
</g>
<g >
<title>fasttext::Vector::norm (45 samples, 0.70%)</title><rect x="572.4" y="1973" width="8.3" height="15.0" fill="rgb(207,136,11)" rx="2" ry="2" />
<text  x="575.40" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.0" y="949" width="0.1" height="15.0" fill="rgb(240,103,7)" rx="2" ry="2" />
<text  x="1171.95" y="959.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (2 samples, 0.03%)</title><rect x="906.4" y="1925" width="0.4" height="15.0" fill="rgb(234,150,32)" rx="2" ry="2" />
<text  x="909.40" y="1935.5" ></text>
</g>
<g >
<title>fasttext::ProductQuantizer::get_centroids (4 samples, 0.06%)</title><rect x="1092.0" y="2053" width="0.7" height="15.0" fill="rgb(224,31,36)" rx="2" ry="2" />
<text  x="1094.96" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.1" y="869" width="0.2" height="15.0" fill="rgb(226,79,47)" rx="2" ry="2" />
<text  x="1172.14" y="879.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.02%)</title><rect x="169.3" y="1605" width="0.2" height="15.0" fill="rgb(221,160,32)" rx="2" ry="2" />
<text  x="172.34" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.2" y="357" width="0.2" height="15.0" fill="rgb(248,38,37)" rx="2" ry="2" />
<text  x="1173.24" y="367.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.02%)</title><rect x="851.7" y="1877" width="0.2" height="15.0" fill="rgb(244,200,48)" rx="2" ry="2" />
<text  x="854.75" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.0" y="309" width="0.1" height="15.0" fill="rgb(215,110,45)" rx="2" ry="2" />
<text  x="1171.95" y="319.5" ></text>
</g>
<g >
<title>malloc (4 samples, 0.06%)</title><rect x="642.9" y="1861" width="0.8" height="15.0" fill="rgb(227,143,12)" rx="2" ry="2" />
<text  x="645.93" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="229" width="0.3" height="15.0" fill="rgb(252,92,8)" rx="2" ry="2" />
<text  x="82.98" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.06%)</title><rect x="1169.3" y="437" width="0.8" height="15.0" fill="rgb(216,203,8)" rx="2" ry="2" />
<text  x="1172.32" y="447.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="206.6" y="1941" width="0.2" height="15.0" fill="rgb(251,4,5)" rx="2" ry="2" />
<text  x="209.64" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (25 samples, 0.39%)</title><rect x="159.9" y="1653" width="4.6" height="15.0" fill="rgb(252,147,14)" rx="2" ry="2" />
<text  x="162.92" y="1663.5" ></text>
</g>
<g >
<title>Eigen::internal::generic_product_impl&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt;, Eigen::DenseShape, Eigen::DenseShape, 8&gt;::evalTo&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt; (1 samples, 0.02%)</title><rect x="158.6" y="1973" width="0.2" height="15.0" fill="rgb(233,202,28)" rx="2" ry="2" />
<text  x="161.63" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (12 samples, 0.19%)</title><rect x="115.2" y="1637" width="2.3" height="15.0" fill="rgb(216,63,31)" rx="2" ry="2" />
<text  x="118.24" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.2" y="581" width="0.2" height="15.0" fill="rgb(216,176,9)" rx="2" ry="2" />
<text  x="1173.24" y="591.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::json_value::destroy (1 samples, 0.02%)</title><rect x="586.4" y="1989" width="0.2" height="15.0" fill="rgb(236,38,49)" rx="2" ry="2" />
<text  x="589.43" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="157.2" y="1461" width="0.1" height="15.0" fill="rgb(216,23,35)" rx="2" ry="2" />
<text  x="160.15" y="1471.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::basic_json (1 samples, 0.02%)</title><rect x="588.6" y="1989" width="0.2" height="15.0" fill="rgb(251,7,51)" rx="2" ry="2" />
<text  x="591.64" y="1999.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="206.6" y="1957" width="0.2" height="15.0" fill="rgb(247,122,31)" rx="2" ry="2" />
<text  x="209.64" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="157.2" y="1525" width="0.1" height="15.0" fill="rgb(228,3,45)" rx="2" ry="2" />
<text  x="160.15" y="1535.5" ></text>
</g>
<g >
<title>std::operator&gt;&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;@plt (2 samples, 0.03%)</title><rect x="584.2" y="1973" width="0.4" height="15.0" fill="rgb(219,121,48)" rx="2" ry="2" />
<text  x="587.21" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="194.6" y="1493" width="0.4" height="15.0" fill="rgb(244,204,13)" rx="2" ry="2" />
<text  x="197.63" y="1503.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="949" width="0.3" height="15.0" fill="rgb(207,55,27)" rx="2" ry="2" />
<text  x="82.98" y="959.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (2 samples, 0.03%)</title><rect x="864.7" y="2037" width="0.3" height="15.0" fill="rgb(211,134,52)" rx="2" ry="2" />
<text  x="867.67" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.6" y="645" width="0.2" height="15.0" fill="rgb(226,128,35)" rx="2" ry="2" />
<text  x="1171.58" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.6" y="1813" width="0.2" height="15.0" fill="rgb(253,51,19)" rx="2" ry="2" />
<text  x="1171.58" y="1823.5" ></text>
</g>
<g >
<title>std::locale::~locale (6 samples, 0.09%)</title><rect x="582.2" y="1973" width="1.1" height="15.0" fill="rgb(233,102,11)" rx="2" ry="2" />
<text  x="585.18" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="129.8" y="613" width="0.2" height="15.0" fill="rgb(242,214,2)" rx="2" ry="2" />
<text  x="132.83" y="623.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.25] (21 samples, 0.33%)</title><rect x="41.2" y="2053" width="3.9" height="15.0" fill="rgb(227,6,32)" rx="2" ry="2" />
<text  x="44.20" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="194.6" y="1749" width="0.4" height="15.0" fill="rgb(225,196,38)" rx="2" ry="2" />
<text  x="197.63" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (31 samples, 0.49%)</title><rect x="112.5" y="1685" width="5.7" height="15.0" fill="rgb(244,223,16)" rx="2" ry="2" />
<text  x="115.47" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.8" y="1541" width="0.2" height="15.0" fill="rgb(222,136,0)" rx="2" ry="2" />
<text  x="1171.77" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="129.8" y="1413" width="0.2" height="15.0" fill="rgb(222,141,32)" rx="2" ry="2" />
<text  x="132.83" y="1423.5" ></text>
</g>
<g >
<title>__f_unlock_pos (1 samples, 0.02%)</title><rect x="83.5" y="1957" width="0.2" height="15.0" fill="rgb(250,80,11)" rx="2" ry="2" />
<text  x="86.48" y="1967.5" ></text>
</g>
<g >
<title>onmt::unicode::is_number (11 samples, 0.17%)</title><rect x="822.0" y="1893" width="2.1" height="15.0" fill="rgb(234,90,18)" rx="2" ry="2" />
<text  x="825.02" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.2" y="1765" width="0.2" height="15.0" fill="rgb(239,3,36)" rx="2" ry="2" />
<text  x="1173.24" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.6" y="501" width="0.2" height="15.0" fill="rgb(224,91,22)" rx="2" ry="2" />
<text  x="1171.58" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.0" y="389" width="0.1" height="15.0" fill="rgb(206,71,33)" rx="2" ry="2" />
<text  x="1171.95" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="129.6" y="1237" width="0.2" height="15.0" fill="rgb(232,90,32)" rx="2" ry="2" />
<text  x="132.64" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (33 samples, 0.52%)</title><rect x="178.6" y="1717" width="6.1" height="15.0" fill="rgb(224,212,54)" rx="2" ry="2" />
<text  x="181.57" y="1727.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (2 samples, 0.03%)</title><rect x="116.5" y="1621" width="0.4" height="15.0" fill="rgb(207,67,44)" rx="2" ry="2" />
<text  x="119.53" y="1631.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_istringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_istringstream (1 samples, 0.02%)</title><rect x="172.8" y="1717" width="0.2" height="15.0" fill="rgb(247,183,7)" rx="2" ry="2" />
<text  x="175.85" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="194.6" y="1861" width="0.4" height="15.0" fill="rgb(210,77,7)" rx="2" ry="2" />
<text  x="197.63" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.06%)</title><rect x="1169.3" y="165" width="0.8" height="15.0" fill="rgb(248,70,42)" rx="2" ry="2" />
<text  x="1172.32" y="175.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare@plt (3 samples, 0.05%)</title><rect x="847.1" y="1893" width="0.6" height="15.0" fill="rgb(245,112,22)" rx="2" ry="2" />
<text  x="850.13" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="129.6" y="709" width="0.2" height="15.0" fill="rgb(214,200,33)" rx="2" ry="2" />
<text  x="132.64" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="129.6" y="1285" width="0.2" height="15.0" fill="rgb(251,41,2)" rx="2" ry="2" />
<text  x="132.64" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.0" y="1509" width="0.1" height="15.0" fill="rgb(234,158,43)" rx="2" ry="2" />
<text  x="1171.95" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="157.2" y="1573" width="0.1" height="15.0" fill="rgb(235,160,43)" rx="2" ry="2" />
<text  x="160.15" y="1583.5" ></text>
</g>
<g >
<title>__dynamic_cast (5 samples, 0.08%)</title><rect x="146.4" y="1653" width="1.0" height="15.0" fill="rgb(227,140,16)" rx="2" ry="2" />
<text  x="149.45" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.0" y="1413" width="0.1" height="15.0" fill="rgb(241,56,11)" rx="2" ry="2" />
<text  x="1171.95" y="1423.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="613" width="0.3" height="15.0" fill="rgb(234,29,52)" rx="2" ry="2" />
<text  x="82.98" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::reserve (4 samples, 0.06%)</title><rect x="644.0" y="1861" width="0.8" height="15.0" fill="rgb(210,86,48)" rx="2" ry="2" />
<text  x="647.04" y="1871.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="167.7" y="1621" width="0.2" height="15.0" fill="rgb(224,211,48)" rx="2" ry="2" />
<text  x="170.68" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.8" y="1205" width="0.2" height="15.0" fill="rgb(222,58,41)" rx="2" ry="2" />
<text  x="1171.77" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="130.4" y="1349" width="0.2" height="15.0" fill="rgb(241,192,9)" rx="2" ry="2" />
<text  x="133.38" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="229" width="0.1" height="15.0" fill="rgb(236,181,5)" rx="2" ry="2" />
<text  x="1173.06" y="239.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="581" width="0.3" height="15.0" fill="rgb(215,118,21)" rx="2" ry="2" />
<text  x="82.98" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (25 samples, 0.39%)</title><rect x="159.9" y="1701" width="4.6" height="15.0" fill="rgb(237,88,4)" rx="2" ry="2" />
<text  x="162.92" y="1711.5" ></text>
</g>
<g >
<title>ksys_write (1 samples, 0.02%)</title><rect x="880.6" y="1973" width="0.1" height="15.0" fill="rgb(207,69,18)" rx="2" ry="2" />
<text  x="883.55" y="1983.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find_last_of (1 samples, 0.02%)</title><rect x="1145.3" y="2053" width="0.2" height="15.0" fill="rgb(223,125,19)" rx="2" ry="2" />
<text  x="1148.32" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (25 samples, 0.39%)</title><rect x="159.9" y="1621" width="4.6" height="15.0" fill="rgb(226,122,48)" rx="2" ry="2" />
<text  x="162.92" y="1631.5" ></text>
</g>
<g >
<title>fasttext::DenseMatrix::dotRow (1 samples, 0.02%)</title><rect x="933.7" y="2053" width="0.2" height="15.0" fill="rgb(212,131,14)" rx="2" ry="2" />
<text  x="936.73" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.6" y="405" width="0.2" height="15.0" fill="rgb(212,86,20)" rx="2" ry="2" />
<text  x="1171.58" y="415.5" ></text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.02%)</title><rect x="84.4" y="1861" width="0.2" height="15.0" fill="rgb(238,94,8)" rx="2" ry="2" />
<text  x="87.41" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.8" y="1669" width="0.2" height="15.0" fill="rgb(249,147,52)" rx="2" ry="2" />
<text  x="1171.77" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.8" y="1685" width="0.2" height="15.0" fill="rgb(217,155,19)" rx="2" ry="2" />
<text  x="1171.77" y="1695.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::str[abi:cxx11]@plt (4 samples, 0.06%)</title><rect x="596.0" y="1909" width="0.8" height="15.0" fill="rgb(244,181,46)" rx="2" ry="2" />
<text  x="599.03" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="741" width="0.3" height="15.0" fill="rgb(219,79,15)" rx="2" ry="2" />
<text  x="82.98" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.8" y="1493" width="0.2" height="15.0" fill="rgb(251,195,2)" rx="2" ry="2" />
<text  x="1171.77" y="1503.5" ></text>
</g>
<g >
<title>boost::optional_detail::optional_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::assign (1 samples, 0.02%)</title><rect x="587.7" y="1941" width="0.2" height="15.0" fill="rgb(213,115,36)" rx="2" ry="2" />
<text  x="590.72" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.1" y="981" width="0.2" height="15.0" fill="rgb(206,3,0)" rx="2" ry="2" />
<text  x="1172.14" y="991.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (25 samples, 0.39%)</title><rect x="425.6" y="1861" width="4.6" height="15.0" fill="rgb(221,211,43)" rx="2" ry="2" />
<text  x="428.61" y="1871.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (1 samples, 0.02%)</title><rect x="117.5" y="1637" width="0.1" height="15.0" fill="rgb(249,80,33)" rx="2" ry="2" />
<text  x="120.46" y="1647.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="715.9" y="1733" width="0.1" height="15.0" fill="rgb(226,97,14)" rx="2" ry="2" />
<text  x="718.86" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="129.8" y="629" width="0.2" height="15.0" fill="rgb(244,193,43)" rx="2" ry="2" />
<text  x="132.83" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (1 samples, 0.02%)</title><rect x="184.7" y="1797" width="0.1" height="15.0" fill="rgb(227,54,44)" rx="2" ry="2" />
<text  x="187.66" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.1" y="1109" width="0.2" height="15.0" fill="rgb(229,47,32)" rx="2" ry="2" />
<text  x="1172.14" y="1119.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::~__si_class_type_info (1 samples, 0.02%)</title><rect x="83.3" y="2037" width="0.2" height="15.0" fill="rgb(245,10,52)" rx="2" ry="2" />
<text  x="86.30" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="1957" width="0.1" height="15.0" fill="rgb(223,194,26)" rx="2" ry="2" />
<text  x="1173.06" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="129.6" y="1173" width="0.2" height="15.0" fill="rgb(246,156,9)" rx="2" ry="2" />
<text  x="132.64" y="1183.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="1095.7" y="2005" width="0.1" height="15.0" fill="rgb(206,31,44)" rx="2" ry="2" />
<text  x="1098.65" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1169.5" y="117" width="0.6" height="15.0" fill="rgb(250,104,25)" rx="2" ry="2" />
<text  x="1172.51" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="549" width="0.1" height="15.0" fill="rgb(205,99,17)" rx="2" ry="2" />
<text  x="1173.06" y="559.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="180.6" y="1669" width="0.2" height="15.0" fill="rgb(247,71,30)" rx="2" ry="2" />
<text  x="183.60" y="1679.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="880.6" y="2005" width="0.1" height="15.0" fill="rgb(245,201,48)" rx="2" ry="2" />
<text  x="883.55" y="2015.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="443.3" y="1941" width="0.4" height="15.0" fill="rgb(214,96,46)" rx="2" ry="2" />
<text  x="446.34" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="130.4" y="1237" width="0.2" height="15.0" fill="rgb(210,150,21)" rx="2" ry="2" />
<text  x="133.38" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.0" y="1173" width="0.1" height="15.0" fill="rgb(244,114,29)" rx="2" ry="2" />
<text  x="1171.95" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="129.6" y="1205" width="0.2" height="15.0" fill="rgb(241,119,39)" rx="2" ry="2" />
<text  x="132.64" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1169.5" y="101" width="0.6" height="15.0" fill="rgb(215,110,15)" rx="2" ry="2" />
<text  x="1172.51" y="111.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt;@plt (3 samples, 0.05%)</title><rect x="865.0" y="2037" width="0.6" height="15.0" fill="rgb(209,184,53)" rx="2" ry="2" />
<text  x="868.04" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (124 samples, 1.94%)</title><rect x="100.3" y="1813" width="22.9" height="15.0" fill="rgb(218,78,31)" rx="2" ry="2" />
<text  x="103.29" y="1823.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.8" y="1733" width="0.2" height="15.0" fill="rgb(249,44,45)" rx="2" ry="2" />
<text  x="1171.77" y="1743.5" ></text>
</g>
<g >
<title>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::dump (2 samples, 0.03%)</title><rect x="586.6" y="1957" width="0.4" height="15.0" fill="rgb(227,54,54)" rx="2" ry="2" />
<text  x="589.61" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.2" y="1813" width="0.2" height="15.0" fill="rgb(235,89,52)" rx="2" ry="2" />
<text  x="1173.24" y="1823.5" ></text>
</g>
<g >
<title>onmt::unicode::get_lower (9 samples, 0.14%)</title><rect x="760.7" y="1893" width="1.7" height="15.0" fill="rgb(242,116,17)" rx="2" ry="2" />
<text  x="763.72" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.0" y="1141" width="0.1" height="15.0" fill="rgb(208,154,44)" rx="2" ry="2" />
<text  x="1171.95" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="129.6" y="1029" width="0.2" height="15.0" fill="rgb(224,120,32)" rx="2" ry="2" />
<text  x="132.64" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.1" y="389" width="0.2" height="15.0" fill="rgb(248,79,4)" rx="2" ry="2" />
<text  x="1172.14" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="157.3" y="1733" width="0.2" height="15.0" fill="rgb(243,51,45)" rx="2" ry="2" />
<text  x="160.34" y="1743.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_Alloc_node&gt; (1 samples, 0.02%)</title><rect x="587.4" y="1973" width="0.1" height="15.0" fill="rgb(246,179,47)" rx="2" ry="2" />
<text  x="590.35" y="1983.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (4 samples, 0.06%)</title><rect x="182.3" y="1653" width="0.7" height="15.0" fill="rgb(227,219,7)" rx="2" ry="2" />
<text  x="185.26" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (25 samples, 0.39%)</title><rect x="873.7" y="2021" width="4.6" height="15.0" fill="rgb(209,30,36)" rx="2" ry="2" />
<text  x="876.72" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (35 samples, 0.55%)</title><rect x="130.6" y="1621" width="6.4" height="15.0" fill="rgb(240,128,25)" rx="2" ry="2" />
<text  x="133.57" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="129.8" y="725" width="0.2" height="15.0" fill="rgb(208,43,20)" rx="2" ry="2" />
<text  x="132.83" y="735.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_sync (1 samples, 0.02%)</title><rect x="880.4" y="2005" width="0.2" height="15.0" fill="rgb(239,59,45)" rx="2" ry="2" />
<text  x="883.37" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="1733" width="0.3" height="15.0" fill="rgb(220,64,6)" rx="2" ry="2" />
<text  x="82.98" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.6" y="485" width="0.2" height="15.0" fill="rgb(237,50,48)" rx="2" ry="2" />
<text  x="1171.58" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.8" y="741" width="0.2" height="15.0" fill="rgb(210,225,0)" rx="2" ry="2" />
<text  x="1171.77" y="751.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="833.8" y="1861" width="0.2" height="15.0" fill="rgb(226,33,35)" rx="2" ry="2" />
<text  x="836.84" y="1871.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="587.4" y="1957" width="0.1" height="15.0" fill="rgb(223,198,20)" rx="2" ry="2" />
<text  x="590.35" y="1967.5" ></text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.05%)</title><rect x="175.8" y="1621" width="0.6" height="15.0" fill="rgb(227,94,39)" rx="2" ry="2" />
<text  x="178.80" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.8" y="405" width="0.2" height="15.0" fill="rgb(233,121,27)" rx="2" ry="2" />
<text  x="1171.77" y="415.5" ></text>
</g>
<g >
<title>page_fault (29 samples, 0.45%)</title><rect x="418.2" y="1941" width="5.4" height="15.0" fill="rgb(233,55,21)" rx="2" ry="2" />
<text  x="421.23" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="130.0" y="1045" width="0.2" height="15.0" fill="rgb(228,184,35)" rx="2" ry="2" />
<text  x="133.01" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (21 samples, 0.33%)</title><rect x="137.0" y="1701" width="3.9" height="15.0" fill="rgb(224,133,12)" rx="2" ry="2" />
<text  x="140.03" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="129.6" y="805" width="0.2" height="15.0" fill="rgb(234,221,41)" rx="2" ry="2" />
<text  x="132.64" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.1" y="277" width="0.2" height="15.0" fill="rgb(234,180,51)" rx="2" ry="2" />
<text  x="1172.14" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.6" y="1573" width="0.2" height="15.0" fill="rgb(233,15,20)" rx="2" ry="2" />
<text  x="1171.58" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="878.3" y="2021" width="0.6" height="15.0" fill="rgb(220,12,38)" rx="2" ry="2" />
<text  x="881.34" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.2" y="1301" width="0.2" height="15.0" fill="rgb(205,143,43)" rx="2" ry="2" />
<text  x="1173.24" y="1311.5" ></text>
</g>
<g >
<title>malloc@plt (1 samples, 0.02%)</title><rect x="174.7" y="1637" width="0.2" height="15.0" fill="rgb(209,59,21)" rx="2" ry="2" />
<text  x="177.69" y="1647.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt;@plt (1 samples, 0.02%)</title><rect x="106.0" y="1589" width="0.2" height="15.0" fill="rgb(249,115,17)" rx="2" ry="2" />
<text  x="109.01" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="129.8" y="597" width="0.2" height="15.0" fill="rgb(236,110,35)" rx="2" ry="2" />
<text  x="132.83" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="1333" width="0.1" height="15.0" fill="rgb(239,188,20)" rx="2" ry="2" />
<text  x="1173.06" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.6" y="1317" width="0.2" height="15.0" fill="rgb(242,181,13)" rx="2" ry="2" />
<text  x="1171.58" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.8" y="485" width="0.2" height="15.0" fill="rgb(246,17,1)" rx="2" ry="2" />
<text  x="1171.77" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (1 samples, 0.02%)</title><rect x="156.4" y="1829" width="0.2" height="15.0" fill="rgb(224,129,29)" rx="2" ry="2" />
<text  x="159.42" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.8" y="1925" width="0.2" height="15.0" fill="rgb(232,5,4)" rx="2" ry="2" />
<text  x="1171.77" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (21 samples, 0.33%)</title><rect x="137.0" y="1717" width="3.9" height="15.0" fill="rgb(245,70,27)" rx="2" ry="2" />
<text  x="140.03" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="453" width="0.1" height="15.0" fill="rgb(229,28,31)" rx="2" ry="2" />
<text  x="1173.06" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct (3 samples, 0.05%)</title><rect x="1133.1" y="2053" width="0.6" height="15.0" fill="rgb(247,216,4)" rx="2" ry="2" />
<text  x="1136.13" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="1381" width="0.1" height="15.0" fill="rgb(207,169,44)" rx="2" ry="2" />
<text  x="1173.06" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.6" y="1877" width="0.2" height="15.0" fill="rgb(217,214,33)" rx="2" ry="2" />
<text  x="1171.58" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.1" y="469" width="0.2" height="15.0" fill="rgb(243,165,24)" rx="2" ry="2" />
<text  x="1172.14" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="129.6" y="117" width="0.2" height="15.0" fill="rgb(229,138,50)" rx="2" ry="2" />
<text  x="132.64" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.06%)</title><rect x="1169.3" y="1157" width="0.8" height="15.0" fill="rgb(245,22,22)" rx="2" ry="2" />
<text  x="1172.32" y="1167.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1095.5" y="2005" width="0.2" height="15.0" fill="rgb(233,40,26)" rx="2" ry="2" />
<text  x="1098.47" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.0" y="245" width="0.1" height="15.0" fill="rgb(226,167,17)" rx="2" ry="2" />
<text  x="1171.95" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.8" y="1781" width="0.2" height="15.0" fill="rgb(254,142,23)" rx="2" ry="2" />
<text  x="1171.77" y="1791.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (2 samples, 0.03%)</title><rect x="439.6" y="1957" width="0.4" height="15.0" fill="rgb(222,152,41)" rx="2" ry="2" />
<text  x="442.64" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="129.6" y="357" width="0.2" height="15.0" fill="rgb(217,100,9)" rx="2" ry="2" />
<text  x="132.64" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (6 samples, 0.09%)</title><rect x="169.5" y="1605" width="1.1" height="15.0" fill="rgb(227,169,19)" rx="2" ry="2" />
<text  x="172.52" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.1" y="949" width="0.2" height="15.0" fill="rgb(243,83,16)" rx="2" ry="2" />
<text  x="1172.14" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="129.6" y="1381" width="0.2" height="15.0" fill="rgb(206,33,46)" rx="2" ry="2" />
<text  x="132.64" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="157.2" y="1797" width="0.3" height="15.0" fill="rgb(211,14,40)" rx="2" ry="2" />
<text  x="160.15" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="565" width="0.1" height="15.0" fill="rgb(222,121,30)" rx="2" ry="2" />
<text  x="1173.06" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="129.6" y="581" width="0.2" height="15.0" fill="rgb(236,132,9)" rx="2" ry="2" />
<text  x="132.64" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.09%)</title><rect x="1169.0" y="2037" width="1.1" height="15.0" fill="rgb(209,1,9)" rx="2" ry="2" />
<text  x="1171.95" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.6" y="469" width="0.2" height="15.0" fill="rgb(246,136,42)" rx="2" ry="2" />
<text  x="1171.58" y="479.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="1477" width="0.3" height="15.0" fill="rgb(226,210,38)" rx="2" ry="2" />
<text  x="82.98" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.6" y="1701" width="0.2" height="15.0" fill="rgb(213,46,32)" rx="2" ry="2" />
<text  x="1171.58" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="157.2" y="1765" width="0.3" height="15.0" fill="rgb(210,10,41)" rx="2" ry="2" />
<text  x="160.15" y="1775.5" ></text>
</g>
<g >
<title>onmt::add_final_token&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (12 samples, 0.19%)</title><rect x="598.2" y="1893" width="2.3" height="15.0" fill="rgb(248,70,24)" rx="2" ry="2" />
<text  x="601.25" y="1903.5" ></text>
</g>
<g >
<title>onmt::unicode::cp_to_utf8[abi:cxx11] (2 samples, 0.03%)</title><rect x="632.0" y="1877" width="0.4" height="15.0" fill="rgb(208,144,43)" rx="2" ry="2" />
<text  x="635.03" y="1887.5" ></text>
</g>
<g >
<title>operator new[] (3 samples, 0.05%)</title><rect x="1118.0" y="2053" width="0.5" height="15.0" fill="rgb(244,32,9)" rx="2" ry="2" />
<text  x="1120.99" y="2063.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (5 samples, 0.08%)</title><rect x="153.6" y="1669" width="1.0" height="15.0" fill="rgb(252,182,33)" rx="2" ry="2" />
<text  x="156.65" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (2 samples, 0.03%)</title><rect x="193.3" y="1797" width="0.4" height="15.0" fill="rgb(208,61,33)" rx="2" ry="2" />
<text  x="196.34" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.0" y="997" width="0.1" height="15.0" fill="rgb(254,178,37)" rx="2" ry="2" />
<text  x="1171.95" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="129.8" y="1141" width="0.2" height="15.0" fill="rgb(250,129,23)" rx="2" ry="2" />
<text  x="132.83" y="1151.5" ></text>
</g>
<g >
<title>TAgencyRating::ScoreUrl (147 samples, 2.30%)</title><rect x="130.6" y="1973" width="27.1" height="15.0" fill="rgb(250,141,31)" rx="2" ry="2" />
<text  x="133.57" y="1983.5" >T..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="129.8" y="1157" width="0.2" height="15.0" fill="rgb(250,229,20)" rx="2" ry="2" />
<text  x="132.83" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.2" y="1685" width="0.2" height="15.0" fill="rgb(233,0,25)" rx="2" ry="2" />
<text  x="1173.24" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="129.6" y="421" width="0.2" height="15.0" fill="rgb(242,220,22)" rx="2" ry="2" />
<text  x="132.64" y="431.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="309" width="0.3" height="15.0" fill="rgb(215,48,15)" rx="2" ry="2" />
<text  x="82.98" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.8" y="1909" width="0.2" height="15.0" fill="rgb(231,39,5)" rx="2" ry="2" />
<text  x="1171.77" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="597" width="0.1" height="15.0" fill="rgb(218,14,47)" rx="2" ry="2" />
<text  x="1173.06" y="607.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="83.3" y="1989" width="0.2" height="15.0" fill="rgb(237,0,33)" rx="2" ry="2" />
<text  x="86.30" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="821" width="0.3" height="15.0" fill="rgb(241,40,45)" rx="2" ry="2" />
<text  x="82.98" y="831.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::basic_json (2 samples, 0.03%)</title><rect x="588.3" y="1813" width="0.3" height="15.0" fill="rgb(242,228,46)" rx="2" ry="2" />
<text  x="591.28" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="130.4" y="1365" width="0.2" height="15.0" fill="rgb(207,222,7)" rx="2" ry="2" />
<text  x="133.38" y="1375.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt;@plt (1 samples, 0.02%)</title><rect x="184.5" y="1669" width="0.2" height="15.0" fill="rgb(223,190,6)" rx="2" ry="2" />
<text  x="187.48" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="157.3" y="1749" width="0.2" height="15.0" fill="rgb(244,155,45)" rx="2" ry="2" />
<text  x="160.34" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.6" y="1157" width="0.2" height="15.0" fill="rgb(243,146,2)" rx="2" ry="2" />
<text  x="1171.58" y="1167.5" ></text>
</g>
<g >
<title>Eigen::PlainObjectBase&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt;::PlainObjectBase&lt;Eigen::Product&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt;, 0&gt; &gt; (1 samples, 0.02%)</title><rect x="158.6" y="1989" width="0.2" height="15.0" fill="rgb(230,36,40)" rx="2" ry="2" />
<text  x="161.63" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.6" y="597" width="0.2" height="15.0" fill="rgb(239,9,26)" rx="2" ry="2" />
<text  x="1171.58" y="607.5" ></text>
</g>
<g >
<title>cfree (2 samples, 0.03%)</title><rect x="119.5" y="1669" width="0.4" height="15.0" fill="rgb(211,188,54)" rx="2" ry="2" />
<text  x="122.49" y="1679.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.03%)</title><rect x="559.1" y="1925" width="0.4" height="15.0" fill="rgb(242,174,26)" rx="2" ry="2" />
<text  x="562.10" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (2 samples, 0.03%)</title><rect x="159.6" y="1701" width="0.3" height="15.0" fill="rgb(234,115,40)" rx="2" ry="2" />
<text  x="162.55" y="1711.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (1 samples, 0.02%)</title><rect x="122.6" y="1653" width="0.2" height="15.0" fill="rgb(244,184,49)" rx="2" ry="2" />
<text  x="125.63" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_BracketMatcher (1 samples, 0.02%)</title><rect x="100.3" y="1621" width="0.2" height="15.0" fill="rgb(230,180,14)" rx="2" ry="2" />
<text  x="103.29" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.2" y="805" width="0.2" height="15.0" fill="rgb(211,186,1)" rx="2" ry="2" />
<text  x="1173.24" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.8" y="1653" width="0.2" height="15.0" fill="rgb(241,189,19)" rx="2" ry="2" />
<text  x="1171.77" y="1663.5" ></text>
</g>
<g >
<title>fasttext::QuantMatrix::addRowToVector (16 samples, 0.25%)</title><rect x="1092.7" y="2053" width="3.0" height="15.0" fill="rgb(252,124,40)" rx="2" ry="2" />
<text  x="1095.70" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="129.6" y="693" width="0.2" height="15.0" fill="rgb(214,132,25)" rx="2" ry="2" />
<text  x="132.64" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.0" y="69" width="0.1" height="15.0" fill="rgb(247,113,4)" rx="2" ry="2" />
<text  x="1171.95" y="79.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="1717" width="0.3" height="15.0" fill="rgb(220,119,29)" rx="2" ry="2" />
<text  x="82.98" y="1727.5" ></text>
</g>
<g >
<title>std::vector&lt;TNewsCluster, std::allocator&lt;TNewsCluster&gt; &gt;::_M_realloc_insert&lt;TNewsCluster const&amp;&gt; (1 samples, 0.02%)</title><rect x="588.1" y="2005" width="0.2" height="15.0" fill="rgb(228,17,0)" rx="2" ry="2" />
<text  x="591.09" y="2015.5" ></text>
</g>
<g >
<title>page_fault (16 samples, 0.25%)</title><rect x="714.0" y="1861" width="3.0" height="15.0" fill="rgb(207,194,42)" rx="2" ry="2" />
<text  x="717.01" y="1871.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt;@plt (2 samples, 0.03%)</title><rect x="164.2" y="1589" width="0.3" height="15.0" fill="rgb(250,44,47)" rx="2" ry="2" />
<text  x="167.17" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="1909" width="0.1" height="15.0" fill="rgb(241,109,8)" rx="2" ry="2" />
<text  x="1173.06" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (35 samples, 0.55%)</title><rect x="130.6" y="1605" width="6.4" height="15.0" fill="rgb(216,210,38)" rx="2" ry="2" />
<text  x="133.57" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="42.5" y="2037" width="0.4" height="15.0" fill="rgb(218,33,13)" rx="2" ry="2" />
<text  x="45.50" y="2047.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::_M_do_set (1,429 samples, 22.36%)</title><rect x="589.2" y="2021" width="263.8" height="15.0" fill="rgb(212,218,16)" rx="2" ry="2" />
<text  x="592.20" y="2031.5" >std::__future_base::_State_baseV2::..</text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="84.4" y="1941" width="0.2" height="15.0" fill="rgb(217,54,40)" rx="2" ry="2" />
<text  x="87.41" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.2" y="293" width="0.2" height="15.0" fill="rgb(246,181,17)" rx="2" ry="2" />
<text  x="1173.24" y="303.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (1 samples, 0.02%)</title><rect x="154.6" y="1669" width="0.2" height="15.0" fill="rgb(241,121,37)" rx="2" ry="2" />
<text  x="157.57" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="129.6" y="389" width="0.2" height="15.0" fill="rgb(227,186,27)" rx="2" ry="2" />
<text  x="132.64" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace_aux (1 samples, 0.02%)</title><rect x="1138.3" y="2053" width="0.2" height="15.0" fill="rgb(242,122,50)" rx="2" ry="2" />
<text  x="1141.30" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="157.2" y="1749" width="0.1" height="15.0" fill="rgb(250,25,0)" rx="2" ry="2" />
<text  x="160.15" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="1685" width="0.3" height="15.0" fill="rgb(218,3,30)" rx="2" ry="2" />
<text  x="82.98" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="130.4" y="1717" width="0.2" height="15.0" fill="rgb(214,156,40)" rx="2" ry="2" />
<text  x="133.38" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.8" y="821" width="0.2" height="15.0" fill="rgb(209,147,34)" rx="2" ry="2" />
<text  x="1171.77" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="869" width="0.1" height="15.0" fill="rgb(227,139,32)" rx="2" ry="2" />
<text  x="1173.06" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.1" y="1397" width="0.2" height="15.0" fill="rgb(235,213,39)" rx="2" ry="2" />
<text  x="1172.14" y="1407.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="485" width="0.3" height="15.0" fill="rgb(206,127,31)" rx="2" ry="2" />
<text  x="82.98" y="495.5" ></text>
</g>
<g >
<title>GetHost (146 samples, 2.28%)</title><rect x="130.6" y="1957" width="26.9" height="15.0" fill="rgb(252,221,16)" rx="2" ry="2" />
<text  x="133.57" y="1967.5" >G..</text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="79.8" y="1941" width="0.2" height="15.0" fill="rgb(222,143,16)" rx="2" ry="2" />
<text  x="82.79" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="130.4" y="1557" width="0.2" height="15.0" fill="rgb(207,147,12)" rx="2" ry="2" />
<text  x="133.38" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_quantifier (1 samples, 0.02%)</title><rect x="193.2" y="1813" width="0.1" height="15.0" fill="rgb(230,112,0)" rx="2" ry="2" />
<text  x="196.16" y="1823.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (1 samples, 0.02%)</title><rect x="128.7" y="1685" width="0.2" height="15.0" fill="rgb(215,190,50)" rx="2" ry="2" />
<text  x="131.72" y="1695.5" ></text>
</g>
<g >
<title>cfree (1 samples, 0.02%)</title><rect x="131.9" y="1573" width="0.1" height="15.0" fill="rgb(212,67,13)" rx="2" ry="2" />
<text  x="134.86" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.1" y="677" width="0.2" height="15.0" fill="rgb(245,130,46)" rx="2" ry="2" />
<text  x="1172.14" y="687.5" ></text>
</g>
<g >
<title>vfs_read (2 samples, 0.03%)</title><rect x="906.4" y="1973" width="0.4" height="15.0" fill="rgb(245,169,33)" rx="2" ry="2" />
<text  x="909.40" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (32 samples, 0.50%)</title><rect x="106.6" y="1733" width="5.9" height="15.0" fill="rgb(250,121,22)" rx="2" ry="2" />
<text  x="109.56" y="1743.5" ></text>
</g>
<g >
<title>malloc (68 samples, 1.06%)</title><rect x="1096.9" y="2053" width="12.6" height="15.0" fill="rgb(205,18,0)" rx="2" ry="2" />
<text  x="1099.94" y="2063.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.02%)</title><rect x="84.4" y="1957" width="0.2" height="15.0" fill="rgb(212,229,17)" rx="2" ry="2" />
<text  x="87.41" y="1967.5" ></text>
</g>
<g >
<title>std::operator&gt;&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;@plt (1 samples, 0.02%)</title><rect x="335.7" y="1989" width="0.2" height="15.0" fill="rgb(218,113,46)" rx="2" ry="2" />
<text  x="338.70" y="1999.5" ></text>
</g>
<g >
<title>main (2,734 samples, 42.78%)</title><rect x="84.0" y="2021" width="504.8" height="15.0" fill="rgb(211,200,18)" rx="2" ry="2" />
<text  x="87.04" y="2031.5" >main</text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="164.7" y="1717" width="0.2" height="15.0" fill="rgb(236,192,9)" rx="2" ry="2" />
<text  x="167.72" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="421" width="0.3" height="15.0" fill="rgb(243,12,24)" rx="2" ry="2" />
<text  x="82.98" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.2" y="37" width="0.2" height="15.0" fill="rgb(248,77,9)" rx="2" ry="2" />
<text  x="1173.24" y="47.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.3" y="53" width="0.2" height="15.0" fill="rgb(233,173,40)" rx="2" ry="2" />
<text  x="1172.32" y="63.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_erase (1 samples, 0.02%)</title><rect x="85.3" y="1941" width="0.2" height="15.0" fill="rgb(230,5,19)" rx="2" ry="2" />
<text  x="88.33" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="901" width="0.3" height="15.0" fill="rgb(231,27,48)" rx="2" ry="2" />
<text  x="82.98" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (66 samples, 1.03%)</title><rect x="100.3" y="1765" width="12.2" height="15.0" fill="rgb(224,85,21)" rx="2" ry="2" />
<text  x="103.29" y="1775.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id@plt (1 samples, 0.02%)</title><rect x="171.6" y="1621" width="0.1" height="15.0" fill="rgb(244,136,48)" rx="2" ry="2" />
<text  x="174.56" y="1631.5" ></text>
</g>
<g >
<title>__lru_cache_add (1 samples, 0.02%)</title><rect x="715.9" y="1765" width="0.1" height="15.0" fill="rgb(212,155,34)" rx="2" ry="2" />
<text  x="718.86" y="1775.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt;@plt (1 samples, 0.02%)</title><rect x="129.1" y="1701" width="0.2" height="15.0" fill="rgb(216,197,47)" rx="2" ry="2" />
<text  x="132.09" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="129.8" y="421" width="0.2" height="15.0" fill="rgb(248,36,39)" rx="2" ry="2" />
<text  x="132.83" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="130.0" y="1253" width="0.2" height="15.0" fill="rgb(236,197,30)" rx="2" ry="2" />
<text  x="133.01" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.06%)</title><rect x="1169.3" y="965" width="0.8" height="15.0" fill="rgb(233,82,34)" rx="2" ry="2" />
<text  x="1172.32" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.0" y="165" width="0.1" height="15.0" fill="rgb(208,57,31)" rx="2" ry="2" />
<text  x="1171.95" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (2 samples, 0.03%)</title><rect x="184.8" y="1717" width="0.4" height="15.0" fill="rgb(235,24,43)" rx="2" ry="2" />
<text  x="187.85" y="1727.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="174.9" y="1637" width="0.2" height="15.0" fill="rgb(246,102,17)" rx="2" ry="2" />
<text  x="177.88" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.6" y="1509" width="0.2" height="15.0" fill="rgb(225,180,38)" rx="2" ry="2" />
<text  x="1171.58" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="485" width="0.1" height="15.0" fill="rgb(218,52,47)" rx="2" ry="2" />
<text  x="1173.06" y="495.5" ></text>
</g>
<g >
<title>std::istream::sentry::sentry (5 samples, 0.08%)</title><rect x="866.5" y="2005" width="0.9" height="15.0" fill="rgb(234,152,54)" rx="2" ry="2" />
<text  x="869.52" y="2015.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_erase (1 samples, 0.02%)</title><rect x="85.3" y="1925" width="0.2" height="15.0" fill="rgb(239,108,26)" rx="2" ry="2" />
<text  x="88.33" y="1935.5" ></text>
</g>
<g >
<title>handle_mm_fault (13 samples, 0.20%)</title><rect x="714.2" y="1813" width="2.4" height="15.0" fill="rgb(212,190,4)" rx="2" ry="2" />
<text  x="717.20" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="1797" width="0.3" height="15.0" fill="rgb(247,11,11)" rx="2" ry="2" />
<text  x="82.98" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.06%)</title><rect x="1169.3" y="1461" width="0.8" height="15.0" fill="rgb(210,18,18)" rx="2" ry="2" />
<text  x="1172.32" y="1471.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="559.1" y="1909" width="0.2" height="15.0" fill="rgb(241,68,32)" rx="2" ry="2" />
<text  x="562.10" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (42 samples, 0.66%)</title><rect x="185.2" y="1717" width="7.8" height="15.0" fill="rgb(253,215,34)" rx="2" ry="2" />
<text  x="188.22" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="133" width="0.3" height="15.0" fill="rgb(220,95,6)" rx="2" ry="2" />
<text  x="82.98" y="143.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (3 samples, 0.05%)</title><rect x="183.9" y="1669" width="0.6" height="15.0" fill="rgb(229,60,29)" rx="2" ry="2" />
<text  x="186.93" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.8" y="53" width="0.2" height="15.0" fill="rgb(248,13,28)" rx="2" ry="2" />
<text  x="1171.77" y="63.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="129.6" y="1269" width="0.2" height="15.0" fill="rgb(231,87,40)" rx="2" ry="2" />
<text  x="132.64" y="1279.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve@plt (1 samples, 0.02%)</title><rect x="847.7" y="1893" width="0.2" height="15.0" fill="rgb(232,157,11)" rx="2" ry="2" />
<text  x="850.69" y="1903.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (1 samples, 0.02%)</title><rect x="116.9" y="1621" width="0.2" height="15.0" fill="rgb(216,30,46)" rx="2" ry="2" />
<text  x="119.90" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="1413" width="0.1" height="15.0" fill="rgb(226,168,24)" rx="2" ry="2" />
<text  x="1173.06" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.06%)</title><rect x="1169.3" y="661" width="0.8" height="15.0" fill="rgb(227,70,29)" rx="2" ry="2" />
<text  x="1172.32" y="671.5" ></text>
</g>
<g >
<title>malloc@plt (2 samples, 0.03%)</title><rect x="187.8" y="1701" width="0.4" height="15.0" fill="rgb(241,118,36)" rx="2" ry="2" />
<text  x="190.80" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (12 samples, 0.19%)</title><rect x="180.8" y="1669" width="2.2" height="15.0" fill="rgb(237,114,47)" rx="2" ry="2" />
<text  x="183.79" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="129.8" y="997" width="0.2" height="15.0" fill="rgb(226,105,38)" rx="2" ry="2" />
<text  x="132.83" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.0" y="773" width="0.1" height="15.0" fill="rgb(249,183,9)" rx="2" ry="2" />
<text  x="1171.95" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.1" y="1221" width="0.2" height="15.0" fill="rgb(245,208,16)" rx="2" ry="2" />
<text  x="1172.14" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="130.4" y="853" width="0.2" height="15.0" fill="rgb(216,224,53)" rx="2" ry="2" />
<text  x="133.38" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (72 samples, 1.13%)</title><rect x="159.6" y="1749" width="13.2" height="15.0" fill="rgb(222,11,42)" rx="2" ry="2" />
<text  x="162.55" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.0" y="1669" width="0.1" height="15.0" fill="rgb(227,209,34)" rx="2" ry="2" />
<text  x="1171.95" y="1679.5" ></text>
</g>
<g >
<title>operator new@plt (1 samples, 0.02%)</title><rect x="132.8" y="1573" width="0.2" height="15.0" fill="rgb(206,154,31)" rx="2" ry="2" />
<text  x="135.78" y="1583.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_stringbuf (27 samples, 0.42%)</title><rect x="865.8" y="2037" width="5.0" height="15.0" fill="rgb(239,188,7)" rx="2" ry="2" />
<text  x="868.78" y="2047.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (36 samples, 0.56%)</title><rect x="1138.5" y="2053" width="6.6" height="15.0" fill="rgb(212,7,24)" rx="2" ry="2" />
<text  x="1141.49" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="1765" width="0.1" height="15.0" fill="rgb(206,54,51)" rx="2" ry="2" />
<text  x="1173.06" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.2" y="1397" width="0.2" height="15.0" fill="rgb(229,15,52)" rx="2" ry="2" />
<text  x="1173.24" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.8" y="677" width="0.2" height="15.0" fill="rgb(218,87,34)" rx="2" ry="2" />
<text  x="1171.77" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.8" y="789" width="0.2" height="15.0" fill="rgb(226,185,2)" rx="2" ry="2" />
<text  x="1171.77" y="799.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (9 samples, 0.14%)</title><rect x="850.3" y="1941" width="1.6" height="15.0" fill="rgb(221,225,47)" rx="2" ry="2" />
<text  x="853.27" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.6" y="1637" width="0.2" height="15.0" fill="rgb(232,7,38)" rx="2" ry="2" />
<text  x="1171.58" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="157.2" y="1429" width="0.1" height="15.0" fill="rgb(242,100,32)" rx="2" ry="2" />
<text  x="160.15" y="1439.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (1 samples, 0.02%)</title><rect x="83.9" y="1909" width="0.1" height="15.0" fill="rgb(208,75,24)" rx="2" ry="2" />
<text  x="86.85" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (21 samples, 0.33%)</title><rect x="137.0" y="1637" width="3.9" height="15.0" fill="rgb(238,117,10)" rx="2" ry="2" />
<text  x="140.03" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="181" width="0.3" height="15.0" fill="rgb(244,174,34)" rx="2" ry="2" />
<text  x="82.98" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.1" y="933" width="0.2" height="15.0" fill="rgb(220,88,4)" rx="2" ry="2" />
<text  x="1172.14" y="943.5" ></text>
</g>
<g >
<title>finish_task_switch (2 samples, 0.03%)</title><rect x="99.9" y="1829" width="0.4" height="15.0" fill="rgb(247,59,29)" rx="2" ry="2" />
<text  x="102.92" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.2" y="101" width="0.2" height="15.0" fill="rgb(243,39,52)" rx="2" ry="2" />
<text  x="1173.24" y="111.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.8" y="309" width="0.2" height="15.0" fill="rgb(213,162,22)" rx="2" ry="2" />
<text  x="1171.77" y="319.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (2 samples, 0.03%)</title><rect x="206.3" y="1973" width="0.3" height="15.0" fill="rgb(245,57,47)" rx="2" ry="2" />
<text  x="209.27" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="157.2" y="1349" width="0.1" height="15.0" fill="rgb(248,41,25)" rx="2" ry="2" />
<text  x="160.15" y="1359.5" ></text>
</g>
<g >
<title>__lru_cache_add (2 samples, 0.03%)</title><rect x="421.9" y="1845" width="0.4" height="15.0" fill="rgb(241,190,15)" rx="2" ry="2" />
<text  x="424.92" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.06%)</title><rect x="1169.3" y="1317" width="0.8" height="15.0" fill="rgb(240,202,7)" rx="2" ry="2" />
<text  x="1172.32" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.8" y="1285" width="0.2" height="15.0" fill="rgb(249,9,32)" rx="2" ry="2" />
<text  x="1171.77" y="1295.5" ></text>
</g>
<g >
<title>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::dump (2 samples, 0.03%)</title><rect x="586.6" y="1973" width="0.4" height="15.0" fill="rgb(216,181,46)" rx="2" ry="2" />
<text  x="589.61" y="1983.5" ></text>
</g>
<g >
<title>std::locale::locale (1 samples, 0.02%)</title><rect x="879.6" y="2005" width="0.2" height="15.0" fill="rgb(226,1,26)" rx="2" ry="2" />
<text  x="882.63" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="129.8" y="389" width="0.2" height="15.0" fill="rgb(240,22,16)" rx="2" ry="2" />
<text  x="132.83" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="129.8" y="1269" width="0.2" height="15.0" fill="rgb(242,177,51)" rx="2" ry="2" />
<text  x="132.83" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.06%)</title><rect x="1169.3" y="1413" width="0.8" height="15.0" fill="rgb(248,126,46)" rx="2" ry="2" />
<text  x="1172.32" y="1423.5" ></text>
</g>
<g >
<title>malloc@plt (1 samples, 0.02%)</title><rect x="132.4" y="1573" width="0.2" height="15.0" fill="rgb(207,162,28)" rx="2" ry="2" />
<text  x="135.41" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="157.2" y="1589" width="0.1" height="15.0" fill="rgb(235,81,35)" rx="2" ry="2" />
<text  x="160.15" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.0" y="213" width="0.1" height="15.0" fill="rgb(206,76,3)" rx="2" ry="2" />
<text  x="1171.95" y="223.5" ></text>
</g>
<g >
<title>fasttext::ProductQuantizer::addcode (7 samples, 0.11%)</title><rect x="81.6" y="2021" width="1.3" height="15.0" fill="rgb(239,167,22)" rx="2" ry="2" />
<text  x="84.64" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.2" y="1797" width="0.2" height="15.0" fill="rgb(247,79,41)" rx="2" ry="2" />
<text  x="1173.24" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.06%)</title><rect x="1169.3" y="1301" width="0.8" height="15.0" fill="rgb(236,46,38)" rx="2" ry="2" />
<text  x="1172.32" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="130.4" y="965" width="0.2" height="15.0" fill="rgb(224,164,47)" rx="2" ry="2" />
<text  x="133.38" y="975.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="517" width="0.3" height="15.0" fill="rgb(228,62,40)" rx="2" ry="2" />
<text  x="82.98" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.6" y="1845" width="0.2" height="15.0" fill="rgb(213,48,35)" rx="2" ry="2" />
<text  x="1171.58" y="1855.5" ></text>
</g>
<g >
<title>fasttext::Vector::addVector (10 samples, 0.16%)</title><rect x="566.9" y="1973" width="1.8" height="15.0" fill="rgb(252,30,19)" rx="2" ry="2" />
<text  x="569.86" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="837" width="0.1" height="15.0" fill="rgb(251,47,29)" rx="2" ry="2" />
<text  x="1173.06" y="847.5" ></text>
</g>
<g >
<title>cfree (2 samples, 0.03%)</title><rect x="167.1" y="1621" width="0.4" height="15.0" fill="rgb(254,143,54)" rx="2" ry="2" />
<text  x="170.12" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.6" y="277" width="0.2" height="15.0" fill="rgb(239,199,29)" rx="2" ry="2" />
<text  x="1171.58" y="287.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="1861" width="0.3" height="15.0" fill="rgb(210,20,44)" rx="2" ry="2" />
<text  x="82.98" y="1871.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::push_back (1 samples, 0.02%)</title><rect x="587.4" y="2005" width="0.1" height="15.0" fill="rgb(227,219,35)" rx="2" ry="2" />
<text  x="590.35" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.6" y="213" width="0.2" height="15.0" fill="rgb(224,65,25)" rx="2" ry="2" />
<text  x="1171.58" y="223.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::computeSubwords (84 samples, 1.31%)</title><rect x="935.4" y="2053" width="15.5" height="15.0" fill="rgb(208,106,53)" rx="2" ry="2" />
<text  x="938.39" y="2063.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find (1 samples, 0.02%)</title><rect x="1145.1" y="2053" width="0.2" height="15.0" fill="rgb(224,213,18)" rx="2" ry="2" />
<text  x="1148.13" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="194.6" y="1925" width="0.4" height="15.0" fill="rgb(240,0,22)" rx="2" ry="2" />
<text  x="197.63" y="1935.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="117.8" y="1637" width="0.2" height="15.0" fill="rgb(220,95,52)" rx="2" ry="2" />
<text  x="120.83" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (39 samples, 0.61%)</title><rect x="165.3" y="1637" width="7.2" height="15.0" fill="rgb(207,144,49)" rx="2" ry="2" />
<text  x="168.28" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.6" y="1525" width="0.2" height="15.0" fill="rgb(230,91,15)" rx="2" ry="2" />
<text  x="1171.58" y="1535.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.03%)</title><rect x="121.7" y="1653" width="0.4" height="15.0" fill="rgb(219,126,11)" rx="2" ry="2" />
<text  x="124.70" y="1663.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (4 samples, 0.06%)</title><rect x="127.6" y="1685" width="0.8" height="15.0" fill="rgb(239,174,28)" rx="2" ry="2" />
<text  x="130.61" y="1695.5" ></text>
</g>
<g >
<title>GetHost (164 samples, 2.57%)</title><rect x="100.3" y="1973" width="30.3" height="15.0" fill="rgb(250,110,54)" rx="2" ry="2" />
<text  x="103.29" y="1983.5" >Ge..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="129.8" y="789" width="0.2" height="15.0" fill="rgb(208,29,49)" rx="2" ry="2" />
<text  x="132.83" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="129.8" y="661" width="0.2" height="15.0" fill="rgb(221,33,0)" rx="2" ry="2" />
<text  x="132.83" y="671.5" ></text>
</g>
<g >
<title>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::dump_escaped (2 samples, 0.03%)</title><rect x="586.6" y="1909" width="0.4" height="15.0" fill="rgb(226,94,18)" rx="2" ry="2" />
<text  x="589.61" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.6" y="613" width="0.2" height="15.0" fill="rgb(245,157,11)" rx="2" ry="2" />
<text  x="1171.58" y="623.5" ></text>
</g>
<g >
<title>onmt::Tokenizer::tokenize (1,390 samples, 21.75%)</title><rect x="593.6" y="1925" width="256.7" height="15.0" fill="rgb(224,185,16)" rx="2" ry="2" />
<text  x="596.63" y="1935.5" >onmt::Tokenizer::tokenize</text>
</g>
<g >
<title>schedule (1 samples, 0.02%)</title><rect x="1091.8" y="1989" width="0.2" height="15.0" fill="rgb(249,190,11)" rx="2" ry="2" />
<text  x="1094.77" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.08%)</title><rect x="129.6" y="1813" width="1.0" height="15.0" fill="rgb(236,160,4)" rx="2" ry="2" />
<text  x="132.64" y="1823.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.05%)</title><rect x="99.7" y="1957" width="0.6" height="15.0" fill="rgb(237,168,16)" rx="2" ry="2" />
<text  x="102.73" y="1967.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace@plt (2 samples, 0.03%)</title><rect x="851.9" y="1941" width="0.4" height="15.0" fill="rgb(230,104,5)" rx="2" ry="2" />
<text  x="854.93" y="1951.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (3 samples, 0.05%)</title><rect x="85.7" y="1925" width="0.6" height="15.0" fill="rgb(245,95,41)" rx="2" ry="2" />
<text  x="88.70" y="1935.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::getSubwords (4 samples, 0.06%)</title><rect x="559.5" y="1973" width="0.7" height="15.0" fill="rgb(243,89,43)" rx="2" ry="2" />
<text  x="562.47" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.6" y="1733" width="0.2" height="15.0" fill="rgb(208,118,8)" rx="2" ry="2" />
<text  x="1171.58" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="194.6" y="1237" width="0.4" height="15.0" fill="rgb(216,90,42)" rx="2" ry="2" />
<text  x="197.63" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.8" y="469" width="0.2" height="15.0" fill="rgb(224,103,20)" rx="2" ry="2" />
<text  x="1171.77" y="479.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (2 samples, 0.03%)</title><rect x="122.8" y="1669" width="0.4" height="15.0" fill="rgb(252,127,19)" rx="2" ry="2" />
<text  x="125.81" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.06%)</title><rect x="1169.3" y="853" width="0.8" height="15.0" fill="rgb(219,203,53)" rx="2" ry="2" />
<text  x="1172.32" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (21 samples, 0.33%)</title><rect x="137.0" y="1653" width="3.9" height="15.0" fill="rgb(219,96,26)" rx="2" ry="2" />
<text  x="140.03" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.1" y="293" width="0.2" height="15.0" fill="rgb(205,191,32)" rx="2" ry="2" />
<text  x="1172.14" y="303.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="631.7" y="1829" width="0.1" height="15.0" fill="rgb(238,116,11)" rx="2" ry="2" />
<text  x="634.66" y="1839.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_erase (1 samples, 0.02%)</title><rect x="85.3" y="1973" width="0.2" height="15.0" fill="rgb(244,109,31)" rx="2" ry="2" />
<text  x="88.33" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.6" y="1109" width="0.2" height="15.0" fill="rgb(218,96,38)" rx="2" ry="2" />
<text  x="1171.58" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (138 samples, 2.16%)</title><rect x="130.6" y="1813" width="25.4" height="15.0" fill="rgb(221,48,26)" rx="2" ry="2" />
<text  x="133.57" y="1823.5" >s..</text>
</g>
<g >
<title>__generic_file_write_iter (1 samples, 0.02%)</title><rect x="880.6" y="1893" width="0.1" height="15.0" fill="rgb(217,101,1)" rx="2" ry="2" />
<text  x="883.55" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="130.4" y="1221" width="0.2" height="15.0" fill="rgb(212,219,21)" rx="2" ry="2" />
<text  x="133.38" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.08%)</title><rect x="1169.1" y="1717" width="1.0" height="15.0" fill="rgb(225,43,10)" rx="2" ry="2" />
<text  x="1172.14" y="1727.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (1 samples, 0.02%)</title><rect x="191.9" y="1685" width="0.1" height="15.0" fill="rgb(229,227,37)" rx="2" ry="2" />
<text  x="194.87" y="1695.5" ></text>
</g>
<g >
<title>__dynamic_cast (8 samples, 0.13%)</title><rect x="123.7" y="1701" width="1.5" height="15.0" fill="rgb(252,223,34)" rx="2" ry="2" />
<text  x="126.73" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="805" width="0.3" height="15.0" fill="rgb(208,41,37)" rx="2" ry="2" />
<text  x="82.98" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="157.2" y="1397" width="0.1" height="15.0" fill="rgb(228,123,37)" rx="2" ry="2" />
<text  x="160.15" y="1407.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="717.0" y="1829" width="0.2" height="15.0" fill="rgb(231,34,12)" rx="2" ry="2" />
<text  x="719.97" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.8" y="229" width="0.2" height="15.0" fill="rgb(246,87,51)" rx="2" ry="2" />
<text  x="1171.77" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.13%)</title><rect x="1168.6" y="2053" width="1.5" height="15.0" fill="rgb(240,228,27)" rx="2" ry="2" />
<text  x="1171.58" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (29 samples, 0.45%)</title><rect x="100.8" y="1621" width="5.4" height="15.0" fill="rgb(232,98,34)" rx="2" ry="2" />
<text  x="103.84" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (1 samples, 0.02%)</title><rect x="106.2" y="1669" width="0.2" height="15.0" fill="rgb(239,105,46)" rx="2" ry="2" />
<text  x="109.19" y="1679.5" ></text>
</g>
<g >
<title>fasttext::Vector::addVector (10 samples, 0.16%)</title><rect x="320.9" y="1989" width="1.9" height="15.0" fill="rgb(235,219,53)" rx="2" ry="2" />
<text  x="323.92" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.1" y="1381" width="0.2" height="15.0" fill="rgb(212,165,54)" rx="2" ry="2" />
<text  x="1172.14" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.0" y="1205" width="0.1" height="15.0" fill="rgb(254,65,19)" rx="2" ry="2" />
<text  x="1171.95" y="1215.5" ></text>
</g>
<g >
<title>__dynamic_cast (4 samples, 0.06%)</title><rect x="151.1" y="1685" width="0.7" height="15.0" fill="rgb(211,159,11)" rx="2" ry="2" />
<text  x="154.06" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.06%)</title><rect x="1169.3" y="1477" width="0.8" height="15.0" fill="rgb(246,12,33)" rx="2" ry="2" />
<text  x="1172.32" y="1487.5" ></text>
</g>
<g >
<title>cfree (1 samples, 0.02%)</title><rect x="151.8" y="1685" width="0.2" height="15.0" fill="rgb(234,194,18)" rx="2" ry="2" />
<text  x="154.80" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.0" y="1077" width="0.1" height="15.0" fill="rgb(230,131,43)" rx="2" ry="2" />
<text  x="1171.95" y="1087.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="1205" width="0.3" height="15.0" fill="rgb(207,191,52)" rx="2" ry="2" />
<text  x="82.98" y="1215.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="79.2" y="1909" width="0.2" height="15.0" fill="rgb(224,34,34)" rx="2" ry="2" />
<text  x="82.24" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (35 samples, 0.55%)</title><rect x="130.6" y="1685" width="6.4" height="15.0" fill="rgb(215,221,41)" rx="2" ry="2" />
<text  x="133.57" y="1695.5" ></text>
</g>
<g >
<title>do_page_fault (16 samples, 0.25%)</title><rect x="714.0" y="1845" width="3.0" height="15.0" fill="rgb(215,191,1)" rx="2" ry="2" />
<text  x="717.01" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.8" y="1445" width="0.2" height="15.0" fill="rgb(238,141,44)" rx="2" ry="2" />
<text  x="1171.77" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (32 samples, 0.50%)</title><rect x="123.4" y="1813" width="5.9" height="15.0" fill="rgb(253,62,5)" rx="2" ry="2" />
<text  x="126.37" y="1823.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="132.6" y="1573" width="0.2" height="15.0" fill="rgb(211,22,7)" rx="2" ry="2" />
<text  x="135.60" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (1 samples, 0.02%)</title><rect x="100.3" y="1701" width="0.2" height="15.0" fill="rgb(210,118,46)" rx="2" ry="2" />
<text  x="103.29" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.06%)</title><rect x="1169.3" y="1189" width="0.8" height="15.0" fill="rgb(205,21,10)" rx="2" ry="2" />
<text  x="1172.32" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="901" width="0.1" height="15.0" fill="rgb(216,6,21)" rx="2" ry="2" />
<text  x="1173.06" y="911.5" ></text>
</g>
<g >
<title>fasttext::FastText::getDimension (13 samples, 0.20%)</title><rect x="315.6" y="1989" width="2.4" height="15.0" fill="rgb(207,5,53)" rx="2" ry="2" />
<text  x="318.57" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="130.4" y="917" width="0.2" height="15.0" fill="rgb(223,44,31)" rx="2" ry="2" />
<text  x="133.38" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.0" y="1445" width="0.1" height="15.0" fill="rgb(221,173,10)" rx="2" ry="2" />
<text  x="1171.95" y="1455.5" ></text>
</g>
<g >
<title>TFastTextEmbedder::GetSentenceEmbedding (60 samples, 0.94%)</title><rect x="195.7" y="1989" width="11.1" height="15.0" fill="rgb(235,101,28)" rx="2" ry="2" />
<text  x="198.74" y="1999.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (41 samples, 0.64%)</title><rect x="416.0" y="1957" width="7.6" height="15.0" fill="rgb(252,113,10)" rx="2" ry="2" />
<text  x="419.01" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="677" width="0.1" height="15.0" fill="rgb(237,217,14)" rx="2" ry="2" />
<text  x="1173.06" y="687.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.03%)</title><rect x="138.9" y="1589" width="0.3" height="15.0" fill="rgb(221,4,6)" rx="2" ry="2" />
<text  x="141.87" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.06%)</title><rect x="129.6" y="1541" width="0.8" height="15.0" fill="rgb(249,165,23)" rx="2" ry="2" />
<text  x="132.64" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.8" y="197" width="0.2" height="15.0" fill="rgb(217,204,12)" rx="2" ry="2" />
<text  x="1171.77" y="207.5" ></text>
</g>
<g >
<title>fasttext::FastText::getWordVector (14 samples, 0.22%)</title><rect x="562.8" y="1973" width="2.6" height="15.0" fill="rgb(244,116,31)" rx="2" ry="2" />
<text  x="565.80" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="1701" width="0.3" height="15.0" fill="rgb(234,212,39)" rx="2" ry="2" />
<text  x="82.98" y="1711.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (2 samples, 0.03%)</title><rect x="559.1" y="1941" width="0.4" height="15.0" fill="rgb(252,196,7)" rx="2" ry="2" />
<text  x="562.10" y="1951.5" ></text>
</g>
<g >
<title>std::has_facet&lt;std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="83.1" y="2021" width="0.2" height="15.0" fill="rgb(209,47,27)" rx="2" ry="2" />
<text  x="86.12" y="2031.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::do_tolower (2 samples, 0.03%)</title><rect x="110.8" y="1621" width="0.4" height="15.0" fill="rgb(230,114,14)" rx="2" ry="2" />
<text  x="113.81" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="129.8" y="693" width="0.2" height="15.0" fill="rgb(251,155,6)" rx="2" ry="2" />
<text  x="132.83" y="703.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::pushHash (259 samples, 4.05%)</title><rect x="998.0" y="2053" width="47.8" height="15.0" fill="rgb(251,198,24)" rx="2" ry="2" />
<text  x="1000.98" y="2063.5" >fast..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="129.8" y="949" width="0.2" height="15.0" fill="rgb(254,170,14)" rx="2" ry="2" />
<text  x="132.83" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.06%)</title><rect x="129.6" y="1621" width="0.8" height="15.0" fill="rgb(222,207,19)" rx="2" ry="2" />
<text  x="132.64" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.6" y="1717" width="0.2" height="15.0" fill="rgb(226,126,33)" rx="2" ry="2" />
<text  x="1171.58" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (22 samples, 0.34%)</title><rect x="188.4" y="1701" width="4.0" height="15.0" fill="rgb(232,168,8)" rx="2" ry="2" />
<text  x="191.36" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.8" y="1317" width="0.2" height="15.0" fill="rgb(215,97,46)" rx="2" ry="2" />
<text  x="1171.77" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.09%)</title><rect x="1169.0" y="1941" width="1.1" height="15.0" fill="rgb(250,154,6)" rx="2" ry="2" />
<text  x="1171.95" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (28 samples, 0.44%)</title><rect x="140.9" y="1733" width="5.2" height="15.0" fill="rgb(223,54,54)" rx="2" ry="2" />
<text  x="143.91" y="1743.5" ></text>
</g>
<g >
<title>fasttext::Vector::norm (36 samples, 0.56%)</title><rect x="325.9" y="1989" width="6.7" height="15.0" fill="rgb(234,178,12)" rx="2" ry="2" />
<text  x="328.91" y="1999.5" ></text>
</g>
<g >
<title>memcpy@plt (1 samples, 0.02%)</title><rect x="615.4" y="1893" width="0.2" height="15.0" fill="rgb(253,48,11)" rx="2" ry="2" />
<text  x="618.42" y="1903.5" ></text>
</g>
<g >
<title>DetectCategory (3 samples, 0.05%)</title><rect x="590.1" y="1973" width="0.6" height="15.0" fill="rgb(245,45,54)" rx="2" ry="2" />
<text  x="593.12" y="1983.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="167.5" y="1621" width="0.2" height="15.0" fill="rgb(217,89,36)" rx="2" ry="2" />
<text  x="170.49" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.0" y="709" width="0.1" height="15.0" fill="rgb(252,97,14)" rx="2" ry="2" />
<text  x="1171.95" y="719.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (1 samples, 0.02%)</title><rect x="880.6" y="1909" width="0.1" height="15.0" fill="rgb(218,72,0)" rx="2" ry="2" />
<text  x="883.55" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.1" y="405" width="0.2" height="15.0" fill="rgb(206,183,28)" rx="2" ry="2" />
<text  x="1172.14" y="415.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::json_value::destroy (2 samples, 0.03%)</title><rect x="85.1" y="1989" width="0.4" height="15.0" fill="rgb(213,219,19)" rx="2" ry="2" />
<text  x="88.15" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.8" y="1797" width="0.2" height="15.0" fill="rgb(250,120,11)" rx="2" ry="2" />
<text  x="1171.77" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.09%)</title><rect x="129.5" y="1941" width="1.1" height="15.0" fill="rgb(217,182,23)" rx="2" ry="2" />
<text  x="132.46" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.06%)</title><rect x="1169.3" y="565" width="0.8" height="15.0" fill="rgb(222,211,48)" rx="2" ry="2" />
<text  x="1172.32" y="575.5" ></text>
</g>
<g >
<title>__munmap (2 samples, 0.03%)</title><rect x="443.3" y="1973" width="0.4" height="15.0" fill="rgb(239,1,33)" rx="2" ry="2" />
<text  x="446.34" y="1983.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (60 samples, 0.94%)</title><rect x="883.3" y="2053" width="11.1" height="15.0" fill="rgb(232,28,18)" rx="2" ry="2" />
<text  x="886.32" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (8 samples, 0.13%)</title><rect x="143.7" y="1621" width="1.5" height="15.0" fill="rgb(215,65,26)" rx="2" ry="2" />
<text  x="146.68" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="1637" width="0.3" height="15.0" fill="rgb(233,108,38)" rx="2" ry="2" />
<text  x="82.98" y="1647.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="161.2" y="1589" width="0.2" height="15.0" fill="rgb(220,100,12)" rx="2" ry="2" />
<text  x="164.22" y="1599.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1045.6" y="2005" width="0.2" height="15.0" fill="rgb(252,107,5)" rx="2" ry="2" />
<text  x="1048.62" y="2015.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id@plt (1 samples, 0.02%)</title><rect x="136.3" y="1573" width="0.2" height="15.0" fill="rgb(231,83,49)" rx="2" ry="2" />
<text  x="139.29" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.2" y="1237" width="0.2" height="15.0" fill="rgb(227,112,26)" rx="2" ry="2" />
<text  x="1173.24" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.1" y="1029" width="0.2" height="15.0" fill="rgb(251,126,40)" rx="2" ry="2" />
<text  x="1172.14" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (27 samples, 0.42%)</title><rect x="118.2" y="1749" width="5.0" height="15.0" fill="rgb(216,3,4)" rx="2" ry="2" />
<text  x="121.20" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.8" y="1141" width="0.2" height="15.0" fill="rgb(237,175,46)" rx="2" ry="2" />
<text  x="1171.77" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="1525" width="0.1" height="15.0" fill="rgb(227,181,48)" rx="2" ry="2" />
<text  x="1173.06" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (158 samples, 2.47%)</title><rect x="100.3" y="1845" width="29.2" height="15.0" fill="rgb(205,27,1)" rx="2" ry="2" />
<text  x="103.29" y="1855.5" >st..</text>
</g>
<g >
<title>__alloc_pages_nodemask (7 samples, 0.11%)</title><rect x="36.4" y="1941" width="1.3" height="15.0" fill="rgb(254,229,45)" rx="2" ry="2" />
<text  x="39.40" y="1951.5" ></text>
</g>
<g >
<title>std::operator&gt;&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (5 samples, 0.08%)</title><rect x="583.3" y="1973" width="0.9" height="15.0" fill="rgb(249,29,25)" rx="2" ry="2" />
<text  x="586.29" y="1983.5" ></text>
</g>
<g >
<title>page_fault (24 samples, 0.38%)</title><rect x="34.9" y="2037" width="4.5" height="15.0" fill="rgb(241,223,7)" rx="2" ry="2" />
<text  x="37.93" y="2047.5" ></text>
</g>
<g >
<title>swake_up_one (1 samples, 0.02%)</title><rect x="1045.6" y="1925" width="0.2" height="15.0" fill="rgb(215,1,26)" rx="2" ry="2" />
<text  x="1048.62" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.6" y="901" width="0.2" height="15.0" fill="rgb(253,120,37)" rx="2" ry="2" />
<text  x="1171.58" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.2" y="1365" width="0.2" height="15.0" fill="rgb(225,39,20)" rx="2" ry="2" />
<text  x="1173.24" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="130.4" y="1509" width="0.2" height="15.0" fill="rgb(242,42,4)" rx="2" ry="2" />
<text  x="133.38" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.8" y="1189" width="0.2" height="15.0" fill="rgb(248,106,29)" rx="2" ry="2" />
<text  x="1171.77" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.1" y="1285" width="0.2" height="15.0" fill="rgb(209,37,14)" rx="2" ry="2" />
<text  x="1172.14" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.2" y="1541" width="0.2" height="15.0" fill="rgb(244,201,23)" rx="2" ry="2" />
<text  x="1173.24" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.8" y="1845" width="0.2" height="15.0" fill="rgb(229,145,25)" rx="2" ry="2" />
<text  x="1171.77" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.1" y="1157" width="0.2" height="15.0" fill="rgb(245,25,14)" rx="2" ry="2" />
<text  x="1172.14" y="1167.5" ></text>
</g>
<g >
<title>std::ios_base::~ios_base (4 samples, 0.06%)</title><rect x="879.1" y="2037" width="0.7" height="15.0" fill="rgb(247,210,11)" rx="2" ry="2" />
<text  x="882.08" y="2047.5" ></text>
</g>
<g >
<title>__libc_read (3 samples, 0.05%)</title><rect x="83.5" y="2037" width="0.5" height="15.0" fill="rgb(235,204,43)" rx="2" ry="2" />
<text  x="86.48" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (1 samples, 0.02%)</title><rect x="150.5" y="1701" width="0.2" height="15.0" fill="rgb(247,14,12)" rx="2" ry="2" />
<text  x="153.51" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="157.2" y="1701" width="0.1" height="15.0" fill="rgb(215,43,3)" rx="2" ry="2" />
<text  x="160.15" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="130.4" y="1381" width="0.2" height="15.0" fill="rgb(228,201,44)" rx="2" ry="2" />
<text  x="133.38" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="194.8" y="1221" width="0.2" height="15.0" fill="rgb(251,121,5)" rx="2" ry="2" />
<text  x="197.82" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="129.6" y="645" width="0.2" height="15.0" fill="rgb(250,127,43)" rx="2" ry="2" />
<text  x="132.64" y="655.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="419.0" y="1861" width="0.2" height="15.0" fill="rgb(222,202,43)" rx="2" ry="2" />
<text  x="421.97" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.06%)</title><rect x="1169.3" y="885" width="0.8" height="15.0" fill="rgb(249,32,36)" rx="2" ry="2" />
<text  x="1172.32" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="157.2" y="1317" width="0.1" height="15.0" fill="rgb(215,220,51)" rx="2" ry="2" />
<text  x="160.15" y="1327.5" ></text>
</g>
<g >
<title>operator delete[] (4 samples, 0.06%)</title><rect x="1114.5" y="2053" width="0.7" height="15.0" fill="rgb(237,70,2)" rx="2" ry="2" />
<text  x="1117.48" y="2063.5" ></text>
</g>
<g >
<title>std::__insertion_sort&lt;__gnu_cxx::__normal_iterator&lt;TWeightedNewsCluster*, std::vector&lt;TWeightedNewsCluster, std::allocator&lt;TWeightedNewsCluster&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;Rank (1 samples, 0.02%)</title><rect x="157.9" y="1957" width="0.2" height="15.0" fill="rgb(212,182,12)" rx="2" ry="2" />
<text  x="160.89" y="1967.5" ></text>
</g>
<g >
<title>memcmp@plt (9 samples, 0.14%)</title><rect x="1110.8" y="2053" width="1.7" height="15.0" fill="rgb(211,96,12)" rx="2" ry="2" />
<text  x="1113.79" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="880.0" y="2021" width="0.6" height="15.0" fill="rgb(231,9,29)" rx="2" ry="2" />
<text  x="883.00" y="2031.5" ></text>
</g>
<g >
<title>__x64_sys_futex (3 samples, 0.05%)</title><rect x="99.7" y="1925" width="0.6" height="15.0" fill="rgb(246,165,30)" rx="2" ry="2" />
<text  x="102.73" y="1935.5" ></text>
</g>
<g >
<title>__lru_cache_add (3 samples, 0.05%)</title><rect x="430.2" y="1861" width="0.6" height="15.0" fill="rgb(218,5,19)" rx="2" ry="2" />
<text  x="433.23" y="1871.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="851.7" y="1893" width="0.2" height="15.0" fill="rgb(206,86,22)" rx="2" ry="2" />
<text  x="854.75" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt;,  (6 samples, 0.09%)</title><rect x="129.5" y="1957" width="1.1" height="15.0" fill="rgb(235,78,5)" rx="2" ry="2" />
<text  x="132.46" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.8" y="1509" width="0.2" height="15.0" fill="rgb(223,139,1)" rx="2" ry="2" />
<text  x="1171.77" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.06%)</title><rect x="1169.3" y="1429" width="0.8" height="15.0" fill="rgb(229,108,49)" rx="2" ry="2" />
<text  x="1172.32" y="1439.5" ></text>
</g>
<g >
<title>std::vector&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::allocator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;::_M_realloc_insert&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; const&amp;&gt; (2 samples, 0.03%)</title><rect x="588.3" y="2005" width="0.3" height="15.0" fill="rgb(246,181,7)" rx="2" ry="2" />
<text  x="591.28" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (31 samples, 0.49%)</title><rect x="112.5" y="1749" width="5.7" height="15.0" fill="rgb(227,162,44)" rx="2" ry="2" />
<text  x="115.47" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.8" y="1941" width="0.2" height="15.0" fill="rgb(218,132,11)" rx="2" ry="2" />
<text  x="1171.77" y="1951.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="177.5" y="1621" width="0.1" height="15.0" fill="rgb(216,94,9)" rx="2" ry="2" />
<text  x="180.46" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.06%)</title><rect x="129.6" y="1669" width="0.8" height="15.0" fill="rgb(250,65,19)" rx="2" ry="2" />
<text  x="132.64" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.8" y="1077" width="0.2" height="15.0" fill="rgb(231,225,42)" rx="2" ry="2" />
<text  x="1171.77" y="1087.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; const&amp;&gt; (2 samples, 0.03%)</title><rect x="588.3" y="1941" width="0.3" height="15.0" fill="rgb(248,194,19)" rx="2" ry="2" />
<text  x="591.28" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.0" y="517" width="0.1" height="15.0" fill="rgb(234,187,25)" rx="2" ry="2" />
<text  x="1171.95" y="527.5" ></text>
</g>
<g >
<title>tlb_flush_mmu_free (2 samples, 0.03%)</title><rect x="443.3" y="1813" width="0.4" height="15.0" fill="rgb(237,102,34)" rx="2" ry="2" />
<text  x="446.34" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.8" y="1573" width="0.2" height="15.0" fill="rgb(208,111,52)" rx="2" ry="2" />
<text  x="1171.77" y="1583.5" ></text>
</g>
<g >
<title>malloc@plt (1 samples, 0.02%)</title><rect x="85.0" y="1989" width="0.1" height="15.0" fill="rgb(241,158,50)" rx="2" ry="2" />
<text  x="87.96" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (31 samples, 0.49%)</title><rect x="112.5" y="1765" width="5.7" height="15.0" fill="rgb(220,35,30)" rx="2" ry="2" />
<text  x="115.47" y="1775.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (2 samples, 0.03%)</title><rect x="144.0" y="1605" width="0.4" height="15.0" fill="rgb(205,101,14)" rx="2" ry="2" />
<text  x="147.04" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="129.8" y="1461" width="0.6" height="15.0" fill="rgb(220,151,1)" rx="2" ry="2" />
<text  x="132.83" y="1471.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_erase (1 samples, 0.02%)</title><rect x="85.3" y="1957" width="0.2" height="15.0" fill="rgb(246,23,27)" rx="2" ry="2" />
<text  x="88.33" y="1967.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (2 samples, 0.03%)</title><rect x="135.2" y="1557" width="0.4" height="15.0" fill="rgb(235,132,36)" rx="2" ry="2" />
<text  x="138.18" y="1567.5" ></text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.02%)</title><rect x="1095.7" y="1925" width="0.1" height="15.0" fill="rgb(240,193,49)" rx="2" ry="2" />
<text  x="1098.65" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="129.6" y="53" width="0.2" height="15.0" fill="rgb(219,200,25)" rx="2" ry="2" />
<text  x="132.64" y="63.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (27 samples, 0.42%)</title><rect x="118.2" y="1717" width="5.0" height="15.0" fill="rgb(245,213,17)" rx="2" ry="2" />
<text  x="121.20" y="1727.5" ></text>
</g>
<g >
<title>TDocument::TDocument (2 samples, 0.03%)</title><rect x="336.1" y="2005" width="0.3" height="15.0" fill="rgb(237,32,52)" rx="2" ry="2" />
<text  x="339.06" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="1861" width="0.1" height="15.0" fill="rgb(223,6,50)" rx="2" ry="2" />
<text  x="1173.06" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.0" y="101" width="0.1" height="15.0" fill="rgb(225,226,25)" rx="2" ry="2" />
<text  x="1171.95" y="111.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.6" y="1685" width="0.2" height="15.0" fill="rgb(247,113,4)" rx="2" ry="2" />
<text  x="1171.58" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="157.2" y="1669" width="0.1" height="15.0" fill="rgb(214,72,4)" rx="2" ry="2" />
<text  x="160.15" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="129.8" y="1125" width="0.2" height="15.0" fill="rgb(228,208,26)" rx="2" ry="2" />
<text  x="132.83" y="1135.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (1 samples, 0.02%)</title><rect x="431.2" y="1861" width="0.1" height="15.0" fill="rgb(226,199,8)" rx="2" ry="2" />
<text  x="434.15" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.2" y="1573" width="0.2" height="15.0" fill="rgb(246,207,32)" rx="2" ry="2" />
<text  x="1173.24" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="129.8" y="1477" width="0.6" height="15.0" fill="rgb(206,77,14)" rx="2" ry="2" />
<text  x="132.83" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (1 samples, 0.02%)</title><rect x="118.0" y="1669" width="0.2" height="15.0" fill="rgb(231,28,34)" rx="2" ry="2" />
<text  x="121.01" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.0" y="1253" width="0.1" height="15.0" fill="rgb(210,7,24)" rx="2" ry="2" />
<text  x="1171.95" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.0" y="1013" width="0.1" height="15.0" fill="rgb(250,219,46)" rx="2" ry="2" />
<text  x="1171.95" y="1023.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="501" width="0.3" height="15.0" fill="rgb(239,194,26)" rx="2" ry="2" />
<text  x="82.98" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="129.8" y="933" width="0.2" height="15.0" fill="rgb(253,137,22)" rx="2" ry="2" />
<text  x="132.83" y="943.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="78.5" y="2005" width="0.2" height="15.0" fill="rgb(242,64,42)" rx="2" ry="2" />
<text  x="81.50" y="2015.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::reserve (5 samples, 0.08%)</title><rect x="644.8" y="1877" width="0.9" height="15.0" fill="rgb(209,116,36)" rx="2" ry="2" />
<text  x="647.77" y="1887.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.02%)</title><rect x="631.7" y="1797" width="0.1" height="15.0" fill="rgb(224,146,44)" rx="2" ry="2" />
<text  x="634.66" y="1807.5" ></text>
</g>
<g >
<title>cfree (10 samples, 0.16%)</title><rect x="613.6" y="1893" width="1.8" height="15.0" fill="rgb(253,126,48)" rx="2" ry="2" />
<text  x="616.57" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.8" y="1829" width="0.2" height="15.0" fill="rgb(214,62,40)" rx="2" ry="2" />
<text  x="1171.77" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.8" y="981" width="0.2" height="15.0" fill="rgb(235,27,5)" rx="2" ry="2" />
<text  x="1171.77" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.8" y="1989" width="0.2" height="15.0" fill="rgb(229,18,1)" rx="2" ry="2" />
<text  x="1171.77" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.2" y="1109" width="0.2" height="15.0" fill="rgb(219,60,8)" rx="2" ry="2" />
<text  x="1173.24" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (44 samples, 0.69%)</title><rect x="184.8" y="1781" width="8.2" height="15.0" fill="rgb(224,92,45)" rx="2" ry="2" />
<text  x="187.85" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="78.5" y="2021" width="0.2" height="15.0" fill="rgb(230,40,31)" rx="2" ry="2" />
<text  x="81.50" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="130.4" y="1605" width="0.2" height="15.0" fill="rgb(238,166,35)" rx="2" ry="2" />
<text  x="133.38" y="1615.5" ></text>
</g>
<g >
<title>cfree (1 samples, 0.02%)</title><rect x="147.4" y="1653" width="0.2" height="15.0" fill="rgb(219,100,42)" rx="2" ry="2" />
<text  x="150.37" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="129.8" y="1333" width="0.2" height="15.0" fill="rgb(243,92,31)" rx="2" ry="2" />
<text  x="132.83" y="1343.5" ></text>
</g>
<g >
<title>[libm-2.27.so] (10 samples, 0.16%)</title><rect x="39.4" y="2053" width="1.8" height="15.0" fill="rgb(241,148,54)" rx="2" ry="2" />
<text  x="42.36" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.0" y="1221" width="0.1" height="15.0" fill="rgb(239,43,6)" rx="2" ry="2" />
<text  x="1171.95" y="1231.5" ></text>
</g>
<g >
<title>__pthread_once_slow (1,430 samples, 22.38%)</title><rect x="589.0" y="2037" width="264.0" height="15.0" fill="rgb(210,88,2)" rx="2" ry="2" />
<text  x="592.01" y="2047.5" >__pthread_once_slow</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (3 samples, 0.05%)</title><rect x="865.8" y="2005" width="0.5" height="15.0" fill="rgb(232,81,13)" rx="2" ry="2" />
<text  x="868.78" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.1" y="1141" width="0.2" height="15.0" fill="rgb(250,15,35)" rx="2" ry="2" />
<text  x="1172.14" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.06%)</title><rect x="1169.3" y="997" width="0.8" height="15.0" fill="rgb(242,2,41)" rx="2" ry="2" />
<text  x="1172.32" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.6" y="325" width="0.2" height="15.0" fill="rgb(238,51,23)" rx="2" ry="2" />
<text  x="1171.58" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="693" width="0.1" height="15.0" fill="rgb(232,71,17)" rx="2" ry="2" />
<text  x="1173.06" y="703.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="1445" width="0.3" height="15.0" fill="rgb(228,10,19)" rx="2" ry="2" />
<text  x="82.98" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.06%)</title><rect x="129.6" y="1493" width="0.8" height="15.0" fill="rgb(245,186,39)" rx="2" ry="2" />
<text  x="132.64" y="1503.5" ></text>
</g>
<g >
<title>mem_cgroup_throttle_swaprate (1 samples, 0.02%)</title><rect x="38.2" y="1941" width="0.2" height="15.0" fill="rgb(246,7,9)" rx="2" ry="2" />
<text  x="41.25" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (28 samples, 0.44%)</title><rect x="101.0" y="1605" width="5.2" height="15.0" fill="rgb(242,204,48)" rx="2" ry="2" />
<text  x="104.02" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="1813" width="0.3" height="15.0" fill="rgb(233,103,29)" rx="2" ry="2" />
<text  x="82.98" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (1 samples, 0.02%)</title><rect x="165.1" y="1637" width="0.2" height="15.0" fill="rgb(249,168,11)" rx="2" ry="2" />
<text  x="168.09" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="1525" width="0.3" height="15.0" fill="rgb(234,207,4)" rx="2" ry="2" />
<text  x="82.98" y="1535.5" ></text>
</g>
<g >
<title>try_to_wake_up (7 samples, 0.11%)</title><rect x="43.4" y="1909" width="1.3" height="15.0" fill="rgb(217,53,50)" rx="2" ry="2" />
<text  x="46.42" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.1" y="421" width="0.2" height="15.0" fill="rgb(206,123,14)" rx="2" ry="2" />
<text  x="1172.14" y="431.5" ></text>
</g>
<g >
<title>std::locale::locale (6 samples, 0.09%)</title><rect x="581.1" y="1973" width="1.1" height="15.0" fill="rgb(222,149,23)" rx="2" ry="2" />
<text  x="584.07" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="933" width="0.3" height="15.0" fill="rgb(223,209,25)" rx="2" ry="2" />
<text  x="82.98" y="943.5" ></text>
</g>
<g >
<title>malloc (2 samples, 0.03%)</title><rect x="108.0" y="1621" width="0.4" height="15.0" fill="rgb(242,103,35)" rx="2" ry="2" />
<text  x="111.04" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="1317" width="0.1" height="15.0" fill="rgb(252,189,8)" rx="2" ry="2" />
<text  x="1173.06" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="130.4" y="693" width="0.2" height="15.0" fill="rgb(254,204,28)" rx="2" ry="2" />
<text  x="133.38" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.0" y="869" width="0.1" height="15.0" fill="rgb(206,195,5)" rx="2" ry="2" />
<text  x="1171.95" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.0" y="1333" width="0.1" height="15.0" fill="rgb(208,79,16)" rx="2" ry="2" />
<text  x="1171.95" y="1343.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="79.8" y="1861" width="0.2" height="15.0" fill="rgb(250,152,29)" rx="2" ry="2" />
<text  x="82.79" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="129.6" y="757" width="0.2" height="15.0" fill="rgb(240,163,50)" rx="2" ry="2" />
<text  x="132.64" y="767.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::push_back (1 samples, 0.02%)</title><rect x="879.8" y="2037" width="0.2" height="15.0" fill="rgb(231,147,33)" rx="2" ry="2" />
<text  x="882.81" y="2047.5" ></text>
</g>
<g >
<title>unmap_region (1 samples, 0.02%)</title><rect x="584.8" y="1893" width="0.2" height="15.0" fill="rgb(205,104,23)" rx="2" ry="2" />
<text  x="587.77" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="130.4" y="757" width="0.2" height="15.0" fill="rgb(252,134,37)" rx="2" ry="2" />
<text  x="133.38" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.1" y="485" width="0.2" height="15.0" fill="rgb(224,1,37)" rx="2" ry="2" />
<text  x="1172.14" y="495.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::set (2 samples, 0.03%)</title><rect x="595.1" y="1909" width="0.4" height="15.0" fill="rgb(235,142,18)" rx="2" ry="2" />
<text  x="598.11" y="1919.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id@plt (1 samples, 0.02%)</title><rect x="333.7" y="1989" width="0.1" height="15.0" fill="rgb(210,146,45)" rx="2" ry="2" />
<text  x="336.66" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="194.6" y="1413" width="0.4" height="15.0" fill="rgb(205,66,51)" rx="2" ry="2" />
<text  x="197.63" y="1423.5" ></text>
</g>
<g >
<title>get_futex_key (1 samples, 0.02%)</title><rect x="43.2" y="1925" width="0.2" height="15.0" fill="rgb(218,53,17)" rx="2" ry="2" />
<text  x="46.23" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.2" y="1509" width="0.2" height="15.0" fill="rgb(252,126,26)" rx="2" ry="2" />
<text  x="1173.24" y="1519.5" ></text>
</g>
<g >
<title>alloc_pages_vma (9 samples, 0.14%)</title><rect x="714.2" y="1781" width="1.7" height="15.0" fill="rgb(241,87,16)" rx="2" ry="2" />
<text  x="717.20" y="1791.5" ></text>
</g>
<g >
<title>cfree (1 samples, 0.02%)</title><rect x="99.0" y="1957" width="0.2" height="15.0" fill="rgb(215,195,47)" rx="2" ry="2" />
<text  x="101.99" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.1" y="149" width="0.2" height="15.0" fill="rgb(253,125,0)" rx="2" ry="2" />
<text  x="1172.14" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (108 samples, 1.69%)</title><rect x="130.6" y="1797" width="19.9" height="15.0" fill="rgb(219,126,7)" rx="2" ry="2" />
<text  x="133.57" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.6" y="1765" width="0.2" height="15.0" fill="rgb(236,172,0)" rx="2" ry="2" />
<text  x="1171.58" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="157.2" y="1893" width="0.3" height="15.0" fill="rgb(221,65,0)" rx="2" ry="2" />
<text  x="160.15" y="1903.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="906.4" y="2037" width="0.4" height="15.0" fill="rgb(243,116,45)" rx="2" ry="2" />
<text  x="909.40" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.8" y="69" width="0.2" height="15.0" fill="rgb(210,165,51)" rx="2" ry="2" />
<text  x="1171.77" y="79.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (1 samples, 0.02%)</title><rect x="177.3" y="1621" width="0.2" height="15.0" fill="rgb(254,56,29)" rx="2" ry="2" />
<text  x="180.28" y="1631.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.02%)</title><rect x="84.4" y="1973" width="0.2" height="15.0" fill="rgb(209,204,52)" rx="2" ry="2" />
<text  x="87.41" y="1983.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; const*, std::vector&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::allocator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;*&gt; (1 samples, 0.02%)</title><rect x="588.5" y="1781" width="0.1" height="15.0" fill="rgb(241,34,12)" rx="2" ry="2" />
<text  x="591.46" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.0" y="693" width="0.1" height="15.0" fill="rgb(234,224,8)" rx="2" ry="2" />
<text  x="1171.95" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="194.6" y="1893" width="0.4" height="15.0" fill="rgb(220,164,16)" rx="2" ry="2" />
<text  x="197.63" y="1903.5" ></text>
</g>
<g >
<title>tlb_flush_mmu_free (1 samples, 0.02%)</title><rect x="585.7" y="1845" width="0.2" height="15.0" fill="rgb(242,100,46)" rx="2" ry="2" />
<text  x="588.69" y="1855.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="84.4" y="1925" width="0.2" height="15.0" fill="rgb(231,179,6)" rx="2" ry="2" />
<text  x="87.41" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.8" y="1365" width="0.2" height="15.0" fill="rgb(238,170,12)" rx="2" ry="2" />
<text  x="1171.77" y="1375.5" ></text>
</g>
<g >
<title>memchr@plt (1 samples, 0.02%)</title><rect x="1110.6" y="2053" width="0.2" height="15.0" fill="rgb(208,42,26)" rx="2" ry="2" />
<text  x="1113.61" y="2063.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (2 samples, 0.03%)</title><rect x="153.3" y="1669" width="0.3" height="15.0" fill="rgb(243,117,52)" rx="2" ry="2" />
<text  x="156.28" y="1679.5" ></text>
</g>
<g >
<title>__do_munmap (2 samples, 0.03%)</title><rect x="443.3" y="1893" width="0.4" height="15.0" fill="rgb(247,2,21)" rx="2" ry="2" />
<text  x="446.34" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.6" y="1077" width="0.2" height="15.0" fill="rgb(221,54,49)" rx="2" ry="2" />
<text  x="1171.58" y="1087.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="981" width="0.3" height="15.0" fill="rgb(222,34,46)" rx="2" ry="2" />
<text  x="82.98" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="373" width="0.1" height="15.0" fill="rgb(213,83,25)" rx="2" ry="2" />
<text  x="1173.06" y="383.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="421.9" y="1813" width="0.4" height="15.0" fill="rgb(214,161,36)" rx="2" ry="2" />
<text  x="424.92" y="1823.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt;@plt (1 samples, 0.02%)</title><rect x="172.3" y="1621" width="0.2" height="15.0" fill="rgb(226,14,19)" rx="2" ry="2" />
<text  x="175.29" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="1285" width="0.3" height="15.0" fill="rgb(213,158,44)" rx="2" ry="2" />
<text  x="82.98" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="1157" width="0.1" height="15.0" fill="rgb(206,92,32)" rx="2" ry="2" />
<text  x="1173.06" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="157.2" y="1493" width="0.1" height="15.0" fill="rgb(221,52,30)" rx="2" ry="2" />
<text  x="160.15" y="1503.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="1845" width="0.3" height="15.0" fill="rgb(254,140,11)" rx="2" ry="2" />
<text  x="82.98" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.8" y="661" width="0.2" height="15.0" fill="rgb(238,61,4)" rx="2" ry="2" />
<text  x="1171.77" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.06%)</title><rect x="129.6" y="1589" width="0.8" height="15.0" fill="rgb(242,189,50)" rx="2" ry="2" />
<text  x="132.64" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.6" y="677" width="0.2" height="15.0" fill="rgb(220,221,27)" rx="2" ry="2" />
<text  x="1171.58" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.06%)</title><rect x="1169.3" y="373" width="0.8" height="15.0" fill="rgb(231,75,8)" rx="2" ry="2" />
<text  x="1172.32" y="383.5" ></text>
</g>
<g >
<title>TDocument::PreprocessTextFields (1,415 samples, 22.14%)</title><rect x="591.0" y="1973" width="261.3" height="15.0" fill="rgb(252,185,44)" rx="2" ry="2" />
<text  x="594.05" y="1983.5" >TDocument::PreprocessTextFields</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.2" y="1013" width="0.2" height="15.0" fill="rgb(237,131,53)" rx="2" ry="2" />
<text  x="1173.24" y="1023.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="588.5" y="1749" width="0.1" height="15.0" fill="rgb(210,57,53)" rx="2" ry="2" />
<text  x="591.46" y="1759.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.03%)</title><rect x="880.0" y="2005" width="0.4" height="15.0" fill="rgb(244,153,21)" rx="2" ry="2" />
<text  x="883.00" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.2" y="405" width="0.2" height="15.0" fill="rgb(214,127,17)" rx="2" ry="2" />
<text  x="1173.24" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.2" y="437" width="0.2" height="15.0" fill="rgb(225,99,20)" rx="2" ry="2" />
<text  x="1173.24" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.06%)</title><rect x="1169.3" y="389" width="0.8" height="15.0" fill="rgb(237,79,40)" rx="2" ry="2" />
<text  x="1172.32" y="399.5" ></text>
</g>
<g >
<title>std::num_get&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_extract_int&lt;long&gt; (1 samples, 0.02%)</title><rect x="878.7" y="2005" width="0.2" height="15.0" fill="rgb(222,142,49)" rx="2" ry="2" />
<text  x="881.71" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.0" y="597" width="0.1" height="15.0" fill="rgb(250,24,25)" rx="2" ry="2" />
<text  x="1171.95" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.8" y="1269" width="0.2" height="15.0" fill="rgb(234,7,53)" rx="2" ry="2" />
<text  x="1171.77" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.2" y="325" width="0.2" height="15.0" fill="rgb(240,56,29)" rx="2" ry="2" />
<text  x="1173.24" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="129.6" y="149" width="0.2" height="15.0" fill="rgb(231,47,4)" rx="2" ry="2" />
<text  x="132.64" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (1 samples, 0.02%)</title><rect x="129.3" y="1829" width="0.2" height="15.0" fill="rgb(249,56,53)" rx="2" ry="2" />
<text  x="132.27" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.1" y="501" width="0.2" height="15.0" fill="rgb(209,221,50)" rx="2" ry="2" />
<text  x="1172.14" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="130.4" y="1045" width="0.2" height="15.0" fill="rgb(222,147,28)" rx="2" ry="2" />
<text  x="133.38" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.06%)</title><rect x="1169.3" y="197" width="0.8" height="15.0" fill="rgb(219,196,48)" rx="2" ry="2" />
<text  x="1172.32" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="129.8" y="757" width="0.2" height="15.0" fill="rgb(246,162,23)" rx="2" ry="2" />
<text  x="132.83" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (35 samples, 0.55%)</title><rect x="130.6" y="1717" width="6.4" height="15.0" fill="rgb(227,173,7)" rx="2" ry="2" />
<text  x="133.57" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.0" y="901" width="0.1" height="15.0" fill="rgb(249,183,52)" rx="2" ry="2" />
<text  x="1171.95" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.1" y="181" width="0.2" height="15.0" fill="rgb(208,117,26)" rx="2" ry="2" />
<text  x="1172.14" y="191.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (4 samples, 0.06%)</title><rect x="38.2" y="1957" width="0.8" height="15.0" fill="rgb(220,11,13)" rx="2" ry="2" />
<text  x="41.25" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.6" y="293" width="0.2" height="15.0" fill="rgb(237,90,19)" rx="2" ry="2" />
<text  x="1171.58" y="303.5" ></text>
</g>
<g >
<title>Eigen::internal::general_matrix_vector_product&lt;long, float, Eigen::internal::const_blas_data_mapper&lt;float, long, 1&gt;, 1, false, float, Eigen::internal::const_blas_data_mapper&lt;float, long, 0&gt;, false, 0&gt;::run (1 samples, 0.02%)</title><rect x="206.1" y="1957" width="0.2" height="15.0" fill="rgb(231,152,50)" rx="2" ry="2" />
<text  x="209.08" y="1967.5" ></text>
</g>
<g >
<title>__libc_start_main (2,735 samples, 42.79%)</title><rect x="84.0" y="2037" width="505.0" height="15.0" fill="rgb(238,31,15)" rx="2" ry="2" />
<text  x="87.04" y="2047.5" >__libc_start_main</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (44 samples, 0.69%)</title><rect x="184.8" y="1797" width="8.2" height="15.0" fill="rgb(237,188,46)" rx="2" ry="2" />
<text  x="187.85" y="1807.5" ></text>
</g>
<g >
<title>__vfs_read (1 samples, 0.02%)</title><rect x="83.9" y="1941" width="0.1" height="15.0" fill="rgb(211,3,50)" rx="2" ry="2" />
<text  x="86.85" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="194.6" y="1653" width="0.4" height="15.0" fill="rgb(228,16,47)" rx="2" ry="2" />
<text  x="197.63" y="1663.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::set (6 samples, 0.09%)</title><rect x="617.3" y="1893" width="1.1" height="15.0" fill="rgb(233,35,2)" rx="2" ry="2" />
<text  x="620.26" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.8" y="1109" width="0.2" height="15.0" fill="rgb(248,133,52)" rx="2" ry="2" />
<text  x="1171.77" y="1119.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.03%)</title><rect x="160.5" y="1589" width="0.3" height="15.0" fill="rgb(246,109,28)" rx="2" ry="2" />
<text  x="163.48" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="194.6" y="1605" width="0.4" height="15.0" fill="rgb(207,39,18)" rx="2" ry="2" />
<text  x="197.63" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.1" y="517" width="0.2" height="15.0" fill="rgb(251,14,17)" rx="2" ry="2" />
<text  x="1172.14" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="157.2" y="1621" width="0.1" height="15.0" fill="rgb(208,113,20)" rx="2" ry="2" />
<text  x="160.15" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (33 samples, 0.52%)</title><rect x="130.8" y="1589" width="6.0" height="15.0" fill="rgb(207,184,20)" rx="2" ry="2" />
<text  x="133.75" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.06%)</title><rect x="1169.3" y="1349" width="0.8" height="15.0" fill="rgb(238,102,42)" rx="2" ry="2" />
<text  x="1172.32" y="1359.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (2 samples, 0.03%)</title><rect x="128.4" y="1685" width="0.3" height="15.0" fill="rgb(219,218,42)" rx="2" ry="2" />
<text  x="131.35" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.06%)</title><rect x="1169.3" y="645" width="0.8" height="15.0" fill="rgb(235,172,11)" rx="2" ry="2" />
<text  x="1172.32" y="655.5" ></text>
</g>
<g >
<title>__vm_munmap (1 samples, 0.02%)</title><rect x="584.8" y="1925" width="0.2" height="15.0" fill="rgb(229,5,50)" rx="2" ry="2" />
<text  x="587.77" y="1935.5" ></text>
</g>
<g >
<title>try_charge (1 samples, 0.02%)</title><rect x="38.8" y="1925" width="0.2" height="15.0" fill="rgb(225,51,53)" rx="2" ry="2" />
<text  x="41.80" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.6" y="421" width="0.2" height="15.0" fill="rgb(223,103,40)" rx="2" ry="2" />
<text  x="1171.58" y="431.5" ></text>
</g>
<g >
<title>futex_wake (8 samples, 0.13%)</title><rect x="43.2" y="1941" width="1.5" height="15.0" fill="rgb(247,225,4)" rx="2" ry="2" />
<text  x="46.23" y="1951.5" ></text>
</g>
<g >
<title>__dynamic_cast (6 samples, 0.09%)</title><rect x="130.8" y="1573" width="1.1" height="15.0" fill="rgb(234,95,9)" rx="2" ry="2" />
<text  x="133.75" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.0" y="1861" width="0.1" height="15.0" fill="rgb(249,133,28)" rx="2" ry="2" />
<text  x="1171.95" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.09%)</title><rect x="1169.0" y="2005" width="1.1" height="15.0" fill="rgb(211,78,54)" rx="2" ry="2" />
<text  x="1171.95" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="129.6" y="1429" width="0.2" height="15.0" fill="rgb(211,70,35)" rx="2" ry="2" />
<text  x="132.64" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="129.6" y="133" width="0.2" height="15.0" fill="rgb(216,44,13)" rx="2" ry="2" />
<text  x="132.64" y="143.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="130.0" y="1317" width="0.2" height="15.0" fill="rgb(247,104,29)" rx="2" ry="2" />
<text  x="133.01" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.2" y="789" width="0.2" height="15.0" fill="rgb(237,49,14)" rx="2" ry="2" />
<text  x="1173.24" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (31 samples, 0.49%)</title><rect x="112.5" y="1717" width="5.7" height="15.0" fill="rgb(246,34,23)" rx="2" ry="2" />
<text  x="115.47" y="1727.5" ></text>
</g>
<g >
<title>Preprocess (1,415 samples, 22.14%)</title><rect x="591.0" y="1957" width="261.3" height="15.0" fill="rgb(242,80,45)" rx="2" ry="2" />
<text  x="594.05" y="1967.5" >Preprocess</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="194.6" y="1781" width="0.4" height="15.0" fill="rgb(232,184,27)" rx="2" ry="2" />
<text  x="197.63" y="1791.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::_M_transform (7 samples, 0.11%)</title><rect x="1145.5" y="2053" width="1.3" height="15.0" fill="rgb(222,154,53)" rx="2" ry="2" />
<text  x="1148.50" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (141 samples, 2.21%)</title><rect x="130.6" y="1845" width="26.0" height="15.0" fill="rgb(231,19,17)" rx="2" ry="2" />
<text  x="133.57" y="1855.5" >s..</text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="79.8" y="1989" width="0.2" height="15.0" fill="rgb(224,192,22)" rx="2" ry="2" />
<text  x="82.79" y="1999.5" ></text>
</g>
<g >
<title>fasttext::DenseMatrix::addRowToVector (625 samples, 9.78%)</title><rect x="444.1" y="1973" width="115.4" height="15.0" fill="rgb(227,138,6)" rx="2" ry="2" />
<text  x="447.08" y="1983.5" >fasttext::Dens..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="130.4" y="1157" width="0.2" height="15.0" fill="rgb(234,102,31)" rx="2" ry="2" />
<text  x="133.38" y="1167.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="147.9" y="1653" width="0.2" height="15.0" fill="rgb(216,185,1)" rx="2" ry="2" />
<text  x="150.92" y="1663.5" ></text>
</g>
<g >
<title>virtual thunk to std::__cxx11::basic_istringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_istringstream (3 samples, 0.05%)</title><rect x="880.0" y="2037" width="0.6" height="15.0" fill="rgb(247,119,29)" rx="2" ry="2" />
<text  x="883.00" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="1061" width="0.3" height="15.0" fill="rgb(241,220,36)" rx="2" ry="2" />
<text  x="82.98" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.0" y="485" width="0.1" height="15.0" fill="rgb(234,87,27)" rx="2" ry="2" />
<text  x="1171.95" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.08%)</title><rect x="1169.1" y="1845" width="1.0" height="15.0" fill="rgb(222,16,6)" rx="2" ry="2" />
<text  x="1172.14" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (136 samples, 2.13%)</title><rect x="159.6" y="1797" width="25.1" height="15.0" fill="rgb(237,138,24)" rx="2" ry="2" />
<text  x="162.55" y="1807.5" >s..</text>
</g>
<g >
<title>onmt::get_alphabet_id (3 samples, 0.05%)</title><rect x="756.7" y="1893" width="0.5" height="15.0" fill="rgb(253,166,24)" rx="2" ry="2" />
<text  x="759.66" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.09%)</title><rect x="129.5" y="1925" width="1.1" height="15.0" fill="rgb(242,198,19)" rx="2" ry="2" />
<text  x="132.46" y="1935.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (1 samples, 0.02%)</title><rect x="585.7" y="1893" width="0.2" height="15.0" fill="rgb(240,99,16)" rx="2" ry="2" />
<text  x="588.69" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.6" y="661" width="0.2" height="15.0" fill="rgb(233,42,28)" rx="2" ry="2" />
<text  x="1171.58" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="1013" width="0.1" height="15.0" fill="rgb(247,209,32)" rx="2" ry="2" />
<text  x="1173.06" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.3" y="101" width="0.2" height="15.0" fill="rgb(217,83,3)" rx="2" ry="2" />
<text  x="1172.32" y="111.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.1" y="213" width="0.2" height="15.0" fill="rgb(234,149,0)" rx="2" ry="2" />
<text  x="1172.14" y="223.5" ></text>
</g>
<g >
<title>__vm_munmap (1 samples, 0.02%)</title><rect x="585.7" y="1941" width="0.2" height="15.0" fill="rgb(233,143,48)" rx="2" ry="2" />
<text  x="588.69" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="129.8" y="965" width="0.2" height="15.0" fill="rgb(212,149,47)" rx="2" ry="2" />
<text  x="132.83" y="975.5" ></text>
</g>
<g >
<title>RunFasttextClf (1 samples, 0.02%)</title><rect x="590.1" y="1957" width="0.2" height="15.0" fill="rgb(214,51,21)" rx="2" ry="2" />
<text  x="593.12" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="129.8" y="1221" width="0.2" height="15.0" fill="rgb(237,217,37)" rx="2" ry="2" />
<text  x="132.83" y="1231.5" ></text>
</g>
<g >
<title>TDocument::FromJson (2 samples, 0.03%)</title><rect x="84.0" y="1973" width="0.4" height="15.0" fill="rgb(246,96,0)" rx="2" ry="2" />
<text  x="87.04" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.6" y="1925" width="0.2" height="15.0" fill="rgb(247,93,11)" rx="2" ry="2" />
<text  x="1171.58" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.2" y="1061" width="0.2" height="15.0" fill="rgb(212,42,31)" rx="2" ry="2" />
<text  x="1173.24" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.1" y="261" width="0.2" height="15.0" fill="rgb(244,101,4)" rx="2" ry="2" />
<text  x="1172.14" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="194.6" y="1909" width="0.4" height="15.0" fill="rgb(254,155,46)" rx="2" ry="2" />
<text  x="197.63" y="1919.5" ></text>
</g>
<g >
<title>std::locale::locale (1 samples, 0.02%)</title><rect x="195.0" y="1957" width="0.2" height="15.0" fill="rgb(234,96,21)" rx="2" ry="2" />
<text  x="198.00" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1170.1" y="2053" width="0.3" height="15.0" fill="rgb(226,58,20)" rx="2" ry="2" />
<text  x="1173.06" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.2" y="917" width="0.2" height="15.0" fill="rgb(237,115,0)" rx="2" ry="2" />
<text  x="1173.24" y="927.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="150.1" y="1653" width="0.2" height="15.0" fill="rgb(225,160,31)" rx="2" ry="2" />
<text  x="153.14" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="129.8" y="837" width="0.2" height="15.0" fill="rgb(240,37,51)" rx="2" ry="2" />
<text  x="132.83" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.06%)</title><rect x="1169.3" y="453" width="0.8" height="15.0" fill="rgb(242,7,8)" rx="2" ry="2" />
<text  x="1172.32" y="463.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="1095.7" y="1989" width="0.1" height="15.0" fill="rgb(220,34,30)" rx="2" ry="2" />
<text  x="1098.65" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (25 samples, 0.39%)</title><rect x="159.9" y="1685" width="4.6" height="15.0" fill="rgb(241,84,13)" rx="2" ry="2" />
<text  x="162.92" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.0" y="1285" width="0.1" height="15.0" fill="rgb(220,194,51)" rx="2" ry="2" />
<text  x="1171.95" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.2" y="709" width="0.2" height="15.0" fill="rgb(248,4,37)" rx="2" ry="2" />
<text  x="1173.24" y="719.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (2 samples, 0.03%)</title><rect x="117.1" y="1621" width="0.4" height="15.0" fill="rgb(228,26,3)" rx="2" ry="2" />
<text  x="120.09" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="501" width="0.1" height="15.0" fill="rgb(237,16,44)" rx="2" ry="2" />
<text  x="1173.06" y="511.5" ></text>
</g>
<g >
<title>__do_page_fault (2 samples, 0.03%)</title><rect x="85.9" y="1877" width="0.4" height="15.0" fill="rgb(240,172,29)" rx="2" ry="2" />
<text  x="88.88" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.1" y="1173" width="0.2" height="15.0" fill="rgb(208,157,27)" rx="2" ry="2" />
<text  x="1172.14" y="1183.5" ></text>
</g>
<g >
<title>try_charge (2 samples, 0.03%)</title><rect x="716.2" y="1749" width="0.4" height="15.0" fill="rgb(221,150,52)" rx="2" ry="2" />
<text  x="719.23" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.2" y="1221" width="0.2" height="15.0" fill="rgb(222,68,29)" rx="2" ry="2" />
<text  x="1173.24" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="194.8" y="1205" width="0.2" height="15.0" fill="rgb(223,153,23)" rx="2" ry="2" />
<text  x="197.82" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.06%)</title><rect x="1169.3" y="1029" width="0.8" height="15.0" fill="rgb(234,124,3)" rx="2" ry="2" />
<text  x="1172.32" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="130.4" y="1685" width="0.2" height="15.0" fill="rgb(206,206,44)" rx="2" ry="2" />
<text  x="133.38" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1169.5" y="85" width="0.6" height="15.0" fill="rgb(228,125,7)" rx="2" ry="2" />
<text  x="1172.51" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="129.6" y="1413" width="0.2" height="15.0" fill="rgb(241,59,0)" rx="2" ry="2" />
<text  x="132.64" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="129.6" y="485" width="0.2" height="15.0" fill="rgb(215,172,6)" rx="2" ry="2" />
<text  x="132.64" y="495.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.02%)</title><rect x="1095.7" y="2021" width="0.1" height="15.0" fill="rgb(242,33,17)" rx="2" ry="2" />
<text  x="1098.65" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="117" width="0.3" height="15.0" fill="rgb(216,74,12)" rx="2" ry="2" />
<text  x="82.98" y="127.5" ></text>
</g>
<g >
<title>__dynamic_cast (7 samples, 0.11%)</title><rect x="185.8" y="1701" width="1.3" height="15.0" fill="rgb(240,81,43)" rx="2" ry="2" />
<text  x="188.77" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (1 samples, 0.02%)</title><rect x="129.3" y="1797" width="0.2" height="15.0" fill="rgb(254,193,40)" rx="2" ry="2" />
<text  x="132.27" y="1807.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="79.8" y="1909" width="0.2" height="15.0" fill="rgb(235,68,42)" rx="2" ry="2" />
<text  x="82.79" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="1285" width="0.1" height="15.0" fill="rgb(248,155,9)" rx="2" ry="2" />
<text  x="1173.06" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.06%)</title><rect x="1169.3" y="1525" width="0.8" height="15.0" fill="rgb(245,142,42)" rx="2" ry="2" />
<text  x="1172.32" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.0" y="1237" width="0.1" height="15.0" fill="rgb(236,8,5)" rx="2" ry="2" />
<text  x="1171.95" y="1247.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::basic_json (2 samples, 0.03%)</title><rect x="588.3" y="1925" width="0.3" height="15.0" fill="rgb(230,153,26)" rx="2" ry="2" />
<text  x="591.28" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1170.1" y="2005" width="0.3" height="15.0" fill="rgb(218,186,29)" rx="2" ry="2" />
<text  x="1173.06" y="2015.5" ></text>
</g>
<g >
<title>fasttext::DenseMatrix::addRowToVector (561 samples, 8.78%)</title><rect x="211.4" y="1989" width="103.6" height="15.0" fill="rgb(229,35,19)" rx="2" ry="2" />
<text  x="214.44" y="1999.5" >fasttext::De..</text>
</g>
<g >
<title>strcmp@plt (8 samples, 0.13%)</title><rect x="1186.7" y="2037" width="1.5" height="15.0" fill="rgb(254,83,1)" rx="2" ry="2" />
<text  x="1189.68" y="2047.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="559.3" y="1909" width="0.2" height="15.0" fill="rgb(221,79,45)" rx="2" ry="2" />
<text  x="562.29" y="1919.5" ></text>
</g>
<g >
<title>onmt::unicode::is_separator (53 samples, 0.83%)</title><rect x="824.2" y="1893" width="9.8" height="15.0" fill="rgb(216,211,45)" rx="2" ry="2" />
<text  x="827.24" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.06%)</title><rect x="1169.3" y="357" width="0.8" height="15.0" fill="rgb(223,211,27)" rx="2" ry="2" />
<text  x="1172.32" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.6" y="1141" width="0.2" height="15.0" fill="rgb(223,142,49)" rx="2" ry="2" />
<text  x="1171.58" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.0" y="1541" width="0.1" height="15.0" fill="rgb(232,163,7)" rx="2" ry="2" />
<text  x="1171.95" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (22 samples, 0.34%)</title><rect x="146.3" y="1685" width="4.0" height="15.0" fill="rgb(230,105,28)" rx="2" ry="2" />
<text  x="149.26" y="1695.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="170.8" y="1605" width="0.2" height="15.0" fill="rgb(215,165,10)" rx="2" ry="2" />
<text  x="173.82" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="421" width="0.1" height="15.0" fill="rgb(236,220,52)" rx="2" ry="2" />
<text  x="1173.06" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="1717" width="0.1" height="15.0" fill="rgb(217,26,1)" rx="2" ry="2" />
<text  x="1173.06" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (1 samples, 0.02%)</title><rect x="129.3" y="1701" width="0.2" height="15.0" fill="rgb(230,42,23)" rx="2" ry="2" />
<text  x="132.27" y="1711.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="748.4" y="1829" width="0.1" height="15.0" fill="rgb(238,66,31)" rx="2" ry="2" />
<text  x="751.35" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (1 samples, 0.02%)</title><rect x="129.3" y="1733" width="0.2" height="15.0" fill="rgb(223,157,10)" rx="2" ry="2" />
<text  x="132.27" y="1743.5" ></text>
</g>
<g >
<title>__strxfrm_l (35 samples, 0.55%)</title><rect x="1162.1" y="2037" width="6.5" height="15.0" fill="rgb(216,158,32)" rx="2" ry="2" />
<text  x="1165.12" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.1" y="837" width="0.2" height="15.0" fill="rgb(227,96,8)" rx="2" ry="2" />
<text  x="1172.14" y="847.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="1989" width="0.3" height="15.0" fill="rgb(250,98,18)" rx="2" ry="2" />
<text  x="82.98" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.2" y="517" width="0.2" height="15.0" fill="rgb(223,131,15)" rx="2" ry="2" />
<text  x="1173.24" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::_M_transform@plt (4 samples, 0.06%)</title><rect x="1146.8" y="2053" width="0.7" height="15.0" fill="rgb(230,28,33)" rx="2" ry="2" />
<text  x="1149.80" y="2063.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="139.6" y="1589" width="0.2" height="15.0" fill="rgb(228,201,28)" rx="2" ry="2" />
<text  x="142.61" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="997" width="0.1" height="15.0" fill="rgb(254,132,51)" rx="2" ry="2" />
<text  x="1173.06" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.1" y="1061" width="0.2" height="15.0" fill="rgb(218,29,0)" rx="2" ry="2" />
<text  x="1172.14" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.08%)</title><rect x="129.6" y="1829" width="1.0" height="15.0" fill="rgb(222,37,9)" rx="2" ry="2" />
<text  x="132.64" y="1839.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (12 samples, 0.19%)</title><rect x="1136.1" y="2053" width="2.2" height="15.0" fill="rgb(233,129,26)" rx="2" ry="2" />
<text  x="1139.09" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="1301" width="0.1" height="15.0" fill="rgb(241,85,32)" rx="2" ry="2" />
<text  x="1173.06" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.2" y="1701" width="0.2" height="15.0" fill="rgb(249,142,37)" rx="2" ry="2" />
<text  x="1173.24" y="1711.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (1 samples, 0.02%)</title><rect x="144.8" y="1605" width="0.2" height="15.0" fill="rgb(207,26,43)" rx="2" ry="2" />
<text  x="147.78" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.0" y="805" width="0.1" height="15.0" fill="rgb(231,41,21)" rx="2" ry="2" />
<text  x="1171.95" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (185 samples, 2.89%)</title><rect x="159.6" y="1845" width="34.1" height="15.0" fill="rgb(249,66,37)" rx="2" ry="2" />
<text  x="162.55" y="1855.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="129.8" y="741" width="0.2" height="15.0" fill="rgb(234,7,51)" rx="2" ry="2" />
<text  x="132.83" y="751.5" ></text>
</g>
<g >
<title>fasttext::Vector::addRow (8 samples, 0.13%)</title><rect x="565.4" y="1973" width="1.5" height="15.0" fill="rgb(249,117,3)" rx="2" ry="2" />
<text  x="568.38" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.0" y="533" width="0.1" height="15.0" fill="rgb(254,95,38)" rx="2" ry="2" />
<text  x="1171.95" y="543.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="85" width="0.3" height="15.0" fill="rgb(225,224,34)" rx="2" ry="2" />
<text  x="82.98" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="130.0" y="1365" width="0.4" height="15.0" fill="rgb(231,36,33)" rx="2" ry="2" />
<text  x="133.01" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.8" y="581" width="0.2" height="15.0" fill="rgb(249,197,2)" rx="2" ry="2" />
<text  x="1171.77" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="1397" width="0.1" height="15.0" fill="rgb(236,139,26)" rx="2" ry="2" />
<text  x="1173.06" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.2" y="1285" width="0.2" height="15.0" fill="rgb(205,76,49)" rx="2" ry="2" />
<text  x="1173.24" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.0" y="821" width="0.1" height="15.0" fill="rgb(214,40,24)" rx="2" ry="2" />
<text  x="1171.95" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_expression_term&lt;false, false&gt; (1 samples, 0.02%)</title><rect x="136.8" y="1589" width="0.2" height="15.0" fill="rgb(248,101,8)" rx="2" ry="2" />
<text  x="139.84" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="194.6" y="1285" width="0.4" height="15.0" fill="rgb(241,156,10)" rx="2" ry="2" />
<text  x="197.63" y="1295.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (2 samples, 0.03%)</title><rect x="440.2" y="1957" width="0.4" height="15.0" fill="rgb(215,83,31)" rx="2" ry="2" />
<text  x="443.20" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.2" y="421" width="0.2" height="15.0" fill="rgb(250,163,37)" rx="2" ry="2" />
<text  x="1173.24" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="130.4" y="1525" width="0.2" height="15.0" fill="rgb(234,38,20)" rx="2" ry="2" />
<text  x="133.38" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_assertion (1 samples, 0.02%)</title><rect x="123.2" y="1813" width="0.2" height="15.0" fill="rgb(247,129,31)" rx="2" ry="2" />
<text  x="126.18" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (28 samples, 0.44%)</title><rect x="140.9" y="1701" width="5.2" height="15.0" fill="rgb(223,80,21)" rx="2" ry="2" />
<text  x="143.91" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.0" y="1189" width="0.1" height="15.0" fill="rgb(246,170,29)" rx="2" ry="2" />
<text  x="1171.95" y="1199.5" ></text>
</g>
<g >
<title>cfree (144 samples, 2.25%)</title><rect x="907.1" y="2053" width="26.6" height="15.0" fill="rgb(229,83,46)" rx="2" ry="2" />
<text  x="910.14" y="2063.5" >c..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1169.5" y="53" width="0.4" height="15.0" fill="rgb(244,125,30)" rx="2" ry="2" />
<text  x="1172.51" y="63.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="430.0" y="1845" width="0.2" height="15.0" fill="rgb(233,123,40)" rx="2" ry="2" />
<text  x="433.04" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.2" y="469" width="0.2" height="15.0" fill="rgb(218,131,51)" rx="2" ry="2" />
<text  x="1173.24" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.8" y="517" width="0.2" height="15.0" fill="rgb(232,9,11)" rx="2" ry="2" />
<text  x="1171.77" y="527.5" ></text>
</g>
<g >
<title>TFastTextEmbedder::GetSentenceEmbedding (49 samples, 0.77%)</title><rect x="431.5" y="1973" width="9.1" height="15.0" fill="rgb(213,159,28)" rx="2" ry="2" />
<text  x="434.52" y="1983.5" ></text>
</g>
<g >
<title>onmt::CaseModifier::type_to_char (1 samples, 0.02%)</title><rect x="598.1" y="1893" width="0.1" height="15.0" fill="rgb(250,185,49)" rx="2" ry="2" />
<text  x="601.06" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="129.8" y="469" width="0.2" height="15.0" fill="rgb(217,87,4)" rx="2" ry="2" />
<text  x="132.83" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.06%)</title><rect x="1169.3" y="1397" width="0.8" height="15.0" fill="rgb(209,202,0)" rx="2" ry="2" />
<text  x="1172.32" y="1407.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.02%)</title><rect x="748.4" y="1877" width="0.1" height="15.0" fill="rgb(221,170,38)" rx="2" ry="2" />
<text  x="751.35" y="1887.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="588.6" y="1973" width="0.2" height="15.0" fill="rgb(225,229,26)" rx="2" ry="2" />
<text  x="591.64" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.06%)</title><rect x="1169.3" y="325" width="0.8" height="15.0" fill="rgb(221,42,20)" rx="2" ry="2" />
<text  x="1172.32" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.06%)</title><rect x="1169.3" y="613" width="0.8" height="15.0" fill="rgb(248,45,26)" rx="2" ry="2" />
<text  x="1172.32" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="129.6" y="1301" width="0.2" height="15.0" fill="rgb(211,155,14)" rx="2" ry="2" />
<text  x="132.64" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (22 samples, 0.34%)</title><rect x="146.3" y="1669" width="4.0" height="15.0" fill="rgb(245,86,42)" rx="2" ry="2" />
<text  x="149.26" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="1189" width="0.3" height="15.0" fill="rgb(224,171,22)" rx="2" ry="2" />
<text  x="82.98" y="1199.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="677" width="0.3" height="15.0" fill="rgb(248,25,14)" rx="2" ry="2" />
<text  x="82.98" y="687.5" ></text>
</g>
<g >
<title>try_charge (1 samples, 0.02%)</title><rect x="423.2" y="1829" width="0.2" height="15.0" fill="rgb(254,216,26)" rx="2" ry="2" />
<text  x="426.21" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.2" y="1957" width="0.2" height="15.0" fill="rgb(249,115,33)" rx="2" ry="2" />
<text  x="1173.24" y="1967.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="206.6" y="1893" width="0.2" height="15.0" fill="rgb(243,15,0)" rx="2" ry="2" />
<text  x="209.64" y="1903.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (2 samples, 0.03%)</title><rect x="431.0" y="1877" width="0.3" height="15.0" fill="rgb(216,145,26)" rx="2" ry="2" />
<text  x="433.97" y="1887.5" ></text>
</g>
<g >
<title>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::dump (2 samples, 0.03%)</title><rect x="586.6" y="1941" width="0.4" height="15.0" fill="rgb(248,147,29)" rx="2" ry="2" />
<text  x="589.61" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (1 samples, 0.02%)</title><rect x="193.7" y="1845" width="0.2" height="15.0" fill="rgb(230,167,18)" rx="2" ry="2" />
<text  x="196.71" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (33 samples, 0.52%)</title><rect x="178.6" y="1765" width="6.1" height="15.0" fill="rgb(217,109,23)" rx="2" ry="2" />
<text  x="181.57" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="1429" width="0.1" height="15.0" fill="rgb(224,84,8)" rx="2" ry="2" />
<text  x="1173.06" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="130.4" y="837" width="0.2" height="15.0" fill="rgb(246,113,40)" rx="2" ry="2" />
<text  x="133.38" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.2" y="1333" width="0.2" height="15.0" fill="rgb(214,62,41)" rx="2" ry="2" />
<text  x="1173.24" y="1343.5" ></text>
</g>
<g >
<title>Summarize (964 samples, 15.08%)</title><rect x="158.1" y="2005" width="178.0" height="15.0" fill="rgb(229,109,44)" rx="2" ry="2" />
<text  x="161.08" y="2015.5" >Summarize</text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="590.9" y="1957" width="0.1" height="15.0" fill="rgb(228,195,32)" rx="2" ry="2" />
<text  x="593.86" y="1967.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.03%)</title><rect x="1091.6" y="2037" width="0.4" height="15.0" fill="rgb(207,203,42)" rx="2" ry="2" />
<text  x="1094.59" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.0" y="229" width="0.1" height="15.0" fill="rgb(206,101,13)" rx="2" ry="2" />
<text  x="1171.95" y="239.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="1829" width="0.3" height="15.0" fill="rgb(253,134,41)" rx="2" ry="2" />
<text  x="82.98" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.8" y="1893" width="0.2" height="15.0" fill="rgb(240,215,30)" rx="2" ry="2" />
<text  x="1171.77" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="129.6" y="501" width="0.2" height="15.0" fill="rgb(219,86,31)" rx="2" ry="2" />
<text  x="132.64" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.2" y="885" width="0.2" height="15.0" fill="rgb(233,103,5)" rx="2" ry="2" />
<text  x="1173.24" y="895.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (2 samples, 0.03%)</title><rect x="155.7" y="1685" width="0.3" height="15.0" fill="rgb(246,180,21)" rx="2" ry="2" />
<text  x="158.68" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="129.6" y="1061" width="0.2" height="15.0" fill="rgb(217,119,34)" rx="2" ry="2" />
<text  x="132.64" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.0" y="1685" width="0.1" height="15.0" fill="rgb(214,59,27)" rx="2" ry="2" />
<text  x="1171.95" y="1695.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (1 samples, 0.02%)</title><rect x="865.6" y="2037" width="0.2" height="15.0" fill="rgb(205,91,40)" rx="2" ry="2" />
<text  x="868.60" y="2047.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1131.8" y="2037" width="0.2" height="15.0" fill="rgb(235,222,9)" rx="2" ry="2" />
<text  x="1134.84" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (32 samples, 0.50%)</title><rect x="100.5" y="1701" width="5.9" height="15.0" fill="rgb(218,38,50)" rx="2" ry="2" />
<text  x="103.47" y="1711.5" ></text>
</g>
<g >
<title>unmap_vmas (2 samples, 0.03%)</title><rect x="443.3" y="1861" width="0.4" height="15.0" fill="rgb(228,27,17)" rx="2" ry="2" />
<text  x="446.34" y="1871.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (12 samples, 0.19%)</title><rect x="873.7" y="1973" width="2.2" height="15.0" fill="rgb(241,61,8)" rx="2" ry="2" />
<text  x="876.72" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.6" y="965" width="0.2" height="15.0" fill="rgb(211,61,47)" rx="2" ry="2" />
<text  x="1171.58" y="975.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::json_value::destroy (1 samples, 0.02%)</title><rect x="590.5" y="1957" width="0.2" height="15.0" fill="rgb(241,222,23)" rx="2" ry="2" />
<text  x="593.49" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.0" y="85" width="0.1" height="15.0" fill="rgb(224,167,26)" rx="2" ry="2" />
<text  x="1171.95" y="95.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id@plt (1 samples, 0.02%)</title><rect x="145.2" y="1621" width="0.1" height="15.0" fill="rgb(237,5,54)" rx="2" ry="2" />
<text  x="148.15" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.0" y="757" width="0.1" height="15.0" fill="rgb(235,154,13)" rx="2" ry="2" />
<text  x="1171.95" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="405" width="0.1" height="15.0" fill="rgb(235,218,4)" rx="2" ry="2" />
<text  x="1173.06" y="415.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (13 samples, 0.20%)</title><rect x="628.5" y="1877" width="2.4" height="15.0" fill="rgb(218,207,23)" rx="2" ry="2" />
<text  x="631.53" y="1887.5" ></text>
</g>
<g >
<title>std::ios_base::_M_init@plt (1 samples, 0.02%)</title><rect x="866.3" y="2005" width="0.2" height="15.0" fill="rgb(239,9,12)" rx="2" ry="2" />
<text  x="869.34" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="213" width="0.1" height="15.0" fill="rgb(213,141,30)" rx="2" ry="2" />
<text  x="1173.06" y="223.5" ></text>
</g>
<g >
<title>onmt::unicode::get_case (4 samples, 0.06%)</title><rect x="760.0" y="1893" width="0.7" height="15.0" fill="rgb(211,170,43)" rx="2" ry="2" />
<text  x="762.99" y="1903.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (3 samples, 0.05%)</title><rect x="716.0" y="1765" width="0.6" height="15.0" fill="rgb(253,157,46)" rx="2" ry="2" />
<text  x="719.04" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="194.6" y="1589" width="0.4" height="15.0" fill="rgb(244,74,8)" rx="2" ry="2" />
<text  x="197.63" y="1599.5" ></text>
</g>
<g >
<title>get_page_from_freelist (2 samples, 0.03%)</title><rect x="37.3" y="1925" width="0.4" height="15.0" fill="rgb(251,62,46)" rx="2" ry="2" />
<text  x="40.33" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.06%)</title><rect x="1169.3" y="501" width="0.8" height="15.0" fill="rgb(231,218,52)" rx="2" ry="2" />
<text  x="1172.32" y="511.5" ></text>
</g>
<g >
<title>onmt::is_alphabet (11 samples, 0.17%)</title><rect x="757.2" y="1893" width="2.0" height="15.0" fill="rgb(233,34,50)" rx="2" ry="2" />
<text  x="760.22" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="194.6" y="1541" width="0.4" height="15.0" fill="rgb(241,1,15)" rx="2" ry="2" />
<text  x="197.63" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (21 samples, 0.33%)</title><rect x="137.0" y="1669" width="3.9" height="15.0" fill="rgb(227,61,52)" rx="2" ry="2" />
<text  x="140.03" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.2" y="965" width="0.2" height="15.0" fill="rgb(241,195,29)" rx="2" ry="2" />
<text  x="1173.24" y="975.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.02%)</title><rect x="851.7" y="1861" width="0.2" height="15.0" fill="rgb(231,20,0)" rx="2" ry="2" />
<text  x="854.75" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.6" y="549" width="0.2" height="15.0" fill="rgb(218,229,12)" rx="2" ry="2" />
<text  x="1171.58" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.8" y="1253" width="0.2" height="15.0" fill="rgb(244,116,9)" rx="2" ry="2" />
<text  x="1171.77" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (1 samples, 0.02%)</title><rect x="129.3" y="1781" width="0.2" height="15.0" fill="rgb(211,69,43)" rx="2" ry="2" />
<text  x="132.27" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.8" y="1429" width="0.2" height="15.0" fill="rgb(244,4,19)" rx="2" ry="2" />
<text  x="1171.77" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="130.4" y="981" width="0.2" height="15.0" fill="rgb(247,212,47)" rx="2" ry="2" />
<text  x="133.38" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="130.0" y="1061" width="0.2" height="15.0" fill="rgb(225,26,17)" rx="2" ry="2" />
<text  x="133.01" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (22 samples, 0.34%)</title><rect x="146.3" y="1733" width="4.0" height="15.0" fill="rgb(246,153,48)" rx="2" ry="2" />
<text  x="149.26" y="1743.5" ></text>
</g>
<g >
<title>onmt::unicode::explode_utf8_with_marks (213 samples, 3.33%)</title><rect x="677.8" y="1877" width="39.4" height="15.0" fill="rgb(228,33,52)" rx="2" ry="2" />
<text  x="680.82" y="1887.5" >onm..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.0" y="1797" width="0.1" height="15.0" fill="rgb(245,162,43)" rx="2" ry="2" />
<text  x="1171.95" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.2" y="1477" width="0.2" height="15.0" fill="rgb(208,11,41)" rx="2" ry="2" />
<text  x="1173.24" y="1487.5" ></text>
</g>
<g >
<title>onmt::Tokenizer::tokenize (1,349 samples, 21.11%)</title><rect x="600.5" y="1909" width="249.0" height="15.0" fill="rgb(236,162,34)" rx="2" ry="2" />
<text  x="603.46" y="1919.5" >onmt::Tokenizer::tokenize</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="129.8" y="1381" width="0.2" height="15.0" fill="rgb(253,127,12)" rx="2" ry="2" />
<text  x="132.83" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_BracketMatcher (1 samples, 0.02%)</title><rect x="159.7" y="1621" width="0.2" height="15.0" fill="rgb(229,69,27)" rx="2" ry="2" />
<text  x="162.74" y="1631.5" ></text>
</g>
<g >
<title>cfree (1 samples, 0.02%)</title><rect x="102.3" y="1589" width="0.2" height="15.0" fill="rgb(214,207,39)" rx="2" ry="2" />
<text  x="105.32" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="1173" width="0.3" height="15.0" fill="rgb(219,169,19)" rx="2" ry="2" />
<text  x="82.98" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.08%)</title><rect x="1169.1" y="1829" width="1.0" height="15.0" fill="rgb(214,20,10)" rx="2" ry="2" />
<text  x="1172.14" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.1" y="645" width="0.2" height="15.0" fill="rgb(212,6,8)" rx="2" ry="2" />
<text  x="1172.14" y="655.5" ></text>
</g>
<g >
<title>__schedule (2 samples, 0.03%)</title><rect x="44.7" y="1941" width="0.4" height="15.0" fill="rgb(244,7,15)" rx="2" ry="2" />
<text  x="47.71" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="129.8" y="1045" width="0.2" height="15.0" fill="rgb(206,156,3)" rx="2" ry="2" />
<text  x="132.83" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.0" y="373" width="0.1" height="15.0" fill="rgb(226,219,33)" rx="2" ry="2" />
<text  x="1171.95" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.8" y="1093" width="0.2" height="15.0" fill="rgb(230,74,37)" rx="2" ry="2" />
<text  x="1171.77" y="1103.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (1 samples, 0.02%)</title><rect x="136.1" y="1573" width="0.2" height="15.0" fill="rgb(238,6,15)" rx="2" ry="2" />
<text  x="139.11" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="1365" width="0.3" height="15.0" fill="rgb(235,145,11)" rx="2" ry="2" />
<text  x="82.98" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.3" y="69" width="0.2" height="15.0" fill="rgb(216,165,0)" rx="2" ry="2" />
<text  x="1172.32" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (29 samples, 0.45%)</title><rect x="140.9" y="1749" width="5.4" height="15.0" fill="rgb(213,129,3)" rx="2" ry="2" />
<text  x="143.91" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (29 samples, 0.45%)</title><rect x="150.7" y="1701" width="5.3" height="15.0" fill="rgb(208,109,39)" rx="2" ry="2" />
<text  x="153.69" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (33 samples, 0.52%)</title><rect x="178.6" y="1701" width="6.1" height="15.0" fill="rgb(232,155,38)" rx="2" ry="2" />
<text  x="181.57" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.0" y="789" width="0.1" height="15.0" fill="rgb(230,26,34)" rx="2" ry="2" />
<text  x="1171.95" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (97 samples, 1.52%)</title><rect x="100.3" y="1781" width="17.9" height="15.0" fill="rgb(237,144,53)" rx="2" ry="2" />
<text  x="103.29" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="129.8" y="821" width="0.2" height="15.0" fill="rgb(238,24,0)" rx="2" ry="2" />
<text  x="132.83" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="130.0" y="1141" width="0.2" height="15.0" fill="rgb(254,0,25)" rx="2" ry="2" />
<text  x="133.01" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.8" y="1301" width="0.2" height="15.0" fill="rgb(216,146,25)" rx="2" ry="2" />
<text  x="1171.77" y="1311.5" ></text>
</g>
<g >
<title>free@plt (1 samples, 0.02%)</title><rect x="174.5" y="1637" width="0.2" height="15.0" fill="rgb(212,107,23)" rx="2" ry="2" />
<text  x="177.51" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.1" y="1509" width="0.2" height="15.0" fill="rgb(240,144,7)" rx="2" ry="2" />
<text  x="1172.14" y="1519.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (4 samples, 0.06%)</title><rect x="422.7" y="1861" width="0.7" height="15.0" fill="rgb(206,98,28)" rx="2" ry="2" />
<text  x="425.66" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.06%)</title><rect x="129.6" y="1557" width="0.8" height="15.0" fill="rgb(233,170,14)" rx="2" ry="2" />
<text  x="132.64" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.1" y="357" width="0.2" height="15.0" fill="rgb(228,107,42)" rx="2" ry="2" />
<text  x="1172.14" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1170.1" y="1973" width="0.3" height="15.0" fill="rgb(248,32,39)" rx="2" ry="2" />
<text  x="1173.06" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="130.4" y="1061" width="0.2" height="15.0" fill="rgb(218,150,50)" rx="2" ry="2" />
<text  x="133.38" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="130.4" y="1733" width="0.2" height="15.0" fill="rgb(214,158,16)" rx="2" ry="2" />
<text  x="133.38" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.08%)</title><rect x="1169.1" y="1541" width="1.0" height="15.0" fill="rgb(216,147,26)" rx="2" ry="2" />
<text  x="1172.14" y="1551.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="1095.7" y="1941" width="0.1" height="15.0" fill="rgb(208,135,23)" rx="2" ry="2" />
<text  x="1098.65" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="194.6" y="1845" width="0.4" height="15.0" fill="rgb(247,92,42)" rx="2" ry="2" />
<text  x="197.63" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.8" y="261" width="0.2" height="15.0" fill="rgb(208,113,41)" rx="2" ry="2" />
<text  x="1171.77" y="271.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="851.7" y="1925" width="0.2" height="15.0" fill="rgb(238,32,23)" rx="2" ry="2" />
<text  x="854.75" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="1573" width="0.3" height="15.0" fill="rgb(207,119,15)" rx="2" ry="2" />
<text  x="82.98" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="129.6" y="1365" width="0.2" height="15.0" fill="rgb(206,210,34)" rx="2" ry="2" />
<text  x="132.64" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="130.0" y="1093" width="0.2" height="15.0" fill="rgb(206,178,34)" rx="2" ry="2" />
<text  x="133.01" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.6" y="1061" width="0.2" height="15.0" fill="rgb(209,203,9)" rx="2" ry="2" />
<text  x="1171.58" y="1071.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (1 samples, 0.02%)</title><rect x="110.6" y="1605" width="0.2" height="15.0" fill="rgb(226,91,45)" rx="2" ry="2" />
<text  x="113.63" y="1615.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::getLine (144 samples, 2.25%)</title><rect x="970.5" y="2053" width="26.6" height="15.0" fill="rgb(238,117,21)" rx="2" ry="2" />
<text  x="973.47" y="2063.5" >f..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (3 samples, 0.05%)</title><rect x="1132.6" y="2053" width="0.5" height="15.0" fill="rgb(218,34,48)" rx="2" ry="2" />
<text  x="1135.58" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="1653" width="0.3" height="15.0" fill="rgb(225,10,9)" rx="2" ry="2" />
<text  x="82.98" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (1 samples, 0.02%)</title><rect x="129.3" y="1765" width="0.2" height="15.0" fill="rgb(209,132,7)" rx="2" ry="2" />
<text  x="132.27" y="1775.5" ></text>
</g>
<g >
<title>@plt (5 samples, 0.08%)</title><rect x="1154.2" y="2037" width="0.9" height="15.0" fill="rgb(211,59,18)" rx="2" ry="2" />
<text  x="1157.18" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.2" y="1877" width="0.2" height="15.0" fill="rgb(223,60,12)" rx="2" ry="2" />
<text  x="1173.24" y="1887.5" ></text>
</g>
<g >
<title>__dynamic_cast (6 samples, 0.09%)</title><rect x="101.2" y="1589" width="1.1" height="15.0" fill="rgb(216,106,10)" rx="2" ry="2" />
<text  x="104.21" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="197" width="0.3" height="15.0" fill="rgb(220,13,35)" rx="2" ry="2" />
<text  x="82.98" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.1" y="565" width="0.2" height="15.0" fill="rgb(212,138,11)" rx="2" ry="2" />
<text  x="1172.14" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.08%)</title><rect x="1169.1" y="1781" width="1.0" height="15.0" fill="rgb(254,123,10)" rx="2" ry="2" />
<text  x="1172.14" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="194.6" y="1381" width="0.4" height="15.0" fill="rgb(235,61,2)" rx="2" ry="2" />
<text  x="197.63" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.06%)</title><rect x="1169.3" y="901" width="0.8" height="15.0" fill="rgb(220,203,17)" rx="2" ry="2" />
<text  x="1172.32" y="911.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.05%)</title><rect x="83.5" y="2021" width="0.5" height="15.0" fill="rgb(238,7,52)" rx="2" ry="2" />
<text  x="86.48" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.06%)</title><rect x="1169.3" y="405" width="0.8" height="15.0" fill="rgb(241,69,29)" rx="2" ry="2" />
<text  x="1172.32" y="415.5" ></text>
</g>
<g >
<title>std::future&lt;boost::optional&lt;TDocument&gt; &gt;::get (8 samples, 0.13%)</title><rect x="98.8" y="1989" width="1.5" height="15.0" fill="rgb(214,173,10)" rx="2" ry="2" />
<text  x="101.81" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="130.0" y="1237" width="0.2" height="15.0" fill="rgb(239,179,13)" rx="2" ry="2" />
<text  x="133.01" y="1247.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (1 samples, 0.02%)</title><rect x="117.6" y="1637" width="0.2" height="15.0" fill="rgb(251,30,5)" rx="2" ry="2" />
<text  x="120.64" y="1647.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (1 samples, 0.02%)</title><rect x="157.5" y="1957" width="0.2" height="15.0" fill="rgb(217,146,3)" rx="2" ry="2" />
<text  x="160.52" y="1967.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (1 samples, 0.02%)</title><rect x="162.5" y="1573" width="0.2" height="15.0" fill="rgb(224,78,54)" rx="2" ry="2" />
<text  x="165.51" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="129.6" y="549" width="0.2" height="15.0" fill="rgb(240,159,33)" rx="2" ry="2" />
<text  x="132.64" y="559.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="584.8" y="1957" width="0.2" height="15.0" fill="rgb(240,129,11)" rx="2" ry="2" />
<text  x="587.77" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="357" width="0.1" height="15.0" fill="rgb(245,180,5)" rx="2" ry="2" />
<text  x="1173.06" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="194.8" y="1173" width="0.2" height="15.0" fill="rgb(218,17,13)" rx="2" ry="2" />
<text  x="197.82" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.0" y="1349" width="0.1" height="15.0" fill="rgb(247,208,4)" rx="2" ry="2" />
<text  x="1171.95" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.08%)</title><rect x="1169.1" y="1573" width="1.0" height="15.0" fill="rgb(241,103,49)" rx="2" ry="2" />
<text  x="1172.14" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.2" y="1941" width="0.2" height="15.0" fill="rgb(239,182,40)" rx="2" ry="2" />
<text  x="1173.24" y="1951.5" ></text>
</g>
<g >
<title>__x64_sys_write (1 samples, 0.02%)</title><rect x="880.6" y="1989" width="0.1" height="15.0" fill="rgb(235,118,14)" rx="2" ry="2" />
<text  x="883.55" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.06%)</title><rect x="129.6" y="1573" width="0.8" height="15.0" fill="rgb(244,94,43)" rx="2" ry="2" />
<text  x="132.64" y="1583.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.05%)</title><rect x="137.4" y="1605" width="0.6" height="15.0" fill="rgb(208,137,22)" rx="2" ry="2" />
<text  x="140.40" y="1615.5" ></text>
</g>
<g >
<title>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::dump (2 samples, 0.03%)</title><rect x="586.6" y="1925" width="0.4" height="15.0" fill="rgb(224,83,44)" rx="2" ry="2" />
<text  x="589.61" y="1935.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="84.8" y="1989" width="0.2" height="15.0" fill="rgb(210,4,25)" rx="2" ry="2" />
<text  x="87.78" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.6" y="1605" width="0.2" height="15.0" fill="rgb(252,151,13)" rx="2" ry="2" />
<text  x="1171.58" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.2" y="741" width="0.2" height="15.0" fill="rgb(214,170,40)" rx="2" ry="2" />
<text  x="1173.24" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="129.8" y="1397" width="0.2" height="15.0" fill="rgb(236,205,53)" rx="2" ry="2" />
<text  x="132.83" y="1407.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="1925" width="0.3" height="15.0" fill="rgb(230,166,12)" rx="2" ry="2" />
<text  x="82.98" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="1029" width="0.1" height="15.0" fill="rgb(250,52,23)" rx="2" ry="2" />
<text  x="1173.06" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.06%)</title><rect x="1169.3" y="1173" width="0.8" height="15.0" fill="rgb(228,11,34)" rx="2" ry="2" />
<text  x="1172.32" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="129.6" y="1397" width="0.2" height="15.0" fill="rgb(229,149,29)" rx="2" ry="2" />
<text  x="132.64" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.09%)</title><rect x="1169.0" y="1909" width="1.1" height="15.0" fill="rgb(229,102,38)" rx="2" ry="2" />
<text  x="1171.95" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="129.8" y="549" width="0.2" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="132.83" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.1" y="581" width="0.2" height="15.0" fill="rgb(240,87,33)" rx="2" ry="2" />
<text  x="1172.14" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (141 samples, 2.21%)</title><rect x="130.6" y="1861" width="26.0" height="15.0" fill="rgb(246,62,46)" rx="2" ry="2" />
<text  x="133.57" y="1871.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.1" y="1317" width="0.2" height="15.0" fill="rgb(219,104,38)" rx="2" ry="2" />
<text  x="1172.14" y="1327.5" ></text>
</g>
<g >
<title>do_page_fault (4 samples, 0.06%)</title><rect x="78.7" y="2005" width="0.7" height="15.0" fill="rgb(211,78,13)" rx="2" ry="2" />
<text  x="81.68" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.2" y="693" width="0.2" height="15.0" fill="rgb(210,92,10)" rx="2" ry="2" />
<text  x="1173.24" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (2 samples, 0.03%)</title><rect x="156.0" y="1797" width="0.4" height="15.0" fill="rgb(247,203,35)" rx="2" ry="2" />
<text  x="159.05" y="1807.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="833.8" y="1877" width="0.2" height="15.0" fill="rgb(231,125,24)" rx="2" ry="2" />
<text  x="836.84" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="129.6" y="853" width="0.2" height="15.0" fill="rgb(245,100,32)" rx="2" ry="2" />
<text  x="132.64" y="863.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append@plt (3 samples, 0.05%)</title><rect x="1132.0" y="2053" width="0.6" height="15.0" fill="rgb(224,160,9)" rx="2" ry="2" />
<text  x="1135.02" y="2063.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (1 samples, 0.02%)</title><rect x="584.8" y="1941" width="0.2" height="15.0" fill="rgb(214,159,3)" rx="2" ry="2" />
<text  x="587.77" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="130.0" y="1125" width="0.2" height="15.0" fill="rgb(227,148,19)" rx="2" ry="2" />
<text  x="133.01" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="129.6" y="1109" width="0.2" height="15.0" fill="rgb(215,92,43)" rx="2" ry="2" />
<text  x="132.64" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="157.2" y="1733" width="0.1" height="15.0" fill="rgb(248,186,48)" rx="2" ry="2" />
<text  x="160.15" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.8" y="837" width="0.2" height="15.0" fill="rgb(243,131,26)" rx="2" ry="2" />
<text  x="1171.77" y="847.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_Alloc_node&gt; (2 samples, 0.03%)</title><rect x="588.3" y="1845" width="0.3" height="15.0" fill="rgb(214,113,6)" rx="2" ry="2" />
<text  x="591.28" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="1109" width="0.3" height="15.0" fill="rgb(219,41,28)" rx="2" ry="2" />
<text  x="82.98" y="1119.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (2 samples, 0.03%)</title><rect x="136.5" y="1573" width="0.3" height="15.0" fill="rgb(248,153,47)" rx="2" ry="2" />
<text  x="139.47" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="129.8" y="1445" width="0.6" height="15.0" fill="rgb(223,196,30)" rx="2" ry="2" />
<text  x="132.83" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Scanner&lt;char&gt;::_M_scan_normal (1 samples, 0.02%)</title><rect x="112.3" y="1669" width="0.2" height="15.0" fill="rgb(239,5,17)" rx="2" ry="2" />
<text  x="115.29" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.06%)</title><rect x="1169.3" y="981" width="0.8" height="15.0" fill="rgb(253,25,5)" rx="2" ry="2" />
<text  x="1172.32" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.2" y="1605" width="0.2" height="15.0" fill="rgb(236,21,3)" rx="2" ry="2" />
<text  x="1173.24" y="1615.5" ></text>
</g>
<g >
<title>malloc@plt (1 samples, 0.02%)</title><rect x="587.4" y="1941" width="0.1" height="15.0" fill="rgb(238,18,40)" rx="2" ry="2" />
<text  x="590.35" y="1951.5" ></text>
</g>
<g >
<title>__do_page_fault (16 samples, 0.25%)</title><rect x="714.0" y="1829" width="3.0" height="15.0" fill="rgb(238,140,42)" rx="2" ry="2" />
<text  x="717.01" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="129.8" y="917" width="0.2" height="15.0" fill="rgb(253,189,11)" rx="2" ry="2" />
<text  x="132.83" y="927.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="693" width="0.3" height="15.0" fill="rgb(220,198,6)" rx="2" ry="2" />
<text  x="82.98" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.1" y="1125" width="0.2" height="15.0" fill="rgb(225,6,30)" rx="2" ry="2" />
<text  x="1172.14" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.2" y="261" width="0.2" height="15.0" fill="rgb(223,82,51)" rx="2" ry="2" />
<text  x="1173.24" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.6" y="1589" width="0.2" height="15.0" fill="rgb(241,2,19)" rx="2" ry="2" />
<text  x="1171.58" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.08%)</title><rect x="1169.1" y="1653" width="1.0" height="15.0" fill="rgb(221,25,46)" rx="2" ry="2" />
<text  x="1172.14" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="1269" width="0.3" height="15.0" fill="rgb(219,217,37)" rx="2" ry="2" />
<text  x="82.98" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.06%)</title><rect x="1169.3" y="1445" width="0.8" height="15.0" fill="rgb(238,49,7)" rx="2" ry="2" />
<text  x="1172.32" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="101" width="0.1" height="15.0" fill="rgb(213,173,42)" rx="2" ry="2" />
<text  x="1173.06" y="111.5" ></text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.02%)</title><rect x="1095.7" y="1957" width="0.1" height="15.0" fill="rgb(235,54,4)" rx="2" ry="2" />
<text  x="1098.65" y="1967.5" ></text>
</g>
<g >
<title>malloc@plt (6 samples, 0.09%)</title><rect x="1109.5" y="2053" width="1.1" height="15.0" fill="rgb(224,226,30)" rx="2" ry="2" />
<text  x="1112.50" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.06%)</title><rect x="129.6" y="1605" width="0.8" height="15.0" fill="rgb(244,131,29)" rx="2" ry="2" />
<text  x="132.64" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="130.4" y="661" width="0.2" height="15.0" fill="rgb(246,161,14)" rx="2" ry="2" />
<text  x="133.38" y="671.5" ></text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::next_byte_in_range (20 samples, 0.31%)</title><rect x="94.7" y="1925" width="3.7" height="15.0" fill="rgb(241,194,18)" rx="2" ry="2" />
<text  x="97.75" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="130.4" y="1189" width="0.2" height="15.0" fill="rgb(239,107,10)" rx="2" ry="2" />
<text  x="133.38" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.8" y="293" width="0.2" height="15.0" fill="rgb(249,7,3)" rx="2" ry="2" />
<text  x="1171.77" y="303.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="1157" width="0.3" height="15.0" fill="rgb(212,54,22)" rx="2" ry="2" />
<text  x="82.98" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.8" y="629" width="0.2" height="15.0" fill="rgb(239,195,25)" rx="2" ry="2" />
<text  x="1171.77" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (32 samples, 0.50%)</title><rect x="123.4" y="1733" width="5.9" height="15.0" fill="rgb(217,188,32)" rx="2" ry="2" />
<text  x="126.37" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.6" y="917" width="0.2" height="15.0" fill="rgb(233,219,24)" rx="2" ry="2" />
<text  x="1171.58" y="927.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::dump (2 samples, 0.03%)</title><rect x="586.6" y="2005" width="0.4" height="15.0" fill="rgb(223,187,14)" rx="2" ry="2" />
<text  x="589.61" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.06%)</title><rect x="1169.3" y="869" width="0.8" height="15.0" fill="rgb(222,128,23)" rx="2" ry="2" />
<text  x="1172.32" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="194.6" y="1733" width="0.4" height="15.0" fill="rgb(222,99,12)" rx="2" ry="2" />
<text  x="197.63" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.2" y="565" width="0.2" height="15.0" fill="rgb(254,98,20)" rx="2" ry="2" />
<text  x="1173.24" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.06%)</title><rect x="1169.3" y="709" width="0.8" height="15.0" fill="rgb(237,96,46)" rx="2" ry="2" />
<text  x="1172.32" y="719.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="1909" width="0.3" height="15.0" fill="rgb(207,123,42)" rx="2" ry="2" />
<text  x="82.98" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.08%)</title><rect x="1169.1" y="1749" width="1.0" height="15.0" fill="rgb(224,115,20)" rx="2" ry="2" />
<text  x="1172.14" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="1333" width="0.3" height="15.0" fill="rgb(236,70,0)" rx="2" ry="2" />
<text  x="82.98" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.2" y="149" width="0.2" height="15.0" fill="rgb(253,41,15)" rx="2" ry="2" />
<text  x="1173.24" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (27 samples, 0.42%)</title><rect x="118.2" y="1733" width="5.0" height="15.0" fill="rgb(231,195,16)" rx="2" ry="2" />
<text  x="121.20" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="129.6" y="1141" width="0.2" height="15.0" fill="rgb(207,13,31)" rx="2" ry="2" />
<text  x="132.64" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.8" y="325" width="0.2" height="15.0" fill="rgb(227,124,11)" rx="2" ry="2" />
<text  x="1171.77" y="335.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (38 samples, 0.59%)</title><rect x="1155.1" y="2037" width="7.0" height="15.0" fill="rgb(228,29,4)" rx="2" ry="2" />
<text  x="1158.10" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.0" y="181" width="0.1" height="15.0" fill="rgb(217,175,28)" rx="2" ry="2" />
<text  x="1171.95" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.1" y="309" width="0.2" height="15.0" fill="rgb(245,149,5)" rx="2" ry="2" />
<text  x="1172.14" y="319.5" ></text>
</g>
<g >
<title>__x64_sys_read (2 samples, 0.03%)</title><rect x="906.4" y="2005" width="0.4" height="15.0" fill="rgb(236,102,32)" rx="2" ry="2" />
<text  x="909.40" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="1477" width="0.1" height="15.0" fill="rgb(219,162,37)" rx="2" ry="2" />
<text  x="1173.06" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.5" y="37" width="0.2" height="15.0" fill="rgb(228,58,8)" rx="2" ry="2" />
<text  x="1172.51" y="47.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;std::__detail::_State&lt;char&gt; const*, std::__detail::_State&lt;char&gt;*&gt; (1 samples, 0.02%)</title><rect x="159.7" y="1653" width="0.2" height="15.0" fill="rgb(226,224,36)" rx="2" ry="2" />
<text  x="162.74" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="194.6" y="1301" width="0.4" height="15.0" fill="rgb(238,17,24)" rx="2" ry="2" />
<text  x="197.63" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.6" y="709" width="0.2" height="15.0" fill="rgb(214,217,13)" rx="2" ry="2" />
<text  x="1171.58" y="719.5" ></text>
</g>
<g >
<title>rcu_gp_kthread_wake (1 samples, 0.02%)</title><rect x="1045.6" y="1941" width="0.2" height="15.0" fill="rgb(224,102,15)" rx="2" ry="2" />
<text  x="1048.62" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="1605" width="0.1" height="15.0" fill="rgb(231,171,0)" rx="2" ry="2" />
<text  x="1173.06" y="1615.5" ></text>
</g>
<g >
<title>__munmap (1 samples, 0.02%)</title><rect x="584.8" y="1989" width="0.2" height="15.0" fill="rgb(226,16,13)" rx="2" ry="2" />
<text  x="587.77" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="129.8" y="645" width="0.2" height="15.0" fill="rgb(217,107,40)" rx="2" ry="2" />
<text  x="132.83" y="655.5" ></text>
</g>
<g >
<title>__do_page_fault (4 samples, 0.06%)</title><rect x="78.7" y="1989" width="0.7" height="15.0" fill="rgb(214,17,15)" rx="2" ry="2" />
<text  x="81.68" y="1999.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt; &gt;::_M_manager (1 samples, 0.02%)</title><rect x="159.7" y="1637" width="0.2" height="15.0" fill="rgb(224,149,9)" rx="2" ry="2" />
<text  x="162.74" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="1221" width="0.1" height="15.0" fill="rgb(249,111,13)" rx="2" ry="2" />
<text  x="1173.06" y="1231.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="335.9" y="1989" width="0.2" height="15.0" fill="rgb(210,135,39)" rx="2" ry="2" />
<text  x="338.88" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.0" y="885" width="0.1" height="15.0" fill="rgb(217,131,3)" rx="2" ry="2" />
<text  x="1171.95" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="130.0" y="1221" width="0.2" height="15.0" fill="rgb(213,66,33)" rx="2" ry="2" />
<text  x="133.01" y="1231.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.16%)</title><rect x="43.2" y="2005" width="1.9" height="15.0" fill="rgb(211,6,49)" rx="2" ry="2" />
<text  x="46.23" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="821" width="0.1" height="15.0" fill="rgb(230,114,46)" rx="2" ry="2" />
<text  x="1173.06" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.8" y="1957" width="0.2" height="15.0" fill="rgb(205,158,0)" rx="2" ry="2" />
<text  x="1171.77" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="130.4" y="1173" width="0.2" height="15.0" fill="rgb(215,212,42)" rx="2" ry="2" />
<text  x="133.38" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="130.0" y="1349" width="0.2" height="15.0" fill="rgb(225,23,1)" rx="2" ry="2" />
<text  x="133.01" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (186 samples, 2.91%)</title><rect x="159.6" y="1877" width="34.3" height="15.0" fill="rgb(244,91,5)" rx="2" ry="2" />
<text  x="162.55" y="1887.5" >st..</text>
</g>
<g >
<title>new_sync_read (1 samples, 0.02%)</title><rect x="83.9" y="1925" width="0.1" height="15.0" fill="rgb(219,107,26)" rx="2" ry="2" />
<text  x="86.85" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.6" y="453" width="0.2" height="15.0" fill="rgb(219,56,8)" rx="2" ry="2" />
<text  x="1171.58" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.06%)</title><rect x="1169.3" y="1237" width="0.8" height="15.0" fill="rgb(223,141,8)" rx="2" ry="2" />
<text  x="1172.32" y="1247.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::do_tolower (2 samples, 0.03%)</title><rect x="105.5" y="1589" width="0.3" height="15.0" fill="rgb(213,196,51)" rx="2" ry="2" />
<text  x="108.46" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="965" width="0.1" height="15.0" fill="rgb(218,63,24)" rx="2" ry="2" />
<text  x="1173.06" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (1 samples, 0.02%)</title><rect x="164.5" y="1717" width="0.2" height="15.0" fill="rgb(207,94,8)" rx="2" ry="2" />
<text  x="167.54" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="1237" width="0.3" height="15.0" fill="rgb(246,0,38)" rx="2" ry="2" />
<text  x="82.98" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="157.2" y="1381" width="0.1" height="15.0" fill="rgb(220,7,8)" rx="2" ry="2" />
<text  x="160.15" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.06%)</title><rect x="1169.3" y="133" width="0.8" height="15.0" fill="rgb(242,122,29)" rx="2" ry="2" />
<text  x="1172.32" y="143.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.6" y="69" width="0.2" height="15.0" fill="rgb(249,11,43)" rx="2" ry="2" />
<text  x="1171.58" y="79.5" ></text>
</g>
<g >
<title>TDocument::TDocument (2 samples, 0.03%)</title><rect x="589.4" y="1989" width="0.4" height="15.0" fill="rgb(218,172,28)" rx="2" ry="2" />
<text  x="592.38" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="130.4" y="1285" width="0.2" height="15.0" fill="rgb(253,62,28)" rx="2" ry="2" />
<text  x="133.38" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.1" y="741" width="0.2" height="15.0" fill="rgb(243,65,13)" rx="2" ry="2" />
<text  x="1172.14" y="751.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (1 samples, 0.02%)</title><rect x="110.4" y="1605" width="0.2" height="15.0" fill="rgb(212,222,44)" rx="2" ry="2" />
<text  x="113.44" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="194.6" y="1829" width="0.4" height="15.0" fill="rgb(206,74,30)" rx="2" ry="2" />
<text  x="197.63" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.2" y="1157" width="0.2" height="15.0" fill="rgb(230,89,4)" rx="2" ry="2" />
<text  x="1173.24" y="1167.5" ></text>
</g>
<g >
<title>mem_cgroup_commit_charge (1 samples, 0.02%)</title><rect x="430.8" y="1877" width="0.2" height="15.0" fill="rgb(241,178,22)" rx="2" ry="2" />
<text  x="433.78" y="1887.5" ></text>
</g>
<g >
<title>onmt::unicode::get_case (6 samples, 0.09%)</title><rect x="717.2" y="1877" width="1.1" height="15.0" fill="rgb(246,171,6)" rx="2" ry="2" />
<text  x="720.15" y="1887.5" ></text>
</g>
<g >
<title>__dynamic_cast (5 samples, 0.08%)</title><rect x="106.7" y="1621" width="1.0" height="15.0" fill="rgb(247,184,19)" rx="2" ry="2" />
<text  x="109.75" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.08%)</title><rect x="1169.1" y="1557" width="1.0" height="15.0" fill="rgb(232,188,44)" rx="2" ry="2" />
<text  x="1172.14" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.0" y="1557" width="0.1" height="15.0" fill="rgb(242,29,19)" rx="2" ry="2" />
<text  x="1171.95" y="1567.5" ></text>
</g>
<g >
<title>__dynamic_cast (6 samples, 0.09%)</title><rect x="118.4" y="1669" width="1.1" height="15.0" fill="rgb(211,53,9)" rx="2" ry="2" />
<text  x="121.38" y="1679.5" ></text>
</g>
<g >
<title>std::__move_merge&lt;__gnu_cxx::__normal_iterator&lt;TDocument*, std::vector&lt;TDocument, std::allocator&lt;TDocument&gt; &gt; &gt;, TDocument*, __gnu_cxx::__ops::_Iter_comp_iter&lt;main::$_0&gt; &gt; (1 samples, 0.02%)</title><rect x="587.9" y="1973" width="0.2" height="15.0" fill="rgb(207,53,0)" rx="2" ry="2" />
<text  x="590.91" y="1983.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="206.6" y="1973" width="0.2" height="15.0" fill="rgb(253,201,16)" rx="2" ry="2" />
<text  x="209.64" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.06%)</title><rect x="1169.3" y="805" width="0.8" height="15.0" fill="rgb(243,60,22)" rx="2" ry="2" />
<text  x="1172.32" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.2" y="1653" width="0.2" height="15.0" fill="rgb(216,22,17)" rx="2" ry="2" />
<text  x="1173.24" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="194.6" y="1621" width="0.4" height="15.0" fill="rgb(237,24,20)" rx="2" ry="2" />
<text  x="197.63" y="1631.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="856.9" y="1957" width="0.2" height="15.0" fill="rgb(244,154,11)" rx="2" ry="2" />
<text  x="859.92" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.2" y="53" width="0.2" height="15.0" fill="rgb(207,185,22)" rx="2" ry="2" />
<text  x="1173.24" y="63.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.8" y="165" width="0.2" height="15.0" fill="rgb(251,3,53)" rx="2" ry="2" />
<text  x="1171.77" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.2" y="773" width="0.2" height="15.0" fill="rgb(219,199,20)" rx="2" ry="2" />
<text  x="1173.24" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.0" y="853" width="0.1" height="15.0" fill="rgb(218,3,47)" rx="2" ry="2" />
<text  x="1171.95" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="130.0" y="1381" width="0.4" height="15.0" fill="rgb(227,180,30)" rx="2" ry="2" />
<text  x="133.01" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (17 samples, 0.27%)</title><rect x="152.2" y="1685" width="3.1" height="15.0" fill="rgb(241,61,0)" rx="2" ry="2" />
<text  x="155.17" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.0" y="1397" width="0.1" height="15.0" fill="rgb(233,79,47)" rx="2" ry="2" />
<text  x="1171.95" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.0" y="1109" width="0.1" height="15.0" fill="rgb(240,25,16)" rx="2" ry="2" />
<text  x="1171.95" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (17 samples, 0.27%)</title><rect x="125.8" y="1701" width="3.1" height="15.0" fill="rgb(210,2,26)" rx="2" ry="2" />
<text  x="128.77" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.2" y="245" width="0.2" height="15.0" fill="rgb(250,105,36)" rx="2" ry="2" />
<text  x="1173.24" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.08%)</title><rect x="129.6" y="1781" width="1.0" height="15.0" fill="rgb(252,47,26)" rx="2" ry="2" />
<text  x="132.64" y="1791.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (1 samples, 0.02%)</title><rect x="98.6" y="1989" width="0.2" height="15.0" fill="rgb(233,109,52)" rx="2" ry="2" />
<text  x="101.62" y="1999.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (51 samples, 0.80%)</title><rect x="837.7" y="1893" width="9.4" height="15.0" fill="rgb(224,85,42)" rx="2" ry="2" />
<text  x="840.72" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.1" y="533" width="0.2" height="15.0" fill="rgb(205,85,12)" rx="2" ry="2" />
<text  x="1172.14" y="543.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (3 samples, 0.05%)</title><rect x="430.2" y="1829" width="0.6" height="15.0" fill="rgb(220,105,10)" rx="2" ry="2" />
<text  x="433.23" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="194.6" y="1253" width="0.4" height="15.0" fill="rgb(243,126,16)" rx="2" ry="2" />
<text  x="197.63" y="1263.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="856.9" y="1973" width="0.2" height="15.0" fill="rgb(243,20,8)" rx="2" ry="2" />
<text  x="859.92" y="1983.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="119.9" y="1669" width="0.1" height="15.0" fill="rgb(239,67,23)" rx="2" ry="2" />
<text  x="122.86" y="1679.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::basic_json (2 samples, 0.03%)</title><rect x="588.3" y="1877" width="0.3" height="15.0" fill="rgb(225,17,50)" rx="2" ry="2" />
<text  x="591.28" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (140 samples, 2.19%)</title><rect x="130.6" y="1829" width="25.8" height="15.0" fill="rgb(249,83,13)" rx="2" ry="2" />
<text  x="133.57" y="1839.5" >s..</text>
</g>
<g >
<title>fasttext::Vector::mul (20 samples, 0.31%)</title><rect x="568.7" y="1973" width="3.7" height="15.0" fill="rgb(216,88,13)" rx="2" ry="2" />
<text  x="571.70" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.2" y="389" width="0.2" height="15.0" fill="rgb(235,114,31)" rx="2" ry="2" />
<text  x="1173.24" y="399.5" ></text>
</g>
<g >
<title>do_futex (3 samples, 0.05%)</title><rect x="99.7" y="1909" width="0.6" height="15.0" fill="rgb(230,22,10)" rx="2" ry="2" />
<text  x="102.73" y="1919.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="188.2" y="1701" width="0.2" height="15.0" fill="rgb(215,49,13)" rx="2" ry="2" />
<text  x="191.17" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.6" y="357" width="0.2" height="15.0" fill="rgb(231,199,29)" rx="2" ry="2" />
<text  x="1171.58" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.0" y="453" width="0.1" height="15.0" fill="rgb(251,221,53)" rx="2" ry="2" />
<text  x="1171.95" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.0" y="1477" width="0.1" height="15.0" fill="rgb(215,113,35)" rx="2" ry="2" />
<text  x="1171.95" y="1487.5" ></text>
</g>
<g >
<title>onmt::Tokenizer::tokenize_text (601 samples, 9.40%)</title><rect x="645.7" y="1893" width="111.0" height="15.0" fill="rgb(252,163,43)" rx="2" ry="2" />
<text  x="648.70" y="1903.5" >onmt::Tokeniz..</text>
</g>
<g >
<title>page_fault (1 samples, 0.02%)</title><rect x="1095.7" y="2037" width="0.1" height="15.0" fill="rgb(209,178,45)" rx="2" ry="2" />
<text  x="1098.65" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (1 samples, 0.02%)</title><rect x="178.6" y="1685" width="0.2" height="15.0" fill="rgb(229,170,10)" rx="2" ry="2" />
<text  x="181.57" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (1 samples, 0.02%)</title><rect x="194.3" y="1861" width="0.2" height="15.0" fill="rgb(236,49,49)" rx="2" ry="2" />
<text  x="197.27" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="709" width="0.3" height="15.0" fill="rgb(234,198,17)" rx="2" ry="2" />
<text  x="82.98" y="719.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (4 samples, 0.06%)</title><rect x="676.9" y="1877" width="0.7" height="15.0" fill="rgb(222,177,22)" rx="2" ry="2" />
<text  x="679.90" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.06%)</title><rect x="129.6" y="1685" width="0.8" height="15.0" fill="rgb(223,49,50)" rx="2" ry="2" />
<text  x="132.64" y="1695.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="193.9" y="1813" width="0.2" height="15.0" fill="rgb(223,202,10)" rx="2" ry="2" />
<text  x="196.90" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_try_char (1 samples, 0.02%)</title><rect x="184.7" y="1781" width="0.1" height="15.0" fill="rgb(216,150,2)" rx="2" ry="2" />
<text  x="187.66" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.08%)</title><rect x="1169.1" y="1701" width="1.0" height="15.0" fill="rgb(226,215,42)" rx="2" ry="2" />
<text  x="1172.14" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.2" y="997" width="0.2" height="15.0" fill="rgb(237,170,13)" rx="2" ry="2" />
<text  x="1173.24" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.0" y="1701" width="0.1" height="15.0" fill="rgb(238,227,26)" rx="2" ry="2" />
<text  x="1171.95" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="129.6" y="277" width="0.2" height="15.0" fill="rgb(206,143,53)" rx="2" ry="2" />
<text  x="132.64" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="194.5" y="1941" width="0.5" height="15.0" fill="rgb(246,11,13)" rx="2" ry="2" />
<text  x="197.45" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.0" y="725" width="0.1" height="15.0" fill="rgb(237,178,38)" rx="2" ry="2" />
<text  x="1171.95" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.6" y="1333" width="0.2" height="15.0" fill="rgb(241,169,17)" rx="2" ry="2" />
<text  x="1171.58" y="1343.5" ></text>
</g>
<g >
<title>do_syscall_64 (3 samples, 0.05%)</title><rect x="99.7" y="1941" width="0.6" height="15.0" fill="rgb(221,4,9)" rx="2" ry="2" />
<text  x="102.73" y="1951.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="314.8" y="1973" width="0.2" height="15.0" fill="rgb(244,20,20)" rx="2" ry="2" />
<text  x="317.83" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (1 samples, 0.02%)</title><rect x="193.9" y="1877" width="0.2" height="15.0" fill="rgb(251,98,6)" rx="2" ry="2" />
<text  x="196.90" y="1887.5" ></text>
</g>
<g >
<title>std::locale::locale (3 samples, 0.05%)</title><rect x="333.8" y="1989" width="0.6" height="15.0" fill="rgb(251,23,29)" rx="2" ry="2" />
<text  x="336.85" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.2" y="165" width="0.2" height="15.0" fill="rgb(211,169,41)" rx="2" ry="2" />
<text  x="1173.24" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.1" y="325" width="0.2" height="15.0" fill="rgb(208,0,0)" rx="2" ry="2" />
<text  x="1172.14" y="335.5" ></text>
</g>
<g >
<title>cfree (1 samples, 0.02%)</title><rect x="211.3" y="1989" width="0.1" height="15.0" fill="rgb(222,194,9)" rx="2" ry="2" />
<text  x="214.25" y="1999.5" ></text>
</g>
<g >
<title>std::__stable_sort_adaptive&lt;__gnu_cxx::__normal_iterator&lt;TDocument*, std::vector&lt;TDocument, std::allocator&lt;TDocument&gt; &gt; &gt;, TDocument*, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;main::$_0&gt; &gt; (3 samples, 0.05%)</title><rect x="587.5" y="2005" width="0.6" height="15.0" fill="rgb(218,36,18)" rx="2" ry="2" />
<text  x="590.54" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.08%)</title><rect x="129.6" y="1877" width="1.0" height="15.0" fill="rgb(245,85,36)" rx="2" ry="2" />
<text  x="132.64" y="1887.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::basic_regex&lt;char const*&gt; (192 samples, 3.00%)</title><rect x="159.0" y="1957" width="35.5" height="15.0" fill="rgb(226,164,43)" rx="2" ry="2" />
<text  x="162.00" y="1967.5" >std..</text>
</g>
<g >
<title>onmt::unicode::explode_utf8 (67 samples, 1.05%)</title><rect x="632.4" y="1877" width="12.4" height="15.0" fill="rgb(223,31,44)" rx="2" ry="2" />
<text  x="635.40" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.08%)</title><rect x="1169.1" y="1605" width="1.0" height="15.0" fill="rgb(227,6,39)" rx="2" ry="2" />
<text  x="1172.14" y="1615.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (4 samples, 0.06%)</title><rect x="111.5" y="1621" width="0.8" height="15.0" fill="rgb(212,132,23)" rx="2" ry="2" />
<text  x="114.55" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="129.6" y="869" width="0.2" height="15.0" fill="rgb(206,40,34)" rx="2" ry="2" />
<text  x="132.64" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.6" y="101" width="0.2" height="15.0" fill="rgb(240,155,21)" rx="2" ry="2" />
<text  x="1171.58" y="111.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="789" width="0.1" height="15.0" fill="rgb(235,144,22)" rx="2" ry="2" />
<text  x="1173.06" y="799.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::setbuf (1 samples, 0.02%)</title><rect x="878.9" y="2037" width="0.2" height="15.0" fill="rgb(232,180,54)" rx="2" ry="2" />
<text  x="881.89" y="2047.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate@plt (1 samples, 0.02%)</title><rect x="1135.9" y="2053" width="0.2" height="15.0" fill="rgb(248,171,52)" rx="2" ry="2" />
<text  x="1138.90" y="2063.5" ></text>
</g>
<g >
<title>std::locale::operator= (2 samples, 0.03%)</title><rect x="42.5" y="2021" width="0.4" height="15.0" fill="rgb(227,221,52)" rx="2" ry="2" />
<text  x="45.50" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (142 samples, 2.22%)</title><rect x="130.6" y="1893" width="26.2" height="15.0" fill="rgb(235,25,42)" rx="2" ry="2" />
<text  x="133.57" y="1903.5" >s..</text>
</g>
<g >
<title>__dynamic_cast (7 samples, 0.11%)</title><rect x="112.8" y="1637" width="1.3" height="15.0" fill="rgb(224,17,15)" rx="2" ry="2" />
<text  x="115.84" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.8" y="869" width="0.2" height="15.0" fill="rgb(226,65,51)" rx="2" ry="2" />
<text  x="1171.77" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="157.2" y="1509" width="0.1" height="15.0" fill="rgb(211,10,14)" rx="2" ry="2" />
<text  x="160.15" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.2" y="1125" width="0.2" height="15.0" fill="rgb(223,118,16)" rx="2" ry="2" />
<text  x="1173.24" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (33 samples, 0.52%)</title><rect x="178.6" y="1749" width="6.1" height="15.0" fill="rgb(251,222,29)" rx="2" ry="2" />
<text  x="181.57" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.9" y="53" width="0.2" height="15.0" fill="rgb(217,97,12)" rx="2" ry="2" />
<text  x="1172.87" y="63.5" ></text>
</g>
<g >
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="631.7" y="1781" width="0.1" height="15.0" fill="rgb(243,224,46)" rx="2" ry="2" />
<text  x="634.66" y="1791.5" ></text>
</g>
<g >
<title>syscall (10 samples, 0.16%)</title><rect x="43.2" y="2021" width="1.9" height="15.0" fill="rgb(237,19,16)" rx="2" ry="2" />
<text  x="46.23" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.2" y="1317" width="0.2" height="15.0" fill="rgb(250,26,32)" rx="2" ry="2" />
<text  x="1173.24" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="157.2" y="1813" width="0.3" height="15.0" fill="rgb(227,77,22)" rx="2" ry="2" />
<text  x="160.15" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="194.6" y="1877" width="0.4" height="15.0" fill="rgb(205,94,10)" rx="2" ry="2" />
<text  x="197.63" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.0" y="1493" width="0.1" height="15.0" fill="rgb(226,6,29)" rx="2" ry="2" />
<text  x="1171.95" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.8" y="1013" width="0.2" height="15.0" fill="rgb(220,70,0)" rx="2" ry="2" />
<text  x="1171.77" y="1023.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (1 samples, 0.02%)</title><rect x="38.1" y="1957" width="0.1" height="15.0" fill="rgb(245,159,3)" rx="2" ry="2" />
<text  x="41.06" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="129.6" y="741" width="0.2" height="15.0" fill="rgb(239,39,44)" rx="2" ry="2" />
<text  x="132.64" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.8" y="885" width="0.2" height="15.0" fill="rgb(211,188,24)" rx="2" ry="2" />
<text  x="1171.77" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.8" y="357" width="0.2" height="15.0" fill="rgb(250,31,12)" rx="2" ry="2" />
<text  x="1171.77" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.1" y="85" width="0.2" height="15.0" fill="rgb(218,219,28)" rx="2" ry="2" />
<text  x="1172.14" y="95.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (2 samples, 0.03%)</title><rect x="139.8" y="1605" width="0.4" height="15.0" fill="rgb(213,117,45)" rx="2" ry="2" />
<text  x="142.80" y="1615.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.05%)</title><rect x="1113.2" y="2053" width="0.5" height="15.0" fill="rgb(235,107,47)" rx="2" ry="2" />
<text  x="1116.19" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.1" y="341" width="0.2" height="15.0" fill="rgb(230,223,17)" rx="2" ry="2" />
<text  x="1172.14" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="1797" width="0.1" height="15.0" fill="rgb(213,195,43)" rx="2" ry="2" />
<text  x="1173.06" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1170.1" y="2037" width="0.3" height="15.0" fill="rgb(208,57,10)" rx="2" ry="2" />
<text  x="1173.06" y="2047.5" ></text>
</g>
<g >
<title>cfree (2 samples, 0.03%)</title><rect x="443.7" y="1973" width="0.4" height="15.0" fill="rgb(236,75,42)" rx="2" ry="2" />
<text  x="446.71" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.0" y="1461" width="0.1" height="15.0" fill="rgb(231,154,6)" rx="2" ry="2" />
<text  x="1171.95" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.09%)</title><rect x="1169.0" y="1925" width="1.1" height="15.0" fill="rgb(233,62,43)" rx="2" ry="2" />
<text  x="1171.95" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="130.4" y="677" width="0.2" height="15.0" fill="rgb(213,119,49)" rx="2" ry="2" />
<text  x="133.38" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="709" width="0.1" height="15.0" fill="rgb(220,47,49)" rx="2" ry="2" />
<text  x="1173.06" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="130.4" y="1621" width="0.2" height="15.0" fill="rgb(218,191,19)" rx="2" ry="2" />
<text  x="133.38" y="1631.5" ></text>
</g>
<g >
<title>free_unref_page_list (1 samples, 0.02%)</title><rect x="585.7" y="1797" width="0.2" height="15.0" fill="rgb(208,190,24)" rx="2" ry="2" />
<text  x="588.69" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.1" y="1413" width="0.2" height="15.0" fill="rgb(212,201,43)" rx="2" ry="2" />
<text  x="1172.14" y="1423.5" ></text>
</g>
<g >
<title>memcpy@plt (1 samples, 0.02%)</title><rect x="677.6" y="1877" width="0.2" height="15.0" fill="rgb(230,55,47)" rx="2" ry="2" />
<text  x="680.64" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1170.1" y="1989" width="0.3" height="15.0" fill="rgb(250,225,27)" rx="2" ry="2" />
<text  x="1173.06" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.2" y="1349" width="0.2" height="15.0" fill="rgb(232,223,34)" rx="2" ry="2" />
<text  x="1173.24" y="1359.5" ></text>
</g>
<g >
<title>fasttext::NegativeSamplingLoss::NegativeSamplingLoss (5 samples, 0.08%)</title><rect x="856.2" y="2037" width="0.9" height="15.0" fill="rgb(230,93,43)" rx="2" ry="2" />
<text  x="859.18" y="2047.5" ></text>
</g>
<g >
<title>nlohmann::detail::parser&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::sax_parse_internal&lt;nlohmann::detail::json_sax_dom_parser&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; (71 samples, 1.11%)</title><rect x="85.5" y="1957" width="13.1" height="15.0" fill="rgb(241,14,29)" rx="2" ry="2" />
<text  x="88.52" y="1967.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="149.2" y="1621" width="0.2" height="15.0" fill="rgb(205,143,8)" rx="2" ry="2" />
<text  x="152.21" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (28 samples, 0.44%)</title><rect x="140.9" y="1637" width="5.2" height="15.0" fill="rgb(220,220,42)" rx="2" ry="2" />
<text  x="143.91" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.6" y="725" width="0.2" height="15.0" fill="rgb(228,187,32)" rx="2" ry="2" />
<text  x="1171.58" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.06%)</title><rect x="1169.3" y="1221" width="0.8" height="15.0" fill="rgb(214,119,6)" rx="2" ry="2" />
<text  x="1172.32" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="389" width="0.1" height="15.0" fill="rgb(226,132,3)" rx="2" ry="2" />
<text  x="1173.06" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (1 samples, 0.02%)</title><rect x="112.5" y="1653" width="0.2" height="15.0" fill="rgb(234,51,34)" rx="2" ry="2" />
<text  x="115.47" y="1663.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (2 samples, 0.03%)</title><rect x="443.3" y="1925" width="0.4" height="15.0" fill="rgb(209,205,1)" rx="2" ry="2" />
<text  x="446.34" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.8" y="389" width="0.2" height="15.0" fill="rgb(220,105,43)" rx="2" ry="2" />
<text  x="1171.77" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (44 samples, 0.69%)</title><rect x="184.8" y="1749" width="8.2" height="15.0" fill="rgb(242,79,0)" rx="2" ry="2" />
<text  x="187.85" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (13 samples, 0.20%)</title><rect x="161.4" y="1589" width="2.4" height="15.0" fill="rgb(243,134,29)" rx="2" ry="2" />
<text  x="164.40" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="1461" width="0.3" height="15.0" fill="rgb(208,90,45)" rx="2" ry="2" />
<text  x="82.98" y="1471.5" ></text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::next_byte_in_range (1 samples, 0.02%)</title><rect x="86.4" y="1941" width="0.2" height="15.0" fill="rgb(248,95,36)" rx="2" ry="2" />
<text  x="89.44" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="194.6" y="1509" width="0.4" height="15.0" fill="rgb(220,153,43)" rx="2" ry="2" />
<text  x="197.63" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="157.2" y="1717" width="0.1" height="15.0" fill="rgb(243,212,20)" rx="2" ry="2" />
<text  x="160.15" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="130.4" y="1429" width="0.2" height="15.0" fill="rgb(216,60,49)" rx="2" ry="2" />
<text  x="133.38" y="1439.5" ></text>
</g>
<g >
<title>TDocument::TDocument (3 samples, 0.05%)</title><rect x="84.0" y="1989" width="0.6" height="15.0" fill="rgb(212,76,0)" rx="2" ry="2" />
<text  x="87.04" y="1999.5" ></text>
</g>
<g >
<title>TNewsCluster::GetCategory (1 samples, 0.02%)</title><rect x="157.7" y="1989" width="0.2" height="15.0" fill="rgb(214,74,27)" rx="2" ry="2" />
<text  x="160.71" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="837" width="0.3" height="15.0" fill="rgb(222,192,50)" rx="2" ry="2" />
<text  x="82.98" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.6" y="1429" width="0.2" height="15.0" fill="rgb(234,173,33)" rx="2" ry="2" />
<text  x="1171.58" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.09%)</title><rect x="129.5" y="1893" width="1.1" height="15.0" fill="rgb(214,123,8)" rx="2" ry="2" />
<text  x="132.46" y="1903.5" ></text>
</g>
<g >
<title>handle_mm_fault (25 samples, 0.39%)</title><rect x="419.0" y="1893" width="4.6" height="15.0" fill="rgb(237,21,26)" rx="2" ry="2" />
<text  x="421.97" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.06%)</title><rect x="1169.3" y="629" width="0.8" height="15.0" fill="rgb(247,163,6)" rx="2" ry="2" />
<text  x="1172.32" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.6" y="997" width="0.2" height="15.0" fill="rgb(246,134,22)" rx="2" ry="2" />
<text  x="1171.58" y="1007.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="149.2" y="1637" width="0.2" height="15.0" fill="rgb(224,121,0)" rx="2" ry="2" />
<text  x="152.21" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="130.4" y="1013" width="0.2" height="15.0" fill="rgb(240,24,36)" rx="2" ry="2" />
<text  x="133.38" y="1023.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="325" width="0.3" height="15.0" fill="rgb(254,53,37)" rx="2" ry="2" />
<text  x="82.98" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Scanner&lt;char&gt;::_M_scan_normal (1 samples, 0.02%)</title><rect x="150.3" y="1749" width="0.2" height="15.0" fill="rgb(240,5,40)" rx="2" ry="2" />
<text  x="153.32" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="129.6" y="1045" width="0.2" height="15.0" fill="rgb(214,66,33)" rx="2" ry="2" />
<text  x="132.64" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.06%)</title><rect x="1169.3" y="1285" width="0.8" height="15.0" fill="rgb(234,145,12)" rx="2" ry="2" />
<text  x="1172.32" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.06%)</title><rect x="1169.3" y="741" width="0.8" height="15.0" fill="rgb(242,127,4)" rx="2" ry="2" />
<text  x="1172.32" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="194.6" y="1669" width="0.4" height="15.0" fill="rgb(244,65,24)" rx="2" ry="2" />
<text  x="197.63" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.0" y="677" width="0.1" height="15.0" fill="rgb(229,37,9)" rx="2" ry="2" />
<text  x="1171.95" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (13 samples, 0.20%)</title><rect x="108.4" y="1621" width="2.4" height="15.0" fill="rgb(234,123,25)" rx="2" ry="2" />
<text  x="111.41" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_repeat (2 samples, 0.03%)</title><rect x="193.3" y="1813" width="0.4" height="15.0" fill="rgb(246,81,10)" rx="2" ry="2" />
<text  x="196.34" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.0" y="53" width="0.1" height="15.0" fill="rgb(246,198,27)" rx="2" ry="2" />
<text  x="1171.95" y="63.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="1221" width="0.3" height="15.0" fill="rgb(241,196,40)" rx="2" ry="2" />
<text  x="82.98" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="194.6" y="1573" width="0.4" height="15.0" fill="rgb(220,216,42)" rx="2" ry="2" />
<text  x="197.63" y="1583.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::construct&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; const&amp;&gt; (2 samples, 0.03%)</title><rect x="588.3" y="1989" width="0.3" height="15.0" fill="rgb(247,83,15)" rx="2" ry="2" />
<text  x="591.28" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="965" width="0.3" height="15.0" fill="rgb(243,101,28)" rx="2" ry="2" />
<text  x="82.98" y="975.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (3 samples, 0.05%)</title><rect x="171.0" y="1621" width="0.6" height="15.0" fill="rgb(243,140,45)" rx="2" ry="2" />
<text  x="174.00" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="741" width="0.1" height="15.0" fill="rgb(220,27,6)" rx="2" ry="2" />
<text  x="1173.06" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.0" y="1157" width="0.1" height="15.0" fill="rgb(244,198,19)" rx="2" ry="2" />
<text  x="1171.95" y="1167.5" ></text>
</g>
<g >
<title>fasttext::FastText::getDimension (14 samples, 0.22%)</title><rect x="560.2" y="1973" width="2.6" height="15.0" fill="rgb(249,7,11)" rx="2" ry="2" />
<text  x="563.21" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="757" width="0.1" height="15.0" fill="rgb(230,173,39)" rx="2" ry="2" />
<text  x="1173.06" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.8" y="341" width="0.2" height="15.0" fill="rgb(251,148,51)" rx="2" ry="2" />
<text  x="1171.77" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (29 samples, 0.45%)</title><rect x="173.2" y="1765" width="5.4" height="15.0" fill="rgb(209,31,20)" rx="2" ry="2" />
<text  x="176.22" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.3" y="85" width="0.2" height="15.0" fill="rgb(241,82,32)" rx="2" ry="2" />
<text  x="1172.32" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.0" y="197" width="0.1" height="15.0" fill="rgb(216,96,54)" rx="2" ry="2" />
<text  x="1171.95" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.1" y="53" width="0.2" height="15.0" fill="rgb(253,217,27)" rx="2" ry="2" />
<text  x="1172.14" y="63.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="718.1" y="1829" width="0.2" height="15.0" fill="rgb(210,112,48)" rx="2" ry="2" />
<text  x="721.07" y="1839.5" ></text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (1 samples, 0.02%)</title><rect x="856.9" y="1941" width="0.2" height="15.0" fill="rgb(217,76,9)" rx="2" ry="2" />
<text  x="859.92" y="1951.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::create&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="852.9" y="1973" width="0.1" height="15.0" fill="rgb(236,192,6)" rx="2" ry="2" />
<text  x="855.86" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.6" y="245" width="0.2" height="15.0" fill="rgb(244,98,46)" rx="2" ry="2" />
<text  x="1171.58" y="255.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="717.0" y="1861" width="0.2" height="15.0" fill="rgb(230,124,39)" rx="2" ry="2" />
<text  x="719.97" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="917" width="0.3" height="15.0" fill="rgb(250,136,43)" rx="2" ry="2" />
<text  x="82.98" y="927.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (2 samples, 0.03%)</title><rect x="1091.6" y="2021" width="0.4" height="15.0" fill="rgb(227,217,21)" rx="2" ry="2" />
<text  x="1094.59" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.1" y="997" width="0.2" height="15.0" fill="rgb(205,3,52)" rx="2" ry="2" />
<text  x="1172.14" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.1" y="117" width="0.2" height="15.0" fill="rgb(221,32,46)" rx="2" ry="2" />
<text  x="1172.14" y="127.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt; &gt;::_M_manager (1 samples, 0.02%)</title><rect x="100.3" y="1637" width="0.2" height="15.0" fill="rgb(227,204,15)" rx="2" ry="2" />
<text  x="103.29" y="1647.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.02%)</title><rect x="878.9" y="1989" width="0.2" height="15.0" fill="rgb(207,177,10)" rx="2" ry="2" />
<text  x="881.89" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="157.2" y="1557" width="0.1" height="15.0" fill="rgb(216,45,28)" rx="2" ry="2" />
<text  x="160.15" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="325" width="0.1" height="15.0" fill="rgb(239,116,35)" rx="2" ry="2" />
<text  x="1173.06" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="194.6" y="1461" width="0.4" height="15.0" fill="rgb(213,69,32)" rx="2" ry="2" />
<text  x="197.63" y="1471.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (3 samples, 0.05%)</title><rect x="99.7" y="1877" width="0.6" height="15.0" fill="rgb(245,113,40)" rx="2" ry="2" />
<text  x="102.73" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.8" y="533" width="0.2" height="15.0" fill="rgb(254,2,48)" rx="2" ry="2" />
<text  x="1171.77" y="543.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="165" width="0.3" height="15.0" fill="rgb(221,137,35)" rx="2" ry="2" />
<text  x="82.98" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.06%)</title><rect x="1169.3" y="789" width="0.8" height="15.0" fill="rgb(221,3,6)" rx="2" ry="2" />
<text  x="1172.32" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.8" y="1637" width="0.2" height="15.0" fill="rgb(240,14,17)" rx="2" ry="2" />
<text  x="1171.77" y="1647.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::push_back (2 samples, 0.03%)</title><rect x="1189.4" y="2053" width="0.4" height="15.0" fill="rgb(219,136,17)" rx="2" ry="2" />
<text  x="1192.45" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.0" y="1269" width="0.1" height="15.0" fill="rgb(244,114,37)" rx="2" ry="2" />
<text  x="1171.95" y="1279.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="717.0" y="1845" width="0.2" height="15.0" fill="rgb(247,214,14)" rx="2" ry="2" />
<text  x="719.97" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (1 samples, 0.02%)</title><rect x="193.9" y="1829" width="0.2" height="15.0" fill="rgb(230,25,37)" rx="2" ry="2" />
<text  x="196.90" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.8" y="1461" width="0.2" height="15.0" fill="rgb(215,14,31)" rx="2" ry="2" />
<text  x="1171.77" y="1471.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.02%)</title><rect x="1091.8" y="1973" width="0.2" height="15.0" fill="rgb(244,49,0)" rx="2" ry="2" />
<text  x="1094.77" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.6" y="741" width="0.2" height="15.0" fill="rgb(249,168,46)" rx="2" ry="2" />
<text  x="1171.58" y="751.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="149.2" y="1605" width="0.2" height="15.0" fill="rgb(207,225,15)" rx="2" ry="2" />
<text  x="152.21" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.0" y="501" width="0.1" height="15.0" fill="rgb(247,77,51)" rx="2" ry="2" />
<text  x="1171.95" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.06%)</title><rect x="1169.3" y="837" width="0.8" height="15.0" fill="rgb(253,137,30)" rx="2" ry="2" />
<text  x="1172.32" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="129.6" y="165" width="0.2" height="15.0" fill="rgb(228,40,31)" rx="2" ry="2" />
<text  x="132.64" y="175.5" ></text>
</g>
<g >
<title>__do_munmap (1 samples, 0.02%)</title><rect x="585.7" y="1925" width="0.2" height="15.0" fill="rgb(223,130,13)" rx="2" ry="2" />
<text  x="588.69" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (31 samples, 0.49%)</title><rect x="106.6" y="1637" width="5.7" height="15.0" fill="rgb(211,37,24)" rx="2" ry="2" />
<text  x="109.56" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="981" width="0.1" height="15.0" fill="rgb(222,36,6)" rx="2" ry="2" />
<text  x="1173.06" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1168.6" y="2037" width="0.4" height="15.0" fill="rgb(225,211,19)" rx="2" ry="2" />
<text  x="1171.58" y="2047.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (2 samples, 0.03%)</title><rect x="190.6" y="1685" width="0.3" height="15.0" fill="rgb(238,14,34)" rx="2" ry="2" />
<text  x="193.57" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.2" y="1829" width="0.2" height="15.0" fill="rgb(244,8,39)" rx="2" ry="2" />
<text  x="1173.24" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="129.8" y="1173" width="0.2" height="15.0" fill="rgb(251,27,29)" rx="2" ry="2" />
<text  x="132.83" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (30 samples, 0.47%)</title><rect x="150.5" y="1733" width="5.5" height="15.0" fill="rgb(232,2,33)" rx="2" ry="2" />
<text  x="153.51" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.0" y="1765" width="0.1" height="15.0" fill="rgb(248,148,20)" rx="2" ry="2" />
<text  x="1171.95" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.2" y="853" width="0.2" height="15.0" fill="rgb(237,63,30)" rx="2" ry="2" />
<text  x="1173.24" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (56 samples, 0.88%)</title><rect x="130.6" y="1733" width="10.3" height="15.0" fill="rgb(240,104,48)" rx="2" ry="2" />
<text  x="133.57" y="1743.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (2 samples, 0.03%)</title><rect x="906.4" y="1877" width="0.4" height="15.0" fill="rgb(218,73,49)" rx="2" ry="2" />
<text  x="909.40" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="157.2" y="1653" width="0.1" height="15.0" fill="rgb(217,55,24)" rx="2" ry="2" />
<text  x="160.15" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.3" y="37" width="0.2" height="15.0" fill="rgb(216,45,34)" rx="2" ry="2" />
<text  x="1172.32" y="47.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.06%)</title><rect x="1169.3" y="677" width="0.8" height="15.0" fill="rgb(234,178,47)" rx="2" ry="2" />
<text  x="1172.32" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.2" y="1189" width="0.2" height="15.0" fill="rgb(235,161,40)" rx="2" ry="2" />
<text  x="1173.24" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.6" y="1893" width="0.2" height="15.0" fill="rgb(241,50,14)" rx="2" ry="2" />
<text  x="1171.58" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (30 samples, 0.47%)</title><rect x="150.5" y="1717" width="5.5" height="15.0" fill="rgb(221,85,28)" rx="2" ry="2" />
<text  x="153.51" y="1727.5" ></text>
</g>
<g >
<title>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::dump (2 samples, 0.03%)</title><rect x="586.6" y="1989" width="0.4" height="15.0" fill="rgb(221,161,54)" rx="2" ry="2" />
<text  x="589.61" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (21 samples, 0.33%)</title><rect x="137.0" y="1685" width="3.9" height="15.0" fill="rgb(229,176,1)" rx="2" ry="2" />
<text  x="140.03" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="157.2" y="1637" width="0.1" height="15.0" fill="rgb(248,40,25)" rx="2" ry="2" />
<text  x="160.15" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="129.8" y="677" width="0.2" height="15.0" fill="rgb(242,68,6)" rx="2" ry="2" />
<text  x="132.83" y="687.5" ></text>
</g>
<g >
<title>TAgencyRating::ScoreUrl (199 samples, 3.11%)</title><rect x="159.0" y="1989" width="36.7" height="15.0" fill="rgb(250,156,39)" rx="2" ry="2" />
<text  x="162.00" y="1999.5" >TAg..</text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (27 samples, 0.42%)</title><rect x="118.2" y="1685" width="5.0" height="15.0" fill="rgb(214,21,9)" rx="2" ry="2" />
<text  x="121.20" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.1" y="1333" width="0.2" height="15.0" fill="rgb(220,144,10)" rx="2" ry="2" />
<text  x="1172.14" y="1343.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="1781" width="0.3" height="15.0" fill="rgb(223,189,44)" rx="2" ry="2" />
<text  x="82.98" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.0" y="437" width="0.1" height="15.0" fill="rgb(206,202,35)" rx="2" ry="2" />
<text  x="1171.95" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.8" y="373" width="0.2" height="15.0" fill="rgb(226,229,37)" rx="2" ry="2" />
<text  x="1171.77" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (4 samples, 0.06%)</title><rect x="162.7" y="1573" width="0.7" height="15.0" fill="rgb(228,2,36)" rx="2" ry="2" />
<text  x="165.69" y="1583.5" ></text>
</g>
<g >
<title>pfn_pte (2 samples, 0.03%)</title><rect x="39.0" y="1973" width="0.4" height="15.0" fill="rgb(244,181,38)" rx="2" ry="2" />
<text  x="41.99" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.0" y="629" width="0.1" height="15.0" fill="rgb(214,83,54)" rx="2" ry="2" />
<text  x="1171.95" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.0" y="1381" width="0.1" height="15.0" fill="rgb(217,30,9)" rx="2" ry="2" />
<text  x="1171.95" y="1391.5" ></text>
</g>
<g >
<title>nlohmann::detail::json_sax_dom_parser&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::handle_value&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (3 samples, 0.05%)</title><rect x="85.7" y="1941" width="0.6" height="15.0" fill="rgb(230,51,4)" rx="2" ry="2" />
<text  x="88.70" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1169.5" y="69" width="0.6" height="15.0" fill="rgb(205,176,39)" rx="2" ry="2" />
<text  x="1172.51" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="194.6" y="1813" width="0.4" height="15.0" fill="rgb(238,229,20)" rx="2" ry="2" />
<text  x="197.63" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.0" y="277" width="0.1" height="15.0" fill="rgb(211,171,15)" rx="2" ry="2" />
<text  x="1171.95" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.0" y="837" width="0.1" height="15.0" fill="rgb(214,91,5)" rx="2" ry="2" />
<text  x="1171.95" y="847.5" ></text>
</g>
<g >
<title>std::__numpunct_cache&lt;char&gt;::~__numpunct_cache (3 samples, 0.05%)</title><rect x="878.3" y="2037" width="0.6" height="15.0" fill="rgb(245,227,33)" rx="2" ry="2" />
<text  x="881.34" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.8" y="709" width="0.2" height="15.0" fill="rgb(248,15,54)" rx="2" ry="2" />
<text  x="1171.77" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.06%)</title><rect x="1169.3" y="1013" width="0.8" height="15.0" fill="rgb(236,47,36)" rx="2" ry="2" />
<text  x="1172.32" y="1023.5" ></text>
</g>
<g >
<title>cfree (4 samples, 0.06%)</title><rect x="114.1" y="1637" width="0.8" height="15.0" fill="rgb(223,54,39)" rx="2" ry="2" />
<text  x="117.13" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.1" y="885" width="0.2" height="15.0" fill="rgb(241,45,17)" rx="2" ry="2" />
<text  x="1172.14" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.2" y="613" width="0.2" height="15.0" fill="rgb(217,91,45)" rx="2" ry="2" />
<text  x="1173.24" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="130.0" y="1301" width="0.2" height="15.0" fill="rgb(238,79,5)" rx="2" ry="2" />
<text  x="133.01" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.6" y="805" width="0.2" height="15.0" fill="rgb(235,112,10)" rx="2" ry="2" />
<text  x="1171.58" y="815.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="631.7" y="1845" width="0.1" height="15.0" fill="rgb(238,181,30)" rx="2" ry="2" />
<text  x="634.66" y="1855.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="84.4" y="1877" width="0.2" height="15.0" fill="rgb(207,9,15)" rx="2" ry="2" />
<text  x="87.41" y="1887.5" ></text>
</g>
<g >
<title>std::vector&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::allocator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;::vector (2 samples, 0.03%)</title><rect x="588.3" y="1909" width="0.3" height="15.0" fill="rgb(236,22,27)" rx="2" ry="2" />
<text  x="591.28" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.1" y="709" width="0.2" height="15.0" fill="rgb(224,158,2)" rx="2" ry="2" />
<text  x="1172.14" y="719.5" ></text>
</g>
<g >
<title>kthread_blkcg (1 samples, 0.02%)</title><rect x="431.0" y="1845" width="0.2" height="15.0" fill="rgb(235,127,27)" rx="2" ry="2" />
<text  x="433.97" y="1855.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (9 samples, 0.14%)</title><rect x="714.2" y="1765" width="1.7" height="15.0" fill="rgb(212,167,10)" rx="2" ry="2" />
<text  x="717.20" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="613" width="0.1" height="15.0" fill="rgb(216,196,11)" rx="2" ry="2" />
<text  x="1173.06" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.0" y="661" width="0.1" height="15.0" fill="rgb(245,98,20)" rx="2" ry="2" />
<text  x="1171.95" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Scanner&lt;char&gt;::_M_scan_normal (1 samples, 0.02%)</title><rect x="172.5" y="1621" width="0.2" height="15.0" fill="rgb(229,6,42)" rx="2" ry="2" />
<text  x="175.48" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.8" y="1589" width="0.2" height="15.0" fill="rgb(223,86,48)" rx="2" ry="2" />
<text  x="1171.77" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.06%)</title><rect x="129.6" y="1653" width="0.8" height="15.0" fill="rgb(214,105,41)" rx="2" ry="2" />
<text  x="132.64" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="130.4" y="805" width="0.2" height="15.0" fill="rgb(242,116,40)" rx="2" ry="2" />
<text  x="133.38" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.6" y="341" width="0.2" height="15.0" fill="rgb(244,204,8)" rx="2" ry="2" />
<text  x="1171.58" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="533" width="0.1" height="15.0" fill="rgb(208,62,52)" rx="2" ry="2" />
<text  x="1173.06" y="543.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="789" width="0.3" height="15.0" fill="rgb(245,137,46)" rx="2" ry="2" />
<text  x="82.98" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (28 samples, 0.44%)</title><rect x="140.9" y="1653" width="5.2" height="15.0" fill="rgb(250,205,24)" rx="2" ry="2" />
<text  x="143.91" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.6" y="1477" width="0.2" height="15.0" fill="rgb(213,94,23)" rx="2" ry="2" />
<text  x="1171.58" y="1487.5" ></text>
</g>
<g >
<title>mem_cgroup_commit_charge (2 samples, 0.03%)</title><rect x="422.3" y="1861" width="0.4" height="15.0" fill="rgb(205,32,27)" rx="2" ry="2" />
<text  x="425.29" y="1871.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (14 samples, 0.22%)</title><rect x="880.7" y="2053" width="2.6" height="15.0" fill="rgb(238,52,18)" rx="2" ry="2" />
<text  x="883.74" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (29 samples, 0.45%)</title><rect x="173.2" y="1749" width="5.4" height="15.0" fill="rgb(244,183,30)" rx="2" ry="2" />
<text  x="176.22" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.6" y="1221" width="0.2" height="15.0" fill="rgb(218,94,18)" rx="2" ry="2" />
<text  x="1171.58" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.06%)</title><rect x="129.6" y="1749" width="0.8" height="15.0" fill="rgb(235,36,6)" rx="2" ry="2" />
<text  x="132.64" y="1759.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (3 samples, 0.05%)</title><rect x="38.4" y="1941" width="0.6" height="15.0" fill="rgb(208,94,26)" rx="2" ry="2" />
<text  x="41.43" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="1621" width="0.3" height="15.0" fill="rgb(244,68,49)" rx="2" ry="2" />
<text  x="82.98" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="130.0" y="1157" width="0.2" height="15.0" fill="rgb(242,152,1)" rx="2" ry="2" />
<text  x="133.01" y="1167.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::do_tolower (1 samples, 0.02%)</title><rect x="155.5" y="1685" width="0.2" height="15.0" fill="rgb(222,213,8)" rx="2" ry="2" />
<text  x="158.49" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.6" y="181" width="0.2" height="15.0" fill="rgb(252,9,30)" rx="2" ry="2" />
<text  x="1171.58" y="191.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (1 samples, 0.02%)</title><rect x="585.7" y="1829" width="0.2" height="15.0" fill="rgb(220,176,26)" rx="2" ry="2" />
<text  x="588.69" y="1839.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="748.4" y="1845" width="0.1" height="15.0" fill="rgb(219,116,8)" rx="2" ry="2" />
<text  x="751.35" y="1855.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (4 samples, 0.06%)</title><rect x="109.7" y="1605" width="0.7" height="15.0" fill="rgb(235,104,3)" rx="2" ry="2" />
<text  x="112.70" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.2" y="1861" width="0.2" height="15.0" fill="rgb(209,226,13)" rx="2" ry="2" />
<text  x="1173.24" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (22 samples, 0.34%)</title><rect x="146.3" y="1701" width="4.0" height="15.0" fill="rgb(222,89,1)" rx="2" ry="2" />
<text  x="149.26" y="1711.5" ></text>
</g>
<g >
<title>onmt::ITokenizer::tokenize (1,392 samples, 21.78%)</title><rect x="593.3" y="1941" width="257.0" height="15.0" fill="rgb(213,126,18)" rx="2" ry="2" />
<text  x="596.26" y="1951.5" >onmt::ITokenizer::tokenize</text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="453" width="0.3" height="15.0" fill="rgb(241,223,11)" rx="2" ry="2" />
<text  x="82.98" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="130.4" y="1029" width="0.2" height="15.0" fill="rgb(206,154,53)" rx="2" ry="2" />
<text  x="133.38" y="1039.5" ></text>
</g>
<g >
<title>page_fault (43 samples, 0.67%)</title><rect x="423.6" y="1957" width="7.9" height="15.0" fill="rgb(240,202,35)" rx="2" ry="2" />
<text  x="426.58" y="1967.5" ></text>
</g>
<g >
<title>page_fault (4 samples, 0.06%)</title><rect x="78.7" y="2021" width="0.7" height="15.0" fill="rgb(251,29,53)" rx="2" ry="2" />
<text  x="81.68" y="2031.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::has_features (1 samples, 0.02%)</title><rect x="594.9" y="1909" width="0.2" height="15.0" fill="rgb(241,131,33)" rx="2" ry="2" />
<text  x="597.92" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (29 samples, 0.45%)</title><rect x="173.2" y="1733" width="5.4" height="15.0" fill="rgb(211,151,30)" rx="2" ry="2" />
<text  x="176.22" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="130.4" y="1269" width="0.2" height="15.0" fill="rgb(219,69,37)" rx="2" ry="2" />
<text  x="133.38" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.6" y="1461" width="0.2" height="15.0" fill="rgb(240,40,12)" rx="2" ry="2" />
<text  x="1171.58" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.06%)</title><rect x="1169.3" y="1333" width="0.8" height="15.0" fill="rgb(228,0,50)" rx="2" ry="2" />
<text  x="1172.32" y="1343.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (2 samples, 0.03%)</title><rect x="38.4" y="1925" width="0.4" height="15.0" fill="rgb(232,122,34)" rx="2" ry="2" />
<text  x="41.43" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (1 samples, 0.02%)</title><rect x="193.9" y="1861" width="0.2" height="15.0" fill="rgb(231,115,17)" rx="2" ry="2" />
<text  x="196.90" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="130.4" y="1397" width="0.2" height="15.0" fill="rgb(243,124,34)" rx="2" ry="2" />
<text  x="133.38" y="1407.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::getSubwords (3 samples, 0.05%)</title><rect x="315.0" y="1989" width="0.6" height="15.0" fill="rgb(215,145,35)" rx="2" ry="2" />
<text  x="318.02" y="1999.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (1 samples, 0.02%)</title><rect x="104.0" y="1573" width="0.2" height="15.0" fill="rgb(225,136,35)" rx="2" ry="2" />
<text  x="106.98" y="1583.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_Alloc_node&gt; (2 samples, 0.03%)</title><rect x="588.3" y="1973" width="0.3" height="15.0" fill="rgb(250,104,38)" rx="2" ry="2" />
<text  x="591.28" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.0" y="1813" width="0.1" height="15.0" fill="rgb(233,191,44)" rx="2" ry="2" />
<text  x="1171.95" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="853" width="0.1" height="15.0" fill="rgb(221,146,7)" rx="2" ry="2" />
<text  x="1173.06" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (74 samples, 1.16%)</title><rect x="159.6" y="1765" width="13.6" height="15.0" fill="rgb(244,165,53)" rx="2" ry="2" />
<text  x="162.55" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (186 samples, 2.91%)</title><rect x="159.6" y="1861" width="34.3" height="15.0" fill="rgb(220,127,21)" rx="2" ry="2" />
<text  x="162.55" y="1871.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.2" y="981" width="0.2" height="15.0" fill="rgb(240,36,3)" rx="2" ry="2" />
<text  x="1173.24" y="991.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="1557" width="0.3" height="15.0" fill="rgb(224,114,25)" rx="2" ry="2" />
<text  x="82.98" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="130.4" y="1109" width="0.2" height="15.0" fill="rgb(210,120,38)" rx="2" ry="2" />
<text  x="133.38" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="130.4" y="789" width="0.2" height="15.0" fill="rgb(220,15,12)" rx="2" ry="2" />
<text  x="133.38" y="799.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (16 samples, 0.25%)</title><rect x="870.8" y="2037" width="2.9" height="15.0" fill="rgb(248,99,16)" rx="2" ry="2" />
<text  x="873.77" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="1941" width="0.3" height="15.0" fill="rgb(229,217,39)" rx="2" ry="2" />
<text  x="82.98" y="1951.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::at (2 samples, 0.03%)</title><rect x="84.0" y="1941" width="0.4" height="15.0" fill="rgb(220,119,15)" rx="2" ry="2" />
<text  x="87.04" y="1951.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="85.5" y="1941" width="0.2" height="15.0" fill="rgb(224,135,52)" rx="2" ry="2" />
<text  x="88.52" y="1951.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (7 samples, 0.11%)</title><rect x="43.4" y="1893" width="1.3" height="15.0" fill="rgb(230,68,31)" rx="2" ry="2" />
<text  x="46.42" y="1903.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (2 samples, 0.03%)</title><rect x="1091.6" y="2005" width="0.4" height="15.0" fill="rgb(209,39,0)" rx="2" ry="2" />
<text  x="1094.59" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="1749" width="0.1" height="15.0" fill="rgb(246,93,50)" rx="2" ry="2" />
<text  x="1173.06" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.0" y="1429" width="0.1" height="15.0" fill="rgb(227,171,31)" rx="2" ry="2" />
<text  x="1171.95" y="1439.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="100.3" y="1669" width="0.2" height="15.0" fill="rgb(242,62,15)" rx="2" ry="2" />
<text  x="103.29" y="1679.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::set_case (3 samples, 0.05%)</title><rect x="595.5" y="1909" width="0.5" height="15.0" fill="rgb(212,16,34)" rx="2" ry="2" />
<text  x="598.48" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="129.6" y="245" width="0.2" height="15.0" fill="rgb(221,44,23)" rx="2" ry="2" />
<text  x="132.64" y="255.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="79.8" y="1925" width="0.2" height="15.0" fill="rgb(231,27,29)" rx="2" ry="2" />
<text  x="82.79" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="157.2" y="1605" width="0.1" height="15.0" fill="rgb(207,70,24)" rx="2" ry="2" />
<text  x="160.15" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="129.6" y="821" width="0.2" height="15.0" fill="rgb(247,217,30)" rx="2" ry="2" />
<text  x="132.64" y="831.5" ></text>
</g>
<g >
<title>fasttext::Vector::mul (1 samples, 0.02%)</title><rect x="82.9" y="2021" width="0.2" height="15.0" fill="rgb(229,218,18)" rx="2" ry="2" />
<text  x="85.93" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.06%)</title><rect x="1169.3" y="469" width="0.8" height="15.0" fill="rgb(207,8,16)" rx="2" ry="2" />
<text  x="1172.32" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="773" width="0.1" height="15.0" fill="rgb(206,151,26)" rx="2" ry="2" />
<text  x="1173.06" y="783.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="69" width="0.3" height="15.0" fill="rgb(206,81,39)" rx="2" ry="2" />
<text  x="82.98" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (1 samples, 0.02%)</title><rect x="156.6" y="1861" width="0.2" height="15.0" fill="rgb(220,160,12)" rx="2" ry="2" />
<text  x="159.60" y="1871.5" ></text>
</g>
<g >
<title>handle_mm_fault (41 samples, 0.64%)</title><rect x="424.0" y="1909" width="7.5" height="15.0" fill="rgb(244,39,0)" rx="2" ry="2" />
<text  x="426.95" y="1919.5" ></text>
</g>
<g >
<title>all (6,391 samples, 100%)</title><rect x="10.0" y="2085" width="1180.0" height="15.0" fill="rgb(238,144,34)" rx="2" ry="2" />
<text  x="13.00" y="2095.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.0" y="613" width="0.1" height="15.0" fill="rgb(236,74,8)" rx="2" ry="2" />
<text  x="1171.95" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.2" y="373" width="0.2" height="15.0" fill="rgb(221,129,31)" rx="2" ry="2" />
<text  x="1173.24" y="383.5" ></text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::scan_string (64 samples, 1.00%)</title><rect x="86.6" y="1941" width="11.8" height="15.0" fill="rgb(236,174,52)" rx="2" ry="2" />
<text  x="89.62" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.1" y="1205" width="0.2" height="15.0" fill="rgb(241,128,48)" rx="2" ry="2" />
<text  x="1172.14" y="1215.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="878.9" y="2005" width="0.2" height="15.0" fill="rgb(236,49,35)" rx="2" ry="2" />
<text  x="881.89" y="2015.5" ></text>
</g>
<g >
<title>fasttext::ProductQuantizer::addcode (211 samples, 3.30%)</title><rect x="1053.0" y="2053" width="39.0" height="15.0" fill="rgb(216,83,12)" rx="2" ry="2" />
<text  x="1056.00" y="2063.5" >fas..</text>
</g>
<g >
<title>get_user_pages_fast (1 samples, 0.02%)</title><rect x="43.2" y="1909" width="0.2" height="15.0" fill="rgb(206,122,15)" rx="2" ry="2" />
<text  x="46.23" y="1919.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; const*, std::vector&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::allocator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;*&gt; (2 samples, 0.03%)</title><rect x="588.3" y="1893" width="0.3" height="15.0" fill="rgb(230,182,23)" rx="2" ry="2" />
<text  x="591.28" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.06%)</title><rect x="879.1" y="2021" width="0.7" height="15.0" fill="rgb(245,54,12)" rx="2" ry="2" />
<text  x="882.08" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.1" y="917" width="0.2" height="15.0" fill="rgb(231,91,13)" rx="2" ry="2" />
<text  x="1172.14" y="927.5" ></text>
</g>
<g >
<title>std::istream::_M_extract&lt;long&gt; (1 samples, 0.02%)</title><rect x="173.0" y="1717" width="0.2" height="15.0" fill="rgb(217,150,54)" rx="2" ry="2" />
<text  x="176.03" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (32 samples, 0.50%)</title><rect x="106.6" y="1701" width="5.9" height="15.0" fill="rgb(208,20,31)" rx="2" ry="2" />
<text  x="109.56" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.06%)</title><rect x="1169.3" y="1269" width="0.8" height="15.0" fill="rgb(233,121,42)" rx="2" ry="2" />
<text  x="1172.32" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.3" y="117" width="0.2" height="15.0" fill="rgb(232,194,37)" rx="2" ry="2" />
<text  x="1172.32" y="127.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.02%)</title><rect x="443.2" y="1973" width="0.1" height="15.0" fill="rgb(205,143,34)" rx="2" ry="2" />
<text  x="446.15" y="1983.5" ></text>
</g>
<g >
<title>std::__merge_without_buffer&lt;__gnu_cxx::__normal_iterator&lt;TWeightedDoc*, std::vector&lt;TWeightedDoc, std::allocator&lt;TWeightedDoc&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;TNewsCluster::SortByWeights (96 samples, 1.50%)</title><rect x="1170.4" y="2053" width="17.8" height="15.0" fill="rgb(238,119,34)" rx="2" ry="2" />
<text  x="1173.43" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.0" y="1877" width="0.1" height="15.0" fill="rgb(209,70,34)" rx="2" ry="2" />
<text  x="1171.95" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.6" y="1493" width="0.2" height="15.0" fill="rgb(218,18,6)" rx="2" ry="2" />
<text  x="1171.58" y="1503.5" ></text>
</g>
<g >
<title>malloc@plt (1 samples, 0.02%)</title><rect x="440.0" y="1957" width="0.2" height="15.0" fill="rgb(238,174,19)" rx="2" ry="2" />
<text  x="443.01" y="1967.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (3 samples, 0.05%)</title><rect x="996.5" y="2037" width="0.6" height="15.0" fill="rgb(209,73,1)" rx="2" ry="2" />
<text  x="999.50" y="2047.5" ></text>
</g>
<g >
<title>vfs_read (2 samples, 0.03%)</title><rect x="83.7" y="1957" width="0.3" height="15.0" fill="rgb(215,120,5)" rx="2" ry="2" />
<text  x="86.67" y="1967.5" ></text>
</g>
<g >
<title>mem_cgroup_from_task (1 samples, 0.02%)</title><rect x="431.3" y="1893" width="0.2" height="15.0" fill="rgb(225,94,24)" rx="2" ry="2" />
<text  x="434.34" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.0" y="149" width="0.1" height="15.0" fill="rgb(247,124,53)" rx="2" ry="2" />
<text  x="1171.95" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.9" y="37" width="0.2" height="15.0" fill="rgb(251,87,1)" rx="2" ry="2" />
<text  x="1172.87" y="47.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (44 samples, 0.69%)</title><rect x="748.5" y="1877" width="8.2" height="15.0" fill="rgb(208,21,35)" rx="2" ry="2" />
<text  x="751.54" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="117" width="0.1" height="15.0" fill="rgb(222,92,45)" rx="2" ry="2" />
<text  x="1173.06" y="127.5" ></text>
</g>
<g >
<title>arch_tlb_finish_mmu (1 samples, 0.02%)</title><rect x="585.7" y="1877" width="0.2" height="15.0" fill="rgb(222,13,52)" rx="2" ry="2" />
<text  x="588.69" y="1887.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1045.6" y="2037" width="0.2" height="15.0" fill="rgb(253,100,16)" rx="2" ry="2" />
<text  x="1048.62" y="2047.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.03%)</title><rect x="643.7" y="1861" width="0.3" height="15.0" fill="rgb(238,103,52)" rx="2" ry="2" />
<text  x="646.67" y="1871.5" ></text>
</g>
<g >
<title>Annotate (88 samples, 1.38%)</title><rect x="84.0" y="2005" width="16.3" height="15.0" fill="rgb(211,90,36)" rx="2" ry="2" />
<text  x="87.04" y="2015.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1095.5" y="2021" width="0.2" height="15.0" fill="rgb(252,85,25)" rx="2" ry="2" />
<text  x="1098.47" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_Compiler (158 samples, 2.47%)</title><rect x="100.3" y="1941" width="29.2" height="15.0" fill="rgb(223,154,28)" rx="2" ry="2" />
<text  x="103.29" y="1951.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="130.4" y="821" width="0.2" height="15.0" fill="rgb(240,48,49)" rx="2" ry="2" />
<text  x="133.38" y="831.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;std::__detail::_State&lt;char&gt; const*, std::__detail::_State&lt;char&gt;*&gt; (1 samples, 0.02%)</title><rect x="100.3" y="1653" width="0.2" height="15.0" fill="rgb(205,117,5)" rx="2" ry="2" />
<text  x="103.29" y="1663.5" ></text>
</g>
<g >
<title>clear_page_erms (2 samples, 0.03%)</title><rect x="85.9" y="1797" width="0.4" height="15.0" fill="rgb(254,210,47)" rx="2" ry="2" />
<text  x="88.88" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.6" y="1797" width="0.2" height="15.0" fill="rgb(212,191,21)" rx="2" ry="2" />
<text  x="1171.58" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="1973" width="0.3" height="15.0" fill="rgb(221,73,26)" rx="2" ry="2" />
<text  x="82.98" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="130.4" y="1301" width="0.2" height="15.0" fill="rgb(208,192,48)" rx="2" ry="2" />
<text  x="133.38" y="1311.5" ></text>
</g>
<g >
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="1091.8" y="1957" width="0.2" height="15.0" fill="rgb(248,211,10)" rx="2" ry="2" />
<text  x="1094.77" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.1" y="821" width="0.2" height="15.0" fill="rgb(211,68,19)" rx="2" ry="2" />
<text  x="1172.14" y="831.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (15 samples, 0.23%)</title><rect x="419.2" y="1845" width="2.7" height="15.0" fill="rgb(250,22,18)" rx="2" ry="2" />
<text  x="422.15" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.06%)</title><rect x="1169.3" y="1093" width="0.8" height="15.0" fill="rgb(246,66,18)" rx="2" ry="2" />
<text  x="1172.32" y="1103.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="159.7" y="1669" width="0.2" height="15.0" fill="rgb(250,23,44)" rx="2" ry="2" />
<text  x="162.74" y="1679.5" ></text>
</g>
<g >
<title>operator delete@plt (1 samples, 0.02%)</title><rect x="102.5" y="1589" width="0.2" height="15.0" fill="rgb(221,70,34)" rx="2" ry="2" />
<text  x="105.50" y="1599.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (21 samples, 0.33%)</title><rect x="206.8" y="1989" width="3.9" height="15.0" fill="rgb(247,197,1)" rx="2" ry="2" />
<text  x="209.82" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (33 samples, 0.52%)</title><rect x="178.6" y="1781" width="6.1" height="15.0" fill="rgb(238,121,52)" rx="2" ry="2" />
<text  x="181.57" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="130.4" y="869" width="0.2" height="15.0" fill="rgb(252,114,8)" rx="2" ry="2" />
<text  x="133.38" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.6" y="437" width="0.2" height="15.0" fill="rgb(207,133,47)" rx="2" ry="2" />
<text  x="1171.58" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1170.1" y="2021" width="0.3" height="15.0" fill="rgb(245,183,18)" rx="2" ry="2" />
<text  x="1173.06" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="130.4" y="997" width="0.2" height="15.0" fill="rgb(242,73,44)" rx="2" ry="2" />
<text  x="133.38" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="129.8" y="453" width="0.2" height="15.0" fill="rgb(234,116,51)" rx="2" ry="2" />
<text  x="132.83" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="194.6" y="1349" width="0.4" height="15.0" fill="rgb(206,219,31)" rx="2" ry="2" />
<text  x="197.63" y="1359.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (2 samples, 0.03%)</title><rect x="105.1" y="1573" width="0.4" height="15.0" fill="rgb(251,131,49)" rx="2" ry="2" />
<text  x="108.09" y="1583.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::append@plt (1 samples, 0.02%)</title><rect x="616.5" y="1893" width="0.2" height="15.0" fill="rgb(239,67,7)" rx="2" ry="2" />
<text  x="619.52" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.0" y="1781" width="0.1" height="15.0" fill="rgb(252,181,27)" rx="2" ry="2" />
<text  x="1171.95" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="130.0" y="1077" width="0.2" height="15.0" fill="rgb(249,32,48)" rx="2" ry="2" />
<text  x="133.01" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.2" y="1093" width="0.2" height="15.0" fill="rgb(218,165,16)" rx="2" ry="2" />
<text  x="1173.24" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (1 samples, 0.02%)</title><rect x="172.7" y="1637" width="0.1" height="15.0" fill="rgb(207,98,43)" rx="2" ry="2" />
<text  x="175.66" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (1 samples, 0.02%)</title><rect x="129.3" y="1717" width="0.2" height="15.0" fill="rgb(205,202,47)" rx="2" ry="2" />
<text  x="132.27" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="129.6" y="1093" width="0.2" height="15.0" fill="rgb(218,208,31)" rx="2" ry="2" />
<text  x="132.64" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.6" y="261" width="0.2" height="15.0" fill="rgb(232,68,41)" rx="2" ry="2" />
<text  x="1171.58" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="1173" width="0.1" height="15.0" fill="rgb(247,225,3)" rx="2" ry="2" />
<text  x="1173.06" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.2" y="1781" width="0.2" height="15.0" fill="rgb(237,95,8)" rx="2" ry="2" />
<text  x="1173.24" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="129.8" y="1077" width="0.2" height="15.0" fill="rgb(210,190,12)" rx="2" ry="2" />
<text  x="132.83" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.2" y="1173" width="0.2" height="15.0" fill="rgb(217,145,39)" rx="2" ry="2" />
<text  x="1173.24" y="1183.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="597" width="0.3" height="15.0" fill="rgb(220,213,26)" rx="2" ry="2" />
<text  x="82.98" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.06%)</title><rect x="1169.3" y="1205" width="0.8" height="15.0" fill="rgb(241,151,44)" rx="2" ry="2" />
<text  x="1172.32" y="1215.5" ></text>
</g>
<g >
<title>onmt::unicode::is_separator@plt (1 samples, 0.02%)</title><rect x="834.0" y="1893" width="0.2" height="15.0" fill="rgb(219,79,2)" rx="2" ry="2" />
<text  x="837.02" y="1903.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="906.4" y="2021" width="0.4" height="15.0" fill="rgb(218,45,2)" rx="2" ry="2" />
<text  x="909.40" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.2" y="869" width="0.2" height="15.0" fill="rgb(222,162,47)" rx="2" ry="2" />
<text  x="1173.24" y="879.5" ></text>
</g>
<g >
<title>do_page_fault (24 samples, 0.38%)</title><rect x="34.9" y="2021" width="4.5" height="15.0" fill="rgb(211,109,48)" rx="2" ry="2" />
<text  x="37.93" y="2031.5" ></text>
</g>
<g >
<title>__dynamic_cast (4 samples, 0.06%)</title><rect x="179.3" y="1669" width="0.7" height="15.0" fill="rgb(225,12,53)" rx="2" ry="2" />
<text  x="182.31" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.6" y="1093" width="0.2" height="15.0" fill="rgb(232,97,28)" rx="2" ry="2" />
<text  x="1171.58" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="517" width="0.1" height="15.0" fill="rgb(252,154,4)" rx="2" ry="2" />
<text  x="1173.06" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="129.6" y="597" width="0.2" height="15.0" fill="rgb(229,56,6)" rx="2" ry="2" />
<text  x="132.64" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.8" y="1045" width="0.2" height="15.0" fill="rgb(246,191,54)" rx="2" ry="2" />
<text  x="1171.77" y="1055.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt;@plt (1 samples, 0.02%)</title><rect x="178.2" y="1637" width="0.2" height="15.0" fill="rgb(249,37,2)" rx="2" ry="2" />
<text  x="181.20" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.06%)</title><rect x="1169.3" y="693" width="0.8" height="15.0" fill="rgb(206,220,8)" rx="2" ry="2" />
<text  x="1172.32" y="703.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::_Bind&lt;Annotate (1,426 samples, 22.31%)</title><rect x="589.8" y="1989" width="263.2" height="15.0" fill="rgb(251,12,30)" rx="2" ry="2" />
<text  x="592.75" y="1999.5" >std::__invoke&lt;std::_Bind&lt;Annotate</text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::__detail::_CharMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt; &gt;::_M_manager (1 samples, 0.02%)</title><rect x="159.6" y="1669" width="0.1" height="15.0" fill="rgb(242,120,30)" rx="2" ry="2" />
<text  x="162.55" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="157.2" y="1909" width="0.3" height="15.0" fill="rgb(217,30,47)" rx="2" ry="2" />
<text  x="160.15" y="1919.5" ></text>
</g>
<g >
<title>unmap_page_range (2 samples, 0.03%)</title><rect x="443.3" y="1829" width="0.4" height="15.0" fill="rgb(240,169,30)" rx="2" ry="2" />
<text  x="446.34" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.1" y="1045" width="0.2" height="15.0" fill="rgb(252,5,45)" rx="2" ry="2" />
<text  x="1172.14" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (31 samples, 0.49%)</title><rect x="112.5" y="1733" width="5.7" height="15.0" fill="rgb(231,47,1)" rx="2" ry="2" />
<text  x="115.47" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="129.6" y="229" width="0.2" height="15.0" fill="rgb(244,219,54)" rx="2" ry="2" />
<text  x="132.64" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.2" y="1621" width="0.2" height="15.0" fill="rgb(228,154,7)" rx="2" ry="2" />
<text  x="1173.24" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.1" y="229" width="0.2" height="15.0" fill="rgb(231,112,32)" rx="2" ry="2" />
<text  x="1172.14" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::allocator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;::vector (1 samples, 0.02%)</title><rect x="588.5" y="1797" width="0.1" height="15.0" fill="rgb(237,170,30)" rx="2" ry="2" />
<text  x="591.46" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="661" width="0.3" height="15.0" fill="rgb(250,154,6)" rx="2" ry="2" />
<text  x="82.98" y="671.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="585.7" y="1989" width="0.2" height="15.0" fill="rgb(254,183,13)" rx="2" ry="2" />
<text  x="588.69" y="1999.5" ></text>
</g>
<g >
<title>get_page_from_freelist (3 samples, 0.05%)</title><rect x="421.4" y="1829" width="0.5" height="15.0" fill="rgb(208,208,47)" rx="2" ry="2" />
<text  x="424.37" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.1" y="597" width="0.2" height="15.0" fill="rgb(239,157,22)" rx="2" ry="2" />
<text  x="1172.14" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.2" y="597" width="0.2" height="15.0" fill="rgb(229,16,20)" rx="2" ry="2" />
<text  x="1173.24" y="607.5" ></text>
</g>
<g >
<title>std::operator&gt;&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (2 samples, 0.03%)</title><rect x="335.3" y="1989" width="0.4" height="15.0" fill="rgb(220,205,40)" rx="2" ry="2" />
<text  x="338.33" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (1 samples, 0.02%)</title><rect x="194.3" y="1877" width="0.2" height="15.0" fill="rgb(213,71,21)" rx="2" ry="2" />
<text  x="197.27" y="1887.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (2 samples, 0.03%)</title><rect x="176.4" y="1621" width="0.3" height="15.0" fill="rgb(220,36,38)" rx="2" ry="2" />
<text  x="179.36" y="1631.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (1 samples, 0.02%)</title><rect x="192.4" y="1701" width="0.2" height="15.0" fill="rgb(241,110,54)" rx="2" ry="2" />
<text  x="195.42" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="130.4" y="901" width="0.2" height="15.0" fill="rgb(230,124,21)" rx="2" ry="2" />
<text  x="133.38" y="911.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (1 samples, 0.02%)</title><rect x="149.4" y="1637" width="0.2" height="15.0" fill="rgb(240,65,46)" rx="2" ry="2" />
<text  x="152.40" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="130.4" y="933" width="0.2" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="133.38" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (31 samples, 0.49%)</title><rect x="100.5" y="1685" width="5.7" height="15.0" fill="rgb(224,97,18)" rx="2" ry="2" />
<text  x="103.47" y="1695.5" ></text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::get (30 samples, 0.47%)</title><rect x="89.2" y="1925" width="5.5" height="15.0" fill="rgb(213,127,52)" rx="2" ry="2" />
<text  x="92.21" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.8" y="997" width="0.2" height="15.0" fill="rgb(239,99,38)" rx="2" ry="2" />
<text  x="1171.77" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.06%)</title><rect x="1169.3" y="1509" width="0.8" height="15.0" fill="rgb(227,58,46)" rx="2" ry="2" />
<text  x="1172.32" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="1701" width="0.1" height="15.0" fill="rgb(240,172,7)" rx="2" ry="2" />
<text  x="1173.06" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.0" y="1733" width="0.1" height="15.0" fill="rgb(222,24,17)" rx="2" ry="2" />
<text  x="1171.95" y="1743.5" ></text>
</g>
<g >
<title>onmt::Tokenizer::finalize_tokens (20 samples, 0.31%)</title><rect x="596.8" y="1909" width="3.7" height="15.0" fill="rgb(250,12,23)" rx="2" ry="2" />
<text  x="599.77" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.0" y="565" width="0.1" height="15.0" fill="rgb(221,179,35)" rx="2" ry="2" />
<text  x="1171.95" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="130.0" y="1109" width="0.2" height="15.0" fill="rgb(228,38,52)" rx="2" ry="2" />
<text  x="133.01" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.2" y="1445" width="0.2" height="15.0" fill="rgb(226,219,29)" rx="2" ry="2" />
<text  x="1173.24" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.6" y="533" width="0.2" height="15.0" fill="rgb(217,169,9)" rx="2" ry="2" />
<text  x="1171.58" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="129.6" y="69" width="0.2" height="15.0" fill="rgb(210,63,6)" rx="2" ry="2" />
<text  x="132.64" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.08%)</title><rect x="1169.1" y="1813" width="1.0" height="15.0" fill="rgb(218,113,28)" rx="2" ry="2" />
<text  x="1172.14" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (16 samples, 0.25%)</title><rect x="133.0" y="1573" width="2.9" height="15.0" fill="rgb(226,38,22)" rx="2" ry="2" />
<text  x="135.97" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="130.4" y="1573" width="0.2" height="15.0" fill="rgb(211,106,33)" rx="2" ry="2" />
<text  x="133.38" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="129.6" y="293" width="0.2" height="15.0" fill="rgb(240,175,25)" rx="2" ry="2" />
<text  x="132.64" y="303.5" ></text>
</g>
<g >
<title>__handle_mm_fault (3 samples, 0.05%)</title><rect x="78.9" y="1957" width="0.5" height="15.0" fill="rgb(222,196,24)" rx="2" ry="2" />
<text  x="81.87" y="1967.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="105.8" y="1589" width="0.2" height="15.0" fill="rgb(208,160,25)" rx="2" ry="2" />
<text  x="108.83" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.06%)</title><rect x="1169.3" y="261" width="0.8" height="15.0" fill="rgb(228,228,5)" rx="2" ry="2" />
<text  x="1172.32" y="271.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="585.7" y="1973" width="0.2" height="15.0" fill="rgb(248,119,32)" rx="2" ry="2" />
<text  x="588.69" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.1" y="373" width="0.2" height="15.0" fill="rgb(241,181,30)" rx="2" ry="2" />
<text  x="1172.14" y="383.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="314.8" y="1925" width="0.2" height="15.0" fill="rgb(248,131,48)" rx="2" ry="2" />
<text  x="317.83" y="1935.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;std::__future_base::_Task_state&lt;std::_Bind&lt;Annotate (3 samples, 0.05%)</title><rect x="99.0" y="1973" width="0.5" height="15.0" fill="rgb(254,163,48)" rx="2" ry="2" />
<text  x="101.99" y="1983.5" ></text>
</g>
<g >
<title>TDocument::operator= (1 samples, 0.02%)</title><rect x="587.7" y="1957" width="0.2" height="15.0" fill="rgb(239,70,52)" rx="2" ry="2" />
<text  x="590.72" y="1967.5" ></text>
</g>
<g >
<title>wake_up_q (7 samples, 0.11%)</title><rect x="43.4" y="1925" width="1.3" height="15.0" fill="rgb(218,35,40)" rx="2" ry="2" />
<text  x="46.42" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="629" width="0.1" height="15.0" fill="rgb(231,111,53)" rx="2" ry="2" />
<text  x="1173.06" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (1 samples, 0.02%)</title><rect x="129.3" y="1749" width="0.2" height="15.0" fill="rgb(249,155,5)" rx="2" ry="2" />
<text  x="132.27" y="1759.5" ></text>
</g>
<g >
<title>Eigen::internal::gemv_dense_selector&lt;2, 1, true&gt;::run&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; &gt; (1 samples, 0.02%)</title><rect x="205.9" y="1957" width="0.2" height="15.0" fill="rgb(235,167,20)" rx="2" ry="2" />
<text  x="208.90" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.8" y="1157" width="0.2" height="15.0" fill="rgb(235,197,47)" rx="2" ry="2" />
<text  x="1171.77" y="1167.5" ></text>
</g>
<g >
<title>do_page_fault (43 samples, 0.67%)</title><rect x="423.6" y="1941" width="7.9" height="15.0" fill="rgb(241,59,31)" rx="2" ry="2" />
<text  x="426.58" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.06%)</title><rect x="1169.3" y="821" width="0.8" height="15.0" fill="rgb(241,87,50)" rx="2" ry="2" />
<text  x="1172.32" y="831.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="293" width="0.3" height="15.0" fill="rgb(230,76,51)" rx="2" ry="2" />
<text  x="82.98" y="303.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="631.7" y="1861" width="0.1" height="15.0" fill="rgb(235,150,43)" rx="2" ry="2" />
<text  x="634.66" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.0" y="325" width="0.1" height="15.0" fill="rgb(228,161,16)" rx="2" ry="2" />
<text  x="1171.95" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.06%)</title><rect x="1169.3" y="1109" width="0.8" height="15.0" fill="rgb(244,90,21)" rx="2" ry="2" />
<text  x="1172.32" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="129.8" y="981" width="0.2" height="15.0" fill="rgb(241,5,14)" rx="2" ry="2" />
<text  x="132.83" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.8" y="1717" width="0.2" height="15.0" fill="rgb(207,83,25)" rx="2" ry="2" />
<text  x="1171.77" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="129.8" y="501" width="0.2" height="15.0" fill="rgb(227,22,11)" rx="2" ry="2" />
<text  x="132.83" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.2" y="453" width="0.2" height="15.0" fill="rgb(236,39,36)" rx="2" ry="2" />
<text  x="1173.24" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.2" y="757" width="0.2" height="15.0" fill="rgb(207,133,4)" rx="2" ry="2" />
<text  x="1173.24" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.1" y="549" width="0.2" height="15.0" fill="rgb(253,36,53)" rx="2" ry="2" />
<text  x="1172.14" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.8" y="805" width="0.2" height="15.0" fill="rgb(223,189,4)" rx="2" ry="2" />
<text  x="1171.77" y="815.5" ></text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.02%)</title><rect x="79.1" y="1909" width="0.1" height="15.0" fill="rgb(229,87,52)" rx="2" ry="2" />
<text  x="82.05" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.8" y="213" width="0.2" height="15.0" fill="rgb(227,108,43)" rx="2" ry="2" />
<text  x="1171.77" y="223.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="405" width="0.3" height="15.0" fill="rgb(217,76,11)" rx="2" ry="2" />
<text  x="82.98" y="415.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="102.7" y="1589" width="0.2" height="15.0" fill="rgb(211,113,41)" rx="2" ry="2" />
<text  x="105.69" y="1599.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="584.8" y="1973" width="0.2" height="15.0" fill="rgb(252,177,43)" rx="2" ry="2" />
<text  x="587.77" y="1983.5" ></text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.02%)</title><rect x="748.4" y="1797" width="0.1" height="15.0" fill="rgb(222,87,20)" rx="2" ry="2" />
<text  x="751.35" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.8" y="501" width="0.2" height="15.0" fill="rgb(230,209,26)" rx="2" ry="2" />
<text  x="1171.77" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (27 samples, 0.42%)</title><rect x="118.2" y="1765" width="5.0" height="15.0" fill="rgb(248,160,8)" rx="2" ry="2" />
<text  x="121.20" y="1775.5" ></text>
</g>
<g >
<title>unmap_page_range (1 samples, 0.02%)</title><rect x="584.8" y="1845" width="0.2" height="15.0" fill="rgb(248,188,42)" rx="2" ry="2" />
<text  x="587.77" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (14 samples, 0.22%)</title><rect x="175.1" y="1637" width="2.5" height="15.0" fill="rgb(241,61,0)" rx="2" ry="2" />
<text  x="178.06" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="129.8" y="1013" width="0.2" height="15.0" fill="rgb(219,124,13)" rx="2" ry="2" />
<text  x="132.83" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.06%)</title><rect x="1169.3" y="277" width="0.8" height="15.0" fill="rgb(210,191,0)" rx="2" ry="2" />
<text  x="1172.32" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="129.8" y="1061" width="0.2" height="15.0" fill="rgb(237,55,44)" rx="2" ry="2" />
<text  x="132.83" y="1071.5" ></text>
</g>
<g >
<title>__strxfrm_l (2 samples, 0.03%)</title><rect x="906.8" y="2053" width="0.3" height="15.0" fill="rgb(234,73,7)" rx="2" ry="2" />
<text  x="909.77" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.8" y="1813" width="0.2" height="15.0" fill="rgb(221,153,0)" rx="2" ry="2" />
<text  x="1171.77" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.2" y="1733" width="0.2" height="15.0" fill="rgb(249,36,39)" rx="2" ry="2" />
<text  x="1173.24" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="129.8" y="1429" width="0.6" height="15.0" fill="rgb(222,174,31)" rx="2" ry="2" />
<text  x="132.83" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.08%)</title><rect x="1169.1" y="1621" width="1.0" height="15.0" fill="rgb(246,14,31)" rx="2" ry="2" />
<text  x="1172.14" y="1631.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (8 samples, 0.13%)</title><rect x="591.2" y="1941" width="1.5" height="15.0" fill="rgb(233,200,6)" rx="2" ry="2" />
<text  x="594.23" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.1" y="1525" width="0.2" height="15.0" fill="rgb(229,170,11)" rx="2" ry="2" />
<text  x="1172.14" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="130.4" y="1477" width="0.2" height="15.0" fill="rgb(248,199,12)" rx="2" ry="2" />
<text  x="133.38" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.8" y="1237" width="0.2" height="15.0" fill="rgb(249,27,32)" rx="2" ry="2" />
<text  x="1171.77" y="1247.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (5 samples, 0.08%)</title><rect x="190.9" y="1685" width="1.0" height="15.0" fill="rgb(248,53,36)" rx="2" ry="2" />
<text  x="193.94" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.1" y="629" width="0.2" height="15.0" fill="rgb(230,9,25)" rx="2" ry="2" />
<text  x="1172.14" y="639.5" ></text>
</g>
<g >
<title>typeinfo name for __gnu_cxx::stdio_filebuf&lt;char, std::char_traits&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="83.3" y="2021" width="0.2" height="15.0" fill="rgb(237,178,11)" rx="2" ry="2" />
<text  x="86.30" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="129.6" y="933" width="0.2" height="15.0" fill="rgb(254,166,17)" rx="2" ry="2" />
<text  x="132.64" y="943.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="885" width="0.3" height="15.0" fill="rgb(245,76,6)" rx="2" ry="2" />
<text  x="82.98" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.8" y="933" width="0.2" height="15.0" fill="rgb(239,130,39)" rx="2" ry="2" />
<text  x="1171.77" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (33 samples, 0.52%)</title><rect x="178.6" y="1733" width="6.1" height="15.0" fill="rgb(215,39,35)" rx="2" ry="2" />
<text  x="181.57" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.8" y="117" width="0.2" height="15.0" fill="rgb(251,16,14)" rx="2" ry="2" />
<text  x="1171.77" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (32 samples, 0.50%)</title><rect x="123.4" y="1717" width="5.9" height="15.0" fill="rgb(233,62,34)" rx="2" ry="2" />
<text  x="126.37" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.1" y="1301" width="0.2" height="15.0" fill="rgb(207,92,38)" rx="2" ry="2" />
<text  x="1172.14" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.8" y="965" width="0.2" height="15.0" fill="rgb(215,194,33)" rx="2" ry="2" />
<text  x="1171.77" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (24 samples, 0.38%)</title><rect x="160.1" y="1605" width="4.4" height="15.0" fill="rgb(209,93,12)" rx="2" ry="2" />
<text  x="163.11" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="129.6" y="725" width="0.2" height="15.0" fill="rgb(231,166,0)" rx="2" ry="2" />
<text  x="132.64" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1169.1" y="101" width="0.2" height="15.0" fill="rgb(234,199,30)" rx="2" ry="2" />
<text  x="1172.14" y="111.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (30 samples, 0.47%)</title><rect x="150.5" y="1765" width="5.5" height="15.0" fill="rgb(236,110,48)" rx="2" ry="2" />
<text  x="153.51" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="1589" width="0.1" height="15.0" fill="rgb(236,67,17)" rx="2" ry="2" />
<text  x="1173.06" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="194.6" y="1637" width="0.4" height="15.0" fill="rgb(206,167,5)" rx="2" ry="2" />
<text  x="197.63" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="129.8" y="1029" width="0.2" height="15.0" fill="rgb(214,202,51)" rx="2" ry="2" />
<text  x="132.83" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="194.6" y="1797" width="0.4" height="15.0" fill="rgb(238,94,21)" rx="2" ry="2" />
<text  x="197.63" y="1807.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (1 samples, 0.02%)</title><rect x="83.9" y="1861" width="0.1" height="15.0" fill="rgb(249,113,1)" rx="2" ry="2" />
<text  x="86.85" y="1871.5" ></text>
</g>
<g >
<title>mutex_unlock (1 samples, 0.02%)</title><rect x="83.5" y="1941" width="0.2" height="15.0" fill="rgb(250,189,35)" rx="2" ry="2" />
<text  x="86.48" y="1951.5" ></text>
</g>
<g >
<title>tgnews (6,391 samples, 100.00%)</title><rect x="10.0" y="2069" width="1180.0" height="15.0" fill="rgb(242,163,4)" rx="2" ry="2" />
<text  x="13.00" y="2079.5" >tgnews</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="129.8" y="405" width="0.2" height="15.0" fill="rgb(235,107,35)" rx="2" ry="2" />
<text  x="132.83" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.6" y="693" width="0.2" height="15.0" fill="rgb(237,52,48)" rx="2" ry="2" />
<text  x="1171.58" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.08%)</title><rect x="1169.1" y="1733" width="1.0" height="15.0" fill="rgb(247,192,5)" rx="2" ry="2" />
<text  x="1172.14" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (35 samples, 0.55%)</title><rect x="130.6" y="1637" width="6.4" height="15.0" fill="rgb(208,46,42)" rx="2" ry="2" />
<text  x="133.57" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="129.8" y="853" width="0.2" height="15.0" fill="rgb(214,20,43)" rx="2" ry="2" />
<text  x="132.83" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="194.6" y="1717" width="0.4" height="15.0" fill="rgb(223,93,43)" rx="2" ry="2" />
<text  x="197.63" y="1727.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (1 samples, 0.02%)</title><rect x="423.0" y="1829" width="0.2" height="15.0" fill="rgb(242,223,11)" rx="2" ry="2" />
<text  x="426.03" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.8" y="101" width="0.2" height="15.0" fill="rgb(228,47,27)" rx="2" ry="2" />
<text  x="1171.77" y="111.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::pushHash (10 samples, 0.16%)</title><rect x="854.3" y="2037" width="1.9" height="15.0" fill="rgb(217,204,51)" rx="2" ry="2" />
<text  x="857.33" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="1349" width="0.3" height="15.0" fill="rgb(238,110,51)" rx="2" ry="2" />
<text  x="82.98" y="1359.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::underflow (1 samples, 0.02%)</title><rect x="94.6" y="1909" width="0.1" height="15.0" fill="rgb(225,4,28)" rx="2" ry="2" />
<text  x="97.56" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.6" y="1301" width="0.2" height="15.0" fill="rgb(245,113,5)" rx="2" ry="2" />
<text  x="1171.58" y="1311.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (3 samples, 0.05%)</title><rect x="430.2" y="1845" width="0.6" height="15.0" fill="rgb(230,48,8)" rx="2" ry="2" />
<text  x="433.23" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="129.8" y="533" width="0.2" height="15.0" fill="rgb(218,225,38)" rx="2" ry="2" />
<text  x="132.83" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.2" y="533" width="0.2" height="15.0" fill="rgb(212,115,41)" rx="2" ry="2" />
<text  x="1173.24" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="129.6" y="517" width="0.2" height="15.0" fill="rgb(217,74,33)" rx="2" ry="2" />
<text  x="132.64" y="527.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="587.5" y="1989" width="0.2" height="15.0" fill="rgb(245,226,32)" rx="2" ry="2" />
<text  x="590.54" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.2" y="277" width="0.2" height="15.0" fill="rgb(225,53,26)" rx="2" ry="2" />
<text  x="1173.24" y="287.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="101" width="0.3" height="15.0" fill="rgb(239,88,35)" rx="2" ry="2" />
<text  x="82.98" y="111.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (1 samples, 0.02%)</title><rect x="155.3" y="1685" width="0.2" height="15.0" fill="rgb(250,133,45)" rx="2" ry="2" />
<text  x="158.31" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (35 samples, 0.55%)</title><rect x="130.6" y="1653" width="6.4" height="15.0" fill="rgb(239,14,52)" rx="2" ry="2" />
<text  x="133.57" y="1663.5" ></text>
</g>
<g >
<title>ksys_read (3 samples, 0.05%)</title><rect x="83.5" y="1973" width="0.5" height="15.0" fill="rgb(248,116,39)" rx="2" ry="2" />
<text  x="86.48" y="1983.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (2 samples, 0.03%)</title><rect x="149.6" y="1637" width="0.4" height="15.0" fill="rgb(239,21,32)" rx="2" ry="2" />
<text  x="152.58" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.6" y="773" width="0.2" height="15.0" fill="rgb(215,215,33)" rx="2" ry="2" />
<text  x="1171.58" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="130.4" y="741" width="0.2" height="15.0" fill="rgb(254,10,13)" rx="2" ry="2" />
<text  x="133.38" y="751.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="869" width="0.3" height="15.0" fill="rgb(214,42,9)" rx="2" ry="2" />
<text  x="82.98" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.8" y="1557" width="0.2" height="15.0" fill="rgb(236,104,14)" rx="2" ry="2" />
<text  x="1171.77" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 0.09%)</title><rect x="80.0" y="2021" width="1.1" height="15.0" fill="rgb(215,92,22)" rx="2" ry="2" />
<text  x="82.98" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.09%)</title><rect x="1169.0" y="2021" width="1.1" height="15.0" fill="rgb(229,139,17)" rx="2" ry="2" />
<text  x="1171.95" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="157.2" y="1877" width="0.3" height="15.0" fill="rgb(237,20,37)" rx="2" ry="2" />
<text  x="160.15" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="129.8" y="581" width="0.2" height="15.0" fill="rgb(231,121,30)" rx="2" ry="2" />
<text  x="132.83" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.2" y="645" width="0.2" height="15.0" fill="rgb(227,49,34)" rx="2" ry="2" />
<text  x="1173.24" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.8" y="453" width="0.2" height="15.0" fill="rgb(222,223,10)" rx="2" ry="2" />
<text  x="1171.77" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="157.2" y="1685" width="0.1" height="15.0" fill="rgb(228,208,22)" rx="2" ry="2" />
<text  x="160.15" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_quantifier (1 samples, 0.02%)</title><rect x="156.6" y="1829" width="0.2" height="15.0" fill="rgb(251,188,3)" rx="2" ry="2" />
<text  x="159.60" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="129.8" y="437" width="0.2" height="15.0" fill="rgb(235,197,49)" rx="2" ry="2" />
<text  x="132.83" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (44 samples, 0.69%)</title><rect x="184.8" y="1765" width="8.2" height="15.0" fill="rgb(246,57,39)" rx="2" ry="2" />
<text  x="187.85" y="1775.5" ></text>
</g>
<g >
<title>onmt::unicode::is_letter (159 samples, 2.49%)</title><rect x="718.3" y="1877" width="29.3" height="15.0" fill="rgb(219,77,1)" rx="2" ry="2" />
<text  x="721.26" y="1887.5" >on..</text>
</g>
<g >
<title>onmt::is_alphabet@plt (4 samples, 0.06%)</title><rect x="759.2" y="1893" width="0.8" height="15.0" fill="rgb(213,102,48)" rx="2" ry="2" />
<text  x="762.25" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="130.0" y="1333" width="0.2" height="15.0" fill="rgb(226,199,43)" rx="2" ry="2" />
<text  x="133.01" y="1343.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="80.0" y="1029" width="0.3" height="15.0" fill="rgb(217,222,2)" rx="2" ry="2" />
<text  x="82.98" y="1039.5" ></text>
</g>
<g >
<title>copy_page_to_iter (2 samples, 0.03%)</title><rect x="906.4" y="1893" width="0.4" height="15.0" fill="rgb(209,50,25)" rx="2" ry="2" />
<text  x="909.40" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (33 samples, 0.52%)</title><rect x="100.3" y="1717" width="6.1" height="15.0" fill="rgb(215,16,15)" rx="2" ry="2" />
<text  x="103.29" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.1" y="437" width="0.2" height="15.0" fill="rgb(208,132,8)" rx="2" ry="2" />
<text  x="1172.14" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.8" y="693" width="0.2" height="15.0" fill="rgb(230,106,20)" rx="2" ry="2" />
<text  x="1171.77" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.06%)</title><rect x="1169.3" y="949" width="0.8" height="15.0" fill="rgb(246,215,21)" rx="2" ry="2" />
<text  x="1172.32" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1169.7" y="37" width="0.2" height="15.0" fill="rgb(249,224,6)" rx="2" ry="2" />
<text  x="1172.69" y="47.5" ></text>
</g>
<g >
<title>TDocument::~TDocument (1 samples, 0.02%)</title><rect x="84.6" y="1989" width="0.2" height="15.0" fill="rgb(222,27,33)" rx="2" ry="2" />
<text  x="87.59" y="1999.5" ></text>
</g>
</g>
</svg>
