<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="2134" onload="init(evt)" viewBox="0 0 1200 2134" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="2134.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="2117" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="2117" > </text>
<g id="frames">
<g >
<title>__asan::QuarantineCallback::Recycle (4 samples, 0.02%)</title><rect x="75.9" y="1077" width="0.3" height="15.0" fill="rgb(225,69,25)" rx="2" ry="2" />
<text  x="78.94" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1186.5" y="1237" width="0.4" height="15.0" fill="rgb(249,165,15)" rx="2" ry="2" />
<text  x="1189.48" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (83 samples, 0.41%)</title><rect x="167.8" y="1653" width="4.8" height="15.0" fill="rgb(249,175,43)" rx="2" ry="2" />
<text  x="170.78" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (2 samples, 0.01%)</title><rect x="215.8" y="1829" width="0.2" height="15.0" fill="rgb(229,8,42)" rx="2" ry="2" />
<text  x="218.84" y="1839.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (3 samples, 0.01%)</title><rect x="194.5" y="1573" width="0.2" height="15.0" fill="rgb(223,165,13)" rx="2" ry="2" />
<text  x="197.51" y="1583.5" ></text>
</g>
<g >
<title>__x64_sys_madvise (2 samples, 0.01%)</title><rect x="88.4" y="1765" width="0.1" height="15.0" fill="rgb(236,37,37)" rx="2" ry="2" />
<text  x="91.36" y="1775.5" ></text>
</g>
<g >
<title>page_fault (2 samples, 0.01%)</title><rect x="93.2" y="2005" width="0.1" height="15.0" fill="rgb(219,23,27)" rx="2" ry="2" />
<text  x="96.23" y="2015.5" ></text>
</g>
<g >
<title>__interceptor_memcmp (16 samples, 0.08%)</title><rect x="1002.4" y="2053" width="0.9" height="15.0" fill="rgb(227,149,36)" rx="2" ry="2" />
<text  x="1005.39" y="2063.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (50 samples, 0.25%)</title><rect x="191.6" y="1573" width="2.9" height="15.0" fill="rgb(222,22,5)" rx="2" ry="2" />
<text  x="194.57" y="1583.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.01%)</title><rect x="1108.4" y="2021" width="0.2" height="15.0" fill="rgb(228,124,1)" rx="2" ry="2" />
<text  x="1111.41" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (35 samples, 0.17%)</title><rect x="817.4" y="2021" width="2.0" height="15.0" fill="rgb(219,151,9)" rx="2" ry="2" />
<text  x="820.36" y="2031.5" ></text>
</g>
<g >
<title>__do_page_fault (29 samples, 0.14%)</title><rect x="696.9" y="1813" width="1.7" height="15.0" fill="rgb(215,207,32)" rx="2" ry="2" />
<text  x="699.85" y="1823.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (16 samples, 0.08%)</title><rect x="768.6" y="1973" width="0.9" height="15.0" fill="rgb(243,8,43)" rx="2" ry="2" />
<text  x="771.59" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1186.5" y="549" width="0.4" height="15.0" fill="rgb(240,66,49)" rx="2" ry="2" />
<text  x="1189.48" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1186.5" y="1093" width="0.4" height="15.0" fill="rgb(207,163,3)" rx="2" ry="2" />
<text  x="1189.48" y="1103.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (2 samples, 0.01%)</title><rect x="174.9" y="1589" width="0.1" height="15.0" fill="rgb(224,122,26)" rx="2" ry="2" />
<text  x="177.87" y="1599.5" ></text>
</g>
<g >
<title>std::istream::sentry::sentry (7 samples, 0.03%)</title><rect x="519.1" y="1973" width="0.5" height="15.0" fill="rgb(212,68,27)" rx="2" ry="2" />
<text  x="522.15" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (471 samples, 2.34%)</title><rect x="133.4" y="1877" width="27.6" height="15.0" fill="rgb(240,57,42)" rx="2" ry="2" />
<text  x="136.37" y="1887.5" >s..</text>
</g>
<g >
<title>fasttext::Dictionary::computeSubwords (12 samples, 0.06%)</title><rect x="874.7" y="1957" width="0.7" height="15.0" fill="rgb(232,122,10)" rx="2" ry="2" />
<text  x="877.68" y="1967.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (3 samples, 0.01%)</title><rect x="526.5" y="1861" width="0.1" height="15.0" fill="rgb(247,98,36)" rx="2" ry="2" />
<text  x="529.47" y="1871.5" ></text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::scan (3 samples, 0.01%)</title><rect x="124.3" y="1941" width="0.2" height="15.0" fill="rgb(226,1,47)" rx="2" ry="2" />
<text  x="127.29" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (597 samples, 2.97%)</title><rect x="54.3" y="1877" width="35.0" height="15.0" fill="rgb(243,72,10)" rx="2" ry="2" />
<text  x="57.31" y="1887.5" >[u..</text>
</g>
<g >
<title>page_add_new_anon_rmap (2 samples, 0.01%)</title><rect x="26.5" y="1957" width="0.1" height="15.0" fill="rgb(209,141,28)" rx="2" ry="2" />
<text  x="29.53" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="188.6" y="1301" width="0.1" height="15.0" fill="rgb(215,93,4)" rx="2" ry="2" />
<text  x="191.59" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="188.6" y="1253" width="0.1" height="15.0" fill="rgb(216,67,1)" rx="2" ry="2" />
<text  x="191.59" y="1263.5" ></text>
</g>
<g >
<title>__do_munmap (2 samples, 0.01%)</title><rect x="79.2" y="1205" width="0.1" height="15.0" fill="rgb(205,30,48)" rx="2" ry="2" />
<text  x="82.16" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="1187.1" y="181" width="0.1" height="15.0" fill="rgb(216,73,2)" rx="2" ry="2" />
<text  x="1190.07" y="191.5" ></text>
</g>
<g >
<title>[unknown] (520 samples, 2.58%)</title><rect x="54.3" y="1605" width="30.5" height="15.0" fill="rgb(229,201,49)" rx="2" ry="2" />
<text  x="57.31" y="1615.5" >[u..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.02%)</title><rect x="161.9" y="1733" width="0.2" height="15.0" fill="rgb(235,99,51)" rx="2" ry="2" />
<text  x="164.86" y="1743.5" ></text>
</g>
<g >
<title>ksys_read (3 samples, 0.01%)</title><rect x="1108.4" y="1973" width="0.2" height="15.0" fill="rgb(249,53,44)" rx="2" ry="2" />
<text  x="1111.41" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.03%)</title><rect x="1186.5" y="1061" width="0.4" height="15.0" fill="rgb(242,146,38)" rx="2" ry="2" />
<text  x="1189.48" y="1071.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::create&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt; const&amp;&gt; (4 samples, 0.02%)</title><rect x="522.6" y="1957" width="0.2" height="15.0" fill="rgb(221,129,41)" rx="2" ry="2" />
<text  x="525.61" y="1967.5" ></text>
</g>
<g >
<title>alloc_pages_vma (4 samples, 0.02%)</title><rect x="656.8" y="1781" width="0.2" height="15.0" fill="rgb(219,190,9)" rx="2" ry="2" />
<text  x="659.76" y="1791.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="82.1" y="1429" width="0.1" height="15.0" fill="rgb(209,39,1)" rx="2" ry="2" />
<text  x="85.09" y="1439.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (35 samples, 0.17%)</title><rect x="817.4" y="2005" width="2.0" height="15.0" fill="rgb(235,20,45)" rx="2" ry="2" />
<text  x="820.36" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1186.5" y="453" width="0.4" height="15.0" fill="rgb(235,188,9)" rx="2" ry="2" />
<text  x="1189.48" y="463.5" ></text>
</g>
<g >
<title>__vm_munmap (3 samples, 0.01%)</title><rect x="1099.4" y="1989" width="0.2" height="15.0" fill="rgb(243,19,13)" rx="2" ry="2" />
<text  x="1102.39" y="1999.5" ></text>
</g>
<g >
<title>clear_page_erms (7 samples, 0.03%)</title><rect x="944.5" y="1893" width="0.4" height="15.0" fill="rgb(247,86,5)" rx="2" ry="2" />
<text  x="947.48" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1186.5" y="1653" width="0.4" height="15.0" fill="rgb(240,34,38)" rx="2" ry="2" />
<text  x="1189.48" y="1663.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (2 samples, 0.01%)</title><rect x="193.4" y="1557" width="0.1" height="15.0" fill="rgb(229,222,15)" rx="2" ry="2" />
<text  x="196.39" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="1187.1" y="1381" width="0.1" height="15.0" fill="rgb(237,30,39)" rx="2" ry="2" />
<text  x="1190.07" y="1391.5" ></text>
</g>
<g >
<title>wake_up_q (7 samples, 0.03%)</title><rect x="28.2" y="1909" width="0.4" height="15.0" fill="rgb(239,79,32)" rx="2" ry="2" />
<text  x="31.17" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1186.5" y="1173" width="0.4" height="15.0" fill="rgb(253,142,54)" rx="2" ry="2" />
<text  x="1189.48" y="1183.5" ></text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::xsgetn (3 samples, 0.01%)</title><rect x="1108.4" y="2053" width="0.2" height="15.0" fill="rgb(244,198,39)" rx="2" ry="2" />
<text  x="1111.41" y="2063.5" ></text>
</g>
<g >
<title>__lsan::CollectLeaksCb (2 samples, 0.01%)</title><rect x="93.9" y="2021" width="0.1" height="15.0" fill="rgb(251,71,15)" rx="2" ry="2" />
<text  x="96.93" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (94 samples, 0.47%)</title><rect x="189.7" y="1717" width="5.5" height="15.0" fill="rgb(221,70,25)" rx="2" ry="2" />
<text  x="192.70" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (32 samples, 0.16%)</title><rect x="877.7" y="2021" width="1.9" height="15.0" fill="rgb(232,43,30)" rx="2" ry="2" />
<text  x="880.72" y="2031.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (5 samples, 0.02%)</title><rect x="755.1" y="1893" width="0.3" height="15.0" fill="rgb(238,37,43)" rx="2" ry="2" />
<text  x="758.11" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (96 samples, 0.48%)</title><rect x="155.2" y="1765" width="5.6" height="15.0" fill="rgb(246,119,4)" rx="2" ry="2" />
<text  x="158.18" y="1775.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (72 samples, 0.36%)</title><rect x="732.7" y="1877" width="4.2" height="15.0" fill="rgb(249,57,35)" rx="2" ry="2" />
<text  x="735.72" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1186.5" y="261" width="0.4" height="15.0" fill="rgb(216,119,8)" rx="2" ry="2" />
<text  x="1189.48" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="1187.0" y="1669" width="0.2" height="15.0" fill="rgb(249,37,29)" rx="2" ry="2" />
<text  x="1190.01" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.02%)</title><rect x="768.2" y="2021" width="0.3" height="15.0" fill="rgb(235,154,37)" rx="2" ry="2" />
<text  x="771.24" y="2031.5" ></text>
</g>
<g >
<title>__sanitizer::internal_munmap (2 samples, 0.01%)</title><rect x="89.0" y="1845" width="0.1" height="15.0" fill="rgb(226,221,21)" rx="2" ry="2" />
<text  x="92.01" y="1855.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt; &gt;::_M_manager (2 samples, 0.01%)</title><rect x="189.8" y="1637" width="0.1" height="15.0" fill="rgb(224,215,4)" rx="2" ry="2" />
<text  x="192.82" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="1187.1" y="277" width="0.1" height="15.0" fill="rgb(235,180,0)" rx="2" ry="2" />
<text  x="1190.07" y="287.5" ></text>
</g>
<g >
<title>__lsan::LsanMetadata::allocated (3 samples, 0.01%)</title><rect x="525.2" y="2037" width="0.2" height="15.0" fill="rgb(208,228,25)" rx="2" ry="2" />
<text  x="528.24" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="161.7" y="1813" width="0.4" height="15.0" fill="rgb(249,161,49)" rx="2" ry="2" />
<text  x="164.68" y="1823.5" ></text>
</g>
<g >
<title>do_page_fault (10 samples, 0.05%)</title><rect x="106.1" y="2005" width="0.5" height="15.0" fill="rgb(237,2,40)" rx="2" ry="2" />
<text  x="109.06" y="2015.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.02%)</title><rect x="877.4" y="2021" width="0.3" height="15.0" fill="rgb(211,64,40)" rx="2" ry="2" />
<text  x="880.43" y="2031.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (2 samples, 0.01%)</title><rect x="88.4" y="1701" width="0.1" height="15.0" fill="rgb(224,41,21)" rx="2" ry="2" />
<text  x="91.36" y="1711.5" ></text>
</g>
<g >
<title>__sanitizer::internal_memmove (35 samples, 0.17%)</title><rect x="322.6" y="1941" width="2.0" height="15.0" fill="rgb(230,182,4)" rx="2" ry="2" />
<text  x="325.57" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.03%)</title><rect x="1186.5" y="917" width="0.4" height="15.0" fill="rgb(242,68,19)" rx="2" ry="2" />
<text  x="1189.48" y="927.5" ></text>
</g>
<g >
<title>__do_page_fault (10 samples, 0.05%)</title><rect x="1018.7" y="2005" width="0.6" height="15.0" fill="rgb(242,161,38)" rx="2" ry="2" />
<text  x="1021.74" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (368 samples, 1.83%)</title><rect x="54.4" y="1077" width="21.5" height="15.0" fill="rgb(217,95,18)" rx="2" ry="2" />
<text  x="57.37" y="1087.5" >[..</text>
</g>
<g >
<title>do_page_fault (23 samples, 0.11%)</title><rect x="502.6" y="1909" width="1.3" height="15.0" fill="rgb(209,37,50)" rx="2" ry="2" />
<text  x="505.56" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (3 samples, 0.01%)</title><rect x="216.7" y="1781" width="0.2" height="15.0" fill="rgb(247,23,53)" rx="2" ry="2" />
<text  x="219.72" y="1791.5" ></text>
</g>
<g >
<title>__do_page_fault (2 samples, 0.01%)</title><rect x="1189.8" y="1989" width="0.1" height="15.0" fill="rgb(227,212,23)" rx="2" ry="2" />
<text  x="1192.77" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="217.5" y="1381" width="0.2" height="15.0" fill="rgb(221,2,42)" rx="2" ry="2" />
<text  x="220.48" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="161.7" y="1717" width="0.2" height="15.0" fill="rgb(251,59,39)" rx="2" ry="2" />
<text  x="164.68" y="1727.5" ></text>
</g>
<g >
<title>__asan_memcpy (2 samples, 0.01%)</title><rect x="165.5" y="1541" width="0.1" height="15.0" fill="rgb(249,47,52)" rx="2" ry="2" />
<text  x="168.49" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="217.5" y="1669" width="0.2" height="15.0" fill="rgb(234,52,25)" rx="2" ry="2" />
<text  x="220.48" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (448 samples, 2.23%)</title><rect x="189.7" y="1845" width="26.3" height="15.0" fill="rgb(224,134,29)" rx="2" ry="2" />
<text  x="192.70" y="1855.5" >s..</text>
</g>
<g >
<title>on_each_cpu_mask (2 samples, 0.01%)</title><rect x="79.8" y="1109" width="0.1" height="15.0" fill="rgb(214,125,54)" rx="2" ry="2" />
<text  x="82.80" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1186.5" y="1413" width="0.4" height="15.0" fill="rgb(206,132,38)" rx="2" ry="2" />
<text  x="1189.48" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="161.9" y="1653" width="0.2" height="15.0" fill="rgb(235,70,52)" rx="2" ry="2" />
<text  x="164.86" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1186.9" y="2021" width="0.3" height="15.0" fill="rgb(240,118,2)" rx="2" ry="2" />
<text  x="1189.89" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (403 samples, 2.00%)</title><rect x="54.3" y="1221" width="23.6" height="15.0" fill="rgb(206,227,50)" rx="2" ry="2" />
<text  x="57.31" y="1231.5" >[..</text>
</g>
<g >
<title>do_wp_page (74 samples, 0.37%)</title><rect x="943.8" y="1957" width="4.4" height="15.0" fill="rgb(237,76,37)" rx="2" ry="2" />
<text  x="946.84" y="1967.5" ></text>
</g>
<g >
<title>page_fault (40 samples, 0.20%)</title><rect x="511.9" y="1957" width="2.3" height="15.0" fill="rgb(241,187,22)" rx="2" ry="2" />
<text  x="514.88" y="1967.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (3 samples, 0.01%)</title><rect x="94.7" y="2021" width="0.2" height="15.0" fill="rgb(225,8,26)" rx="2" ry="2" />
<text  x="97.69" y="2031.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (1,218 samples, 6.05%)</title><rect x="1024.7" y="2053" width="71.4" height="15.0" fill="rgb(220,52,24)" rx="2" ry="2" />
<text  x="1027.72" y="2063.5" >__saniti..</text>
</g>
<g >
<title>handle_mm_fault (2 samples, 0.01%)</title><rect x="1100.4" y="1973" width="0.2" height="15.0" fill="rgb(210,127,11)" rx="2" ry="2" />
<text  x="1103.44" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.03%)</title><rect x="1186.5" y="1541" width="0.4" height="15.0" fill="rgb(209,143,21)" rx="2" ry="2" />
<text  x="1189.48" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.01%)</title><rect x="1187.1" y="1077" width="0.1" height="15.0" fill="rgb(242,37,23)" rx="2" ry="2" />
<text  x="1190.07" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="1186.2" y="2005" width="0.2" height="15.0" fill="rgb(234,208,30)" rx="2" ry="2" />
<text  x="1189.25" y="2015.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::json_value::destroy (5 samples, 0.02%)</title><rect x="520.8" y="1989" width="0.3" height="15.0" fill="rgb(235,173,46)" rx="2" ry="2" />
<text  x="523.79" y="1999.5" ></text>
</g>
<g >
<title>do_page_fault (2 samples, 0.01%)</title><rect x="54.1" y="1989" width="0.2" height="15.0" fill="rgb(223,120,48)" rx="2" ry="2" />
<text  x="57.13" y="1999.5" ></text>
</g>
<g >
<title>__dynamic_cast (5 samples, 0.02%)</title><rect x="151.7" y="1653" width="0.3" height="15.0" fill="rgb(226,138,15)" rx="2" ry="2" />
<text  x="154.66" y="1663.5" ></text>
</g>
<g >
<title>__sanitizer::BlockingMutex::Lock (10 samples, 0.05%)</title><rect x="758.9" y="2037" width="0.6" height="15.0" fill="rgb(222,5,49)" rx="2" ry="2" />
<text  x="761.92" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (351 samples, 1.74%)</title><rect x="54.4" y="501" width="20.5" height="15.0" fill="rgb(207,74,15)" rx="2" ry="2" />
<text  x="57.37" y="511.5" ></text>
</g>
<g >
<title>clear_page_erms (2 samples, 0.01%)</title><rect x="503.2" y="1813" width="0.1" height="15.0" fill="rgb(254,195,37)" rx="2" ry="2" />
<text  x="506.21" y="1823.5" ></text>
</g>
<g >
<title>__asan::GetMallocContextSize (2 samples, 0.01%)</title><rect x="203.8" y="1605" width="0.1" height="15.0" fill="rgb(224,96,2)" rx="2" ry="2" />
<text  x="206.77" y="1615.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (55 samples, 0.27%)</title><rect x="183.7" y="1669" width="3.2" height="15.0" fill="rgb(214,159,52)" rx="2" ry="2" />
<text  x="186.66" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (85 samples, 0.42%)</title><rect x="195.9" y="1621" width="4.9" height="15.0" fill="rgb(246,17,5)" rx="2" ry="2" />
<text  x="198.85" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (89 samples, 0.44%)</title><rect x="144.9" y="1749" width="5.2" height="15.0" fill="rgb(212,84,23)" rx="2" ry="2" />
<text  x="147.92" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1187.3" y="1333" width="0.4" height="15.0" fill="rgb(236,150,37)" rx="2" ry="2" />
<text  x="1190.30" y="1343.5" ></text>
</g>
<g >
<title>__interceptor_strlen (75 samples, 0.37%)</title><rect x="750.6" y="1877" width="4.4" height="15.0" fill="rgb(229,80,50)" rx="2" ry="2" />
<text  x="753.60" y="1887.5" ></text>
</g>
<g >
<title>mmap_region (13 samples, 0.06%)</title><rect x="768.7" y="1925" width="0.7" height="15.0" fill="rgb(246,49,5)" rx="2" ry="2" />
<text  x="771.65" y="1935.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (3 samples, 0.01%)</title><rect x="84.1" y="1557" width="0.2" height="15.0" fill="rgb(209,160,49)" rx="2" ry="2" />
<text  x="87.08" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1186.5" y="981" width="0.4" height="15.0" fill="rgb(254,174,7)" rx="2" ry="2" />
<text  x="1189.48" y="991.5" ></text>
</g>
<g >
<title>__dynamic_cast (5 samples, 0.02%)</title><rect x="170.4" y="1573" width="0.3" height="15.0" fill="rgb(225,7,54)" rx="2" ry="2" />
<text  x="173.42" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="217.5" y="1653" width="0.2" height="15.0" fill="rgb(205,75,31)" rx="2" ry="2" />
<text  x="220.48" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="188.4" y="1925" width="0.3" height="15.0" fill="rgb(254,61,32)" rx="2" ry="2" />
<text  x="191.35" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (2 samples, 0.01%)</title><rect x="161.4" y="1781" width="0.1" height="15.0" fill="rgb(252,169,44)" rx="2" ry="2" />
<text  x="164.39" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (375 samples, 1.86%)</title><rect x="54.4" y="1125" width="21.9" height="15.0" fill="rgb(215,207,0)" rx="2" ry="2" />
<text  x="57.37" y="1135.5" >[..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (3 samples, 0.01%)</title><rect x="160.8" y="1829" width="0.2" height="15.0" fill="rgb(210,26,37)" rx="2" ry="2" />
<text  x="163.80" y="1839.5" ></text>
</g>
<g >
<title>__asan_memcpy (4 samples, 0.02%)</title><rect x="588.4" y="1877" width="0.2" height="15.0" fill="rgb(205,183,18)" rx="2" ry="2" />
<text  x="591.37" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.03%)</title><rect x="1186.5" y="533" width="0.4" height="15.0" fill="rgb(228,201,2)" rx="2" ry="2" />
<text  x="1189.48" y="543.5" ></text>
</g>
<g >
<title>unmap_vmas (3 samples, 0.01%)</title><rect x="769.6" y="1925" width="0.2" height="15.0" fill="rgb(252,118,33)" rx="2" ry="2" />
<text  x="772.59" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.01%)</title><rect x="1187.1" y="453" width="0.1" height="15.0" fill="rgb(226,203,54)" rx="2" ry="2" />
<text  x="1190.07" y="463.5" ></text>
</g>
<g >
<title>do_page_fault (5 samples, 0.02%)</title><rect x="1189.5" y="2005" width="0.3" height="15.0" fill="rgb(225,140,44)" rx="2" ry="2" />
<text  x="1192.47" y="2015.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::basic_regex&lt;char const*&gt; (446 samples, 2.22%)</title><rect x="162.2" y="1941" width="26.2" height="15.0" fill="rgb(236,87,8)" rx="2" ry="2" />
<text  x="165.21" y="1951.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1187.3" y="1477" width="0.4" height="15.0" fill="rgb(231,199,1)" rx="2" ry="2" />
<text  x="1190.30" y="1487.5" ></text>
</g>
<g >
<title>__asan::AsanThread::stack_top (2 samples, 0.01%)</title><rect x="157.9" y="1669" width="0.1" height="15.0" fill="rgb(233,102,34)" rx="2" ry="2" />
<text  x="160.93" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.03%)</title><rect x="1187.2" y="2005" width="0.5" height="15.0" fill="rgb(238,144,13)" rx="2" ry="2" />
<text  x="1190.25" y="2015.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int const&amp;&gt; (7 samples, 0.03%)</title><rect x="1188.1" y="2053" width="0.4" height="15.0" fill="rgb(249,175,20)" rx="2" ry="2" />
<text  x="1191.12" y="2063.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (27 samples, 0.13%)</title><rect x="1097.7" y="1989" width="1.6" height="15.0" fill="rgb(248,58,51)" rx="2" ry="2" />
<text  x="1100.69" y="1999.5" ></text>
</g>
<g >
<title>__do_page_fault (20 samples, 0.10%)</title><rect x="683.5" y="1813" width="1.2" height="15.0" fill="rgb(247,80,21)" rx="2" ry="2" />
<text  x="686.49" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (2 samples, 0.01%)</title><rect x="215.8" y="1797" width="0.2" height="15.0" fill="rgb(234,215,16)" rx="2" ry="2" />
<text  x="218.84" y="1807.5" ></text>
</g>
<g >
<title>unmap_vmas (6 samples, 0.03%)</title><rect x="1099.9" y="1941" width="0.4" height="15.0" fill="rgb(248,83,6)" rx="2" ry="2" />
<text  x="1102.92" y="1951.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::reserve (32 samples, 0.16%)</title><rect x="877.7" y="2037" width="1.9" height="15.0" fill="rgb(236,215,46)" rx="2" ry="2" />
<text  x="880.72" y="2047.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (8 samples, 0.04%)</title><rect x="1122.0" y="2037" width="0.4" height="15.0" fill="rgb(217,14,46)" rx="2" ry="2" />
<text  x="1124.95" y="2047.5" ></text>
</g>
<g >
<title>unmap_page_range (3 samples, 0.01%)</title><rect x="769.6" y="1893" width="0.2" height="15.0" fill="rgb(236,124,13)" rx="2" ry="2" />
<text  x="772.59" y="1903.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (27 samples, 0.13%)</title><rect x="1097.7" y="1973" width="1.6" height="15.0" fill="rgb(217,153,50)" rx="2" ry="2" />
<text  x="1100.69" y="1983.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (3 samples, 0.01%)</title><rect x="83.8" y="1541" width="0.2" height="15.0" fill="rgb(230,190,16)" rx="2" ry="2" />
<text  x="86.79" y="1551.5" ></text>
</g>
<g >
<title>__handle_mm_fault (6 samples, 0.03%)</title><rect x="1019.0" y="1973" width="0.3" height="15.0" fill="rgb(216,47,52)" rx="2" ry="2" />
<text  x="1021.98" y="1983.5" ></text>
</g>
<g >
<title>__lsan::LsanMetadata::LsanMetadata (6 samples, 0.03%)</title><rect x="524.9" y="2037" width="0.3" height="15.0" fill="rgb(242,44,34)" rx="2" ry="2" />
<text  x="527.89" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (348 samples, 1.73%)</title><rect x="54.4" y="293" width="20.4" height="15.0" fill="rgb(230,14,14)" rx="2" ry="2" />
<text  x="57.37" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1186.9" y="2005" width="0.3" height="15.0" fill="rgb(249,63,14)" rx="2" ry="2" />
<text  x="1189.89" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (86 samples, 0.43%)</title><rect x="139.7" y="1685" width="5.0" height="15.0" fill="rgb(242,137,9)" rx="2" ry="2" />
<text  x="142.70" y="1695.5" ></text>
</g>
<g >
<title>page_fault (20 samples, 0.10%)</title><rect x="683.5" y="1845" width="1.2" height="15.0" fill="rgb(207,97,21)" rx="2" ry="2" />
<text  x="686.49" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (3 samples, 0.01%)</title><rect x="201.1" y="1749" width="0.2" height="15.0" fill="rgb(231,206,22)" rx="2" ry="2" />
<text  x="204.13" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1186.5" y="181" width="0.4" height="15.0" fill="rgb(223,150,11)" rx="2" ry="2" />
<text  x="1189.48" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_BracketMatcher (3 samples, 0.01%)</title><rect x="873.6" y="2037" width="0.2" height="15.0" fill="rgb(243,183,20)" rx="2" ry="2" />
<text  x="876.62" y="2047.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int&gt; (17 samples, 0.08%)</title><rect x="876.7" y="2037" width="1.0" height="15.0" fill="rgb(252,20,16)" rx="2" ry="2" />
<text  x="879.67" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (74 samples, 0.37%)</title><rect x="205.9" y="1781" width="4.4" height="15.0" fill="rgb(253,100,26)" rx="2" ry="2" />
<text  x="208.93" y="1791.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (15 samples, 0.07%)</title><rect x="320.2" y="1941" width="0.8" height="15.0" fill="rgb(210,8,34)" rx="2" ry="2" />
<text  x="323.17" y="1951.5" ></text>
</g>
<g >
<title>__asan::Allocator::Deallocate (13 samples, 0.06%)</title><rect x="1149.7" y="2037" width="0.7" height="15.0" fill="rgb(234,128,6)" rx="2" ry="2" />
<text  x="1152.68" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1187.2" y="1893" width="0.5" height="15.0" fill="rgb(252,7,0)" rx="2" ry="2" />
<text  x="1190.25" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="161.9" y="1333" width="0.2" height="15.0" fill="rgb(249,76,30)" rx="2" ry="2" />
<text  x="164.92" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1186.9" y="1861" width="0.3" height="15.0" fill="rgb(224,131,14)" rx="2" ry="2" />
<text  x="1189.89" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="217.5" y="1797" width="0.2" height="15.0" fill="rgb(245,185,13)" rx="2" ry="2" />
<text  x="220.48" y="1807.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (356 samples, 1.77%)</title><rect x="1122.8" y="2053" width="20.8" height="15.0" fill="rgb(211,190,47)" rx="2" ry="2" />
<text  x="1125.77" y="2063.5" ></text>
</g>
<g >
<title>do_mmap (22 samples, 0.11%)</title><rect x="1097.7" y="1957" width="1.3" height="15.0" fill="rgb(247,32,20)" rx="2" ry="2" />
<text  x="1100.69" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (15 samples, 0.07%)</title><rect x="216.1" y="1861" width="0.9" height="15.0" fill="rgb(212,26,39)" rx="2" ry="2" />
<text  x="219.13" y="1871.5" ></text>
</g>
<g >
<title>__sanitizer::StackTrace::GetCurrentPc (4 samples, 0.02%)</title><rect x="602.0" y="1877" width="0.2" height="15.0" fill="rgb(214,83,19)" rx="2" ry="2" />
<text  x="604.96" y="1887.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_Alloc_node&gt; (4 samples, 0.02%)</title><rect x="522.6" y="1797" width="0.2" height="15.0" fill="rgb(224,202,38)" rx="2" ry="2" />
<text  x="525.61" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (471 samples, 2.34%)</title><rect x="133.4" y="1861" width="27.6" height="15.0" fill="rgb(210,185,23)" rx="2" ry="2" />
<text  x="136.37" y="1871.5" >s..</text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::Unwind (2 samples, 0.01%)</title><rect x="611.6" y="1861" width="0.2" height="15.0" fill="rgb(252,9,28)" rx="2" ry="2" />
<text  x="614.63" y="1871.5" ></text>
</g>
<g >
<title>onmt::unicode::explode_utf8_with_marks (583 samples, 2.90%)</title><rect x="664.6" y="1877" width="34.1" height="15.0" fill="rgb(254,51,39)" rx="2" ry="2" />
<text  x="667.56" y="1887.5" >on..</text>
</g>
<g >
<title>alloc_pages_vma (26 samples, 0.13%)</title><rect x="512.3" y="1877" width="1.6" height="15.0" fill="rgb(250,52,24)" rx="2" ry="2" />
<text  x="515.35" y="1887.5" ></text>
</g>
<g >
<title>TDocument::TDocument (13 samples, 0.06%)</title><rect x="757.8" y="1973" width="0.8" height="15.0" fill="rgb(224,95,10)" rx="2" ry="2" />
<text  x="760.81" y="1983.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (2 samples, 0.01%)</title><rect x="586.2" y="1893" width="0.1" height="15.0" fill="rgb(205,102,20)" rx="2" ry="2" />
<text  x="589.20" y="1903.5" ></text>
</g>
<g >
<title>__sanitizer::internal_munmap (2 samples, 0.01%)</title><rect x="82.1" y="1445" width="0.1" height="15.0" fill="rgb(248,43,42)" rx="2" ry="2" />
<text  x="85.09" y="1455.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::basic_json&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, 0&gt; (2 samples, 0.01%)</title><rect x="124.1" y="1925" width="0.1" height="15.0" fill="rgb(252,203,8)" rx="2" ry="2" />
<text  x="127.11" y="1935.5" ></text>
</g>
<g >
<title>__asan::AsanTSDGet (2 samples, 0.01%)</title><rect x="207.8" y="1637" width="0.1" height="15.0" fill="rgb(253,195,26)" rx="2" ry="2" />
<text  x="210.75" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1186.5" y="757" width="0.4" height="15.0" fill="rgb(242,84,9)" rx="2" ry="2" />
<text  x="1189.48" y="767.5" ></text>
</g>
<g >
<title>find_vma (3 samples, 0.01%)</title><rect x="942.9" y="1989" width="0.2" height="15.0" fill="rgb(233,88,44)" rx="2" ry="2" />
<text  x="945.90" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="1187.1" y="1589" width="0.1" height="15.0" fill="rgb(246,144,52)" rx="2" ry="2" />
<text  x="1190.07" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (352 samples, 1.75%)</title><rect x="54.4" y="533" width="20.6" height="15.0" fill="rgb(241,210,49)" rx="2" ry="2" />
<text  x="57.37" y="543.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.03%)</title><rect x="138.0" y="1557" width="0.4" height="15.0" fill="rgb(211,91,14)" rx="2" ry="2" />
<text  x="141.00" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (360 samples, 1.79%)</title><rect x="54.4" y="949" width="21.1" height="15.0" fill="rgb(232,101,51)" rx="2" ry="2" />
<text  x="57.37" y="959.5" ></text>
</g>
<g >
<title>page_fault (29 samples, 0.14%)</title><rect x="696.9" y="1845" width="1.7" height="15.0" fill="rgb(241,54,22)" rx="2" ry="2" />
<text  x="699.85" y="1855.5" ></text>
</g>
<g >
<title>onmt::Tokenizer::tokenize (2,970 samples, 14.75%)</title><rect x="582.6" y="1909" width="174.1" height="15.0" fill="rgb(229,40,17)" rx="2" ry="2" />
<text  x="585.62" y="1919.5" >onmt::Tokenizer::token..</text>
</g>
<g >
<title>__asan_memcpy (3 samples, 0.01%)</title><rect x="181.7" y="1701" width="0.1" height="15.0" fill="rgb(212,8,18)" rx="2" ry="2" />
<text  x="184.67" y="1711.5" ></text>
</g>
<g >
<title>__sanitizer::internal_mmap (30 samples, 0.15%)</title><rect x="1097.6" y="2053" width="1.8" height="15.0" fill="rgb(232,48,22)" rx="2" ry="2" />
<text  x="1100.63" y="2063.5" ></text>
</g>
<g >
<title>fasttext::Loss::predict (7 samples, 0.03%)</title><rect x="1100.6" y="2053" width="0.4" height="15.0" fill="rgb(254,111,5)" rx="2" ry="2" />
<text  x="1103.56" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (637 samples, 3.16%)</title><rect x="54.3" y="2005" width="37.3" height="15.0" fill="rgb(241,60,3)" rx="2" ry="2" />
<text  x="57.31" y="2015.5" >[un..</text>
</g>
<g >
<title>__dynamic_cast (4 samples, 0.02%)</title><rect x="146.6" y="1621" width="0.2" height="15.0" fill="rgb(221,152,32)" rx="2" ry="2" />
<text  x="149.56" y="1631.5" ></text>
</g>
<g >
<title>sqrtf32 (3 samples, 0.01%)</title><rect x="519.0" y="1973" width="0.1" height="15.0" fill="rgb(247,38,50)" rx="2" ry="2" />
<text  x="521.97" y="1983.5" ></text>
</g>
<g >
<title>__sanitizer::RunFreeHooks (20 samples, 0.10%)</title><rect x="1019.6" y="2053" width="1.2" height="15.0" fill="rgb(247,70,13)" rx="2" ry="2" />
<text  x="1022.62" y="2063.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (4 samples, 0.02%)</title><rect x="86.9" y="1717" width="0.2" height="15.0" fill="rgb(242,186,32)" rx="2" ry="2" />
<text  x="89.90" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (76 samples, 0.38%)</title><rect x="201.4" y="1749" width="4.5" height="15.0" fill="rgb(208,120,18)" rx="2" ry="2" />
<text  x="204.42" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="161.9" y="1285" width="0.2" height="15.0" fill="rgb(241,120,48)" rx="2" ry="2" />
<text  x="164.92" y="1295.5" ></text>
</g>
<g >
<title>try_charge (8 samples, 0.04%)</title><rect x="26.1" y="1925" width="0.4" height="15.0" fill="rgb(247,121,5)" rx="2" ry="2" />
<text  x="29.06" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.01%)</title><rect x="1187.1" y="1125" width="0.1" height="15.0" fill="rgb(207,201,43)" rx="2" ry="2" />
<text  x="1190.07" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1187.2" y="1589" width="0.5" height="15.0" fill="rgb(224,101,40)" rx="2" ry="2" />
<text  x="1190.25" y="1599.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (41 samples, 0.20%)</title><rect x="207.3" y="1653" width="2.4" height="15.0" fill="rgb(208,158,28)" rx="2" ry="2" />
<text  x="210.34" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.3" y="261" width="0.4" height="15.0" fill="rgb(248,23,47)" rx="2" ry="2" />
<text  x="1190.30" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (437 samples, 2.17%)</title><rect x="162.3" y="1877" width="25.6" height="15.0" fill="rgb(251,67,34)" rx="2" ry="2" />
<text  x="165.27" y="1887.5" >s..</text>
</g>
<g >
<title>__dynamic_cast (4 samples, 0.02%)</title><rect x="190.5" y="1589" width="0.2" height="15.0" fill="rgb(239,177,26)" rx="2" ry="2" />
<text  x="193.46" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (359 samples, 1.78%)</title><rect x="54.4" y="837" width="21.0" height="15.0" fill="rgb(253,179,26)" rx="2" ry="2" />
<text  x="57.37" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (92 samples, 0.46%)</title><rect x="210.4" y="1733" width="5.4" height="15.0" fill="rgb(242,150,47)" rx="2" ry="2" />
<text  x="213.45" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="188.5" y="1829" width="0.2" height="15.0" fill="rgb(219,204,26)" rx="2" ry="2" />
<text  x="191.47" y="1839.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (2 samples, 0.01%)</title><rect x="199.0" y="1589" width="0.1" height="15.0" fill="rgb(227,198,37)" rx="2" ry="2" />
<text  x="201.96" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="217.5" y="1301" width="0.2" height="15.0" fill="rgb(250,25,45)" rx="2" ry="2" />
<text  x="220.54" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.04%)</title><rect x="1186.4" y="1813" width="0.5" height="15.0" fill="rgb(227,195,28)" rx="2" ry="2" />
<text  x="1189.42" y="1823.5" ></text>
</g>
<g >
<title>__vm_munmap (4 samples, 0.02%)</title><rect x="769.5" y="1973" width="0.3" height="15.0" fill="rgb(233,67,40)" rx="2" ry="2" />
<text  x="772.53" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="188.5" y="1477" width="0.2" height="15.0" fill="rgb(239,218,33)" rx="2" ry="2" />
<text  x="191.53" y="1487.5" ></text>
</g>
<g >
<title>[unknown] (347 samples, 1.72%)</title><rect x="54.4" y="181" width="20.3" height="15.0" fill="rgb(210,5,54)" rx="2" ry="2" />
<text  x="57.37" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (450 samples, 2.24%)</title><rect x="189.7" y="1893" width="26.4" height="15.0" fill="rgb(224,71,4)" rx="2" ry="2" />
<text  x="192.70" y="1903.5" >s..</text>
</g>
<g >
<title>__do_munmap (4 samples, 0.02%)</title><rect x="769.5" y="1957" width="0.3" height="15.0" fill="rgb(237,20,18)" rx="2" ry="2" />
<text  x="772.53" y="1967.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.01%)</title><rect x="165.6" y="1541" width="0.1" height="15.0" fill="rgb(236,220,54)" rx="2" ry="2" />
<text  x="168.61" y="1551.5" ></text>
</g>
<g >
<title>smp_call_function_many (2 samples, 0.01%)</title><rect x="79.2" y="1061" width="0.1" height="15.0" fill="rgb(231,70,31)" rx="2" ry="2" />
<text  x="82.16" y="1071.5" ></text>
</g>
<g >
<title>memcpy (4 samples, 0.02%)</title><rect x="1116.9" y="2037" width="0.2" height="15.0" fill="rgb(237,193,51)" rx="2" ry="2" />
<text  x="1119.91" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (371 samples, 1.84%)</title><rect x="133.4" y="1813" width="21.7" height="15.0" fill="rgb(249,189,38)" rx="2" ry="2" />
<text  x="136.37" y="1823.5" >s..</text>
</g>
<g >
<title>tlb_finish_mmu (2 samples, 0.01%)</title><rect x="79.2" y="1173" width="0.1" height="15.0" fill="rgb(206,62,40)" rx="2" ry="2" />
<text  x="82.16" y="1183.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.25] (26 samples, 0.13%)</title><rect x="27.2" y="2053" width="1.5" height="15.0" fill="rgb(233,129,48)" rx="2" ry="2" />
<text  x="30.17" y="2063.5" ></text>
</g>
<g >
<title>nlohmann::detail::input_stream_adapter::get_character (4 samples, 0.02%)</title><rect x="126.0" y="1925" width="0.3" height="15.0" fill="rgb(219,37,9)" rx="2" ry="2" />
<text  x="129.05" y="1935.5" ></text>
</g>
<g >
<title>__interceptor_strlen (35 samples, 0.17%)</title><rect x="1170.0" y="2037" width="2.0" height="15.0" fill="rgb(213,112,33)" rx="2" ry="2" />
<text  x="1172.96" y="2047.5" ></text>
</g>
<g >
<title>__dynamic_cast (4 samples, 0.02%)</title><rect x="177.9" y="1637" width="0.2" height="15.0" fill="rgb(217,4,38)" rx="2" ry="2" />
<text  x="180.86" y="1647.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (3 samples, 0.01%)</title><rect x="941.7" y="1989" width="0.1" height="15.0" fill="rgb(213,65,1)" rx="2" ry="2" />
<text  x="944.67" y="1999.5" ></text>
</g>
<g >
<title>futex_wake (11 samples, 0.05%)</title><rect x="27.9" y="1925" width="0.7" height="15.0" fill="rgb(241,50,42)" rx="2" ry="2" />
<text  x="30.93" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (75 samples, 0.37%)</title><rect x="150.3" y="1685" width="4.4" height="15.0" fill="rgb(225,182,7)" rx="2" ry="2" />
<text  x="153.25" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.03%)</title><rect x="1186.5" y="1205" width="0.4" height="15.0" fill="rgb(244,13,14)" rx="2" ry="2" />
<text  x="1189.48" y="1215.5" ></text>
</g>
<g >
<title>__do_munmap (11 samples, 0.05%)</title><rect x="768.7" y="1909" width="0.6" height="15.0" fill="rgb(215,25,4)" rx="2" ry="2" />
<text  x="771.65" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (346 samples, 1.72%)</title><rect x="54.4" y="165" width="20.2" height="15.0" fill="rgb(244,11,19)" rx="2" ry="2" />
<text  x="57.37" y="175.5" ></text>
</g>
<g >
<title>handle_mm_fault (10 samples, 0.05%)</title><rect x="660.9" y="1813" width="0.6" height="15.0" fill="rgb(212,171,24)" rx="2" ry="2" />
<text  x="663.87" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="1187.1" y="1061" width="0.1" height="15.0" fill="rgb(245,166,53)" rx="2" ry="2" />
<text  x="1190.07" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="1187.1" y="869" width="0.1" height="15.0" fill="rgb(228,161,32)" rx="2" ry="2" />
<text  x="1190.07" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (443 samples, 2.20%)</title><rect x="162.3" y="1893" width="25.9" height="15.0" fill="rgb(218,168,32)" rx="2" ry="2" />
<text  x="165.27" y="1903.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1186.5" y="229" width="0.4" height="15.0" fill="rgb(210,172,40)" rx="2" ry="2" />
<text  x="1189.48" y="239.5" ></text>
</g>
<g >
<title>[unknown] (426 samples, 2.12%)</title><rect x="54.3" y="1301" width="25.0" height="15.0" fill="rgb(247,174,28)" rx="2" ry="2" />
<text  x="57.31" y="1311.5" >[..</text>
</g>
<g >
<title>wake_up_q (3 samples, 0.01%)</title><rect x="1099.0" y="1909" width="0.2" height="15.0" fill="rgb(242,163,43)" rx="2" ry="2" />
<text  x="1102.04" y="1919.5" ></text>
</g>
<g >
<title>__pthread_getspecific (3 samples, 0.01%)</title><rect x="179.5" y="1621" width="0.2" height="15.0" fill="rgb(220,4,24)" rx="2" ry="2" />
<text  x="182.50" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1187.3" y="1381" width="0.4" height="15.0" fill="rgb(209,158,2)" rx="2" ry="2" />
<text  x="1190.30" y="1391.5" ></text>
</g>
<g >
<title>page_fault (2 samples, 0.01%)</title><rect x="54.1" y="2005" width="0.2" height="15.0" fill="rgb(244,222,2)" rx="2" ry="2" />
<text  x="57.13" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (69 samples, 0.34%)</title><rect x="150.6" y="1669" width="4.1" height="15.0" fill="rgb(244,135,42)" rx="2" ry="2" />
<text  x="153.61" y="1679.5" ></text>
</g>
<g >
<title>__asan::AsanChunk::UsedSize (39 samples, 0.19%)</title><rect x="963.0" y="2053" width="2.3" height="15.0" fill="rgb(241,166,8)" rx="2" ry="2" />
<text  x="966.00" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.01%)</title><rect x="1187.1" y="1269" width="0.1" height="15.0" fill="rgb(208,173,47)" rx="2" ry="2" />
<text  x="1190.07" y="1279.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (5 samples, 0.02%)</title><rect x="1100.3" y="2037" width="0.3" height="15.0" fill="rgb(234,27,21)" rx="2" ry="2" />
<text  x="1103.27" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (347 samples, 1.72%)</title><rect x="54.4" y="245" width="20.3" height="15.0" fill="rgb(233,35,0)" rx="2" ry="2" />
<text  x="57.37" y="255.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (16 samples, 0.08%)</title><rect x="768.6" y="2021" width="0.9" height="15.0" fill="rgb(209,23,33)" rx="2" ry="2" />
<text  x="771.59" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.02%)</title><rect x="876.7" y="2021" width="0.3" height="15.0" fill="rgb(211,88,24)" rx="2" ry="2" />
<text  x="879.73" y="2031.5" ></text>
</g>
<g >
<title>std::__merge_sort_with_buffer&lt;__gnu_cxx::__normal_iterator&lt;TDocument*, std::vector&lt;TDocument, std::allocator&lt;TDocument&gt; &gt; &gt;, TDocument*, __gnu_cxx::__ops::_Iter_comp_iter&lt;main::$_1&gt; &gt; (5 samples, 0.02%)</title><rect x="523.1" y="1989" width="0.3" height="15.0" fill="rgb(241,58,7)" rx="2" ry="2" />
<text  x="526.07" y="1999.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (2 samples, 0.01%)</title><rect x="79.2" y="1237" width="0.1" height="15.0" fill="rgb(249,8,46)" rx="2" ry="2" />
<text  x="82.16" y="1247.5" ></text>
</g>
<g >
<title>[unknown] (443 samples, 2.20%)</title><rect x="54.3" y="1349" width="26.0" height="15.0" fill="rgb(219,139,49)" rx="2" ry="2" />
<text  x="57.31" y="1359.5" >[..</text>
</g>
<g >
<title>std::locale::id::_M_id (2 samples, 0.01%)</title><rect x="139.2" y="1589" width="0.1" height="15.0" fill="rgb(205,181,36)" rx="2" ry="2" />
<text  x="142.18" y="1599.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::emplace_back&lt;char const*&amp;, unsigned int&amp;&gt; (184 samples, 0.91%)</title><rect x="687.8" y="1861" width="10.8" height="15.0" fill="rgb(226,109,52)" rx="2" ry="2" />
<text  x="690.83" y="1871.5" ></text>
</g>
<g >
<title>do_syscall_64 (16 samples, 0.08%)</title><rect x="526.1" y="2005" width="0.9" height="15.0" fill="rgb(237,201,27)" rx="2" ry="2" />
<text  x="529.06" y="2015.5" ></text>
</g>
<g >
<title>__interceptor_strcmp (90 samples, 0.45%)</title><rect x="35.4" y="2021" width="5.3" height="15.0" fill="rgb(251,212,15)" rx="2" ry="2" />
<text  x="38.38" y="2031.5" ></text>
</g>
<g >
<title>std::istream::sentry::sentry (11 samples, 0.05%)</title><rect x="814.8" y="2005" width="0.7" height="15.0" fill="rgb(252,113,23)" rx="2" ry="2" />
<text  x="817.84" y="2015.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (3 samples, 0.01%)</title><rect x="81.9" y="1445" width="0.2" height="15.0" fill="rgb(208,28,13)" rx="2" ry="2" />
<text  x="84.91" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3 samples, 0.01%)</title><rect x="216.1" y="1797" width="0.2" height="15.0" fill="rgb(232,220,24)" rx="2" ry="2" />
<text  x="219.13" y="1807.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (22 samples, 0.11%)</title><rect x="488.1" y="1925" width="1.3" height="15.0" fill="rgb(219,12,49)" rx="2" ry="2" />
<text  x="491.14" y="1935.5" ></text>
</g>
<g >
<title>__asan::AsanChunk::UsedSize (56 samples, 0.28%)</title><rect x="112.2" y="2037" width="3.3" height="15.0" fill="rgb(209,163,35)" rx="2" ry="2" />
<text  x="115.22" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (4 samples, 0.02%)</title><rect x="154.8" y="1749" width="0.3" height="15.0" fill="rgb(208,174,32)" rx="2" ry="2" />
<text  x="157.83" y="1759.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (7 samples, 0.03%)</title><rect x="698.1" y="1765" width="0.5" height="15.0" fill="rgb(252,179,34)" rx="2" ry="2" />
<text  x="701.14" y="1775.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.01%)</title><rect x="493.8" y="1925" width="0.1" height="15.0" fill="rgb(250,211,53)" rx="2" ry="2" />
<text  x="496.77" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1187.3" y="1237" width="0.4" height="15.0" fill="rgb(232,92,47)" rx="2" ry="2" />
<text  x="1190.30" y="1247.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (2 samples, 0.01%)</title><rect x="1099.3" y="2005" width="0.1" height="15.0" fill="rgb(227,58,49)" rx="2" ry="2" />
<text  x="1102.27" y="2015.5" ></text>
</g>
<g >
<title>__sanitizer_weak_hook_memcmp (11 samples, 0.05%)</title><rect x="1143.0" y="2037" width="0.6" height="15.0" fill="rgb(215,146,42)" rx="2" ry="2" />
<text  x="1145.99" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.02%)</title><rect x="1187.0" y="1701" width="0.2" height="15.0" fill="rgb(236,180,20)" rx="2" ry="2" />
<text  x="1190.01" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.01%)</title><rect x="1187.1" y="1029" width="0.1" height="15.0" fill="rgb(226,162,31)" rx="2" ry="2" />
<text  x="1190.07" y="1039.5" ></text>
</g>
<g >
<title>__pthread_getspecific (3 samples, 0.01%)</title><rect x="877.0" y="2021" width="0.2" height="15.0" fill="rgb(207,184,31)" rx="2" ry="2" />
<text  x="880.02" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (397 samples, 1.97%)</title><rect x="54.3" y="1189" width="23.3" height="15.0" fill="rgb(237,165,36)" rx="2" ry="2" />
<text  x="57.31" y="1199.5" >[..</text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (12 samples, 0.06%)</title><rect x="945.9" y="1925" width="0.7" height="15.0" fill="rgb(218,210,48)" rx="2" ry="2" />
<text  x="948.89" y="1935.5" ></text>
</g>
<g >
<title>handle_mm_fault (2 samples, 0.01%)</title><rect x="520.4" y="1893" width="0.2" height="15.0" fill="rgb(240,80,19)" rx="2" ry="2" />
<text  x="523.44" y="1903.5" ></text>
</g>
<g >
<title>strcmp@plt (5 samples, 0.02%)</title><rect x="41.5" y="2037" width="0.3" height="15.0" fill="rgb(246,150,2)" rx="2" ry="2" />
<text  x="44.47" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.05%)</title><rect x="1186.2" y="2037" width="0.7" height="15.0" fill="rgb(243,214,18)" rx="2" ry="2" />
<text  x="1189.25" y="2047.5" ></text>
</g>
<g >
<title>arch_tlb_finish_mmu (2 samples, 0.01%)</title><rect x="79.2" y="1157" width="0.1" height="15.0" fill="rgb(228,101,21)" rx="2" ry="2" />
<text  x="82.16" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="161.7" y="1637" width="0.2" height="15.0" fill="rgb(219,2,53)" rx="2" ry="2" />
<text  x="164.74" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="217.5" y="1509" width="0.2" height="15.0" fill="rgb(235,97,10)" rx="2" ry="2" />
<text  x="220.48" y="1519.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (3 samples, 0.01%)</title><rect x="814.6" y="2005" width="0.2" height="15.0" fill="rgb(218,116,8)" rx="2" ry="2" />
<text  x="817.60" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="1187.1" y="661" width="0.1" height="15.0" fill="rgb(207,60,29)" rx="2" ry="2" />
<text  x="1190.07" y="671.5" ></text>
</g>
<g >
<title>__lsan::MarkInvalidPCCb (4 samples, 0.02%)</title><rect x="525.4" y="2037" width="0.3" height="15.0" fill="rgb(218,193,21)" rx="2" ry="2" />
<text  x="528.42" y="2047.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.01%)</title><rect x="180.2" y="1621" width="0.2" height="15.0" fill="rgb(208,179,47)" rx="2" ry="2" />
<text  x="183.20" y="1631.5" ></text>
</g>
<g >
<title>__pthread_getspecific (2 samples, 0.01%)</title><rect x="314.8" y="1957" width="0.1" height="15.0" fill="rgb(253,178,3)" rx="2" ry="2" />
<text  x="317.83" y="1967.5" ></text>
</g>
<g >
<title>std::vector&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::allocator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;::_M_realloc_insert&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; const&amp;&gt; (4 samples, 0.02%)</title><rect x="522.6" y="1989" width="0.2" height="15.0" fill="rgb(250,118,13)" rx="2" ry="2" />
<text  x="525.61" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (97 samples, 0.48%)</title><rect x="155.1" y="1797" width="5.7" height="15.0" fill="rgb(206,82,24)" rx="2" ry="2" />
<text  x="158.12" y="1807.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (31 samples, 0.15%)</title><rect x="1121.0" y="2053" width="1.8" height="15.0" fill="rgb(209,156,24)" rx="2" ry="2" />
<text  x="1123.96" y="2063.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (50 samples, 0.25%)</title><rect x="178.2" y="1637" width="2.9" height="15.0" fill="rgb(252,190,10)" rx="2" ry="2" />
<text  x="181.15" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="1187.1" y="1093" width="0.1" height="15.0" fill="rgb(214,87,39)" rx="2" ry="2" />
<text  x="1190.07" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (2 samples, 0.01%)</title><rect x="161.0" y="1829" width="0.1" height="15.0" fill="rgb(215,219,42)" rx="2" ry="2" />
<text  x="163.98" y="1839.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (3 samples, 0.01%)</title><rect x="186.7" y="1653" width="0.1" height="15.0" fill="rgb(223,50,7)" rx="2" ry="2" />
<text  x="189.65" y="1663.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.01%)</title><rect x="168.9" y="1589" width="0.1" height="15.0" fill="rgb(252,122,33)" rx="2" ry="2" />
<text  x="171.89" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.3" y="693" width="0.4" height="15.0" fill="rgb(220,101,48)" rx="2" ry="2" />
<text  x="1190.30" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1186.5" y="405" width="0.4" height="15.0" fill="rgb(205,142,14)" rx="2" ry="2" />
<text  x="1189.48" y="415.5" ></text>
</g>
<g >
<title>fasttext::ProductQuantizer::addcode (535 samples, 2.66%)</title><rect x="771.9" y="2037" width="31.3" height="15.0" fill="rgb(252,26,0)" rx="2" ry="2" />
<text  x="774.87" y="2047.5" >fa..</text>
</g>
<g >
<title>__asan::asan_memalign (36 samples, 0.18%)</title><rect x="992.7" y="2053" width="2.1" height="15.0" fill="rgb(243,87,31)" rx="2" ry="2" />
<text  x="995.66" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1186.9" y="1877" width="0.3" height="15.0" fill="rgb(224,157,12)" rx="2" ry="2" />
<text  x="1189.89" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (8 samples, 0.04%)</title><rect x="133.4" y="1685" width="0.4" height="15.0" fill="rgb(208,138,22)" rx="2" ry="2" />
<text  x="136.37" y="1695.5" ></text>
</g>
<g >
<title>__asan_memcpy (13 samples, 0.06%)</title><rect x="621.5" y="1845" width="0.7" height="15.0" fill="rgb(210,90,4)" rx="2" ry="2" />
<text  x="624.48" y="1855.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (12 samples, 0.06%)</title><rect x="526.2" y="1925" width="0.7" height="15.0" fill="rgb(237,116,1)" rx="2" ry="2" />
<text  x="529.18" y="1935.5" ></text>
</g>
<g >
<title>__asan_memcpy (5 samples, 0.02%)</title><rect x="584.1" y="1893" width="0.3" height="15.0" fill="rgb(233,56,12)" rx="2" ry="2" />
<text  x="587.09" y="1903.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::Unwind (21 samples, 0.10%)</title><rect x="1175.4" y="2037" width="1.2" height="15.0" fill="rgb(251,84,24)" rx="2" ry="2" />
<text  x="1178.41" y="2047.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (2 samples, 0.01%)</title><rect x="136.1" y="1557" width="0.1" height="15.0" fill="rgb(231,158,38)" rx="2" ry="2" />
<text  x="139.13" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (4 samples, 0.02%)</title><rect x="189.7" y="1685" width="0.2" height="15.0" fill="rgb(229,218,14)" rx="2" ry="2" />
<text  x="192.70" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="161.7" y="1701" width="0.2" height="15.0" fill="rgb(212,58,8)" rx="2" ry="2" />
<text  x="164.74" y="1711.5" ></text>
</g>
<g >
<title>all (20,133 samples, 100%)</title><rect x="10.0" y="2085" width="1180.0" height="15.0" fill="rgb(241,113,40)" rx="2" ry="2" />
<text  x="13.00" y="2095.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (2 samples, 0.01%)</title><rect x="147.7" y="1605" width="0.1" height="15.0" fill="rgb(241,141,26)" rx="2" ry="2" />
<text  x="150.68" y="1615.5" ></text>
</g>
<g >
<title>handle_mm_fault (18 samples, 0.09%)</title><rect x="52.9" y="1973" width="1.1" height="15.0" fill="rgb(253,189,20)" rx="2" ry="2" />
<text  x="55.90" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="188.5" y="1669" width="0.2" height="15.0" fill="rgb(239,202,48)" rx="2" ry="2" />
<text  x="191.53" y="1679.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (2 samples, 0.01%)</title><rect x="698.0" y="1717" width="0.1" height="15.0" fill="rgb(254,118,14)" rx="2" ry="2" />
<text  x="701.03" y="1727.5" ></text>
</g>
<g >
<title>__dynamic_cast (4 samples, 0.02%)</title><rect x="168.6" y="1589" width="0.2" height="15.0" fill="rgb(234,161,28)" rx="2" ry="2" />
<text  x="171.60" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="161.7" y="1925" width="0.4" height="15.0" fill="rgb(242,41,17)" rx="2" ry="2" />
<text  x="164.68" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (553 samples, 2.75%)</title><rect x="54.3" y="1717" width="32.4" height="15.0" fill="rgb(251,67,32)" rx="2" ry="2" />
<text  x="57.31" y="1727.5" >[u..</text>
</g>
<g >
<title>__asan::GetCurrentThreadStats (19 samples, 0.09%)</title><rect x="117.7" y="2037" width="1.1" height="15.0" fill="rgb(232,122,49)" rx="2" ry="2" />
<text  x="120.67" y="2047.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (3 samples, 0.01%)</title><rect x="199.3" y="1589" width="0.2" height="15.0" fill="rgb(208,171,39)" rx="2" ry="2" />
<text  x="202.31" y="1599.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (2 samples, 0.01%)</title><rect x="546.9" y="1909" width="0.1" height="15.0" fill="rgb(238,123,34)" rx="2" ry="2" />
<text  x="549.87" y="1919.5" ></text>
</g>
<g >
<title>vma_merge (4 samples, 0.02%)</title><rect x="1098.7" y="1925" width="0.2" height="15.0" fill="rgb(249,95,39)" rx="2" ry="2" />
<text  x="1101.69" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1187.3" y="949" width="0.4" height="15.0" fill="rgb(238,175,45)" rx="2" ry="2" />
<text  x="1190.30" y="959.5" ></text>
</g>
<g >
<title>alloc_pages_vma (5 samples, 0.02%)</title><rect x="503.1" y="1845" width="0.3" height="15.0" fill="rgb(240,63,19)" rx="2" ry="2" />
<text  x="506.09" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="217.5" y="1477" width="0.2" height="15.0" fill="rgb(217,210,14)" rx="2" ry="2" />
<text  x="220.48" y="1487.5" ></text>
</g>
<g >
<title>fasttext::FastText::loadModel (8 samples, 0.04%)</title><rect x="520.1" y="2005" width="0.5" height="15.0" fill="rgb(232,157,17)" rx="2" ry="2" />
<text  x="523.08" y="2015.5" ></text>
</g>
<g >
<title>__asan_memset (3 samples, 0.01%)</title><rect x="498.6" y="1941" width="0.2" height="15.0" fill="rgb(232,108,8)" rx="2" ry="2" />
<text  x="501.63" y="1951.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::pushHash (2 samples, 0.01%)</title><rect x="875.3" y="1941" width="0.1" height="15.0" fill="rgb(247,0,9)" rx="2" ry="2" />
<text  x="878.26" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (656 samples, 3.26%)</title><rect x="54.3" y="2021" width="38.5" height="15.0" fill="rgb(237,147,30)" rx="2" ry="2" />
<text  x="57.31" y="2031.5" >[un..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.02%)</title><rect x="161.9" y="1605" width="0.2" height="15.0" fill="rgb(206,157,2)" rx="2" ry="2" />
<text  x="164.86" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.01%)</title><rect x="1187.1" y="789" width="0.1" height="15.0" fill="rgb(231,153,23)" rx="2" ry="2" />
<text  x="1190.07" y="799.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (6 samples, 0.03%)</title><rect x="91.9" y="2005" width="0.3" height="15.0" fill="rgb(241,114,2)" rx="2" ry="2" />
<text  x="94.88" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (4 samples, 0.02%)</title><rect x="216.4" y="1781" width="0.3" height="15.0" fill="rgb(229,39,30)" rx="2" ry="2" />
<text  x="219.43" y="1791.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::Unwind (2 samples, 0.01%)</title><rect x="624.6" y="1845" width="0.2" height="15.0" fill="rgb(244,37,30)" rx="2" ry="2" />
<text  x="627.65" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (6 samples, 0.03%)</title><rect x="187.9" y="1877" width="0.3" height="15.0" fill="rgb(253,14,47)" rx="2" ry="2" />
<text  x="190.88" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (98 samples, 0.49%)</title><rect x="133.8" y="1685" width="5.8" height="15.0" fill="rgb(253,80,33)" rx="2" ry="2" />
<text  x="136.84" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.02%)</title><rect x="161.9" y="1557" width="0.2" height="15.0" fill="rgb(219,73,22)" rx="2" ry="2" />
<text  x="164.86" y="1567.5" ></text>
</g>
<g >
<title>try_to_wake_up (7 samples, 0.03%)</title><rect x="28.2" y="1893" width="0.4" height="15.0" fill="rgb(235,138,23)" rx="2" ry="2" />
<text  x="31.17" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (471 samples, 2.34%)</title><rect x="133.4" y="1845" width="27.6" height="15.0" fill="rgb(207,228,15)" rx="2" ry="2" />
<text  x="136.37" y="1855.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="1187.1" y="965" width="0.1" height="15.0" fill="rgb(205,220,20)" rx="2" ry="2" />
<text  x="1190.07" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.01%)</title><rect x="1187.1" y="1653" width="0.1" height="15.0" fill="rgb(253,168,24)" rx="2" ry="2" />
<text  x="1190.07" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="217.3" y="1925" width="0.4" height="15.0" fill="rgb(222,138,41)" rx="2" ry="2" />
<text  x="220.30" y="1935.5" ></text>
</g>
<g >
<title>__dynamic_cast (7 samples, 0.03%)</title><rect x="142.2" y="1589" width="0.4" height="15.0" fill="rgb(245,98,52)" rx="2" ry="2" />
<text  x="145.22" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (524 samples, 2.60%)</title><rect x="54.3" y="1621" width="30.7" height="15.0" fill="rgb(226,109,51)" rx="2" ry="2" />
<text  x="57.31" y="1631.5" >[u..</text>
</g>
<g >
<title>mmap_region (19 samples, 0.09%)</title><rect x="1097.8" y="1941" width="1.1" height="15.0" fill="rgb(250,99,26)" rx="2" ry="2" />
<text  x="1100.81" y="1951.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::push_back (5 samples, 0.02%)</title><rect x="522.5" y="2005" width="0.3" height="15.0" fill="rgb(231,148,50)" rx="2" ry="2" />
<text  x="525.55" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1186.5" y="117" width="0.4" height="15.0" fill="rgb(244,131,21)" rx="2" ry="2" />
<text  x="1189.48" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.3" y="197" width="0.4" height="15.0" fill="rgb(209,21,2)" rx="2" ry="2" />
<text  x="1190.30" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1187.3" y="229" width="0.4" height="15.0" fill="rgb(243,113,27)" rx="2" ry="2" />
<text  x="1190.30" y="239.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::basic_json&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, 0&gt; (2 samples, 0.01%)</title><rect x="521.2" y="2005" width="0.1" height="15.0" fill="rgb(245,219,3)" rx="2" ry="2" />
<text  x="524.20" y="2015.5" ></text>
</g>
<g >
<title>on_each_cpu_cond_mask (2 samples, 0.01%)</title><rect x="79.8" y="1125" width="0.1" height="15.0" fill="rgb(235,80,12)" rx="2" ry="2" />
<text  x="82.80" y="1135.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (3 samples, 0.01%)</title><rect x="88.8" y="1845" width="0.2" height="15.0" fill="rgb(223,112,35)" rx="2" ry="2" />
<text  x="91.83" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (9 samples, 0.04%)</title><rect x="770.1" y="2021" width="0.5" height="15.0" fill="rgb(218,204,19)" rx="2" ry="2" />
<text  x="773.12" y="2031.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (73 samples, 0.36%)</title><rect x="31.1" y="2021" width="4.3" height="15.0" fill="rgb(208,43,10)" rx="2" ry="2" />
<text  x="34.10" y="2031.5" ></text>
</g>
<g >
<title>operator new (17 samples, 0.08%)</title><rect x="624.9" y="1845" width="1.0" height="15.0" fill="rgb(245,37,15)" rx="2" ry="2" />
<text  x="627.88" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.3" y="1253" width="0.4" height="15.0" fill="rgb(228,122,8)" rx="2" ry="2" />
<text  x="1190.30" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (96 samples, 0.48%)</title><rect x="133.9" y="1621" width="5.6" height="15.0" fill="rgb(226,144,43)" rx="2" ry="2" />
<text  x="136.90" y="1631.5" ></text>
</g>
<g >
<title>__strxfrm_l (41 samples, 0.20%)</title><rect x="1167.6" y="2021" width="2.4" height="15.0" fill="rgb(251,190,32)" rx="2" ry="2" />
<text  x="1170.55" y="2031.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="88.1" y="1797" width="0.1" height="15.0" fill="rgb(231,2,40)" rx="2" ry="2" />
<text  x="91.07" y="1807.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (3 samples, 0.01%)</title><rect x="330.5" y="1973" width="0.2" height="15.0" fill="rgb(240,28,0)" rx="2" ry="2" />
<text  x="333.54" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (2 samples, 0.01%)</title><rect x="161.0" y="1845" width="0.1" height="15.0" fill="rgb(205,52,30)" rx="2" ry="2" />
<text  x="163.98" y="1855.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; const&amp;&gt; (4 samples, 0.02%)</title><rect x="522.6" y="1909" width="0.2" height="15.0" fill="rgb(244,81,8)" rx="2" ry="2" />
<text  x="525.61" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (2 samples, 0.01%)</title><rect x="187.9" y="1813" width="0.1" height="15.0" fill="rgb(243,202,13)" rx="2" ry="2" />
<text  x="190.88" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (359 samples, 1.78%)</title><rect x="54.4" y="917" width="21.0" height="15.0" fill="rgb(210,121,50)" rx="2" ry="2" />
<text  x="57.37" y="927.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (3 samples, 0.01%)</title><rect x="82.7" y="1477" width="0.2" height="15.0" fill="rgb(240,139,50)" rx="2" ry="2" />
<text  x="85.68" y="1487.5" ></text>
</g>
<g >
<title>smp_call_function_single (3 samples, 0.01%)</title><rect x="526.2" y="1829" width="0.2" height="15.0" fill="rgb(251,130,51)" rx="2" ry="2" />
<text  x="529.18" y="1839.5" ></text>
</g>
<g >
<title>__lru_cache_add (7 samples, 0.03%)</title><rect x="24.7" y="1941" width="0.4" height="15.0" fill="rgb(228,14,13)" rx="2" ry="2" />
<text  x="27.71" y="1951.5" ></text>
</g>
<g >
<title>__libc_read (3 samples, 0.01%)</title><rect x="1108.4" y="2037" width="0.2" height="15.0" fill="rgb(233,130,12)" rx="2" ry="2" />
<text  x="1111.41" y="2047.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::create&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (2 samples, 0.01%)</title><rect x="521.2" y="1973" width="0.1" height="15.0" fill="rgb(252,21,52)" rx="2" ry="2" />
<text  x="524.20" y="1983.5" ></text>
</g>
<g >
<title>fasttext::FastText::loadModel (8 samples, 0.04%)</title><rect x="520.1" y="1989" width="0.5" height="15.0" fill="rgb(249,221,9)" rx="2" ry="2" />
<text  x="523.08" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="217.5" y="1781" width="0.2" height="15.0" fill="rgb(219,89,50)" rx="2" ry="2" />
<text  x="220.48" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1186.5" y="597" width="0.4" height="15.0" fill="rgb(227,128,39)" rx="2" ry="2" />
<text  x="1189.48" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.3" y="1349" width="0.4" height="15.0" fill="rgb(246,18,15)" rx="2" ry="2" />
<text  x="1190.30" y="1359.5" ></text>
</g>
<g >
<title>fasttext::FastText::getDimension (27 samples, 0.13%)</title><rect x="331.5" y="1989" width="1.6" height="15.0" fill="rgb(254,182,49)" rx="2" ry="2" />
<text  x="334.48" y="1999.5" ></text>
</g>
<g >
<title>generic_exec_single (14 samples, 0.07%)</title><rect x="947.4" y="1813" width="0.8" height="15.0" fill="rgb(220,81,46)" rx="2" ry="2" />
<text  x="950.35" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.3" y="405" width="0.4" height="15.0" fill="rgb(223,227,51)" rx="2" ry="2" />
<text  x="1190.30" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.1" y="69" width="0.1" height="15.0" fill="rgb(224,34,41)" rx="2" ry="2" />
<text  x="1190.13" y="79.5" ></text>
</g>
<g >
<title>do_page_fault (3 samples, 0.01%)</title><rect x="1100.4" y="2005" width="0.2" height="15.0" fill="rgb(215,190,43)" rx="2" ry="2" />
<text  x="1103.38" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (614 samples, 3.05%)</title><rect x="54.3" y="1925" width="36.0" height="15.0" fill="rgb(234,134,7)" rx="2" ry="2" />
<text  x="57.31" y="1935.5" >[un..</text>
</g>
<g >
<title>do_page_fault (3 samples, 0.01%)</title><rect x="875.6" y="1925" width="0.1" height="15.0" fill="rgb(246,51,43)" rx="2" ry="2" />
<text  x="878.56" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.3" y="917" width="0.4" height="15.0" fill="rgb(248,111,36)" rx="2" ry="2" />
<text  x="1190.30" y="927.5" ></text>
</g>
<g >
<title>[unknown] (625 samples, 3.10%)</title><rect x="54.3" y="1957" width="36.6" height="15.0" fill="rgb(227,209,37)" rx="2" ry="2" />
<text  x="57.31" y="1967.5" >[un..</text>
</g>
<g >
<title>ext4_file_read_iter (3 samples, 0.01%)</title><rect x="1108.4" y="1909" width="0.2" height="15.0" fill="rgb(219,67,22)" rx="2" ry="2" />
<text  x="1111.41" y="1919.5" ></text>
</g>
<g >
<title>fasttext::HierarchicalSoftmaxLoss::predict (4 samples, 0.02%)</title><rect x="575.3" y="1925" width="0.2" height="15.0" fill="rgb(216,57,54)" rx="2" ry="2" />
<text  x="578.30" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="1187.1" y="917" width="0.1" height="15.0" fill="rgb(237,48,24)" rx="2" ry="2" />
<text  x="1190.07" y="927.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (206 samples, 1.02%)</title><rect x="28.8" y="2037" width="12.0" height="15.0" fill="rgb(232,46,44)" rx="2" ry="2" />
<text  x="31.76" y="2047.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int&gt; (25 samples, 0.12%)</title><rect x="1188.5" y="2053" width="1.5" height="15.0" fill="rgb(208,134,47)" rx="2" ry="2" />
<text  x="1191.53" y="2063.5" ></text>
</g>
<g >
<title>TDocument::TDocument (12 samples, 0.06%)</title><rect x="335.6" y="2005" width="0.7" height="15.0" fill="rgb(215,163,25)" rx="2" ry="2" />
<text  x="338.58" y="2015.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (22 samples, 0.11%)</title><rect x="1176.6" y="2037" width="1.3" height="15.0" fill="rgb(221,30,32)" rx="2" ry="2" />
<text  x="1179.64" y="2047.5" ></text>
</g>
<g >
<title>page_fault (10 samples, 0.05%)</title><rect x="106.1" y="2021" width="0.5" height="15.0" fill="rgb(235,214,51)" rx="2" ry="2" />
<text  x="109.06" y="2031.5" ></text>
</g>
<g >
<title>__asan::AsanTSDGet (3 samples, 0.01%)</title><rect x="164.9" y="1541" width="0.2" height="15.0" fill="rgb(224,163,23)" rx="2" ry="2" />
<text  x="167.91" y="1551.5" ></text>
</g>
<g >
<title>__asan::Allocator::Deallocate (2 samples, 0.01%)</title><rect x="207.6" y="1637" width="0.2" height="15.0" fill="rgb(215,92,18)" rx="2" ry="2" />
<text  x="210.63" y="1647.5" ></text>
</g>
<g >
<title>memcpy (3 samples, 0.01%)</title><rect x="602.2" y="1877" width="0.2" height="15.0" fill="rgb(217,223,15)" rx="2" ry="2" />
<text  x="605.20" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.03%)</title><rect x="1186.5" y="1733" width="0.4" height="15.0" fill="rgb(234,134,40)" rx="2" ry="2" />
<text  x="1189.48" y="1743.5" ></text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::get (2 samples, 0.01%)</title><rect x="124.3" y="1925" width="0.2" height="15.0" fill="rgb(224,173,4)" rx="2" ry="2" />
<text  x="127.35" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1187.2" y="1845" width="0.5" height="15.0" fill="rgb(207,100,2)" rx="2" ry="2" />
<text  x="1190.25" y="1855.5" ></text>
</g>
<g >
<title>__asan_memcpy (3 samples, 0.01%)</title><rect x="152.7" y="1637" width="0.1" height="15.0" fill="rgb(209,94,39)" rx="2" ry="2" />
<text  x="155.66" y="1647.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (3 samples, 0.01%)</title><rect x="876.3" y="2005" width="0.1" height="15.0" fill="rgb(252,19,49)" rx="2" ry="2" />
<text  x="879.26" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.02%)</title><rect x="879.9" y="2021" width="0.2" height="15.0" fill="rgb(215,60,43)" rx="2" ry="2" />
<text  x="882.89" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (97 samples, 0.48%)</title><rect x="155.1" y="1781" width="5.7" height="15.0" fill="rgb(253,63,23)" rx="2" ry="2" />
<text  x="158.12" y="1791.5" ></text>
</g>
<g >
<title>try_charge (2 samples, 0.01%)</title><rect x="661.3" y="1749" width="0.1" height="15.0" fill="rgb(233,46,46)" rx="2" ry="2" />
<text  x="664.28" y="1759.5" ></text>
</g>
<g >
<title>onmt::unicode::explode_utf8 (28 samples, 0.14%)</title><rect x="811.4" y="2037" width="1.7" height="15.0" fill="rgb(230,60,5)" rx="2" ry="2" />
<text  x="814.44" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="188.6" y="1349" width="0.1" height="15.0" fill="rgb(244,31,0)" rx="2" ry="2" />
<text  x="191.59" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.02%)</title><rect x="1187.4" y="101" width="0.3" height="15.0" fill="rgb(244,173,18)" rx="2" ry="2" />
<text  x="1190.36" y="111.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (86 samples, 0.43%)</title><rect x="139.7" y="1717" width="5.0" height="15.0" fill="rgb(227,104,49)" rx="2" ry="2" />
<text  x="142.70" y="1727.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::emplace_back&lt;char const*&amp;, unsigned int&amp;&gt; (7 samples, 0.03%)</title><rect x="638.7" y="1877" width="0.4" height="15.0" fill="rgb(216,72,15)" rx="2" ry="2" />
<text  x="641.71" y="1887.5" ></text>
</g>
<g >
<title>__pthread_getspecific (3 samples, 0.01%)</title><rect x="624.3" y="1845" width="0.2" height="15.0" fill="rgb(250,156,4)" rx="2" ry="2" />
<text  x="627.29" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (73 samples, 0.36%)</title><rect x="205.9" y="1717" width="4.3" height="15.0" fill="rgb(220,160,0)" rx="2" ry="2" />
<text  x="208.93" y="1727.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotPut (26 samples, 0.13%)</title><rect x="1096.1" y="2053" width="1.5" height="15.0" fill="rgb(254,140,2)" rx="2" ry="2" />
<text  x="1099.11" y="2063.5" ></text>
</g>
<g >
<title>smp_call_function_single (17 samples, 0.08%)</title><rect x="947.2" y="1829" width="1.0" height="15.0" fill="rgb(234,47,39)" rx="2" ry="2" />
<text  x="950.18" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.3" y="741" width="0.4" height="15.0" fill="rgb(231,198,21)" rx="2" ry="2" />
<text  x="1190.30" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="1187.1" y="1573" width="0.1" height="15.0" fill="rgb(234,10,42)" rx="2" ry="2" />
<text  x="1190.07" y="1583.5" ></text>
</g>
<g >
<title>__asan::AsanTSDGet (2 samples, 0.01%)</title><rect x="184.3" y="1653" width="0.1" height="15.0" fill="rgb(211,122,18)" rx="2" ry="2" />
<text  x="187.31" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (473 samples, 2.35%)</title><rect x="133.4" y="1893" width="27.7" height="15.0" fill="rgb(222,134,38)" rx="2" ry="2" />
<text  x="136.37" y="1903.5" >s..</text>
</g>
<g >
<title>Annotate (175 samples, 0.87%)</title><rect x="122.8" y="2005" width="10.2" height="15.0" fill="rgb(232,167,9)" rx="2" ry="2" />
<text  x="125.77" y="2015.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::Unwind (14 samples, 0.07%)</title><rect x="600.6" y="1877" width="0.8" height="15.0" fill="rgb(216,186,27)" rx="2" ry="2" />
<text  x="603.56" y="1887.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::addSubwords (474 samples, 2.35%)</title><rect x="547.0" y="1909" width="27.8" height="15.0" fill="rgb(251,228,11)" rx="2" ry="2" />
<text  x="550.05" y="1919.5" >f..</text>
</g>
<g >
<title>fasttext::DenseMatrix::addRowToVector (1,221 samples, 6.06%)</title><rect x="241.1" y="1973" width="71.6" height="15.0" fill="rgb(235,148,25)" rx="2" ry="2" />
<text  x="244.10" y="1983.5" >fasttext..</text>
</g>
<g >
<title>onmt::unicode::is_separator (84 samples, 0.42%)</title><rect x="727.0" y="1877" width="5.0" height="15.0" fill="rgb(215,60,27)" rx="2" ry="2" />
<text  x="730.04" y="1887.5" ></text>
</g>
<g >
<title>__asan::asan_memalign (5 samples, 0.02%)</title><rect x="1160.2" y="2037" width="0.3" height="15.0" fill="rgb(225,43,36)" rx="2" ry="2" />
<text  x="1163.17" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1187.3" y="997" width="0.4" height="15.0" fill="rgb(239,2,19)" rx="2" ry="2" />
<text  x="1190.30" y="1007.5" ></text>
</g>
<g >
<title>std::__stable_sort_adaptive&lt;__gnu_cxx::__normal_iterator&lt;TDocument*, std::vector&lt;TDocument, std::allocator&lt;TDocument&gt; &gt; &gt;, TDocument*, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;main::$_1&gt; &gt; (6 samples, 0.03%)</title><rect x="523.0" y="2005" width="0.4" height="15.0" fill="rgb(222,28,51)" rx="2" ry="2" />
<text  x="526.02" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (356 samples, 1.77%)</title><rect x="54.4" y="677" width="20.8" height="15.0" fill="rgb(226,138,48)" rx="2" ry="2" />
<text  x="57.37" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.03%)</title><rect x="1187.2" y="1957" width="0.5" height="15.0" fill="rgb(250,71,36)" rx="2" ry="2" />
<text  x="1190.25" y="1967.5" ></text>
</g>
<g >
<title>__asan_memcpy (6 samples, 0.03%)</title><rect x="658.9" y="1877" width="0.3" height="15.0" fill="rgb(241,157,31)" rx="2" ry="2" />
<text  x="661.87" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="1187.1" y="1253" width="0.1" height="15.0" fill="rgb(211,135,17)" rx="2" ry="2" />
<text  x="1190.07" y="1263.5" ></text>
</g>
<g >
<title>[unknown] (347 samples, 1.72%)</title><rect x="54.4" y="261" width="20.3" height="15.0" fill="rgb(205,28,54)" rx="2" ry="2" />
<text  x="57.37" y="271.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (2 samples, 0.01%)</title><rect x="698.0" y="1733" width="0.1" height="15.0" fill="rgb(208,196,26)" rx="2" ry="2" />
<text  x="701.03" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (348 samples, 1.73%)</title><rect x="54.4" y="421" width="20.4" height="15.0" fill="rgb(229,142,8)" rx="2" ry="2" />
<text  x="57.37" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.01%)</title><rect x="1187.1" y="933" width="0.1" height="15.0" fill="rgb(238,76,50)" rx="2" ry="2" />
<text  x="1190.07" y="943.5" ></text>
</g>
<g >
<title>page_fault (5 samples, 0.02%)</title><rect x="1189.5" y="2021" width="0.3" height="15.0" fill="rgb(226,69,15)" rx="2" ry="2" />
<text  x="1192.47" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (92 samples, 0.46%)</title><rect x="210.4" y="1765" width="5.4" height="15.0" fill="rgb(215,144,3)" rx="2" ry="2" />
<text  x="213.45" y="1775.5" ></text>
</g>
<g >
<title>__handle_mm_fault (2 samples, 0.01%)</title><rect x="54.1" y="1941" width="0.2" height="15.0" fill="rgb(240,132,14)" rx="2" ry="2" />
<text  x="57.13" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (78 samples, 0.39%)</title><rect x="150.2" y="1765" width="4.6" height="15.0" fill="rgb(217,19,42)" rx="2" ry="2" />
<text  x="153.20" y="1775.5" ></text>
</g>
<g >
<title>clear_page_erms (2 samples, 0.01%)</title><rect x="53.3" y="1877" width="0.1" height="15.0" fill="rgb(226,221,10)" rx="2" ry="2" />
<text  x="56.25" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="1187.1" y="341" width="0.1" height="15.0" fill="rgb(235,204,54)" rx="2" ry="2" />
<text  x="1190.07" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.02%)</title><rect x="1187.4" y="133" width="0.3" height="15.0" fill="rgb(214,67,16)" rx="2" ry="2" />
<text  x="1190.36" y="143.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.03%)</title><rect x="1186.5" y="1589" width="0.4" height="15.0" fill="rgb(229,228,2)" rx="2" ry="2" />
<text  x="1189.48" y="1599.5" ></text>
</g>
<g >
<title>native_send_call_func_single_ipi (2 samples, 0.01%)</title><rect x="79.8" y="1045" width="0.1" height="15.0" fill="rgb(232,214,0)" rx="2" ry="2" />
<text  x="82.80" y="1055.5" ></text>
</g>
<g >
<title>[unknown] (357 samples, 1.77%)</title><rect x="54.4" y="757" width="20.9" height="15.0" fill="rgb(219,143,9)" rx="2" ry="2" />
<text  x="57.37" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.03%)</title><rect x="1186.5" y="197" width="0.4" height="15.0" fill="rgb(254,83,24)" rx="2" ry="2" />
<text  x="1189.48" y="207.5" ></text>
</g>
<g >
<title>[unknown] (622 samples, 3.09%)</title><rect x="54.3" y="1941" width="36.5" height="15.0" fill="rgb(249,108,34)" rx="2" ry="2" />
<text  x="57.31" y="1951.5" >[un..</text>
</g>
<g >
<title>[unknown] (349 samples, 1.73%)</title><rect x="54.4" y="437" width="20.4" height="15.0" fill="rgb(235,101,22)" rx="2" ry="2" />
<text  x="57.37" y="447.5" ></text>
</g>
<g >
<title>TDocument::FromJson (2 samples, 0.01%)</title><rect x="122.9" y="1973" width="0.2" height="15.0" fill="rgb(212,215,18)" rx="2" ry="2" />
<text  x="125.94" y="1983.5" ></text>
</g>
<g >
<title>[libOpenNMTTokenizer.so] (5 samples, 0.02%)</title><rect x="583.7" y="1893" width="0.3" height="15.0" fill="rgb(235,143,18)" rx="2" ry="2" />
<text  x="586.74" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1187.3" y="901" width="0.4" height="15.0" fill="rgb(206,141,17)" rx="2" ry="2" />
<text  x="1190.30" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.3" y="245" width="0.4" height="15.0" fill="rgb(232,30,9)" rx="2" ry="2" />
<text  x="1190.30" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find (7 samples, 0.03%)</title><rect x="756.8" y="1909" width="0.4" height="15.0" fill="rgb(240,131,34)" rx="2" ry="2" />
<text  x="759.75" y="1919.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (10 samples, 0.05%)</title><rect x="180.4" y="1621" width="0.6" height="15.0" fill="rgb(212,184,18)" rx="2" ry="2" />
<text  x="183.44" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1187.2" y="1781" width="0.5" height="15.0" fill="rgb(253,44,22)" rx="2" ry="2" />
<text  x="1190.25" y="1791.5" ></text>
</g>
<g >
<title>__asan_memset (31 samples, 0.15%)</title><rect x="686.0" y="1861" width="1.8" height="15.0" fill="rgb(244,212,13)" rx="2" ry="2" />
<text  x="689.01" y="1871.5" ></text>
</g>
<g >
<title>arch_tlb_finish_mmu (7 samples, 0.03%)</title><rect x="1097.9" y="1877" width="0.4" height="15.0" fill="rgb(240,49,34)" rx="2" ry="2" />
<text  x="1100.92" y="1887.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (4 samples, 0.02%)</title><rect x="82.9" y="1477" width="0.2" height="15.0" fill="rgb(245,106,22)" rx="2" ry="2" />
<text  x="85.91" y="1487.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="187.7" y="1797" width="0.1" height="15.0" fill="rgb(212,90,37)" rx="2" ry="2" />
<text  x="190.71" y="1807.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::emplace_back&lt;char const*&amp;, unsigned int&amp;&gt; (136 samples, 0.68%)</title><rect x="614.4" y="1861" width="8.0" height="15.0" fill="rgb(227,141,17)" rx="2" ry="2" />
<text  x="617.45" y="1871.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (4 samples, 0.02%)</title><rect x="215.1" y="1669" width="0.3" height="15.0" fill="rgb(205,53,17)" rx="2" ry="2" />
<text  x="218.14" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1187.2" y="2037" width="0.5" height="15.0" fill="rgb(211,45,45)" rx="2" ry="2" />
<text  x="1190.25" y="2047.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&gt;::PopulateFreeArray (2 samples, 0.01%)</title><rect x="1022.9" y="2053" width="0.1" height="15.0" fill="rgb(231,211,45)" rx="2" ry="2" />
<text  x="1025.90" y="2063.5" ></text>
</g>
<g >
<title>fasttext::ProductQuantizer::get_centroids (3 samples, 0.01%)</title><rect x="1101.0" y="2053" width="0.1" height="15.0" fill="rgb(237,193,22)" rx="2" ry="2" />
<text  x="1103.97" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.03%)</title><rect x="1186.5" y="53" width="0.4" height="15.0" fill="rgb(224,117,9)" rx="2" ry="2" />
<text  x="1189.48" y="63.5" ></text>
</g>
<g >
<title>__pthread_getspecific (3 samples, 0.01%)</title><rect x="165.7" y="1541" width="0.2" height="15.0" fill="rgb(233,226,7)" rx="2" ry="2" />
<text  x="168.73" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (401 samples, 1.99%)</title><rect x="54.3" y="1205" width="23.5" height="15.0" fill="rgb(218,55,15)" rx="2" ry="2" />
<text  x="57.31" y="1215.5" >[..</text>
</g>
<g >
<title>nlohmann::detail::json_sax_dom_parser&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::handle_value&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (2 samples, 0.01%)</title><rect x="124.1" y="1941" width="0.1" height="15.0" fill="rgb(251,131,23)" rx="2" ry="2" />
<text  x="127.11" y="1951.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.01%)</title><rect x="135.1" y="1573" width="0.2" height="15.0" fill="rgb(214,5,6)" rx="2" ry="2" />
<text  x="138.13" y="1583.5" ></text>
</g>
<g >
<title>__libc_start_main (6,838 samples, 33.96%)</title><rect x="122.7" y="2037" width="400.8" height="15.0" fill="rgb(230,49,20)" rx="2" ry="2" />
<text  x="125.71" y="2047.5" >__libc_start_main</text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (30 samples, 0.15%)</title><rect x="657.1" y="1877" width="1.8" height="15.0" fill="rgb(249,131,49)" rx="2" ry="2" />
<text  x="660.12" y="1887.5" ></text>
</g>
<g >
<title>syscall (7 samples, 0.03%)</title><rect x="132.5" y="1973" width="0.4" height="15.0" fill="rgb(245,179,41)" rx="2" ry="2" />
<text  x="135.50" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.3" y="533" width="0.4" height="15.0" fill="rgb(205,106,50)" rx="2" ry="2" />
<text  x="1190.30" y="543.5" ></text>
</g>
<g >
<title>[unknown] (359 samples, 1.78%)</title><rect x="54.4" y="901" width="21.0" height="15.0" fill="rgb(248,192,19)" rx="2" ry="2" />
<text  x="57.37" y="911.5" ></text>
</g>
<g >
<title>__sanitizer::internal_munmap (4 samples, 0.02%)</title><rect x="769.5" y="2037" width="0.3" height="15.0" fill="rgb(217,105,7)" rx="2" ry="2" />
<text  x="772.53" y="2047.5" ></text>
</g>
<g >
<title>handle_mm_fault (67 samples, 0.33%)</title><rect x="22.7" y="1989" width="3.9" height="15.0" fill="rgb(222,187,33)" rx="2" ry="2" />
<text  x="25.72" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1187.2" y="1941" width="0.5" height="15.0" fill="rgb(242,97,14)" rx="2" ry="2" />
<text  x="1190.25" y="1951.5" ></text>
</g>
<g >
<title>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::dump (5 samples, 0.02%)</title><rect x="521.4" y="1957" width="0.3" height="15.0" fill="rgb(247,175,4)" rx="2" ry="2" />
<text  x="524.37" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (79 samples, 0.39%)</title><rect x="176.9" y="1669" width="4.7" height="15.0" fill="rgb(206,200,38)" rx="2" ry="2" />
<text  x="179.92" y="1679.5" ></text>
</g>
<g >
<title>__dynamic_cast (4 samples, 0.02%)</title><rect x="172.9" y="1621" width="0.3" height="15.0" fill="rgb(250,114,16)" rx="2" ry="2" />
<text  x="175.94" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.3" y="773" width="0.4" height="15.0" fill="rgb(254,101,52)" rx="2" ry="2" />
<text  x="1190.30" y="783.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;std::__detail::_State&lt;char&gt; const*, std::__detail::_State&lt;char&gt;*&gt; (2 samples, 0.01%)</title><rect x="189.8" y="1653" width="0.1" height="15.0" fill="rgb(251,183,25)" rx="2" ry="2" />
<text  x="192.82" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (348 samples, 1.73%)</title><rect x="54.4" y="309" width="20.4" height="15.0" fill="rgb(218,118,7)" rx="2" ry="2" />
<text  x="57.37" y="319.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::getLine (224 samples, 1.11%)</title><rect x="530.3" y="1925" width="13.2" height="15.0" fill="rgb(236,194,45)" rx="2" ry="2" />
<text  x="533.34" y="1935.5" ></text>
</g>
<g >
<title>find_vma (2 samples, 0.01%)</title><rect x="26.8" y="2005" width="0.1" height="15.0" fill="rgb(226,98,24)" rx="2" ry="2" />
<text  x="29.82" y="2015.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (2 samples, 0.01%)</title><rect x="544.4" y="1941" width="0.1" height="15.0" fill="rgb(250,54,5)" rx="2" ry="2" />
<text  x="547.41" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (515 samples, 2.56%)</title><rect x="54.3" y="1589" width="30.2" height="15.0" fill="rgb(212,126,49)" rx="2" ry="2" />
<text  x="57.31" y="1599.5" >[u..</text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (75 samples, 0.37%)</title><rect x="145.7" y="1637" width="4.4" height="15.0" fill="rgb(223,116,53)" rx="2" ry="2" />
<text  x="148.68" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (5 samples, 0.02%)</title><rect x="181.7" y="1765" width="0.3" height="15.0" fill="rgb(227,151,22)" rx="2" ry="2" />
<text  x="184.67" y="1775.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::readWord (3 samples, 0.01%)</title><rect x="575.0" y="1925" width="0.2" height="15.0" fill="rgb(254,137,29)" rx="2" ry="2" />
<text  x="578.00" y="1935.5" ></text>
</g>
<g >
<title>page_fault (23 samples, 0.11%)</title><rect x="502.6" y="1925" width="1.3" height="15.0" fill="rgb(216,10,15)" rx="2" ry="2" />
<text  x="505.56" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.04%)</title><rect x="1186.4" y="1989" width="0.5" height="15.0" fill="rgb(249,119,14)" rx="2" ry="2" />
<text  x="1189.42" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1187.3" y="277" width="0.4" height="15.0" fill="rgb(223,220,8)" rx="2" ry="2" />
<text  x="1190.30" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.01%)</title><rect x="1187.1" y="1413" width="0.1" height="15.0" fill="rgb(218,30,47)" rx="2" ry="2" />
<text  x="1190.07" y="1423.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (50 samples, 0.25%)</title><rect x="816.5" y="2037" width="2.9" height="15.0" fill="rgb(235,210,52)" rx="2" ry="2" />
<text  x="819.48" y="2047.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (9 samples, 0.04%)</title><rect x="214.6" y="1669" width="0.5" height="15.0" fill="rgb(239,176,36)" rx="2" ry="2" />
<text  x="217.61" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="1187.1" y="101" width="0.1" height="15.0" fill="rgb(222,94,11)" rx="2" ry="2" />
<text  x="1190.07" y="111.5" ></text>
</g>
<g >
<title>get_page_from_freelist (3 samples, 0.01%)</title><rect x="513.7" y="1845" width="0.2" height="15.0" fill="rgb(218,64,16)" rx="2" ry="2" />
<text  x="516.70" y="1855.5" ></text>
</g>
<g >
<title>try_to_wake_up (3 samples, 0.01%)</title><rect x="1099.0" y="1893" width="0.2" height="15.0" fill="rgb(226,191,22)" rx="2" ry="2" />
<text  x="1102.04" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_try_char (3 samples, 0.01%)</title><rect x="144.7" y="1733" width="0.2" height="15.0" fill="rgb(242,183,32)" rx="2" ry="2" />
<text  x="147.74" y="1743.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::_M_transform (8 samples, 0.04%)</title><rect x="1145.0" y="2053" width="0.5" height="15.0" fill="rgb(232,226,51)" rx="2" ry="2" />
<text  x="1147.99" y="2063.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.02%)</title><rect x="175.7" y="1589" width="0.3" height="15.0" fill="rgb(225,125,4)" rx="2" ry="2" />
<text  x="178.75" y="1599.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (2 samples, 0.01%)</title><rect x="153.1" y="1637" width="0.1" height="15.0" fill="rgb(254,210,40)" rx="2" ry="2" />
<text  x="156.13" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (83 samples, 0.41%)</title><rect x="167.8" y="1701" width="4.8" height="15.0" fill="rgb(240,218,32)" rx="2" ry="2" />
<text  x="170.78" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1187.2" y="1637" width="0.5" height="15.0" fill="rgb(207,226,2)" rx="2" ry="2" />
<text  x="1190.25" y="1647.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (4 samples, 0.02%)</title><rect x="80.6" y="1381" width="0.3" height="15.0" fill="rgb(219,157,52)" rx="2" ry="2" />
<text  x="83.63" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (6 samples, 0.03%)</title><rect x="162.3" y="1685" width="0.3" height="15.0" fill="rgb(235,204,1)" rx="2" ry="2" />
<text  x="165.27" y="1695.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (3 samples, 0.01%)</title><rect x="77.2" y="1157" width="0.2" height="15.0" fill="rgb(249,198,29)" rx="2" ry="2" />
<text  x="80.23" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (4 samples, 0.02%)</title><rect x="154.8" y="1765" width="0.3" height="15.0" fill="rgb(249,138,45)" rx="2" ry="2" />
<text  x="157.83" y="1775.5" ></text>
</g>
<g >
<title>alloc_pages_vma (2 samples, 0.01%)</title><rect x="53.0" y="1941" width="0.1" height="15.0" fill="rgb(206,138,10)" rx="2" ry="2" />
<text  x="56.02" y="1951.5" ></text>
</g>
<g >
<title>__pthread_getspecific (3 samples, 0.01%)</title><rect x="193.2" y="1557" width="0.2" height="15.0" fill="rgb(205,200,39)" rx="2" ry="2" />
<text  x="196.22" y="1567.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThreadStats (39 samples, 0.19%)</title><rect x="972.0" y="2053" width="2.3" height="15.0" fill="rgb(216,181,49)" rx="2" ry="2" />
<text  x="974.97" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.01%)</title><rect x="188.5" y="1589" width="0.2" height="15.0" fill="rgb(251,51,51)" rx="2" ry="2" />
<text  x="191.53" y="1599.5" ></text>
</g>
<g >
<title>native_flush_tlb_others (4 samples, 0.02%)</title><rect x="1098.0" y="1829" width="0.2" height="15.0" fill="rgb(236,42,12)" rx="2" ry="2" />
<text  x="1100.98" y="1839.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (4 samples, 0.02%)</title><rect x="89.3" y="1877" width="0.2" height="15.0" fill="rgb(232,225,48)" rx="2" ry="2" />
<text  x="92.30" y="1887.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append@plt (2 samples, 0.01%)</title><rect x="739.9" y="1893" width="0.1" height="15.0" fill="rgb(221,68,23)" rx="2" ry="2" />
<text  x="742.87" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (77 samples, 0.38%)</title><rect x="150.3" y="1701" width="4.5" height="15.0" fill="rgb(212,22,8)" rx="2" ry="2" />
<text  x="153.25" y="1711.5" ></text>
</g>
<g >
<title>__x64_sys_futex (11 samples, 0.05%)</title><rect x="27.9" y="1957" width="0.7" height="15.0" fill="rgb(238,120,51)" rx="2" ry="2" />
<text  x="30.93" y="1967.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.03%)</title><rect x="1099.9" y="2053" width="0.4" height="15.0" fill="rgb(224,65,4)" rx="2" ry="2" />
<text  x="1102.92" y="2063.5" ></text>
</g>
<g >
<title>__sanitizer::StackTrace::GetCurrentPc (2 samples, 0.01%)</title><rect x="186.2" y="1653" width="0.1" height="15.0" fill="rgb(210,174,49)" rx="2" ry="2" />
<text  x="189.18" y="1663.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (2 samples, 0.01%)</title><rect x="315.0" y="1957" width="0.1" height="15.0" fill="rgb(235,91,44)" rx="2" ry="2" />
<text  x="318.01" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.03%)</title><rect x="1186.5" y="1157" width="0.4" height="15.0" fill="rgb(240,39,29)" rx="2" ry="2" />
<text  x="1189.48" y="1167.5" ></text>
</g>
<g >
<title>__sanitizer::internal_munmap (3 samples, 0.01%)</title><rect x="1099.4" y="2053" width="0.2" height="15.0" fill="rgb(243,29,16)" rx="2" ry="2" />
<text  x="1102.39" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (78 samples, 0.39%)</title><rect x="201.4" y="1765" width="4.5" height="15.0" fill="rgb(212,43,53)" rx="2" ry="2" />
<text  x="204.36" y="1775.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (6 samples, 0.03%)</title><rect x="94.3" y="2021" width="0.3" height="15.0" fill="rgb(241,209,18)" rx="2" ry="2" />
<text  x="97.28" y="2031.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (2 samples, 0.01%)</title><rect x="498.5" y="1941" width="0.1" height="15.0" fill="rgb(243,49,20)" rx="2" ry="2" />
<text  x="501.52" y="1951.5" ></text>
</g>
<g >
<title>do_syscall_64 (4 samples, 0.02%)</title><rect x="79.7" y="1285" width="0.3" height="15.0" fill="rgb(253,209,28)" rx="2" ry="2" />
<text  x="82.75" y="1295.5" ></text>
</g>
<g >
<title>native_write_msr (3 samples, 0.01%)</title><rect x="526.2" y="1765" width="0.2" height="15.0" fill="rgb(206,130,40)" rx="2" ry="2" />
<text  x="529.18" y="1775.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (9 samples, 0.04%)</title><rect x="770.1" y="2005" width="0.5" height="15.0" fill="rgb(246,216,41)" rx="2" ry="2" />
<text  x="773.12" y="2015.5" ></text>
</g>
<g >
<title>alloc_pages_vma (4 samples, 0.02%)</title><rect x="53.1" y="1909" width="0.3" height="15.0" fill="rgb(246,2,1)" rx="2" ry="2" />
<text  x="56.14" y="1919.5" ></text>
</g>
<g >
<title>__dynamic_cast (4 samples, 0.02%)</title><rect x="202.6" y="1621" width="0.2" height="15.0" fill="rgb(229,101,40)" rx="2" ry="2" />
<text  x="205.59" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1186.5" y="1317" width="0.4" height="15.0" fill="rgb(239,185,40)" rx="2" ry="2" />
<text  x="1189.48" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="161.9" y="1397" width="0.2" height="15.0" fill="rgb(214,55,31)" rx="2" ry="2" />
<text  x="164.92" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1187.2" y="1877" width="0.5" height="15.0" fill="rgb(225,18,50)" rx="2" ry="2" />
<text  x="1190.25" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (542 samples, 2.69%)</title><rect x="54.3" y="1669" width="31.8" height="15.0" fill="rgb(214,226,2)" rx="2" ry="2" />
<text  x="57.31" y="1679.5" >[u..</text>
</g>
<g >
<title>alloc_pages_vma (26 samples, 0.13%)</title><rect x="23.2" y="1957" width="1.5" height="15.0" fill="rgb(228,35,47)" rx="2" ry="2" />
<text  x="26.19" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1186.5" y="37" width="0.4" height="15.0" fill="rgb(232,49,37)" rx="2" ry="2" />
<text  x="1189.48" y="47.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="1187.0" y="1733" width="0.2" height="15.0" fill="rgb(253,150,14)" rx="2" ry="2" />
<text  x="1190.01" y="1743.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (14 samples, 0.07%)</title><rect x="148.8" y="1605" width="0.9" height="15.0" fill="rgb(225,128,35)" rx="2" ry="2" />
<text  x="151.85" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="1187.0" y="1717" width="0.2" height="15.0" fill="rgb(219,46,15)" rx="2" ry="2" />
<text  x="1190.01" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (8 samples, 0.04%)</title><rect x="133.4" y="1701" width="0.4" height="15.0" fill="rgb(208,42,45)" rx="2" ry="2" />
<text  x="136.37" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.03%)</title><rect x="1186.5" y="629" width="0.4" height="15.0" fill="rgb(232,209,36)" rx="2" ry="2" />
<text  x="1189.48" y="639.5" ></text>
</g>
<g >
<title>Preprocess (3,104 samples, 15.42%)</title><rect x="575.8" y="1957" width="181.9" height="15.0" fill="rgb(213,56,0)" rx="2" ry="2" />
<text  x="578.76" y="1967.5" >Preprocess</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="1187.1" y="901" width="0.1" height="15.0" fill="rgb(232,150,45)" rx="2" ry="2" />
<text  x="1190.07" y="911.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (21 samples, 0.10%)</title><rect x="25.3" y="1957" width="1.2" height="15.0" fill="rgb(227,159,22)" rx="2" ry="2" />
<text  x="28.30" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="1187.1" y="1157" width="0.1" height="15.0" fill="rgb(233,56,28)" rx="2" ry="2" />
<text  x="1190.07" y="1167.5" ></text>
</g>
<g >
<title>release_pages (2 samples, 0.01%)</title><rect x="769.6" y="1845" width="0.2" height="15.0" fill="rgb(227,80,28)" rx="2" ry="2" />
<text  x="772.65" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (73 samples, 0.36%)</title><rect x="205.9" y="1733" width="4.3" height="15.0" fill="rgb(229,52,3)" rx="2" ry="2" />
<text  x="208.93" y="1743.5" ></text>
</g>
<g >
<title>__do_page_fault (2 samples, 0.01%)</title><rect x="93.2" y="1973" width="0.1" height="15.0" fill="rgb(226,63,6)" rx="2" ry="2" />
<text  x="96.23" y="1983.5" ></text>
</g>
<g >
<title>__sanitizer::internal_munmap (2 samples, 0.01%)</title><rect x="90.6" y="1925" width="0.2" height="15.0" fill="rgb(205,42,54)" rx="2" ry="2" />
<text  x="93.65" y="1935.5" ></text>
</g>
<g >
<title>__interceptor___strxfrm_l (162 samples, 0.80%)</title><rect x="1160.5" y="2037" width="9.5" height="15.0" fill="rgb(227,135,2)" rx="2" ry="2" />
<text  x="1163.46" y="2047.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::initNgrams (14 samples, 0.07%)</title><rect x="874.6" y="1973" width="0.8" height="15.0" fill="rgb(250,76,31)" rx="2" ry="2" />
<text  x="877.56" y="1983.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (2 samples, 0.01%)</title><rect x="184.0" y="1653" width="0.1" height="15.0" fill="rgb(240,167,12)" rx="2" ry="2" />
<text  x="186.96" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="188.5" y="1637" width="0.2" height="15.0" fill="rgb(247,93,46)" rx="2" ry="2" />
<text  x="191.53" y="1647.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (9 samples, 0.04%)</title><rect x="1118.1" y="2037" width="0.6" height="15.0" fill="rgb(240,99,26)" rx="2" ry="2" />
<text  x="1121.14" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.02%)</title><rect x="1187.4" y="69" width="0.3" height="15.0" fill="rgb(229,167,52)" rx="2" ry="2" />
<text  x="1190.36" y="79.5" ></text>
</g>
<g >
<title>[unknown] (493 samples, 2.45%)</title><rect x="54.3" y="1493" width="28.9" height="15.0" fill="rgb(233,155,52)" rx="2" ry="2" />
<text  x="57.31" y="1503.5" >[u..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.01%)</title><rect x="161.9" y="1509" width="0.2" height="15.0" fill="rgb(221,108,1)" rx="2" ry="2" />
<text  x="164.92" y="1519.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (898 samples, 4.46%)</title><rect x="821.0" y="2005" width="52.6" height="15.0" fill="rgb(225,145,47)" rx="2" ry="2" />
<text  x="823.99" y="2015.5" >__san..</text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (3 samples, 0.01%)</title><rect x="85.8" y="1653" width="0.2" height="15.0" fill="rgb(242,176,46)" rx="2" ry="2" />
<text  x="88.78" y="1663.5" ></text>
</g>
<g >
<title>__sanitizer::BlockingMutex::Lock (2 samples, 0.01%)</title><rect x="1011.4" y="2053" width="0.1" height="15.0" fill="rgb(243,95,53)" rx="2" ry="2" />
<text  x="1014.36" y="2063.5" ></text>
</g>
<g >
<title>__pthread_getspecific (4 samples, 0.02%)</title><rect x="170.7" y="1573" width="0.2" height="15.0" fill="rgb(231,226,52)" rx="2" ry="2" />
<text  x="173.71" y="1583.5" ></text>
</g>
<g >
<title>__pthread_getspecific (3 samples, 0.01%)</title><rect x="137.1" y="1557" width="0.2" height="15.0" fill="rgb(215,184,41)" rx="2" ry="2" />
<text  x="140.13" y="1567.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (34 samples, 0.17%)</title><rect x="174.5" y="1605" width="2.0" height="15.0" fill="rgb(232,13,28)" rx="2" ry="2" />
<text  x="177.52" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.02%)</title><rect x="1187.4" y="85" width="0.3" height="15.0" fill="rgb(245,89,31)" rx="2" ry="2" />
<text  x="1190.36" y="95.5" ></text>
</g>
<g >
<title>[unknown] (362 samples, 1.80%)</title><rect x="54.4" y="997" width="21.2" height="15.0" fill="rgb(248,223,35)" rx="2" ry="2" />
<text  x="57.37" y="1007.5" ></text>
</g>
<g >
<title>free_unref_page_list (4 samples, 0.02%)</title><rect x="526.6" y="1861" width="0.3" height="15.0" fill="rgb(206,119,10)" rx="2" ry="2" />
<text  x="529.65" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (358 samples, 1.78%)</title><rect x="54.4" y="773" width="21.0" height="15.0" fill="rgb(206,113,31)" rx="2" ry="2" />
<text  x="57.37" y="783.5" ></text>
</g>
<g >
<title>__dynamic_cast (6 samples, 0.03%)</title><rect x="210.7" y="1701" width="0.4" height="15.0" fill="rgb(235,32,13)" rx="2" ry="2" />
<text  x="213.74" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1187.3" y="1429" width="0.4" height="15.0" fill="rgb(233,88,2)" rx="2" ry="2" />
<text  x="1190.30" y="1439.5" ></text>
</g>
<g >
<title>__asan::Allocator::GetAsanChunkByAddrFastLocked (87 samples, 0.43%)</title><rect x="101.5" y="2037" width="5.1" height="15.0" fill="rgb(217,146,40)" rx="2" ry="2" />
<text  x="104.55" y="2047.5" ></text>
</g>
<g >
<title>fasttext::Matrix::size (6 samples, 0.03%)</title><rect x="771.3" y="2037" width="0.3" height="15.0" fill="rgb(248,213,19)" rx="2" ry="2" />
<text  x="774.29" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (449 samples, 2.23%)</title><rect x="54.3" y="1381" width="26.3" height="15.0" fill="rgb(229,95,47)" rx="2" ry="2" />
<text  x="57.31" y="1391.5" >[..</text>
</g>
<g >
<title>zap_page_range (2 samples, 0.01%)</title><rect x="88.4" y="1749" width="0.1" height="15.0" fill="rgb(239,107,37)" rx="2" ry="2" />
<text  x="91.36" y="1759.5" ></text>
</g>
<g >
<title>__clock_gettime (8 samples, 0.04%)</title><rect x="122.2" y="2037" width="0.4" height="15.0" fill="rgb(216,44,29)" rx="2" ry="2" />
<text  x="125.18" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.01%)</title><rect x="876.3" y="2021" width="0.1" height="15.0" fill="rgb(246,9,50)" rx="2" ry="2" />
<text  x="879.26" y="2031.5" ></text>
</g>
<g >
<title>std::locale::~locale (2 samples, 0.01%)</title><rect x="27.4" y="2021" width="0.1" height="15.0" fill="rgb(211,195,10)" rx="2" ry="2" />
<text  x="30.41" y="2031.5" ></text>
</g>
<g >
<title>native_flush_tlb_others (2 samples, 0.01%)</title><rect x="79.2" y="1109" width="0.1" height="15.0" fill="rgb(208,137,23)" rx="2" ry="2" />
<text  x="82.16" y="1119.5" ></text>
</g>
<g >
<title>native_write_msr (14 samples, 0.07%)</title><rect x="947.4" y="1765" width="0.8" height="15.0" fill="rgb(210,169,9)" rx="2" ry="2" />
<text  x="950.35" y="1775.5" ></text>
</g>
<g >
<title>memcpy (20 samples, 0.10%)</title><rect x="660.3" y="1877" width="1.2" height="15.0" fill="rgb(220,89,31)" rx="2" ry="2" />
<text  x="663.28" y="1887.5" ></text>
</g>
<g >
<title>alloc_pages_vma (2 samples, 0.01%)</title><rect x="766.1" y="1941" width="0.1" height="15.0" fill="rgb(211,44,19)" rx="2" ry="2" />
<text  x="769.13" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="1187.1" y="373" width="0.1" height="15.0" fill="rgb(250,62,14)" rx="2" ry="2" />
<text  x="1190.07" y="383.5" ></text>
</g>
<g >
<title>__interceptor_memcmp (3 samples, 0.01%)</title><rect x="490.7" y="1925" width="0.1" height="15.0" fill="rgb(252,69,47)" rx="2" ry="2" />
<text  x="493.66" y="1935.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (4 samples, 0.02%)</title><rect x="41.8" y="2005" width="0.3" height="15.0" fill="rgb(249,168,41)" rx="2" ry="2" />
<text  x="44.83" y="2015.5" ></text>
</g>
<g >
<title>release_pages (7 samples, 0.03%)</title><rect x="526.5" y="1877" width="0.4" height="15.0" fill="rgb(220,78,3)" rx="2" ry="2" />
<text  x="529.47" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1187.2" y="1685" width="0.5" height="15.0" fill="rgb(223,65,41)" rx="2" ry="2" />
<text  x="1190.25" y="1695.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotPut (2 samples, 0.01%)</title><rect x="179.8" y="1621" width="0.1" height="15.0" fill="rgb(221,120,19)" rx="2" ry="2" />
<text  x="182.79" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt;,  (9 samples, 0.04%)</title><rect x="161.6" y="1957" width="0.6" height="15.0" fill="rgb(208,226,2)" rx="2" ry="2" />
<text  x="164.62" y="1967.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (2 samples, 0.01%)</title><rect x="99.8" y="2021" width="0.1" height="15.0" fill="rgb(209,56,32)" rx="2" ry="2" />
<text  x="102.79" y="2031.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;std::__future_base::_Task_state&lt;std::_Bind&lt;Annotate (2 samples, 0.01%)</title><rect x="132.3" y="1973" width="0.1" height="15.0" fill="rgb(249,215,54)" rx="2" ry="2" />
<text  x="135.26" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3 samples, 0.01%)</title><rect x="187.9" y="1829" width="0.2" height="15.0" fill="rgb(223,81,14)" rx="2" ry="2" />
<text  x="190.88" y="1839.5" ></text>
</g>
<g >
<title>_vm_normal_page (3 samples, 0.01%)</title><rect x="943.7" y="1957" width="0.1" height="15.0" fill="rgb(249,152,11)" rx="2" ry="2" />
<text  x="946.66" y="1967.5" ></text>
</g>
<g >
<title>RunFasttextClf (534 samples, 2.65%)</title><rect x="544.2" y="1957" width="31.3" height="15.0" fill="rgb(244,129,43)" rx="2" ry="2" />
<text  x="547.23" y="1967.5" >Ru..</text>
</g>
<g >
<title>nlohmann::detail::external_constructor&lt; (2 samples, 0.01%)</title><rect x="521.2" y="1989" width="0.1" height="15.0" fill="rgb(210,75,27)" rx="2" ry="2" />
<text  x="524.20" y="1999.5" ></text>
</g>
<g >
<title>__dynamic_cast (5 samples, 0.02%)</title><rect x="157.1" y="1685" width="0.3" height="15.0" fill="rgb(242,132,53)" rx="2" ry="2" />
<text  x="160.11" y="1695.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (9 samples, 0.04%)</title><rect x="813.2" y="2005" width="0.5" height="15.0" fill="rgb(215,91,36)" rx="2" ry="2" />
<text  x="816.19" y="2015.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (2 samples, 0.01%)</title><rect x="758.7" y="1957" width="0.1" height="15.0" fill="rgb(245,158,1)" rx="2" ry="2" />
<text  x="761.69" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (353 samples, 1.75%)</title><rect x="189.7" y="1813" width="20.7" height="15.0" fill="rgb(212,190,2)" rx="2" ry="2" />
<text  x="192.70" y="1823.5" ></text>
</g>
<g >
<title>__asan::Allocator::Deallocate (2 samples, 0.01%)</title><rect x="197.4" y="1589" width="0.1" height="15.0" fill="rgb(210,96,0)" rx="2" ry="2" />
<text  x="200.38" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.03%)</title><rect x="1186.5" y="1013" width="0.4" height="15.0" fill="rgb(232,57,7)" rx="2" ry="2" />
<text  x="1189.48" y="1023.5" ></text>
</g>
<g >
<title>__asan::Allocator::Deallocate (250 samples, 1.24%)</title><rect x="948.3" y="2053" width="14.7" height="15.0" fill="rgb(218,78,27)" rx="2" ry="2" />
<text  x="951.35" y="2063.5" ></text>
</g>
<g >
<title>fasttext::FastText::getWordVector (10 samples, 0.05%)</title><rect x="770.7" y="2037" width="0.6" height="15.0" fill="rgb(243,55,17)" rx="2" ry="2" />
<text  x="773.70" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.03%)</title><rect x="1186.5" y="725" width="0.4" height="15.0" fill="rgb(253,188,36)" rx="2" ry="2" />
<text  x="1189.48" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (88 samples, 0.44%)</title><rect x="162.6" y="1669" width="5.2" height="15.0" fill="rgb(234,140,37)" rx="2" ry="2" />
<text  x="165.62" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (93 samples, 0.46%)</title><rect x="182.0" y="1797" width="5.4" height="15.0" fill="rgb(249,218,9)" rx="2" ry="2" />
<text  x="184.96" y="1807.5" ></text>
</g>
<g >
<title>__asan_memset (16 samples, 0.08%)</title><rect x="659.2" y="1877" width="1.0" height="15.0" fill="rgb(233,123,50)" rx="2" ry="2" />
<text  x="662.23" y="1887.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (2 samples, 0.01%)</title><rect x="137.4" y="1557" width="0.1" height="15.0" fill="rgb(215,199,11)" rx="2" ry="2" />
<text  x="140.42" y="1567.5" ></text>
</g>
<g >
<title>nlohmann::detail::parser&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::parse (138 samples, 0.69%)</title><rect x="123.9" y="1973" width="8.1" height="15.0" fill="rgb(237,32,47)" rx="2" ry="2" />
<text  x="126.94" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="161.9" y="1493" width="0.2" height="15.0" fill="rgb(233,184,1)" rx="2" ry="2" />
<text  x="164.92" y="1503.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="167.3" y="1557" width="0.1" height="15.0" fill="rgb(221,5,41)" rx="2" ry="2" />
<text  x="170.31" y="1567.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (4 samples, 0.02%)</title><rect x="758.3" y="1957" width="0.2" height="15.0" fill="rgb(248,72,40)" rx="2" ry="2" />
<text  x="761.28" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (86 samples, 0.43%)</title><rect x="139.7" y="1669" width="5.0" height="15.0" fill="rgb(227,55,22)" rx="2" ry="2" />
<text  x="142.70" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (569 samples, 2.83%)</title><rect x="54.3" y="1765" width="33.4" height="15.0" fill="rgb(224,11,44)" rx="2" ry="2" />
<text  x="57.31" y="1775.5" >[u..</text>
</g>
<g >
<title>__pthread_once_slow (3,920 samples, 19.47%)</title><rect x="529.2" y="2037" width="229.7" height="15.0" fill="rgb(231,157,21)" rx="2" ry="2" />
<text  x="532.17" y="2047.5" >__pthread_once_slow</text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (2 samples, 0.01%)</title><rect x="195.3" y="1637" width="0.1" height="15.0" fill="rgb(247,194,2)" rx="2" ry="2" />
<text  x="198.33" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.3" y="677" width="0.4" height="15.0" fill="rgb(231,170,37)" rx="2" ry="2" />
<text  x="1190.30" y="687.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::at (2 samples, 0.01%)</title><rect x="122.9" y="1941" width="0.2" height="15.0" fill="rgb(220,91,31)" rx="2" ry="2" />
<text  x="125.94" y="1951.5" ></text>
</g>
<g >
<title>GetHost (453 samples, 2.25%)</title><rect x="162.2" y="1957" width="26.6" height="15.0" fill="rgb(208,206,49)" rx="2" ry="2" />
<text  x="165.21" y="1967.5" >G..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.3" y="981" width="0.4" height="15.0" fill="rgb(206,69,3)" rx="2" ry="2" />
<text  x="1190.30" y="991.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="90.6" y="1909" width="0.2" height="15.0" fill="rgb(241,208,33)" rx="2" ry="2" />
<text  x="93.65" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.01%)</title><rect x="1187.1" y="1365" width="0.1" height="15.0" fill="rgb(251,123,46)" rx="2" ry="2" />
<text  x="1190.07" y="1375.5" ></text>
</g>
<g >
<title>do_page_fault (27 samples, 0.13%)</title><rect x="52.4" y="2005" width="1.6" height="15.0" fill="rgb(219,67,8)" rx="2" ry="2" />
<text  x="55.43" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1186.5" y="1669" width="0.4" height="15.0" fill="rgb(231,52,23)" rx="2" ry="2" />
<text  x="1189.48" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1187.3" y="757" width="0.4" height="15.0" fill="rgb(248,113,45)" rx="2" ry="2" />
<text  x="1190.30" y="767.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.02%)</title><rect x="1120.7" y="2037" width="0.2" height="15.0" fill="rgb(208,105,26)" rx="2" ry="2" />
<text  x="1123.66" y="2047.5" ></text>
</g>
<g >
<title>__asan_memcpy (4 samples, 0.02%)</title><rect x="192.6" y="1557" width="0.3" height="15.0" fill="rgb(249,79,51)" rx="2" ry="2" />
<text  x="195.63" y="1567.5" ></text>
</g>
<g >
<title>do_exit (6 samples, 0.03%)</title><rect x="1099.9" y="1989" width="0.4" height="15.0" fill="rgb(249,180,44)" rx="2" ry="2" />
<text  x="1102.92" y="1999.5" ></text>
</g>
<g >
<title>__asan::CanPoisonMemory (9 samples, 0.04%)</title><rect x="967.6" y="2053" width="0.6" height="15.0" fill="rgb(219,133,30)" rx="2" ry="2" />
<text  x="970.63" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="161.7" y="1829" width="0.4" height="15.0" fill="rgb(230,119,47)" rx="2" ry="2" />
<text  x="164.68" y="1839.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (41 samples, 0.20%)</title><rect x="1147.3" y="2037" width="2.4" height="15.0" fill="rgb(234,92,22)" rx="2" ry="2" />
<text  x="1150.27" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="1187.1" y="469" width="0.1" height="15.0" fill="rgb(212,153,37)" rx="2" ry="2" />
<text  x="1190.07" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (5 samples, 0.02%)</title><rect x="176.1" y="1589" width="0.3" height="15.0" fill="rgb(250,186,44)" rx="2" ry="2" />
<text  x="179.10" y="1599.5" ></text>
</g>
<g >
<title>unmap_single_vma (2 samples, 0.01%)</title><rect x="526.9" y="1957" width="0.1" height="15.0" fill="rgb(253,27,35)" rx="2" ry="2" />
<text  x="529.88" y="1967.5" ></text>
</g>
<g >
<title>unmap_region (4 samples, 0.02%)</title><rect x="769.5" y="1941" width="0.3" height="15.0" fill="rgb(250,216,44)" rx="2" ry="2" />
<text  x="772.53" y="1951.5" ></text>
</g>
<g >
<title>fasttext::FastText::predict (2 samples, 0.01%)</title><rect x="575.2" y="1925" width="0.1" height="15.0" fill="rgb(207,47,9)" rx="2" ry="2" />
<text  x="578.18" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="161.9" y="1429" width="0.2" height="15.0" fill="rgb(244,91,0)" rx="2" ry="2" />
<text  x="164.92" y="1439.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (2 samples, 0.01%)</title><rect x="657.0" y="1781" width="0.1" height="15.0" fill="rgb(233,16,16)" rx="2" ry="2" />
<text  x="660.00" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.01%)</title><rect x="217.5" y="1685" width="0.2" height="15.0" fill="rgb(247,70,43)" rx="2" ry="2" />
<text  x="220.48" y="1695.5" ></text>
</g>
<g >
<title>std::__stable_sort_adaptive&lt;__gnu_cxx::__normal_iterator&lt;TWeightedDoc*, std::vector&lt;TWeightedDoc, std::allocator&lt;TWeightedDoc&gt; &gt; &gt;, TWeightedDoc*, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;TNewsCluster::SortByWeights (3 samples, 0.01%)</title><rect x="331.0" y="1973" width="0.2" height="15.0" fill="rgb(228,214,30)" rx="2" ry="2" />
<text  x="334.01" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (78 samples, 0.39%)</title><rect x="150.2" y="1733" width="4.6" height="15.0" fill="rgb(210,1,11)" rx="2" ry="2" />
<text  x="153.20" y="1743.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::json_value::destroy (5 samples, 0.02%)</title><rect x="123.6" y="1989" width="0.3" height="15.0" fill="rgb(236,109,41)" rx="2" ry="2" />
<text  x="126.65" y="1999.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (2 samples, 0.01%)</title><rect x="684.1" y="1717" width="0.2" height="15.0" fill="rgb(216,30,0)" rx="2" ry="2" />
<text  x="687.14" y="1727.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (7 samples, 0.03%)</title><rect x="595.8" y="1877" width="0.4" height="15.0" fill="rgb(246,58,10)" rx="2" ry="2" />
<text  x="598.81" y="1887.5" ></text>
</g>
<g >
<title>__interceptor_strlen (23 samples, 0.11%)</title><rect x="584.8" y="1893" width="1.4" height="15.0" fill="rgb(214,30,32)" rx="2" ry="2" />
<text  x="587.85" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (482 samples, 2.39%)</title><rect x="133.4" y="1925" width="28.2" height="15.0" fill="rgb(215,191,48)" rx="2" ry="2" />
<text  x="136.37" y="1935.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.03%)</title><rect x="1187.2" y="1717" width="0.5" height="15.0" fill="rgb(213,24,6)" rx="2" ry="2" />
<text  x="1190.25" y="1727.5" ></text>
</g>
<g >
<title>__dynamic_cast (5 samples, 0.02%)</title><rect x="167.9" y="1605" width="0.3" height="15.0" fill="rgb(212,109,43)" rx="2" ry="2" />
<text  x="170.90" y="1615.5" ></text>
</g>
<g >
<title>__asan_memcpy (3 samples, 0.01%)</title><rect x="179.0" y="1621" width="0.2" height="15.0" fill="rgb(249,175,17)" rx="2" ry="2" />
<text  x="182.03" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1186.9" y="1845" width="0.3" height="15.0" fill="rgb(246,28,15)" rx="2" ry="2" />
<text  x="1189.89" y="1855.5" ></text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::scan_string (129 samples, 0.64%)</title><rect x="124.5" y="1941" width="7.5" height="15.0" fill="rgb(207,64,7)" rx="2" ry="2" />
<text  x="127.47" y="1951.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (20 samples, 0.10%)</title><rect x="597.6" y="1877" width="1.2" height="15.0" fill="rgb(243,134,11)" rx="2" ry="2" />
<text  x="600.63" y="1887.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (5 samples, 0.02%)</title><rect x="90.3" y="1925" width="0.3" height="15.0" fill="rgb(244,64,19)" rx="2" ry="2" />
<text  x="93.30" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.3" y="581" width="0.4" height="15.0" fill="rgb(252,150,42)" rx="2" ry="2" />
<text  x="1190.30" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="188.6" y="1285" width="0.1" height="15.0" fill="rgb(206,220,47)" rx="2" ry="2" />
<text  x="191.59" y="1295.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::json_value::destroy (14 samples, 0.07%)</title><rect x="521.7" y="2005" width="0.8" height="15.0" fill="rgb(232,91,48)" rx="2" ry="2" />
<text  x="524.67" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.3" y="293" width="0.4" height="15.0" fill="rgb(243,100,10)" rx="2" ry="2" />
<text  x="1190.30" y="303.5" ></text>
</g>
<g >
<title>Eigen::internal::gemv_dense_selector&lt;2, 1, true&gt;::run&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; &gt; (282 samples, 1.40%)</title><rect x="224.3" y="1957" width="16.6" height="15.0" fill="rgb(252,91,6)" rx="2" ry="2" />
<text  x="227.34" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.02%)</title><rect x="41.8" y="2021" width="0.3" height="15.0" fill="rgb(228,190,20)" rx="2" ry="2" />
<text  x="44.83" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.04%)</title><rect x="1186.4" y="1941" width="0.5" height="15.0" fill="rgb(238,144,21)" rx="2" ry="2" />
<text  x="1189.42" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.03%)</title><rect x="1187.2" y="1765" width="0.5" height="15.0" fill="rgb(251,225,0)" rx="2" ry="2" />
<text  x="1190.25" y="1775.5" ></text>
</g>
<g >
<title>__asan_memmove (2 samples, 0.01%)</title><rect x="1189.0" y="2037" width="0.1" height="15.0" fill="rgb(239,214,29)" rx="2" ry="2" />
<text  x="1192.00" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (501 samples, 2.49%)</title><rect x="54.3" y="1525" width="29.4" height="15.0" fill="rgb(222,139,11)" rx="2" ry="2" />
<text  x="57.31" y="1535.5" >[u..</text>
</g>
<g >
<title>TSlinkClustering::Cluster (3,135 samples, 15.57%)</title><rect x="336.3" y="2005" width="183.7" height="15.0" fill="rgb(207,70,17)" rx="2" ry="2" />
<text  x="339.28" y="2015.5" >TSlinkClustering::Cluster</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.3" y="1125" width="0.4" height="15.0" fill="rgb(243,62,53)" rx="2" ry="2" />
<text  x="1190.30" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (3 samples, 0.01%)</title><rect x="187.7" y="1861" width="0.2" height="15.0" fill="rgb(217,223,7)" rx="2" ry="2" />
<text  x="190.71" y="1871.5" ></text>
</g>
<g >
<title>std::operator&gt;&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (3 samples, 0.01%)</title><rect x="335.3" y="1989" width="0.2" height="15.0" fill="rgb(247,115,50)" rx="2" ry="2" />
<text  x="338.35" y="1999.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (16 samples, 0.08%)</title><rect x="944.4" y="1909" width="0.9" height="15.0" fill="rgb(228,225,52)" rx="2" ry="2" />
<text  x="947.36" y="1919.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (3 samples, 0.01%)</title><rect x="197.5" y="1589" width="0.2" height="15.0" fill="rgb(208,54,24)" rx="2" ry="2" />
<text  x="200.49" y="1599.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (6 samples, 0.03%)</title><rect x="1117.3" y="2053" width="0.3" height="15.0" fill="rgb(225,85,22)" rx="2" ry="2" />
<text  x="1120.26" y="2063.5" ></text>
</g>
<g >
<title>tlb_flush_mmu_free (8 samples, 0.04%)</title><rect x="526.4" y="1909" width="0.5" height="15.0" fill="rgb(218,118,16)" rx="2" ry="2" />
<text  x="529.41" y="1919.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (3 samples, 0.01%)</title><rect x="319.8" y="1941" width="0.1" height="15.0" fill="rgb(215,126,35)" rx="2" ry="2" />
<text  x="322.76" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (17 samples, 0.08%)</title><rect x="1186.2" y="2053" width="1.0" height="15.0" fill="rgb(238,176,28)" rx="2" ry="2" />
<text  x="1189.25" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (359 samples, 1.78%)</title><rect x="54.4" y="853" width="21.0" height="15.0" fill="rgb(251,3,37)" rx="2" ry="2" />
<text  x="57.37" y="863.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="82.2" y="1461" width="0.1" height="15.0" fill="rgb(240,27,47)" rx="2" ry="2" />
<text  x="85.21" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (75 samples, 0.37%)</title><rect x="201.4" y="1701" width="4.4" height="15.0" fill="rgb(232,194,36)" rx="2" ry="2" />
<text  x="204.42" y="1711.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (113 samples, 0.56%)</title><rect x="981.8" y="2053" width="6.6" height="15.0" fill="rgb(228,111,25)" rx="2" ry="2" />
<text  x="984.82" y="2063.5" ></text>
</g>
<g >
<title>fasttext::Vector::Vector (2 samples, 0.01%)</title><rect x="517.0" y="1973" width="0.2" height="15.0" fill="rgb(223,225,42)" rx="2" ry="2" />
<text  x="520.04" y="1983.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (5 samples, 0.02%)</title><rect x="192.3" y="1557" width="0.3" height="15.0" fill="rgb(205,222,35)" rx="2" ry="2" />
<text  x="195.34" y="1567.5" ></text>
</g>
<g >
<title>std::locale::locale (3 samples, 0.01%)</title><rect x="27.2" y="2021" width="0.1" height="15.0" fill="rgb(250,90,41)" rx="2" ry="2" />
<text  x="30.17" y="2031.5" ></text>
</g>
<g >
<title>native_send_call_func_single_ipi (3 samples, 0.01%)</title><rect x="526.2" y="1797" width="0.2" height="15.0" fill="rgb(245,128,50)" rx="2" ry="2" />
<text  x="529.18" y="1807.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (6 samples, 0.03%)</title><rect x="595.3" y="1877" width="0.4" height="15.0" fill="rgb(208,119,42)" rx="2" ry="2" />
<text  x="598.34" y="1887.5" ></text>
</g>
<g >
<title>flush_tlb_mm_range (3 samples, 0.01%)</title><rect x="79.7" y="1157" width="0.2" height="15.0" fill="rgb(250,68,47)" rx="2" ry="2" />
<text  x="82.75" y="1167.5" ></text>
</g>
<g >
<title>native_flush_tlb_others (4 samples, 0.02%)</title><rect x="526.2" y="1893" width="0.2" height="15.0" fill="rgb(237,58,44)" rx="2" ry="2" />
<text  x="529.18" y="1903.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.06%)</title><rect x="27.9" y="1989" width="0.8" height="15.0" fill="rgb(234,69,11)" rx="2" ry="2" />
<text  x="30.93" y="1999.5" ></text>
</g>
<g >
<title>__schedule (5 samples, 0.02%)</title><rect x="132.6" y="1845" width="0.2" height="15.0" fill="rgb(241,91,8)" rx="2" ry="2" />
<text  x="135.55" y="1855.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find (23 samples, 0.11%)</title><rect x="1143.6" y="2053" width="1.4" height="15.0" fill="rgb(223,35,8)" rx="2" ry="2" />
<text  x="1146.64" y="2063.5" ></text>
</g>
<g >
<title>fasttext::Vector::zero (11 samples, 0.05%)</title><rect x="329.8" y="1973" width="0.7" height="15.0" fill="rgb(252,63,27)" rx="2" ry="2" />
<text  x="332.84" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (594 samples, 2.95%)</title><rect x="54.3" y="1861" width="34.8" height="15.0" fill="rgb(230,204,10)" rx="2" ry="2" />
<text  x="57.31" y="1871.5" >[u..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (2 samples, 0.01%)</title><rect x="216.3" y="1797" width="0.1" height="15.0" fill="rgb(209,44,54)" rx="2" ry="2" />
<text  x="219.31" y="1807.5" ></text>
</g>
<g >
<title>alloc_pages_vma (4 samples, 0.02%)</title><rect x="661.0" y="1781" width="0.3" height="15.0" fill="rgb(217,43,18)" rx="2" ry="2" />
<text  x="664.04" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.03%)</title><rect x="1186.5" y="1349" width="0.4" height="15.0" fill="rgb(219,63,31)" rx="2" ry="2" />
<text  x="1189.48" y="1359.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (6 samples, 0.03%)</title><rect x="330.1" y="1957" width="0.4" height="15.0" fill="rgb(250,21,20)" rx="2" ry="2" />
<text  x="333.13" y="1967.5" ></text>
</g>
<g >
<title>operator delete (7 samples, 0.03%)</title><rect x="137.6" y="1557" width="0.4" height="15.0" fill="rgb(215,191,51)" rx="2" ry="2" />
<text  x="140.59" y="1567.5" ></text>
</g>
<g >
<title>find_next_bit (2 samples, 0.01%)</title><rect x="946.9" y="1893" width="0.2" height="15.0" fill="rgb(235,80,24)" rx="2" ry="2" />
<text  x="949.94" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (97 samples, 0.48%)</title><rect x="155.1" y="1813" width="5.7" height="15.0" fill="rgb(248,7,37)" rx="2" ry="2" />
<text  x="158.12" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (4 samples, 0.02%)</title><rect x="187.5" y="1813" width="0.2" height="15.0" fill="rgb(229,55,28)" rx="2" ry="2" />
<text  x="190.47" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.03%)</title><rect x="1186.5" y="869" width="0.4" height="15.0" fill="rgb(254,201,10)" rx="2" ry="2" />
<text  x="1189.48" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (88 samples, 0.44%)</title><rect x="145.0" y="1685" width="5.1" height="15.0" fill="rgb(243,213,23)" rx="2" ry="2" />
<text  x="147.98" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (99 samples, 0.49%)</title><rect x="195.3" y="1685" width="5.8" height="15.0" fill="rgb(229,83,9)" rx="2" ry="2" />
<text  x="198.27" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (96 samples, 0.48%)</title><rect x="133.9" y="1653" width="5.6" height="15.0" fill="rgb(224,160,5)" rx="2" ry="2" />
<text  x="136.90" y="1663.5" ></text>
</g>
<g >
<title>fasttext::DenseMatrix::dotRow (4 samples, 0.02%)</title><rect x="769.8" y="2037" width="0.2" height="15.0" fill="rgb(219,109,12)" rx="2" ry="2" />
<text  x="772.76" y="2047.5" ></text>
</g>
<g >
<title>__interceptor___strxfrm_l (4 samples, 0.02%)</title><rect x="1002.1" y="2053" width="0.2" height="15.0" fill="rgb(219,187,52)" rx="2" ry="2" />
<text  x="1005.10" y="2063.5" ></text>
</g>
<g >
<title>handle_mm_fault (8 samples, 0.04%)</title><rect x="732.3" y="1829" width="0.4" height="15.0" fill="rgb(218,84,14)" rx="2" ry="2" />
<text  x="735.25" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="1187.1" y="1189" width="0.1" height="15.0" fill="rgb(217,199,1)" rx="2" ry="2" />
<text  x="1190.07" y="1199.5" ></text>
</g>
<g >
<title>__asan::AsanThread::stack_top (4 samples, 0.02%)</title><rect x="596.9" y="1877" width="0.3" height="15.0" fill="rgb(245,90,53)" rx="2" ry="2" />
<text  x="599.92" y="1887.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (2 samples, 0.01%)</title><rect x="82.1" y="1397" width="0.1" height="15.0" fill="rgb(226,49,4)" rx="2" ry="2" />
<text  x="85.09" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.03%)</title><rect x="1186.5" y="1109" width="0.4" height="15.0" fill="rgb(249,57,7)" rx="2" ry="2" />
<text  x="1189.48" y="1119.5" ></text>
</g>
<g >
<title>[unknown] (356 samples, 1.77%)</title><rect x="54.4" y="661" width="20.8" height="15.0" fill="rgb(212,97,36)" rx="2" ry="2" />
<text  x="57.37" y="671.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (2 samples, 0.01%)</title><rect x="1189.2" y="2037" width="0.2" height="15.0" fill="rgb(215,113,9)" rx="2" ry="2" />
<text  x="1192.24" y="2047.5" ></text>
</g>
<g >
<title>TNewsCluster::SortByWeights (6 samples, 0.03%)</title><rect x="330.8" y="1989" width="0.4" height="15.0" fill="rgb(239,4,19)" rx="2" ry="2" />
<text  x="333.83" y="1999.5" ></text>
</g>
<g >
<title>__asan::AsanTSDGet (4 samples, 0.02%)</title><rect x="147.2" y="1605" width="0.2" height="15.0" fill="rgb(232,47,32)" rx="2" ry="2" />
<text  x="150.21" y="1615.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (7 samples, 0.03%)</title><rect x="1097.9" y="1861" width="0.4" height="15.0" fill="rgb(208,216,32)" rx="2" ry="2" />
<text  x="1100.92" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.01%)</title><rect x="188.5" y="1541" width="0.2" height="15.0" fill="rgb(233,138,8)" rx="2" ry="2" />
<text  x="191.53" y="1551.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (53 samples, 0.26%)</title><rect x="742.6" y="1877" width="3.1" height="15.0" fill="rgb(247,5,34)" rx="2" ry="2" />
<text  x="745.63" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="161.9" y="1349" width="0.2" height="15.0" fill="rgb(219,94,12)" rx="2" ry="2" />
<text  x="164.92" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="188.5" y="1525" width="0.2" height="15.0" fill="rgb(210,126,46)" rx="2" ry="2" />
<text  x="191.53" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="1187.1" y="1109" width="0.1" height="15.0" fill="rgb(219,127,49)" rx="2" ry="2" />
<text  x="1190.07" y="1119.5" ></text>
</g>
<g >
<title>__do_munmap (2 samples, 0.01%)</title><rect x="82.1" y="1365" width="0.1" height="15.0" fill="rgb(231,95,42)" rx="2" ry="2" />
<text  x="85.09" y="1375.5" ></text>
</g>
<g >
<title>do_group_exit (6 samples, 0.03%)</title><rect x="1099.9" y="2005" width="0.4" height="15.0" fill="rgb(254,134,51)" rx="2" ry="2" />
<text  x="1102.92" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.3" y="1029" width="0.4" height="15.0" fill="rgb(248,129,52)" rx="2" ry="2" />
<text  x="1190.30" y="1039.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (4 samples, 0.02%)</title><rect x="208.1" y="1637" width="0.2" height="15.0" fill="rgb(219,104,38)" rx="2" ry="2" />
<text  x="211.10" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.01%)</title><rect x="1187.1" y="837" width="0.1" height="15.0" fill="rgb(229,14,16)" rx="2" ry="2" />
<text  x="1190.07" y="847.5" ></text>
</g>
<g >
<title>std::locale::~locale (5 samples, 0.02%)</title><rect x="519.7" y="1973" width="0.3" height="15.0" fill="rgb(222,224,24)" rx="2" ry="2" />
<text  x="522.67" y="1983.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (6 samples, 0.03%)</title><rect x="203.9" y="1605" width="0.3" height="15.0" fill="rgb(249,56,37)" rx="2" ry="2" />
<text  x="206.88" y="1615.5" ></text>
</g>
<g >
<title>__vfs_read (3 samples, 0.01%)</title><rect x="1108.4" y="1941" width="0.2" height="15.0" fill="rgb(218,72,36)" rx="2" ry="2" />
<text  x="1111.41" y="1951.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2 samples, 0.01%)</title><rect x="943.5" y="1957" width="0.2" height="15.0" fill="rgb(237,166,13)" rx="2" ry="2" />
<text  x="946.54" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1186.9" y="1989" width="0.3" height="15.0" fill="rgb(254,206,30)" rx="2" ry="2" />
<text  x="1189.89" y="1999.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::readWord (6 samples, 0.03%)</title><rect x="543.5" y="1925" width="0.3" height="15.0" fill="rgb(234,64,47)" rx="2" ry="2" />
<text  x="546.47" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (100 samples, 0.50%)</title><rect x="195.2" y="1701" width="5.9" height="15.0" fill="rgb(213,202,3)" rx="2" ry="2" />
<text  x="198.21" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (347 samples, 1.72%)</title><rect x="54.4" y="229" width="20.3" height="15.0" fill="rgb(209,38,40)" rx="2" ry="2" />
<text  x="57.37" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.3" y="1461" width="0.4" height="15.0" fill="rgb(248,83,31)" rx="2" ry="2" />
<text  x="1190.30" y="1471.5" ></text>
</g>
<g >
<title>RunFasttextClf (243 samples, 1.21%)</title><rect x="529.6" y="1957" width="14.3" height="15.0" fill="rgb(207,216,44)" rx="2" ry="2" />
<text  x="532.64" y="1967.5" ></text>
</g>
<g >
<title>onmt::unicode::is_separator (4 samples, 0.02%)</title><rect x="738.8" y="1893" width="0.2" height="15.0" fill="rgb(218,57,48)" rx="2" ry="2" />
<text  x="741.76" y="1903.5" ></text>
</g>
<g >
<title>mem_cgroup_throttle_swaprate (2 samples, 0.01%)</title><rect x="53.5" y="1893" width="0.1" height="15.0" fill="rgb(238,72,10)" rx="2" ry="2" />
<text  x="56.49" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (2 samples, 0.01%)</title><rect x="205.7" y="1653" width="0.1" height="15.0" fill="rgb(228,222,15)" rx="2" ry="2" />
<text  x="208.70" y="1663.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.01%)</title><rect x="150.5" y="1669" width="0.1" height="15.0" fill="rgb(216,203,17)" rx="2" ry="2" />
<text  x="153.49" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (356 samples, 1.77%)</title><rect x="54.4" y="709" width="20.8" height="15.0" fill="rgb(237,156,20)" rx="2" ry="2" />
<text  x="57.37" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.3" y="645" width="0.4" height="15.0" fill="rgb(251,60,9)" rx="2" ry="2" />
<text  x="1190.30" y="655.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (3 samples, 0.01%)</title><rect x="80.3" y="1349" width="0.1" height="15.0" fill="rgb(242,102,48)" rx="2" ry="2" />
<text  x="83.27" y="1359.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (29 samples, 0.14%)</title><rect x="70.3" y="37" width="1.7" height="15.0" fill="rgb(210,104,40)" rx="2" ry="2" />
<text  x="73.31" y="47.5" ></text>
</g>
<g >
<title>__asan::AsanThread::stack_top (17 samples, 0.08%)</title><rect x="1153.7" y="2037" width="1.0" height="15.0" fill="rgb(238,194,38)" rx="2" ry="2" />
<text  x="1156.72" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (99 samples, 0.49%)</title><rect x="195.3" y="1669" width="5.8" height="15.0" fill="rgb(235,0,30)" rx="2" ry="2" />
<text  x="198.27" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (2 samples, 0.01%)</title><rect x="160.8" y="1765" width="0.1" height="15.0" fill="rgb(215,47,0)" rx="2" ry="2" />
<text  x="163.80" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (482 samples, 2.39%)</title><rect x="133.4" y="1909" width="28.2" height="15.0" fill="rgb(223,206,13)" rx="2" ry="2" />
<text  x="136.37" y="1919.5" >s..</text>
</g>
<g >
<title>alloc_pages_vma (4 samples, 0.02%)</title><rect x="683.9" y="1765" width="0.2" height="15.0" fill="rgb(229,166,38)" rx="2" ry="2" />
<text  x="686.90" y="1775.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::Unwind (3 samples, 0.01%)</title><rect x="142.8" y="1589" width="0.1" height="15.0" fill="rgb(232,35,8)" rx="2" ry="2" />
<text  x="145.75" y="1599.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (55 samples, 0.27%)</title><rect x="807.9" y="2005" width="3.2" height="15.0" fill="rgb(222,21,25)" rx="2" ry="2" />
<text  x="810.92" y="2015.5" ></text>
</g>
<g >
<title>arch_tlb_finish_mmu (2 samples, 0.01%)</title><rect x="82.4" y="1365" width="0.1" height="15.0" fill="rgb(219,178,11)" rx="2" ry="2" />
<text  x="85.38" y="1375.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (3 samples, 0.01%)</title><rect x="1100.1" y="1877" width="0.2" height="15.0" fill="rgb(221,95,5)" rx="2" ry="2" />
<text  x="1103.09" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.04%)</title><rect x="1186.4" y="1861" width="0.5" height="15.0" fill="rgb(219,15,21)" rx="2" ry="2" />
<text  x="1189.42" y="1871.5" ></text>
</g>
<g >
<title>nlohmann::operator&gt;&gt; (138 samples, 0.69%)</title><rect x="123.9" y="1989" width="8.1" height="15.0" fill="rgb(253,136,14)" rx="2" ry="2" />
<text  x="126.94" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1187.3" y="565" width="0.4" height="15.0" fill="rgb(211,199,36)" rx="2" ry="2" />
<text  x="1190.30" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (4 samples, 0.02%)</title><rect x="161.3" y="1829" width="0.2" height="15.0" fill="rgb(246,59,20)" rx="2" ry="2" />
<text  x="164.27" y="1839.5" ></text>
</g>
<g >
<title>finish_task_switch (5 samples, 0.02%)</title><rect x="132.6" y="1829" width="0.2" height="15.0" fill="rgb(213,171,39)" rx="2" ry="2" />
<text  x="135.55" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (348 samples, 1.73%)</title><rect x="54.4" y="389" width="20.4" height="15.0" fill="rgb(227,38,16)" rx="2" ry="2" />
<text  x="57.37" y="399.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (64 samples, 0.32%)</title><rect x="995.5" y="2053" width="3.7" height="15.0" fill="rgb(216,8,14)" rx="2" ry="2" />
<text  x="998.47" y="2063.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt; &gt;::_M_manager (2 samples, 0.01%)</title><rect x="162.5" y="1621" width="0.1" height="15.0" fill="rgb(229,140,29)" rx="2" ry="2" />
<text  x="165.50" y="1631.5" ></text>
</g>
<g >
<title>std::operator&gt;&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (17 samples, 0.08%)</title><rect x="815.5" y="2005" width="1.0" height="15.0" fill="rgb(219,229,3)" rx="2" ry="2" />
<text  x="818.48" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1187.3" y="1093" width="0.4" height="15.0" fill="rgb(211,137,12)" rx="2" ry="2" />
<text  x="1190.30" y="1103.5" ></text>
</g>
<g >
<title>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::dump (4 samples, 0.02%)</title><rect x="521.4" y="1941" width="0.2" height="15.0" fill="rgb(205,129,9)" rx="2" ry="2" />
<text  x="524.37" y="1951.5" ></text>
</g>
<g >
<title>do_syscall_64 (3 samples, 0.01%)</title><rect x="82.3" y="1429" width="0.2" height="15.0" fill="rgb(210,121,5)" rx="2" ry="2" />
<text  x="85.33" y="1439.5" ></text>
</g>
<g >
<title>__asan_memset (6 samples, 0.03%)</title><rect x="584.4" y="1893" width="0.3" height="15.0" fill="rgb(223,193,44)" rx="2" ry="2" />
<text  x="587.38" y="1903.5" ></text>
</g>
<g >
<title>new_sync_read (3 samples, 0.01%)</title><rect x="1108.4" y="1925" width="0.2" height="15.0" fill="rgb(209,188,36)" rx="2" ry="2" />
<text  x="1111.41" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.3" y="1173" width="0.4" height="15.0" fill="rgb(212,61,51)" rx="2" ry="2" />
<text  x="1190.30" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="188.5" y="1573" width="0.2" height="15.0" fill="rgb(223,4,2)" rx="2" ry="2" />
<text  x="191.53" y="1583.5" ></text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.01%)</title><rect x="152.8" y="1637" width="0.2" height="15.0" fill="rgb(206,196,49)" rx="2" ry="2" />
<text  x="155.83" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1187.2" y="1829" width="0.5" height="15.0" fill="rgb(211,65,26)" rx="2" ry="2" />
<text  x="1190.25" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.01%)</title><rect x="217.5" y="1589" width="0.2" height="15.0" fill="rgb(235,84,30)" rx="2" ry="2" />
<text  x="220.48" y="1599.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.03%)</title><rect x="132.5" y="1957" width="0.4" height="15.0" fill="rgb(220,124,36)" rx="2" ry="2" />
<text  x="135.50" y="1967.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::computeSubwords (26 samples, 0.13%)</title><rect x="324.7" y="1941" width="1.6" height="15.0" fill="rgb(217,214,7)" rx="2" ry="2" />
<text  x="327.74" y="1951.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (288 samples, 1.43%)</title><rect x="10.1" y="2053" width="16.8" height="15.0" fill="rgb(254,182,36)" rx="2" ry="2" />
<text  x="13.06" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="217.5" y="1573" width="0.2" height="15.0" fill="rgb(233,137,5)" rx="2" ry="2" />
<text  x="220.48" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.03%)</title><rect x="1186.5" y="581" width="0.4" height="15.0" fill="rgb(252,74,33)" rx="2" ry="2" />
<text  x="1189.48" y="591.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (4 samples, 0.02%)</title><rect x="186.9" y="1669" width="0.3" height="15.0" fill="rgb(227,200,35)" rx="2" ry="2" />
<text  x="189.94" y="1679.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (5 samples, 0.02%)</title><rect x="167.5" y="1573" width="0.3" height="15.0" fill="rgb(241,10,33)" rx="2" ry="2" />
<text  x="170.49" y="1583.5" ></text>
</g>
<g >
<title>on_each_cpu_mask (17 samples, 0.08%)</title><rect x="947.2" y="1861" width="1.0" height="15.0" fill="rgb(227,140,18)" rx="2" ry="2" />
<text  x="950.18" y="1871.5" ></text>
</g>
<g >
<title>on_each_cpu_mask (2 samples, 0.01%)</title><rect x="79.2" y="1077" width="0.1" height="15.0" fill="rgb(226,106,21)" rx="2" ry="2" />
<text  x="82.16" y="1087.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (2 samples, 0.01%)</title><rect x="487.8" y="1925" width="0.2" height="15.0" fill="rgb(241,216,46)" rx="2" ry="2" />
<text  x="490.85" y="1935.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (51 samples, 0.25%)</title><rect x="141.3" y="1605" width="3.0" height="15.0" fill="rgb(239,227,5)" rx="2" ry="2" />
<text  x="144.29" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (86 samples, 0.43%)</title><rect x="145.1" y="1653" width="5.0" height="15.0" fill="rgb(227,28,41)" rx="2" ry="2" />
<text  x="148.10" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1186.9" y="1973" width="0.3" height="15.0" fill="rgb(241,13,18)" rx="2" ry="2" />
<text  x="1189.89" y="1983.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (65 samples, 0.32%)</title><rect x="968.2" y="2053" width="3.8" height="15.0" fill="rgb(237,33,45)" rx="2" ry="2" />
<text  x="971.16" y="2063.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (3 samples, 0.01%)</title><rect x="873.6" y="2005" width="0.2" height="15.0" fill="rgb(219,22,20)" rx="2" ry="2" />
<text  x="876.62" y="2015.5" ></text>
</g>
<g >
<title>do_syscall_64 (3 samples, 0.01%)</title><rect x="1099.4" y="2021" width="0.2" height="15.0" fill="rgb(252,23,34)" rx="2" ry="2" />
<text  x="1102.39" y="2031.5" ></text>
</g>
<g >
<title>__lsan::DisabledInThisThread (16 samples, 0.08%)</title><rect x="1004.3" y="2053" width="1.0" height="15.0" fill="rgb(229,185,20)" rx="2" ry="2" />
<text  x="1007.32" y="2063.5" ></text>
</g>
<g >
<title>schedule (2 samples, 0.01%)</title><rect x="28.6" y="1941" width="0.1" height="15.0" fill="rgb(222,17,7)" rx="2" ry="2" />
<text  x="31.58" y="1951.5" ></text>
</g>
<g >
<title>memcpy (2 samples, 0.01%)</title><rect x="1122.7" y="2037" width="0.1" height="15.0" fill="rgb(250,215,9)" rx="2" ry="2" />
<text  x="1125.66" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (2 samples, 0.01%)</title><rect x="176.7" y="1701" width="0.1" height="15.0" fill="rgb(240,11,12)" rx="2" ry="2" />
<text  x="179.69" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (96 samples, 0.48%)</title><rect x="155.2" y="1733" width="5.6" height="15.0" fill="rgb(245,37,25)" rx="2" ry="2" />
<text  x="158.18" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.3" y="437" width="0.4" height="15.0" fill="rgb(215,219,8)" rx="2" ry="2" />
<text  x="1190.30" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.01%)</title><rect x="161.9" y="1317" width="0.2" height="15.0" fill="rgb(229,192,36)" rx="2" ry="2" />
<text  x="164.92" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="161.7" y="1941" width="0.4" height="15.0" fill="rgb(212,37,10)" rx="2" ry="2" />
<text  x="164.68" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (566 samples, 2.81%)</title><rect x="54.3" y="1749" width="33.2" height="15.0" fill="rgb(205,133,23)" rx="2" ry="2" />
<text  x="57.31" y="1759.5" >[u..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="188.6" y="1237" width="0.1" height="15.0" fill="rgb(227,60,36)" rx="2" ry="2" />
<text  x="191.59" y="1247.5" ></text>
</g>
<g >
<title>__dynamic_cast (6 samples, 0.03%)</title><rect x="192.9" y="1557" width="0.3" height="15.0" fill="rgb(253,45,33)" rx="2" ry="2" />
<text  x="195.86" y="1567.5" ></text>
</g>
<g >
<title>fasttext::HierarchicalSoftmaxLoss::dfs (3 samples, 0.01%)</title><rect x="575.4" y="1893" width="0.1" height="15.0" fill="rgb(250,179,17)" rx="2" ry="2" />
<text  x="578.35" y="1903.5" ></text>
</g>
<g >
<title>operator delete (7 samples, 0.03%)</title><rect x="153.4" y="1637" width="0.4" height="15.0" fill="rgb(216,65,8)" rx="2" ry="2" />
<text  x="156.36" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="188.5" y="1461" width="0.2" height="15.0" fill="rgb(224,105,32)" rx="2" ry="2" />
<text  x="191.53" y="1471.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="88.4" y="1781" width="0.1" height="15.0" fill="rgb(211,116,27)" rx="2" ry="2" />
<text  x="91.36" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1186.5" y="933" width="0.4" height="15.0" fill="rgb(219,58,41)" rx="2" ry="2" />
<text  x="1189.48" y="943.5" ></text>
</g>
<g >
<title>onmt::CaseModifier::type_to_char (2 samples, 0.01%)</title><rect x="579.2" y="1893" width="0.1" height="15.0" fill="rgb(223,90,38)" rx="2" ry="2" />
<text  x="582.16" y="1903.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (2 samples, 0.01%)</title><rect x="769.6" y="1861" width="0.2" height="15.0" fill="rgb(246,20,8)" rx="2" ry="2" />
<text  x="772.65" y="1871.5" ></text>
</g>
<g >
<title>__do_page_fault (23 samples, 0.11%)</title><rect x="502.6" y="1893" width="1.3" height="15.0" fill="rgb(226,184,30)" rx="2" ry="2" />
<text  x="505.56" y="1903.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="76.3" y="1125" width="0.2" height="15.0" fill="rgb(210,111,34)" rx="2" ry="2" />
<text  x="79.35" y="1135.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="79.3" y="1301" width="0.1" height="15.0" fill="rgb(239,54,26)" rx="2" ry="2" />
<text  x="82.28" y="1311.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (3 samples, 0.01%)</title><rect x="941.7" y="2037" width="0.1" height="15.0" fill="rgb(215,26,10)" rx="2" ry="2" />
<text  x="944.67" y="2047.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="144.5" y="1621" width="0.1" height="15.0" fill="rgb(227,53,13)" rx="2" ry="2" />
<text  x="147.51" y="1631.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (4 samples, 0.02%)</title><rect x="154.8" y="1733" width="0.3" height="15.0" fill="rgb(207,213,13)" rx="2" ry="2" />
<text  x="157.83" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.02%)</title><rect x="1187.0" y="1749" width="0.2" height="15.0" fill="rgb(254,131,29)" rx="2" ry="2" />
<text  x="1190.01" y="1759.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;TThreadPool::TThreadPool (19 samples, 0.09%)</title><rect x="27.6" y="2037" width="1.1" height="15.0" fill="rgb(243,33,23)" rx="2" ry="2" />
<text  x="30.58" y="2047.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (2 samples, 0.01%)</title><rect x="402.5" y="1941" width="0.1" height="15.0" fill="rgb(246,167,46)" rx="2" ry="2" />
<text  x="405.51" y="1951.5" ></text>
</g>
<g >
<title>__asan_memcpy (3 samples, 0.01%)</title><rect x="208.3" y="1637" width="0.2" height="15.0" fill="rgb(222,30,41)" rx="2" ry="2" />
<text  x="211.34" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="1187.1" y="245" width="0.1" height="15.0" fill="rgb(238,202,29)" rx="2" ry="2" />
<text  x="1190.07" y="255.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (3 samples, 0.01%)</title><rect x="77.9" y="1221" width="0.2" height="15.0" fill="rgb(251,66,24)" rx="2" ry="2" />
<text  x="80.93" y="1231.5" ></text>
</g>
<g >
<title>__sanitizer::StackTrace::GetCurrentPc (2 samples, 0.01%)</title><rect x="624.8" y="1845" width="0.1" height="15.0" fill="rgb(251,143,33)" rx="2" ry="2" />
<text  x="627.76" y="1855.5" ></text>
</g>
<g >
<title>smp_call_function_many (17 samples, 0.08%)</title><rect x="947.2" y="1845" width="1.0" height="15.0" fill="rgb(236,219,5)" rx="2" ry="2" />
<text  x="950.18" y="1855.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (2 samples, 0.01%)</title><rect x="766.4" y="1925" width="0.1" height="15.0" fill="rgb(208,110,18)" rx="2" ry="2" />
<text  x="769.37" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (178 samples, 0.88%)</title><rect x="162.3" y="1749" width="10.4" height="15.0" fill="rgb(227,34,36)" rx="2" ry="2" />
<text  x="165.27" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.01%)</title><rect x="1187.1" y="597" width="0.1" height="15.0" fill="rgb(212,94,31)" rx="2" ry="2" />
<text  x="1190.07" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="188.5" y="1653" width="0.2" height="15.0" fill="rgb(244,62,34)" rx="2" ry="2" />
<text  x="191.53" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (32 samples, 0.16%)</title><rect x="874.1" y="2021" width="1.9" height="15.0" fill="rgb(214,75,31)" rx="2" ry="2" />
<text  x="877.15" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="217.5" y="1765" width="0.2" height="15.0" fill="rgb(235,19,37)" rx="2" ry="2" />
<text  x="220.48" y="1775.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (38 samples, 0.19%)</title><rect x="682.4" y="1861" width="2.3" height="15.0" fill="rgb(239,80,42)" rx="2" ry="2" />
<text  x="685.44" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.01%)</title><rect x="217.5" y="1445" width="0.2" height="15.0" fill="rgb(225,126,14)" rx="2" ry="2" />
<text  x="220.48" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (449 samples, 2.23%)</title><rect x="189.7" y="1877" width="26.3" height="15.0" fill="rgb(216,131,30)" rx="2" ry="2" />
<text  x="192.70" y="1887.5" >s..</text>
</g>
<g >
<title>__vm_munmap (4 samples, 0.02%)</title><rect x="79.7" y="1253" width="0.3" height="15.0" fill="rgb(219,44,33)" rx="2" ry="2" />
<text  x="82.75" y="1263.5" ></text>
</g>
<g >
<title>do_page_fault (10 samples, 0.05%)</title><rect x="765.9" y="2005" width="0.6" height="15.0" fill="rgb(213,165,52)" rx="2" ry="2" />
<text  x="768.90" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1186.5" y="1029" width="0.4" height="15.0" fill="rgb(226,159,16)" rx="2" ry="2" />
<text  x="1189.48" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.03%)</title><rect x="1187.2" y="1813" width="0.5" height="15.0" fill="rgb(207,103,51)" rx="2" ry="2" />
<text  x="1190.25" y="1823.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (2 samples, 0.01%)</title><rect x="661.3" y="1765" width="0.1" height="15.0" fill="rgb(245,123,25)" rx="2" ry="2" />
<text  x="664.28" y="1775.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (44 samples, 0.22%)</title><rect x="152.0" y="1653" width="2.5" height="15.0" fill="rgb(217,215,54)" rx="2" ry="2" />
<text  x="154.95" y="1663.5" ></text>
</g>
<g >
<title>std::vector&lt;TDocument, std::allocator&lt;TDocument&gt; &gt;::_M_realloc_insert&lt;TDocument const&amp;&gt; (2 samples, 0.01%)</title><rect x="523.4" y="2005" width="0.1" height="15.0" fill="rgb(225,69,29)" rx="2" ry="2" />
<text  x="526.37" y="2015.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (3 samples, 0.01%)</title><rect x="81.7" y="1445" width="0.2" height="15.0" fill="rgb(211,176,8)" rx="2" ry="2" />
<text  x="84.74" y="1455.5" ></text>
</g>
<g >
<title>do_syscall_64 (13 samples, 0.06%)</title><rect x="27.9" y="1973" width="0.8" height="15.0" fill="rgb(254,186,25)" rx="2" ry="2" />
<text  x="30.93" y="1983.5" ></text>
</g>
<g >
<title>__asan::Allocator::Deallocate (2 samples, 0.01%)</title><rect x="184.1" y="1653" width="0.1" height="15.0" fill="rgb(247,120,26)" rx="2" ry="2" />
<text  x="187.07" y="1663.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (8 samples, 0.04%)</title><rect x="133.4" y="1669" width="0.4" height="15.0" fill="rgb(209,229,27)" rx="2" ry="2" />
<text  x="136.37" y="1679.5" ></text>
</g>
<g >
<title>__sanitizer::internal_memmove (7 samples, 0.03%)</title><rect x="1189.4" y="2037" width="0.4" height="15.0" fill="rgb(246,114,50)" rx="2" ry="2" />
<text  x="1192.36" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1186.5" y="1525" width="0.4" height="15.0" fill="rgb(219,152,24)" rx="2" ry="2" />
<text  x="1189.48" y="1535.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="88.4" y="1797" width="0.1" height="15.0" fill="rgb(237,219,5)" rx="2" ry="2" />
<text  x="91.36" y="1807.5" ></text>
</g>
<g >
<title>__sanitizer::BlockingMutex::Unlock (9 samples, 0.04%)</title><rect x="69.8" y="37" width="0.5" height="15.0" fill="rgb(250,172,19)" rx="2" ry="2" />
<text  x="72.78" y="47.5" ></text>
</g>
<g >
<title>__handle_mm_fault (7 samples, 0.03%)</title><rect x="732.3" y="1813" width="0.4" height="15.0" fill="rgb(213,112,11)" rx="2" ry="2" />
<text  x="735.25" y="1823.5" ></text>
</g>
<g >
<title>Eigen::internal::gebp_kernel&lt;float, float, long, Eigen::internal::blas_data_mapper&lt;float, long, 0, 0, 1&gt;, 8, 4, false, false&gt;::operator (135 samples, 0.67%)</title><rect x="503.9" y="1909" width="7.9" height="15.0" fill="rgb(246,112,13)" rx="2" ry="2" />
<text  x="506.91" y="1919.5" ></text>
</g>
<g >
<title>__dynamic_cast (5 samples, 0.02%)</title><rect x="155.6" y="1701" width="0.3" height="15.0" fill="rgb(206,40,32)" rx="2" ry="2" />
<text  x="158.65" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.3" y="1397" width="0.4" height="15.0" fill="rgb(227,38,5)" rx="2" ry="2" />
<text  x="1190.30" y="1407.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (3 samples, 0.01%)</title><rect x="877.2" y="2021" width="0.2" height="15.0" fill="rgb(254,205,7)" rx="2" ry="2" />
<text  x="880.20" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.01%)</title><rect x="1187.1" y="645" width="0.1" height="15.0" fill="rgb(252,16,23)" rx="2" ry="2" />
<text  x="1190.07" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_expression_term&lt;false, false&gt; (2 samples, 0.01%)</title><rect x="210.0" y="1685" width="0.2" height="15.0" fill="rgb(251,73,18)" rx="2" ry="2" />
<text  x="213.04" y="1695.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (4 samples, 0.02%)</title><rect x="53.1" y="1893" width="0.3" height="15.0" fill="rgb(230,177,23)" rx="2" ry="2" />
<text  x="56.14" y="1903.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::basic_json (4 samples, 0.02%)</title><rect x="522.6" y="1973" width="0.2" height="15.0" fill="rgb(235,204,35)" rx="2" ry="2" />
<text  x="525.61" y="1983.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (21 samples, 0.10%)</title><rect x="489.4" y="1925" width="1.3" height="15.0" fill="rgb(253,115,32)" rx="2" ry="2" />
<text  x="492.43" y="1935.5" ></text>
</g>
<g >
<title>__dynamic_cast (6 samples, 0.03%)</title><rect x="185.2" y="1653" width="0.3" height="15.0" fill="rgb(206,128,2)" rx="2" ry="2" />
<text  x="188.19" y="1663.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::create&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt; const&amp;&gt; (4 samples, 0.02%)</title><rect x="522.6" y="1813" width="0.2" height="15.0" fill="rgb(252,174,21)" rx="2" ry="2" />
<text  x="525.61" y="1823.5" ></text>
</g>
<g >
<title>[libm-2.27.so] (4 samples, 0.02%)</title><rect x="26.9" y="2053" width="0.3" height="15.0" fill="rgb(251,52,36)" rx="2" ry="2" />
<text  x="29.94" y="2063.5" ></text>
</g>
<g >
<title>onmt::Tokenizer::tokenize (3 samples, 0.01%)</title><rect x="811.2" y="2037" width="0.2" height="15.0" fill="rgb(239,15,3)" rx="2" ry="2" />
<text  x="814.20" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="161.9" y="1621" width="0.2" height="15.0" fill="rgb(206,218,22)" rx="2" ry="2" />
<text  x="164.86" y="1631.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="88.2" y="1813" width="0.2" height="15.0" fill="rgb(237,176,3)" rx="2" ry="2" />
<text  x="91.24" y="1823.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.02%)</title><rect x="193.8" y="1557" width="0.2" height="15.0" fill="rgb(246,154,23)" rx="2" ry="2" />
<text  x="196.80" y="1567.5" ></text>
</g>
<g >
<title>__do_page_fault (12 samples, 0.06%)</title><rect x="732.0" y="1845" width="0.7" height="15.0" fill="rgb(217,205,52)" rx="2" ry="2" />
<text  x="735.02" y="1855.5" ></text>
</g>
<g >
<title>generic_exec_single (4 samples, 0.02%)</title><rect x="1098.0" y="1749" width="0.2" height="15.0" fill="rgb(215,48,12)" rx="2" ry="2" />
<text  x="1100.98" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="161.7" y="1909" width="0.4" height="15.0" fill="rgb(214,168,46)" rx="2" ry="2" />
<text  x="164.68" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.03%)</title><rect x="1187.2" y="1669" width="0.5" height="15.0" fill="rgb(232,12,52)" rx="2" ry="2" />
<text  x="1190.25" y="1679.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (5 samples, 0.02%)</title><rect x="42.1" y="2005" width="0.3" height="15.0" fill="rgb(247,52,12)" rx="2" ry="2" />
<text  x="45.06" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (5 samples, 0.02%)</title><rect x="181.7" y="1749" width="0.3" height="15.0" fill="rgb(252,78,17)" rx="2" ry="2" />
<text  x="184.67" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (14,305 samples, 71.05%)</title><rect x="41.8" y="2053" width="838.4" height="15.0" fill="rgb(237,27,1)" rx="2" ry="2" />
<text  x="44.77" y="2063.5" >[unknown]</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="1186.2" y="1989" width="0.2" height="15.0" fill="rgb(229,84,33)" rx="2" ry="2" />
<text  x="1189.25" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.01%)</title><rect x="1187.1" y="405" width="0.1" height="15.0" fill="rgb(242,124,53)" rx="2" ry="2" />
<text  x="1190.07" y="415.5" ></text>
</g>
<g >
<title>__do_page_fault (103 samples, 0.51%)</title><rect x="20.8" y="2005" width="6.0" height="15.0" fill="rgb(207,28,29)" rx="2" ry="2" />
<text  x="23.78" y="2015.5" ></text>
</g>
<g >
<title>__asan_memcpy (8 samples, 0.04%)</title><rect x="169.9" y="1573" width="0.5" height="15.0" fill="rgb(246,198,42)" rx="2" ry="2" />
<text  x="172.95" y="1583.5" ></text>
</g>
<g >
<title>[[vdso]] (8 samples, 0.04%)</title><rect x="122.2" y="2021" width="0.4" height="15.0" fill="rgb(242,20,16)" rx="2" ry="2" />
<text  x="125.18" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (2 samples, 0.01%)</title><rect x="139.6" y="1717" width="0.1" height="15.0" fill="rgb(219,194,49)" rx="2" ry="2" />
<text  x="142.59" y="1727.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.01%)</title><rect x="204.4" y="1605" width="0.1" height="15.0" fill="rgb(250,184,20)" rx="2" ry="2" />
<text  x="207.35" y="1615.5" ></text>
</g>
<g >
<title>__sanitizer_weak_hook_strcmp (3 samples, 0.01%)</title><rect x="40.7" y="2021" width="0.1" height="15.0" fill="rgb(236,194,36)" rx="2" ry="2" />
<text  x="43.65" y="2031.5" ></text>
</g>
<g >
<title>rwsem_wake (3 samples, 0.01%)</title><rect x="1099.0" y="1925" width="0.2" height="15.0" fill="rgb(221,217,52)" rx="2" ry="2" />
<text  x="1102.04" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1186.5" y="661" width="0.4" height="15.0" fill="rgb(205,36,40)" rx="2" ry="2" />
<text  x="1189.48" y="671.5" ></text>
</g>
<g >
<title>native_send_call_func_single_ipi (4 samples, 0.02%)</title><rect x="1098.0" y="1733" width="0.2" height="15.0" fill="rgb(229,65,7)" rx="2" ry="2" />
<text  x="1100.98" y="1743.5" ></text>
</g>
<g >
<title>__sanitizer::LargeMmapAllocator&lt;__asan::AsanMapUnmapCallback, __sanitizer::LargeMmapAllocatorPtrArrayDynamic&gt;::Allocate (11 samples, 0.05%)</title><rect x="1018.7" y="2053" width="0.6" height="15.0" fill="rgb(243,156,18)" rx="2" ry="2" />
<text  x="1021.68" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.01%)</title><rect x="1187.1" y="1509" width="0.1" height="15.0" fill="rgb(206,57,46)" rx="2" ry="2" />
<text  x="1190.07" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.3" y="309" width="0.4" height="15.0" fill="rgb(230,73,18)" rx="2" ry="2" />
<text  x="1190.30" y="319.5" ></text>
</g>
<g >
<title>do_page_fault (29 samples, 0.14%)</title><rect x="696.9" y="1829" width="1.7" height="15.0" fill="rgb(206,27,29)" rx="2" ry="2" />
<text  x="699.85" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1187.3" y="853" width="0.4" height="15.0" fill="rgb(208,42,50)" rx="2" ry="2" />
<text  x="1190.30" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.04%)</title><rect x="1186.4" y="1957" width="0.5" height="15.0" fill="rgb(208,71,54)" rx="2" ry="2" />
<text  x="1189.42" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.1" y="37" width="0.1" height="15.0" fill="rgb(206,28,22)" rx="2" ry="2" />
<text  x="1190.13" y="47.5" ></text>
</g>
<g >
<title>__asan::AsanTSDGet (3 samples, 0.01%)</title><rect x="152.4" y="1637" width="0.1" height="15.0" fill="rgb(243,209,43)" rx="2" ry="2" />
<text  x="155.36" y="1647.5" ></text>
</g>
<g >
<title>handle_mm_fault (6 samples, 0.03%)</title><rect x="766.1" y="1973" width="0.4" height="15.0" fill="rgb(233,13,47)" rx="2" ry="2" />
<text  x="769.13" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="1187.1" y="325" width="0.1" height="15.0" fill="rgb(206,46,52)" rx="2" ry="2" />
<text  x="1190.07" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (2 samples, 0.01%)</title><rect x="187.5" y="1797" width="0.1" height="15.0" fill="rgb(234,25,53)" rx="2" ry="2" />
<text  x="190.53" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (336 samples, 1.67%)</title><rect x="162.3" y="1797" width="19.7" height="15.0" fill="rgb(225,51,21)" rx="2" ry="2" />
<text  x="165.27" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (88 samples, 0.44%)</title><rect x="162.6" y="1621" width="5.2" height="15.0" fill="rgb(215,173,21)" rx="2" ry="2" />
<text  x="165.62" y="1631.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (2 samples, 0.01%)</title><rect x="144.2" y="1589" width="0.1" height="15.0" fill="rgb(240,83,33)" rx="2" ry="2" />
<text  x="147.16" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="188.5" y="1557" width="0.2" height="15.0" fill="rgb(211,211,27)" rx="2" ry="2" />
<text  x="191.53" y="1567.5" ></text>
</g>
<g >
<title>__asan::AsanTSDGet (4 samples, 0.02%)</title><rect x="610.8" y="1861" width="0.2" height="15.0" fill="rgb(226,73,19)" rx="2" ry="2" />
<text  x="613.75" y="1871.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (54 samples, 0.27%)</title><rect x="1117.7" y="2053" width="3.2" height="15.0" fill="rgb(215,27,38)" rx="2" ry="2" />
<text  x="1120.73" y="2063.5" ></text>
</g>
<g >
<title>__dynamic_cast (5 samples, 0.02%)</title><rect x="179.2" y="1621" width="0.3" height="15.0" fill="rgb(224,228,31)" rx="2" ry="2" />
<text  x="182.21" y="1631.5" ></text>
</g>
<g >
<title>__sanitizer::mem_is_zero (2 samples, 0.01%)</title><rect x="1189.8" y="2037" width="0.1" height="15.0" fill="rgb(211,124,44)" rx="2" ry="2" />
<text  x="1192.77" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (82 samples, 0.41%)</title><rect x="139.8" y="1637" width="4.8" height="15.0" fill="rgb(227,58,11)" rx="2" ry="2" />
<text  x="142.82" y="1647.5" ></text>
</g>
<g >
<title>std::packaged_task&lt;boost::optional&lt;TDocument&gt;  (2 samples, 0.01%)</title><rect x="27.8" y="2005" width="0.1" height="15.0" fill="rgb(248,46,8)" rx="2" ry="2" />
<text  x="30.76" y="2015.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="499.0" y="1957" width="0.2" height="15.0" fill="rgb(248,70,36)" rx="2" ry="2" />
<text  x="502.04" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (70 samples, 0.35%)</title><rect x="172.7" y="1717" width="4.1" height="15.0" fill="rgb(215,201,5)" rx="2" ry="2" />
<text  x="175.70" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (434 samples, 2.16%)</title><rect x="162.3" y="1829" width="25.4" height="15.0" fill="rgb(210,26,54)" rx="2" ry="2" />
<text  x="165.27" y="1839.5" >s..</text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (2 samples, 0.01%)</title><rect x="91.2" y="1973" width="0.2" height="15.0" fill="rgb(247,169,7)" rx="2" ry="2" />
<text  x="94.23" y="1983.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (2 samples, 0.01%)</title><rect x="89.0" y="1797" width="0.1" height="15.0" fill="rgb(213,206,41)" rx="2" ry="2" />
<text  x="92.01" y="1807.5" ></text>
</g>
<g >
<title>__handle_mm_fault (16 samples, 0.08%)</title><rect x="53.0" y="1957" width="1.0" height="15.0" fill="rgb(253,228,6)" rx="2" ry="2" />
<text  x="56.02" y="1967.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.02%)</title><rect x="199.5" y="1589" width="0.3" height="15.0" fill="rgb(206,180,36)" rx="2" ry="2" />
<text  x="202.55" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1186.5" y="1333" width="0.4" height="15.0" fill="rgb(232,135,14)" rx="2" ry="2" />
<text  x="1189.48" y="1343.5" ></text>
</g>
<g >
<title>[libm-2.27.so] (7 samples, 0.03%)</title><rect x="1100.6" y="2037" width="0.4" height="15.0" fill="rgb(205,23,4)" rx="2" ry="2" />
<text  x="1103.56" y="2047.5" ></text>
</g>
<g >
<title>__asan::asan_malloc (2 samples, 0.01%)</title><rect x="383.2" y="1925" width="0.1" height="15.0" fill="rgb(210,184,20)" rx="2" ry="2" />
<text  x="386.23" y="1935.5" ></text>
</g>
<g >
<title>__handle_mm_fault (2 samples, 0.01%)</title><rect x="1024.6" y="1973" width="0.1" height="15.0" fill="rgb(227,223,23)" rx="2" ry="2" />
<text  x="1027.60" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.01%)</title><rect x="1187.1" y="1317" width="0.1" height="15.0" fill="rgb(251,195,12)" rx="2" ry="2" />
<text  x="1190.07" y="1327.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::pushHash (2 samples, 0.01%)</title><rect x="574.6" y="1893" width="0.1" height="15.0" fill="rgb(247,130,32)" rx="2" ry="2" />
<text  x="577.59" y="1903.5" ></text>
</g>
<g >
<title>clear_page_erms (7 samples, 0.03%)</title><rect x="697.4" y="1733" width="0.4" height="15.0" fill="rgb(208,194,27)" rx="2" ry="2" />
<text  x="700.44" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (362 samples, 1.80%)</title><rect x="54.4" y="981" width="21.2" height="15.0" fill="rgb(224,134,20)" rx="2" ry="2" />
<text  x="57.37" y="991.5" ></text>
</g>
<g >
<title>handle_mm_fault (2 samples, 0.01%)</title><rect x="54.1" y="1957" width="0.2" height="15.0" fill="rgb(254,108,5)" rx="2" ry="2" />
<text  x="57.13" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (346 samples, 1.72%)</title><rect x="54.4" y="149" width="20.2" height="15.0" fill="rgb(246,22,45)" rx="2" ry="2" />
<text  x="57.37" y="159.5" ></text>
</g>
<g >
<title>__asan_memcpy (5 samples, 0.02%)</title><rect x="136.7" y="1557" width="0.2" height="15.0" fill="rgb(233,208,53)" rx="2" ry="2" />
<text  x="139.66" y="1567.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (5 samples, 0.02%)</title><rect x="172.1" y="1589" width="0.3" height="15.0" fill="rgb(253,151,4)" rx="2" ry="2" />
<text  x="175.12" y="1599.5" ></text>
</g>
<g >
<title>__interceptor_memcpy (4 samples, 0.02%)</title><rect x="1122.4" y="2037" width="0.3" height="15.0" fill="rgb(238,192,12)" rx="2" ry="2" />
<text  x="1125.42" y="2047.5" ></text>
</g>
<g >
<title>get_page_from_freelist (3 samples, 0.01%)</title><rect x="697.8" y="1733" width="0.2" height="15.0" fill="rgb(208,93,7)" rx="2" ry="2" />
<text  x="700.85" y="1743.5" ></text>
</g>
<g >
<title>__vm_munmap (2 samples, 0.01%)</title><rect x="79.2" y="1221" width="0.1" height="15.0" fill="rgb(211,144,29)" rx="2" ry="2" />
<text  x="82.16" y="1231.5" ></text>
</g>
<g >
<title>mem_cgroup_throttle_swaprate (6 samples, 0.03%)</title><rect x="25.4" y="1941" width="0.3" height="15.0" fill="rgb(232,71,15)" rx="2" ry="2" />
<text  x="28.36" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (610 samples, 3.03%)</title><rect x="54.3" y="1909" width="35.8" height="15.0" fill="rgb(242,84,38)" rx="2" ry="2" />
<text  x="57.31" y="1919.5" >[un..</text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.01%)</title><rect x="206.2" y="1669" width="0.1" height="15.0" fill="rgb(208,101,42)" rx="2" ry="2" />
<text  x="209.17" y="1679.5" ></text>
</g>
<g >
<title>__lru_cache_add (2 samples, 0.01%)</title><rect x="698.0" y="1749" width="0.1" height="15.0" fill="rgb(228,49,29)" rx="2" ry="2" />
<text  x="701.03" y="1759.5" ></text>
</g>
<g >
<title>native_send_call_func_single_ipi (14 samples, 0.07%)</title><rect x="947.4" y="1797" width="0.8" height="15.0" fill="rgb(226,99,45)" rx="2" ry="2" />
<text  x="950.35" y="1807.5" ></text>
</g>
<g >
<title>std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;, std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;::reserve (2 samples, 0.01%)</title><rect x="698.6" y="1861" width="0.1" height="15.0" fill="rgb(243,168,45)" rx="2" ry="2" />
<text  x="701.61" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (5 samples, 0.02%)</title><rect x="181.7" y="1781" width="0.3" height="15.0" fill="rgb(221,61,39)" rx="2" ry="2" />
<text  x="184.67" y="1791.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::Unwind (4 samples, 0.02%)</title><rect x="199.1" y="1589" width="0.2" height="15.0" fill="rgb(245,139,42)" rx="2" ry="2" />
<text  x="202.08" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="217.5" y="1269" width="0.2" height="15.0" fill="rgb(224,177,50)" rx="2" ry="2" />
<text  x="220.54" y="1279.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::basic_regex&lt;char const*&gt; (484 samples, 2.40%)</title><rect x="133.3" y="1957" width="28.3" height="15.0" fill="rgb(229,125,5)" rx="2" ry="2" />
<text  x="136.26" y="1967.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="161.7" y="1845" width="0.4" height="15.0" fill="rgb(231,12,13)" rx="2" ry="2" />
<text  x="164.68" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.01%)</title><rect x="1187.1" y="741" width="0.1" height="15.0" fill="rgb(207,120,27)" rx="2" ry="2" />
<text  x="1190.07" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.3" y="1109" width="0.4" height="15.0" fill="rgb(228,172,46)" rx="2" ry="2" />
<text  x="1190.30" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1186.9" y="1829" width="0.3" height="15.0" fill="rgb(216,66,25)" rx="2" ry="2" />
<text  x="1189.89" y="1839.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (9 samples, 0.04%)</title><rect x="540.2" y="1909" width="0.6" height="15.0" fill="rgb(223,102,47)" rx="2" ry="2" />
<text  x="543.25" y="1919.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (2 samples, 0.01%)</title><rect x="498.8" y="1941" width="0.1" height="15.0" fill="rgb(236,11,36)" rx="2" ry="2" />
<text  x="501.81" y="1951.5" ></text>
</g>
<g >
<title>__madvise (18 samples, 0.09%)</title><rect x="525.9" y="2037" width="1.1" height="15.0" fill="rgb(252,53,47)" rx="2" ry="2" />
<text  x="528.95" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="1187.1" y="1045" width="0.1" height="15.0" fill="rgb(233,30,11)" rx="2" ry="2" />
<text  x="1190.07" y="1055.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="215.7" y="1701" width="0.1" height="15.0" fill="rgb(222,172,23)" rx="2" ry="2" />
<text  x="218.66" y="1711.5" ></text>
</g>
<g >
<title>__pthread_getspecific (39 samples, 0.19%)</title><rect x="1172.0" y="2037" width="2.3" height="15.0" fill="rgb(227,131,54)" rx="2" ry="2" />
<text  x="1175.01" y="2047.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.01%)</title><rect x="204.9" y="1605" width="0.1" height="15.0" fill="rgb(219,119,21)" rx="2" ry="2" />
<text  x="207.88" y="1615.5" ></text>
</g>
<g >
<title>__asan::AsanTSDGet (14 samples, 0.07%)</title><rect x="115.5" y="2037" width="0.8" height="15.0" fill="rgb(241,15,25)" rx="2" ry="2" />
<text  x="118.50" y="2047.5" ></text>
</g>
<g >
<title>__sanitizer::mem_is_zero (6 samples, 0.03%)</title><rect x="1099.6" y="2053" width="0.3" height="15.0" fill="rgb(251,102,9)" rx="2" ry="2" />
<text  x="1102.56" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (586 samples, 2.91%)</title><rect x="54.3" y="1845" width="34.4" height="15.0" fill="rgb(243,41,41)" rx="2" ry="2" />
<text  x="57.31" y="1855.5" >[u..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="1187.1" y="1013" width="0.1" height="15.0" fill="rgb(231,2,50)" rx="2" ry="2" />
<text  x="1190.07" y="1023.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.25] (3 samples, 0.01%)</title><rect x="27.2" y="2037" width="0.1" height="15.0" fill="rgb(243,61,33)" rx="2" ry="2" />
<text  x="30.17" y="2047.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace@plt (2 samples, 0.01%)</title><rect x="757.6" y="1941" width="0.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="760.57" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (62 samples, 0.31%)</title><rect x="202.0" y="1637" width="3.6" height="15.0" fill="rgb(210,223,51)" rx="2" ry="2" />
<text  x="205.01" y="1647.5" ></text>
</g>
<g >
<title>alloc_pages_vma (17 samples, 0.08%)</title><rect x="944.4" y="1925" width="1.0" height="15.0" fill="rgb(215,163,48)" rx="2" ry="2" />
<text  x="947.36" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="188.5" y="1621" width="0.2" height="15.0" fill="rgb(222,66,25)" rx="2" ry="2" />
<text  x="191.53" y="1631.5" ></text>
</g>
<g >
<title>get_page_from_freelist (7 samples, 0.03%)</title><rect x="24.1" y="1925" width="0.4" height="15.0" fill="rgb(215,8,40)" rx="2" ry="2" />
<text  x="27.13" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1186.5" y="1509" width="0.4" height="15.0" fill="rgb(251,168,12)" rx="2" ry="2" />
<text  x="1189.48" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="188.4" y="1909" width="0.3" height="15.0" fill="rgb(253,61,10)" rx="2" ry="2" />
<text  x="191.35" y="1919.5" ></text>
</g>
<g >
<title>__lsan::ResetTagsCb (5 samples, 0.02%)</title><rect x="525.7" y="2037" width="0.2" height="15.0" fill="rgb(239,133,39)" rx="2" ry="2" />
<text  x="528.65" y="2047.5" ></text>
</g>
<g >
<title>__asan::GetMallocContextSize (2 samples, 0.01%)</title><rect x="147.6" y="1605" width="0.1" height="15.0" fill="rgb(235,190,19)" rx="2" ry="2" />
<text  x="150.56" y="1615.5" ></text>
</g>
<g >
<title>__dynamic_cast (7 samples, 0.03%)</title><rect x="164.0" y="1557" width="0.4" height="15.0" fill="rgb(239,223,34)" rx="2" ry="2" />
<text  x="166.97" y="1567.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (4 samples, 0.02%)</title><rect x="189.7" y="1669" width="0.2" height="15.0" fill="rgb(216,218,53)" rx="2" ry="2" />
<text  x="192.70" y="1679.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.01%)</title><rect x="205.0" y="1605" width="0.2" height="15.0" fill="rgb(247,190,34)" rx="2" ry="2" />
<text  x="208.00" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (348 samples, 1.73%)</title><rect x="54.4" y="277" width="20.4" height="15.0" fill="rgb(249,162,12)" rx="2" ry="2" />
<text  x="57.37" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="1187.1" y="85" width="0.1" height="15.0" fill="rgb(213,162,42)" rx="2" ry="2" />
<text  x="1190.07" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.01%)</title><rect x="1187.1" y="885" width="0.1" height="15.0" fill="rgb(229,71,22)" rx="2" ry="2" />
<text  x="1190.07" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (72 samples, 0.36%)</title><rect x="168.2" y="1605" width="4.2" height="15.0" fill="rgb(223,70,10)" rx="2" ry="2" />
<text  x="171.19" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1186.5" y="133" width="0.4" height="15.0" fill="rgb(222,126,48)" rx="2" ry="2" />
<text  x="1189.48" y="143.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (16 samples, 0.08%)</title><rect x="768.6" y="1957" width="0.9" height="15.0" fill="rgb(247,205,45)" rx="2" ry="2" />
<text  x="771.59" y="1967.5" ></text>
</g>
<g >
<title>__asan::AsanTSDGet (6 samples, 0.03%)</title><rect x="596.2" y="1877" width="0.4" height="15.0" fill="rgb(223,10,20)" rx="2" ry="2" />
<text  x="599.22" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (86 samples, 0.43%)</title><rect x="139.7" y="1653" width="5.0" height="15.0" fill="rgb(250,174,31)" rx="2" ry="2" />
<text  x="142.70" y="1663.5" ></text>
</g>
<g >
<title>__asan::AsanTSDGet (40 samples, 0.20%)</title><rect x="965.3" y="2053" width="2.3" height="15.0" fill="rgb(218,224,39)" rx="2" ry="2" />
<text  x="968.29" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1186.5" y="277" width="0.4" height="15.0" fill="rgb(247,186,22)" rx="2" ry="2" />
<text  x="1189.48" y="287.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::addSubwords (2 samples, 0.01%)</title><rect x="530.0" y="1925" width="0.2" height="15.0" fill="rgb(211,7,51)" rx="2" ry="2" />
<text  x="533.05" y="1935.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (3 samples, 0.01%)</title><rect x="587.9" y="1877" width="0.2" height="15.0" fill="rgb(254,110,19)" rx="2" ry="2" />
<text  x="590.90" y="1887.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (3 samples, 0.01%)</title><rect x="204.6" y="1605" width="0.2" height="15.0" fill="rgb(224,31,35)" rx="2" ry="2" />
<text  x="207.64" y="1615.5" ></text>
</g>
<g >
<title>alloc_pages_vma (3 samples, 0.01%)</title><rect x="732.4" y="1797" width="0.1" height="15.0" fill="rgb(211,150,26)" rx="2" ry="2" />
<text  x="735.37" y="1807.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&gt;::MaybeReleaseToOS (2 samples, 0.01%)</title><rect x="1022.8" y="2053" width="0.1" height="15.0" fill="rgb(224,8,24)" rx="2" ry="2" />
<text  x="1025.78" y="2063.5" ></text>
</g>
<g >
<title>__do_munmap (10 samples, 0.05%)</title><rect x="1097.8" y="1925" width="0.6" height="15.0" fill="rgb(206,184,49)" rx="2" ry="2" />
<text  x="1100.81" y="1935.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct (2 samples, 0.01%)</title><rect x="582.4" y="1893" width="0.2" height="15.0" fill="rgb(214,185,0)" rx="2" ry="2" />
<text  x="585.45" y="1903.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (7 samples, 0.03%)</title><rect x="698.1" y="1749" width="0.5" height="15.0" fill="rgb(230,167,51)" rx="2" ry="2" />
<text  x="701.14" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.03%)</title><rect x="1186.5" y="245" width="0.4" height="15.0" fill="rgb(219,49,40)" rx="2" ry="2" />
<text  x="1189.48" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.04%)</title><rect x="1186.4" y="1893" width="0.5" height="15.0" fill="rgb(232,12,31)" rx="2" ry="2" />
<text  x="1189.42" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3 samples, 0.01%)</title><rect x="161.1" y="1829" width="0.2" height="15.0" fill="rgb(240,130,27)" rx="2" ry="2" />
<text  x="164.10" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (583 samples, 2.90%)</title><rect x="54.3" y="1829" width="34.2" height="15.0" fill="rgb(224,88,23)" rx="2" ry="2" />
<text  x="57.31" y="1839.5" >[u..</text>
</g>
<g >
<title>clear_page_erms (2 samples, 0.01%)</title><rect x="656.8" y="1749" width="0.1" height="15.0" fill="rgb(236,27,6)" rx="2" ry="2" />
<text  x="659.76" y="1759.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (4 samples, 0.02%)</title><rect x="121.9" y="2037" width="0.3" height="15.0" fill="rgb(214,167,13)" rx="2" ry="2" />
<text  x="124.95" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (62 samples, 0.31%)</title><rect x="206.3" y="1669" width="3.7" height="15.0" fill="rgb(231,157,36)" rx="2" ry="2" />
<text  x="209.34" y="1679.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (2 samples, 0.01%)</title><rect x="209.6" y="1637" width="0.1" height="15.0" fill="rgb(225,14,53)" rx="2" ry="2" />
<text  x="212.63" y="1647.5" ></text>
</g>
<g >
<title>__dynamic_cast (49 samples, 0.24%)</title><rect x="999.2" y="2053" width="2.9" height="15.0" fill="rgb(215,125,22)" rx="2" ry="2" />
<text  x="1002.22" y="2063.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (3 samples, 0.01%)</title><rect x="84.3" y="1573" width="0.2" height="15.0" fill="rgb(226,75,45)" rx="2" ry="2" />
<text  x="87.32" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (73 samples, 0.36%)</title><rect x="205.9" y="1701" width="4.3" height="15.0" fill="rgb(246,162,29)" rx="2" ry="2" />
<text  x="208.93" y="1711.5" ></text>
</g>
<g >
<title>__asan::Allocator::Allocate (22 samples, 0.11%)</title><rect x="100.3" y="2037" width="1.2" height="15.0" fill="rgb(228,163,43)" rx="2" ry="2" />
<text  x="103.26" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt;,  (8 samples, 0.04%)</title><rect x="217.2" y="1957" width="0.5" height="15.0" fill="rgb(216,64,32)" rx="2" ry="2" />
<text  x="220.25" y="1967.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.01%)</title><rect x="193.6" y="1557" width="0.2" height="15.0" fill="rgb(219,209,39)" rx="2" ry="2" />
<text  x="196.63" y="1567.5" ></text>
</g>
<g >
<title>page_fault (2 samples, 0.01%)</title><rect x="1189.8" y="2021" width="0.1" height="15.0" fill="rgb(208,52,2)" rx="2" ry="2" />
<text  x="1192.77" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.01%)</title><rect x="188.5" y="1493" width="0.2" height="15.0" fill="rgb(205,110,26)" rx="2" ry="2" />
<text  x="191.53" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (4 samples, 0.02%)</title><rect x="216.7" y="1797" width="0.2" height="15.0" fill="rgb(207,191,9)" rx="2" ry="2" />
<text  x="219.66" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (347 samples, 1.72%)</title><rect x="54.4" y="213" width="20.3" height="15.0" fill="rgb(222,229,49)" rx="2" ry="2" />
<text  x="57.37" y="223.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotPut (2 samples, 0.01%)</title><rect x="166.0" y="1541" width="0.1" height="15.0" fill="rgb(246,7,13)" rx="2" ry="2" />
<text  x="168.96" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (563 samples, 2.80%)</title><rect x="54.3" y="1733" width="33.0" height="15.0" fill="rgb(229,186,25)" rx="2" ry="2" />
<text  x="57.31" y="1743.5" >[u..</text>
</g>
<g >
<title>std::__future_base::_Task_state&lt;std::_Bind&lt;Annotate (13 samples, 0.06%)</title><rect x="27.9" y="2021" width="0.8" height="15.0" fill="rgb(212,4,8)" rx="2" ry="2" />
<text  x="30.93" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="188.5" y="1509" width="0.2" height="15.0" fill="rgb(254,118,30)" rx="2" ry="2" />
<text  x="191.53" y="1519.5" ></text>
</g>
<g >
<title>clear_page_erms (14 samples, 0.07%)</title><rect x="23.3" y="1925" width="0.8" height="15.0" fill="rgb(237,105,46)" rx="2" ry="2" />
<text  x="26.30" y="1935.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::computeSubwords (460 samples, 2.28%)</title><rect x="547.6" y="1893" width="27.0" height="15.0" fill="rgb(233,57,37)" rx="2" ry="2" />
<text  x="550.63" y="1903.5" >f..</text>
</g>
<g >
<title>fasttext::Dictionary::computeSubwords (24 samples, 0.12%)</title><rect x="492.4" y="1925" width="1.4" height="15.0" fill="rgb(252,160,1)" rx="2" ry="2" />
<text  x="495.36" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (88 samples, 0.44%)</title><rect x="162.6" y="1685" width="5.2" height="15.0" fill="rgb(211,6,30)" rx="2" ry="2" />
<text  x="165.62" y="1695.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::load (29 samples, 0.14%)</title><rect x="874.1" y="1989" width="1.7" height="15.0" fill="rgb(251,179,46)" rx="2" ry="2" />
<text  x="877.15" y="1999.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (2 samples, 0.01%)</title><rect x="1119.8" y="2037" width="0.2" height="15.0" fill="rgb(232,193,40)" rx="2" ry="2" />
<text  x="1122.84" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="1187.1" y="1141" width="0.1" height="15.0" fill="rgb(213,100,21)" rx="2" ry="2" />
<text  x="1190.07" y="1151.5" ></text>
</g>
<g >
<title>onmt::unicode::get_lower (5 samples, 0.02%)</title><rect x="625.9" y="1877" width="0.3" height="15.0" fill="rgb(214,75,49)" rx="2" ry="2" />
<text  x="628.88" y="1887.5" ></text>
</g>
<g >
<title>std::future&lt;boost::optional&lt;TDocument&gt; &gt;::get (12 samples, 0.06%)</title><rect x="132.2" y="1989" width="0.7" height="15.0" fill="rgb(227,95,40)" rx="2" ry="2" />
<text  x="135.20" y="1999.5" ></text>
</g>
<g >
<title>__handle_mm_fault (7 samples, 0.03%)</title><rect x="656.7" y="1797" width="0.4" height="15.0" fill="rgb(230,209,39)" rx="2" ry="2" />
<text  x="659.71" y="1807.5" ></text>
</g>
<g >
<title>__asan::asan_memalign (3 samples, 0.01%)</title><rect x="624.1" y="1845" width="0.2" height="15.0" fill="rgb(208,132,33)" rx="2" ry="2" />
<text  x="627.12" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.3" y="1013" width="0.4" height="15.0" fill="rgb(224,220,30)" rx="2" ry="2" />
<text  x="1190.30" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.01%)</title><rect x="217.5" y="1493" width="0.2" height="15.0" fill="rgb(250,32,12)" rx="2" ry="2" />
<text  x="220.48" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="161.9" y="1589" width="0.2" height="15.0" fill="rgb(228,180,6)" rx="2" ry="2" />
<text  x="164.86" y="1599.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (6 samples, 0.03%)</title><rect x="1099.9" y="2021" width="0.4" height="15.0" fill="rgb(217,96,13)" rx="2" ry="2" />
<text  x="1102.92" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="188.5" y="1685" width="0.2" height="15.0" fill="rgb(208,222,18)" rx="2" ry="2" />
<text  x="191.53" y="1695.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (5 samples, 0.02%)</title><rect x="169.6" y="1573" width="0.3" height="15.0" fill="rgb(233,72,18)" rx="2" ry="2" />
<text  x="172.60" y="1583.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (7 samples, 0.03%)</title><rect x="92.3" y="2005" width="0.5" height="15.0" fill="rgb(208,104,52)" rx="2" ry="2" />
<text  x="95.35" y="2015.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (3 samples, 0.01%)</title><rect x="814.3" y="2005" width="0.2" height="15.0" fill="rgb(245,16,51)" rx="2" ry="2" />
<text  x="817.31" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="1187.1" y="149" width="0.1" height="15.0" fill="rgb(215,132,26)" rx="2" ry="2" />
<text  x="1190.07" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1186.9" y="1813" width="0.3" height="15.0" fill="rgb(217,104,17)" rx="2" ry="2" />
<text  x="1189.89" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (17 samples, 0.08%)</title><rect x="216.1" y="1893" width="1.0" height="15.0" fill="rgb(208,48,28)" rx="2" ry="2" />
<text  x="219.07" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.03%)</title><rect x="1186.5" y="149" width="0.4" height="15.0" fill="rgb(243,43,52)" rx="2" ry="2" />
<text  x="1189.48" y="159.5" ></text>
</g>
<g >
<title>std::istream::sentry::sentry (5 samples, 0.02%)</title><rect x="334.5" y="1989" width="0.3" height="15.0" fill="rgb(218,40,13)" rx="2" ry="2" />
<text  x="337.52" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (197 samples, 0.98%)</title><rect x="133.4" y="1765" width="11.5" height="15.0" fill="rgb(214,19,47)" rx="2" ry="2" />
<text  x="136.37" y="1775.5" ></text>
</g>
<g >
<title>operator new (11 samples, 0.05%)</title><rect x="159.3" y="1669" width="0.7" height="15.0" fill="rgb(218,193,35)" rx="2" ry="2" />
<text  x="162.34" y="1679.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="181.2" y="1637" width="0.1" height="15.0" fill="rgb(224,10,48)" rx="2" ry="2" />
<text  x="184.20" y="1647.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="79.2" y="1253" width="0.1" height="15.0" fill="rgb(214,176,19)" rx="2" ry="2" />
<text  x="82.16" y="1263.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (12 samples, 0.06%)</title><rect x="820.2" y="2005" width="0.7" height="15.0" fill="rgb(226,10,37)" rx="2" ry="2" />
<text  x="823.23" y="2015.5" ></text>
</g>
<g >
<title>__sanitizer::ThreadContextBase::OnJoined (5 samples, 0.02%)</title><rect x="768.2" y="2037" width="0.3" height="15.0" fill="rgb(216,212,22)" rx="2" ry="2" />
<text  x="771.24" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.01%)</title><rect x="1187.1" y="357" width="0.1" height="15.0" fill="rgb(237,122,48)" rx="2" ry="2" />
<text  x="1190.07" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.01%)</title><rect x="161.9" y="1365" width="0.2" height="15.0" fill="rgb(210,23,34)" rx="2" ry="2" />
<text  x="164.92" y="1375.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::get_case (2 samples, 0.01%)</title><rect x="577.8" y="1909" width="0.1" height="15.0" fill="rgb(216,211,20)" rx="2" ry="2" />
<text  x="580.82" y="1919.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (3 samples, 0.01%)</title><rect x="172.5" y="1605" width="0.1" height="15.0" fill="rgb(233,89,7)" rx="2" ry="2" />
<text  x="175.47" y="1615.5" ></text>
</g>
<g >
<title>fasttext::HierarchicalSoftmaxLoss::dfs (4 samples, 0.02%)</title><rect x="575.3" y="1909" width="0.2" height="15.0" fill="rgb(239,189,32)" rx="2" ry="2" />
<text  x="578.30" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.02%)</title><rect x="879.6" y="2021" width="0.2" height="15.0" fill="rgb(213,229,43)" rx="2" ry="2" />
<text  x="882.60" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="217.5" y="1237" width="0.2" height="15.0" fill="rgb(213,207,53)" rx="2" ry="2" />
<text  x="220.54" y="1247.5" ></text>
</g>
<g >
<title>operator delete (23 samples, 0.11%)</title><rect x="637.1" y="1877" width="1.3" height="15.0" fill="rgb(214,145,16)" rx="2" ry="2" />
<text  x="640.07" y="1887.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (6 samples, 0.03%)</title><rect x="503.4" y="1845" width="0.4" height="15.0" fill="rgb(248,102,5)" rx="2" ry="2" />
<text  x="506.44" y="1855.5" ></text>
</g>
<g >
<title>flush_tlb_mm_range (23 samples, 0.11%)</title><rect x="946.8" y="1909" width="1.4" height="15.0" fill="rgb(235,185,21)" rx="2" ry="2" />
<text  x="949.83" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="1187.1" y="1397" width="0.1" height="15.0" fill="rgb(221,51,42)" rx="2" ry="2" />
<text  x="1190.07" y="1407.5" ></text>
</g>
<g >
<title>get_user_pages_fast (2 samples, 0.01%)</title><rect x="28.0" y="1893" width="0.1" height="15.0" fill="rgb(248,170,17)" rx="2" ry="2" />
<text  x="30.99" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (98 samples, 0.49%)</title><rect x="133.8" y="1701" width="5.8" height="15.0" fill="rgb(205,182,5)" rx="2" ry="2" />
<text  x="136.84" y="1711.5" ></text>
</g>
<g >
<title>page_fault (3 samples, 0.01%)</title><rect x="1100.4" y="2021" width="0.2" height="15.0" fill="rgb(244,78,53)" rx="2" ry="2" />
<text  x="1103.38" y="2031.5" ></text>
</g>
<g >
<title>page_fault (9 samples, 0.04%)</title><rect x="656.6" y="1861" width="0.5" height="15.0" fill="rgb(228,59,1)" rx="2" ry="2" />
<text  x="659.59" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (70 samples, 0.35%)</title><rect x="205.9" y="1685" width="4.1" height="15.0" fill="rgb(239,89,13)" rx="2" ry="2" />
<text  x="208.93" y="1695.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (3 samples, 0.01%)</title><rect x="85.6" y="1637" width="0.2" height="15.0" fill="rgb(208,97,23)" rx="2" ry="2" />
<text  x="88.61" y="1647.5" ></text>
</g>
<g >
<title>operator delete (7 samples, 0.03%)</title><rect x="166.1" y="1541" width="0.4" height="15.0" fill="rgb(215,210,48)" rx="2" ry="2" />
<text  x="169.08" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (2 samples, 0.01%)</title><rect x="187.5" y="1781" width="0.1" height="15.0" fill="rgb(227,83,41)" rx="2" ry="2" />
<text  x="190.53" y="1791.5" ></text>
</g>
<g >
<title>__asan::Allocator::GetAsanChunkByAddrFastLocked (10 samples, 0.05%)</title><rect x="92.8" y="2021" width="0.5" height="15.0" fill="rgb(244,212,28)" rx="2" ry="2" />
<text  x="95.76" y="2031.5" ></text>
</g>
<g >
<title>__do_page_fault (9 samples, 0.04%)</title><rect x="656.6" y="1829" width="0.5" height="15.0" fill="rgb(231,92,49)" rx="2" ry="2" />
<text  x="659.59" y="1839.5" ></text>
</g>
<g >
<title>__dynamic_cast (4 samples, 0.02%)</title><rect x="145.4" y="1637" width="0.3" height="15.0" fill="rgb(249,5,21)" rx="2" ry="2" />
<text  x="148.45" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1186.9" y="1893" width="0.3" height="15.0" fill="rgb(235,211,5)" rx="2" ry="2" />
<text  x="1189.89" y="1903.5" ></text>
</g>
<g >
<title>handle_mm_fault (4 samples, 0.02%)</title><rect x="1189.5" y="1973" width="0.3" height="15.0" fill="rgb(244,150,17)" rx="2" ry="2" />
<text  x="1192.53" y="1983.5" ></text>
</g>
<g >
<title>__asan::AsanThread::stack_bottom (14 samples, 0.07%)</title><rect x="1152.9" y="2037" width="0.8" height="15.0" fill="rgb(223,199,9)" rx="2" ry="2" />
<text  x="1155.90" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1186.5" y="165" width="0.4" height="15.0" fill="rgb(251,25,45)" rx="2" ry="2" />
<text  x="1189.48" y="175.5" ></text>
</g>
<g >
<title>__asan::PoisonShadow (54 samples, 0.27%)</title><rect x="118.8" y="2037" width="3.1" height="15.0" fill="rgb(245,137,37)" rx="2" ry="2" />
<text  x="121.78" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (72 samples, 0.36%)</title><rect x="140.2" y="1621" width="4.3" height="15.0" fill="rgb(218,23,44)" rx="2" ry="2" />
<text  x="143.23" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.3" y="501" width="0.4" height="15.0" fill="rgb(209,22,39)" rx="2" ry="2" />
<text  x="1190.30" y="511.5" ></text>
</g>
<g >
<title>TDocument::TDocument (2 samples, 0.01%)</title><rect x="523.4" y="1989" width="0.1" height="15.0" fill="rgb(222,42,47)" rx="2" ry="2" />
<text  x="526.37" y="1999.5" ></text>
</g>
<g >
<title>handle_mm_fault (17 samples, 0.08%)</title><rect x="502.9" y="1877" width="0.9" height="15.0" fill="rgb(227,31,2)" rx="2" ry="2" />
<text  x="505.85" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.01%)</title><rect x="1187.1" y="981" width="0.1" height="15.0" fill="rgb(209,46,47)" rx="2" ry="2" />
<text  x="1190.07" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (277 samples, 1.38%)</title><rect x="189.7" y="1781" width="16.2" height="15.0" fill="rgb(240,79,46)" rx="2" ry="2" />
<text  x="192.70" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="188.4" y="1861" width="0.3" height="15.0" fill="rgb(245,59,21)" rx="2" ry="2" />
<text  x="191.35" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.03%)</title><rect x="1186.5" y="1493" width="0.4" height="15.0" fill="rgb(206,159,46)" rx="2" ry="2" />
<text  x="1189.48" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_BracketMatcher (2 samples, 0.01%)</title><rect x="162.5" y="1605" width="0.1" height="15.0" fill="rgb(220,62,8)" rx="2" ry="2" />
<text  x="165.50" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="217.5" y="1877" width="0.2" height="15.0" fill="rgb(223,79,40)" rx="2" ry="2" />
<text  x="220.48" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="1187.1" y="437" width="0.1" height="15.0" fill="rgb(238,67,38)" rx="2" ry="2" />
<text  x="1190.07" y="447.5" ></text>
</g>
<g >
<title>[unknown] (32 samples, 0.16%)</title><rect x="814.6" y="2021" width="1.9" height="15.0" fill="rgb(213,207,19)" rx="2" ry="2" />
<text  x="817.60" y="2031.5" ></text>
</g>
<g >
<title>tlb_flush_mmu_free (2 samples, 0.01%)</title><rect x="1098.2" y="1845" width="0.1" height="15.0" fill="rgb(242,71,0)" rx="2" ry="2" />
<text  x="1101.22" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (443 samples, 2.20%)</title><rect x="162.3" y="1909" width="25.9" height="15.0" fill="rgb(227,40,34)" rx="2" ry="2" />
<text  x="165.27" y="1919.5" >s..</text>
</g>
<g >
<title>__dynamic_cast (4 samples, 0.02%)</title><rect x="207.1" y="1653" width="0.2" height="15.0" fill="rgb(206,53,44)" rx="2" ry="2" />
<text  x="210.11" y="1663.5" ></text>
</g>
<g >
<title>fasttext::NegativeSamplingLoss::NegativeSamplingLoss (8 samples, 0.04%)</title><rect x="520.1" y="1957" width="0.5" height="15.0" fill="rgb(235,210,36)" rx="2" ry="2" />
<text  x="523.08" y="1967.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (6 samples, 0.03%)</title><rect x="694.3" y="1845" width="0.4" height="15.0" fill="rgb(229,82,22)" rx="2" ry="2" />
<text  x="697.33" y="1855.5" ></text>
</g>
<g >
<title>release_pages (3 samples, 0.01%)</title><rect x="1100.1" y="1861" width="0.2" height="15.0" fill="rgb(227,195,27)" rx="2" ry="2" />
<text  x="1103.09" y="1871.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (2 samples, 0.01%)</title><rect x="1188.2" y="2037" width="0.2" height="15.0" fill="rgb(232,164,7)" rx="2" ry="2" />
<text  x="1191.24" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (537 samples, 2.67%)</title><rect x="54.3" y="1653" width="31.5" height="15.0" fill="rgb(248,147,43)" rx="2" ry="2" />
<text  x="57.31" y="1663.5" >[u..</text>
</g>
<g >
<title>pagevec_lru_move_fn (6 samples, 0.03%)</title><rect x="24.8" y="1925" width="0.3" height="15.0" fill="rgb(212,208,16)" rx="2" ry="2" />
<text  x="27.77" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (378 samples, 1.88%)</title><rect x="54.4" y="1141" width="22.1" height="15.0" fill="rgb(208,196,53)" rx="2" ry="2" />
<text  x="57.37" y="1151.5" >[..</text>
</g>
<g >
<title>TAgencyRating::ScoreUrl (454 samples, 2.26%)</title><rect x="162.2" y="1973" width="26.6" height="15.0" fill="rgb(230,211,19)" rx="2" ry="2" />
<text  x="165.15" y="1983.5" >T..</text>
</g>
<g >
<title>__asan::GetCurrentThread (23 samples, 0.11%)</title><rect x="116.3" y="2037" width="1.4" height="15.0" fill="rgb(244,116,12)" rx="2" ry="2" />
<text  x="119.32" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (898 samples, 4.46%)</title><rect x="821.0" y="2021" width="52.6" height="15.0" fill="rgb(218,119,47)" rx="2" ry="2" />
<text  x="823.99" y="2031.5" >[unkn..</text>
</g>
<g >
<title>fasttext::Dictionary::pushHash (342 samples, 1.70%)</title><rect x="554.5" y="1877" width="20.1" height="15.0" fill="rgb(219,110,52)" rx="2" ry="2" />
<text  x="557.55" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.3" y="453" width="0.4" height="15.0" fill="rgb(253,229,47)" rx="2" ry="2" />
<text  x="1190.30" y="463.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="176.4" y="1589" width="0.1" height="15.0" fill="rgb(205,112,6)" rx="2" ry="2" />
<text  x="179.39" y="1599.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::addSubwords (21 samples, 0.10%)</title><rect x="542.1" y="1909" width="1.3" height="15.0" fill="rgb(221,123,53)" rx="2" ry="2" />
<text  x="545.12" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (74 samples, 0.37%)</title><rect x="205.9" y="1749" width="4.4" height="15.0" fill="rgb(240,77,40)" rx="2" ry="2" />
<text  x="208.93" y="1759.5" ></text>
</g>
<g >
<title>perf_event_mmap (3 samples, 0.01%)</title><rect x="1098.5" y="1925" width="0.1" height="15.0" fill="rgb(213,156,11)" rx="2" ry="2" />
<text  x="1101.45" y="1935.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (5 samples, 0.02%)</title><rect x="768.2" y="1989" width="0.3" height="15.0" fill="rgb(210,216,42)" rx="2" ry="2" />
<text  x="771.24" y="1999.5" ></text>
</g>
<g >
<title>__asan::AsanTSDGet (19 samples, 0.09%)</title><rect x="1151.8" y="2037" width="1.1" height="15.0" fill="rgb(227,185,51)" rx="2" ry="2" />
<text  x="1154.79" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="1187.1" y="1621" width="0.1" height="15.0" fill="rgb(214,48,33)" rx="2" ry="2" />
<text  x="1190.07" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1186.5" y="949" width="0.4" height="15.0" fill="rgb(211,26,54)" rx="2" ry="2" />
<text  x="1189.48" y="959.5" ></text>
</g>
<g >
<title>__do_page_fault (10 samples, 0.05%)</title><rect x="765.9" y="1989" width="0.6" height="15.0" fill="rgb(254,173,18)" rx="2" ry="2" />
<text  x="768.90" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (465 samples, 2.31%)</title><rect x="54.3" y="1429" width="27.3" height="15.0" fill="rgb(236,25,12)" rx="2" ry="2" />
<text  x="57.31" y="1439.5" >[..</text>
</g>
<g >
<title>operator delete (6 samples, 0.03%)</title><rect x="209.2" y="1637" width="0.3" height="15.0" fill="rgb(246,181,14)" rx="2" ry="2" />
<text  x="212.16" y="1647.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (3 samples, 0.01%)</title><rect x="624.5" y="1845" width="0.1" height="15.0" fill="rgb(254,103,28)" rx="2" ry="2" />
<text  x="627.47" y="1855.5" ></text>
</g>
<g >
<title>do_page_fault (9 samples, 0.04%)</title><rect x="656.6" y="1845" width="0.5" height="15.0" fill="rgb(232,7,39)" rx="2" ry="2" />
<text  x="659.59" y="1855.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (10 samples, 0.05%)</title><rect x="581.3" y="1877" width="0.6" height="15.0" fill="rgb(207,125,6)" rx="2" ry="2" />
<text  x="584.27" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (199 samples, 0.99%)</title><rect x="189.7" y="1765" width="11.7" height="15.0" fill="rgb(216,40,32)" rx="2" ry="2" />
<text  x="192.70" y="1775.5" ></text>
</g>
<g >
<title>smp_call_function_many (4 samples, 0.02%)</title><rect x="1098.0" y="1781" width="0.2" height="15.0" fill="rgb(219,73,0)" rx="2" ry="2" />
<text  x="1100.98" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="1187.1" y="533" width="0.1" height="15.0" fill="rgb(248,98,3)" rx="2" ry="2" />
<text  x="1190.07" y="543.5" ></text>
</g>
<g >
<title>[unknown] (508 samples, 2.52%)</title><rect x="54.3" y="1557" width="29.8" height="15.0" fill="rgb(235,135,14)" rx="2" ry="2" />
<text  x="57.31" y="1567.5" >[u..</text>
</g>
<g >
<title>operator new (2 samples, 0.01%)</title><rect x="1188.4" y="2037" width="0.1" height="15.0" fill="rgb(214,159,2)" rx="2" ry="2" />
<text  x="1191.42" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="161.9" y="1717" width="0.2" height="15.0" fill="rgb(249,171,49)" rx="2" ry="2" />
<text  x="164.86" y="1727.5" ></text>
</g>
<g >
<title>Eigen::internal::general_matrix_vector_product&lt;long, float, Eigen::internal::const_blas_data_mapper&lt;float, long, 1&gt;, 1, false, float, Eigen::internal::const_blas_data_mapper&lt;float, long, 0&gt;, false, 0&gt;::run (317 samples, 1.57%)</title><rect x="383.9" y="1925" width="18.6" height="15.0" fill="rgb(242,55,35)" rx="2" ry="2" />
<text  x="386.93" y="1935.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.01%)</title><rect x="326.6" y="1957" width="0.1" height="15.0" fill="rgb(216,9,51)" rx="2" ry="2" />
<text  x="329.55" y="1967.5" ></text>
</g>
<g >
<title>up_write (3 samples, 0.01%)</title><rect x="1099.0" y="1957" width="0.2" height="15.0" fill="rgb(225,162,17)" rx="2" ry="2" />
<text  x="1102.04" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.01%)</title><rect x="1187.1" y="501" width="0.1" height="15.0" fill="rgb(253,95,40)" rx="2" ry="2" />
<text  x="1190.07" y="511.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::_Bind&lt;Annotate (3,915 samples, 19.45%)</title><rect x="529.5" y="1989" width="229.4" height="15.0" fill="rgb(238,61,29)" rx="2" ry="2" />
<text  x="532.46" y="1999.5" >std::__invoke&lt;std::_Bind&lt;Annot..</text>
</g>
<g >
<title>tlb_finish_mmu (2 samples, 0.01%)</title><rect x="82.4" y="1381" width="0.1" height="15.0" fill="rgb(253,193,26)" rx="2" ry="2" />
<text  x="85.38" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1186.5" y="997" width="0.4" height="15.0" fill="rgb(206,105,28)" rx="2" ry="2" />
<text  x="1189.48" y="1007.5" ></text>
</g>
<g >
<title>mem_cgroup_commit_charge (4 samples, 0.02%)</title><rect x="945.7" y="1925" width="0.2" height="15.0" fill="rgb(210,72,11)" rx="2" ry="2" />
<text  x="948.65" y="1935.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (5 samples, 0.02%)</title><rect x="503.5" y="1829" width="0.3" height="15.0" fill="rgb(224,112,2)" rx="2" ry="2" />
<text  x="506.50" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="188.5" y="1429" width="0.2" height="15.0" fill="rgb(237,105,50)" rx="2" ry="2" />
<text  x="191.53" y="1439.5" ></text>
</g>
<g >
<title>unmap_region (4 samples, 0.02%)</title><rect x="79.7" y="1221" width="0.3" height="15.0" fill="rgb(232,122,20)" rx="2" ry="2" />
<text  x="82.75" y="1231.5" ></text>
</g>
<g >
<title>TFastTextEmbedder::GetSentenceEmbedding (2,089 samples, 10.38%)</title><rect x="376.8" y="1973" width="122.4" height="15.0" fill="rgb(251,8,34)" rx="2" ry="2" />
<text  x="379.78" y="1983.5" >TFastTextEmbedd..</text>
</g>
<g >
<title>x2apic_send_IPI (14 samples, 0.07%)</title><rect x="947.4" y="1781" width="0.8" height="15.0" fill="rgb(212,113,30)" rx="2" ry="2" />
<text  x="950.35" y="1791.5" ></text>
</g>
<g >
<title>native_write_msr (2 samples, 0.01%)</title><rect x="79.8" y="1013" width="0.1" height="15.0" fill="rgb(225,205,10)" rx="2" ry="2" />
<text  x="82.80" y="1023.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (5 samples, 0.02%)</title><rect x="181.7" y="1717" width="0.3" height="15.0" fill="rgb(221,137,36)" rx="2" ry="2" />
<text  x="184.67" y="1727.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (2 samples, 0.01%)</title><rect x="79.2" y="1141" width="0.1" height="15.0" fill="rgb(224,146,13)" rx="2" ry="2" />
<text  x="82.16" y="1151.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.01%)</title><rect x="186.4" y="1653" width="0.2" height="15.0" fill="rgb(208,84,33)" rx="2" ry="2" />
<text  x="189.42" y="1663.5" ></text>
</g>
<g >
<title>__handle_mm_fault (33 samples, 0.16%)</title><rect x="512.2" y="1893" width="2.0" height="15.0" fill="rgb(233,179,36)" rx="2" ry="2" />
<text  x="515.23" y="1903.5" ></text>
</g>
<g >
<title>handle_mm_fault (21 samples, 0.10%)</title><rect x="697.3" y="1797" width="1.3" height="15.0" fill="rgb(213,185,4)" rx="2" ry="2" />
<text  x="700.32" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="161.7" y="1653" width="0.2" height="15.0" fill="rgb(231,29,37)" rx="2" ry="2" />
<text  x="164.74" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.01%)</title><rect x="1187.1" y="1605" width="0.1" height="15.0" fill="rgb(228,189,41)" rx="2" ry="2" />
<text  x="1190.07" y="1615.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::basic_json (10 samples, 0.05%)</title><rect x="520.6" y="2005" width="0.5" height="15.0" fill="rgb(215,211,36)" rx="2" ry="2" />
<text  x="523.55" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (2 samples, 0.01%)</title><rect x="160.8" y="1781" width="0.1" height="15.0" fill="rgb(235,140,2)" rx="2" ry="2" />
<text  x="163.80" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (2 samples, 0.01%)</title><rect x="215.8" y="1765" width="0.2" height="15.0" fill="rgb(212,84,6)" rx="2" ry="2" />
<text  x="218.84" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.02%)</title><rect x="1187.4" y="37" width="0.3" height="15.0" fill="rgb(214,140,12)" rx="2" ry="2" />
<text  x="1190.36" y="47.5" ></text>
</g>
<g >
<title>fasttext::Vector::addVector (59 samples, 0.29%)</title><rect x="1103.8" y="2053" width="3.4" height="15.0" fill="rgb(232,17,18)" rx="2" ry="2" />
<text  x="1106.78" y="2063.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (4 samples, 0.02%)</title><rect x="600.3" y="1877" width="0.3" height="15.0" fill="rgb(211,155,4)" rx="2" ry="2" />
<text  x="603.32" y="1887.5" ></text>
</g>
<g >
<title>do_page_fault (109 samples, 0.54%)</title><rect x="941.9" y="2021" width="6.4" height="15.0" fill="rgb(218,41,22)" rx="2" ry="2" />
<text  x="944.90" y="2031.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (4 samples, 0.02%)</title><rect x="85.3" y="1621" width="0.2" height="15.0" fill="rgb(252,105,26)" rx="2" ry="2" />
<text  x="88.31" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="161.9" y="1573" width="0.2" height="15.0" fill="rgb(226,57,32)" rx="2" ry="2" />
<text  x="164.86" y="1583.5" ></text>
</g>
<g >
<title>operator new (46 samples, 0.23%)</title><rect x="611.8" y="1861" width="2.6" height="15.0" fill="rgb(234,35,35)" rx="2" ry="2" />
<text  x="614.75" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.3" y="629" width="0.4" height="15.0" fill="rgb(221,188,21)" rx="2" ry="2" />
<text  x="1190.30" y="639.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="149.7" y="1605" width="0.1" height="15.0" fill="rgb(215,133,43)" rx="2" ry="2" />
<text  x="152.67" y="1615.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (10 samples, 0.05%)</title><rect x="1143.8" y="2037" width="0.5" height="15.0" fill="rgb(221,37,13)" rx="2" ry="2" />
<text  x="1146.76" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1187.3" y="661" width="0.4" height="15.0" fill="rgb(221,56,11)" rx="2" ry="2" />
<text  x="1190.30" y="671.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (3 samples, 0.01%)</title><rect x="1108.4" y="1861" width="0.2" height="15.0" fill="rgb(227,141,0)" rx="2" ry="2" />
<text  x="1111.41" y="1871.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (3 samples, 0.01%)</title><rect x="602.8" y="1861" width="0.2" height="15.0" fill="rgb(207,87,45)" rx="2" ry="2" />
<text  x="605.78" y="1871.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (4 samples, 0.02%)</title><rect x="78.7" y="1269" width="0.2" height="15.0" fill="rgb(216,154,52)" rx="2" ry="2" />
<text  x="81.69" y="1279.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (7 samples, 0.03%)</title><rect x="184.5" y="1653" width="0.5" height="15.0" fill="rgb(205,224,15)" rx="2" ry="2" />
<text  x="187.54" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="161.9" y="1541" width="0.2" height="15.0" fill="rgb(219,179,14)" rx="2" ry="2" />
<text  x="164.86" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="1187.1" y="517" width="0.1" height="15.0" fill="rgb(247,152,42)" rx="2" ry="2" />
<text  x="1190.07" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (4 samples, 0.02%)</title><rect x="161.3" y="1797" width="0.2" height="15.0" fill="rgb(210,28,46)" rx="2" ry="2" />
<text  x="164.27" y="1807.5" ></text>
</g>
<g >
<title>__interceptor_strcmp (11 samples, 0.05%)</title><rect x="40.8" y="2037" width="0.7" height="15.0" fill="rgb(211,113,18)" rx="2" ry="2" />
<text  x="43.83" y="2047.5" ></text>
</g>
<g >
<title>onmt::unicode::is_letter@plt (4 samples, 0.02%)</title><rect x="738.4" y="1893" width="0.2" height="15.0" fill="rgb(241,140,7)" rx="2" ry="2" />
<text  x="741.41" y="1903.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (4 samples, 0.02%)</title><rect x="91.6" y="2005" width="0.3" height="15.0" fill="rgb(220,95,24)" rx="2" ry="2" />
<text  x="94.64" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (108 samples, 0.54%)</title><rect x="133.4" y="1733" width="6.3" height="15.0" fill="rgb(214,55,19)" rx="2" ry="2" />
<text  x="136.37" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="1187.1" y="709" width="0.1" height="15.0" fill="rgb(253,23,37)" rx="2" ry="2" />
<text  x="1190.07" y="719.5" ></text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (2 samples, 0.01%)</title><rect x="698.0" y="1765" width="0.1" height="15.0" fill="rgb(241,100,45)" rx="2" ry="2" />
<text  x="701.03" y="1775.5" ></text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (2 samples, 0.01%)</title><rect x="684.1" y="1765" width="0.2" height="15.0" fill="rgb(207,115,10)" rx="2" ry="2" />
<text  x="687.14" y="1775.5" ></text>
</g>
<g >
<title>on_each_cpu_cond_mask (19 samples, 0.09%)</title><rect x="947.1" y="1877" width="1.1" height="15.0" fill="rgb(221,197,35)" rx="2" ry="2" />
<text  x="950.06" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.01%)</title><rect x="1187.1" y="1557" width="0.1" height="15.0" fill="rgb(251,137,2)" rx="2" ry="2" />
<text  x="1190.07" y="1567.5" ></text>
</g>
<g >
<title>__pthread_getspecific (7 samples, 0.03%)</title><rect x="185.5" y="1653" width="0.4" height="15.0" fill="rgb(235,220,49)" rx="2" ry="2" />
<text  x="188.54" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (365 samples, 1.81%)</title><rect x="54.4" y="1045" width="21.4" height="15.0" fill="rgb(221,124,38)" rx="2" ry="2" />
<text  x="57.37" y="1055.5" >[..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (9 samples, 0.04%)</title><rect x="216.1" y="1829" width="0.6" height="15.0" fill="rgb(245,155,4)" rx="2" ry="2" />
<text  x="219.13" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.3" y="933" width="0.4" height="15.0" fill="rgb(236,113,34)" rx="2" ry="2" />
<text  x="1190.30" y="943.5" ></text>
</g>
<g >
<title>__sanitizer::BlockingMutex::Unlock (6 samples, 0.03%)</title><rect x="759.5" y="2037" width="0.4" height="15.0" fill="rgb(207,212,11)" rx="2" ry="2" />
<text  x="762.51" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1187.3" y="1573" width="0.4" height="15.0" fill="rgb(224,88,47)" rx="2" ry="2" />
<text  x="1190.30" y="1583.5" ></text>
</g>
<g >
<title>get_unmapped_area (2 samples, 0.01%)</title><rect x="1097.7" y="1941" width="0.1" height="15.0" fill="rgb(244,37,23)" rx="2" ry="2" />
<text  x="1100.69" y="1951.5" ></text>
</g>
<g >
<title>clear_page_erms (2 samples, 0.01%)</title><rect x="732.4" y="1765" width="0.1" height="15.0" fill="rgb(231,110,30)" rx="2" ry="2" />
<text  x="735.37" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1186.5" y="357" width="0.4" height="15.0" fill="rgb(254,192,19)" rx="2" ry="2" />
<text  x="1189.48" y="367.5" ></text>
</g>
<g >
<title>__asan::AsanThread::stack_bottom (6 samples, 0.03%)</title><rect x="596.6" y="1877" width="0.3" height="15.0" fill="rgb(220,5,30)" rx="2" ry="2" />
<text  x="599.57" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (430 samples, 2.14%)</title><rect x="162.3" y="1813" width="25.2" height="15.0" fill="rgb(221,70,36)" rx="2" ry="2" />
<text  x="165.27" y="1823.5" >s..</text>
</g>
<g >
<title>[libc-2.27.so] (7 samples, 0.03%)</title><rect x="335.6" y="1989" width="0.4" height="15.0" fill="rgb(243,221,3)" rx="2" ry="2" />
<text  x="338.64" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (87 samples, 0.43%)</title><rect x="145.0" y="1669" width="5.1" height="15.0" fill="rgb(224,181,19)" rx="2" ry="2" />
<text  x="148.04" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_Compiler (445 samples, 2.21%)</title><rect x="162.3" y="1925" width="26.1" height="15.0" fill="rgb(244,63,20)" rx="2" ry="2" />
<text  x="165.27" y="1935.5" >s..</text>
</g>
<g >
<title>__asan_memcpy (3 samples, 0.01%)</title><rect x="147.9" y="1605" width="0.1" height="15.0" fill="rgb(248,133,52)" rx="2" ry="2" />
<text  x="150.85" y="1615.5" ></text>
</g>
<g >
<title>__pthread_getspecific (4 samples, 0.02%)</title><rect x="158.6" y="1669" width="0.3" height="15.0" fill="rgb(246,204,34)" rx="2" ry="2" />
<text  x="161.64" y="1679.5" ></text>
</g>
<g >
<title>on_each_cpu_cond_mask (4 samples, 0.02%)</title><rect x="1098.0" y="1813" width="0.2" height="15.0" fill="rgb(218,27,10)" rx="2" ry="2" />
<text  x="1100.98" y="1823.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.02%)</title><rect x="638.4" y="1877" width="0.3" height="15.0" fill="rgb(205,91,0)" rx="2" ry="2" />
<text  x="641.42" y="1887.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (4 samples, 0.02%)</title><rect x="597.2" y="1877" width="0.2" height="15.0" fill="rgb(228,106,44)" rx="2" ry="2" />
<text  x="600.16" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;fasttext::FastText, std::default_delete&lt;fasttext::FastText&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;fasttext::FastText, std::default_delete&lt;fasttext::FastText&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (5 samples, 0.02%)</title><rect x="758.6" y="1973" width="0.3" height="15.0" fill="rgb(252,125,12)" rx="2" ry="2" />
<text  x="761.63" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.03%)</title><rect x="1186.5" y="965" width="0.4" height="15.0" fill="rgb(230,194,49)" rx="2" ry="2" />
<text  x="1189.48" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (83 samples, 0.41%)</title><rect x="167.8" y="1685" width="4.8" height="15.0" fill="rgb(242,133,32)" rx="2" ry="2" />
<text  x="170.78" y="1695.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::Unwind (2 samples, 0.01%)</title><rect x="208.7" y="1637" width="0.2" height="15.0" fill="rgb(238,90,45)" rx="2" ry="2" />
<text  x="211.75" y="1647.5" ></text>
</g>
<g >
<title>__handle_mm_fault (4 samples, 0.02%)</title><rect x="1189.5" y="1957" width="0.3" height="15.0" fill="rgb(232,134,39)" rx="2" ry="2" />
<text  x="1192.53" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.03%)</title><rect x="1187.2" y="2053" width="0.5" height="15.0" fill="rgb(226,130,10)" rx="2" ry="2" />
<text  x="1190.25" y="2063.5" ></text>
</g>
<g >
<title>__asan::RZSize2Log (72 samples, 0.36%)</title><rect x="988.4" y="2053" width="4.3" height="15.0" fill="rgb(235,97,10)" rx="2" ry="2" />
<text  x="991.44" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="217.5" y="1717" width="0.2" height="15.0" fill="rgb(208,191,14)" rx="2" ry="2" />
<text  x="220.48" y="1727.5" ></text>
</g>
<g >
<title>__interceptor_strlen (4 samples, 0.02%)</title><rect x="1004.1" y="2053" width="0.2" height="15.0" fill="rgb(228,224,51)" rx="2" ry="2" />
<text  x="1007.09" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1186.5" y="805" width="0.4" height="15.0" fill="rgb(206,62,4)" rx="2" ry="2" />
<text  x="1189.48" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="1187.1" y="1285" width="0.1" height="15.0" fill="rgb(226,21,18)" rx="2" ry="2" />
<text  x="1190.07" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="1187.1" y="1445" width="0.1" height="15.0" fill="rgb(237,194,25)" rx="2" ry="2" />
<text  x="1190.07" y="1455.5" ></text>
</g>
<g >
<title>get_page_from_freelist (7 samples, 0.03%)</title><rect x="944.9" y="1893" width="0.4" height="15.0" fill="rgb(229,39,8)" rx="2" ry="2" />
<text  x="947.89" y="1903.5" ></text>
</g>
<g >
<title>page_fault (12 samples, 0.06%)</title><rect x="732.0" y="1877" width="0.7" height="15.0" fill="rgb(233,119,17)" rx="2" ry="2" />
<text  x="735.02" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (2 samples, 0.01%)</title><rect x="161.0" y="1861" width="0.1" height="15.0" fill="rgb(219,186,52)" rx="2" ry="2" />
<text  x="163.98" y="1871.5" ></text>
</g>
<g >
<title>__pthread_getspecific (5 samples, 0.02%)</title><rect x="198.7" y="1589" width="0.3" height="15.0" fill="rgb(249,63,38)" rx="2" ry="2" />
<text  x="201.67" y="1599.5" ></text>
</g>
<g >
<title>__lsan::LsanMetadata::allocated (2 samples, 0.01%)</title><rect x="94.0" y="2021" width="0.2" height="15.0" fill="rgb(208,167,3)" rx="2" ry="2" />
<text  x="97.05" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1186.5" y="1365" width="0.4" height="15.0" fill="rgb(253,55,9)" rx="2" ry="2" />
<text  x="1189.48" y="1375.5" ></text>
</g>
<g >
<title>std::vector&lt;onmt::AnnotatedToken, std::allocator&lt;onmt::AnnotatedToken&gt; &gt;::reserve (2 samples, 0.01%)</title><rect x="755.9" y="1893" width="0.1" height="15.0" fill="rgb(218,82,27)" rx="2" ry="2" />
<text  x="758.93" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (90 samples, 0.45%)</title><rect x="144.9" y="1765" width="5.3" height="15.0" fill="rgb(225,199,48)" rx="2" ry="2" />
<text  x="147.92" y="1775.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (2 samples, 0.01%)</title><rect x="154.5" y="1653" width="0.2" height="15.0" fill="rgb(219,36,37)" rx="2" ry="2" />
<text  x="157.53" y="1663.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (4 samples, 0.02%)</title><rect x="87.7" y="1765" width="0.2" height="15.0" fill="rgb(228,157,8)" rx="2" ry="2" />
<text  x="90.66" y="1775.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (10 samples, 0.05%)</title><rect x="1119.2" y="2037" width="0.6" height="15.0" fill="rgb(229,212,23)" rx="2" ry="2" />
<text  x="1122.20" y="2047.5" ></text>
</g>
<g >
<title>__asan::asan_memalign (2 samples, 0.01%)</title><rect x="611.1" y="1861" width="0.1" height="15.0" fill="rgb(208,43,27)" rx="2" ry="2" />
<text  x="614.11" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.3" y="837" width="0.4" height="15.0" fill="rgb(217,104,31)" rx="2" ry="2" />
<text  x="1190.30" y="847.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (6 samples, 0.03%)</title><rect x="601.4" y="1877" width="0.3" height="15.0" fill="rgb(246,57,37)" rx="2" ry="2" />
<text  x="604.38" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="161.7" y="1877" width="0.4" height="15.0" fill="rgb(240,48,50)" rx="2" ry="2" />
<text  x="164.68" y="1887.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (2 samples, 0.01%)</title><rect x="207.9" y="1637" width="0.1" height="15.0" fill="rgb(248,9,14)" rx="2" ry="2" />
<text  x="210.93" y="1647.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (4 samples, 0.02%)</title><rect x="683.9" y="1749" width="0.2" height="15.0" fill="rgb(234,110,39)" rx="2" ry="2" />
<text  x="686.90" y="1759.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (14 samples, 0.07%)</title><rect x="656.3" y="1877" width="0.8" height="15.0" fill="rgb(250,107,41)" rx="2" ry="2" />
<text  x="659.30" y="1887.5" ></text>
</g>
<g >
<title>do_page_fault (3 samples, 0.01%)</title><rect x="520.4" y="1925" width="0.2" height="15.0" fill="rgb(206,69,27)" rx="2" ry="2" />
<text  x="523.38" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.01%)</title><rect x="1187.1" y="549" width="0.1" height="15.0" fill="rgb(207,77,40)" rx="2" ry="2" />
<text  x="1190.07" y="559.5" ></text>
</g>
<g >
<title>__interceptor_memcmp (8 samples, 0.04%)</title><rect x="541.7" y="1909" width="0.4" height="15.0" fill="rgb(238,8,11)" rx="2" ry="2" />
<text  x="544.65" y="1919.5" ></text>
</g>
<g >
<title>std::has_facet&lt;std::ctype&lt;char&gt; &gt; (3 samples, 0.01%)</title><rect x="100.0" y="2021" width="0.2" height="15.0" fill="rgb(252,49,42)" rx="2" ry="2" />
<text  x="103.03" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="188.6" y="1269" width="0.1" height="15.0" fill="rgb(248,59,9)" rx="2" ry="2" />
<text  x="191.59" y="1279.5" ></text>
</g>
<g >
<title>memcpy@plt (3 samples, 0.01%)</title><rect x="1107.7" y="2053" width="0.1" height="15.0" fill="rgb(213,182,25)" rx="2" ry="2" />
<text  x="1110.65" y="2063.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (83 samples, 0.41%)</title><rect x="745.7" y="1877" width="4.9" height="15.0" fill="rgb(206,105,13)" rx="2" ry="2" />
<text  x="748.73" y="1887.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (5 samples, 0.02%)</title><rect x="1144.3" y="2037" width="0.3" height="15.0" fill="rgb(211,166,54)" rx="2" ry="2" />
<text  x="1147.34" y="2047.5" ></text>
</g>
<g >
<title>__do_page_fault (2 samples, 0.01%)</title><rect x="54.1" y="1973" width="0.2" height="15.0" fill="rgb(249,160,5)" rx="2" ry="2" />
<text  x="57.13" y="1983.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (3 samples, 0.01%)</title><rect x="1099.0" y="1877" width="0.2" height="15.0" fill="rgb(210,148,8)" rx="2" ry="2" />
<text  x="1102.04" y="1887.5" ></text>
</g>
<g >
<title>__dynamic_cast (7 samples, 0.03%)</title><rect x="162.7" y="1573" width="0.4" height="15.0" fill="rgb(243,127,51)" rx="2" ry="2" />
<text  x="165.74" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (331 samples, 1.64%)</title><rect x="162.3" y="1781" width="19.4" height="15.0" fill="rgb(223,166,24)" rx="2" ry="2" />
<text  x="165.27" y="1791.5" ></text>
</g>
<g >
<title>fasttext::FastText::getWordVector (205 samples, 1.02%)</title><rect x="482.2" y="1957" width="12.0" height="15.0" fill="rgb(226,180,19)" rx="2" ry="2" />
<text  x="485.22" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="188.5" y="1365" width="0.2" height="15.0" fill="rgb(213,44,31)" rx="2" ry="2" />
<text  x="191.53" y="1375.5" ></text>
</g>
<g >
<title>__asan_memcpy (2 samples, 0.01%)</title><rect x="204.2" y="1605" width="0.2" height="15.0" fill="rgb(245,116,8)" rx="2" ry="2" />
<text  x="207.23" y="1615.5" ></text>
</g>
<g >
<title>__lru_cache_add (2 samples, 0.01%)</title><rect x="945.5" y="1909" width="0.2" height="15.0" fill="rgb(208,221,29)" rx="2" ry="2" />
<text  x="948.54" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.04%)</title><rect x="1186.4" y="1797" width="0.5" height="15.0" fill="rgb(238,216,48)" rx="2" ry="2" />
<text  x="1189.42" y="1807.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::basic_regex&lt;char const*&gt; (474 samples, 2.35%)</title><rect x="189.5" y="1957" width="27.7" height="15.0" fill="rgb(210,54,7)" rx="2" ry="2" />
<text  x="192.46" y="1967.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="1187.1" y="1349" width="0.1" height="15.0" fill="rgb(237,121,19)" rx="2" ry="2" />
<text  x="1190.07" y="1359.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (6 samples, 0.03%)</title><rect x="24.8" y="1909" width="0.3" height="15.0" fill="rgb(221,27,6)" rx="2" ry="2" />
<text  x="27.77" y="1919.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (2 samples, 0.01%)</title><rect x="141.8" y="1589" width="0.1" height="15.0" fill="rgb(243,162,46)" rx="2" ry="2" />
<text  x="144.81" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (86 samples, 0.43%)</title><rect x="190.0" y="1605" width="5.0" height="15.0" fill="rgb(219,202,39)" rx="2" ry="2" />
<text  x="192.99" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1186.9" y="1925" width="0.3" height="15.0" fill="rgb(220,57,29)" rx="2" ry="2" />
<text  x="1189.89" y="1935.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (21 samples, 0.10%)</title><rect x="321.3" y="1941" width="1.2" height="15.0" fill="rgb(244,6,5)" rx="2" ry="2" />
<text  x="324.28" y="1951.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="78.3" y="1237" width="0.2" height="15.0" fill="rgb(227,13,35)" rx="2" ry="2" />
<text  x="81.34" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (72 samples, 0.36%)</title><rect x="172.7" y="1749" width="4.2" height="15.0" fill="rgb(244,104,18)" rx="2" ry="2" />
<text  x="175.70" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1187.3" y="805" width="0.4" height="15.0" fill="rgb(219,145,18)" rx="2" ry="2" />
<text  x="1190.30" y="815.5" ></text>
</g>
<g >
<title>[unknown] (358 samples, 1.78%)</title><rect x="54.4" y="789" width="21.0" height="15.0" fill="rgb(207,192,8)" rx="2" ry="2" />
<text  x="57.37" y="799.5" ></text>
</g>
<g >
<title>unmap_region (2 samples, 0.01%)</title><rect x="79.2" y="1189" width="0.1" height="15.0" fill="rgb(247,34,22)" rx="2" ry="2" />
<text  x="82.16" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.3" y="341" width="0.4" height="15.0" fill="rgb(210,225,51)" rx="2" ry="2" />
<text  x="1190.30" y="351.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotPut (4 samples, 0.02%)</title><rect x="601.7" y="1877" width="0.3" height="15.0" fill="rgb(226,201,54)" rx="2" ry="2" />
<text  x="604.73" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1187.3" y="613" width="0.4" height="15.0" fill="rgb(228,192,3)" rx="2" ry="2" />
<text  x="1190.30" y="623.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.01%)</title><rect x="174.4" y="1605" width="0.1" height="15.0" fill="rgb(229,220,35)" rx="2" ry="2" />
<text  x="177.40" y="1615.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&gt;::ReturnToAllocator (8 samples, 0.04%)</title><rect x="1024.3" y="2053" width="0.4" height="15.0" fill="rgb(252,84,34)" rx="2" ry="2" />
<text  x="1027.25" y="2063.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (11 samples, 0.05%)</title><rect x="200.0" y="1589" width="0.7" height="15.0" fill="rgb(211,171,1)" rx="2" ry="2" />
<text  x="203.01" y="1599.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::getLine (517 samples, 2.57%)</title><rect x="544.7" y="1925" width="30.3" height="15.0" fill="rgb(207,65,26)" rx="2" ry="2" />
<text  x="547.70" y="1935.5" >fa..</text>
</g>
<g >
<title>__alloc_pages_nodemask (2 samples, 0.01%)</title><rect x="1019.2" y="1941" width="0.1" height="15.0" fill="rgb(248,130,35)" rx="2" ry="2" />
<text  x="1022.15" y="1951.5" ></text>
</g>
<g >
<title>onmt::add_final_token&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (53 samples, 0.26%)</title><rect x="579.3" y="1893" width="3.1" height="15.0" fill="rgb(210,226,20)" rx="2" ry="2" />
<text  x="582.28" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (90 samples, 0.45%)</title><rect x="189.9" y="1701" width="5.3" height="15.0" fill="rgb(240,109,5)" rx="2" ry="2" />
<text  x="192.93" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.04%)</title><rect x="1186.4" y="2005" width="0.5" height="15.0" fill="rgb(208,29,37)" rx="2" ry="2" />
<text  x="1189.42" y="2015.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (4 samples, 0.02%)</title><rect x="769.5" y="1989" width="0.3" height="15.0" fill="rgb(252,26,13)" rx="2" ry="2" />
<text  x="772.53" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.03%)</title><rect x="1186.5" y="1685" width="0.4" height="15.0" fill="rgb(252,155,45)" rx="2" ry="2" />
<text  x="1189.48" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1187.2" y="1605" width="0.5" height="15.0" fill="rgb(207,156,52)" rx="2" ry="2" />
<text  x="1190.25" y="1615.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (8 samples, 0.04%)</title><rect x="526.4" y="1893" width="0.5" height="15.0" fill="rgb(223,119,1)" rx="2" ry="2" />
<text  x="529.41" y="1903.5" ></text>
</g>
<g >
<title>__sanitizer::QuarantineCache&lt;__asan::QuarantineCallback&gt;::MergeBatches (7 samples, 0.03%)</title><rect x="766.5" y="2037" width="0.4" height="15.0" fill="rgb(209,90,35)" rx="2" ry="2" />
<text  x="769.48" y="2047.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_range_insert&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (5 samples, 0.02%)</title><rect x="1187.8" y="2053" width="0.3" height="15.0" fill="rgb(235,193,46)" rx="2" ry="2" />
<text  x="1190.83" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (26 samples, 0.13%)</title><rect x="819.4" y="2021" width="1.5" height="15.0" fill="rgb(212,229,43)" rx="2" ry="2" />
<text  x="822.41" y="2031.5" ></text>
</g>
<g >
<title>__asan::GetMallocContextSize (4 samples, 0.02%)</title><rect x="597.4" y="1877" width="0.2" height="15.0" fill="rgb(238,67,16)" rx="2" ry="2" />
<text  x="600.39" y="1887.5" ></text>
</g>
<g >
<title>__asan_memmove (3 samples, 0.01%)</title><rect x="321.0" y="1941" width="0.2" height="15.0" fill="rgb(223,219,51)" rx="2" ry="2" />
<text  x="324.04" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="161.9" y="1701" width="0.2" height="15.0" fill="rgb(216,130,47)" rx="2" ry="2" />
<text  x="164.86" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="217.5" y="1221" width="0.2" height="15.0" fill="rgb(224,121,53)" rx="2" ry="2" />
<text  x="220.54" y="1231.5" ></text>
</g>
<g >
<title>__x64_sys_futex (7 samples, 0.03%)</title><rect x="132.5" y="1925" width="0.4" height="15.0" fill="rgb(254,112,9)" rx="2" ry="2" />
<text  x="135.50" y="1935.5" ></text>
</g>
<g >
<title>std::basic_ifstream&lt;char, std::char_traits&lt;char&gt; &gt;::~basic_ifstream (32 samples, 0.16%)</title><rect x="874.1" y="2037" width="1.9" height="15.0" fill="rgb(221,179,41)" rx="2" ry="2" />
<text  x="877.15" y="2047.5" ></text>
</g>
<g >
<title>unmap_region (7 samples, 0.03%)</title><rect x="768.8" y="1893" width="0.4" height="15.0" fill="rgb(233,110,22)" rx="2" ry="2" />
<text  x="771.83" y="1903.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::future&lt;std::result_of&lt;Annotate (3 samples, 0.01%)</title><rect x="27.7" y="2021" width="0.2" height="15.0" fill="rgb(243,23,45)" rx="2" ry="2" />
<text  x="30.70" y="2031.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (2 samples, 0.01%)</title><rect x="92.2" y="2005" width="0.1" height="15.0" fill="rgb(227,8,53)" rx="2" ry="2" />
<text  x="95.23" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.03%)</title><rect x="1186.5" y="101" width="0.4" height="15.0" fill="rgb(229,187,40)" rx="2" ry="2" />
<text  x="1189.48" y="111.5" ></text>
</g>
<g >
<title>x2apic_send_IPI (3 samples, 0.01%)</title><rect x="526.2" y="1781" width="0.2" height="15.0" fill="rgb(245,111,33)" rx="2" ry="2" />
<text  x="529.18" y="1791.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (263 samples, 1.31%)</title><rect x="54.4" y="37" width="15.4" height="15.0" fill="rgb(229,101,49)" rx="2" ry="2" />
<text  x="57.37" y="47.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (4 samples, 0.02%)</title><rect x="576.4" y="1925" width="0.2" height="15.0" fill="rgb(243,195,32)" rx="2" ry="2" />
<text  x="579.35" y="1935.5" ></text>
</g>
<g >
<title>__do_page_fault (10 samples, 0.05%)</title><rect x="106.1" y="1989" width="0.5" height="15.0" fill="rgb(232,74,9)" rx="2" ry="2" />
<text  x="109.06" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1186.5" y="469" width="0.4" height="15.0" fill="rgb(240,70,39)" rx="2" ry="2" />
<text  x="1189.48" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1187.3" y="709" width="0.4" height="15.0" fill="rgb(231,168,19)" rx="2" ry="2" />
<text  x="1190.30" y="719.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (3 samples, 0.01%)</title><rect x="200.8" y="1621" width="0.2" height="15.0" fill="rgb(236,55,33)" rx="2" ry="2" />
<text  x="203.83" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1186.2" y="1957" width="0.2" height="15.0" fill="rgb(233,198,38)" rx="2" ry="2" />
<text  x="1189.25" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3 samples, 0.01%)</title><rect x="160.8" y="1797" width="0.2" height="15.0" fill="rgb(231,76,36)" rx="2" ry="2" />
<text  x="163.80" y="1807.5" ></text>
</g>
<g >
<title>__lsan::GetUserBegin (6 samples, 0.03%)</title><rect x="524.5" y="2037" width="0.4" height="15.0" fill="rgb(209,6,31)" rx="2" ry="2" />
<text  x="527.54" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.3" y="1445" width="0.4" height="15.0" fill="rgb(230,91,44)" rx="2" ry="2" />
<text  x="1190.30" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="1187.1" y="421" width="0.1" height="15.0" fill="rgb(210,56,0)" rx="2" ry="2" />
<text  x="1190.07" y="431.5" ></text>
</g>
<g >
<title>[unknown] (431 samples, 2.14%)</title><rect x="54.3" y="1317" width="25.3" height="15.0" fill="rgb(253,19,29)" rx="2" ry="2" />
<text  x="57.31" y="1327.5" >[..</text>
</g>
<g >
<title>[unknown] (603 samples, 3.00%)</title><rect x="54.3" y="1893" width="35.4" height="15.0" fill="rgb(237,119,39)" rx="2" ry="2" />
<text  x="57.31" y="1903.5" >[u..</text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (3 samples, 0.01%)</title><rect x="83.4" y="1509" width="0.2" height="15.0" fill="rgb(252,120,6)" rx="2" ry="2" />
<text  x="86.38" y="1519.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (3 samples, 0.01%)</title><rect x="946.4" y="1893" width="0.1" height="15.0" fill="rgb(223,164,28)" rx="2" ry="2" />
<text  x="949.36" y="1903.5" ></text>
</g>
<g >
<title>Eigen::DenseCoeffsBase&lt;Eigen::Transpose&lt;Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_sum_op&lt;float, float&gt;, Eigen::Product&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0&gt; const, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const&gt;, 0&gt;::coeff (4 samples, 0.02%)</title><rect x="41.8" y="2037" width="0.3" height="15.0" fill="rgb(226,223,40)" rx="2" ry="2" />
<text  x="44.83" y="2047.5" ></text>
</g>
<g >
<title>__pthread_getspecific (2 samples, 0.01%)</title><rect x="153.0" y="1637" width="0.1" height="15.0" fill="rgb(206,70,30)" rx="2" ry="2" />
<text  x="156.01" y="1647.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_Alloc_node&gt; (4 samples, 0.02%)</title><rect x="522.6" y="1941" width="0.2" height="15.0" fill="rgb(251,208,53)" rx="2" ry="2" />
<text  x="525.61" y="1951.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="89.1" y="1861" width="0.1" height="15.0" fill="rgb(229,43,41)" rx="2" ry="2" />
<text  x="92.12" y="1871.5" ></text>
</g>
<g >
<title>__do_munmap (2 samples, 0.01%)</title><rect x="89.0" y="1765" width="0.1" height="15.0" fill="rgb(216,186,5)" rx="2" ry="2" />
<text  x="92.01" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (8 samples, 0.04%)</title><rect x="1186.4" y="1973" width="0.5" height="15.0" fill="rgb(240,100,39)" rx="2" ry="2" />
<text  x="1189.42" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (630 samples, 3.13%)</title><rect x="54.3" y="1973" width="36.9" height="15.0" fill="rgb(220,8,18)" rx="2" ry="2" />
<text  x="57.31" y="1983.5" >[un..</text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (2 samples, 0.01%)</title><rect x="769.0" y="1829" width="0.1" height="15.0" fill="rgb(251,36,0)" rx="2" ry="2" />
<text  x="772.00" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1187.2" y="1653" width="0.5" height="15.0" fill="rgb(230,72,18)" rx="2" ry="2" />
<text  x="1190.25" y="1663.5" ></text>
</g>
<g >
<title>__lsan::CollectIgnoredCb (7 samples, 0.03%)</title><rect x="523.5" y="2037" width="0.4" height="15.0" fill="rgb(240,216,26)" rx="2" ry="2" />
<text  x="526.48" y="2047.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::Dictionary (32 samples, 0.16%)</title><rect x="874.1" y="2005" width="1.9" height="15.0" fill="rgb(205,86,53)" rx="2" ry="2" />
<text  x="877.15" y="2015.5" ></text>
</g>
<g >
<title>page_fault (2 samples, 0.01%)</title><rect x="1024.6" y="2037" width="0.1" height="15.0" fill="rgb(214,119,44)" rx="2" ry="2" />
<text  x="1027.60" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (68 samples, 0.34%)</title><rect x="172.7" y="1653" width="4.0" height="15.0" fill="rgb(252,23,54)" rx="2" ry="2" />
<text  x="175.70" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="1187.1" y="389" width="0.1" height="15.0" fill="rgb(218,26,2)" rx="2" ry="2" />
<text  x="1190.07" y="399.5" ></text>
</g>
<g >
<title>[unknown] (387 samples, 1.92%)</title><rect x="54.3" y="1157" width="22.7" height="15.0" fill="rgb(245,129,25)" rx="2" ry="2" />
<text  x="57.31" y="1167.5" >[..</text>
</g>
<g >
<title>operator new (7 samples, 0.03%)</title><rect x="143.3" y="1589" width="0.4" height="15.0" fill="rgb(228,229,22)" rx="2" ry="2" />
<text  x="146.28" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.01%)</title><rect x="27.3" y="2037" width="0.2" height="15.0" fill="rgb(254,174,27)" rx="2" ry="2" />
<text  x="30.35" y="2047.5" ></text>
</g>
<g >
<title>native_flush_tlb_others (2 samples, 0.01%)</title><rect x="79.8" y="1141" width="0.1" height="15.0" fill="rgb(208,10,37)" rx="2" ry="2" />
<text  x="82.80" y="1151.5" ></text>
</g>
<g >
<title>fasttext::Model::predict (4 samples, 0.02%)</title><rect x="771.6" y="2037" width="0.3" height="15.0" fill="rgb(239,53,30)" rx="2" ry="2" />
<text  x="774.64" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.3" y="1205" width="0.4" height="15.0" fill="rgb(241,177,54)" rx="2" ry="2" />
<text  x="1190.30" y="1215.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (6 samples, 0.03%)</title><rect x="162.3" y="1653" width="0.3" height="15.0" fill="rgb(229,153,28)" rx="2" ry="2" />
<text  x="165.27" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1186.9" y="1957" width="0.3" height="15.0" fill="rgb(236,16,41)" rx="2" ry="2" />
<text  x="1189.89" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (2 samples, 0.01%)</title><rect x="161.0" y="1877" width="0.1" height="15.0" fill="rgb(244,120,35)" rx="2" ry="2" />
<text  x="163.98" y="1887.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (4 samples, 0.02%)</title><rect x="661.0" y="1765" width="0.3" height="15.0" fill="rgb(246,196,28)" rx="2" ry="2" />
<text  x="664.04" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1186.5" y="1621" width="0.4" height="15.0" fill="rgb(236,209,24)" rx="2" ry="2" />
<text  x="1189.48" y="1631.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (7 samples, 0.03%)</title><rect x="143.7" y="1589" width="0.5" height="15.0" fill="rgb(206,86,36)" rx="2" ry="2" />
<text  x="146.75" y="1599.5" ></text>
</g>
<g >
<title>__asan_memcpy (3 samples, 0.01%)</title><rect x="213.1" y="1669" width="0.2" height="15.0" fill="rgb(228,86,41)" rx="2" ry="2" />
<text  x="216.14" y="1679.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="89.0" y="1829" width="0.1" height="15.0" fill="rgb(253,4,37)" rx="2" ry="2" />
<text  x="92.01" y="1839.5" ></text>
</g>
<g >
<title>__asan::Allocator::Deallocate (3 samples, 0.01%)</title><rect x="192.0" y="1557" width="0.2" height="15.0" fill="rgb(220,72,43)" rx="2" ry="2" />
<text  x="194.98" y="1567.5" ></text>
</g>
<g >
<title>onmt::unicode::is_letter (217 samples, 1.08%)</title><rect x="713.6" y="1877" width="12.7" height="15.0" fill="rgb(214,224,17)" rx="2" ry="2" />
<text  x="716.62" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (93 samples, 0.46%)</title><rect x="182.0" y="1733" width="5.4" height="15.0" fill="rgb(224,106,19)" rx="2" ry="2" />
<text  x="184.96" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1187.3" y="1285" width="0.4" height="15.0" fill="rgb(236,114,0)" rx="2" ry="2" />
<text  x="1190.30" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (434 samples, 2.16%)</title><rect x="162.3" y="1845" width="25.4" height="15.0" fill="rgb(232,217,29)" rx="2" ry="2" />
<text  x="165.27" y="1855.5" >s..</text>
</g>
<g >
<title>[libc-2.27.so] (3 samples, 0.01%)</title><rect x="329.9" y="1957" width="0.2" height="15.0" fill="rgb(239,203,37)" rx="2" ry="2" />
<text  x="332.89" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.03%)</title><rect x="1187.2" y="1861" width="0.5" height="15.0" fill="rgb(248,30,54)" rx="2" ry="2" />
<text  x="1190.25" y="1871.5" ></text>
</g>
<g >
<title>onmt::unicode::get_case (5 samples, 0.02%)</title><rect x="737.6" y="1893" width="0.3" height="15.0" fill="rgb(249,155,18)" rx="2" ry="2" />
<text  x="740.59" y="1903.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (2 samples, 0.01%)</title><rect x="1100.1" y="1845" width="0.1" height="15.0" fill="rgb(207,224,19)" rx="2" ry="2" />
<text  x="1103.09" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="1187.1" y="949" width="0.1" height="15.0" fill="rgb(240,111,47)" rx="2" ry="2" />
<text  x="1190.07" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="161.7" y="1797" width="0.4" height="15.0" fill="rgb(244,104,7)" rx="2" ry="2" />
<text  x="164.68" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.3" y="1557" width="0.4" height="15.0" fill="rgb(212,83,9)" rx="2" ry="2" />
<text  x="1190.30" y="1567.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (6 samples, 0.03%)</title><rect x="576.6" y="1925" width="0.3" height="15.0" fill="rgb(226,54,28)" rx="2" ry="2" />
<text  x="579.59" y="1935.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (2 samples, 0.01%)</title><rect x="1098.2" y="1829" width="0.1" height="15.0" fill="rgb(221,196,31)" rx="2" ry="2" />
<text  x="1101.22" y="1839.5" ></text>
</g>
<g >
<title>schedule (5 samples, 0.02%)</title><rect x="132.6" y="1861" width="0.2" height="15.0" fill="rgb(251,191,44)" rx="2" ry="2" />
<text  x="135.55" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1187.3" y="421" width="0.4" height="15.0" fill="rgb(206,158,31)" rx="2" ry="2" />
<text  x="1190.30" y="431.5" ></text>
</g>
<g >
<title>__sanitizer::MonotonicNanoTime (4 samples, 0.02%)</title><rect x="1019.4" y="2053" width="0.2" height="15.0" fill="rgb(233,218,16)" rx="2" ry="2" />
<text  x="1022.39" y="2063.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (14 samples, 0.07%)</title><rect x="25.7" y="1941" width="0.8" height="15.0" fill="rgb(235,177,11)" rx="2" ry="2" />
<text  x="28.71" y="1951.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::json_value::destroy (8 samples, 0.04%)</title><rect x="521.8" y="1989" width="0.5" height="15.0" fill="rgb(220,101,51)" rx="2" ry="2" />
<text  x="524.84" y="1999.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="75.6" y="1013" width="0.2" height="15.0" fill="rgb(215,197,6)" rx="2" ry="2" />
<text  x="78.64" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.02%)</title><rect x="188.4" y="1845" width="0.3" height="15.0" fill="rgb(208,23,38)" rx="2" ry="2" />
<text  x="191.41" y="1855.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.01%)</title><rect x="133.7" y="1605" width="0.1" height="15.0" fill="rgb(220,154,30)" rx="2" ry="2" />
<text  x="136.73" y="1615.5" ></text>
</g>
<g >
<title>operator delete[] (4 samples, 0.02%)</title><rect x="1107.8" y="2053" width="0.3" height="15.0" fill="rgb(251,102,13)" rx="2" ry="2" />
<text  x="1110.83" y="2063.5" ></text>
</g>
<g >
<title>fasttext::Vector::mul (64 samples, 0.32%)</title><rect x="803.9" y="2037" width="3.8" height="15.0" fill="rgb(231,218,42)" rx="2" ry="2" />
<text  x="806.93" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1186.5" y="1045" width="0.4" height="15.0" fill="rgb(253,141,48)" rx="2" ry="2" />
<text  x="1189.48" y="1055.5" ></text>
</g>
<g >
<title>__pthread_getspecific (4 samples, 0.02%)</title><rect x="213.8" y="1669" width="0.3" height="15.0" fill="rgb(236,4,9)" rx="2" ry="2" />
<text  x="216.85" y="1679.5" ></text>
</g>
<g >
<title>alloc_pages_vma (2 samples, 0.01%)</title><rect x="1024.6" y="1957" width="0.1" height="15.0" fill="rgb(236,158,32)" rx="2" ry="2" />
<text  x="1027.60" y="1967.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (4 samples, 0.02%)</title><rect x="79.7" y="1205" width="0.3" height="15.0" fill="rgb(215,54,11)" rx="2" ry="2" />
<text  x="82.75" y="1215.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_stringbuf (32 samples, 0.16%)</title><rect x="814.6" y="2037" width="1.9" height="15.0" fill="rgb(241,165,33)" rx="2" ry="2" />
<text  x="817.60" y="2047.5" ></text>
</g>
<g >
<title>std::locale::~locale (2 samples, 0.01%)</title><rect x="335.1" y="1989" width="0.1" height="15.0" fill="rgb(223,73,10)" rx="2" ry="2" />
<text  x="338.11" y="1999.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (7 samples, 0.03%)</title><rect x="28.2" y="1877" width="0.4" height="15.0" fill="rgb(207,169,10)" rx="2" ry="2" />
<text  x="31.17" y="1887.5" ></text>
</g>
<g >
<title>vfs_read (3 samples, 0.01%)</title><rect x="1108.4" y="1957" width="0.2" height="15.0" fill="rgb(213,92,35)" rx="2" ry="2" />
<text  x="1111.41" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (89 samples, 0.44%)</title><rect x="144.9" y="1717" width="5.2" height="15.0" fill="rgb(215,112,0)" rx="2" ry="2" />
<text  x="147.92" y="1727.5" ></text>
</g>
<g >
<title>__vm_munmap (2 samples, 0.01%)</title><rect x="82.1" y="1381" width="0.1" height="15.0" fill="rgb(245,61,24)" rx="2" ry="2" />
<text  x="85.09" y="1391.5" ></text>
</g>
<g >
<title>__do_page_fault (3 samples, 0.01%)</title><rect x="1100.4" y="1989" width="0.2" height="15.0" fill="rgb(243,141,7)" rx="2" ry="2" />
<text  x="1103.38" y="1999.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="86.1" y="1669" width="0.1" height="15.0" fill="rgb(254,5,22)" rx="2" ry="2" />
<text  x="89.08" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (75 samples, 0.37%)</title><rect x="201.4" y="1717" width="4.4" height="15.0" fill="rgb(210,107,19)" rx="2" ry="2" />
<text  x="204.42" y="1727.5" ></text>
</g>
<g >
<title>fasttext::FastText::createLoss (8 samples, 0.04%)</title><rect x="520.1" y="1973" width="0.5" height="15.0" fill="rgb(247,229,46)" rx="2" ry="2" />
<text  x="523.08" y="1983.5" ></text>
</g>
<g >
<title>fasttext::Vector::Vector (3 samples, 0.01%)</title><rect x="803.3" y="2037" width="0.2" height="15.0" fill="rgb(252,126,47)" rx="2" ry="2" />
<text  x="806.35" y="2047.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (2 samples, 0.01%)</title><rect x="87.5" y="1749" width="0.2" height="15.0" fill="rgb(223,87,31)" rx="2" ry="2" />
<text  x="90.54" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (346 samples, 1.72%)</title><rect x="54.4" y="133" width="20.2" height="15.0" fill="rgb(225,129,54)" rx="2" ry="2" />
<text  x="57.37" y="143.5" ></text>
</g>
<g >
<title>try_charge (4 samples, 0.02%)</title><rect x="684.4" y="1733" width="0.2" height="15.0" fill="rgb(246,17,52)" rx="2" ry="2" />
<text  x="687.37" y="1743.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (53 samples, 0.26%)</title><rect x="169.0" y="1589" width="3.1" height="15.0" fill="rgb(230,186,21)" rx="2" ry="2" />
<text  x="172.01" y="1599.5" ></text>
</g>
<g >
<title>operator delete[] (56 samples, 0.28%)</title><rect x="1179.0" y="2037" width="3.3" height="15.0" fill="rgb(248,71,16)" rx="2" ry="2" />
<text  x="1181.98" y="2047.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (4 samples, 0.02%)</title><rect x="78.1" y="1221" width="0.2" height="15.0" fill="rgb(208,28,49)" rx="2" ry="2" />
<text  x="81.11" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.03%)</title><rect x="1186.5" y="821" width="0.4" height="15.0" fill="rgb(227,45,5)" rx="2" ry="2" />
<text  x="1189.48" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (60 samples, 0.30%)</title><rect x="173.2" y="1621" width="3.5" height="15.0" fill="rgb(232,80,0)" rx="2" ry="2" />
<text  x="176.17" y="1631.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (2 samples, 0.01%)</title><rect x="133.4" y="1637" width="0.2" height="15.0" fill="rgb(227,126,23)" rx="2" ry="2" />
<text  x="136.43" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="1187.0" y="1685" width="0.2" height="15.0" fill="rgb(252,52,29)" rx="2" ry="2" />
<text  x="1190.01" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="217.5" y="1525" width="0.2" height="15.0" fill="rgb(221,15,9)" rx="2" ry="2" />
<text  x="220.48" y="1535.5" ></text>
</g>
<g >
<title>smp_call_function_many (3 samples, 0.01%)</title><rect x="526.2" y="1845" width="0.2" height="15.0" fill="rgb(243,155,9)" rx="2" ry="2" />
<text  x="529.18" y="1855.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.02%)</title><rect x="143.0" y="1589" width="0.3" height="15.0" fill="rgb(210,154,11)" rx="2" ry="2" />
<text  x="146.05" y="1599.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="160.6" y="1701" width="0.1" height="15.0" fill="rgb(242,105,41)" rx="2" ry="2" />
<text  x="163.63" y="1711.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (5 samples, 0.02%)</title><rect x="76.5" y="1141" width="0.3" height="15.0" fill="rgb(239,114,24)" rx="2" ry="2" />
<text  x="79.52" y="1151.5" ></text>
</g>
<g >
<title>smp_call_function_single (2 samples, 0.01%)</title><rect x="79.8" y="1077" width="0.1" height="15.0" fill="rgb(233,155,51)" rx="2" ry="2" />
<text  x="82.80" y="1087.5" ></text>
</g>
<g >
<title>[unknown] (359 samples, 1.78%)</title><rect x="54.4" y="885" width="21.0" height="15.0" fill="rgb(215,15,27)" rx="2" ry="2" />
<text  x="57.37" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (4 samples, 0.02%)</title><rect x="161.3" y="1813" width="0.2" height="15.0" fill="rgb(216,64,20)" rx="2" ry="2" />
<text  x="164.27" y="1823.5" ></text>
</g>
<g >
<title>lru_add_drain_cpu (4 samples, 0.02%)</title><rect x="768.9" y="1861" width="0.2" height="15.0" fill="rgb(251,64,25)" rx="2" ry="2" />
<text  x="771.89" y="1871.5" ></text>
</g>
<g >
<title>__pthread_getspecific (37 samples, 0.18%)</title><rect x="527.0" y="2037" width="2.2" height="15.0" fill="rgb(253,224,43)" rx="2" ry="2" />
<text  x="530.00" y="2047.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int const&amp;&gt; (2 samples, 0.01%)</title><rect x="876.6" y="2037" width="0.1" height="15.0" fill="rgb(252,202,26)" rx="2" ry="2" />
<text  x="879.55" y="2047.5" ></text>
</g>
<g >
<title>__sanitizer::internal_memmove (2 samples, 0.01%)</title><rect x="1187.9" y="2037" width="0.2" height="15.0" fill="rgb(224,180,25)" rx="2" ry="2" />
<text  x="1190.95" y="2047.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.02%)</title><rect x="493.9" y="1941" width="0.3" height="15.0" fill="rgb(207,191,48)" rx="2" ry="2" />
<text  x="496.94" y="1951.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (2 samples, 0.01%)</title><rect x="81.6" y="1429" width="0.1" height="15.0" fill="rgb(254,43,25)" rx="2" ry="2" />
<text  x="84.62" y="1439.5" ></text>
</g>
<g >
<title>__sanitizer::mem_is_zero (2 samples, 0.01%)</title><rect x="324.6" y="1941" width="0.1" height="15.0" fill="rgb(238,131,26)" rx="2" ry="2" />
<text  x="327.62" y="1951.5" ></text>
</g>
<g >
<title>mem_cgroup_from_task (2 samples, 0.01%)</title><rect x="26.6" y="1989" width="0.2" height="15.0" fill="rgb(236,192,27)" rx="2" ry="2" />
<text  x="29.65" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (89 samples, 0.44%)</title><rect x="144.9" y="1733" width="5.2" height="15.0" fill="rgb(231,115,14)" rx="2" ry="2" />
<text  x="147.92" y="1743.5" ></text>
</g>
<g >
<title>fasttext::QuantMatrix::addRowToVector (43 samples, 0.21%)</title><rect x="1101.1" y="2053" width="2.6" height="15.0" fill="rgb(207,168,9)" rx="2" ry="2" />
<text  x="1104.15" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (94 samples, 0.47%)</title><rect x="162.3" y="1701" width="5.5" height="15.0" fill="rgb(227,81,2)" rx="2" ry="2" />
<text  x="165.27" y="1711.5" ></text>
</g>
<g >
<title>GetHost (493 samples, 2.45%)</title><rect x="133.3" y="1973" width="28.9" height="15.0" fill="rgb(247,47,31)" rx="2" ry="2" />
<text  x="136.26" y="1983.5" >Ge..</text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::reserve (2 samples, 0.01%)</title><rect x="639.1" y="1877" width="0.1" height="15.0" fill="rgb(214,193,51)" rx="2" ry="2" />
<text  x="642.12" y="1887.5" ></text>
</g>
<g >
<title>__schedule (2 samples, 0.01%)</title><rect x="28.6" y="1925" width="0.1" height="15.0" fill="rgb(246,192,12)" rx="2" ry="2" />
<text  x="31.58" y="1935.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="80.5" y="1365" width="0.1" height="15.0" fill="rgb(222,31,23)" rx="2" ry="2" />
<text  x="83.51" y="1375.5" ></text>
</g>
<g >
<title>__interceptor_memchr (6 samples, 0.03%)</title><rect x="1144.6" y="2037" width="0.4" height="15.0" fill="rgb(211,192,29)" rx="2" ry="2" />
<text  x="1147.64" y="2047.5" ></text>
</g>
<g >
<title>__madvise (2 samples, 0.01%)</title><rect x="88.4" y="1813" width="0.1" height="15.0" fill="rgb(205,79,20)" rx="2" ry="2" />
<text  x="91.36" y="1823.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (256 samples, 1.27%)</title><rect x="740.0" y="1893" width="15.0" height="15.0" fill="rgb(206,42,12)" rx="2" ry="2" />
<text  x="742.99" y="1903.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::getSubwords (194 samples, 0.96%)</title><rect x="315.2" y="1957" width="11.4" height="15.0" fill="rgb(218,183,53)" rx="2" ry="2" />
<text  x="318.18" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_Compiler (473 samples, 2.35%)</title><rect x="189.5" y="1941" width="27.7" height="15.0" fill="rgb(237,63,9)" rx="2" ry="2" />
<text  x="192.52" y="1951.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="188.5" y="1765" width="0.2" height="15.0" fill="rgb(248,206,27)" rx="2" ry="2" />
<text  x="191.47" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="1187.1" y="773" width="0.1" height="15.0" fill="rgb(218,66,8)" rx="2" ry="2" />
<text  x="1190.07" y="783.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::_M_do_set (3,919 samples, 19.47%)</title><rect x="529.2" y="2021" width="229.7" height="15.0" fill="rgb(234,87,49)" rx="2" ry="2" />
<text  x="532.23" y="2031.5" >std::__future_base::_State_bas..</text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64LocalCache&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&gt; &gt;::Deallocate (2 samples, 0.01%)</title><rect x="87.1" y="1717" width="0.1" height="15.0" fill="rgb(232,92,43)" rx="2" ry="2" />
<text  x="90.13" y="1727.5" ></text>
</g>
<g >
<title>__sanitizer::internal_memmove (23 samples, 0.11%)</title><rect x="490.9" y="1925" width="1.3" height="15.0" fill="rgb(214,174,37)" rx="2" ry="2" />
<text  x="493.90" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (350 samples, 1.74%)</title><rect x="54.4" y="453" width="20.5" height="15.0" fill="rgb(235,15,30)" rx="2" ry="2" />
<text  x="57.37" y="463.5" ></text>
</g>
<g >
<title>TFastTextEmbedder::GetSentenceEmbedding (1,927 samples, 9.57%)</title><rect x="217.8" y="1989" width="113.0" height="15.0" fill="rgb(253,88,28)" rx="2" ry="2" />
<text  x="220.83" y="1999.5" >TFastTextEmbe..</text>
</g>
<g >
<title>__asan::AsanTSDGet (6 samples, 0.03%)</title><rect x="1118.7" y="2037" width="0.3" height="15.0" fill="rgb(231,163,32)" rx="2" ry="2" />
<text  x="1121.67" y="2047.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (3 samples, 0.01%)</title><rect x="807.7" y="2005" width="0.2" height="15.0" fill="rgb(221,5,9)" rx="2" ry="2" />
<text  x="810.69" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (10 samples, 0.05%)</title><rect x="770.7" y="2021" width="0.6" height="15.0" fill="rgb(247,213,28)" rx="2" ry="2" />
<text  x="773.70" y="2031.5" ></text>
</g>
<g >
<title>do_page_fault (10 samples, 0.05%)</title><rect x="1018.7" y="2021" width="0.6" height="15.0" fill="rgb(237,160,47)" rx="2" ry="2" />
<text  x="1021.74" y="2031.5" ></text>
</g>
<g >
<title>wp_page_copy (2 samples, 0.01%)</title><rect x="54.1" y="1909" width="0.2" height="15.0" fill="rgb(223,226,10)" rx="2" ry="2" />
<text  x="57.13" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (79 samples, 0.39%)</title><rect x="176.9" y="1749" width="4.7" height="15.0" fill="rgb(224,197,16)" rx="2" ry="2" />
<text  x="179.92" y="1759.5" ></text>
</g>
<g >
<title>__do_page_fault (40 samples, 0.20%)</title><rect x="511.9" y="1925" width="2.3" height="15.0" fill="rgb(253,63,46)" rx="2" ry="2" />
<text  x="514.88" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.03%)</title><rect x="1186.5" y="389" width="0.4" height="15.0" fill="rgb(245,168,9)" rx="2" ry="2" />
<text  x="1189.48" y="399.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="75.1" y="613" width="0.1" height="15.0" fill="rgb(244,206,5)" rx="2" ry="2" />
<text  x="78.12" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.3" y="213" width="0.4" height="15.0" fill="rgb(226,134,17)" rx="2" ry="2" />
<text  x="1190.30" y="223.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (5 samples, 0.02%)</title><rect x="212.9" y="1669" width="0.2" height="15.0" fill="rgb(242,194,23)" rx="2" ry="2" />
<text  x="215.85" y="1679.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::at (2 samples, 0.01%)</title><rect x="122.9" y="1957" width="0.2" height="15.0" fill="rgb(233,210,9)" rx="2" ry="2" />
<text  x="125.94" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1186.5" y="1477" width="0.4" height="15.0" fill="rgb(211,143,5)" rx="2" ry="2" />
<text  x="1189.48" y="1487.5" ></text>
</g>
<g >
<title>do_page_fault (13 samples, 0.06%)</title><rect x="660.7" y="1845" width="0.8" height="15.0" fill="rgb(246,162,51)" rx="2" ry="2" />
<text  x="663.69" y="1855.5" ></text>
</g>
<g >
<title>main (6,838 samples, 33.96%)</title><rect x="122.7" y="2021" width="400.8" height="15.0" fill="rgb(252,186,32)" rx="2" ry="2" />
<text  x="125.71" y="2031.5" >main</text>
</g>
<g >
<title>smp_apic_timer_interrupt (3 samples, 0.01%)</title><rect x="941.7" y="2021" width="0.1" height="15.0" fill="rgb(237,181,35)" rx="2" ry="2" />
<text  x="944.67" y="2031.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::basic_json (4 samples, 0.02%)</title><rect x="522.6" y="1893" width="0.2" height="15.0" fill="rgb(218,178,23)" rx="2" ry="2" />
<text  x="525.61" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.3" y="485" width="0.4" height="15.0" fill="rgb(222,218,54)" rx="2" ry="2" />
<text  x="1190.30" y="495.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (5 samples, 0.02%)</title><rect x="684.3" y="1749" width="0.3" height="15.0" fill="rgb(219,186,11)" rx="2" ry="2" />
<text  x="687.31" y="1759.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (4 samples, 0.02%)</title><rect x="875.5" y="1957" width="0.2" height="15.0" fill="rgb(226,90,25)" rx="2" ry="2" />
<text  x="878.50" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (2 samples, 0.01%)</title><rect x="161.1" y="1813" width="0.1" height="15.0" fill="rgb(207,114,31)" rx="2" ry="2" />
<text  x="164.10" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.01%)</title><rect x="873.6" y="2021" width="0.2" height="15.0" fill="rgb(238,113,13)" rx="2" ry="2" />
<text  x="876.62" y="2031.5" ></text>
</g>
<g >
<title>__do_munmap (3 samples, 0.01%)</title><rect x="1099.4" y="1973" width="0.2" height="15.0" fill="rgb(208,77,17)" rx="2" ry="2" />
<text  x="1102.39" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (449 samples, 2.23%)</title><rect x="189.7" y="1861" width="26.3" height="15.0" fill="rgb(222,219,22)" rx="2" ry="2" />
<text  x="192.70" y="1871.5" >s..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (99 samples, 0.49%)</title><rect x="195.3" y="1653" width="5.8" height="15.0" fill="rgb(238,138,7)" rx="2" ry="2" />
<text  x="198.27" y="1663.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (54 samples, 0.27%)</title><rect x="212.2" y="1685" width="3.2" height="15.0" fill="rgb(216,148,11)" rx="2" ry="2" />
<text  x="215.21" y="1695.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (3 samples, 0.01%)</title><rect x="53.6" y="1893" width="0.2" height="15.0" fill="rgb(247,176,18)" rx="2" ry="2" />
<text  x="56.61" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="1187.1" y="293" width="0.1" height="15.0" fill="rgb(240,83,28)" rx="2" ry="2" />
<text  x="1190.07" y="303.5" ></text>
</g>
<g >
<title>clear_page_erms (2 samples, 0.01%)</title><rect x="683.9" y="1733" width="0.1" height="15.0" fill="rgb(231,28,4)" rx="2" ry="2" />
<text  x="686.90" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1186.5" y="1573" width="0.4" height="15.0" fill="rgb(209,221,3)" rx="2" ry="2" />
<text  x="1189.48" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (496 samples, 2.46%)</title><rect x="54.3" y="1509" width="29.1" height="15.0" fill="rgb(208,178,2)" rx="2" ry="2" />
<text  x="57.31" y="1519.5" >[u..</text>
</g>
<g >
<title>arch_tlb_finish_mmu (2 samples, 0.01%)</title><rect x="88.4" y="1717" width="0.1" height="15.0" fill="rgb(214,190,25)" rx="2" ry="2" />
<text  x="91.36" y="1727.5" ></text>
</g>
<g >
<title>handle_mm_fault (2 samples, 0.01%)</title><rect x="875.6" y="1893" width="0.1" height="15.0" fill="rgb(225,223,29)" rx="2" ry="2" />
<text  x="878.61" y="1903.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (3 samples, 0.01%)</title><rect x="766.3" y="1941" width="0.2" height="15.0" fill="rgb(249,122,12)" rx="2" ry="2" />
<text  x="769.31" y="1951.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;std::__detail::_State&lt;char&gt; const*, std::__detail::_State&lt;char&gt;*&gt; (7 samples, 0.03%)</title><rect x="133.4" y="1653" width="0.4" height="15.0" fill="rgb(226,103,33)" rx="2" ry="2" />
<text  x="136.43" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (177 samples, 0.88%)</title><rect x="162.3" y="1733" width="10.3" height="15.0" fill="rgb(253,33,53)" rx="2" ry="2" />
<text  x="165.27" y="1743.5" ></text>
</g>
<g >
<title>do_page_fault (2 samples, 0.01%)</title><rect x="1024.6" y="2021" width="0.1" height="15.0" fill="rgb(247,69,29)" rx="2" ry="2" />
<text  x="1027.60" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.03%)</title><rect x="1186.5" y="1445" width="0.4" height="15.0" fill="rgb(250,106,1)" rx="2" ry="2" />
<text  x="1189.48" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.3" y="1157" width="0.4" height="15.0" fill="rgb(237,78,28)" rx="2" ry="2" />
<text  x="1190.30" y="1167.5" ></text>
</g>
<g >
<title>__asan_memcpy (4 samples, 0.02%)</title><rect x="611.2" y="1861" width="0.3" height="15.0" fill="rgb(206,67,13)" rx="2" ry="2" />
<text  x="614.22" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (92 samples, 0.46%)</title><rect x="182.0" y="1701" width="5.4" height="15.0" fill="rgb(226,79,28)" rx="2" ry="2" />
<text  x="184.96" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="161.9" y="1445" width="0.2" height="15.0" fill="rgb(225,143,33)" rx="2" ry="2" />
<text  x="164.92" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="161.7" y="1733" width="0.2" height="15.0" fill="rgb(241,159,22)" rx="2" ry="2" />
<text  x="164.68" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="217.3" y="1893" width="0.4" height="15.0" fill="rgb(234,153,37)" rx="2" ry="2" />
<text  x="220.30" y="1903.5" ></text>
</g>
<g >
<title>__do_page_fault (5 samples, 0.02%)</title><rect x="1189.5" y="1989" width="0.3" height="15.0" fill="rgb(226,38,20)" rx="2" ry="2" />
<text  x="1192.47" y="1999.5" ></text>
</g>
<g >
<title>__asan::GetMallocContextSize (2 samples, 0.01%)</title><rect x="1119.1" y="2037" width="0.1" height="15.0" fill="rgb(206,41,39)" rx="2" ry="2" />
<text  x="1122.08" y="2047.5" ></text>
</g>
<g >
<title>[tgnews] (223 samples, 1.11%)</title><rect x="28.7" y="2053" width="13.1" height="15.0" fill="rgb(220,213,51)" rx="2" ry="2" />
<text  x="31.70" y="2063.5" ></text>
</g>
<g >
<title>alloc_pages_vma (10 samples, 0.05%)</title><rect x="697.4" y="1765" width="0.6" height="15.0" fill="rgb(242,213,44)" rx="2" ry="2" />
<text  x="700.44" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.01%)</title><rect x="1187.1" y="261" width="0.1" height="15.0" fill="rgb(241,21,53)" rx="2" ry="2" />
<text  x="1190.07" y="271.5" ></text>
</g>
<g >
<title>__asan_memcpy (4 samples, 0.02%)</title><rect x="185.0" y="1653" width="0.2" height="15.0" fill="rgb(219,161,37)" rx="2" ry="2" />
<text  x="187.95" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (14 samples, 0.07%)</title><rect x="819.4" y="1989" width="0.8" height="15.0" fill="rgb(233,86,25)" rx="2" ry="2" />
<text  x="822.41" y="1999.5" ></text>
</g>
<g >
<title>__lsan::ForEachChunk (9 samples, 0.04%)</title><rect x="524.0" y="2037" width="0.5" height="15.0" fill="rgb(216,227,24)" rx="2" ry="2" />
<text  x="527.01" y="2047.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="90.1" y="1909" width="0.1" height="15.0" fill="rgb(213,73,7)" rx="2" ry="2" />
<text  x="93.06" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (356 samples, 1.77%)</title><rect x="54.4" y="629" width="20.8" height="15.0" fill="rgb(218,31,47)" rx="2" ry="2" />
<text  x="57.37" y="639.5" ></text>
</g>
<g >
<title>do_syscall_64 (16 samples, 0.08%)</title><rect x="768.6" y="2005" width="0.9" height="15.0" fill="rgb(217,33,38)" rx="2" ry="2" />
<text  x="771.59" y="2015.5" ></text>
</g>
<g >
<title>__handle_mm_fault (2 samples, 0.01%)</title><rect x="875.6" y="1877" width="0.1" height="15.0" fill="rgb(252,64,26)" rx="2" ry="2" />
<text  x="878.61" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (348 samples, 1.73%)</title><rect x="54.4" y="325" width="20.4" height="15.0" fill="rgb(225,204,23)" rx="2" ry="2" />
<text  x="57.37" y="335.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt; &gt;::_M_manager (9 samples, 0.04%)</title><rect x="813.2" y="2037" width="0.5" height="15.0" fill="rgb(216,193,31)" rx="2" ry="2" />
<text  x="816.19" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1186.5" y="613" width="0.4" height="15.0" fill="rgb(253,129,14)" rx="2" ry="2" />
<text  x="1189.48" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="161.9" y="1253" width="0.2" height="15.0" fill="rgb(252,92,21)" rx="2" ry="2" />
<text  x="164.92" y="1263.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::create&lt;std::vector&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::allocator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::vector&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::allocator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; const&amp;&gt; (4 samples, 0.02%)</title><rect x="522.6" y="1877" width="0.2" height="15.0" fill="rgb(206,33,13)" rx="2" ry="2" />
<text  x="525.61" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="1187.1" y="821" width="0.1" height="15.0" fill="rgb(205,140,23)" rx="2" ry="2" />
<text  x="1190.07" y="831.5" ></text>
</g>
<g >
<title>[unknown] (346 samples, 1.72%)</title><rect x="54.4" y="101" width="20.2" height="15.0" fill="rgb(218,66,37)" rx="2" ry="2" />
<text  x="57.37" y="111.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.03%)</title><rect x="1186.5" y="437" width="0.4" height="15.0" fill="rgb(250,0,29)" rx="2" ry="2" />
<text  x="1189.48" y="447.5" ></text>
</g>
<g >
<title>__sanitizer::RunMallocHooks (29 samples, 0.14%)</title><rect x="1020.8" y="2053" width="1.7" height="15.0" fill="rgb(223,221,34)" rx="2" ry="2" />
<text  x="1023.79" y="2063.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2 samples, 0.01%)</title><rect x="944.2" y="1925" width="0.2" height="15.0" fill="rgb(250,14,37)" rx="2" ry="2" />
<text  x="947.25" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (81 samples, 0.40%)</title><rect x="134.4" y="1589" width="4.8" height="15.0" fill="rgb(225,16,45)" rx="2" ry="2" />
<text  x="137.43" y="1599.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.01%)</title><rect x="186.3" y="1653" width="0.1" height="15.0" fill="rgb(253,9,43)" rx="2" ry="2" />
<text  x="189.30" y="1663.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (8 samples, 0.04%)</title><rect x="198.0" y="1589" width="0.4" height="15.0" fill="rgb(226,18,29)" rx="2" ry="2" />
<text  x="200.96" y="1599.5" ></text>
</g>
<g >
<title>tlb_flush_mmu_free (2 samples, 0.01%)</title><rect x="769.6" y="1877" width="0.2" height="15.0" fill="rgb(232,40,41)" rx="2" ry="2" />
<text  x="772.65" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (6 samples, 0.03%)</title><rect x="162.3" y="1669" width="0.3" height="15.0" fill="rgb(244,65,9)" rx="2" ry="2" />
<text  x="165.27" y="1679.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::getSubwords (9 samples, 0.04%)</title><rect x="770.1" y="2037" width="0.5" height="15.0" fill="rgb(244,118,53)" rx="2" ry="2" />
<text  x="773.12" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1186.5" y="1605" width="0.4" height="15.0" fill="rgb(207,133,13)" rx="2" ry="2" />
<text  x="1189.48" y="1615.5" ></text>
</g>
<g >
<title>__interceptor_memcpy (32 samples, 0.16%)</title><rect x="1115.0" y="2037" width="1.9" height="15.0" fill="rgb(206,223,18)" rx="2" ry="2" />
<text  x="1118.04" y="2047.5" ></text>
</g>
<g >
<title>__sanitizer::mem_is_zero (2 samples, 0.01%)</title><rect x="492.2" y="1925" width="0.2" height="15.0" fill="rgb(251,177,44)" rx="2" ry="2" />
<text  x="495.25" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (106 samples, 0.53%)</title><rect x="133.4" y="1717" width="6.2" height="15.0" fill="rgb(229,47,23)" rx="2" ry="2" />
<text  x="136.37" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.01%)</title><rect x="814.3" y="2021" width="0.2" height="15.0" fill="rgb(219,143,37)" rx="2" ry="2" />
<text  x="817.31" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (3 samples, 0.01%)</title><rect x="160.8" y="1813" width="0.2" height="15.0" fill="rgb(217,95,1)" rx="2" ry="2" />
<text  x="163.80" y="1823.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="188.1" y="1829" width="0.1" height="15.0" fill="rgb(236,49,22)" rx="2" ry="2" />
<text  x="191.12" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (14 samples, 0.07%)</title><rect x="216.1" y="1845" width="0.9" height="15.0" fill="rgb(215,124,21)" rx="2" ry="2" />
<text  x="219.13" y="1855.5" ></text>
</g>
<g >
<title>do_syscall_64 (30 samples, 0.15%)</title><rect x="1097.6" y="2021" width="1.8" height="15.0" fill="rgb(225,131,0)" rx="2" ry="2" />
<text  x="1100.63" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (94 samples, 0.47%)</title><rect x="189.7" y="1733" width="5.5" height="15.0" fill="rgb(241,33,47)" rx="2" ry="2" />
<text  x="192.70" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (454 samples, 2.26%)</title><rect x="54.3" y="1397" width="26.6" height="15.0" fill="rgb(251,16,1)" rx="2" ry="2" />
<text  x="57.31" y="1407.5" >[..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.02%)</title><rect x="1187.4" y="117" width="0.3" height="15.0" fill="rgb(237,227,29)" rx="2" ry="2" />
<text  x="1190.36" y="127.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (4 samples, 0.02%)</title><rect x="90.9" y="1957" width="0.3" height="15.0" fill="rgb(209,98,11)" rx="2" ry="2" />
<text  x="93.94" y="1967.5" ></text>
</g>
<g >
<title>Eigen::DenseCoeffsBase&lt;Eigen::Transpose&lt;Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_sum_op&lt;float, float&gt;, Eigen::Product&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0&gt; const, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const&gt;, 0&gt;::coeff (294 samples, 1.46%)</title><rect x="223.9" y="1973" width="17.2" height="15.0" fill="rgb(217,144,15)" rx="2" ry="2" />
<text  x="226.87" y="1983.5" ></text>
</g>
<g >
<title>flush_tlb_mm_range (5 samples, 0.02%)</title><rect x="1097.9" y="1845" width="0.3" height="15.0" fill="rgb(209,12,21)" rx="2" ry="2" />
<text  x="1100.92" y="1855.5" ></text>
</g>
<g >
<title>__handle_mm_fault (13 samples, 0.06%)</title><rect x="683.9" y="1781" width="0.8" height="15.0" fill="rgb(249,184,53)" rx="2" ry="2" />
<text  x="686.90" y="1791.5" ></text>
</g>
<g >
<title>do_page_fault (40 samples, 0.20%)</title><rect x="511.9" y="1941" width="2.3" height="15.0" fill="rgb(249,158,26)" rx="2" ry="2" />
<text  x="514.88" y="1951.5" ></text>
</g>
<g >
<title>clear_page_erms (23 samples, 0.11%)</title><rect x="512.3" y="1845" width="1.4" height="15.0" fill="rgb(211,54,36)" rx="2" ry="2" />
<text  x="515.35" y="1855.5" ></text>
</g>
<g >
<title>__asan_memcpy (4 samples, 0.02%)</title><rect x="158.2" y="1669" width="0.3" height="15.0" fill="rgb(246,110,32)" rx="2" ry="2" />
<text  x="161.23" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.02%)</title><rect x="1187.0" y="1781" width="0.2" height="15.0" fill="rgb(248,57,54)" rx="2" ry="2" />
<text  x="1189.95" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="161.9" y="1301" width="0.2" height="15.0" fill="rgb(233,201,15)" rx="2" ry="2" />
<text  x="164.92" y="1311.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::value (2 samples, 0.01%)</title><rect x="201.2" y="1717" width="0.1" height="15.0" fill="rgb(232,57,40)" rx="2" ry="2" />
<text  x="204.19" y="1727.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (5 samples, 0.02%)</title><rect x="588.1" y="1877" width="0.3" height="15.0" fill="rgb(224,75,50)" rx="2" ry="2" />
<text  x="591.07" y="1887.5" ></text>
</g>
<g >
<title>page_add_new_anon_rmap (2 samples, 0.01%)</title><rect x="946.6" y="1925" width="0.1" height="15.0" fill="rgb(236,210,30)" rx="2" ry="2" />
<text  x="949.59" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1187.3" y="325" width="0.4" height="15.0" fill="rgb(235,193,29)" rx="2" ry="2" />
<text  x="1190.30" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1186.5" y="517" width="0.4" height="15.0" fill="rgb(238,96,8)" rx="2" ry="2" />
<text  x="1189.48" y="527.5" ></text>
</g>
<g >
<title>flush_tlb_mm_range (4 samples, 0.02%)</title><rect x="526.2" y="1909" width="0.2" height="15.0" fill="rgb(228,194,34)" rx="2" ry="2" />
<text  x="529.18" y="1919.5" ></text>
</g>
<g >
<title>Eigen::PlainObjectBase&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; &gt;::resize (3 samples, 0.01%)</title><rect x="383.2" y="1941" width="0.2" height="15.0" fill="rgb(233,166,46)" rx="2" ry="2" />
<text  x="386.23" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (79 samples, 0.39%)</title><rect x="176.9" y="1685" width="4.7" height="15.0" fill="rgb(208,215,39)" rx="2" ry="2" />
<text  x="179.92" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="188.5" y="1813" width="0.2" height="15.0" fill="rgb(228,183,6)" rx="2" ry="2" />
<text  x="191.47" y="1823.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::readWord (80 samples, 0.40%)</title><rect x="95.0" y="2021" width="4.7" height="15.0" fill="rgb(205,206,34)" rx="2" ry="2" />
<text  x="98.04" y="2031.5" ></text>
</g>
<g >
<title>Eigen::internal::general_matrix_matrix_product&lt;long, float, 0, false, float, 1, false, 0, 1&gt;::run (136 samples, 0.68%)</title><rect x="503.9" y="1925" width="8.0" height="15.0" fill="rgb(227,147,43)" rx="2" ry="2" />
<text  x="506.91" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.3" y="1317" width="0.4" height="15.0" fill="rgb(245,51,1)" rx="2" ry="2" />
<text  x="1190.30" y="1327.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::dump (5 samples, 0.02%)</title><rect x="521.4" y="2005" width="0.3" height="15.0" fill="rgb(216,146,10)" rx="2" ry="2" />
<text  x="524.37" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="188.6" y="1221" width="0.1" height="15.0" fill="rgb(237,144,27)" rx="2" ry="2" />
<text  x="191.59" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (73 samples, 0.36%)</title><rect x="201.4" y="1653" width="4.3" height="15.0" fill="rgb(214,108,25)" rx="2" ry="2" />
<text  x="204.42" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="217.5" y="1845" width="0.2" height="15.0" fill="rgb(224,32,11)" rx="2" ry="2" />
<text  x="220.48" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.01%)</title><rect x="188.5" y="1445" width="0.2" height="15.0" fill="rgb(240,33,23)" rx="2" ry="2" />
<text  x="191.53" y="1455.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (2 samples, 0.01%)</title><rect x="81.1" y="1397" width="0.1" height="15.0" fill="rgb(246,131,42)" rx="2" ry="2" />
<text  x="84.09" y="1407.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::basic_json (2 samples, 0.01%)</title><rect x="522.7" y="1765" width="0.1" height="15.0" fill="rgb(242,176,20)" rx="2" ry="2" />
<text  x="525.72" y="1775.5" ></text>
</g>
<g >
<title>handle_mm_fault (7 samples, 0.03%)</title><rect x="656.7" y="1813" width="0.4" height="15.0" fill="rgb(232,123,15)" rx="2" ry="2" />
<text  x="659.71" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (92 samples, 0.46%)</title><rect x="210.4" y="1749" width="5.4" height="15.0" fill="rgb(253,132,29)" rx="2" ry="2" />
<text  x="213.45" y="1759.5" ></text>
</g>
<g >
<title>onmt::is_alphabet (42 samples, 0.21%)</title><rect x="662.1" y="1877" width="2.5" height="15.0" fill="rgb(207,170,26)" rx="2" ry="2" />
<text  x="665.10" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (468 samples, 2.32%)</title><rect x="133.4" y="1829" width="27.4" height="15.0" fill="rgb(207,218,8)" rx="2" ry="2" />
<text  x="136.37" y="1839.5" >s..</text>
</g>
<g >
<title>on_each_cpu_cond_mask (2 samples, 0.01%)</title><rect x="79.2" y="1093" width="0.1" height="15.0" fill="rgb(218,197,41)" rx="2" ry="2" />
<text  x="82.16" y="1103.5" ></text>
</g>
<g >
<title>__asan_memset (10 samples, 0.05%)</title><rect x="599.4" y="1877" width="0.6" height="15.0" fill="rgb(226,194,12)" rx="2" ry="2" />
<text  x="602.44" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (75 samples, 0.37%)</title><rect x="211.2" y="1701" width="4.4" height="15.0" fill="rgb(208,24,45)" rx="2" ry="2" />
<text  x="214.21" y="1711.5" ></text>
</g>
<g >
<title>std::__move_merge&lt;TDocument*, __gnu_cxx::__normal_iterator&lt;TDocument*, std::vector&lt;TDocument, std::allocator&lt;TDocument&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;main::$_1&gt; &gt; (3 samples, 0.01%)</title><rect x="523.1" y="1973" width="0.2" height="15.0" fill="rgb(240,226,44)" rx="2" ry="2" />
<text  x="526.13" y="1983.5" ></text>
</g>
<g >
<title>wp_page_copy (72 samples, 0.36%)</title><rect x="944.0" y="1941" width="4.2" height="15.0" fill="rgb(213,86,8)" rx="2" ry="2" />
<text  x="946.95" y="1951.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (2 samples, 0.01%)</title><rect x="84.8" y="1605" width="0.1" height="15.0" fill="rgb(205,155,28)" rx="2" ry="2" />
<text  x="87.79" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.01%)</title><rect x="1187.1" y="1173" width="0.1" height="15.0" fill="rgb(243,166,48)" rx="2" ry="2" />
<text  x="1190.07" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1187.3" y="1045" width="0.4" height="15.0" fill="rgb(220,132,51)" rx="2" ry="2" />
<text  x="1190.30" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (96 samples, 0.48%)</title><rect x="155.2" y="1749" width="5.6" height="15.0" fill="rgb(210,5,41)" rx="2" ry="2" />
<text  x="158.18" y="1759.5" ></text>
</g>
<g >
<title>release_pages (2 samples, 0.01%)</title><rect x="1098.2" y="1813" width="0.1" height="15.0" fill="rgb(224,158,13)" rx="2" ry="2" />
<text  x="1101.22" y="1823.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (10 samples, 0.05%)</title><rect x="770.7" y="2005" width="0.6" height="15.0" fill="rgb(235,41,24)" rx="2" ry="2" />
<text  x="773.70" y="2015.5" ></text>
</g>
<g >
<title>do_page_fault (12 samples, 0.06%)</title><rect x="732.0" y="1861" width="0.7" height="15.0" fill="rgb(249,114,53)" rx="2" ry="2" />
<text  x="735.02" y="1871.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&gt;::ReleaseFreeMemoryToOS&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&gt;::MemoryMapper&gt; (21 samples, 0.10%)</title><rect x="1023.0" y="2053" width="1.3" height="15.0" fill="rgb(240,21,23)" rx="2" ry="2" />
<text  x="1026.02" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (447 samples, 2.22%)</title><rect x="54.3" y="1365" width="26.2" height="15.0" fill="rgb(219,163,0)" rx="2" ry="2" />
<text  x="57.31" y="1375.5" >[..</text>
</g>
<g >
<title>[unknown] (348 samples, 1.73%)</title><rect x="54.4" y="357" width="20.4" height="15.0" fill="rgb(234,139,12)" rx="2" ry="2" />
<text  x="57.37" y="367.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (5 samples, 0.02%)</title><rect x="53.5" y="1909" width="0.3" height="15.0" fill="rgb(252,198,24)" rx="2" ry="2" />
<text  x="56.49" y="1919.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::basic_json (4 samples, 0.02%)</title><rect x="522.6" y="1829" width="0.2" height="15.0" fill="rgb(212,160,52)" rx="2" ry="2" />
<text  x="525.61" y="1839.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::append (9 samples, 0.04%)</title><rect x="586.4" y="1893" width="0.5" height="15.0" fill="rgb(222,104,25)" rx="2" ry="2" />
<text  x="589.37" y="1903.5" ></text>
</g>
<g >
<title>__do_page_fault (2 samples, 0.01%)</title><rect x="1024.6" y="2005" width="0.1" height="15.0" fill="rgb(228,57,45)" rx="2" ry="2" />
<text  x="1027.60" y="2015.5" ></text>
</g>
<g >
<title>__lsan::CollectLeaksCb (2 samples, 0.01%)</title><rect x="523.9" y="2037" width="0.1" height="15.0" fill="rgb(213,118,6)" rx="2" ry="2" />
<text  x="526.89" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="1187.1" y="613" width="0.1" height="15.0" fill="rgb(223,4,53)" rx="2" ry="2" />
<text  x="1190.07" y="623.5" ></text>
</g>
<g >
<title>[unknown] (410 samples, 2.04%)</title><rect x="54.3" y="1237" width="24.0" height="15.0" fill="rgb(207,118,40)" rx="2" ry="2" />
<text  x="57.31" y="1247.5" >[..</text>
</g>
<g >
<title>std::locale::locale (2 samples, 0.01%)</title><rect x="876.1" y="2005" width="0.2" height="15.0" fill="rgb(238,108,43)" rx="2" ry="2" />
<text  x="879.14" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (3 samples, 0.01%)</title><rect x="216.5" y="1765" width="0.2" height="15.0" fill="rgb(241,1,22)" rx="2" ry="2" />
<text  x="219.48" y="1775.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (2 samples, 0.01%)</title><rect x="152.2" y="1637" width="0.2" height="15.0" fill="rgb(226,192,48)" rx="2" ry="2" />
<text  x="155.25" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="188.5" y="1381" width="0.2" height="15.0" fill="rgb(243,225,23)" rx="2" ry="2" />
<text  x="191.53" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1186.5" y="1285" width="0.4" height="15.0" fill="rgb(217,114,22)" rx="2" ry="2" />
<text  x="1189.48" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.01%)</title><rect x="1187.1" y="1221" width="0.1" height="15.0" fill="rgb(254,28,35)" rx="2" ry="2" />
<text  x="1190.07" y="1231.5" ></text>
</g>
<g >
<title>[unknown] (55 samples, 0.27%)</title><rect x="807.9" y="2021" width="3.2" height="15.0" fill="rgb(230,97,35)" rx="2" ry="2" />
<text  x="810.92" y="2031.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.01%)</title><rect x="148.6" y="1605" width="0.2" height="15.0" fill="rgb(237,95,10)" rx="2" ry="2" />
<text  x="151.61" y="1615.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (45 samples, 0.22%)</title><rect x="1112.3" y="2037" width="2.7" height="15.0" fill="rgb(210,187,0)" rx="2" ry="2" />
<text  x="1115.34" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (503 samples, 2.50%)</title><rect x="54.3" y="1541" width="29.5" height="15.0" fill="rgb(236,62,32)" rx="2" ry="2" />
<text  x="57.31" y="1551.5" >[u..</text>
</g>
<g >
<title>__asan::asan_memalign (2 samples, 0.01%)</title><rect x="1188.9" y="2037" width="0.1" height="15.0" fill="rgb(222,175,48)" rx="2" ry="2" />
<text  x="1191.89" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.3" y="965" width="0.4" height="15.0" fill="rgb(233,224,17)" rx="2" ry="2" />
<text  x="1190.30" y="975.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (3 samples, 0.01%)</title><rect x="139.4" y="1589" width="0.1" height="15.0" fill="rgb(243,229,53)" rx="2" ry="2" />
<text  x="142.35" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1187.2" y="2021" width="0.5" height="15.0" fill="rgb(228,175,24)" rx="2" ry="2" />
<text  x="1190.25" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (79 samples, 0.39%)</title><rect x="150.2" y="1781" width="4.6" height="15.0" fill="rgb(214,194,43)" rx="2" ry="2" />
<text  x="153.20" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (194 samples, 0.96%)</title><rect x="133.4" y="1749" width="11.3" height="15.0" fill="rgb(224,124,26)" rx="2" ry="2" />
<text  x="136.37" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (287 samples, 1.43%)</title><rect x="133.4" y="1781" width="16.8" height="15.0" fill="rgb(207,173,48)" rx="2" ry="2" />
<text  x="136.37" y="1791.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (4 samples, 0.02%)</title><rect x="175.1" y="1589" width="0.2" height="15.0" fill="rgb(207,87,50)" rx="2" ry="2" />
<text  x="178.11" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="161.9" y="1381" width="0.2" height="15.0" fill="rgb(216,174,21)" rx="2" ry="2" />
<text  x="164.92" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.3" y="549" width="0.4" height="15.0" fill="rgb(214,226,50)" rx="2" ry="2" />
<text  x="1190.30" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (79 samples, 0.39%)</title><rect x="176.9" y="1717" width="4.7" height="15.0" fill="rgb(218,218,45)" rx="2" ry="2" />
<text  x="179.92" y="1727.5" ></text>
</g>
<g >
<title>do_syscall_64 (4 samples, 0.02%)</title><rect x="769.5" y="2005" width="0.3" height="15.0" fill="rgb(221,21,7)" rx="2" ry="2" />
<text  x="772.53" y="2015.5" ></text>
</g>
<g >
<title>unmap_page_range (2 samples, 0.01%)</title><rect x="526.9" y="1941" width="0.1" height="15.0" fill="rgb(224,212,38)" rx="2" ry="2" />
<text  x="529.88" y="1951.5" ></text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::get (54 samples, 0.27%)</title><rect x="126.3" y="1925" width="3.1" height="15.0" fill="rgb(237,214,17)" rx="2" ry="2" />
<text  x="129.28" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1187.3" y="181" width="0.4" height="15.0" fill="rgb(252,196,5)" rx="2" ry="2" />
<text  x="1190.30" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (5 samples, 0.02%)</title><rect x="216.1" y="1813" width="0.3" height="15.0" fill="rgb(251,186,7)" rx="2" ry="2" />
<text  x="219.13" y="1823.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.01%)</title><rect x="148.5" y="1605" width="0.1" height="15.0" fill="rgb(205,63,9)" rx="2" ry="2" />
<text  x="151.50" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (351 samples, 1.74%)</title><rect x="189.7" y="1797" width="20.6" height="15.0" fill="rgb(226,211,39)" rx="2" ry="2" />
<text  x="192.70" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (93 samples, 0.46%)</title><rect x="210.4" y="1813" width="5.4" height="15.0" fill="rgb(232,21,36)" rx="2" ry="2" />
<text  x="213.39" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (354 samples, 1.76%)</title><rect x="54.4" y="597" width="20.7" height="15.0" fill="rgb(219,183,54)" rx="2" ry="2" />
<text  x="57.37" y="607.5" ></text>
</g>
<g >
<title>TSlinkClustering::ClusterBatch (3,135 samples, 15.57%)</title><rect x="336.3" y="1989" width="183.7" height="15.0" fill="rgb(233,34,31)" rx="2" ry="2" />
<text  x="339.28" y="1999.5" >TSlinkClustering::Clust..</text>
</g>
<g >
<title>pthread_getspecific@plt (2 samples, 0.01%)</title><rect x="1108.2" y="2053" width="0.1" height="15.0" fill="rgb(206,165,1)" rx="2" ry="2" />
<text  x="1111.18" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.01%)</title><rect x="1187.1" y="309" width="0.1" height="15.0" fill="rgb(231,138,17)" rx="2" ry="2" />
<text  x="1190.07" y="319.5" ></text>
</g>
<g >
<title>on_each_cpu_mask (3 samples, 0.01%)</title><rect x="526.2" y="1861" width="0.2" height="15.0" fill="rgb(253,27,25)" rx="2" ry="2" />
<text  x="529.18" y="1871.5" ></text>
</g>
<g >
<title>__pthread_getspecific (2 samples, 0.01%)</title><rect x="142.6" y="1589" width="0.2" height="15.0" fill="rgb(213,22,23)" rx="2" ry="2" />
<text  x="145.63" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (414 samples, 2.06%)</title><rect x="54.3" y="1253" width="24.3" height="15.0" fill="rgb(217,28,15)" rx="2" ry="2" />
<text  x="57.31" y="1263.5" >[..</text>
</g>
<g >
<title>page_fault (3 samples, 0.01%)</title><rect x="520.4" y="1941" width="0.2" height="15.0" fill="rgb(241,145,53)" rx="2" ry="2" />
<text  x="523.38" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (346 samples, 1.72%)</title><rect x="54.4" y="85" width="20.2" height="15.0" fill="rgb(220,189,25)" rx="2" ry="2" />
<text  x="57.37" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="1187.1" y="1637" width="0.1" height="15.0" fill="rgb(210,60,28)" rx="2" ry="2" />
<text  x="1190.07" y="1647.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (4 samples, 0.02%)</title><rect x="123.1" y="1973" width="0.2" height="15.0" fill="rgb(250,200,23)" rx="2" ry="2" />
<text  x="126.06" y="1983.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="91.4" y="1989" width="0.1" height="15.0" fill="rgb(225,158,44)" rx="2" ry="2" />
<text  x="94.41" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (93 samples, 0.46%)</title><rect x="182.0" y="1717" width="5.4" height="15.0" fill="rgb(211,226,14)" rx="2" ry="2" />
<text  x="184.96" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (395 samples, 1.96%)</title><rect x="54.3" y="1173" width="23.2" height="15.0" fill="rgb(223,198,28)" rx="2" ry="2" />
<text  x="57.31" y="1183.5" >[..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.3" y="1509" width="0.4" height="15.0" fill="rgb(238,167,27)" rx="2" ry="2" />
<text  x="1190.30" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="188.5" y="1749" width="0.2" height="15.0" fill="rgb(205,167,24)" rx="2" ry="2" />
<text  x="191.47" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.01%)</title><rect x="161.9" y="1269" width="0.2" height="15.0" fill="rgb(217,81,26)" rx="2" ry="2" />
<text  x="164.92" y="1279.5" ></text>
</g>
<g >
<title>Eigen::DenseBase&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt;::setConstant (38 samples, 0.19%)</title><rect x="501.7" y="1941" width="2.2" height="15.0" fill="rgb(254,73,47)" rx="2" ry="2" />
<text  x="504.68" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1186.5" y="693" width="0.4" height="15.0" fill="rgb(238,75,44)" rx="2" ry="2" />
<text  x="1189.48" y="703.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (3 samples, 0.01%)</title><rect x="736.7" y="1861" width="0.2" height="15.0" fill="rgb(225,28,25)" rx="2" ry="2" />
<text  x="739.71" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (86 samples, 0.43%)</title><rect x="139.7" y="1733" width="5.0" height="15.0" fill="rgb(240,63,24)" rx="2" ry="2" />
<text  x="142.70" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (8 samples, 0.04%)</title><rect x="1186.4" y="1781" width="0.5" height="15.0" fill="rgb(247,9,51)" rx="2" ry="2" />
<text  x="1189.42" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (88 samples, 0.44%)</title><rect x="162.6" y="1605" width="5.2" height="15.0" fill="rgb(238,67,6)" rx="2" ry="2" />
<text  x="165.62" y="1615.5" ></text>
</g>
<g >
<title>get_page_from_freelist (2 samples, 0.01%)</title><rect x="656.9" y="1749" width="0.1" height="15.0" fill="rgb(238,57,34)" rx="2" ry="2" />
<text  x="659.88" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (93 samples, 0.46%)</title><rect x="210.4" y="1797" width="5.4" height="15.0" fill="rgb(242,228,36)" rx="2" ry="2" />
<text  x="213.39" y="1807.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (7 samples, 0.03%)</title><rect x="160.0" y="1669" width="0.4" height="15.0" fill="rgb(220,158,38)" rx="2" ry="2" />
<text  x="162.98" y="1679.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (2 samples, 0.01%)</title><rect x="661.3" y="1781" width="0.1" height="15.0" fill="rgb(214,22,14)" rx="2" ry="2" />
<text  x="664.28" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1186.9" y="1941" width="0.3" height="15.0" fill="rgb(230,121,37)" rx="2" ry="2" />
<text  x="1189.89" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (788 samples, 3.91%)</title><rect x="54.1" y="2037" width="46.2" height="15.0" fill="rgb(248,61,53)" rx="2" ry="2" />
<text  x="57.07" y="2047.5" >[unk..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="79.2" y="1269" width="0.1" height="15.0" fill="rgb(237,126,20)" rx="2" ry="2" />
<text  x="82.16" y="1279.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (4 samples, 0.02%)</title><rect x="79.7" y="1269" width="0.3" height="15.0" fill="rgb(220,29,27)" rx="2" ry="2" />
<text  x="82.75" y="1279.5" ></text>
</g>
<g >
<title>operator new[] (68 samples, 0.34%)</title><rect x="1182.3" y="2037" width="3.9" height="15.0" fill="rgb(214,135,37)" rx="2" ry="2" />
<text  x="1185.26" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="217.5" y="1429" width="0.2" height="15.0" fill="rgb(214,147,31)" rx="2" ry="2" />
<text  x="220.48" y="1439.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::getSubwords (170 samples, 0.84%)</title><rect x="484.0" y="1941" width="9.9" height="15.0" fill="rgb(243,105,29)" rx="2" ry="2" />
<text  x="486.98" y="1951.5" ></text>
</g>
<g >
<title>smp_call_function_many (2 samples, 0.01%)</title><rect x="79.8" y="1093" width="0.1" height="15.0" fill="rgb(208,187,16)" rx="2" ry="2" />
<text  x="82.80" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.3" y="1077" width="0.4" height="15.0" fill="rgb(221,124,26)" rx="2" ry="2" />
<text  x="1190.30" y="1087.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (47 samples, 0.23%)</title><rect x="202.9" y="1621" width="2.7" height="15.0" fill="rgb(208,161,42)" rx="2" ry="2" />
<text  x="205.89" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="161.7" y="1685" width="0.2" height="15.0" fill="rgb(243,167,0)" rx="2" ry="2" />
<text  x="164.74" y="1695.5" ></text>
</g>
<g >
<title>Eigen::DenseCoeffsBase&lt;Eigen::Transpose&lt;Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_sum_op&lt;float, float&gt;, Eigen::Product&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0&gt; const, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const&gt;, 0&gt;::coeff (337 samples, 1.67%)</title><rect x="382.9" y="1957" width="19.8" height="15.0" fill="rgb(225,160,35)" rx="2" ry="2" />
<text  x="385.94" y="1967.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (30 samples, 0.15%)</title><rect x="1097.6" y="2037" width="1.8" height="15.0" fill="rgb(209,106,14)" rx="2" ry="2" />
<text  x="1100.63" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (2 samples, 0.01%)</title><rect x="176.7" y="1685" width="0.1" height="15.0" fill="rgb(232,212,39)" rx="2" ry="2" />
<text  x="179.69" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.01%)</title><rect x="217.5" y="1541" width="0.2" height="15.0" fill="rgb(241,209,17)" rx="2" ry="2" />
<text  x="220.48" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1186.2" y="1973" width="0.2" height="15.0" fill="rgb(238,203,49)" rx="2" ry="2" />
<text  x="1189.25" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1186.5" y="373" width="0.4" height="15.0" fill="rgb(238,174,15)" rx="2" ry="2" />
<text  x="1189.48" y="383.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.02%)</title><rect x="42.1" y="2021" width="0.3" height="15.0" fill="rgb(228,130,33)" rx="2" ry="2" />
<text  x="45.06" y="2031.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (12 samples, 0.06%)</title><rect x="526.2" y="1957" width="0.7" height="15.0" fill="rgb(213,133,8)" rx="2" ry="2" />
<text  x="529.18" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (546 samples, 2.71%)</title><rect x="54.3" y="1685" width="32.0" height="15.0" fill="rgb(217,130,40)" rx="2" ry="2" />
<text  x="57.31" y="1695.5" >[u..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="1187.1" y="565" width="0.1" height="15.0" fill="rgb(219,57,4)" rx="2" ry="2" />
<text  x="1190.07" y="575.5" ></text>
</g>
<g >
<title>[unknown] (534 samples, 2.65%)</title><rect x="54.3" y="1637" width="31.3" height="15.0" fill="rgb(236,39,8)" rx="2" ry="2" />
<text  x="57.31" y="1647.5" >[u..</text>
</g>
<g >
<title>[unknown] (28 samples, 0.14%)</title><rect x="811.4" y="2021" width="1.7" height="15.0" fill="rgb(222,196,52)" rx="2" ry="2" />
<text  x="814.44" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (348 samples, 1.73%)</title><rect x="54.4" y="341" width="20.4" height="15.0" fill="rgb(250,213,20)" rx="2" ry="2" />
<text  x="57.37" y="351.5" ></text>
</g>
<g >
<title>generic_file_read_iter (3 samples, 0.01%)</title><rect x="1108.4" y="1893" width="0.2" height="15.0" fill="rgb(248,185,47)" rx="2" ry="2" />
<text  x="1111.41" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="217.5" y="1365" width="0.2" height="15.0" fill="rgb(228,43,54)" rx="2" ry="2" />
<text  x="220.48" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="1187.1" y="805" width="0.1" height="15.0" fill="rgb(209,107,9)" rx="2" ry="2" />
<text  x="1190.07" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (8 samples, 0.04%)</title><rect x="1186.4" y="1925" width="0.5" height="15.0" fill="rgb(207,13,19)" rx="2" ry="2" />
<text  x="1189.42" y="1935.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; const&amp;&gt; (3 samples, 0.01%)</title><rect x="522.7" y="1781" width="0.1" height="15.0" fill="rgb(211,183,23)" rx="2" ry="2" />
<text  x="525.66" y="1791.5" ></text>
</g>
<g >
<title>onmt::get_alphabet_id (6 samples, 0.03%)</title><rect x="661.7" y="1877" width="0.4" height="15.0" fill="rgb(237,126,31)" rx="2" ry="2" />
<text  x="664.75" y="1887.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (16 samples, 0.08%)</title><rect x="526.1" y="2021" width="0.9" height="15.0" fill="rgb(228,188,9)" rx="2" ry="2" />
<text  x="529.06" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (363 samples, 1.80%)</title><rect x="54.4" y="1013" width="21.2" height="15.0" fill="rgb(242,83,19)" rx="2" ry="2" />
<text  x="57.37" y="1023.5" >[..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (75 samples, 0.37%)</title><rect x="201.4" y="1669" width="4.4" height="15.0" fill="rgb(239,29,29)" rx="2" ry="2" />
<text  x="204.42" y="1679.5" ></text>
</g>
<g >
<title>generic_exec_single (3 samples, 0.01%)</title><rect x="526.2" y="1813" width="0.2" height="15.0" fill="rgb(249,143,35)" rx="2" ry="2" />
<text  x="529.18" y="1823.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (4 samples, 0.02%)</title><rect x="879.6" y="2037" width="0.2" height="15.0" fill="rgb(235,150,30)" rx="2" ry="2" />
<text  x="882.60" y="2047.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (12 samples, 0.06%)</title><rect x="994.8" y="2053" width="0.7" height="15.0" fill="rgb(215,108,4)" rx="2" ry="2" />
<text  x="997.77" y="2063.5" ></text>
</g>
<g >
<title>irq_exit (3 samples, 0.01%)</title><rect x="941.7" y="2005" width="0.1" height="15.0" fill="rgb(219,182,5)" rx="2" ry="2" />
<text  x="944.67" y="2015.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.02%)</title><rect x="79.7" y="1301" width="0.3" height="15.0" fill="rgb(248,71,28)" rx="2" ry="2" />
<text  x="82.75" y="1311.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;std::__detail::_State&lt;char&gt; const*, std::__detail::_State&lt;char&gt;*&gt; (5 samples, 0.02%)</title><rect x="162.3" y="1637" width="0.3" height="15.0" fill="rgb(250,15,16)" rx="2" ry="2" />
<text  x="165.33" y="1647.5" ></text>
</g>
<g >
<title>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::dump_escaped (2 samples, 0.01%)</title><rect x="521.5" y="1925" width="0.1" height="15.0" fill="rgb(224,102,22)" rx="2" ry="2" />
<text  x="524.49" y="1935.5" ></text>
</g>
<g >
<title>Eigen::DenseBase&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; &gt;::setConstant (2 samples, 0.01%)</title><rect x="224.0" y="1957" width="0.2" height="15.0" fill="rgb(223,100,41)" rx="2" ry="2" />
<text  x="227.04" y="1967.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (15 samples, 0.07%)</title><rect x="540.8" y="1909" width="0.9" height="15.0" fill="rgb(245,33,3)" rx="2" ry="2" />
<text  x="543.77" y="1919.5" ></text>
</g>
<g >
<title>arch_tlb_finish_mmu (4 samples, 0.02%)</title><rect x="79.7" y="1189" width="0.3" height="15.0" fill="rgb(209,98,11)" rx="2" ry="2" />
<text  x="82.75" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="161.9" y="1669" width="0.2" height="15.0" fill="rgb(222,45,54)" rx="2" ry="2" />
<text  x="164.86" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (89 samples, 0.44%)</title><rect x="189.9" y="1685" width="5.2" height="15.0" fill="rgb(239,161,44)" rx="2" ry="2" />
<text  x="192.93" y="1695.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (8 samples, 0.04%)</title><rect x="755.4" y="1893" width="0.5" height="15.0" fill="rgb(241,181,43)" rx="2" ry="2" />
<text  x="758.41" y="1903.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::_M_transform@plt (5 samples, 0.02%)</title><rect x="1145.5" y="2053" width="0.2" height="15.0" fill="rgb(244,129,12)" rx="2" ry="2" />
<text  x="1148.46" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="1187.1" y="1541" width="0.1" height="15.0" fill="rgb(209,197,35)" rx="2" ry="2" />
<text  x="1190.07" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (93 samples, 0.46%)</title><rect x="182.0" y="1781" width="5.4" height="15.0" fill="rgb(207,115,39)" rx="2" ry="2" />
<text  x="184.96" y="1791.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (4 samples, 0.02%)</title><rect x="165.3" y="1541" width="0.2" height="15.0" fill="rgb(239,64,39)" rx="2" ry="2" />
<text  x="168.26" y="1551.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (2 samples, 0.01%)</title><rect x="184.2" y="1653" width="0.1" height="15.0" fill="rgb(228,94,10)" rx="2" ry="2" />
<text  x="187.19" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.01%)</title><rect x="1187.1" y="165" width="0.1" height="15.0" fill="rgb(222,90,6)" rx="2" ry="2" />
<text  x="1190.07" y="175.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (95 samples, 0.47%)</title><rect x="106.6" y="2037" width="5.6" height="15.0" fill="rgb(251,161,38)" rx="2" ry="2" />
<text  x="109.65" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="1187.1" y="629" width="0.1" height="15.0" fill="rgb(242,113,11)" rx="2" ry="2" />
<text  x="1190.07" y="639.5" ></text>
</g>
<g >
<title>do_syscall_64 (7 samples, 0.03%)</title><rect x="132.5" y="1941" width="0.4" height="15.0" fill="rgb(244,219,25)" rx="2" ry="2" />
<text  x="135.50" y="1951.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (146 samples, 0.73%)</title><rect x="1108.6" y="2053" width="8.5" height="15.0" fill="rgb(222,1,42)" rx="2" ry="2" />
<text  x="1111.59" y="2063.5" ></text>
</g>
<g >
<title>page_fault (10 samples, 0.05%)</title><rect x="765.9" y="2021" width="0.6" height="15.0" fill="rgb(222,123,28)" rx="2" ry="2" />
<text  x="768.90" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1186.5" y="1221" width="0.4" height="15.0" fill="rgb(207,210,43)" rx="2" ry="2" />
<text  x="1189.48" y="1231.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (2 samples, 0.01%)</title><rect x="157.8" y="1669" width="0.1" height="15.0" fill="rgb(247,50,1)" rx="2" ry="2" />
<text  x="160.76" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (357 samples, 1.77%)</title><rect x="54.4" y="725" width="20.9" height="15.0" fill="rgb(232,9,9)" rx="2" ry="2" />
<text  x="57.37" y="735.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::Unwind (3 samples, 0.01%)</title><rect x="175.6" y="1589" width="0.1" height="15.0" fill="rgb(244,102,9)" rx="2" ry="2" />
<text  x="178.57" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (366 samples, 1.82%)</title><rect x="133.4" y="1797" width="21.4" height="15.0" fill="rgb(242,83,35)" rx="2" ry="2" />
<text  x="136.37" y="1807.5" >s..</text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (3 samples, 0.01%)</title><rect x="149.8" y="1621" width="0.2" height="15.0" fill="rgb(233,180,36)" rx="2" ry="2" />
<text  x="152.79" y="1631.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.02%)</title><rect x="757.2" y="1941" width="0.2" height="15.0" fill="rgb(227,167,49)" rx="2" ry="2" />
<text  x="760.16" y="1951.5" ></text>
</g>
<g >
<title>page_fault (27 samples, 0.13%)</title><rect x="52.4" y="2021" width="1.6" height="15.0" fill="rgb(239,158,36)" rx="2" ry="2" />
<text  x="55.43" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="161.9" y="1637" width="0.2" height="15.0" fill="rgb(233,145,39)" rx="2" ry="2" />
<text  x="164.86" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (80 samples, 0.40%)</title><rect x="182.5" y="1685" width="4.7" height="15.0" fill="rgb(219,62,41)" rx="2" ry="2" />
<text  x="185.49" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (374 samples, 1.86%)</title><rect x="54.4" y="1109" width="21.9" height="15.0" fill="rgb(206,56,30)" rx="2" ry="2" />
<text  x="57.37" y="1119.5" >[..</text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (4 samples, 0.02%)</title><rect x="879.6" y="2005" width="0.2" height="15.0" fill="rgb(236,113,26)" rx="2" ry="2" />
<text  x="882.60" y="2015.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (7 samples, 0.03%)</title><rect x="178.6" y="1621" width="0.4" height="15.0" fill="rgb(253,50,12)" rx="2" ry="2" />
<text  x="181.62" y="1631.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (3 samples, 0.01%)</title><rect x="81.3" y="1413" width="0.2" height="15.0" fill="rgb(218,200,15)" rx="2" ry="2" />
<text  x="84.33" y="1423.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (14 samples, 0.07%)</title><rect x="739.1" y="1893" width="0.8" height="15.0" fill="rgb(209,213,29)" rx="2" ry="2" />
<text  x="742.05" y="1903.5" ></text>
</g>
<g >
<title>fasttext::Vector::norm (28 samples, 0.14%)</title><rect x="517.3" y="1973" width="1.6" height="15.0" fill="rgb(234,41,32)" rx="2" ry="2" />
<text  x="520.27" y="1983.5" ></text>
</g>
<g >
<title>Summarize (2,501 samples, 12.42%)</title><rect x="189.0" y="2005" width="146.6" height="15.0" fill="rgb(238,208,39)" rx="2" ry="2" />
<text  x="192.00" y="2015.5" >Summarize</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (86 samples, 0.43%)</title><rect x="190.0" y="1621" width="5.0" height="15.0" fill="rgb(221,16,33)" rx="2" ry="2" />
<text  x="192.99" y="1631.5" ></text>
</g>
<g >
<title>fasttext::Vector::addRow (33 samples, 0.16%)</title><rect x="496.4" y="1957" width="1.9" height="15.0" fill="rgb(252,110,11)" rx="2" ry="2" />
<text  x="499.41" y="1967.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="88.7" y="1845" width="0.1" height="15.0" fill="rgb(216,196,27)" rx="2" ry="2" />
<text  x="91.65" y="1855.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (4 samples, 0.02%)</title><rect x="84.5" y="1589" width="0.2" height="15.0" fill="rgb(239,80,18)" rx="2" ry="2" />
<text  x="87.49" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="1187.1" y="757" width="0.1" height="15.0" fill="rgb(254,5,42)" rx="2" ry="2" />
<text  x="1190.07" y="767.5" ></text>
</g>
<g >
<title>fasttext::DenseMatrix::load (5 samples, 0.02%)</title><rect x="1100.3" y="2053" width="0.3" height="15.0" fill="rgb(214,156,37)" rx="2" ry="2" />
<text  x="1103.27" y="2063.5" ></text>
</g>
<g >
<title>__asan_memcpy (17 samples, 0.08%)</title><rect x="695.8" y="1845" width="1.0" height="15.0" fill="rgb(237,54,32)" rx="2" ry="2" />
<text  x="698.80" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="1186.2" y="2021" width="0.2" height="15.0" fill="rgb(209,113,29)" rx="2" ry="2" />
<text  x="1189.25" y="2031.5" ></text>
</g>
<g >
<title>__lru_cache_add (2 samples, 0.01%)</title><rect x="684.1" y="1749" width="0.2" height="15.0" fill="rgb(219,221,16)" rx="2" ry="2" />
<text  x="687.14" y="1759.5" ></text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.01%)</title><rect x="212.0" y="1685" width="0.2" height="15.0" fill="rgb(234,42,51)" rx="2" ry="2" />
<text  x="215.03" y="1695.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::pushHash (2 samples, 0.01%)</title><rect x="326.1" y="1925" width="0.2" height="15.0" fill="rgb(245,154,15)" rx="2" ry="2" />
<text  x="329.14" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="217.5" y="1813" width="0.2" height="15.0" fill="rgb(239,67,35)" rx="2" ry="2" />
<text  x="220.48" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (68 samples, 0.34%)</title><rect x="172.7" y="1669" width="4.0" height="15.0" fill="rgb(212,193,32)" rx="2" ry="2" />
<text  x="175.70" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (2 samples, 0.01%)</title><rect x="187.7" y="1845" width="0.1" height="15.0" fill="rgb(216,20,23)" rx="2" ry="2" />
<text  x="190.71" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.01%)</title><rect x="217.5" y="1349" width="0.2" height="15.0" fill="rgb(233,135,12)" rx="2" ry="2" />
<text  x="220.48" y="1359.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (6 samples, 0.03%)</title><rect x="205.2" y="1605" width="0.3" height="15.0" fill="rgb(230,7,7)" rx="2" ry="2" />
<text  x="208.17" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1186.5" y="565" width="0.4" height="15.0" fill="rgb(219,140,6)" rx="2" ry="2" />
<text  x="1189.48" y="575.5" ></text>
</g>
<g >
<title>__split_vma (2 samples, 0.01%)</title><rect x="768.7" y="1893" width="0.1" height="15.0" fill="rgb(224,162,13)" rx="2" ry="2" />
<text  x="771.65" y="1903.5" ></text>
</g>
<g >
<title>handle_mm_fault (89 samples, 0.44%)</title><rect x="943.1" y="1989" width="5.2" height="15.0" fill="rgb(228,36,34)" rx="2" ry="2" />
<text  x="946.08" y="1999.5" ></text>
</g>
<g >
<title>fasttext::Vector::addVector (2 samples, 0.01%)</title><rect x="333.1" y="1989" width="0.1" height="15.0" fill="rgb(251,3,34)" rx="2" ry="2" />
<text  x="336.12" y="1999.5" ></text>
</g>
<g >
<title>__dynamic_cast (4 samples, 0.02%)</title><rect x="134.2" y="1589" width="0.2" height="15.0" fill="rgb(252,129,40)" rx="2" ry="2" />
<text  x="137.20" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (2 samples, 0.01%)</title><rect x="187.7" y="1813" width="0.1" height="15.0" fill="rgb(209,175,24)" rx="2" ry="2" />
<text  x="190.71" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (96 samples, 0.48%)</title><rect x="133.9" y="1637" width="5.6" height="15.0" fill="rgb(207,36,28)" rx="2" ry="2" />
<text  x="136.90" y="1647.5" ></text>
</g>
<g >
<title>__do_munmap (4 samples, 0.02%)</title><rect x="79.7" y="1237" width="0.3" height="15.0" fill="rgb(205,176,30)" rx="2" ry="2" />
<text  x="82.75" y="1247.5" ></text>
</g>
<g >
<title>__sanitizer::QuarantineCache&lt;__asan::QuarantineCallback&gt;::Enqueue (105 samples, 0.52%)</title><rect x="760.3" y="2037" width="6.2" height="15.0" fill="rgb(217,74,11)" rx="2" ry="2" />
<text  x="763.33" y="2047.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (63 samples, 0.31%)</title><rect x="197.0" y="1605" width="3.7" height="15.0" fill="rgb(249,201,43)" rx="2" ry="2" />
<text  x="200.03" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (4 samples, 0.02%)</title><rect x="216.4" y="1813" width="0.3" height="15.0" fill="rgb(207,186,46)" rx="2" ry="2" />
<text  x="219.43" y="1823.5" ></text>
</g>
<g >
<title>finish_task_switch (2 samples, 0.01%)</title><rect x="28.6" y="1909" width="0.1" height="15.0" fill="rgb(236,218,50)" rx="2" ry="2" />
<text  x="31.58" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (366 samples, 1.82%)</title><rect x="54.4" y="1061" width="21.4" height="15.0" fill="rgb(242,106,52)" rx="2" ry="2" />
<text  x="57.37" y="1071.5" >[..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="1187.1" y="1429" width="0.1" height="15.0" fill="rgb(243,37,28)" rx="2" ry="2" />
<text  x="1190.07" y="1439.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.02%)</title><rect x="199.8" y="1589" width="0.2" height="15.0" fill="rgb(245,178,5)" rx="2" ry="2" />
<text  x="202.78" y="1599.5" ></text>
</g>
<g >
<title>__dynamic_cast (9 samples, 0.04%)</title><rect x="213.3" y="1669" width="0.5" height="15.0" fill="rgb(237,44,45)" rx="2" ry="2" />
<text  x="216.32" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.01%)</title><rect x="1187.1" y="1461" width="0.1" height="15.0" fill="rgb(223,87,34)" rx="2" ry="2" />
<text  x="1190.07" y="1471.5" ></text>
</g>
<g >
<title>__sanitizer::CombinedAllocator&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&gt;, __sanitizer::SizeClassAllocatorLocalCache&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&gt; &gt;, __sanitizer::LargeMmapAllocator&lt;__asan::AsanMapUnmapCallback, __sanitizer::LargeMmapAllocatorPtrArrayDynamic&gt; &gt;::Allocate (123 samples, 0.61%)</title><rect x="1011.5" y="2053" width="7.2" height="15.0" fill="rgb(217,208,40)" rx="2" ry="2" />
<text  x="1014.47" y="2063.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare@plt (2 samples, 0.01%)</title><rect x="755.0" y="1893" width="0.1" height="15.0" fill="rgb(239,100,51)" rx="2" ry="2" />
<text  x="757.99" y="1903.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (3 samples, 0.01%)</title><rect x="208.9" y="1637" width="0.1" height="15.0" fill="rgb(249,163,31)" rx="2" ry="2" />
<text  x="211.86" y="1647.5" ></text>
</g>
<g >
<title>__handle_mm_fault (2 samples, 0.01%)</title><rect x="1100.4" y="1957" width="0.2" height="15.0" fill="rgb(249,61,51)" rx="2" ry="2" />
<text  x="1103.44" y="1967.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (2 samples, 0.01%)</title><rect x="90.6" y="1877" width="0.2" height="15.0" fill="rgb(244,116,1)" rx="2" ry="2" />
<text  x="93.65" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.03%)</title><rect x="1186.5" y="1637" width="0.4" height="15.0" fill="rgb(246,223,27)" rx="2" ry="2" />
<text  x="1189.48" y="1647.5" ></text>
</g>
<g >
<title>on_each_cpu_mask (4 samples, 0.02%)</title><rect x="1098.0" y="1797" width="0.2" height="15.0" fill="rgb(219,116,51)" rx="2" ry="2" />
<text  x="1100.98" y="1807.5" ></text>
</g>
<g >
<title>__asan::GetMallocContextSize (2 samples, 0.01%)</title><rect x="547.3" y="1893" width="0.2" height="15.0" fill="rgb(206,52,22)" rx="2" ry="2" />
<text  x="550.34" y="1903.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (2 samples, 0.01%)</title><rect x="90.2" y="1909" width="0.1" height="15.0" fill="rgb(254,35,20)" rx="2" ry="2" />
<text  x="93.18" y="1919.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.01%)</title><rect x="1099.4" y="2037" width="0.2" height="15.0" fill="rgb(238,7,8)" rx="2" ry="2" />
<text  x="1102.39" y="2047.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&gt;::GetFromAllocator (5 samples, 0.02%)</title><rect x="1022.5" y="2053" width="0.3" height="15.0" fill="rgb(212,179,41)" rx="2" ry="2" />
<text  x="1025.49" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (87 samples, 0.43%)</title><rect x="162.7" y="1589" width="5.1" height="15.0" fill="rgb(227,197,4)" rx="2" ry="2" />
<text  x="165.68" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (2 samples, 0.01%)</title><rect x="215.8" y="1781" width="0.2" height="15.0" fill="rgb(238,183,2)" rx="2" ry="2" />
<text  x="218.84" y="1791.5" ></text>
</g>
<g >
<title>unmap_single_vma (6 samples, 0.03%)</title><rect x="1099.9" y="1925" width="0.4" height="15.0" fill="rgb(235,137,1)" rx="2" ry="2" />
<text  x="1102.92" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (74 samples, 0.37%)</title><rect x="205.9" y="1765" width="4.4" height="15.0" fill="rgb(220,171,10)" rx="2" ry="2" />
<text  x="208.93" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="1187.1" y="1477" width="0.1" height="15.0" fill="rgb(214,157,8)" rx="2" ry="2" />
<text  x="1190.07" y="1487.5" ></text>
</g>
<g >
<title>fasttext::Vector::addRow (21 samples, 0.10%)</title><rect x="328.5" y="1973" width="1.3" height="15.0" fill="rgb(242,106,33)" rx="2" ry="2" />
<text  x="331.55" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="1187.1" y="1237" width="0.1" height="15.0" fill="rgb(228,87,53)" rx="2" ry="2" />
<text  x="1190.07" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="161.7" y="1669" width="0.2" height="15.0" fill="rgb(218,205,26)" rx="2" ry="2" />
<text  x="164.74" y="1679.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (4 samples, 0.02%)</title><rect x="503.1" y="1829" width="0.2" height="15.0" fill="rgb(238,35,15)" rx="2" ry="2" />
<text  x="506.09" y="1839.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::emplace_back&lt;char const*&amp;, unsigned int&amp;&gt; (4 samples, 0.02%)</title><rect x="736.9" y="1877" width="0.3" height="15.0" fill="rgb(211,194,20)" rx="2" ry="2" />
<text  x="739.94" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="217.5" y="1317" width="0.2" height="15.0" fill="rgb(236,135,50)" rx="2" ry="2" />
<text  x="220.48" y="1327.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (3 samples, 0.01%)</title><rect x="54.1" y="2021" width="0.2" height="15.0" fill="rgb(225,205,21)" rx="2" ry="2" />
<text  x="57.07" y="2031.5" ></text>
</g>
<g >
<title>__asan::Allocator::Deallocate (2 samples, 0.01%)</title><rect x="595.7" y="1877" width="0.1" height="15.0" fill="rgb(253,158,25)" rx="2" ry="2" />
<text  x="598.69" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_try_char (2 samples, 0.01%)</title><rect x="201.2" y="1733" width="0.1" height="15.0" fill="rgb(224,81,37)" rx="2" ry="2" />
<text  x="204.19" y="1743.5" ></text>
</g>
<g >
<title>DetectCategory (248 samples, 1.23%)</title><rect x="529.6" y="1973" width="14.6" height="15.0" fill="rgb(251,23,24)" rx="2" ry="2" />
<text  x="532.64" y="1983.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (2 samples, 0.01%)</title><rect x="200.7" y="1605" width="0.1" height="15.0" fill="rgb(235,153,37)" rx="2" ry="2" />
<text  x="203.72" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.03%)</title><rect x="1187.2" y="1909" width="0.5" height="15.0" fill="rgb(208,208,31)" rx="2" ry="2" />
<text  x="1190.25" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_Compiler (484 samples, 2.40%)</title><rect x="133.3" y="1941" width="28.3" height="15.0" fill="rgb(236,129,23)" rx="2" ry="2" />
<text  x="136.26" y="1951.5" >st..</text>
</g>
<g >
<title>[unknown] (5 samples, 0.02%)</title><rect x="768.2" y="2005" width="0.3" height="15.0" fill="rgb(235,99,25)" rx="2" ry="2" />
<text  x="771.24" y="2015.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (3 samples, 0.01%)</title><rect x="86.7" y="1717" width="0.2" height="15.0" fill="rgb(252,65,2)" rx="2" ry="2" />
<text  x="89.72" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="217.5" y="1749" width="0.2" height="15.0" fill="rgb(241,80,50)" rx="2" ry="2" />
<text  x="220.48" y="1759.5" ></text>
</g>
<g >
<title>do_mmap (16 samples, 0.08%)</title><rect x="768.6" y="1941" width="0.9" height="15.0" fill="rgb(231,11,53)" rx="2" ry="2" />
<text  x="771.59" y="1951.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::computeSubwords (5 samples, 0.02%)</title><rect x="542.9" y="1893" width="0.3" height="15.0" fill="rgb(237,92,52)" rx="2" ry="2" />
<text  x="545.94" y="1903.5" ></text>
</g>
<g >
<title>native_write_msr (4 samples, 0.02%)</title><rect x="1098.0" y="1701" width="0.2" height="15.0" fill="rgb(245,125,35)" rx="2" ry="2" />
<text  x="1100.98" y="1711.5" ></text>
</g>
<g >
<title>GetHost (484 samples, 2.40%)</title><rect x="189.4" y="1973" width="28.4" height="15.0" fill="rgb(213,174,53)" rx="2" ry="2" />
<text  x="192.41" y="1983.5" >Ge..</text>
</g>
<g >
<title>fasttext::Vector::zero (9 samples, 0.04%)</title><rect x="498.5" y="1957" width="0.5" height="15.0" fill="rgb(226,199,50)" rx="2" ry="2" />
<text  x="501.46" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="188.5" y="1605" width="0.2" height="15.0" fill="rgb(207,193,35)" rx="2" ry="2" />
<text  x="191.53" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="217.5" y="1605" width="0.2" height="15.0" fill="rgb(246,86,10)" rx="2" ry="2" />
<text  x="220.48" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (100 samples, 0.50%)</title><rect x="195.2" y="1717" width="5.9" height="15.0" fill="rgb(248,129,38)" rx="2" ry="2" />
<text  x="198.21" y="1727.5" ></text>
</g>
<g >
<title>do_page_fault (2 samples, 0.01%)</title><rect x="1189.8" y="2005" width="0.1" height="15.0" fill="rgb(240,188,13)" rx="2" ry="2" />
<text  x="1192.77" y="2015.5" ></text>
</g>
<g >
<title>onmt::CaseModifier::extract_case_type (55 samples, 0.27%)</title><rect x="807.9" y="2037" width="3.2" height="15.0" fill="rgb(247,190,48)" rx="2" ry="2" />
<text  x="810.92" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (78 samples, 0.39%)</title><rect x="150.2" y="1717" width="4.6" height="15.0" fill="rgb(225,21,10)" rx="2" ry="2" />
<text  x="153.20" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (95 samples, 0.47%)</title><rect x="195.4" y="1637" width="5.6" height="15.0" fill="rgb(220,125,8)" rx="2" ry="2" />
<text  x="198.44" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="161.9" y="1477" width="0.2" height="15.0" fill="rgb(230,169,11)" rx="2" ry="2" />
<text  x="164.92" y="1487.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (2 samples, 0.01%)</title><rect x="169.2" y="1573" width="0.2" height="15.0" fill="rgb(249,190,14)" rx="2" ry="2" />
<text  x="172.24" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.1" y="53" width="0.1" height="15.0" fill="rgb(209,15,24)" rx="2" ry="2" />
<text  x="1190.13" y="63.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (2 samples, 0.01%)</title><rect x="187.5" y="1765" width="0.1" height="15.0" fill="rgb(210,100,49)" rx="2" ry="2" />
<text  x="190.53" y="1775.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (9 samples, 0.04%)</title><rect x="1111.8" y="2037" width="0.5" height="15.0" fill="rgb(220,55,52)" rx="2" ry="2" />
<text  x="1114.81" y="2047.5" ></text>
</g>
<g >
<title>std::locale::locale (2 samples, 0.01%)</title><rect x="519.6" y="1973" width="0.1" height="15.0" fill="rgb(219,79,30)" rx="2" ry="2" />
<text  x="522.56" y="1983.5" ></text>
</g>
<g >
<title>fasttext::Vector::Vector (2 samples, 0.01%)</title><rect x="1103.7" y="2053" width="0.1" height="15.0" fill="rgb(223,127,29)" rx="2" ry="2" />
<text  x="1106.67" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (95 samples, 0.47%)</title><rect x="155.2" y="1717" width="5.5" height="15.0" fill="rgb(205,130,18)" rx="2" ry="2" />
<text  x="158.18" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1186.5" y="1141" width="0.4" height="15.0" fill="rgb(205,109,26)" rx="2" ry="2" />
<text  x="1189.48" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (15 samples, 0.07%)</title><rect x="216.1" y="1877" width="0.9" height="15.0" fill="rgb(208,168,40)" rx="2" ry="2" />
<text  x="219.13" y="1887.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64LocalCache&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&gt; &gt;::Deallocate (45 samples, 0.22%)</title><rect x="72.0" y="37" width="2.6" height="15.0" fill="rgb(244,149,11)" rx="2" ry="2" />
<text  x="75.01" y="47.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.3" y="165" width="0.4" height="15.0" fill="rgb(239,73,34)" rx="2" ry="2" />
<text  x="1190.30" y="175.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.01%)</title><rect x="171.8" y="1573" width="0.1" height="15.0" fill="rgb(229,82,7)" rx="2" ry="2" />
<text  x="174.76" y="1583.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (2 samples, 0.01%)</title><rect x="1117.5" y="2037" width="0.1" height="15.0" fill="rgb(209,157,48)" rx="2" ry="2" />
<text  x="1120.50" y="2047.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (8 samples, 0.04%)</title><rect x="813.8" y="2037" width="0.5" height="15.0" fill="rgb(221,119,5)" rx="2" ry="2" />
<text  x="816.84" y="2047.5" ></text>
</g>
<g >
<title>fasttext::entry::entry (8 samples, 0.04%)</title><rect x="875.4" y="1973" width="0.4" height="15.0" fill="rgb(223,219,45)" rx="2" ry="2" />
<text  x="878.38" y="1983.5" ></text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.01%)</title><rect x="182.3" y="1685" width="0.1" height="15.0" fill="rgb(243,66,45)" rx="2" ry="2" />
<text  x="185.26" y="1695.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.01%)</title><rect x="82.3" y="1445" width="0.2" height="15.0" fill="rgb(210,211,5)" rx="2" ry="2" />
<text  x="85.33" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (73 samples, 0.36%)</title><rect x="163.1" y="1573" width="4.3" height="15.0" fill="rgb(221,224,9)" rx="2" ry="2" />
<text  x="166.15" y="1583.5" ></text>
</g>
<g >
<title>TDocument::operator= (3 samples, 0.01%)</title><rect x="523.1" y="1957" width="0.2" height="15.0" fill="rgb(217,21,10)" rx="2" ry="2" />
<text  x="526.13" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (357 samples, 1.77%)</title><rect x="54.4" y="741" width="20.9" height="15.0" fill="rgb(233,121,12)" rx="2" ry="2" />
<text  x="57.37" y="751.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (19 samples, 0.09%)</title><rect x="1174.3" y="2037" width="1.1" height="15.0" fill="rgb(234,50,40)" rx="2" ry="2" />
<text  x="1177.29" y="2047.5" ></text>
</g>
<g >
<title>onmt::is_alphabet (3 samples, 0.01%)</title><rect x="737.2" y="1893" width="0.2" height="15.0" fill="rgb(243,189,16)" rx="2" ry="2" />
<text  x="740.24" y="1903.5" ></text>
</g>
<g >
<title>std::vector&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::allocator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;::reserve (2 samples, 0.01%)</title><rect x="521.0" y="1973" width="0.1" height="15.0" fill="rgb(223,4,41)" rx="2" ry="2" />
<text  x="523.96" y="1983.5" ></text>
</g>
<g >
<title>unmap_region (8 samples, 0.04%)</title><rect x="1097.9" y="1909" width="0.5" height="15.0" fill="rgb(243,122,27)" rx="2" ry="2" />
<text  x="1100.92" y="1919.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (2 samples, 0.01%)</title><rect x="53.0" y="1925" width="0.1" height="15.0" fill="rgb(228,160,51)" rx="2" ry="2" />
<text  x="56.02" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.3" y="1493" width="0.4" height="15.0" fill="rgb(229,63,24)" rx="2" ry="2" />
<text  x="1190.30" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="161.7" y="1749" width="0.4" height="15.0" fill="rgb(244,197,12)" rx="2" ry="2" />
<text  x="164.68" y="1759.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (2 samples, 0.01%)</title><rect x="175.0" y="1589" width="0.1" height="15.0" fill="rgb(237,140,4)" rx="2" ry="2" />
<text  x="177.99" y="1599.5" ></text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::get (14 samples, 0.07%)</title><rect x="131.2" y="1909" width="0.8" height="15.0" fill="rgb(252,154,53)" rx="2" ry="2" />
<text  x="134.21" y="1919.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::create&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (2 samples, 0.01%)</title><rect x="522.7" y="1749" width="0.1" height="15.0" fill="rgb(250,172,8)" rx="2" ry="2" />
<text  x="525.72" y="1759.5" ></text>
</g>
<g >
<title>page_fault (109 samples, 0.54%)</title><rect x="941.9" y="2037" width="6.4" height="15.0" fill="rgb(231,190,18)" rx="2" ry="2" />
<text  x="944.90" y="2047.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (3 samples, 0.01%)</title><rect x="759.9" y="2037" width="0.2" height="15.0" fill="rgb(213,125,10)" rx="2" ry="2" />
<text  x="762.92" y="2047.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="80.9" y="1397" width="0.1" height="15.0" fill="rgb(247,103,19)" rx="2" ry="2" />
<text  x="83.92" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (86 samples, 0.43%)</title><rect x="190.0" y="1637" width="5.0" height="15.0" fill="rgb(250,201,35)" rx="2" ry="2" />
<text  x="192.99" y="1647.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (9 samples, 0.04%)</title><rect x="138.4" y="1557" width="0.5" height="15.0" fill="rgb(230,12,51)" rx="2" ry="2" />
<text  x="141.36" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1187.2" y="1701" width="0.5" height="15.0" fill="rgb(243,208,10)" rx="2" ry="2" />
<text  x="1190.25" y="1711.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (2 samples, 0.01%)</title><rect x="203.6" y="1605" width="0.2" height="15.0" fill="rgb(223,189,50)" rx="2" ry="2" />
<text  x="206.65" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.04%)</title><rect x="1186.4" y="1765" width="0.5" height="15.0" fill="rgb(246,41,45)" rx="2" ry="2" />
<text  x="1189.42" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1187.3" y="373" width="0.4" height="15.0" fill="rgb(209,202,7)" rx="2" ry="2" />
<text  x="1190.30" y="383.5" ></text>
</g>
<g >
<title>operator delete (9 samples, 0.04%)</title><rect x="171.2" y="1573" width="0.6" height="15.0" fill="rgb(243,17,45)" rx="2" ry="2" />
<text  x="174.24" y="1583.5" ></text>
</g>
<g >
<title>try_charge (2 samples, 0.01%)</title><rect x="503.7" y="1813" width="0.1" height="15.0" fill="rgb(231,107,29)" rx="2" ry="2" />
<text  x="506.67" y="1823.5" ></text>
</g>
<g >
<title>tgnews (20,133 samples, 100.00%)</title><rect x="10.0" y="2069" width="1180.0" height="15.0" fill="rgb(231,24,27)" rx="2" ry="2" />
<text  x="13.00" y="2079.5" >tgnews</text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (3 samples, 0.01%)</title><rect x="77.6" y="1189" width="0.2" height="15.0" fill="rgb(235,77,43)" rx="2" ry="2" />
<text  x="80.58" y="1199.5" ></text>
</g>
<g >
<title>[unknown] (633 samples, 3.14%)</title><rect x="54.3" y="1989" width="37.1" height="15.0" fill="rgb(251,153,19)" rx="2" ry="2" />
<text  x="57.31" y="1999.5" >[un..</text>
</g>
<g >
<title>[unknown] (422 samples, 2.10%)</title><rect x="54.3" y="1285" width="24.7" height="15.0" fill="rgb(253,197,2)" rx="2" ry="2" />
<text  x="57.31" y="1295.5" >[..</text>
</g>
<g >
<title>__do_page_fault (27 samples, 0.13%)</title><rect x="52.4" y="1989" width="1.6" height="15.0" fill="rgb(221,102,11)" rx="2" ry="2" />
<text  x="55.43" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.3" y="885" width="0.4" height="15.0" fill="rgb(246,26,2)" rx="2" ry="2" />
<text  x="1190.30" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (101 samples, 0.50%)</title><rect x="195.2" y="1733" width="5.9" height="15.0" fill="rgb(253,110,18)" rx="2" ry="2" />
<text  x="198.21" y="1743.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&gt;::GetFromAllocator (20 samples, 0.10%)</title><rect x="766.9" y="2037" width="1.2" height="15.0" fill="rgb(227,147,23)" rx="2" ry="2" />
<text  x="769.89" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_BracketMatcher (4 samples, 0.02%)</title><rect x="133.6" y="1621" width="0.2" height="15.0" fill="rgb(228,149,29)" rx="2" ry="2" />
<text  x="136.61" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1186.9" y="1909" width="0.3" height="15.0" fill="rgb(209,99,24)" rx="2" ry="2" />
<text  x="1189.89" y="1919.5" ></text>
</g>
<g >
<title>__dynamic_cast@plt (2 samples, 0.01%)</title><rect x="211.1" y="1701" width="0.1" height="15.0" fill="rgb(240,89,47)" rx="2" ry="2" />
<text  x="214.09" y="1711.5" ></text>
</g>
<g >
<title>handle_mm_fault (34 samples, 0.17%)</title><rect x="512.2" y="1909" width="2.0" height="15.0" fill="rgb(236,30,13)" rx="2" ry="2" />
<text  x="515.23" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (98 samples, 0.49%)</title><rect x="133.8" y="1669" width="5.8" height="15.0" fill="rgb(221,81,40)" rx="2" ry="2" />
<text  x="136.84" y="1679.5" ></text>
</g>
<g >
<title>handle_mm_fault (2 samples, 0.01%)</title><rect x="1024.6" y="1989" width="0.1" height="15.0" fill="rgb(219,2,49)" rx="2" ry="2" />
<text  x="1027.60" y="1999.5" ></text>
</g>
<g >
<title>__split_vma (2 samples, 0.01%)</title><rect x="1097.8" y="1909" width="0.1" height="15.0" fill="rgb(244,151,39)" rx="2" ry="2" />
<text  x="1100.81" y="1919.5" ></text>
</g>
<g >
<title>__asan::GetMallocContextSize (5 samples, 0.02%)</title><rect x="1155.7" y="2037" width="0.2" height="15.0" fill="rgb(207,65,40)" rx="2" ry="2" />
<text  x="1158.65" y="2047.5" ></text>
</g>
<g >
<title>__handle_mm_fault (21 samples, 0.10%)</title><rect x="697.3" y="1781" width="1.3" height="15.0" fill="rgb(215,187,30)" rx="2" ry="2" />
<text  x="700.32" y="1791.5" ></text>
</g>
<g >
<title>TDocument::TDocument (12 samples, 0.06%)</title><rect x="122.8" y="1989" width="0.7" height="15.0" fill="rgb(252,100,29)" rx="2" ry="2" />
<text  x="125.77" y="1999.5" ></text>
</g>
<g >
<title>__sanitizer::internal_mmap (17 samples, 0.08%)</title><rect x="768.5" y="2037" width="1.0" height="15.0" fill="rgb(205,89,21)" rx="2" ry="2" />
<text  x="771.53" y="2047.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (3 samples, 0.01%)</title><rect x="25.9" y="1925" width="0.2" height="15.0" fill="rgb(239,55,16)" rx="2" ry="2" />
<text  x="28.88" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (76 samples, 0.38%)</title><rect x="201.4" y="1733" width="4.5" height="15.0" fill="rgb(242,50,37)" rx="2" ry="2" />
<text  x="204.42" y="1743.5" ></text>
</g>
<g >
<title>__interceptor_memcpy (3 samples, 0.01%)</title><rect x="1120.0" y="2037" width="0.1" height="15.0" fill="rgb(235,200,16)" rx="2" ry="2" />
<text  x="1122.96" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="188.5" y="1733" width="0.2" height="15.0" fill="rgb(248,139,54)" rx="2" ry="2" />
<text  x="191.47" y="1743.5" ></text>
</g>
<g >
<title>__sanitizer::StackTrace::GetCurrentPc (6 samples, 0.03%)</title><rect x="1178.5" y="2037" width="0.4" height="15.0" fill="rgb(246,71,46)" rx="2" ry="2" />
<text  x="1181.51" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1186.5" y="1557" width="0.4" height="15.0" fill="rgb(209,90,15)" rx="2" ry="2" />
<text  x="1189.48" y="1567.5" ></text>
</g>
<g >
<title>TDocument::TDocument (2 samples, 0.01%)</title><rect x="529.3" y="1989" width="0.2" height="15.0" fill="rgb(238,188,1)" rx="2" ry="2" />
<text  x="532.35" y="1999.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (69 samples, 0.34%)</title><rect x="1163.5" y="2021" width="4.1" height="15.0" fill="rgb(243,13,0)" rx="2" ry="2" />
<text  x="1166.51" y="2031.5" ></text>
</g>
<g >
<title>unmap_single_vma (3 samples, 0.01%)</title><rect x="769.6" y="1909" width="0.2" height="15.0" fill="rgb(244,180,39)" rx="2" ry="2" />
<text  x="772.59" y="1919.5" ></text>
</g>
<g >
<title>fasttext::Matrix::size (31 samples, 0.15%)</title><rect x="326.7" y="1973" width="1.8" height="15.0" fill="rgb(208,134,6)" rx="2" ry="2" />
<text  x="329.73" y="1983.5" ></text>
</g>
<g >
<title>__handle_mm_fault (65 samples, 0.32%)</title><rect x="22.8" y="1973" width="3.8" height="15.0" fill="rgb(209,181,47)" rx="2" ry="2" />
<text  x="25.84" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.01%)</title><rect x="1187.1" y="117" width="0.1" height="15.0" fill="rgb(230,203,23)" rx="2" ry="2" />
<text  x="1190.07" y="127.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="89.0" y="1813" width="0.1" height="15.0" fill="rgb(249,141,0)" rx="2" ry="2" />
<text  x="92.01" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (70 samples, 0.35%)</title><rect x="172.7" y="1733" width="4.1" height="15.0" fill="rgb(250,39,9)" rx="2" ry="2" />
<text  x="175.70" y="1743.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.01%)</title><rect x="1189.9" y="2037" width="0.1" height="15.0" fill="rgb(216,139,10)" rx="2" ry="2" />
<text  x="1192.88" y="2047.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="82.1" y="1413" width="0.1" height="15.0" fill="rgb(227,50,44)" rx="2" ry="2" />
<text  x="85.09" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="217.5" y="1733" width="0.2" height="15.0" fill="rgb(205,161,12)" rx="2" ry="2" />
<text  x="220.48" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.01%)</title><rect x="217.5" y="1637" width="0.2" height="15.0" fill="rgb(221,216,45)" rx="2" ry="2" />
<text  x="220.48" y="1647.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (6 samples, 0.03%)</title><rect x="946.2" y="1909" width="0.4" height="15.0" fill="rgb(230,34,17)" rx="2" ry="2" />
<text  x="949.24" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="1187.1" y="1205" width="0.1" height="15.0" fill="rgb(229,194,37)" rx="2" ry="2" />
<text  x="1190.07" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="217.5" y="1461" width="0.2" height="15.0" fill="rgb(209,218,29)" rx="2" ry="2" />
<text  x="220.48" y="1471.5" ></text>
</g>
<g >
<title>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::dump (5 samples, 0.02%)</title><rect x="521.4" y="1989" width="0.3" height="15.0" fill="rgb(243,111,18)" rx="2" ry="2" />
<text  x="524.37" y="1999.5" ></text>
</g>
<g >
<title>do_wp_page (2 samples, 0.01%)</title><rect x="54.1" y="1925" width="0.2" height="15.0" fill="rgb(241,206,35)" rx="2" ry="2" />
<text  x="57.13" y="1935.5" ></text>
</g>
<g >
<title>fasttext::FastText::predictLine (526 samples, 2.61%)</title><rect x="544.7" y="1941" width="30.8" height="15.0" fill="rgb(218,148,3)" rx="2" ry="2" />
<text  x="547.70" y="1951.5" >fa..</text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (2 samples, 0.01%)</title><rect x="154.7" y="1685" width="0.1" height="15.0" fill="rgb(216,23,5)" rx="2" ry="2" />
<text  x="157.65" y="1695.5" ></text>
</g>
<g >
<title>__pthread_getspecific (3 samples, 0.01%)</title><rect x="1120.1" y="2037" width="0.2" height="15.0" fill="rgb(254,147,43)" rx="2" ry="2" />
<text  x="1123.14" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1186.5" y="1189" width="0.4" height="15.0" fill="rgb(239,172,18)" rx="2" ry="2" />
<text  x="1189.48" y="1199.5" ></text>
</g>
<g >
<title>tlb_flush_mmu_free (3 samples, 0.01%)</title><rect x="1100.1" y="1893" width="0.2" height="15.0" fill="rgb(239,171,40)" rx="2" ry="2" />
<text  x="1103.09" y="1903.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="187.2" y="1685" width="0.2" height="15.0" fill="rgb(224,126,4)" rx="2" ry="2" />
<text  x="190.24" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (88 samples, 0.44%)</title><rect x="145.0" y="1701" width="5.1" height="15.0" fill="rgb(243,207,46)" rx="2" ry="2" />
<text  x="147.98" y="1711.5" ></text>
</g>
<g >
<title>onmt::unicode::is_number (11 samples, 0.05%)</title><rect x="726.4" y="1877" width="0.6" height="15.0" fill="rgb(239,32,51)" rx="2" ry="2" />
<text  x="729.39" y="1887.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (64 samples, 0.32%)</title><rect x="135.3" y="1573" width="3.8" height="15.0" fill="rgb(230,111,24)" rx="2" ry="2" />
<text  x="138.31" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.3" y="1221" width="0.4" height="15.0" fill="rgb(236,71,24)" rx="2" ry="2" />
<text  x="1190.30" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.01%)</title><rect x="1187.1" y="213" width="0.1" height="15.0" fill="rgb(254,53,7)" rx="2" ry="2" />
<text  x="1190.07" y="223.5" ></text>
</g>
<g >
<title>nlohmann::detail::input_stream_adapter::get_character (3 samples, 0.01%)</title><rect x="131.9" y="1893" width="0.1" height="15.0" fill="rgb(253,13,39)" rx="2" ry="2" />
<text  x="134.85" y="1903.5" ></text>
</g>
<g >
<title>onmt::ITokenizer::tokenize (3,068 samples, 15.24%)</title><rect x="577.3" y="1941" width="179.9" height="15.0" fill="rgb(233,213,31)" rx="2" ry="2" />
<text  x="580.35" y="1951.5" >onmt::ITokenizer::token..</text>
</g>
<g >
<title>std::vector&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::allocator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;::vector (4 samples, 0.02%)</title><rect x="522.6" y="1861" width="0.2" height="15.0" fill="rgb(247,153,8)" rx="2" ry="2" />
<text  x="525.61" y="1871.5" ></text>
</g>
<g >
<title>mem_cgroup_commit_charge (2 samples, 0.01%)</title><rect x="25.1" y="1957" width="0.1" height="15.0" fill="rgb(229,117,40)" rx="2" ry="2" />
<text  x="28.12" y="1967.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="215.5" y="1685" width="0.1" height="15.0" fill="rgb(228,5,15)" rx="2" ry="2" />
<text  x="218.49" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="217.5" y="1861" width="0.2" height="15.0" fill="rgb(208,145,42)" rx="2" ry="2" />
<text  x="220.48" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (69 samples, 0.34%)</title><rect x="177.3" y="1653" width="4.0" height="15.0" fill="rgb(243,106,10)" rx="2" ry="2" />
<text  x="180.27" y="1663.5" ></text>
</g>
<g >
<title>onmt::unicode::is_letter (206 samples, 1.02%)</title><rect x="701.5" y="1861" width="12.1" height="15.0" fill="rgb(216,68,16)" rx="2" ry="2" />
<text  x="704.54" y="1871.5" ></text>
</g>
<g >
<title>native_flush_tlb_others (19 samples, 0.09%)</title><rect x="947.1" y="1893" width="1.1" height="15.0" fill="rgb(221,39,16)" rx="2" ry="2" />
<text  x="950.06" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (86 samples, 0.43%)</title><rect x="139.7" y="1701" width="5.0" height="15.0" fill="rgb(244,72,13)" rx="2" ry="2" />
<text  x="142.70" y="1711.5" ></text>
</g>
<g >
<title>clear_page_erms (3 samples, 0.01%)</title><rect x="661.0" y="1749" width="0.2" height="15.0" fill="rgb(222,138,15)" rx="2" ry="2" />
<text  x="664.04" y="1759.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (5 samples, 0.02%)</title><rect x="85.0" y="1621" width="0.3" height="15.0" fill="rgb(222,56,1)" rx="2" ry="2" />
<text  x="88.02" y="1631.5" ></text>
</g>
<g >
<title>handle_mm_fault (13 samples, 0.06%)</title><rect x="683.9" y="1797" width="0.8" height="15.0" fill="rgb(254,49,48)" rx="2" ry="2" />
<text  x="686.90" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (579 samples, 2.88%)</title><rect x="54.3" y="1813" width="33.9" height="15.0" fill="rgb(226,105,35)" rx="2" ry="2" />
<text  x="57.31" y="1823.5" >[u..</text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (149 samples, 0.74%)</title><rect x="1126.1" y="2037" width="8.7" height="15.0" fill="rgb(243,46,7)" rx="2" ry="2" />
<text  x="1129.06" y="2047.5" ></text>
</g>
<g >
<title>zap_page_range (14 samples, 0.07%)</title><rect x="526.2" y="1973" width="0.8" height="15.0" fill="rgb(254,58,4)" rx="2" ry="2" />
<text  x="529.18" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1186.5" y="85" width="0.4" height="15.0" fill="rgb(223,97,9)" rx="2" ry="2" />
<text  x="1189.48" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (446 samples, 2.22%)</title><rect x="189.7" y="1829" width="26.1" height="15.0" fill="rgb(237,39,13)" rx="2" ry="2" />
<text  x="192.70" y="1839.5" >s..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (93 samples, 0.46%)</title><rect x="210.4" y="1781" width="5.4" height="15.0" fill="rgb(243,46,20)" rx="2" ry="2" />
<text  x="213.39" y="1791.5" ></text>
</g>
<g >
<title>get_futex_key (2 samples, 0.01%)</title><rect x="28.0" y="1909" width="0.1" height="15.0" fill="rgb(219,65,26)" rx="2" ry="2" />
<text  x="30.99" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1186.5" y="837" width="0.4" height="15.0" fill="rgb(216,115,47)" rx="2" ry="2" />
<text  x="1189.48" y="847.5" ></text>
</g>
<g >
<title>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::dump (5 samples, 0.02%)</title><rect x="521.4" y="1973" width="0.3" height="15.0" fill="rgb(230,88,41)" rx="2" ry="2" />
<text  x="524.37" y="1983.5" ></text>
</g>
<g >
<title>mmput (6 samples, 0.03%)</title><rect x="1099.9" y="1973" width="0.4" height="15.0" fill="rgb(223,211,42)" rx="2" ry="2" />
<text  x="1102.92" y="1983.5" ></text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (4 samples, 0.02%)</title><rect x="945.4" y="1925" width="0.3" height="15.0" fill="rgb(232,128,12)" rx="2" ry="2" />
<text  x="948.42" y="1935.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (3 samples, 0.01%)</title><rect x="138.9" y="1557" width="0.2" height="15.0" fill="rgb(254,160,34)" rx="2" ry="2" />
<text  x="141.88" y="1567.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::basic_json (3 samples, 0.01%)</title><rect x="521.7" y="1989" width="0.1" height="15.0" fill="rgb(226,195,19)" rx="2" ry="2" />
<text  x="524.67" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (356 samples, 1.77%)</title><rect x="54.4" y="645" width="20.8" height="15.0" fill="rgb(217,125,35)" rx="2" ry="2" />
<text  x="57.37" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (2 samples, 0.01%)</title><rect x="188.1" y="1845" width="0.1" height="15.0" fill="rgb(252,132,16)" rx="2" ry="2" />
<text  x="191.12" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_quantifier (2 samples, 0.01%)</title><rect x="195.0" y="1653" width="0.1" height="15.0" fill="rgb(250,30,39)" rx="2" ry="2" />
<text  x="198.03" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="161.9" y="1685" width="0.2" height="15.0" fill="rgb(248,159,52)" rx="2" ry="2" />
<text  x="164.86" y="1695.5" ></text>
</g>
<g >
<title>page_fault (3 samples, 0.01%)</title><rect x="875.6" y="1941" width="0.1" height="15.0" fill="rgb(220,186,35)" rx="2" ry="2" />
<text  x="878.56" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (75 samples, 0.37%)</title><rect x="201.4" y="1685" width="4.4" height="15.0" fill="rgb(250,60,36)" rx="2" ry="2" />
<text  x="204.42" y="1695.5" ></text>
</g>
<g >
<title>do_page_fault (2 samples, 0.01%)</title><rect x="93.2" y="1989" width="0.1" height="15.0" fill="rgb(225,148,14)" rx="2" ry="2" />
<text  x="96.23" y="1999.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_Alloc_node&gt; (4 samples, 0.02%)</title><rect x="522.6" y="1925" width="0.2" height="15.0" fill="rgb(211,154,14)" rx="2" ry="2" />
<text  x="525.61" y="1935.5" ></text>
</g>
<g >
<title>__do_munmap (2 samples, 0.01%)</title><rect x="90.6" y="1845" width="0.2" height="15.0" fill="rgb(233,100,28)" rx="2" ry="2" />
<text  x="93.65" y="1855.5" ></text>
</g>
<g >
<title>__madvise (3 samples, 0.01%)</title><rect x="82.3" y="1461" width="0.2" height="15.0" fill="rgb(224,108,40)" rx="2" ry="2" />
<text  x="85.33" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (9 samples, 0.04%)</title><rect x="161.1" y="1893" width="0.5" height="15.0" fill="rgb(206,115,45)" rx="2" ry="2" />
<text  x="164.10" y="1903.5" ></text>
</g>
<g >
<title>onmt::unicode::get_case (254 samples, 1.26%)</title><rect x="698.7" y="1877" width="14.9" height="15.0" fill="rgb(248,202,16)" rx="2" ry="2" />
<text  x="701.73" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="217.5" y="1333" width="0.2" height="15.0" fill="rgb(223,92,19)" rx="2" ry="2" />
<text  x="220.48" y="1343.5" ></text>
</g>
<g >
<title>onmt::CaseModifier::extract_case_type (862 samples, 4.28%)</title><rect x="588.7" y="1893" width="50.5" height="15.0" fill="rgb(225,44,18)" rx="2" ry="2" />
<text  x="591.72" y="1903.5" >onmt:..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (250 samples, 1.24%)</title><rect x="162.3" y="1765" width="14.6" height="15.0" fill="rgb(214,44,19)" rx="2" ry="2" />
<text  x="165.27" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (2 samples, 0.01%)</title><rect x="187.7" y="1829" width="0.1" height="15.0" fill="rgb(251,97,3)" rx="2" ry="2" />
<text  x="190.71" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (8 samples, 0.04%)</title><rect x="161.1" y="1861" width="0.5" height="15.0" fill="rgb(222,115,49)" rx="2" ry="2" />
<text  x="164.10" y="1871.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::create&lt;std::vector&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::allocator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, nlohmann::detail::json_ref&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; const*, nlohmann::detail::json_ref&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; const*&gt; (2 samples, 0.01%)</title><rect x="520.7" y="1989" width="0.1" height="15.0" fill="rgb(249,148,31)" rx="2" ry="2" />
<text  x="523.67" y="1999.5" ></text>
</g>
<g >
<title>fasttext::Matrix::size (37 samples, 0.18%)</title><rect x="494.2" y="1957" width="2.2" height="15.0" fill="rgb(210,107,3)" rx="2" ry="2" />
<text  x="497.24" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1186.5" y="309" width="0.4" height="15.0" fill="rgb(226,84,38)" rx="2" ry="2" />
<text  x="1189.48" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1186.5" y="1077" width="0.4" height="15.0" fill="rgb(244,38,7)" rx="2" ry="2" />
<text  x="1189.48" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="188.5" y="1413" width="0.2" height="15.0" fill="rgb(215,125,37)" rx="2" ry="2" />
<text  x="191.53" y="1423.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (27 samples, 0.13%)</title><rect x="1097.7" y="2005" width="1.6" height="15.0" fill="rgb(230,165,17)" rx="2" ry="2" />
<text  x="1100.69" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.01%)</title><rect x="1187.1" y="693" width="0.1" height="15.0" fill="rgb(214,60,3)" rx="2" ry="2" />
<text  x="1190.07" y="703.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::create&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (3 samples, 0.01%)</title><rect x="807.7" y="2037" width="0.2" height="15.0" fill="rgb(228,14,49)" rx="2" ry="2" />
<text  x="810.69" y="2047.5" ></text>
</g>
<g >
<title>nlohmann::detail::input_stream_adapter::get_character (16 samples, 0.08%)</title><rect x="128.5" y="1909" width="0.9" height="15.0" fill="rgb(218,102,34)" rx="2" ry="2" />
<text  x="131.51" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (4 samples, 0.02%)</title><rect x="187.9" y="1861" width="0.2" height="15.0" fill="rgb(221,200,47)" rx="2" ry="2" />
<text  x="190.88" y="1871.5" ></text>
</g>
<g >
<title>alloc_pages_vma (3 samples, 0.01%)</title><rect x="1019.1" y="1957" width="0.2" height="15.0" fill="rgb(207,220,8)" rx="2" ry="2" />
<text  x="1022.09" y="1967.5" ></text>
</g>
<g >
<title>TDocument::~TDocument (2 samples, 0.01%)</title><rect x="123.5" y="1989" width="0.1" height="15.0" fill="rgb(238,225,22)" rx="2" ry="2" />
<text  x="126.47" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.03%)</title><rect x="1186.5" y="773" width="0.4" height="15.0" fill="rgb(242,75,25)" rx="2" ry="2" />
<text  x="1189.48" y="783.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (4 samples, 0.02%)</title><rect x="79.7" y="1173" width="0.3" height="15.0" fill="rgb(252,101,49)" rx="2" ry="2" />
<text  x="82.75" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (93 samples, 0.46%)</title><rect x="182.0" y="1765" width="5.4" height="15.0" fill="rgb(249,140,10)" rx="2" ry="2" />
<text  x="184.96" y="1775.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (50 samples, 0.25%)</title><rect x="146.9" y="1621" width="2.9" height="15.0" fill="rgb(234,105,9)" rx="2" ry="2" />
<text  x="149.85" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1186.5" y="501" width="0.4" height="15.0" fill="rgb(238,86,42)" rx="2" ry="2" />
<text  x="1189.48" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1187.2" y="1989" width="0.5" height="15.0" fill="rgb(208,207,3)" rx="2" ry="2" />
<text  x="1190.25" y="1999.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;std::unique_ptr&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;  (3,919 samples, 19.47%)</title><rect x="529.2" y="2005" width="229.7" height="15.0" fill="rgb(239,165,20)" rx="2" ry="2" />
<text  x="532.23" y="2015.5" >std::_Function_handler&lt;std::un..</text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (20 samples, 0.10%)</title><rect x="684.7" y="1861" width="1.1" height="15.0" fill="rgb(208,112,40)" rx="2" ry="2" />
<text  x="687.66" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (195 samples, 0.97%)</title><rect x="189.7" y="1749" width="11.4" height="15.0" fill="rgb(251,163,48)" rx="2" ry="2" />
<text  x="192.70" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.03%)</title><rect x="1187.2" y="1621" width="0.5" height="15.0" fill="rgb(214,121,15)" rx="2" ry="2" />
<text  x="1190.25" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1187.2" y="1973" width="0.5" height="15.0" fill="rgb(234,191,27)" rx="2" ry="2" />
<text  x="1190.25" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.3" y="597" width="0.4" height="15.0" fill="rgb(207,93,39)" rx="2" ry="2" />
<text  x="1190.30" y="607.5" ></text>
</g>
<g >
<title>__do_page_fault (3 samples, 0.01%)</title><rect x="520.4" y="1909" width="0.2" height="15.0" fill="rgb(247,114,37)" rx="2" ry="2" />
<text  x="523.38" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (416 samples, 2.07%)</title><rect x="54.3" y="1269" width="24.4" height="15.0" fill="rgb(218,55,25)" rx="2" ry="2" />
<text  x="57.31" y="1279.5" >[..</text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (3 samples, 0.01%)</title><rect x="89.7" y="1893" width="0.2" height="15.0" fill="rgb(228,43,5)" rx="2" ry="2" />
<text  x="92.71" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1186.5" y="645" width="0.4" height="15.0" fill="rgb(253,200,43)" rx="2" ry="2" />
<text  x="1189.48" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1186.5" y="1269" width="0.4" height="15.0" fill="rgb(208,48,34)" rx="2" ry="2" />
<text  x="1189.48" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.04%)</title><rect x="217.2" y="1941" width="0.5" height="15.0" fill="rgb(244,94,30)" rx="2" ry="2" />
<text  x="220.25" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.01%)</title><rect x="188.5" y="1397" width="0.2" height="15.0" fill="rgb(222,197,36)" rx="2" ry="2" />
<text  x="191.53" y="1407.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (2 samples, 0.01%)</title><rect x="165.1" y="1541" width="0.1" height="15.0" fill="rgb(208,208,4)" rx="2" ry="2" />
<text  x="168.08" y="1551.5" ></text>
</g>
<g >
<title>onmt::unicode::explode_utf8 (389 samples, 1.93%)</title><rect x="603.1" y="1877" width="22.8" height="15.0" fill="rgb(216,57,19)" rx="2" ry="2" />
<text  x="606.08" y="1887.5" >o..</text>
</g>
<g >
<title>fasttext::FastText::predictLine (235 samples, 1.17%)</title><rect x="530.0" y="1941" width="13.8" height="15.0" fill="rgb(242,184,44)" rx="2" ry="2" />
<text  x="533.05" y="1951.5" ></text>
</g>
<g >
<title>strlen@plt (11 samples, 0.05%)</title><rect x="756.0" y="1893" width="0.7" height="15.0" fill="rgb(252,166,44)" rx="2" ry="2" />
<text  x="759.05" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1186.5" y="885" width="0.4" height="15.0" fill="rgb(223,100,14)" rx="2" ry="2" />
<text  x="1189.48" y="895.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (898 samples, 4.46%)</title><rect x="821.0" y="2037" width="52.6" height="15.0" fill="rgb(251,105,1)" rx="2" ry="2" />
<text  x="823.99" y="2047.5" >std::..</text>
</g>
<g >
<title>page_fault (10 samples, 0.05%)</title><rect x="1018.7" y="2037" width="0.6" height="15.0" fill="rgb(228,195,46)" rx="2" ry="2" />
<text  x="1021.74" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.01%)</title><rect x="161.9" y="1461" width="0.2" height="15.0" fill="rgb(224,175,10)" rx="2" ry="2" />
<text  x="164.92" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (90 samples, 0.45%)</title><rect x="210.5" y="1717" width="5.3" height="15.0" fill="rgb(243,118,34)" rx="2" ry="2" />
<text  x="213.51" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="188.6" y="1317" width="0.1" height="15.0" fill="rgb(228,121,32)" rx="2" ry="2" />
<text  x="191.59" y="1327.5" ></text>
</g>
<g >
<title>__vm_munmap (2 samples, 0.01%)</title><rect x="90.6" y="1861" width="0.2" height="15.0" fill="rgb(208,49,7)" rx="2" ry="2" />
<text  x="93.65" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (8 samples, 0.04%)</title><rect x="1186.4" y="1877" width="0.5" height="15.0" fill="rgb(250,183,30)" rx="2" ry="2" />
<text  x="1189.42" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.04%)</title><rect x="1186.4" y="1909" width="0.5" height="15.0" fill="rgb(251,63,40)" rx="2" ry="2" />
<text  x="1189.42" y="1919.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (8 samples, 0.04%)</title><rect x="194.0" y="1557" width="0.5" height="15.0" fill="rgb(235,78,14)" rx="2" ry="2" />
<text  x="197.04" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.02%)</title><rect x="873.9" y="2021" width="0.2" height="15.0" fill="rgb(226,27,25)" rx="2" ry="2" />
<text  x="876.86" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="217.5" y="1253" width="0.2" height="15.0" fill="rgb(205,122,43)" rx="2" ry="2" />
<text  x="220.54" y="1263.5" ></text>
</g>
<g >
<title>fasttext::Vector::addRow (7 samples, 0.03%)</title><rect x="803.5" y="2037" width="0.4" height="15.0" fill="rgb(220,57,37)" rx="2" ry="2" />
<text  x="806.52" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.02%)</title><rect x="1187.0" y="1765" width="0.2" height="15.0" fill="rgb(221,157,25)" rx="2" ry="2" />
<text  x="1189.95" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (79 samples, 0.39%)</title><rect x="176.9" y="1701" width="4.7" height="15.0" fill="rgb(228,227,52)" rx="2" ry="2" />
<text  x="179.92" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="188.4" y="1893" width="0.3" height="15.0" fill="rgb(237,146,11)" rx="2" ry="2" />
<text  x="191.35" y="1903.5" ></text>
</g>
<g >
<title>__asan_memcpy (7 samples, 0.03%)</title><rect x="581.9" y="1877" width="0.4" height="15.0" fill="rgb(221,127,35)" rx="2" ry="2" />
<text  x="584.86" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.3" y="1365" width="0.4" height="15.0" fill="rgb(237,61,35)" rx="2" ry="2" />
<text  x="1190.30" y="1375.5" ></text>
</g>
<g >
<title>do_page_fault (105 samples, 0.52%)</title><rect x="20.8" y="2021" width="6.1" height="15.0" fill="rgb(217,153,46)" rx="2" ry="2" />
<text  x="23.78" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (86 samples, 0.43%)</title><rect x="190.0" y="1653" width="5.0" height="15.0" fill="rgb(228,142,28)" rx="2" ry="2" />
<text  x="192.99" y="1663.5" ></text>
</g>
<g >
<title>Eigen::internal::gemv_dense_selector&lt;2, 1, true&gt;::run&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; &gt; (326 samples, 1.62%)</title><rect x="383.4" y="1941" width="19.1" height="15.0" fill="rgb(242,225,51)" rx="2" ry="2" />
<text  x="386.41" y="1951.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::reserve (59 samples, 0.29%)</title><rect x="622.4" y="1861" width="3.5" height="15.0" fill="rgb(241,168,10)" rx="2" ry="2" />
<text  x="625.42" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="1187.1" y="1493" width="0.1" height="15.0" fill="rgb(219,128,33)" rx="2" ry="2" />
<text  x="1190.07" y="1503.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (3 samples, 0.01%)</title><rect x="144.3" y="1605" width="0.2" height="15.0" fill="rgb(217,54,26)" rx="2" ry="2" />
<text  x="147.28" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1187.2" y="1749" width="0.5" height="15.0" fill="rgb(244,54,10)" rx="2" ry="2" />
<text  x="1190.25" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.01%)</title><rect x="217.5" y="1397" width="0.2" height="15.0" fill="rgb(237,145,53)" rx="2" ry="2" />
<text  x="220.48" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (78 samples, 0.39%)</title><rect x="150.2" y="1749" width="4.6" height="15.0" fill="rgb(227,94,13)" rx="2" ry="2" />
<text  x="153.20" y="1759.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (4 samples, 0.02%)</title><rect x="171.9" y="1573" width="0.2" height="15.0" fill="rgb(241,196,47)" rx="2" ry="2" />
<text  x="174.88" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (14 samples, 0.07%)</title><rect x="819.4" y="2005" width="0.8" height="15.0" fill="rgb(254,48,14)" rx="2" ry="2" />
<text  x="822.41" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (346 samples, 1.72%)</title><rect x="54.4" y="53" width="20.2" height="15.0" fill="rgb(252,220,33)" rx="2" ry="2" />
<text  x="57.37" y="63.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1186.5" y="853" width="0.4" height="15.0" fill="rgb(215,36,29)" rx="2" ry="2" />
<text  x="1189.48" y="863.5" ></text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.01%)</title><rect x="136.9" y="1557" width="0.2" height="15.0" fill="rgb(221,22,1)" rx="2" ry="2" />
<text  x="139.95" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (5 samples, 0.02%)</title><rect x="216.7" y="1829" width="0.3" height="15.0" fill="rgb(213,209,31)" rx="2" ry="2" />
<text  x="219.66" y="1839.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (16 samples, 0.08%)</title><rect x="1154.7" y="2037" width="1.0" height="15.0" fill="rgb(241,151,12)" rx="2" ry="2" />
<text  x="1157.72" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (468 samples, 2.32%)</title><rect x="54.3" y="1445" width="27.4" height="15.0" fill="rgb(249,174,16)" rx="2" ry="2" />
<text  x="57.31" y="1455.5" >[..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append@plt (2 samples, 0.01%)</title><rect x="1117.1" y="2053" width="0.2" height="15.0" fill="rgb(214,94,38)" rx="2" ry="2" />
<text  x="1120.15" y="2063.5" ></text>
</g>
<g >
<title>Rank (955 samples, 4.74%)</title><rect x="133.0" y="2005" width="56.0" height="15.0" fill="rgb(227,38,17)" rx="2" ry="2" />
<text  x="136.02" y="2015.5" >Rank</text>
</g>
<g >
<title>[unknown] (512 samples, 2.54%)</title><rect x="54.3" y="1573" width="30.0" height="15.0" fill="rgb(219,1,49)" rx="2" ry="2" />
<text  x="57.31" y="1583.5" >[u..</text>
</g>
<g >
<title>memcmp@plt (7 samples, 0.03%)</title><rect x="1107.2" y="2053" width="0.5" height="15.0" fill="rgb(209,140,12)" rx="2" ry="2" />
<text  x="1110.24" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (80 samples, 0.40%)</title><rect x="176.9" y="1765" width="4.7" height="15.0" fill="rgb(248,73,31)" rx="2" ry="2" />
<text  x="179.92" y="1775.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::Unwind (2 samples, 0.01%)</title><rect x="214.1" y="1669" width="0.2" height="15.0" fill="rgb(241,2,41)" rx="2" ry="2" />
<text  x="217.14" y="1679.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (2 samples, 0.01%)</title><rect x="684.1" y="1733" width="0.2" height="15.0" fill="rgb(254,62,51)" rx="2" ry="2" />
<text  x="687.14" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="161.9" y="1525" width="0.2" height="15.0" fill="rgb(219,28,43)" rx="2" ry="2" />
<text  x="164.92" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (78 samples, 0.39%)</title><rect x="155.9" y="1701" width="4.6" height="15.0" fill="rgb(213,18,19)" rx="2" ry="2" />
<text  x="158.94" y="1711.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (4 samples, 0.02%)</title><rect x="656.8" y="1765" width="0.2" height="15.0" fill="rgb(246,92,54)" rx="2" ry="2" />
<text  x="659.76" y="1775.5" ></text>
</g>
<g >
<title>__asan_memcpy (3 samples, 0.01%)</title><rect x="685.8" y="1861" width="0.2" height="15.0" fill="rgb(218,138,22)" rx="2" ry="2" />
<text  x="688.83" y="1871.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (10 samples, 0.05%)</title><rect x="697.4" y="1749" width="0.6" height="15.0" fill="rgb(217,206,35)" rx="2" ry="2" />
<text  x="700.44" y="1759.5" ></text>
</g>
<g >
<title>memcpy (3 samples, 0.01%)</title><rect x="622.2" y="1845" width="0.2" height="15.0" fill="rgb(220,183,45)" rx="2" ry="2" />
<text  x="625.24" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="1187.1" y="1333" width="0.1" height="15.0" fill="rgb(242,214,51)" rx="2" ry="2" />
<text  x="1190.07" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (88 samples, 0.44%)</title><rect x="162.6" y="1637" width="5.2" height="15.0" fill="rgb(224,224,49)" rx="2" ry="2" />
<text  x="165.62" y="1647.5" ></text>
</g>
<g >
<title>do_syscall_64 (3 samples, 0.01%)</title><rect x="1108.4" y="2005" width="0.2" height="15.0" fill="rgb(221,152,29)" rx="2" ry="2" />
<text  x="1111.41" y="2015.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (12 samples, 0.06%)</title><rect x="166.5" y="1541" width="0.8" height="15.0" fill="rgb(254,217,33)" rx="2" ry="2" />
<text  x="169.55" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (8 samples, 0.04%)</title><rect x="1186.4" y="2021" width="0.5" height="15.0" fill="rgb(226,191,25)" rx="2" ry="2" />
<text  x="1189.42" y="2031.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.02%)</title><rect x="769.5" y="2021" width="0.3" height="15.0" fill="rgb(208,20,29)" rx="2" ry="2" />
<text  x="772.53" y="2031.5" ></text>
</g>
<g >
<title>__handle_mm_fault (17 samples, 0.08%)</title><rect x="502.9" y="1861" width="0.9" height="15.0" fill="rgb(235,90,22)" rx="2" ry="2" />
<text  x="505.85" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (346 samples, 1.72%)</title><rect x="54.4" y="117" width="20.2" height="15.0" fill="rgb(238,7,0)" rx="2" ry="2" />
<text  x="57.37" y="127.5" ></text>
</g>
<g >
<title>onmt::unicode::is_letter (186 samples, 0.92%)</title><rect x="626.2" y="1877" width="10.9" height="15.0" fill="rgb(219,173,21)" rx="2" ry="2" />
<text  x="629.17" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (574 samples, 2.85%)</title><rect x="54.3" y="1781" width="33.7" height="15.0" fill="rgb(227,97,49)" rx="2" ry="2" />
<text  x="57.31" y="1791.5" >[u..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.3" y="1413" width="0.4" height="15.0" fill="rgb(208,107,47)" rx="2" ry="2" />
<text  x="1190.30" y="1423.5" ></text>
</g>
<g >
<title>onmt::Tokenizer::tokenize (3,066 samples, 15.23%)</title><rect x="577.5" y="1925" width="179.7" height="15.0" fill="rgb(217,181,42)" rx="2" ry="2" />
<text  x="580.46" y="1935.5" >onmt::Tokenizer::tokenize</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="217.5" y="1621" width="0.2" height="15.0" fill="rgb(218,165,53)" rx="2" ry="2" />
<text  x="220.48" y="1631.5" ></text>
</g>
<g >
<title>page_fault (105 samples, 0.52%)</title><rect x="20.8" y="2037" width="6.1" height="15.0" fill="rgb(229,74,24)" rx="2" ry="2" />
<text  x="23.78" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.03%)</title><rect x="1186.5" y="677" width="0.4" height="15.0" fill="rgb(240,76,48)" rx="2" ry="2" />
<text  x="1189.48" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="217.5" y="1829" width="0.2" height="15.0" fill="rgb(244,12,50)" rx="2" ry="2" />
<text  x="220.48" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (93 samples, 0.46%)</title><rect x="182.0" y="1749" width="5.4" height="15.0" fill="rgb(237,201,12)" rx="2" ry="2" />
<text  x="184.96" y="1759.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.01%)</title><rect x="214.4" y="1669" width="0.1" height="15.0" fill="rgb(245,182,53)" rx="2" ry="2" />
<text  x="217.37" y="1679.5" ></text>
</g>
<g >
<title>__strxfrm_l (2 samples, 0.01%)</title><rect x="1178.9" y="2037" width="0.1" height="15.0" fill="rgb(207,104,28)" rx="2" ry="2" />
<text  x="1181.86" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (4 samples, 0.02%)</title><rect x="189.7" y="1701" width="0.2" height="15.0" fill="rgb(251,42,52)" rx="2" ry="2" />
<text  x="192.70" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1187.2" y="1797" width="0.5" height="15.0" fill="rgb(223,51,52)" rx="2" ry="2" />
<text  x="1190.25" y="1807.5" ></text>
</g>
<g >
<title>__x64_sys_read (3 samples, 0.01%)</title><rect x="1108.4" y="1989" width="0.2" height="15.0" fill="rgb(243,136,52)" rx="2" ry="2" />
<text  x="1111.41" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (353 samples, 1.75%)</title><rect x="54.4" y="549" width="20.7" height="15.0" fill="rgb(226,30,47)" rx="2" ry="2" />
<text  x="57.37" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.3" y="1301" width="0.4" height="15.0" fill="rgb(232,97,39)" rx="2" ry="2" />
<text  x="1190.30" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.3" y="725" width="0.4" height="15.0" fill="rgb(222,99,27)" rx="2" ry="2" />
<text  x="1190.30" y="735.5" ></text>
</g>
<g >
<title>__do_page_fault (13 samples, 0.06%)</title><rect x="660.7" y="1829" width="0.8" height="15.0" fill="rgb(247,2,31)" rx="2" ry="2" />
<text  x="663.69" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1187.3" y="1141" width="0.4" height="15.0" fill="rgb(215,136,31)" rx="2" ry="2" />
<text  x="1190.30" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="161.7" y="1765" width="0.4" height="15.0" fill="rgb(245,8,33)" rx="2" ry="2" />
<text  x="164.68" y="1775.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;std::__detail::_State&lt;char&gt; const*, std::__detail::_State&lt;char&gt;*&gt; (2 samples, 0.01%)</title><rect x="187.7" y="1781" width="0.1" height="15.0" fill="rgb(246,68,8)" rx="2" ry="2" />
<text  x="190.71" y="1791.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotPut (2 samples, 0.01%)</title><rect x="171.1" y="1573" width="0.1" height="15.0" fill="rgb(235,184,23)" rx="2" ry="2" />
<text  x="174.12" y="1583.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (2 samples, 0.01%)</title><rect x="88.4" y="1733" width="0.1" height="15.0" fill="rgb(239,169,14)" rx="2" ry="2" />
<text  x="91.36" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="1187.1" y="229" width="0.1" height="15.0" fill="rgb(248,160,13)" rx="2" ry="2" />
<text  x="1190.07" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (4 samples, 0.02%)</title><rect x="154.8" y="1797" width="0.3" height="15.0" fill="rgb(225,124,44)" rx="2" ry="2" />
<text  x="157.83" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1186.5" y="1701" width="0.4" height="15.0" fill="rgb(249,109,38)" rx="2" ry="2" />
<text  x="1189.48" y="1711.5" ></text>
</g>
<g >
<title>smp_call_function_single (4 samples, 0.02%)</title><rect x="1098.0" y="1765" width="0.2" height="15.0" fill="rgb(247,222,19)" rx="2" ry="2" />
<text  x="1100.98" y="1775.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (27 samples, 0.13%)</title><rect x="1124.5" y="2037" width="1.6" height="15.0" fill="rgb(238,138,12)" rx="2" ry="2" />
<text  x="1127.47" y="2047.5" ></text>
</g>
<g >
<title>x2apic_send_IPI (4 samples, 0.02%)</title><rect x="1098.0" y="1717" width="0.2" height="15.0" fill="rgb(205,35,26)" rx="2" ry="2" />
<text  x="1100.98" y="1727.5" ></text>
</g>
<g >
<title>DetectLanguage[abi:cxx11] (538 samples, 2.67%)</title><rect x="544.2" y="1973" width="31.5" height="15.0" fill="rgb(214,113,16)" rx="2" ry="2" />
<text  x="547.17" y="1983.5" >De..</text>
</g>
<g >
<title>onmt::Tokenizer::tokenize_text (1,672 samples, 8.30%)</title><rect x="639.2" y="1893" width="98.0" height="15.0" fill="rgb(220,32,4)" rx="2" ry="2" />
<text  x="642.24" y="1903.5" >onmt::Token..</text>
</g>
<g >
<title>tlb_finish_mmu (7 samples, 0.03%)</title><rect x="1097.9" y="1893" width="0.4" height="15.0" fill="rgb(248,54,46)" rx="2" ry="2" />
<text  x="1100.92" y="1903.5" ></text>
</g>
<g >
<title>Eigen::internal::general_matrix_vector_product&lt;long, float, Eigen::internal::const_blas_data_mapper&lt;float, long, 1&gt;, 1, false, float, Eigen::internal::const_blas_data_mapper&lt;float, long, 0&gt;, false, 0&gt;::run (274 samples, 1.36%)</title><rect x="224.8" y="1941" width="16.1" height="15.0" fill="rgb(237,67,16)" rx="2" ry="2" />
<text  x="227.81" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (83 samples, 0.41%)</title><rect x="167.8" y="1717" width="4.8" height="15.0" fill="rgb(241,30,34)" rx="2" ry="2" />
<text  x="170.78" y="1727.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (49 samples, 0.24%)</title><rect x="164.4" y="1557" width="2.9" height="15.0" fill="rgb(206,160,51)" rx="2" ry="2" />
<text  x="167.44" y="1567.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::json_value::destroy (3 samples, 0.01%)</title><rect x="123.7" y="1973" width="0.2" height="15.0" fill="rgb(238,171,7)" rx="2" ry="2" />
<text  x="126.70" y="1983.5" ></text>
</g>
<g >
<title>unmap_page_range (6 samples, 0.03%)</title><rect x="1099.9" y="1909" width="0.4" height="15.0" fill="rgb(210,30,12)" rx="2" ry="2" />
<text  x="1102.92" y="1919.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; const*, std::vector&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::allocator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;*&gt; (4 samples, 0.02%)</title><rect x="522.6" y="1845" width="0.2" height="15.0" fill="rgb(209,4,19)" rx="2" ry="2" />
<text  x="525.61" y="1855.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (2 samples, 0.01%)</title><rect x="1024.6" y="1941" width="0.1" height="15.0" fill="rgb(251,175,19)" rx="2" ry="2" />
<text  x="1027.60" y="1951.5" ></text>
</g>
<g >
<title>__do_page_fault (109 samples, 0.54%)</title><rect x="941.9" y="2005" width="6.4" height="15.0" fill="rgb(231,23,41)" rx="2" ry="2" />
<text  x="944.90" y="2015.5" ></text>
</g>
<g >
<title>handle_mm_fault (6 samples, 0.03%)</title><rect x="1019.0" y="1989" width="0.3" height="15.0" fill="rgb(219,22,48)" rx="2" ry="2" />
<text  x="1021.98" y="1999.5" ></text>
</g>
<g >
<title>onmt::unicode::is_letter (8 samples, 0.04%)</title><rect x="737.9" y="1893" width="0.5" height="15.0" fill="rgb(245,94,16)" rx="2" ry="2" />
<text  x="740.94" y="1903.5" ></text>
</g>
<g >
<title>__vm_munmap (2 samples, 0.01%)</title><rect x="89.0" y="1781" width="0.1" height="15.0" fill="rgb(254,84,13)" rx="2" ry="2" />
<text  x="92.01" y="1791.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (2 samples, 0.01%)</title><rect x="82.4" y="1349" width="0.1" height="15.0" fill="rgb(208,204,24)" rx="2" ry="2" />
<text  x="85.38" y="1359.5" ></text>
</g>
<g >
<title>ptep_clear_flush (25 samples, 0.12%)</title><rect x="946.7" y="1925" width="1.5" height="15.0" fill="rgb(231,173,46)" rx="2" ry="2" />
<text  x="949.71" y="1935.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (3 samples, 0.01%)</title><rect x="136.4" y="1557" width="0.2" height="15.0" fill="rgb(214,167,7)" rx="2" ry="2" />
<text  x="139.42" y="1567.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="575.6" y="1957" width="0.1" height="15.0" fill="rgb(206,69,2)" rx="2" ry="2" />
<text  x="578.59" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (4 samples, 0.02%)</title><rect x="216.7" y="1813" width="0.2" height="15.0" fill="rgb(241,18,29)" rx="2" ry="2" />
<text  x="219.66" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="1187.1" y="485" width="0.1" height="15.0" fill="rgb(242,72,24)" rx="2" ry="2" />
<text  x="1190.07" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (68 samples, 0.34%)</title><rect x="172.7" y="1685" width="4.0" height="15.0" fill="rgb(244,214,39)" rx="2" ry="2" />
<text  x="175.70" y="1695.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;std::__detail::_State&lt;char&gt; const*, std::__detail::_State&lt;char&gt;*&gt; (2 samples, 0.01%)</title><rect x="181.8" y="1701" width="0.2" height="15.0" fill="rgb(235,28,52)" rx="2" ry="2" />
<text  x="184.85" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.04%)</title><rect x="1186.4" y="1845" width="0.5" height="15.0" fill="rgb(211,151,9)" rx="2" ry="2" />
<text  x="1189.42" y="1855.5" ></text>
</g>
<g >
<title>__handle_mm_fault (86 samples, 0.43%)</title><rect x="943.2" y="1973" width="5.0" height="15.0" fill="rgb(216,155,14)" rx="2" ry="2" />
<text  x="946.19" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (354 samples, 1.76%)</title><rect x="54.4" y="581" width="20.7" height="15.0" fill="rgb(245,207,53)" rx="2" ry="2" />
<text  x="57.37" y="591.5" ></text>
</g>
<g >
<title>find_vma (2 samples, 0.01%)</title><rect x="766.0" y="1973" width="0.1" height="15.0" fill="rgb(212,9,45)" rx="2" ry="2" />
<text  x="769.01" y="1983.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::getLabel[abi:cxx11] (3 samples, 0.01%)</title><rect x="530.2" y="1925" width="0.1" height="15.0" fill="rgb(248,82,28)" rx="2" ry="2" />
<text  x="533.17" y="1935.5" ></text>
</g>
<g >
<title>page_fault (13 samples, 0.06%)</title><rect x="660.7" y="1861" width="0.8" height="15.0" fill="rgb(219,28,16)" rx="2" ry="2" />
<text  x="663.69" y="1871.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (3 samples, 0.01%)</title><rect x="620.1" y="1845" width="0.2" height="15.0" fill="rgb(239,223,14)" rx="2" ry="2" />
<text  x="623.13" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1186.5" y="69" width="0.4" height="15.0" fill="rgb(252,55,34)" rx="2" ry="2" />
<text  x="1189.48" y="79.5" ></text>
</g>
<g >
<title>[unknown] (359 samples, 1.78%)</title><rect x="54.4" y="821" width="21.0" height="15.0" fill="rgb(237,140,30)" rx="2" ry="2" />
<text  x="57.37" y="831.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (2 samples, 0.01%)</title><rect x="169.5" y="1573" width="0.1" height="15.0" fill="rgb(237,178,39)" rx="2" ry="2" />
<text  x="172.48" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1186.5" y="421" width="0.4" height="15.0" fill="rgb(208,220,45)" rx="2" ry="2" />
<text  x="1189.48" y="431.5" ></text>
</g>
<g >
<title>Eigen::internal::generic_product_impl&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt;, Eigen::DenseShape, Eigen::DenseShape, 8&gt;::scaleAndAddTo&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt; (136 samples, 0.68%)</title><rect x="503.9" y="1941" width="8.0" height="15.0" fill="rgb(248,136,17)" rx="2" ry="2" />
<text  x="506.91" y="1951.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (50 samples, 0.25%)</title><rect x="157.5" y="1685" width="2.9" height="15.0" fill="rgb(213,92,36)" rx="2" ry="2" />
<text  x="160.46" y="1695.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (3 samples, 0.01%)</title><rect x="216.5" y="1749" width="0.2" height="15.0" fill="rgb(206,105,14)" rx="2" ry="2" />
<text  x="219.48" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (351 samples, 1.74%)</title><rect x="54.4" y="485" width="20.5" height="15.0" fill="rgb(251,205,15)" rx="2" ry="2" />
<text  x="57.37" y="495.5" ></text>
</g>
<g >
<title>[unknown] (352 samples, 1.75%)</title><rect x="54.4" y="517" width="20.6" height="15.0" fill="rgb(223,62,3)" rx="2" ry="2" />
<text  x="57.37" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="162.0" y="1237" width="0.1" height="15.0" fill="rgb(221,142,37)" rx="2" ry="2" />
<text  x="164.98" y="1247.5" ></text>
</g>
<g >
<title>call_rwsem_wake (3 samples, 0.01%)</title><rect x="1099.0" y="1941" width="0.2" height="15.0" fill="rgb(248,206,0)" rx="2" ry="2" />
<text  x="1102.04" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="1187.1" y="1301" width="0.1" height="15.0" fill="rgb(237,112,14)" rx="2" ry="2" />
<text  x="1190.07" y="1311.5" ></text>
</g>
<g >
<title>flush_tlb_mm_range (2 samples, 0.01%)</title><rect x="79.2" y="1125" width="0.1" height="15.0" fill="rgb(223,68,15)" rx="2" ry="2" />
<text  x="82.16" y="1135.5" ></text>
</g>
<g >
<title>nlohmann::detail::parser&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::sax_parse_internal&lt;nlohmann::detail::json_sax_dom_parser&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; (138 samples, 0.69%)</title><rect x="123.9" y="1957" width="8.1" height="15.0" fill="rgb(206,190,52)" rx="2" ry="2" />
<text  x="126.94" y="1967.5" ></text>
</g>
<g >
<title>fasttext::Vector::addVector (2 samples, 0.01%)</title><rect x="517.2" y="1973" width="0.1" height="15.0" fill="rgb(238,61,48)" rx="2" ry="2" />
<text  x="520.15" y="1983.5" ></text>
</g>
<g >
<title>Eigen::PlainObjectBase&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; &gt;::resize (5 samples, 0.02%)</title><rect x="42.1" y="2037" width="0.3" height="15.0" fill="rgb(253,68,6)" rx="2" ry="2" />
<text  x="45.06" y="2047.5" ></text>
</g>
<g >
<title>fasttext::FastText::getDimension (47 samples, 0.23%)</title><rect x="514.3" y="1973" width="2.7" height="15.0" fill="rgb(226,134,19)" rx="2" ry="2" />
<text  x="517.28" y="1983.5" ></text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.01%)</title><rect x="158.5" y="1669" width="0.1" height="15.0" fill="rgb(230,138,2)" rx="2" ry="2" />
<text  x="161.46" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (8 samples, 0.04%)</title><rect x="1186.4" y="1829" width="0.5" height="15.0" fill="rgb(236,155,1)" rx="2" ry="2" />
<text  x="1189.42" y="1839.5" ></text>
</g>
<g >
<title>clear_page_erms (3 samples, 0.01%)</title><rect x="1189.5" y="1909" width="0.2" height="15.0" fill="rgb(239,153,27)" rx="2" ry="2" />
<text  x="1192.53" y="1919.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (3 samples, 0.01%)</title><rect x="1099.4" y="2005" width="0.2" height="15.0" fill="rgb(247,88,0)" rx="2" ry="2" />
<text  x="1102.39" y="2015.5" ></text>
</g>
<g >
<title>futex_wait (6 samples, 0.03%)</title><rect x="132.6" y="1893" width="0.3" height="15.0" fill="rgb(231,123,47)" rx="2" ry="2" />
<text  x="135.55" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (348 samples, 1.73%)</title><rect x="54.4" y="373" width="20.4" height="15.0" fill="rgb(254,144,11)" rx="2" ry="2" />
<text  x="57.37" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.04%)</title><rect x="1186.4" y="1749" width="0.5" height="15.0" fill="rgb(217,220,54)" rx="2" ry="2" />
<text  x="1189.42" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.01%)</title><rect x="811.2" y="2021" width="0.2" height="15.0" fill="rgb(238,74,40)" rx="2" ry="2" />
<text  x="814.20" y="2031.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (2 samples, 0.01%)</title><rect x="28.6" y="1957" width="0.1" height="15.0" fill="rgb(209,26,3)" rx="2" ry="2" />
<text  x="31.58" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="1187.1" y="581" width="0.1" height="15.0" fill="rgb(220,171,51)" rx="2" ry="2" />
<text  x="1190.07" y="591.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (2 samples, 0.01%)</title><rect x="769.0" y="1845" width="0.1" height="15.0" fill="rgb(252,191,15)" rx="2" ry="2" />
<text  x="772.00" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (96 samples, 0.48%)</title><rect x="133.9" y="1605" width="5.6" height="15.0" fill="rgb(221,74,29)" rx="2" ry="2" />
<text  x="136.90" y="1615.5" ></text>
</g>
<g >
<title>__x64_sys_madvise (16 samples, 0.08%)</title><rect x="526.1" y="1989" width="0.9" height="15.0" fill="rgb(237,144,8)" rx="2" ry="2" />
<text  x="529.06" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="188.6" y="1333" width="0.1" height="15.0" fill="rgb(238,29,42)" rx="2" ry="2" />
<text  x="191.59" y="1343.5" ></text>
</g>
<g >
<title>__asan::Allocator::Allocate (1,163 samples, 5.78%)</title><rect x="880.2" y="2053" width="68.1" height="15.0" fill="rgb(226,76,13)" rx="2" ry="2" />
<text  x="883.19" y="2063.5" >__asan:..</text>
</g>
<g >
<title>__sanitizer::internal_munmap (4 samples, 0.02%)</title><rect x="79.7" y="1317" width="0.3" height="15.0" fill="rgb(215,82,50)" rx="2" ry="2" />
<text  x="82.75" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="1187.1" y="853" width="0.1" height="15.0" fill="rgb(224,45,7)" rx="2" ry="2" />
<text  x="1190.07" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="1187.1" y="1525" width="0.1" height="15.0" fill="rgb(238,203,11)" rx="2" ry="2" />
<text  x="1190.07" y="1535.5" ></text>
</g>
<g >
<title>onmt::Tokenizer::finalize_tokens (75 samples, 0.37%)</title><rect x="578.2" y="1909" width="4.4" height="15.0" fill="rgb(238,22,3)" rx="2" ry="2" />
<text  x="581.23" y="1919.5" ></text>
</g>
<g >
<title>x2apic_send_IPI (2 samples, 0.01%)</title><rect x="79.8" y="1029" width="0.1" height="15.0" fill="rgb(216,106,5)" rx="2" ry="2" />
<text  x="82.80" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1186.9" y="2037" width="0.3" height="15.0" fill="rgb(209,121,7)" rx="2" ry="2" />
<text  x="1189.89" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1186.5" y="901" width="0.4" height="15.0" fill="rgb(206,155,15)" rx="2" ry="2" />
<text  x="1189.48" y="911.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (3 samples, 0.01%)</title><rect x="732.4" y="1781" width="0.1" height="15.0" fill="rgb(222,213,52)" rx="2" ry="2" />
<text  x="735.37" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="1187.1" y="133" width="0.1" height="15.0" fill="rgb(212,25,37)" rx="2" ry="2" />
<text  x="1190.07" y="143.5" ></text>
</g>
<g >
<title>ComputeClusterWeight (949 samples, 4.71%)</title><rect x="133.2" y="1989" width="55.6" height="15.0" fill="rgb(215,61,30)" rx="2" ry="2" />
<text  x="136.20" y="1999.5" >Compu..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="1187.1" y="197" width="0.1" height="15.0" fill="rgb(216,210,20)" rx="2" ry="2" />
<text  x="1190.07" y="207.5" ></text>
</g>
<g >
<title>try_charge (6 samples, 0.03%)</title><rect x="698.2" y="1733" width="0.4" height="15.0" fill="rgb(229,94,45)" rx="2" ry="2" />
<text  x="701.20" y="1743.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.01%)</title><rect x="183.5" y="1669" width="0.1" height="15.0" fill="rgb(222,86,31)" rx="2" ry="2" />
<text  x="186.49" y="1679.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.01%)</title><rect x="195.7" y="1621" width="0.2" height="15.0" fill="rgb(227,178,11)" rx="2" ry="2" />
<text  x="198.74" y="1631.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.01%)</title><rect x="331.2" y="1989" width="0.2" height="15.0" fill="rgb(228,48,39)" rx="2" ry="2" />
<text  x="334.24" y="1999.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (20 samples, 0.10%)</title><rect x="620.3" y="1845" width="1.2" height="15.0" fill="rgb(208,181,38)" rx="2" ry="2" />
<text  x="623.31" y="1855.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.02%)</title><rect x="159.1" y="1669" width="0.2" height="15.0" fill="rgb(210,114,5)" rx="2" ry="2" />
<text  x="162.10" y="1679.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (3 samples, 0.01%)</title><rect x="811.2" y="2005" width="0.2" height="15.0" fill="rgb(206,134,41)" rx="2" ry="2" />
<text  x="814.20" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (4 samples, 0.02%)</title><rect x="187.9" y="1845" width="0.2" height="15.0" fill="rgb(232,223,48)" rx="2" ry="2" />
<text  x="190.88" y="1855.5" ></text>
</g>
<g >
<title>__sanitizer::internal_munmap (2 samples, 0.01%)</title><rect x="79.2" y="1285" width="0.1" height="15.0" fill="rgb(227,172,31)" rx="2" ry="2" />
<text  x="82.16" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1186.5" y="1717" width="0.4" height="15.0" fill="rgb(233,1,17)" rx="2" ry="2" />
<text  x="1189.48" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="217.5" y="1285" width="0.2" height="15.0" fill="rgb(239,139,41)" rx="2" ry="2" />
<text  x="220.54" y="1295.5" ></text>
</g>
<g >
<title>[unknown] (373 samples, 1.85%)</title><rect x="54.4" y="1093" width="21.8" height="15.0" fill="rgb(232,203,37)" rx="2" ry="2" />
<text  x="57.37" y="1103.5" >[..</text>
</g>
<g >
<title>boost::algorithm::join&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, char [2]&gt; (22 samples, 0.11%)</title><rect x="576.1" y="1941" width="1.2" height="15.0" fill="rgb(254,219,17)" rx="2" ry="2" />
<text  x="579.06" y="1951.5" ></text>
</g>
<g >
<title>__sanitizer::mem_is_zero (2 samples, 0.01%)</title><rect x="1120.5" y="2037" width="0.1" height="15.0" fill="rgb(222,129,52)" rx="2" ry="2" />
<text  x="1123.49" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.3" y="1061" width="0.4" height="15.0" fill="rgb(231,165,44)" rx="2" ry="2" />
<text  x="1190.30" y="1071.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.02%)</title><rect x="326.3" y="1941" width="0.3" height="15.0" fill="rgb(248,87,23)" rx="2" ry="2" />
<text  x="329.26" y="1951.5" ></text>
</g>
<g >
<title>unmap_region (2 samples, 0.01%)</title><rect x="82.1" y="1349" width="0.1" height="15.0" fill="rgb(235,167,38)" rx="2" ry="2" />
<text  x="85.09" y="1359.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="161.0" y="1813" width="0.1" height="15.0" fill="rgb(218,191,28)" rx="2" ry="2" />
<text  x="163.98" y="1823.5" ></text>
</g>
<g >
<title>__interceptor_strlen (2 samples, 0.01%)</title><rect x="603.0" y="1861" width="0.1" height="15.0" fill="rgb(244,2,48)" rx="2" ry="2" />
<text  x="605.96" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="161.7" y="1861" width="0.4" height="15.0" fill="rgb(235,32,39)" rx="2" ry="2" />
<text  x="164.68" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.3" y="1269" width="0.4" height="15.0" fill="rgb(250,218,0)" rx="2" ry="2" />
<text  x="1190.30" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1186.5" y="789" width="0.4" height="15.0" fill="rgb(236,127,45)" rx="2" ry="2" />
<text  x="1189.48" y="799.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (3 samples, 0.01%)</title><rect x="181.4" y="1653" width="0.2" height="15.0" fill="rgb(211,217,45)" rx="2" ry="2" />
<text  x="184.38" y="1663.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (2 samples, 0.01%)</title><rect x="336.1" y="1989" width="0.1" height="15.0" fill="rgb(228,147,44)" rx="2" ry="2" />
<text  x="339.11" y="1999.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::push_back (3 samples, 0.01%)</title><rect x="876.3" y="2037" width="0.1" height="15.0" fill="rgb(217,106,9)" rx="2" ry="2" />
<text  x="879.26" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.01%)</title><rect x="188.5" y="1717" width="0.2" height="15.0" fill="rgb(220,223,23)" rx="2" ry="2" />
<text  x="191.53" y="1727.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="90.6" y="1893" width="0.2" height="15.0" fill="rgb(224,102,11)" rx="2" ry="2" />
<text  x="93.65" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1187.3" y="1525" width="0.4" height="15.0" fill="rgb(246,157,37)" rx="2" ry="2" />
<text  x="1190.30" y="1535.5" ></text>
</g>
<g >
<title>nlohmann::detail::external_constructor&lt; (2 samples, 0.01%)</title><rect x="124.1" y="1909" width="0.1" height="15.0" fill="rgb(240,44,43)" rx="2" ry="2" />
<text  x="127.11" y="1919.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (2 samples, 0.01%)</title><rect x="514.0" y="1861" width="0.1" height="15.0" fill="rgb(216,142,45)" rx="2" ry="2" />
<text  x="516.99" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.03%)</title><rect x="1186.5" y="341" width="0.4" height="15.0" fill="rgb(246,40,53)" rx="2" ry="2" />
<text  x="1189.48" y="351.5" ></text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.01%)</title><rect x="141.1" y="1605" width="0.2" height="15.0" fill="rgb(211,27,34)" rx="2" ry="2" />
<text  x="144.11" y="1615.5" ></text>
</g>
<g >
<title>smp_call_function_single (2 samples, 0.01%)</title><rect x="79.2" y="1045" width="0.1" height="15.0" fill="rgb(250,86,24)" rx="2" ry="2" />
<text  x="82.16" y="1055.5" ></text>
</g>
<g >
<title>__do_page_fault (3 samples, 0.01%)</title><rect x="875.6" y="1909" width="0.1" height="15.0" fill="rgb(242,51,48)" rx="2" ry="2" />
<text  x="878.56" y="1919.5" ></text>
</g>
<g >
<title>__interceptor_memcmp (140 samples, 0.70%)</title><rect x="1134.8" y="2037" width="8.2" height="15.0" fill="rgb(211,131,1)" rx="2" ry="2" />
<text  x="1137.79" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.01%)</title><rect x="876.1" y="2021" width="0.2" height="15.0" fill="rgb(211,95,14)" rx="2" ry="2" />
<text  x="879.08" y="2031.5" ></text>
</g>
<g >
<title>__asan::PoisonShadow (86 samples, 0.43%)</title><rect x="47.4" y="2021" width="5.0" height="15.0" fill="rgb(248,113,4)" rx="2" ry="2" />
<text  x="50.39" y="2031.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (4 samples, 0.02%)</title><rect x="876.7" y="2005" width="0.3" height="15.0" fill="rgb(209,75,41)" rx="2" ry="2" />
<text  x="879.73" y="2015.5" ></text>
</g>
<g >
<title>__asan::asan_memalign (2 samples, 0.01%)</title><rect x="142.0" y="1589" width="0.1" height="15.0" fill="rgb(217,15,47)" rx="2" ry="2" />
<text  x="144.99" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="188.6" y="1205" width="0.1" height="15.0" fill="rgb(228,153,50)" rx="2" ry="2" />
<text  x="191.59" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="1187.1" y="725" width="0.1" height="15.0" fill="rgb(245,52,30)" rx="2" ry="2" />
<text  x="1190.07" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1187.3" y="517" width="0.4" height="15.0" fill="rgb(249,138,36)" rx="2" ry="2" />
<text  x="1190.30" y="527.5" ></text>
</g>
<g >
<title>[unknown] (358 samples, 1.78%)</title><rect x="54.4" y="805" width="21.0" height="15.0" fill="rgb(241,129,34)" rx="2" ry="2" />
<text  x="57.37" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.3" y="821" width="0.4" height="15.0" fill="rgb(216,150,34)" rx="2" ry="2" />
<text  x="1190.30" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.03%)</title><rect x="1186.5" y="485" width="0.4" height="15.0" fill="rgb(216,209,1)" rx="2" ry="2" />
<text  x="1189.48" y="495.5" ></text>
</g>
<g >
<title>[unknown] (356 samples, 1.77%)</title><rect x="54.4" y="693" width="20.8" height="15.0" fill="rgb(225,124,17)" rx="2" ry="2" />
<text  x="57.37" y="703.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (4 samples, 0.02%)</title><rect x="1189.5" y="1925" width="0.3" height="15.0" fill="rgb(231,97,27)" rx="2" ry="2" />
<text  x="1192.53" y="1935.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_erase (2 samples, 0.01%)</title><rect x="522.3" y="1989" width="0.1" height="15.0" fill="rgb(237,217,16)" rx="2" ry="2" />
<text  x="525.31" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.03%)</title><rect x="1186.5" y="1253" width="0.4" height="15.0" fill="rgb(224,180,9)" rx="2" ry="2" />
<text  x="1189.48" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (5 samples, 0.02%)</title><rect x="181.7" y="1733" width="0.3" height="15.0" fill="rgb(230,226,31)" rx="2" ry="2" />
<text  x="184.67" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (83 samples, 0.41%)</title><rect x="167.8" y="1621" width="4.8" height="15.0" fill="rgb(225,97,39)" rx="2" ry="2" />
<text  x="170.78" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.3" y="789" width="0.4" height="15.0" fill="rgb(235,90,49)" rx="2" ry="2" />
<text  x="1190.30" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1187.2" y="1925" width="0.5" height="15.0" fill="rgb(210,168,7)" rx="2" ry="2" />
<text  x="1190.25" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1186.5" y="325" width="0.4" height="15.0" fill="rgb(209,48,2)" rx="2" ry="2" />
<text  x="1189.48" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (67 samples, 0.33%)</title><rect x="172.8" y="1637" width="3.9" height="15.0" fill="rgb(242,145,43)" rx="2" ry="2" />
<text  x="175.76" y="1647.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (2 samples, 0.01%)</title><rect x="766.1" y="1925" width="0.1" height="15.0" fill="rgb(242,80,52)" rx="2" ry="2" />
<text  x="769.13" y="1935.5" ></text>
</g>
<g >
<title>alloc_pages_vma (4 samples, 0.02%)</title><rect x="1189.5" y="1941" width="0.3" height="15.0" fill="rgb(243,69,17)" rx="2" ry="2" />
<text  x="1192.53" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (365 samples, 1.81%)</title><rect x="54.4" y="1029" width="21.4" height="15.0" fill="rgb(239,7,31)" rx="2" ry="2" />
<text  x="57.37" y="1039.5" >[..</text>
</g>
<g >
<title>Eigen::PlainObjectBase&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; &gt;::resize (3 samples, 0.01%)</title><rect x="224.2" y="1957" width="0.1" height="15.0" fill="rgb(240,133,47)" rx="2" ry="2" />
<text  x="227.16" y="1967.5" ></text>
</g>
<g >
<title>std::ios_base::~ios_base (3 samples, 0.01%)</title><rect x="876.1" y="2037" width="0.2" height="15.0" fill="rgb(232,217,38)" rx="2" ry="2" />
<text  x="879.08" y="2047.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.02%)</title><rect x="180.0" y="1621" width="0.2" height="15.0" fill="rgb(222,122,4)" rx="2" ry="2" />
<text  x="182.97" y="1631.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;std::__detail::_State&lt;char&gt; const*, std::__detail::_State&lt;char&gt;*&gt; (3 samples, 0.01%)</title><rect x="154.9" y="1717" width="0.2" height="15.0" fill="rgb(223,217,34)" rx="2" ry="2" />
<text  x="157.88" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.02%)</title><rect x="1187.0" y="1797" width="0.2" height="15.0" fill="rgb(209,41,38)" rx="2" ry="2" />
<text  x="1189.95" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (4 samples, 0.02%)</title><rect x="216.4" y="1797" width="0.3" height="15.0" fill="rgb(241,95,8)" rx="2" ry="2" />
<text  x="219.43" y="1807.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (4 samples, 0.02%)</title><rect x="77.0" y="1157" width="0.2" height="15.0" fill="rgb(205,76,17)" rx="2" ry="2" />
<text  x="79.99" y="1167.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (3 samples, 0.01%)</title><rect x="194.8" y="1589" width="0.2" height="15.0" fill="rgb(237,105,25)" rx="2" ry="2" />
<text  x="197.80" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (4 samples, 0.02%)</title><rect x="154.8" y="1781" width="0.3" height="15.0" fill="rgb(218,164,50)" rx="2" ry="2" />
<text  x="157.83" y="1791.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.01%)</title><rect x="175.4" y="1589" width="0.1" height="15.0" fill="rgb(227,80,16)" rx="2" ry="2" />
<text  x="178.40" y="1599.5" ></text>
</g>
<g >
<title>arch_tlb_finish_mmu (12 samples, 0.06%)</title><rect x="526.2" y="1941" width="0.7" height="15.0" fill="rgb(219,223,5)" rx="2" ry="2" />
<text  x="529.18" y="1951.5" ></text>
</g>
<g >
<title>fasttext::DenseMatrix::addRowToVector (1,353 samples, 6.72%)</title><rect x="402.9" y="1957" width="79.3" height="15.0" fill="rgb(234,12,21)" rx="2" ry="2" />
<text  x="405.86" y="1967.5" >fasttext:..</text>
</g>
<g >
<title>__alloc_pages_nodemask (26 samples, 0.13%)</title><rect x="512.3" y="1861" width="1.6" height="15.0" fill="rgb(234,103,32)" rx="2" ry="2" />
<text  x="515.35" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (353 samples, 1.75%)</title><rect x="54.4" y="565" width="20.7" height="15.0" fill="rgb(253,1,48)" rx="2" ry="2" />
<text  x="57.37" y="575.5" ></text>
</g>
<g >
<title>@plt (3 samples, 0.01%)</title><rect x="1163.3" y="2021" width="0.2" height="15.0" fill="rgb(207,64,44)" rx="2" ry="2" />
<text  x="1166.33" y="2031.5" ></text>
</g>
<g >
<title>__asan_memcpy (3 samples, 0.01%)</title><rect x="198.5" y="1589" width="0.2" height="15.0" fill="rgb(228,46,42)" rx="2" ry="2" />
<text  x="201.49" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="188.5" y="1781" width="0.2" height="15.0" fill="rgb(218,27,48)" rx="2" ry="2" />
<text  x="191.47" y="1791.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (4 samples, 0.02%)</title><rect x="93.3" y="2021" width="0.3" height="15.0" fill="rgb(244,175,32)" rx="2" ry="2" />
<text  x="96.34" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="1187.1" y="677" width="0.1" height="15.0" fill="rgb(210,114,27)" rx="2" ry="2" />
<text  x="1190.07" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.03%)</title><rect x="1186.5" y="1397" width="0.4" height="15.0" fill="rgb(240,23,2)" rx="2" ry="2" />
<text  x="1189.48" y="1407.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (71 samples, 0.35%)</title><rect x="1155.9" y="2037" width="4.2" height="15.0" fill="rgb(254,24,35)" rx="2" ry="2" />
<text  x="1158.95" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.3" y="1541" width="0.4" height="15.0" fill="rgb(245,47,36)" rx="2" ry="2" />
<text  x="1190.30" y="1551.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotPut (10 samples, 0.05%)</title><rect x="1177.9" y="2037" width="0.6" height="15.0" fill="rgb(216,152,48)" rx="2" ry="2" />
<text  x="1180.93" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="217.3" y="1909" width="0.4" height="15.0" fill="rgb(207,14,33)" rx="2" ry="2" />
<text  x="220.30" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (359 samples, 1.78%)</title><rect x="54.4" y="869" width="21.0" height="15.0" fill="rgb(218,102,12)" rx="2" ry="2" />
<text  x="57.37" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (94 samples, 0.47%)</title><rect x="162.3" y="1717" width="5.5" height="15.0" fill="rgb(217,173,31)" rx="2" ry="2" />
<text  x="165.27" y="1727.5" ></text>
</g>
<g >
<title>unmap_region (2 samples, 0.01%)</title><rect x="89.0" y="1749" width="0.1" height="15.0" fill="rgb(253,192,49)" rx="2" ry="2" />
<text  x="92.01" y="1759.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (24 samples, 0.12%)</title><rect x="23.2" y="1941" width="1.4" height="15.0" fill="rgb(214,184,6)" rx="2" ry="2" />
<text  x="26.19" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.3" y="389" width="0.4" height="15.0" fill="rgb(223,41,51)" rx="2" ry="2" />
<text  x="1190.30" y="399.5" ></text>
</g>
<g >
<title>[unknown] (484 samples, 2.40%)</title><rect x="54.3" y="1477" width="28.4" height="15.0" fill="rgb(220,132,10)" rx="2" ry="2" />
<text  x="57.31" y="1487.5" >[u..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1187.2" y="1733" width="0.5" height="15.0" fill="rgb(224,38,24)" rx="2" ry="2" />
<text  x="1190.25" y="1743.5" ></text>
</g>
<g >
<title>__pthread_getspecific (104 samples, 0.52%)</title><rect x="1005.3" y="2053" width="6.1" height="15.0" fill="rgb(250,121,6)" rx="2" ry="2" />
<text  x="1008.26" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="188.5" y="1797" width="0.2" height="15.0" fill="rgb(254,130,33)" rx="2" ry="2" />
<text  x="191.47" y="1807.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::set (28 samples, 0.14%)</title><rect x="587.1" y="1893" width="1.6" height="15.0" fill="rgb(219,115,22)" rx="2" ry="2" />
<text  x="590.08" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (88 samples, 0.44%)</title><rect x="162.6" y="1653" width="5.2" height="15.0" fill="rgb(214,211,21)" rx="2" ry="2" />
<text  x="165.62" y="1663.5" ></text>
</g>
<g >
<title>__pthread_getspecific (3 samples, 0.01%)</title><rect x="204.5" y="1605" width="0.1" height="15.0" fill="rgb(228,53,47)" rx="2" ry="2" />
<text  x="207.47" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.03%)</title><rect x="1186.5" y="1301" width="0.4" height="15.0" fill="rgb(213,165,53)" rx="2" ry="2" />
<text  x="1189.48" y="1311.5" ></text>
</g>
<g >
<title>[unknown] (347 samples, 1.72%)</title><rect x="54.4" y="197" width="20.3" height="15.0" fill="rgb(206,106,13)" rx="2" ry="2" />
<text  x="57.37" y="207.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_rehash_aux (2 samples, 0.01%)</title><rect x="1108.3" y="2053" width="0.1" height="15.0" fill="rgb(247,66,16)" rx="2" ry="2" />
<text  x="1111.30" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1186.5" y="1125" width="0.4" height="15.0" fill="rgb(224,154,21)" rx="2" ry="2" />
<text  x="1189.48" y="1135.5" ></text>
</g>
<g >
<title>fasttext::FastText::getWordVector (240 samples, 1.19%)</title><rect x="312.7" y="1973" width="14.0" height="15.0" fill="rgb(242,147,48)" rx="2" ry="2" />
<text  x="315.66" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (354 samples, 1.76%)</title><rect x="54.4" y="613" width="20.7" height="15.0" fill="rgb(208,20,46)" rx="2" ry="2" />
<text  x="57.37" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1186.5" y="1381" width="0.4" height="15.0" fill="rgb(250,195,31)" rx="2" ry="2" />
<text  x="1189.48" y="1391.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (4 samples, 0.02%)</title><rect x="873.9" y="2005" width="0.2" height="15.0" fill="rgb(227,53,3)" rx="2" ry="2" />
<text  x="876.86" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (467 samples, 2.32%)</title><rect x="189.7" y="1909" width="27.4" height="15.0" fill="rgb(205,100,9)" rx="2" ry="2" />
<text  x="192.70" y="1919.5" >s..</text>
</g>
<g >
<title>[unknown] (3 samples, 0.01%)</title><rect x="807.7" y="2021" width="0.2" height="15.0" fill="rgb(235,94,53)" rx="2" ry="2" />
<text  x="810.69" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (346 samples, 1.72%)</title><rect x="54.4" y="69" width="20.2" height="15.0" fill="rgb(211,144,33)" rx="2" ry="2" />
<text  x="57.37" y="79.5" ></text>
</g>
<g >
<title>std::locale::locale (3 samples, 0.01%)</title><rect x="334.9" y="1989" width="0.2" height="15.0" fill="rgb(229,14,11)" rx="2" ry="2" />
<text  x="337.94" y="1999.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="543.2" y="1893" width="0.2" height="15.0" fill="rgb(213,5,48)" rx="2" ry="2" />
<text  x="546.24" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1187.3" y="1189" width="0.4" height="15.0" fill="rgb(221,153,16)" rx="2" ry="2" />
<text  x="1190.30" y="1199.5" ></text>
</g>
<g >
<title>do_wp_page (12 samples, 0.06%)</title><rect x="53.1" y="1941" width="0.7" height="15.0" fill="rgb(241,85,45)" rx="2" ry="2" />
<text  x="56.14" y="1951.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2 samples, 0.01%)</title><rect x="503.0" y="1845" width="0.1" height="15.0" fill="rgb(210,193,30)" rx="2" ry="2" />
<text  x="505.97" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (83 samples, 0.41%)</title><rect x="167.8" y="1637" width="4.8" height="15.0" fill="rgb(214,40,49)" rx="2" ry="2" />
<text  x="170.78" y="1647.5" ></text>
</g>
<g >
<title>get_page_from_freelist (2 samples, 0.01%)</title><rect x="684.0" y="1733" width="0.1" height="15.0" fill="rgb(237,210,6)" rx="2" ry="2" />
<text  x="687.02" y="1743.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.01%)</title><rect x="93.8" y="2021" width="0.1" height="15.0" fill="rgb(212,201,6)" rx="2" ry="2" />
<text  x="96.75" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1187.3" y="469" width="0.4" height="15.0" fill="rgb(230,129,5)" rx="2" ry="2" />
<text  x="1190.30" y="479.5" ></text>
</g>
<g >
<title>operator new (8 samples, 0.04%)</title><rect x="153.8" y="1637" width="0.4" height="15.0" fill="rgb(249,123,7)" rx="2" ry="2" />
<text  x="156.77" y="1647.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (2 samples, 0.01%)</title><rect x="75.8" y="1061" width="0.1" height="15.0" fill="rgb(207,199,15)" rx="2" ry="2" />
<text  x="78.82" y="1071.5" ></text>
</g>
<g >
<title>lru_add_drain (4 samples, 0.02%)</title><rect x="768.9" y="1877" width="0.2" height="15.0" fill="rgb(207,124,54)" rx="2" ry="2" />
<text  x="771.89" y="1887.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (23 samples, 0.11%)</title><rect x="1150.4" y="2037" width="1.4" height="15.0" fill="rgb(238,108,24)" rx="2" ry="2" />
<text  x="1153.44" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (9 samples, 0.04%)</title><rect x="813.2" y="2021" width="0.5" height="15.0" fill="rgb(217,68,15)" rx="2" ry="2" />
<text  x="816.19" y="2031.5" ></text>
</g>
<g >
<title>fasttext::Vector::mul (2 samples, 0.01%)</title><rect x="498.3" y="1957" width="0.2" height="15.0" fill="rgb(218,177,43)" rx="2" ry="2" />
<text  x="501.34" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (361 samples, 1.79%)</title><rect x="54.4" y="965" width="21.1" height="15.0" fill="rgb(245,213,14)" rx="2" ry="2" />
<text  x="57.37" y="975.5" ></text>
</g>
<g >
<title>__interceptor_memcpy (13 samples, 0.06%)</title><rect x="1003.3" y="2053" width="0.8" height="15.0" fill="rgb(251,30,35)" rx="2" ry="2" />
<text  x="1006.33" y="2063.5" ></text>
</g>
<g >
<title>zap_page_range (2 samples, 0.01%)</title><rect x="82.4" y="1397" width="0.1" height="15.0" fill="rgb(236,36,37)" rx="2" ry="2" />
<text  x="85.38" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1186.5" y="709" width="0.4" height="15.0" fill="rgb(228,169,38)" rx="2" ry="2" />
<text  x="1189.48" y="719.5" ></text>
</g>
<g >
<title>exit_mmap (6 samples, 0.03%)</title><rect x="1099.9" y="1957" width="0.4" height="15.0" fill="rgb(220,64,24)" rx="2" ry="2" />
<text  x="1102.92" y="1967.5" ></text>
</g>
<g >
<title>__asan_memcpy (11 samples, 0.05%)</title><rect x="598.8" y="1877" width="0.6" height="15.0" fill="rgb(221,97,9)" rx="2" ry="2" />
<text  x="601.80" y="1887.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::Recycle (4 samples, 0.02%)</title><rect x="760.1" y="2037" width="0.2" height="15.0" fill="rgb(215,24,4)" rx="2" ry="2" />
<text  x="763.09" y="2047.5" ></text>
</g>
<g >
<title>generic_exec_single (2 samples, 0.01%)</title><rect x="79.8" y="1061" width="0.1" height="15.0" fill="rgb(241,201,33)" rx="2" ry="2" />
<text  x="82.80" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (68 samples, 0.34%)</title><rect x="172.7" y="1701" width="4.0" height="15.0" fill="rgb(213,176,49)" rx="2" ry="2" />
<text  x="175.70" y="1711.5" ></text>
</g>
<g >
<title>__handle_mm_fault (6 samples, 0.03%)</title><rect x="766.1" y="1957" width="0.4" height="15.0" fill="rgb(244,111,38)" rx="2" ry="2" />
<text  x="769.13" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.3" y="357" width="0.4" height="15.0" fill="rgb(254,114,41)" rx="2" ry="2" />
<text  x="1190.30" y="367.5" ></text>
</g>
<g >
<title>[unknown] (576 samples, 2.86%)</title><rect x="54.3" y="1797" width="33.8" height="15.0" fill="rgb(236,169,43)" rx="2" ry="2" />
<text  x="57.31" y="1807.5" >[u..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.01%)</title><rect x="161.9" y="1413" width="0.2" height="15.0" fill="rgb(224,203,4)" rx="2" ry="2" />
<text  x="164.92" y="1423.5" ></text>
</g>
<g >
<title>memcpy (2 samples, 0.01%)</title><rect x="588.6" y="1877" width="0.1" height="15.0" fill="rgb(224,49,2)" rx="2" ry="2" />
<text  x="591.60" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (434 samples, 2.16%)</title><rect x="162.3" y="1861" width="25.4" height="15.0" fill="rgb(229,125,25)" rx="2" ry="2" />
<text  x="165.27" y="1871.5" >s..</text>
</g>
<g >
<title>__asan_memcpy (2 samples, 0.01%)</title><rect x="142.1" y="1589" width="0.1" height="15.0" fill="rgb(231,148,18)" rx="2" ry="2" />
<text  x="145.11" y="1599.5" ></text>
</g>
<g >
<title>on_each_cpu_cond_mask (4 samples, 0.02%)</title><rect x="526.2" y="1877" width="0.2" height="15.0" fill="rgb(207,65,14)" rx="2" ry="2" />
<text  x="529.18" y="1887.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::append (4 samples, 0.02%)</title><rect x="661.5" y="1877" width="0.2" height="15.0" fill="rgb(246,136,5)" rx="2" ry="2" />
<text  x="664.45" y="1887.5" ></text>
</g>
<g >
<title>do_futex (6 samples, 0.03%)</title><rect x="132.6" y="1909" width="0.3" height="15.0" fill="rgb(249,169,20)" rx="2" ry="2" />
<text  x="135.55" y="1919.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (6 samples, 0.03%)</title><rect x="684.3" y="1765" width="0.3" height="15.0" fill="rgb(223,113,23)" rx="2" ry="2" />
<text  x="687.25" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (359 samples, 1.78%)</title><rect x="54.4" y="933" width="21.0" height="15.0" fill="rgb(232,194,46)" rx="2" ry="2" />
<text  x="57.37" y="943.5" ></text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::next_byte_in_range (44 samples, 0.22%)</title><rect x="129.4" y="1925" width="2.6" height="15.0" fill="rgb(207,219,32)" rx="2" ry="2" />
<text  x="132.45" y="1935.5" ></text>
</g>
<g >
<title>onmt::unicode::cp_to_utf8[abi:cxx11] (12 samples, 0.06%)</title><rect x="602.4" y="1877" width="0.7" height="15.0" fill="rgb(252,211,27)" rx="2" ry="2" />
<text  x="605.37" y="1887.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (2 samples, 0.01%)</title><rect x="657.0" y="1765" width="0.1" height="15.0" fill="rgb(220,96,7)" rx="2" ry="2" />
<text  x="660.00" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (476 samples, 2.36%)</title><rect x="54.3" y="1461" width="27.9" height="15.0" fill="rgb(251,152,13)" rx="2" ry="2" />
<text  x="57.31" y="1471.5" >[..</text>
</g>
<g >
<title>syscall (13 samples, 0.06%)</title><rect x="27.9" y="2005" width="0.8" height="15.0" fill="rgb(211,179,4)" rx="2" ry="2" />
<text  x="30.93" y="2015.5" ></text>
</g>
<g >
<title>__pthread_getspecific (5 samples, 0.02%)</title><rect x="600.0" y="1877" width="0.3" height="15.0" fill="rgb(222,171,9)" rx="2" ry="2" />
<text  x="603.03" y="1887.5" ></text>
</g>
<g >
<title>copy_page_to_iter (3 samples, 0.01%)</title><rect x="1108.4" y="1877" width="0.2" height="15.0" fill="rgb(212,170,35)" rx="2" ry="2" />
<text  x="1111.41" y="1887.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (3 samples, 0.01%)</title><rect x="757.4" y="1941" width="0.2" height="15.0" fill="rgb(207,198,16)" rx="2" ry="2" />
<text  x="760.40" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (89 samples, 0.44%)</title><rect x="189.9" y="1669" width="5.2" height="15.0" fill="rgb(252,173,8)" rx="2" ry="2" />
<text  x="192.93" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (438 samples, 2.18%)</title><rect x="54.3" y="1333" width="25.7" height="15.0" fill="rgb(237,61,43)" rx="2" ry="2" />
<text  x="57.31" y="1343.5" >[..</text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (2 samples, 0.01%)</title><rect x="79.4" y="1301" width="0.1" height="15.0" fill="rgb(209,202,9)" rx="2" ry="2" />
<text  x="82.39" y="1311.5" ></text>
</g>
<g >
<title>__x64_sys_madvise (2 samples, 0.01%)</title><rect x="82.4" y="1413" width="0.1" height="15.0" fill="rgb(252,143,54)" rx="2" ry="2" />
<text  x="85.38" y="1423.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (691 samples, 3.43%)</title><rect x="1145.7" y="2053" width="40.5" height="15.0" fill="rgb(211,59,9)" rx="2" ry="2" />
<text  x="1148.75" y="2063.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="188.5" y="1701" width="0.2" height="15.0" fill="rgb(229,14,38)" rx="2" ry="2" />
<text  x="191.53" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (351 samples, 1.74%)</title><rect x="54.4" y="469" width="20.5" height="15.0" fill="rgb(241,133,27)" rx="2" ry="2" />
<text  x="57.37" y="479.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt;,  (7 samples, 0.03%)</title><rect x="188.4" y="1941" width="0.4" height="15.0" fill="rgb(232,80,21)" rx="2" ry="2" />
<text  x="191.35" y="1951.5" ></text>
</g>
<g >
<title>virtual thunk to std::__cxx11::basic_istringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_istringstream (4 samples, 0.02%)</title><rect x="879.9" y="2037" width="0.2" height="15.0" fill="rgb(227,14,21)" rx="2" ry="2" />
<text  x="882.89" y="2047.5" ></text>
</g>
<g >
<title>find_vma (8 samples, 0.04%)</title><rect x="22.2" y="1989" width="0.5" height="15.0" fill="rgb(207,81,22)" rx="2" ry="2" />
<text  x="25.25" y="1999.5" ></text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (7 samples, 0.03%)</title><rect x="24.7" y="1957" width="0.4" height="15.0" fill="rgb(238,50,54)" rx="2" ry="2" />
<text  x="27.71" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="161.7" y="1781" width="0.4" height="15.0" fill="rgb(226,114,49)" rx="2" ry="2" />
<text  x="164.68" y="1791.5" ></text>
</g>
<g >
<title>Eigen::internal::product_evaluator&lt;Eigen::Product&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt;, 0&gt;, 8, Eigen::DenseShape, Eigen::DenseShape, float, float&gt;::product_evaluator (174 samples, 0.86%)</title><rect x="501.7" y="1957" width="10.2" height="15.0" fill="rgb(237,119,35)" rx="2" ry="2" />
<text  x="504.68" y="1967.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (5 samples, 0.02%)</title><rect x="132.6" y="1877" width="0.2" height="15.0" fill="rgb(206,26,34)" rx="2" ry="2" />
<text  x="135.55" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (461 samples, 2.29%)</title><rect x="54.3" y="1413" width="27.0" height="15.0" fill="rgb(249,36,11)" rx="2" ry="2" />
<text  x="57.31" y="1423.5" >[..</text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (19 samples, 0.09%)</title><rect x="694.7" y="1845" width="1.1" height="15.0" fill="rgb(218,104,51)" rx="2" ry="2" />
<text  x="697.68" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1186.5" y="741" width="0.4" height="15.0" fill="rgb(251,60,30)" rx="2" ry="2" />
<text  x="1189.48" y="751.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="176.6" y="1605" width="0.1" height="15.0" fill="rgb(226,127,45)" rx="2" ry="2" />
<text  x="179.57" y="1615.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (2 samples, 0.01%)</title><rect x="1188.8" y="2037" width="0.1" height="15.0" fill="rgb(238,172,46)" rx="2" ry="2" />
<text  x="1191.77" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (467 samples, 2.32%)</title><rect x="189.7" y="1925" width="27.4" height="15.0" fill="rgb(207,215,26)" rx="2" ry="2" />
<text  x="192.70" y="1935.5" >s..</text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.01%)</title><rect x="196.8" y="1605" width="0.2" height="15.0" fill="rgb(242,33,41)" rx="2" ry="2" />
<text  x="199.85" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (7 samples, 0.03%)</title><rect x="161.1" y="1845" width="0.4" height="15.0" fill="rgb(237,162,8)" rx="2" ry="2" />
<text  x="164.10" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1186.5" y="1461" width="0.4" height="15.0" fill="rgb(233,59,44)" rx="2" ry="2" />
<text  x="1189.48" y="1471.5" ></text>
</g>
<g >
<title>__pthread_getspecific (3 samples, 0.01%)</title><rect x="208.6" y="1637" width="0.1" height="15.0" fill="rgb(225,81,18)" rx="2" ry="2" />
<text  x="211.57" y="1647.5" ></text>
</g>
<g >
<title>__asan::PoisonShadow (129 samples, 0.64%)</title><rect x="974.3" y="2053" width="7.5" height="15.0" fill="rgb(229,196,6)" rx="2" ry="2" />
<text  x="977.26" y="2063.5" ></text>
</g>
<g >
<title>do_syscall_64 (6 samples, 0.03%)</title><rect x="1099.9" y="2037" width="0.4" height="15.0" fill="rgb(228,32,42)" rx="2" ry="2" />
<text  x="1102.92" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="161.7" y="1893" width="0.4" height="15.0" fill="rgb(248,225,10)" rx="2" ry="2" />
<text  x="164.68" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1186.5" y="1429" width="0.4" height="15.0" fill="rgb(212,209,53)" rx="2" ry="2" />
<text  x="1189.48" y="1439.5" ></text>
</g>
<g >
<title>onmt::unicode::explode_utf8 (3 samples, 0.01%)</title><rect x="737.4" y="1893" width="0.2" height="15.0" fill="rgb(248,23,15)" rx="2" ry="2" />
<text  x="740.41" y="1903.5" ></text>
</g>
<g >
<title>fasttext::Vector::norm (20 samples, 0.10%)</title><rect x="333.2" y="1989" width="1.2" height="15.0" fill="rgb(218,80,7)" rx="2" ry="2" />
<text  x="336.24" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (3 samples, 0.01%)</title><rect x="144.7" y="1749" width="0.2" height="15.0" fill="rgb(229,110,41)" rx="2" ry="2" />
<text  x="147.74" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1186.5" y="213" width="0.4" height="15.0" fill="rgb(214,75,41)" rx="2" ry="2" />
<text  x="1189.48" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="1187.1" y="997" width="0.1" height="15.0" fill="rgb(230,220,3)" rx="2" ry="2" />
<text  x="1190.07" y="1007.5" ></text>
</g>
<g >
<title>TAgencyRating::ScoreUrl (485 samples, 2.41%)</title><rect x="189.4" y="1989" width="28.4" height="15.0" fill="rgb(244,98,12)" rx="2" ry="2" />
<text  x="192.41" y="1999.5" >TA..</text>
</g>
<g >
<title>wp_page_copy (12 samples, 0.06%)</title><rect x="53.1" y="1925" width="0.7" height="15.0" fill="rgb(239,103,32)" rx="2" ry="2" />
<text  x="56.14" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="188.4" y="1877" width="0.3" height="15.0" fill="rgb(217,172,26)" rx="2" ry="2" />
<text  x="191.35" y="1887.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (28 samples, 0.14%)</title><rect x="811.4" y="2005" width="1.7" height="15.0" fill="rgb(225,127,8)" rx="2" ry="2" />
<text  x="814.44" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (348 samples, 1.73%)</title><rect x="54.4" y="405" width="20.4" height="15.0" fill="rgb(230,14,12)" rx="2" ry="2" />
<text  x="57.37" y="415.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.01%)</title><rect x="189.7" y="1653" width="0.1" height="15.0" fill="rgb(215,143,0)" rx="2" ry="2" />
<text  x="192.70" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.03%)</title><rect x="1186.5" y="293" width="0.4" height="15.0" fill="rgb(222,27,34)" rx="2" ry="2" />
<text  x="1189.48" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (14 samples, 0.07%)</title><rect x="819.4" y="1973" width="0.8" height="15.0" fill="rgb(226,145,27)" rx="2" ry="2" />
<text  x="822.41" y="1983.5" ></text>
</g>
<g >
<title>do_page_fault (20 samples, 0.10%)</title><rect x="683.5" y="1829" width="1.2" height="15.0" fill="rgb(246,6,13)" rx="2" ry="2" />
<text  x="686.49" y="1839.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64LocalCache&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&gt; &gt;::Deallocate (2 samples, 0.01%)</title><rect x="89.9" y="1893" width="0.1" height="15.0" fill="rgb(222,94,15)" rx="2" ry="2" />
<text  x="92.89" y="1903.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (2 samples, 0.01%)</title><rect x="76.8" y="1141" width="0.1" height="15.0" fill="rgb(215,207,12)" rx="2" ry="2" />
<text  x="79.82" y="1151.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt; &gt;::_M_manager (4 samples, 0.02%)</title><rect x="133.6" y="1637" width="0.2" height="15.0" fill="rgb(225,196,52)" rx="2" ry="2" />
<text  x="136.61" y="1647.5" ></text>
</g>
<g >
<title>mem_cgroup_throttle_swaprate (6 samples, 0.03%)</title><rect x="945.9" y="1909" width="0.3" height="15.0" fill="rgb(238,167,16)" rx="2" ry="2" />
<text  x="948.89" y="1919.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (3 samples, 0.01%)</title><rect x="513.9" y="1877" width="0.2" height="15.0" fill="rgb(239,114,5)" rx="2" ry="2" />
<text  x="516.93" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.02%)</title><rect x="1187.4" y="53" width="0.3" height="15.0" fill="rgb(229,3,33)" rx="2" ry="2" />
<text  x="1190.36" y="63.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (3 samples, 0.01%)</title><rect x="86.3" y="1685" width="0.2" height="15.0" fill="rgb(246,11,28)" rx="2" ry="2" />
<text  x="89.31" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (551 samples, 2.74%)</title><rect x="54.3" y="1701" width="32.3" height="15.0" fill="rgb(245,77,42)" rx="2" ry="2" />
<text  x="57.31" y="1711.5" >[u..</text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (2 samples, 0.01%)</title><rect x="137.3" y="1557" width="0.1" height="15.0" fill="rgb(251,39,53)" rx="2" ry="2" />
<text  x="140.30" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_subexpr_begin (2 samples, 0.01%)</title><rect x="188.1" y="1861" width="0.1" height="15.0" fill="rgb(233,102,54)" rx="2" ry="2" />
<text  x="191.12" y="1871.5" ></text>
</g>
<g >
<title>__dynamic_cast (5 samples, 0.02%)</title><rect x="148.0" y="1605" width="0.3" height="15.0" fill="rgb(226,31,22)" rx="2" ry="2" />
<text  x="151.03" y="1615.5" ></text>
</g>
<g >
<title>__interceptor_strlen (7 samples, 0.03%)</title><rect x="576.9" y="1925" width="0.4" height="15.0" fill="rgb(242,177,22)" rx="2" ry="2" />
<text  x="579.94" y="1935.5" ></text>
</g>
<g >
<title>TDocument::PreprocessTextFields (3,106 samples, 15.43%)</title><rect x="575.8" y="1973" width="182.0" height="15.0" fill="rgb(220,178,2)" rx="2" ry="2" />
<text  x="578.76" y="1983.5" >TDocument::PreprocessTe..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (2 samples, 0.01%)</title><rect x="215.8" y="1813" width="0.2" height="15.0" fill="rgb(249,54,29)" rx="2" ry="2" />
<text  x="218.84" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="217.5" y="1701" width="0.2" height="15.0" fill="rgb(230,25,40)" rx="2" ry="2" />
<text  x="220.48" y="1711.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (16 samples, 0.08%)</title><rect x="768.6" y="1989" width="0.9" height="15.0" fill="rgb(248,140,6)" rx="2" ry="2" />
<text  x="771.59" y="1999.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (3 samples, 0.01%)</title><rect x="814.3" y="2037" width="0.2" height="15.0" fill="rgb(219,28,22)" rx="2" ry="2" />
<text  x="817.31" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="217.5" y="1557" width="0.2" height="15.0" fill="rgb(217,122,33)" rx="2" ry="2" />
<text  x="220.48" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (83 samples, 0.41%)</title><rect x="167.8" y="1669" width="4.8" height="15.0" fill="rgb(219,110,36)" rx="2" ry="2" />
<text  x="170.78" y="1679.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (193 samples, 0.96%)</title><rect x="42.7" y="2037" width="11.3" height="15.0" fill="rgb(217,1,19)" rx="2" ry="2" />
<text  x="45.70" y="2047.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (3 samples, 0.01%)</title><rect x="154.3" y="1637" width="0.2" height="15.0" fill="rgb(232,113,24)" rx="2" ry="2" />
<text  x="157.30" y="1647.5" ></text>
</g>
<g >
<title>__asan::AsanChunk::UsedSize (2 samples, 0.01%)</title><rect x="93.6" y="2021" width="0.1" height="15.0" fill="rgb(222,102,22)" rx="2" ry="2" />
<text  x="96.58" y="2031.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (2 samples, 0.01%)</title><rect x="814.5" y="2037" width="0.1" height="15.0" fill="rgb(216,150,27)" rx="2" ry="2" />
<text  x="817.48" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.3" y="869" width="0.4" height="15.0" fill="rgb(247,170,19)" rx="2" ry="2" />
<text  x="1190.30" y="879.5" ></text>
</g>
<g >
<title>TSlinkClustering::FillDistanceMatrix (256 samples, 1.27%)</title><rect x="499.2" y="1973" width="15.0" height="15.0" fill="rgb(228,157,26)" rx="2" ry="2" />
<text  x="502.22" y="1983.5" ></text>
</g>
<g >
<title>do_futex (11 samples, 0.05%)</title><rect x="27.9" y="1941" width="0.7" height="15.0" fill="rgb(228,85,6)" rx="2" ry="2" />
<text  x="30.93" y="1951.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (5 samples, 0.02%)</title><rect x="1121.7" y="2037" width="0.3" height="15.0" fill="rgb(207,114,21)" rx="2" ry="2" />
<text  x="1124.66" y="2047.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::~collate (26 samples, 0.13%)</title><rect x="819.4" y="2037" width="1.5" height="15.0" fill="rgb(214,1,34)" rx="2" ry="2" />
<text  x="822.41" y="2047.5" ></text>
</g>
<g >
<title>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::dump (2 samples, 0.01%)</title><rect x="521.4" y="1925" width="0.1" height="15.0" fill="rgb(221,155,18)" rx="2" ry="2" />
<text  x="524.37" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (70 samples, 0.35%)</title><rect x="190.7" y="1589" width="4.1" height="15.0" fill="rgb(246,80,1)" rx="2" ry="2" />
<text  x="193.70" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.3" y="149" width="0.4" height="15.0" fill="rgb(226,201,44)" rx="2" ry="2" />
<text  x="1190.30" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (8 samples, 0.04%)</title><rect x="161.1" y="1877" width="0.5" height="15.0" fill="rgb(235,147,0)" rx="2" ry="2" />
<text  x="164.10" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (4 samples, 0.02%)</title><rect x="873.9" y="2037" width="0.2" height="15.0" fill="rgb(214,223,46)" rx="2" ry="2" />
<text  x="876.86" y="2047.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (32 samples, 0.16%)</title><rect x="877.7" y="2005" width="1.9" height="15.0" fill="rgb(214,179,28)" rx="2" ry="2" />
<text  x="880.72" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (79 samples, 0.39%)</title><rect x="176.9" y="1733" width="4.7" height="15.0" fill="rgb(216,103,13)" rx="2" ry="2" />
<text  x="179.92" y="1743.5" ></text>
</g>
<g >
<title>__handle_mm_fault (9 samples, 0.04%)</title><rect x="660.9" y="1797" width="0.6" height="15.0" fill="rgb(247,213,40)" rx="2" ry="2" />
<text  x="663.93" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="217.5" y="1413" width="0.2" height="15.0" fill="rgb(234,2,42)" rx="2" ry="2" />
<text  x="220.48" y="1423.5" ></text>
</g>
</g>
</svg>
