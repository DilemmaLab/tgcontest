<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="2134" onload="init(evt)" viewBox="0 0 1200 2134" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="2134.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="2117" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="2117" > </text>
<g id="frames">
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.6" y="645" width="0.2" height="15.0" fill="rgb(245,15,28)" rx="2" ry="2" />
<text  x="1173.65" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="169.3" y="1125" width="0.2" height="15.0" fill="rgb(222,63,43)" rx="2" ry="2" />
<text  x="172.28" y="1135.5" ></text>
</g>
<g >
<title>do_syscall_64 (5 samples, 0.08%)</title><rect x="101.7" y="1941" width="1.0" height="15.0" fill="rgb(245,23,6)" rx="2" ry="2" />
<text  x="104.74" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3 samples, 0.05%)</title><rect x="137.3" y="1845" width="0.6" height="15.0" fill="rgb(215,75,22)" rx="2" ry="2" />
<text  x="140.35" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="169.1" y="1237" width="0.2" height="15.0" fill="rgb(221,137,22)" rx="2" ry="2" />
<text  x="172.09" y="1247.5" ></text>
</g>
<g >
<title>__strxfrm_l (4 samples, 0.07%)</title><rect x="915.6" y="2053" width="0.7" height="15.0" fill="rgb(232,121,11)" rx="2" ry="2" />
<text  x="918.56" y="2063.5" ></text>
</g>
<g >
<title>RunFasttextClf (2 samples, 0.03%)</title><rect x="587.5" y="1957" width="0.4" height="15.0" fill="rgb(217,206,4)" rx="2" ry="2" />
<text  x="590.52" y="1967.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.03%)</title><rect x="125.0" y="1669" width="0.3" height="15.0" fill="rgb(228,172,18)" rx="2" ry="2" />
<text  x="127.96" y="1679.5" ></text>
</g>
<g >
<title>malloc (3 samples, 0.05%)</title><rect x="163.5" y="1685" width="0.6" height="15.0" fill="rgb(240,56,43)" rx="2" ry="2" />
<text  x="166.48" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="869" width="0.2" height="15.0" fill="rgb(233,192,25)" rx="2" ry="2" />
<text  x="82.87" y="879.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::do_tolower (1 samples, 0.02%)</title><rect x="149.3" y="1605" width="0.2" height="15.0" fill="rgb(221,13,19)" rx="2" ry="2" />
<text  x="152.35" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (29 samples, 0.48%)</title><rect x="117.6" y="1653" width="5.6" height="15.0" fill="rgb(232,169,32)" rx="2" ry="2" />
<text  x="120.61" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="757" width="0.2" height="15.0" fill="rgb(241,162,30)" rx="2" ry="2" />
<text  x="1173.07" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.5" y="1365" width="0.1" height="15.0" fill="rgb(235,144,22)" rx="2" ry="2" />
<text  x="1173.45" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="210.1" y="1829" width="0.6" height="15.0" fill="rgb(249,219,29)" rx="2" ry="2" />
<text  x="213.12" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.07%)</title><rect x="209.9" y="1941" width="0.8" height="15.0" fill="rgb(243,103,41)" rx="2" ry="2" />
<text  x="212.92" y="1951.5" ></text>
</g>
<g >
<title>TAgencyRating::ScoreUrl (160 samples, 2.62%)</title><rect x="138.5" y="1973" width="31.0" height="15.0" fill="rgb(228,196,17)" rx="2" ry="2" />
<text  x="141.51" y="1983.5" >TA..</text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (35 samples, 0.57%)</title><rect x="185.7" y="1653" width="6.8" height="15.0" fill="rgb(239,76,35)" rx="2" ry="2" />
<text  x="188.73" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.6" y="1285" width="0.2" height="15.0" fill="rgb(249,92,21)" rx="2" ry="2" />
<text  x="1173.65" y="1295.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::do_tolower (2 samples, 0.03%)</title><rect x="121.5" y="1637" width="0.4" height="15.0" fill="rgb(208,16,34)" rx="2" ry="2" />
<text  x="124.48" y="1647.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (8 samples, 0.13%)</title><rect x="708.5" y="1765" width="1.5" height="15.0" fill="rgb(219,127,14)" rx="2" ry="2" />
<text  x="711.48" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="789" width="0.2" height="15.0" fill="rgb(221,147,51)" rx="2" ry="2" />
<text  x="1173.07" y="799.5" ></text>
</g>
<g >
<title>TAgencyRating::ScoreUrl (1 samples, 0.02%)</title><rect x="10.0" y="2037" width="0.2" height="15.0" fill="rgb(233,165,16)" rx="2" ry="2" />
<text  x="13.00" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.3" y="1333" width="0.2" height="15.0" fill="rgb(244,104,28)" rx="2" ry="2" />
<text  x="141.32" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (54 samples, 0.89%)</title><rect x="139.1" y="1733" width="10.4" height="15.0" fill="rgb(253,34,41)" rx="2" ry="2" />
<text  x="142.09" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="1333" width="0.2" height="15.0" fill="rgb(237,195,2)" rx="2" ry="2" />
<text  x="1173.07" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.5" y="1733" width="0.1" height="15.0" fill="rgb(246,98,42)" rx="2" ry="2" />
<text  x="1173.45" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.5" y="1221" width="0.1" height="15.0" fill="rgb(234,33,30)" rx="2" ry="2" />
<text  x="1173.45" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (18 samples, 0.30%)</title><rect x="112.8" y="1621" width="3.5" height="15.0" fill="rgb(230,104,4)" rx="2" ry="2" />
<text  x="115.77" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="869" width="0.2" height="15.0" fill="rgb(252,113,53)" rx="2" ry="2" />
<text  x="1173.07" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="341" width="0.2" height="15.0" fill="rgb(213,210,2)" rx="2" ry="2" />
<text  x="1173.07" y="351.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="53" width="0.2" height="15.0" fill="rgb(214,160,30)" rx="2" ry="2" />
<text  x="82.87" y="63.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (30 samples, 0.49%)</title><rect x="162.5" y="1765" width="5.8" height="15.0" fill="rgb(237,93,52)" rx="2" ry="2" />
<text  x="165.51" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.3" y="213" width="0.2" height="15.0" fill="rgb(222,127,39)" rx="2" ry="2" />
<text  x="1173.26" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (30 samples, 0.49%)</title><rect x="162.5" y="1781" width="5.8" height="15.0" fill="rgb(248,203,51)" rx="2" ry="2" />
<text  x="165.51" y="1791.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::reserve (1 samples, 0.02%)</title><rect x="640.2" y="1877" width="0.2" height="15.0" fill="rgb(221,105,0)" rx="2" ry="2" />
<text  x="643.16" y="1887.5" ></text>
</g>
<g >
<title>std::__stable_sort_adaptive&lt;__gnu_cxx::__normal_iterator&lt;TWeightedNewsCluster*, std::vector&lt;TWeightedNewsCluster, std::allocator&lt;TWeightedNewsCluster&gt; &gt; &gt;, TWeightedNewsCluster*, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;Rank (1 samples, 0.02%)</title><rect x="169.9" y="1989" width="0.2" height="15.0" fill="rgb(214,60,47)" rx="2" ry="2" />
<text  x="172.86" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.5" y="1717" width="0.1" height="15.0" fill="rgb(220,160,32)" rx="2" ry="2" />
<text  x="1173.45" y="1727.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (2 samples, 0.03%)</title><rect x="160.8" y="1637" width="0.4" height="15.0" fill="rgb(254,166,21)" rx="2" ry="2" />
<text  x="163.77" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.5" y="1301" width="0.1" height="15.0" fill="rgb(225,37,8)" rx="2" ry="2" />
<text  x="1173.45" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.6" y="501" width="0.2" height="15.0" fill="rgb(245,36,11)" rx="2" ry="2" />
<text  x="1173.65" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.5" y="1685" width="0.1" height="15.0" fill="rgb(250,217,3)" rx="2" ry="2" />
<text  x="1173.45" y="1695.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (1 samples, 0.02%)</title><rect x="1135.4" y="2053" width="0.2" height="15.0" fill="rgb(231,217,14)" rx="2" ry="2" />
<text  x="1138.42" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.3" y="1285" width="0.2" height="15.0" fill="rgb(235,36,22)" rx="2" ry="2" />
<text  x="141.32" y="1295.5" ></text>
</g>
<g >
<title>std::num_get&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::do_get (1 samples, 0.02%)</title><rect x="185.3" y="1701" width="0.2" height="15.0" fill="rgb(212,138,49)" rx="2" ry="2" />
<text  x="188.35" y="1711.5" ></text>
</g>
<g >
<title>__x64_sys_futex (5 samples, 0.08%)</title><rect x="101.7" y="1925" width="1.0" height="15.0" fill="rgb(208,153,39)" rx="2" ry="2" />
<text  x="104.74" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.0" y="469" width="0.2" height="15.0" fill="rgb(254,167,29)" rx="2" ry="2" />
<text  x="13.00" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.0" y="645" width="0.2" height="15.0" fill="rgb(254,121,17)" rx="2" ry="2" />
<text  x="13.00" y="655.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (1 samples, 0.02%)</title><rect x="582.1" y="1813" width="0.2" height="15.0" fill="rgb(253,197,49)" rx="2" ry="2" />
<text  x="585.10" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (1 samples, 0.02%)</title><rect x="209.0" y="1829" width="0.2" height="15.0" fill="rgb(247,103,24)" rx="2" ry="2" />
<text  x="211.96" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.3" y="277" width="0.2" height="15.0" fill="rgb(245,142,16)" rx="2" ry="2" />
<text  x="1173.26" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.6" y="629" width="0.2" height="15.0" fill="rgb(253,179,15)" rx="2" ry="2" />
<text  x="1173.65" y="639.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="1413" width="0.2" height="15.0" fill="rgb(228,18,27)" rx="2" ry="2" />
<text  x="82.87" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.0" y="1141" width="0.2" height="15.0" fill="rgb(235,87,13)" rx="2" ry="2" />
<text  x="13.00" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.3" y="613" width="0.2" height="15.0" fill="rgb(252,51,6)" rx="2" ry="2" />
<text  x="1173.26" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (190 samples, 3.12%)</title><rect x="172.0" y="1861" width="36.8" height="15.0" fill="rgb(229,82,7)" rx="2" ry="2" />
<text  x="174.99" y="1871.5" >std..</text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="1717" width="0.2" height="15.0" fill="rgb(212,139,47)" rx="2" ry="2" />
<text  x="82.87" y="1727.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::at (2 samples, 0.03%)</title><rect x="86.8" y="1941" width="0.4" height="15.0" fill="rgb(232,227,37)" rx="2" ry="2" />
<text  x="89.83" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (1 samples, 0.02%)</title><rect x="168.7" y="1829" width="0.2" height="15.0" fill="rgb(211,212,46)" rx="2" ry="2" />
<text  x="171.70" y="1839.5" ></text>
</g>
<g >
<title>do_futex (5 samples, 0.08%)</title><rect x="101.7" y="1909" width="1.0" height="15.0" fill="rgb(219,73,19)" rx="2" ry="2" />
<text  x="104.74" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="645" width="0.2" height="15.0" fill="rgb(232,27,51)" rx="2" ry="2" />
<text  x="1173.07" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (40 samples, 0.66%)</title><rect x="200.4" y="1717" width="7.8" height="15.0" fill="rgb(254,221,47)" rx="2" ry="2" />
<text  x="203.44" y="1727.5" ></text>
</g>
<g >
<title>cfree (134 samples, 2.20%)</title><rect x="916.5" y="2053" width="26.0" height="15.0" fill="rgb(250,152,29)" rx="2" ry="2" />
<text  x="919.53" y="2063.5" >c..</text>
</g>
<g >
<title>do_syscall_64 (4 samples, 0.07%)</title><rect x="586.4" y="2005" width="0.7" height="15.0" fill="rgb(207,0,41)" rx="2" ry="2" />
<text  x="589.36" y="2015.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find_last_of (1 samples, 0.02%)</title><rect x="1146.1" y="2053" width="0.2" height="15.0" fill="rgb(245,90,2)" rx="2" ry="2" />
<text  x="1149.07" y="2063.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (12 samples, 0.20%)</title><rect x="451.1" y="1973" width="2.3" height="15.0" fill="rgb(252,87,48)" rx="2" ry="2" />
<text  x="454.07" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="169.3" y="1317" width="0.2" height="15.0" fill="rgb(216,87,27)" rx="2" ry="2" />
<text  x="172.28" y="1327.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="86.6" y="1941" width="0.2" height="15.0" fill="rgb(208,42,20)" rx="2" ry="2" />
<text  x="89.64" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="169.3" y="1253" width="0.2" height="15.0" fill="rgb(239,61,15)" rx="2" ry="2" />
<text  x="172.28" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.3" y="1461" width="0.2" height="15.0" fill="rgb(253,149,13)" rx="2" ry="2" />
<text  x="1173.26" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (32 samples, 0.52%)</title><rect x="111.0" y="1685" width="6.2" height="15.0" fill="rgb(215,182,21)" rx="2" ry="2" />
<text  x="114.03" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_BracketMatcher (1 samples, 0.02%)</title><rect x="129.4" y="1685" width="0.2" height="15.0" fill="rgb(208,116,18)" rx="2" ry="2" />
<text  x="132.41" y="1695.5" ></text>
</g>
<g >
<title>tlb_flush_mmu_free (1 samples, 0.02%)</title><rect x="582.1" y="1829" width="0.2" height="15.0" fill="rgb(207,67,45)" rx="2" ry="2" />
<text  x="585.10" y="1839.5" ></text>
</g>
<g >
<title>unmap_region (1 samples, 0.02%)</title><rect x="916.3" y="1973" width="0.2" height="15.0" fill="rgb(231,24,50)" rx="2" ry="2" />
<text  x="919.34" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (38 samples, 0.62%)</title><rect x="129.6" y="1733" width="7.4" height="15.0" fill="rgb(238,76,50)" rx="2" ry="2" />
<text  x="132.61" y="1743.5" ></text>
</g>
<g >
<title>std::operator&gt;&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;@plt (1 samples, 0.02%)</title><rect x="581.3" y="1973" width="0.2" height="15.0" fill="rgb(226,178,7)" rx="2" ry="2" />
<text  x="584.32" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.6" y="469" width="0.2" height="15.0" fill="rgb(220,185,26)" rx="2" ry="2" />
<text  x="1173.65" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="168.9" y="1317" width="0.2" height="15.0" fill="rgb(214,97,42)" rx="2" ry="2" />
<text  x="171.89" y="1327.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="583.1" y="1989" width="0.2" height="15.0" fill="rgb(245,45,50)" rx="2" ry="2" />
<text  x="586.07" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.07%)</title><rect x="209.9" y="1845" width="0.8" height="15.0" fill="rgb(245,5,15)" rx="2" ry="2" />
<text  x="212.92" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="169.3" y="613" width="0.2" height="15.0" fill="rgb(217,74,26)" rx="2" ry="2" />
<text  x="172.28" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="213" width="0.2" height="15.0" fill="rgb(207,69,15)" rx="2" ry="2" />
<text  x="1173.07" y="223.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.02%)</title><rect x="171.8" y="1925" width="0.2" height="15.0" fill="rgb(251,204,0)" rx="2" ry="2" />
<text  x="174.80" y="1935.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::set_case_region_end@plt (1 samples, 0.02%)</title><rect x="591.0" y="1909" width="0.2" height="15.0" fill="rgb(213,43,46)" rx="2" ry="2" />
<text  x="594.00" y="1919.5" ></text>
</g>
<g >
<title>fasttext::Vector::norm (32 samples, 0.52%)</title><rect x="573.4" y="1973" width="6.2" height="15.0" fill="rgb(250,67,14)" rx="2" ry="2" />
<text  x="576.39" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="1685" width="0.2" height="15.0" fill="rgb(247,142,19)" rx="2" ry="2" />
<text  x="82.87" y="1695.5" ></text>
</g>
<g >
<title>syscall (6 samples, 0.10%)</title><rect x="101.5" y="1973" width="1.2" height="15.0" fill="rgb(212,191,23)" rx="2" ry="2" />
<text  x="104.54" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.3" y="1989" width="0.2" height="15.0" fill="rgb(219,2,9)" rx="2" ry="2" />
<text  x="1173.26" y="1999.5" ></text>
</g>
<g >
<title>futex_wait_setup (1 samples, 0.02%)</title><rect x="102.5" y="1877" width="0.2" height="15.0" fill="rgb(218,31,28)" rx="2" ry="2" />
<text  x="105.51" y="1887.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_erase (1 samples, 0.02%)</title><rect x="585.4" y="1989" width="0.2" height="15.0" fill="rgb(236,159,54)" rx="2" ry="2" />
<text  x="588.39" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.0" y="517" width="0.2" height="15.0" fill="rgb(252,16,33)" rx="2" ry="2" />
<text  x="13.00" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.0" y="373" width="0.2" height="15.0" fill="rgb(224,52,5)" rx="2" ry="2" />
<text  x="13.00" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (3 samples, 0.05%)</title><rect x="134.6" y="1685" width="0.6" height="15.0" fill="rgb(218,3,44)" rx="2" ry="2" />
<text  x="137.64" y="1695.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="840.9" y="1877" width="0.2" height="15.0" fill="rgb(216,186,40)" rx="2" ry="2" />
<text  x="843.86" y="1887.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="121.3" y="1621" width="0.2" height="15.0" fill="rgb(220,224,52)" rx="2" ry="2" />
<text  x="124.28" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="1173" width="0.2" height="15.0" fill="rgb(240,68,2)" rx="2" ry="2" />
<text  x="1173.07" y="1183.5" ></text>
</g>
<g >
<title>Eigen::internal::gemv_dense_selector&lt;2, 1, true&gt;::run&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; &gt; (1 samples, 0.02%)</title><rect x="450.3" y="1941" width="0.2" height="15.0" fill="rgb(207,77,44)" rx="2" ry="2" />
<text  x="453.30" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.3" y="549" width="0.2" height="15.0" fill="rgb(254,166,45)" rx="2" ry="2" />
<text  x="1173.26" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Scanner&lt;char&gt;::_M_scan_in_bracket (1 samples, 0.02%)</title><rect x="208.2" y="1749" width="0.2" height="15.0" fill="rgb(208,5,39)" rx="2" ry="2" />
<text  x="211.18" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="437" width="0.2" height="15.0" fill="rgb(242,130,54)" rx="2" ry="2" />
<text  x="82.87" y="447.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="195.8" y="1669" width="0.2" height="15.0" fill="rgb(228,139,34)" rx="2" ry="2" />
<text  x="198.80" y="1679.5" ></text>
</g>
<g >
<title>[libm-2.27.so] (3 samples, 0.05%)</title><rect x="40.2" y="2053" width="0.6" height="15.0" fill="rgb(216,135,36)" rx="2" ry="2" />
<text  x="43.19" y="2063.5" ></text>
</g>
<g >
<title>onmt::unicode::is_letter (179 samples, 2.94%)</title><rect x="711.4" y="1877" width="34.6" height="15.0" fill="rgb(205,223,30)" rx="2" ry="2" />
<text  x="714.38" y="1887.5" >on..</text>
</g>
<g >
<title>alloc_pages_vma (28 samples, 0.46%)</title><rect x="435.2" y="1877" width="5.4" height="15.0" fill="rgb(237,168,35)" rx="2" ry="2" />
<text  x="438.20" y="1887.5" ></text>
</g>
<g >
<title>cfree (1 samples, 0.02%)</title><rect x="583.3" y="2005" width="0.2" height="15.0" fill="rgb(219,47,29)" rx="2" ry="2" />
<text  x="586.26" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.3" y="1877" width="0.2" height="15.0" fill="rgb(216,48,50)" rx="2" ry="2" />
<text  x="1173.26" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.3" y="389" width="0.2" height="15.0" fill="rgb(249,208,28)" rx="2" ry="2" />
<text  x="1173.26" y="399.5" ></text>
</g>
<g >
<title>std::__move_merge&lt;TDocument*, __gnu_cxx::__normal_iterator&lt;TDocument*, std::vector&lt;TDocument, std::allocator&lt;TDocument&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;main::$_0&gt; &gt; (1 samples, 0.02%)</title><rect x="585.8" y="1973" width="0.2" height="15.0" fill="rgb(227,42,54)" rx="2" ry="2" />
<text  x="588.77" y="1983.5" ></text>
</g>
<g >
<title>page_fault (11 samples, 0.18%)</title><rect x="708.1" y="1861" width="2.1" height="15.0" fill="rgb(222,194,14)" rx="2" ry="2" />
<text  x="711.09" y="1871.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2 samples, 0.03%)</title><rect x="38.5" y="1957" width="0.3" height="15.0" fill="rgb(235,202,31)" rx="2" ry="2" />
<text  x="41.45" y="1967.5" ></text>
</g>
<g >
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="840.9" y="1797" width="0.2" height="15.0" fill="rgb(250,228,12)" rx="2" ry="2" />
<text  x="843.86" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="501" width="0.2" height="15.0" fill="rgb(246,113,35)" rx="2" ry="2" />
<text  x="82.87" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="169.3" y="277" width="0.2" height="15.0" fill="rgb(238,141,24)" rx="2" ry="2" />
<text  x="172.28" y="287.5" ></text>
</g>
<g >
<title>iov_iter_copy_from_user_atomic (1 samples, 0.02%)</title><rect x="894.3" y="1861" width="0.2" height="15.0" fill="rgb(239,121,36)" rx="2" ry="2" />
<text  x="897.27" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="805" width="0.2" height="15.0" fill="rgb(236,42,27)" rx="2" ry="2" />
<text  x="1173.07" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="837" width="0.2" height="15.0" fill="rgb(241,105,34)" rx="2" ry="2" />
<text  x="1173.07" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="1445" width="0.2" height="15.0" fill="rgb(228,80,7)" rx="2" ry="2" />
<text  x="1173.07" y="1455.5" ></text>
</g>
<g >
<title>memchr@plt (1 samples, 0.02%)</title><rect x="1115.7" y="2053" width="0.2" height="15.0" fill="rgb(227,14,37)" rx="2" ry="2" />
<text  x="1118.68" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="1317" width="0.2" height="15.0" fill="rgb(219,176,34)" rx="2" ry="2" />
<text  x="82.87" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="1685" width="0.2" height="15.0" fill="rgb(247,109,40)" rx="2" ry="2" />
<text  x="1173.07" y="1695.5" ></text>
</g>
<g >
<title>onmt::unicode::is_letter (336 samples, 5.51%)</title><rect x="762.9" y="1893" width="65.0" height="15.0" fill="rgb(229,87,33)" rx="2" ry="2" />
<text  x="765.86" y="1903.5" >onmt::u..</text>
</g>
<g >
<title>mem_cgroup_try_charge (1 samples, 0.02%)</title><rect x="440.8" y="1877" width="0.2" height="15.0" fill="rgb(222,131,10)" rx="2" ry="2" />
<text  x="443.82" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="1333" width="0.2" height="15.0" fill="rgb(238,203,40)" rx="2" ry="2" />
<text  x="82.87" y="1343.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (2 samples, 0.03%)</title><rect x="454.2" y="1797" width="0.4" height="15.0" fill="rgb(211,110,36)" rx="2" ry="2" />
<text  x="457.17" y="1807.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="141.6" y="1573" width="0.2" height="15.0" fill="rgb(216,21,18)" rx="2" ry="2" />
<text  x="144.61" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (13 samples, 0.21%)</title><rect x="189.2" y="1637" width="2.5" height="15.0" fill="rgb(224,83,14)" rx="2" ry="2" />
<text  x="192.22" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.0" y="869" width="0.2" height="15.0" fill="rgb(214,20,51)" rx="2" ry="2" />
<text  x="13.00" y="879.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.02%)</title><rect x="893.7" y="2005" width="0.2" height="15.0" fill="rgb(243,61,40)" rx="2" ry="2" />
<text  x="896.69" y="2015.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="586.2" y="1941" width="0.2" height="15.0" fill="rgb(213,163,44)" rx="2" ry="2" />
<text  x="589.16" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="169.3" y="261" width="0.2" height="15.0" fill="rgb(235,164,32)" rx="2" ry="2" />
<text  x="172.28" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="169.3" y="757" width="0.2" height="15.0" fill="rgb(238,65,46)" rx="2" ry="2" />
<text  x="172.28" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.0" y="1397" width="0.2" height="15.0" fill="rgb(226,199,1)" rx="2" ry="2" />
<text  x="13.00" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="169.3" y="597" width="0.2" height="15.0" fill="rgb(218,193,51)" rx="2" ry="2" />
<text  x="172.28" y="607.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (3 samples, 0.05%)</title><rect x="116.6" y="1621" width="0.6" height="15.0" fill="rgb(234,162,28)" rx="2" ry="2" />
<text  x="119.64" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.5" y="1669" width="0.1" height="15.0" fill="rgb(217,140,9)" rx="2" ry="2" />
<text  x="1173.45" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (37 samples, 0.61%)</title><rect x="192.7" y="1765" width="7.2" height="15.0" fill="rgb(232,50,23)" rx="2" ry="2" />
<text  x="195.70" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.3" y="773" width="0.2" height="15.0" fill="rgb(251,62,5)" rx="2" ry="2" />
<text  x="1173.26" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.3" y="1253" width="0.2" height="15.0" fill="rgb(213,64,21)" rx="2" ry="2" />
<text  x="1173.26" y="1263.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (4 samples, 0.07%)</title><rect x="876.7" y="2037" width="0.7" height="15.0" fill="rgb(216,78,20)" rx="2" ry="2" />
<text  x="879.66" y="2047.5" ></text>
</g>
<g >
<title>std::operator&gt;&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (3 samples, 0.05%)</title><rect x="343.7" y="1989" width="0.5" height="15.0" fill="rgb(252,80,30)" rx="2" ry="2" />
<text  x="346.66" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_Compiler (200 samples, 3.28%)</title><rect x="171.2" y="1941" width="38.7" height="15.0" fill="rgb(253,48,42)" rx="2" ry="2" />
<text  x="174.22" y="1951.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="169.1" y="1589" width="0.4" height="15.0" fill="rgb(221,175,41)" rx="2" ry="2" />
<text  x="172.09" y="1599.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (41 samples, 0.67%)</title><rect x="1170.8" y="2037" width="8.0" height="15.0" fill="rgb(252,45,26)" rx="2" ry="2" />
<text  x="1173.84" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="741" width="0.2" height="15.0" fill="rgb(229,207,51)" rx="2" ry="2" />
<text  x="1173.07" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.6" y="1205" width="0.2" height="15.0" fill="rgb(225,93,9)" rx="2" ry="2" />
<text  x="1173.65" y="1215.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (1 samples, 0.02%)</title><rect x="154.8" y="1605" width="0.2" height="15.0" fill="rgb(229,62,48)" rx="2" ry="2" />
<text  x="157.77" y="1615.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::_M_transform@plt (6 samples, 0.10%)</title><rect x="1148.4" y="2053" width="1.2" height="15.0" fill="rgb(243,20,35)" rx="2" ry="2" />
<text  x="1151.39" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.3" y="181" width="0.2" height="15.0" fill="rgb(234,205,38)" rx="2" ry="2" />
<text  x="1173.26" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.6" y="1349" width="0.2" height="15.0" fill="rgb(222,159,33)" rx="2" ry="2" />
<text  x="1173.65" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (33 samples, 0.54%)</title><rect x="149.5" y="1749" width="6.4" height="15.0" fill="rgb(212,141,39)" rx="2" ry="2" />
<text  x="152.54" y="1759.5" ></text>
</g>
<g >
<title>onmt::unicode::is_separator@plt (1 samples, 0.02%)</title><rect x="841.1" y="1893" width="0.1" height="15.0" fill="rgb(234,167,45)" rx="2" ry="2" />
<text  x="844.05" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (2 samples, 0.03%)</title><rect x="208.8" y="1845" width="0.4" height="15.0" fill="rgb(234,218,44)" rx="2" ry="2" />
<text  x="211.76" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="1589" width="0.2" height="15.0" fill="rgb(242,26,40)" rx="2" ry="2" />
<text  x="1173.07" y="1599.5" ></text>
</g>
<g >
<title>operator new[] (6 samples, 0.10%)</title><rect x="1121.7" y="2053" width="1.1" height="15.0" fill="rgb(225,146,19)" rx="2" ry="2" />
<text  x="1124.68" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.3" y="1477" width="0.2" height="15.0" fill="rgb(241,187,15)" rx="2" ry="2" />
<text  x="141.32" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.3" y="1365" width="0.2" height="15.0" fill="rgb(222,117,16)" rx="2" ry="2" />
<text  x="1173.26" y="1375.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::readWord (51 samples, 0.84%)</title><rect x="1046.2" y="2053" width="9.9" height="15.0" fill="rgb(235,221,48)" rx="2" ry="2" />
<text  x="1049.20" y="2063.5" ></text>
</g>
<g >
<title>operator new@plt (1 samples, 0.02%)</title><rect x="639.4" y="1861" width="0.2" height="15.0" fill="rgb(208,104,28)" rx="2" ry="2" />
<text  x="642.38" y="1871.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="155.0" y="1605" width="0.2" height="15.0" fill="rgb(209,220,16)" rx="2" ry="2" />
<text  x="157.96" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.3" y="1749" width="0.2" height="15.0" fill="rgb(208,154,17)" rx="2" ry="2" />
<text  x="1173.26" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (35 samples, 0.57%)</title><rect x="185.7" y="1669" width="6.8" height="15.0" fill="rgb(251,227,36)" rx="2" ry="2" />
<text  x="188.73" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (2 samples, 0.03%)</title><rect x="208.4" y="1717" width="0.4" height="15.0" fill="rgb(222,144,28)" rx="2" ry="2" />
<text  x="211.38" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="210.1" y="1733" width="0.2" height="15.0" fill="rgb(226,203,8)" rx="2" ry="2" />
<text  x="213.12" y="1743.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="916.3" y="2021" width="0.2" height="15.0" fill="rgb(218,97,36)" rx="2" ry="2" />
<text  x="919.34" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.0" y="1589" width="0.2" height="15.0" fill="rgb(248,220,5)" rx="2" ry="2" />
<text  x="13.00" y="1599.5" ></text>
</g>
<g >
<title>nlohmann::detail::input_stream_adapter::get_character (1 samples, 0.02%)</title><rect x="99.8" y="1909" width="0.2" height="15.0" fill="rgb(206,90,17)" rx="2" ry="2" />
<text  x="102.80" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.3" y="1701" width="0.2" height="15.0" fill="rgb(242,145,53)" rx="2" ry="2" />
<text  x="141.32" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.6" y="901" width="0.2" height="15.0" fill="rgb(240,87,1)" rx="2" ry="2" />
<text  x="1173.65" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="169.3" y="181" width="0.2" height="15.0" fill="rgb(219,190,6)" rx="2" ry="2" />
<text  x="172.28" y="191.5" ></text>
</g>
<g >
<title>page_fault (7 samples, 0.11%)</title><rect x="78.3" y="2021" width="1.4" height="15.0" fill="rgb(249,150,39)" rx="2" ry="2" />
<text  x="81.32" y="2031.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.02%)</title><rect x="1046.0" y="1973" width="0.2" height="15.0" fill="rgb(208,113,40)" rx="2" ry="2" />
<text  x="1049.01" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.0" y="661" width="0.2" height="15.0" fill="rgb(249,25,44)" rx="2" ry="2" />
<text  x="13.00" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.0" y="165" width="0.2" height="15.0" fill="rgb(220,143,28)" rx="2" ry="2" />
<text  x="13.00" y="175.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="933" width="0.2" height="15.0" fill="rgb(205,166,48)" rx="2" ry="2" />
<text  x="82.87" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.5" y="1589" width="0.1" height="15.0" fill="rgb(247,146,34)" rx="2" ry="2" />
<text  x="1173.45" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.0" y="1189" width="0.2" height="15.0" fill="rgb(253,56,39)" rx="2" ry="2" />
<text  x="13.00" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="169.3" y="805" width="0.2" height="15.0" fill="rgb(228,134,41)" rx="2" ry="2" />
<text  x="172.28" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="168.9" y="1685" width="0.6" height="15.0" fill="rgb(207,105,16)" rx="2" ry="2" />
<text  x="171.89" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.3" y="1029" width="0.2" height="15.0" fill="rgb(252,147,39)" rx="2" ry="2" />
<text  x="1173.26" y="1039.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsgetn@plt (1 samples, 0.02%)</title><rect x="1188.3" y="2053" width="0.2" height="15.0" fill="rgb(241,9,51)" rx="2" ry="2" />
<text  x="1191.26" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.5" y="1349" width="0.1" height="15.0" fill="rgb(225,158,28)" rx="2" ry="2" />
<text  x="1173.45" y="1359.5" ></text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.05%)</title><rect x="147.2" y="1589" width="0.6" height="15.0" fill="rgb(208,201,18)" rx="2" ry="2" />
<text  x="150.22" y="1599.5" ></text>
</g>
<g >
<title>get_futex_key (1 samples, 0.02%)</title><rect x="102.5" y="1861" width="0.2" height="15.0" fill="rgb(231,126,54)" rx="2" ry="2" />
<text  x="105.51" y="1871.5" ></text>
</g>
<g >
<title>malloc@plt (1 samples, 0.02%)</title><rect x="131.5" y="1701" width="0.2" height="15.0" fill="rgb(252,216,53)" rx="2" ry="2" />
<text  x="134.54" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.0" y="133" width="0.2" height="15.0" fill="rgb(226,86,37)" rx="2" ry="2" />
<text  x="13.00" y="143.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_try_char (1 samples, 0.02%)</title><rect x="144.3" y="1685" width="0.2" height="15.0" fill="rgb(227,107,25)" rx="2" ry="2" />
<text  x="147.32" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.5" y="517" width="0.1" height="15.0" fill="rgb(219,226,0)" rx="2" ry="2" />
<text  x="1173.45" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt;@plt (3 samples, 0.05%)</title><rect x="877.4" y="2037" width="0.6" height="15.0" fill="rgb(242,103,52)" rx="2" ry="2" />
<text  x="880.44" y="2047.5" ></text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (1 samples, 0.02%)</title><rect x="440.6" y="1877" width="0.2" height="15.0" fill="rgb(246,199,28)" rx="2" ry="2" />
<text  x="443.62" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="1573" width="0.2" height="15.0" fill="rgb(238,149,44)" rx="2" ry="2" />
<text  x="1173.07" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.0" y="693" width="0.2" height="15.0" fill="rgb(222,113,25)" rx="2" ry="2" />
<text  x="13.00" y="703.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (2 samples, 0.03%)</title><rect x="1045.8" y="2021" width="0.4" height="15.0" fill="rgb(230,165,32)" rx="2" ry="2" />
<text  x="1048.81" y="2031.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (6 samples, 0.10%)</title><rect x="85.1" y="1861" width="1.2" height="15.0" fill="rgb(249,119,7)" rx="2" ry="2" />
<text  x="88.09" y="1871.5" ></text>
</g>
<g >
<title>fasttext::Vector::addRow (5 samples, 0.08%)</title><rect x="565.8" y="1973" width="1.0" height="15.0" fill="rgb(238,180,54)" rx="2" ry="2" />
<text  x="568.84" y="1983.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::do_tolower (1 samples, 0.02%)</title><rect x="135.8" y="1701" width="0.2" height="15.0" fill="rgb(218,40,36)" rx="2" ry="2" />
<text  x="138.80" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="85" width="0.2" height="15.0" fill="rgb(243,94,40)" rx="2" ry="2" />
<text  x="1173.07" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (194 samples, 3.18%)</title><rect x="172.0" y="1925" width="37.5" height="15.0" fill="rgb(243,158,20)" rx="2" ry="2" />
<text  x="174.99" y="1935.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.3" y="1685" width="0.2" height="15.0" fill="rgb(240,110,16)" rx="2" ry="2" />
<text  x="141.32" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (35 samples, 0.57%)</title><rect x="185.7" y="1685" width="6.8" height="15.0" fill="rgb(226,135,7)" rx="2" ry="2" />
<text  x="188.73" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (34 samples, 0.56%)</title><rect x="155.9" y="1765" width="6.6" height="15.0" fill="rgb(205,182,47)" rx="2" ry="2" />
<text  x="158.93" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.3" y="629" width="0.2" height="15.0" fill="rgb(232,41,54)" rx="2" ry="2" />
<text  x="1173.26" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.6" y="69" width="0.2" height="15.0" fill="rgb(206,107,31)" rx="2" ry="2" />
<text  x="1173.65" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (36 samples, 0.59%)</title><rect x="192.9" y="1717" width="7.0" height="15.0" fill="rgb(248,127,10)" rx="2" ry="2" />
<text  x="195.89" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="293" width="0.2" height="15.0" fill="rgb(212,191,23)" rx="2" ry="2" />
<text  x="82.87" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="1301" width="0.2" height="15.0" fill="rgb(213,145,13)" rx="2" ry="2" />
<text  x="1173.07" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.3" y="1589" width="0.2" height="15.0" fill="rgb(240,1,45)" rx="2" ry="2" />
<text  x="1173.26" y="1599.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (52 samples, 0.85%)</title><rect x="896.6" y="2053" width="10.1" height="15.0" fill="rgb(248,227,34)" rx="2" ry="2" />
<text  x="899.60" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="210.3" y="1733" width="0.4" height="15.0" fill="rgb(250,11,2)" rx="2" ry="2" />
<text  x="213.31" y="1743.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.05%)</title><rect x="581.7" y="1973" width="0.6" height="15.0" fill="rgb(211,207,49)" rx="2" ry="2" />
<text  x="584.71" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_quantifier (1 samples, 0.02%)</title><rect x="123.4" y="1717" width="0.2" height="15.0" fill="rgb(232,151,14)" rx="2" ry="2" />
<text  x="126.41" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.3" y="1381" width="0.2" height="15.0" fill="rgb(215,8,33)" rx="2" ry="2" />
<text  x="141.32" y="1391.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="885" width="0.2" height="15.0" fill="rgb(253,101,11)" rx="2" ry="2" />
<text  x="82.87" y="895.5" ></text>
</g>
<g >
<title>std::num_get&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_extract_int&lt;long&gt; (1 samples, 0.02%)</title><rect x="892.7" y="2005" width="0.2" height="15.0" fill="rgb(206,110,36)" rx="2" ry="2" />
<text  x="895.73" y="2015.5" ></text>
</g>
<g >
<title>nlohmann::detail::parser&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::sax_parse_internal&lt;nlohmann::detail::json_sax_dom_parser&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; (66 samples, 1.08%)</title><rect x="88.4" y="1957" width="12.8" height="15.0" fill="rgb(229,120,8)" rx="2" ry="2" />
<text  x="91.38" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="1541" width="0.2" height="15.0" fill="rgb(248,146,44)" rx="2" ry="2" />
<text  x="1173.07" y="1551.5" ></text>
</g>
<g >
<title>Rank (348 samples, 5.71%)</title><rect x="102.7" y="2005" width="67.4" height="15.0" fill="rgb(228,173,23)" rx="2" ry="2" />
<text  x="105.70" y="2015.5" >Rank</text>
</g>
<g >
<title>try_charge (1 samples, 0.02%)</title><rect x="710.0" y="1749" width="0.2" height="15.0" fill="rgb(226,49,23)" rx="2" ry="2" />
<text  x="713.03" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="169.3" y="1365" width="0.2" height="15.0" fill="rgb(219,82,42)" rx="2" ry="2" />
<text  x="172.28" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="210.5" y="1381" width="0.2" height="15.0" fill="rgb(205,30,49)" rx="2" ry="2" />
<text  x="213.51" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="169.1" y="1445" width="0.2" height="15.0" fill="rgb(225,226,28)" rx="2" ry="2" />
<text  x="172.09" y="1455.5" ></text>
</g>
<g >
<title>ksys_write (1 samples, 0.02%)</title><rect x="894.3" y="1973" width="0.2" height="15.0" fill="rgb(233,170,47)" rx="2" ry="2" />
<text  x="897.27" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.5" y="1509" width="0.1" height="15.0" fill="rgb(216,150,24)" rx="2" ry="2" />
<text  x="1173.45" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.6" y="165" width="0.2" height="15.0" fill="rgb(208,113,18)" rx="2" ry="2" />
<text  x="1173.65" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.3" y="1349" width="0.2" height="15.0" fill="rgb(246,16,26)" rx="2" ry="2" />
<text  x="141.32" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (38 samples, 0.62%)</title><rect x="103.5" y="1733" width="7.3" height="15.0" fill="rgb(222,186,19)" rx="2" ry="2" />
<text  x="106.48" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.3" y="1813" width="0.2" height="15.0" fill="rgb(209,186,13)" rx="2" ry="2" />
<text  x="1173.26" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.5" y="133" width="0.1" height="15.0" fill="rgb(218,7,7)" rx="2" ry="2" />
<text  x="1173.45" y="143.5" ></text>
</g>
<g >
<title>cfree (10 samples, 0.16%)</title><rect x="611.3" y="1893" width="2.0" height="15.0" fill="rgb(240,211,17)" rx="2" ry="2" />
<text  x="614.32" y="1903.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (3 samples, 0.05%)</title><rect x="108.9" y="1573" width="0.6" height="15.0" fill="rgb(254,162,33)" rx="2" ry="2" />
<text  x="111.90" y="1583.5" ></text>
</g>
<g >
<title>__x64_sys_brk (1 samples, 0.02%)</title><rect x="916.3" y="2005" width="0.2" height="15.0" fill="rgb(218,14,3)" rx="2" ry="2" />
<text  x="919.34" y="2015.5" ></text>
</g>
<g >
<title>get_user_pages_fast (1 samples, 0.02%)</title><rect x="42.3" y="1925" width="0.2" height="15.0" fill="rgb(205,76,30)" rx="2" ry="2" />
<text  x="45.32" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="168.9" y="1621" width="0.6" height="15.0" fill="rgb(227,90,4)" rx="2" ry="2" />
<text  x="171.89" y="1631.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="671.1" y="1829" width="0.2" height="15.0" fill="rgb(246,224,35)" rx="2" ry="2" />
<text  x="674.13" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="169.1" y="1493" width="0.4" height="15.0" fill="rgb(224,201,19)" rx="2" ry="2" />
<text  x="172.09" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.5" y="421" width="0.1" height="15.0" fill="rgb(210,156,30)" rx="2" ry="2" />
<text  x="1173.45" y="431.5" ></text>
</g>
<g >
<title>std::__stable_sort_adaptive&lt;__gnu_cxx::__normal_iterator&lt;TDocument*, std::vector&lt;TDocument, std::allocator&lt;TDocument&gt; &gt; &gt;, TDocument*, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;main::$_0&gt; &gt; (2 samples, 0.03%)</title><rect x="585.8" y="2005" width="0.4" height="15.0" fill="rgb(230,192,49)" rx="2" ry="2" />
<text  x="588.77" y="2015.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (1 samples, 0.02%)</title><rect x="440.6" y="1845" width="0.2" height="15.0" fill="rgb(234,222,21)" rx="2" ry="2" />
<text  x="443.62" y="1855.5" ></text>
</g>
<g >
<title>operator delete@plt (1 samples, 0.02%)</title><rect x="106.0" y="1589" width="0.2" height="15.0" fill="rgb(225,226,43)" rx="2" ry="2" />
<text  x="108.99" y="1599.5" ></text>
</g>
<g >
<title>cfree (4 samples, 0.07%)</title><rect x="187.7" y="1637" width="0.7" height="15.0" fill="rgb(215,86,14)" rx="2" ry="2" />
<text  x="190.67" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.0" y="917" width="0.2" height="15.0" fill="rgb(210,63,38)" rx="2" ry="2" />
<text  x="13.00" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="169.1" y="1413" width="0.2" height="15.0" fill="rgb(222,192,53)" rx="2" ry="2" />
<text  x="172.09" y="1423.5" ></text>
</g>
<g >
<title>__vfs_read (6 samples, 0.10%)</title><rect x="85.1" y="1941" width="1.2" height="15.0" fill="rgb(252,27,48)" rx="2" ry="2" />
<text  x="88.09" y="1951.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_sync (1 samples, 0.02%)</title><rect x="894.1" y="2005" width="0.2" height="15.0" fill="rgb(226,153,11)" rx="2" ry="2" />
<text  x="897.08" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (32 samples, 0.52%)</title><rect x="172.0" y="1717" width="6.2" height="15.0" fill="rgb(215,103,13)" rx="2" ry="2" />
<text  x="174.99" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.5" y="1317" width="0.1" height="15.0" fill="rgb(246,105,11)" rx="2" ry="2" />
<text  x="1173.45" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.6" y="197" width="0.2" height="15.0" fill="rgb(245,223,18)" rx="2" ry="2" />
<text  x="1173.65" y="207.5" ></text>
</g>
<g >
<title>Eigen::PlainObjectBase&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt;::PlainObjectBase&lt;Eigen::Product&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt;, 0&gt; &gt; (1 samples, 0.02%)</title><rect x="170.8" y="1989" width="0.2" height="15.0" fill="rgb(205,141,7)" rx="2" ry="2" />
<text  x="173.83" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.3" y="2005" width="0.2" height="15.0" fill="rgb(220,166,19)" rx="2" ry="2" />
<text  x="1173.26" y="2015.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (6 samples, 0.10%)</title><rect x="85.1" y="1909" width="1.2" height="15.0" fill="rgb(221,127,37)" rx="2" ry="2" />
<text  x="88.09" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="168.9" y="1509" width="0.2" height="15.0" fill="rgb(248,222,7)" rx="2" ry="2" />
<text  x="171.89" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.0" y="853" width="0.2" height="15.0" fill="rgb(244,181,10)" rx="2" ry="2" />
<text  x="13.00" y="863.5" ></text>
</g>
<g >
<title>do_page_fault (11 samples, 0.18%)</title><rect x="708.1" y="1845" width="2.1" height="15.0" fill="rgb(238,161,34)" rx="2" ry="2" />
<text  x="711.09" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="101" width="0.2" height="15.0" fill="rgb(234,183,33)" rx="2" ry="2" />
<text  x="82.87" y="111.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.25] (19 samples, 0.31%)</title><rect x="40.8" y="2053" width="3.6" height="15.0" fill="rgb(209,100,46)" rx="2" ry="2" />
<text  x="43.77" y="2063.5" ></text>
</g>
<g >
<title>malloc (3 samples, 0.05%)</title><rect x="628.5" y="1877" width="0.6" height="15.0" fill="rgb(212,157,48)" rx="2" ry="2" />
<text  x="631.55" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="210.1" y="1813" width="0.6" height="15.0" fill="rgb(230,12,31)" rx="2" ry="2" />
<text  x="213.12" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (31 samples, 0.51%)</title><rect x="172.2" y="1685" width="6.0" height="15.0" fill="rgb(210,196,4)" rx="2" ry="2" />
<text  x="175.18" y="1695.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (2 samples, 0.03%)</title><rect x="120.5" y="1621" width="0.4" height="15.0" fill="rgb(247,177,13)" rx="2" ry="2" />
<text  x="123.51" y="1631.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (4 samples, 0.07%)</title><rect x="441.2" y="1861" width="0.8" height="15.0" fill="rgb(252,204,11)" rx="2" ry="2" />
<text  x="444.20" y="1871.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_stringbuf (35 samples, 0.57%)</title><rect x="878.4" y="2037" width="6.8" height="15.0" fill="rgb(247,205,38)" rx="2" ry="2" />
<text  x="881.40" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="1461" width="0.2" height="15.0" fill="rgb(236,68,50)" rx="2" ry="2" />
<text  x="82.87" y="1471.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="1205" width="0.2" height="15.0" fill="rgb(245,92,23)" rx="2" ry="2" />
<text  x="82.87" y="1215.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (2 samples, 0.03%)</title><rect x="868.5" y="1909" width="0.4" height="15.0" fill="rgb(245,138,33)" rx="2" ry="2" />
<text  x="871.53" y="1919.5" ></text>
</g>
<g >
<title>__vm_munmap (2 samples, 0.03%)</title><rect x="454.2" y="1909" width="0.4" height="15.0" fill="rgb(226,36,34)" rx="2" ry="2" />
<text  x="457.17" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="709" width="0.2" height="15.0" fill="rgb(209,95,8)" rx="2" ry="2" />
<text  x="1173.07" y="719.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (2 samples, 0.03%)</title><rect x="454.2" y="1925" width="0.4" height="15.0" fill="rgb(221,116,17)" rx="2" ry="2" />
<text  x="457.17" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (36 samples, 0.59%)</title><rect x="185.7" y="1733" width="7.0" height="15.0" fill="rgb(227,127,20)" rx="2" ry="2" />
<text  x="188.73" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="210.5" y="1493" width="0.2" height="15.0" fill="rgb(207,6,51)" rx="2" ry="2" />
<text  x="213.51" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.3" y="1269" width="0.2" height="15.0" fill="rgb(248,52,19)" rx="2" ry="2" />
<text  x="1173.26" y="1279.5" ></text>
</g>
<g >
<title>operator delete@plt (1 samples, 0.02%)</title><rect x="860.4" y="1909" width="0.2" height="15.0" fill="rgb(246,44,16)" rx="2" ry="2" />
<text  x="863.41" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.6" y="325" width="0.2" height="15.0" fill="rgb(226,173,47)" rx="2" ry="2" />
<text  x="1173.65" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="169.1" y="1221" width="0.2" height="15.0" fill="rgb(236,36,39)" rx="2" ry="2" />
<text  x="172.09" y="1231.5" ></text>
</g>
<g >
<title>__do_page_fault (7 samples, 0.11%)</title><rect x="78.3" y="1989" width="1.4" height="15.0" fill="rgb(244,53,30)" rx="2" ry="2" />
<text  x="81.32" y="1999.5" ></text>
</g>
<g >
<title>malloc@plt (1 samples, 0.02%)</title><rect x="124.8" y="1669" width="0.2" height="15.0" fill="rgb(209,93,37)" rx="2" ry="2" />
<text  x="127.77" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="1429" width="0.2" height="15.0" fill="rgb(214,221,21)" rx="2" ry="2" />
<text  x="1173.07" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.6" y="309" width="0.2" height="15.0" fill="rgb(217,147,33)" rx="2" ry="2" />
<text  x="1173.65" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.6" y="1653" width="0.2" height="15.0" fill="rgb(252,218,54)" rx="2" ry="2" />
<text  x="1173.65" y="1663.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (1 samples, 0.02%)</title><rect x="132.1" y="1701" width="0.2" height="15.0" fill="rgb(220,195,23)" rx="2" ry="2" />
<text  x="135.12" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="138.1" y="1797" width="0.4" height="15.0" fill="rgb(206,191,10)" rx="2" ry="2" />
<text  x="141.12" y="1807.5" ></text>
</g>
<g >
<title>unmap_region (2 samples, 0.03%)</title><rect x="454.2" y="1877" width="0.4" height="15.0" fill="rgb(248,174,31)" rx="2" ry="2" />
<text  x="457.17" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (37 samples, 0.61%)</title><rect x="178.2" y="1717" width="7.1" height="15.0" fill="rgb(233,153,11)" rx="2" ry="2" />
<text  x="181.18" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.3" y="1717" width="0.2" height="15.0" fill="rgb(244,227,43)" rx="2" ry="2" />
<text  x="1173.26" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (121 samples, 1.98%)</title><rect x="139.1" y="1797" width="23.4" height="15.0" fill="rgb(233,27,24)" rx="2" ry="2" />
<text  x="142.09" y="1807.5" >s..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (107 samples, 1.75%)</title><rect x="172.0" y="1781" width="20.7" height="15.0" fill="rgb(232,88,28)" rx="2" ry="2" />
<text  x="174.99" y="1791.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (5 samples, 0.08%)</title><rect x="441.0" y="1877" width="1.0" height="15.0" fill="rgb(242,37,47)" rx="2" ry="2" />
<text  x="444.01" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.3" y="341" width="0.2" height="15.0" fill="rgb(222,117,31)" rx="2" ry="2" />
<text  x="1173.26" y="351.5" ></text>
</g>
<g >
<title>unmap_page_range (1 samples, 0.02%)</title><rect x="583.1" y="1861" width="0.2" height="15.0" fill="rgb(206,97,45)" rx="2" ry="2" />
<text  x="586.07" y="1871.5" ></text>
</g>
<g >
<title>new_sync_read (1 samples, 0.02%)</title><rect x="915.4" y="1941" width="0.2" height="15.0" fill="rgb(246,110,25)" rx="2" ry="2" />
<text  x="918.37" y="1951.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.02%)</title><rect x="120.1" y="1621" width="0.2" height="15.0" fill="rgb(235,215,41)" rx="2" ry="2" />
<text  x="123.12" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="169.3" y="213" width="0.2" height="15.0" fill="rgb(206,163,33)" rx="2" ry="2" />
<text  x="172.28" y="223.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (1 samples, 0.02%)</title><rect x="916.3" y="1893" width="0.2" height="15.0" fill="rgb(233,69,43)" rx="2" ry="2" />
<text  x="919.34" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (2 samples, 0.03%)</title><rect x="208.4" y="1733" width="0.4" height="15.0" fill="rgb(221,93,16)" rx="2" ry="2" />
<text  x="211.38" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (32 samples, 0.52%)</title><rect x="111.0" y="1717" width="6.2" height="15.0" fill="rgb(239,214,16)" rx="2" ry="2" />
<text  x="114.03" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="1141" width="0.2" height="15.0" fill="rgb(238,85,3)" rx="2" ry="2" />
<text  x="1173.07" y="1151.5" ></text>
</g>
<g >
<title>__do_page_fault (4 samples, 0.07%)</title><rect x="868.1" y="1989" width="0.8" height="15.0" fill="rgb(209,48,16)" rx="2" ry="2" />
<text  x="871.15" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.5" y="1077" width="0.1" height="15.0" fill="rgb(249,200,13)" rx="2" ry="2" />
<text  x="1173.45" y="1087.5" ></text>
</g>
<g >
<title>cfree (7 samples, 0.11%)</title><rect x="223.1" y="1989" width="1.3" height="15.0" fill="rgb(250,200,6)" rx="2" ry="2" />
<text  x="226.09" y="1999.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="827.7" y="1877" width="0.2" height="15.0" fill="rgb(236,162,49)" rx="2" ry="2" />
<text  x="830.70" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.5" y="629" width="0.1" height="15.0" fill="rgb(211,96,5)" rx="2" ry="2" />
<text  x="1173.45" y="639.5" ></text>
</g>
<g >
<title>do_syscall_64 (3 samples, 0.05%)</title><rect x="581.7" y="1957" width="0.6" height="15.0" fill="rgb(235,56,28)" rx="2" ry="2" />
<text  x="584.71" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.3" y="757" width="0.2" height="15.0" fill="rgb(236,85,4)" rx="2" ry="2" />
<text  x="1173.26" y="767.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="915.4" y="2021" width="0.2" height="15.0" fill="rgb(219,68,4)" rx="2" ry="2" />
<text  x="918.37" y="2031.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (2 samples, 0.03%)</title><rect x="115.7" y="1605" width="0.4" height="15.0" fill="rgb(221,179,31)" rx="2" ry="2" />
<text  x="118.67" y="1615.5" ></text>
</g>
<g >
<title>malloc@plt (1 samples, 0.02%)</title><rect x="876.5" y="2037" width="0.2" height="15.0" fill="rgb(220,102,27)" rx="2" ry="2" />
<text  x="879.47" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (71 samples, 1.16%)</title><rect x="103.5" y="1749" width="13.7" height="15.0" fill="rgb(242,33,44)" rx="2" ry="2" />
<text  x="106.48" y="1759.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (1 samples, 0.02%)</title><rect x="166.4" y="1669" width="0.2" height="15.0" fill="rgb(234,40,51)" rx="2" ry="2" />
<text  x="169.38" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.0" y="1509" width="0.2" height="15.0" fill="rgb(232,136,20)" rx="2" ry="2" />
<text  x="13.00" y="1519.5" ></text>
</g>
<g >
<title>unmap_vmas (2 samples, 0.03%)</title><rect x="581.9" y="1877" width="0.4" height="15.0" fill="rgb(253,80,15)" rx="2" ry="2" />
<text  x="584.90" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.3" y="789" width="0.2" height="15.0" fill="rgb(212,132,42)" rx="2" ry="2" />
<text  x="1173.26" y="799.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (1 samples, 0.02%)</title><rect x="101.2" y="1989" width="0.1" height="15.0" fill="rgb(205,186,32)" rx="2" ry="2" />
<text  x="104.16" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (1 samples, 0.02%)</title><rect x="178.2" y="1685" width="0.2" height="15.0" fill="rgb(214,15,8)" rx="2" ry="2" />
<text  x="181.18" y="1695.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::getId (1 samples, 0.02%)</title><rect x="560.0" y="1973" width="0.2" height="15.0" fill="rgb(232,157,32)" rx="2" ry="2" />
<text  x="563.03" y="1983.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::pushHash (9 samples, 0.15%)</title><rect x="866.0" y="2037" width="1.8" height="15.0" fill="rgb(252,174,28)" rx="2" ry="2" />
<text  x="869.02" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.3" y="1381" width="0.2" height="15.0" fill="rgb(238,75,3)" rx="2" ry="2" />
<text  x="1173.26" y="1391.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1045.6" y="2037" width="0.2" height="15.0" fill="rgb(252,2,12)" rx="2" ry="2" />
<text  x="1048.62" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="138.1" y="1829" width="0.4" height="15.0" fill="rgb(222,182,14)" rx="2" ry="2" />
<text  x="141.12" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (37 samples, 0.61%)</title><rect x="103.7" y="1605" width="7.1" height="15.0" fill="rgb(213,15,18)" rx="2" ry="2" />
<text  x="106.67" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="1653" width="0.2" height="15.0" fill="rgb(214,215,29)" rx="2" ry="2" />
<text  x="1173.07" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (38 samples, 0.62%)</title><rect x="129.6" y="1781" width="7.4" height="15.0" fill="rgb(233,125,20)" rx="2" ry="2" />
<text  x="132.61" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (30 samples, 0.49%)</title><rect x="162.5" y="1733" width="5.8" height="15.0" fill="rgb(240,152,30)" rx="2" ry="2" />
<text  x="165.51" y="1743.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.02%)</title><rect x="1046.0" y="1989" width="0.2" height="15.0" fill="rgb(237,93,37)" rx="2" ry="2" />
<text  x="1049.01" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.5" y="549" width="0.1" height="15.0" fill="rgb(219,8,31)" rx="2" ry="2" />
<text  x="1173.45" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.0" y="293" width="0.2" height="15.0" fill="rgb(209,142,30)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>Annotate (85 samples, 1.39%)</title><rect x="86.3" y="2005" width="16.4" height="15.0" fill="rgb(206,183,47)" rx="2" ry="2" />
<text  x="89.25" y="2015.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::json_value::destroy (1 samples, 0.02%)</title><rect x="585.4" y="1973" width="0.2" height="15.0" fill="rgb(230,59,37)" rx="2" ry="2" />
<text  x="588.39" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_try_char (1 samples, 0.02%)</title><rect x="137.5" y="1797" width="0.2" height="15.0" fill="rgb(253,225,19)" rx="2" ry="2" />
<text  x="140.54" y="1807.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (3 samples, 0.05%)</title><rect x="161.7" y="1653" width="0.6" height="15.0" fill="rgb(224,51,36)" rx="2" ry="2" />
<text  x="164.73" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (2 samples, 0.03%)</title><rect x="199.9" y="1797" width="0.3" height="15.0" fill="rgb(226,88,35)" rx="2" ry="2" />
<text  x="202.86" y="1807.5" ></text>
</g>
<g >
<title>fasttext::FastText::getDimension (13 samples, 0.21%)</title><rect x="561.0" y="1973" width="2.5" height="15.0" fill="rgb(210,74,2)" rx="2" ry="2" />
<text  x="564.00" y="1983.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (25 samples, 0.41%)</title><rect x="74.8" y="2037" width="4.9" height="15.0" fill="rgb(244,0,33)" rx="2" ry="2" />
<text  x="77.84" y="2047.5" ></text>
</g>
<g >
<title>free@plt (1 samples, 0.02%)</title><rect x="341.7" y="1989" width="0.2" height="15.0" fill="rgb(241,13,29)" rx="2" ry="2" />
<text  x="344.72" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.0" y="485" width="0.2" height="15.0" fill="rgb(221,191,23)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (1 samples, 0.02%)</title><rect x="129.4" y="1781" width="0.2" height="15.0" fill="rgb(229,110,23)" rx="2" ry="2" />
<text  x="132.41" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.5" y="757" width="0.1" height="15.0" fill="rgb(238,105,40)" rx="2" ry="2" />
<text  x="1173.45" y="767.5" ></text>
</g>
<g >
<title>operator new@plt (1 samples, 0.02%)</title><rect x="158.6" y="1653" width="0.2" height="15.0" fill="rgb(243,121,28)" rx="2" ry="2" />
<text  x="161.64" y="1663.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.02%)</title><rect x="108.3" y="1573" width="0.2" height="15.0" fill="rgb(228,125,13)" rx="2" ry="2" />
<text  x="111.32" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="1637" width="0.2" height="15.0" fill="rgb(242,98,22)" rx="2" ry="2" />
<text  x="1173.07" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.6" y="661" width="0.2" height="15.0" fill="rgb(233,132,44)" rx="2" ry="2" />
<text  x="1173.65" y="671.5" ></text>
</g>
<g >
<title>release_pages (1 samples, 0.02%)</title><rect x="916.3" y="1877" width="0.2" height="15.0" fill="rgb(207,111,33)" rx="2" ry="2" />
<text  x="919.34" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.6" y="1493" width="0.2" height="15.0" fill="rgb(213,177,27)" rx="2" ry="2" />
<text  x="1173.65" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="821" width="0.2" height="15.0" fill="rgb(232,175,24)" rx="2" ry="2" />
<text  x="1173.07" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="1029" width="0.2" height="15.0" fill="rgb(222,37,50)" rx="2" ry="2" />
<text  x="1173.07" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.3" y="1765" width="0.2" height="15.0" fill="rgb(207,4,37)" rx="2" ry="2" />
<text  x="141.32" y="1775.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="583.1" y="1797" width="0.2" height="15.0" fill="rgb(242,189,49)" rx="2" ry="2" />
<text  x="586.07" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.3" y="1061" width="0.2" height="15.0" fill="rgb(215,40,21)" rx="2" ry="2" />
<text  x="1173.26" y="1071.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::basic_json (1 samples, 0.02%)</title><rect x="586.2" y="1877" width="0.2" height="15.0" fill="rgb(251,56,27)" rx="2" ry="2" />
<text  x="589.16" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.0" y="1301" width="0.2" height="15.0" fill="rgb(208,191,49)" rx="2" ry="2" />
<text  x="13.00" y="1311.5" ></text>
</g>
<g >
<title>unmap_region (3 samples, 0.05%)</title><rect x="581.7" y="1893" width="0.6" height="15.0" fill="rgb(243,96,15)" rx="2" ry="2" />
<text  x="584.71" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (1 samples, 0.02%)</title><rect x="129.4" y="1765" width="0.2" height="15.0" fill="rgb(220,22,14)" rx="2" ry="2" />
<text  x="132.41" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (27 samples, 0.44%)</title><rect x="139.1" y="1637" width="5.2" height="15.0" fill="rgb(215,115,17)" rx="2" ry="2" />
<text  x="142.09" y="1647.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (3 samples, 0.05%)</title><rect x="43.9" y="1973" width="0.5" height="15.0" fill="rgb(240,190,45)" rx="2" ry="2" />
<text  x="46.87" y="1983.5" ></text>
</g>
<g >
<title>std::__merge_sort_with_buffer&lt;__gnu_cxx::__normal_iterator&lt;TWeightedNewsCluster*, std::vector&lt;TWeightedNewsCluster, std::allocator&lt;TWeightedNewsCluster&gt; &gt; &gt;, TWeightedNewsCluster*, __gnu_cxx::__ops::_Iter_comp_iter&lt;Rank (1 samples, 0.02%)</title><rect x="169.9" y="1973" width="0.2" height="15.0" fill="rgb(207,20,48)" rx="2" ry="2" />
<text  x="172.86" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt;,  (1 samples, 0.02%)</title><rect x="10.0" y="2005" width="0.2" height="15.0" fill="rgb(231,225,9)" rx="2" ry="2" />
<text  x="13.00" y="2015.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::do_tolower (1 samples, 0.02%)</title><rect x="198.7" y="1669" width="0.2" height="15.0" fill="rgb(213,71,2)" rx="2" ry="2" />
<text  x="201.70" y="1679.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (2 samples, 0.03%)</title><rect x="192.1" y="1637" width="0.4" height="15.0" fill="rgb(219,58,37)" rx="2" ry="2" />
<text  x="195.12" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="1445" width="0.2" height="15.0" fill="rgb(219,34,34)" rx="2" ry="2" />
<text  x="82.87" y="1455.5" ></text>
</g>
<g >
<title>fasttext::entry::entry (2 samples, 0.03%)</title><rect x="1098.5" y="2053" width="0.3" height="15.0" fill="rgb(225,10,40)" rx="2" ry="2" />
<text  x="1101.46" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.3" y="1333" width="0.2" height="15.0" fill="rgb(238,106,51)" rx="2" ry="2" />
<text  x="1173.26" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.3" y="1509" width="0.2" height="15.0" fill="rgb(226,142,39)" rx="2" ry="2" />
<text  x="1173.26" y="1519.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::value (1 samples, 0.02%)</title><rect x="117.2" y="1717" width="0.2" height="15.0" fill="rgb(216,218,32)" rx="2" ry="2" />
<text  x="120.22" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="453" width="0.2" height="15.0" fill="rgb(226,43,23)" rx="2" ry="2" />
<text  x="1173.07" y="463.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.03%)</title><rect x="153.4" y="1605" width="0.4" height="15.0" fill="rgb(237,81,13)" rx="2" ry="2" />
<text  x="156.41" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.3" y="1109" width="0.2" height="15.0" fill="rgb(251,58,13)" rx="2" ry="2" />
<text  x="1173.26" y="1119.5" ></text>
</g>
<g >
<title>nlohmann::operator&gt;&gt; (66 samples, 1.08%)</title><rect x="88.4" y="1989" width="12.8" height="15.0" fill="rgb(221,218,16)" rx="2" ry="2" />
<text  x="91.38" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="169.3" y="773" width="0.2" height="15.0" fill="rgb(251,80,40)" rx="2" ry="2" />
<text  x="172.28" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (1 samples, 0.02%)</title><rect x="168.3" y="1813" width="0.2" height="15.0" fill="rgb(225,165,17)" rx="2" ry="2" />
<text  x="171.31" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (28 samples, 0.46%)</title><rect x="79.7" y="2037" width="5.4" height="15.0" fill="rgb(248,139,39)" rx="2" ry="2" />
<text  x="82.67" y="2047.5" ></text>
</g>
<g >
<title>schedule (4 samples, 0.07%)</title><rect x="101.7" y="1861" width="0.8" height="15.0" fill="rgb(251,16,52)" rx="2" ry="2" />
<text  x="104.74" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.3" y="1653" width="0.2" height="15.0" fill="rgb(207,135,27)" rx="2" ry="2" />
<text  x="1173.26" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (34 samples, 0.56%)</title><rect x="155.9" y="1749" width="6.6" height="15.0" fill="rgb(254,180,24)" rx="2" ry="2" />
<text  x="158.93" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.0" y="1541" width="0.2" height="15.0" fill="rgb(240,41,53)" rx="2" ry="2" />
<text  x="13.00" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.5" y="965" width="0.1" height="15.0" fill="rgb(244,43,6)" rx="2" ry="2" />
<text  x="1173.45" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (2 samples, 0.03%)</title><rect x="208.4" y="1749" width="0.4" height="15.0" fill="rgb(213,218,53)" rx="2" ry="2" />
<text  x="211.38" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.3" y="1669" width="0.2" height="15.0" fill="rgb(208,178,10)" rx="2" ry="2" />
<text  x="1173.26" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (87 samples, 1.43%)</title><rect x="139.1" y="1765" width="16.8" height="15.0" fill="rgb(207,20,40)" rx="2" ry="2" />
<text  x="142.09" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.5" y="245" width="0.1" height="15.0" fill="rgb(213,94,41)" rx="2" ry="2" />
<text  x="1173.45" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::basic_regex&lt;char const*&gt; (182 samples, 2.99%)</title><rect x="102.7" y="1957" width="35.2" height="15.0" fill="rgb(237,166,41)" rx="2" ry="2" />
<text  x="105.70" y="1967.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1170.5" y="1989" width="0.3" height="15.0" fill="rgb(227,11,47)" rx="2" ry="2" />
<text  x="1173.45" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="1669" width="0.2" height="15.0" fill="rgb(209,100,44)" rx="2" ry="2" />
<text  x="1173.07" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="210.5" y="1477" width="0.2" height="15.0" fill="rgb(223,161,3)" rx="2" ry="2" />
<text  x="213.51" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.0" y="997" width="0.2" height="15.0" fill="rgb(220,225,5)" rx="2" ry="2" />
<text  x="13.00" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.0" y="1621" width="0.2" height="15.0" fill="rgb(216,134,37)" rx="2" ry="2" />
<text  x="13.00" y="1631.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::construct&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="586.2" y="1989" width="0.2" height="15.0" fill="rgb(209,153,19)" rx="2" ry="2" />
<text  x="589.16" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.6" y="1301" width="0.2" height="15.0" fill="rgb(237,53,20)" rx="2" ry="2" />
<text  x="1173.65" y="1311.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::json_value::destroy (1 samples, 0.02%)</title><rect x="588.5" y="1957" width="0.2" height="15.0" fill="rgb(249,223,27)" rx="2" ry="2" />
<text  x="591.48" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="517" width="0.2" height="15.0" fill="rgb(241,208,31)" rx="2" ry="2" />
<text  x="1173.07" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (26 samples, 0.43%)</title><rect x="144.5" y="1669" width="5.0" height="15.0" fill="rgb(224,229,45)" rx="2" ry="2" />
<text  x="147.51" y="1679.5" ></text>
</g>
<g >
<title>__vm_munmap (1 samples, 0.02%)</title><rect x="583.1" y="1941" width="0.2" height="15.0" fill="rgb(249,144,50)" rx="2" ry="2" />
<text  x="586.07" y="1951.5" ></text>
</g>
<g >
<title>futex_wake (4 samples, 0.07%)</title><rect x="586.4" y="1957" width="0.7" height="15.0" fill="rgb(212,118,21)" rx="2" ry="2" />
<text  x="589.36" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (30 samples, 0.49%)</title><rect x="172.4" y="1605" width="5.8" height="15.0" fill="rgb(239,100,30)" rx="2" ry="2" />
<text  x="175.38" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="169.1" y="1301" width="0.2" height="15.0" fill="rgb(215,11,34)" rx="2" ry="2" />
<text  x="172.09" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (144 samples, 2.36%)</title><rect x="172.0" y="1797" width="27.9" height="15.0" fill="rgb(215,14,19)" rx="2" ry="2" />
<text  x="174.99" y="1807.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="1781" width="0.2" height="15.0" fill="rgb(251,4,42)" rx="2" ry="2" />
<text  x="1173.07" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (12 samples, 0.20%)</title><rect x="888.3" y="2005" width="2.3" height="15.0" fill="rgb(232,143,38)" rx="2" ry="2" />
<text  x="891.27" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.3" y="1189" width="0.2" height="15.0" fill="rgb(242,41,9)" rx="2" ry="2" />
<text  x="1173.26" y="1199.5" ></text>
</g>
<g >
<title>get_page_from_freelist (2 samples, 0.03%)</title><rect x="440.2" y="1845" width="0.4" height="15.0" fill="rgb(233,23,9)" rx="2" ry="2" />
<text  x="443.23" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.3" y="805" width="0.2" height="15.0" fill="rgb(236,83,17)" rx="2" ry="2" />
<text  x="1173.26" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.6" y="1477" width="0.2" height="15.0" fill="rgb(242,168,43)" rx="2" ry="2" />
<text  x="1173.65" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="169.3" y="1093" width="0.2" height="15.0" fill="rgb(218,42,38)" rx="2" ry="2" />
<text  x="172.28" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.6" y="1925" width="0.2" height="15.0" fill="rgb(231,75,44)" rx="2" ry="2" />
<text  x="1173.65" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (33 samples, 0.54%)</title><rect x="149.5" y="1733" width="6.4" height="15.0" fill="rgb(238,77,0)" rx="2" ry="2" />
<text  x="152.54" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (1 samples, 0.02%)</title><rect x="168.3" y="1797" width="0.2" height="15.0" fill="rgb(205,36,36)" rx="2" ry="2" />
<text  x="171.31" y="1807.5" ></text>
</g>
<g >
<title>__munmap (1 samples, 0.02%)</title><rect x="583.1" y="2005" width="0.2" height="15.0" fill="rgb(220,3,30)" rx="2" ry="2" />
<text  x="586.07" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_try_char (2 samples, 0.03%)</title><rect x="185.3" y="1733" width="0.4" height="15.0" fill="rgb(244,176,13)" rx="2" ry="2" />
<text  x="188.35" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="168.9" y="1413" width="0.2" height="15.0" fill="rgb(253,224,30)" rx="2" ry="2" />
<text  x="171.89" y="1423.5" ></text>
</g>
<g >
<title>onmt::get_alphabet_id (4 samples, 0.07%)</title><rect x="755.3" y="1893" width="0.8" height="15.0" fill="rgb(245,196,37)" rx="2" ry="2" />
<text  x="758.31" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (30 samples, 0.49%)</title><rect x="162.5" y="1797" width="5.8" height="15.0" fill="rgb(246,211,21)" rx="2" ry="2" />
<text  x="165.51" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="210.5" y="1413" width="0.2" height="15.0" fill="rgb(209,63,2)" rx="2" ry="2" />
<text  x="213.51" y="1423.5" ></text>
</g>
<g >
<title>memcpy@plt (3 samples, 0.05%)</title><rect x="1116.6" y="2053" width="0.6" height="15.0" fill="rgb(210,131,20)" rx="2" ry="2" />
<text  x="1119.65" y="2063.5" ></text>
</g>
<g >
<title>unmap_vmas (1 samples, 0.02%)</title><rect x="583.1" y="1893" width="0.2" height="15.0" fill="rgb(243,177,35)" rx="2" ry="2" />
<text  x="586.07" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.3" y="1493" width="0.2" height="15.0" fill="rgb(211,196,40)" rx="2" ry="2" />
<text  x="1173.26" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.6" y="1413" width="0.2" height="15.0" fill="rgb(219,54,6)" rx="2" ry="2" />
<text  x="1173.65" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="309" width="0.2" height="15.0" fill="rgb(219,101,0)" rx="2" ry="2" />
<text  x="1173.07" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.3" y="1557" width="0.2" height="15.0" fill="rgb(225,54,53)" rx="2" ry="2" />
<text  x="141.32" y="1567.5" ></text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.02%)</title><rect x="671.1" y="1781" width="0.2" height="15.0" fill="rgb(238,69,37)" rx="2" ry="2" />
<text  x="674.13" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (176 samples, 2.89%)</title><rect x="103.1" y="1861" width="34.1" height="15.0" fill="rgb(239,10,54)" rx="2" ry="2" />
<text  x="106.09" y="1871.5" >st..</text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;,  (2 samples, 0.03%)</title><rect x="138.5" y="1941" width="0.4" height="15.0" fill="rgb(248,16,3)" rx="2" ry="2" />
<text  x="141.51" y="1951.5" ></text>
</g>
<g >
<title>page_fault (2 samples, 0.03%)</title><rect x="746.6" y="1877" width="0.4" height="15.0" fill="rgb(206,8,34)" rx="2" ry="2" />
<text  x="749.60" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.0" y="581" width="0.2" height="15.0" fill="rgb(248,215,10)" rx="2" ry="2" />
<text  x="13.00" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.3" y="325" width="0.2" height="15.0" fill="rgb(221,27,32)" rx="2" ry="2" />
<text  x="1173.26" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="168.9" y="1637" width="0.6" height="15.0" fill="rgb(230,146,47)" rx="2" ry="2" />
<text  x="171.89" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (1 samples, 0.02%)</title><rect x="117.4" y="1653" width="0.2" height="15.0" fill="rgb(219,144,36)" rx="2" ry="2" />
<text  x="120.41" y="1663.5" ></text>
</g>
<g >
<title>TNewsCluster::GetCategory (1 samples, 0.02%)</title><rect x="169.7" y="1989" width="0.2" height="15.0" fill="rgb(225,9,20)" rx="2" ry="2" />
<text  x="172.67" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1170.5" y="2053" width="0.3" height="15.0" fill="rgb(244,78,51)" rx="2" ry="2" />
<text  x="1173.45" y="2063.5" ></text>
</g>
<g >
<title>__do_munmap (1 samples, 0.02%)</title><rect x="916.3" y="1989" width="0.2" height="15.0" fill="rgb(225,118,21)" rx="2" ry="2" />
<text  x="919.34" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.6" y="1189" width="0.2" height="15.0" fill="rgb(243,193,50)" rx="2" ry="2" />
<text  x="1173.65" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.3" y="1605" width="0.2" height="15.0" fill="rgb(249,56,5)" rx="2" ry="2" />
<text  x="141.32" y="1615.5" ></text>
</g>
<g >
<title>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::dump (4 samples, 0.07%)</title><rect x="583.8" y="1941" width="0.8" height="15.0" fill="rgb(245,82,35)" rx="2" ry="2" />
<text  x="586.84" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="837" width="0.2" height="15.0" fill="rgb(248,41,5)" rx="2" ry="2" />
<text  x="82.87" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.6" y="1573" width="0.2" height="15.0" fill="rgb(247,123,13)" rx="2" ry="2" />
<text  x="1173.65" y="1583.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="579.8" y="1973" width="0.2" height="15.0" fill="rgb(233,90,46)" rx="2" ry="2" />
<text  x="582.78" y="1983.5" ></text>
</g>
<g >
<title>Eigen::internal::product_evaluator&lt;Eigen::Product&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0&gt;, 7, Eigen::DenseShape, Eigen::DenseShape, float, float&gt;::product_evaluator (3 samples, 0.05%)</title><rect x="450.3" y="1957" width="0.6" height="15.0" fill="rgb(239,41,6)" rx="2" ry="2" />
<text  x="453.30" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.6" y="181" width="0.2" height="15.0" fill="rgb(229,93,2)" rx="2" ry="2" />
<text  x="1173.65" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (38 samples, 0.62%)</title><rect x="129.6" y="1765" width="7.4" height="15.0" fill="rgb(248,124,33)" rx="2" ry="2" />
<text  x="132.61" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (30 samples, 0.49%)</title><rect x="123.6" y="1733" width="5.8" height="15.0" fill="rgb(233,151,37)" rx="2" ry="2" />
<text  x="126.61" y="1743.5" ></text>
</g>
<g >
<title>boost::optional_detail::optional_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::assign (1 samples, 0.02%)</title><rect x="586.0" y="1941" width="0.2" height="15.0" fill="rgb(222,114,18)" rx="2" ry="2" />
<text  x="588.97" y="1951.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="180.9" y="1621" width="0.2" height="15.0" fill="rgb(248,30,14)" rx="2" ry="2" />
<text  x="183.89" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.6" y="741" width="0.2" height="15.0" fill="rgb(249,229,16)" rx="2" ry="2" />
<text  x="1173.65" y="751.5" ></text>
</g>
<g >
<title>clear_page_erms (2 samples, 0.03%)</title><rect x="79.1" y="1909" width="0.4" height="15.0" fill="rgb(243,42,46)" rx="2" ry="2" />
<text  x="82.09" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="169.1" y="1189" width="0.2" height="15.0" fill="rgb(252,67,44)" rx="2" ry="2" />
<text  x="172.09" y="1199.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="180.5" y="1621" width="0.2" height="15.0" fill="rgb(246,75,53)" rx="2" ry="2" />
<text  x="183.51" y="1631.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (1 samples, 0.02%)</title><rect x="581.7" y="1813" width="0.2" height="15.0" fill="rgb(253,76,24)" rx="2" ry="2" />
<text  x="584.71" y="1823.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::do_tolower (4 samples, 0.07%)</title><rect x="109.5" y="1589" width="0.8" height="15.0" fill="rgb(241,37,44)" rx="2" ry="2" />
<text  x="112.48" y="1599.5" ></text>
</g>
<g >
<title>do_futex (4 samples, 0.07%)</title><rect x="586.4" y="1973" width="0.7" height="15.0" fill="rgb(238,96,24)" rx="2" ry="2" />
<text  x="589.36" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="169.3" y="677" width="0.2" height="15.0" fill="rgb(242,133,10)" rx="2" ry="2" />
<text  x="172.28" y="687.5" ></text>
</g>
<g >
<title>__strxfrm_l (21 samples, 0.34%)</title><rect x="1166.0" y="2037" width="4.1" height="15.0" fill="rgb(243,210,53)" rx="2" ry="2" />
<text  x="1169.00" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (11 samples, 0.18%)</title><rect x="141.8" y="1573" width="2.1" height="15.0" fill="rgb(213,63,40)" rx="2" ry="2" />
<text  x="144.80" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.5" y="37" width="0.1" height="15.0" fill="rgb(244,138,26)" rx="2" ry="2" />
<text  x="1173.45" y="47.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (30 samples, 0.49%)</title><rect x="162.5" y="1701" width="5.8" height="15.0" fill="rgb(251,18,19)" rx="2" ry="2" />
<text  x="165.51" y="1711.5" ></text>
</g>
<g >
<title>operator delete@plt (1 samples, 0.02%)</title><rect x="1117.6" y="2053" width="0.2" height="15.0" fill="rgb(248,156,34)" rx="2" ry="2" />
<text  x="1120.62" y="2063.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (2 samples, 0.03%)</title><rect x="191.7" y="1637" width="0.4" height="15.0" fill="rgb(252,108,47)" rx="2" ry="2" />
<text  x="194.73" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (1 samples, 0.02%)</title><rect x="168.7" y="1845" width="0.2" height="15.0" fill="rgb(212,181,42)" rx="2" ry="2" />
<text  x="171.70" y="1855.5" ></text>
</g>
<g >
<title>std::ios_base::_M_init@plt (1 samples, 0.02%)</title><rect x="1188.5" y="2053" width="0.1" height="15.0" fill="rgb(231,192,25)" rx="2" ry="2" />
<text  x="1191.45" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.3" y="677" width="0.2" height="15.0" fill="rgb(242,146,8)" rx="2" ry="2" />
<text  x="1173.26" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.6" y="1893" width="0.2" height="15.0" fill="rgb(254,59,39)" rx="2" ry="2" />
<text  x="1173.65" y="1903.5" ></text>
</g>
<g >
<title>onmt::unicode::is_number (4 samples, 0.07%)</title><rect x="828.3" y="1893" width="0.8" height="15.0" fill="rgb(249,221,32)" rx="2" ry="2" />
<text  x="831.28" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="210.1" y="1781" width="0.6" height="15.0" fill="rgb(234,107,8)" rx="2" ry="2" />
<text  x="213.12" y="1791.5" ></text>
</g>
<g >
<title>__do_page_fault (16 samples, 0.26%)</title><rect x="37.1" y="2005" width="3.1" height="15.0" fill="rgb(229,155,33)" rx="2" ry="2" />
<text  x="40.10" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.3" y="1477" width="0.2" height="15.0" fill="rgb(222,215,21)" rx="2" ry="2" />
<text  x="1173.26" y="1487.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::_Bind&lt;Annotate (1,438 samples, 23.59%)</title><rect x="587.3" y="1989" width="278.3" height="15.0" fill="rgb(238,194,19)" rx="2" ry="2" />
<text  x="590.32" y="1999.5" >std::__invoke&lt;std::_Bind&lt;Annotate</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="168.9" y="1845" width="0.6" height="15.0" fill="rgb(232,164,10)" rx="2" ry="2" />
<text  x="171.89" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (1 samples, 0.02%)</title><rect x="172.2" y="1605" width="0.2" height="15.0" fill="rgb(220,155,9)" rx="2" ry="2" />
<text  x="175.18" y="1615.5" ></text>
</g>
<g >
<title>cfree (2 samples, 0.03%)</title><rect x="145.9" y="1605" width="0.4" height="15.0" fill="rgb(205,147,30)" rx="2" ry="2" />
<text  x="148.86" y="1615.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="344.2" y="1989" width="0.2" height="15.0" fill="rgb(232,194,28)" rx="2" ry="2" />
<text  x="347.24" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="613" width="0.2" height="15.0" fill="rgb(248,24,36)" rx="2" ry="2" />
<text  x="82.87" y="623.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.03%)</title><rect x="1045.8" y="2037" width="0.4" height="15.0" fill="rgb(248,38,2)" rx="2" ry="2" />
<text  x="1048.81" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="1829" width="0.2" height="15.0" fill="rgb(237,100,37)" rx="2" ry="2" />
<text  x="82.87" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="2021" width="0.2" height="15.0" fill="rgb(237,152,36)" rx="2" ry="2" />
<text  x="1173.07" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.3" y="1685" width="0.2" height="15.0" fill="rgb(218,89,6)" rx="2" ry="2" />
<text  x="1173.26" y="1695.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id@plt (1 samples, 0.02%)</title><rect x="143.9" y="1573" width="0.2" height="15.0" fill="rgb(252,18,51)" rx="2" ry="2" />
<text  x="146.93" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="597" width="0.2" height="15.0" fill="rgb(229,41,29)" rx="2" ry="2" />
<text  x="82.87" y="607.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="1141" width="0.2" height="15.0" fill="rgb(215,32,41)" rx="2" ry="2" />
<text  x="82.87" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="1349" width="0.2" height="15.0" fill="rgb(243,153,9)" rx="2" ry="2" />
<text  x="1173.07" y="1359.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="133" width="0.2" height="15.0" fill="rgb(215,173,43)" rx="2" ry="2" />
<text  x="82.87" y="143.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="36.9" y="2037" width="0.2" height="15.0" fill="rgb(239,30,27)" rx="2" ry="2" />
<text  x="39.90" y="2047.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (42 samples, 0.69%)</title><rect x="747.0" y="1877" width="8.1" height="15.0" fill="rgb(254,28,48)" rx="2" ry="2" />
<text  x="749.99" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="1749" width="0.2" height="15.0" fill="rgb(213,76,48)" rx="2" ry="2" />
<text  x="82.87" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.6" y="565" width="0.2" height="15.0" fill="rgb(206,104,27)" rx="2" ry="2" />
<text  x="1173.65" y="575.5" ></text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::scan_string (59 samples, 0.97%)</title><rect x="89.5" y="1941" width="11.5" height="15.0" fill="rgb(230,110,23)" rx="2" ry="2" />
<text  x="92.54" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="613" width="0.2" height="15.0" fill="rgb(232,93,51)" rx="2" ry="2" />
<text  x="1173.07" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="1285" width="0.2" height="15.0" fill="rgb(212,31,50)" rx="2" ry="2" />
<text  x="1173.07" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.6" y="341" width="0.2" height="15.0" fill="rgb(217,201,17)" rx="2" ry="2" />
<text  x="1173.65" y="351.5" ></text>
</g>
<g >
<title>__do_munmap (3 samples, 0.05%)</title><rect x="581.7" y="1909" width="0.6" height="15.0" fill="rgb(205,196,15)" rx="2" ry="2" />
<text  x="584.71" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.6" y="1333" width="0.2" height="15.0" fill="rgb(247,215,42)" rx="2" ry="2" />
<text  x="1173.65" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (38 samples, 0.62%)</title><rect x="129.6" y="1749" width="7.4" height="15.0" fill="rgb(207,139,4)" rx="2" ry="2" />
<text  x="132.61" y="1759.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::json_value::destroy (1 samples, 0.02%)</title><rect x="583.5" y="1989" width="0.1" height="15.0" fill="rgb(213,76,50)" rx="2" ry="2" />
<text  x="586.45" y="1999.5" ></text>
</g>
<g >
<title>__x64_sys_read (1 samples, 0.02%)</title><rect x="915.4" y="2005" width="0.2" height="15.0" fill="rgb(224,64,36)" rx="2" ry="2" />
<text  x="918.37" y="2015.5" ></text>
</g>
<g >
<title>std::ios_base::~ios_base (3 samples, 0.05%)</title><rect x="892.9" y="2037" width="0.6" height="15.0" fill="rgb(234,21,17)" rx="2" ry="2" />
<text  x="895.92" y="2047.5" ></text>
</g>
<g >
<title>onmt::add_final_token&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (9 samples, 0.15%)</title><rect x="595.1" y="1893" width="1.7" height="15.0" fill="rgb(221,4,49)" rx="2" ry="2" />
<text  x="598.06" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="168.9" y="1461" width="0.2" height="15.0" fill="rgb(254,159,2)" rx="2" ry="2" />
<text  x="171.89" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="169.3" y="533" width="0.2" height="15.0" fill="rgb(215,16,36)" rx="2" ry="2" />
<text  x="172.28" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.6" y="437" width="0.2" height="15.0" fill="rgb(245,212,15)" rx="2" ry="2" />
<text  x="1173.65" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_quantifier (1 samples, 0.02%)</title><rect x="192.5" y="1701" width="0.2" height="15.0" fill="rgb(223,214,29)" rx="2" ry="2" />
<text  x="195.51" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.6" y="1237" width="0.2" height="15.0" fill="rgb(226,77,20)" rx="2" ry="2" />
<text  x="1173.65" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (15 samples, 0.25%)</title><rect x="164.2" y="1685" width="3.0" height="15.0" fill="rgb(218,69,13)" rx="2" ry="2" />
<text  x="167.25" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.5" y="437" width="0.1" height="15.0" fill="rgb(213,18,47)" rx="2" ry="2" />
<text  x="1173.45" y="447.5" ></text>
</g>
<g >
<title>cfree (1 samples, 0.02%)</title><rect x="118.6" y="1637" width="0.2" height="15.0" fill="rgb(214,20,36)" rx="2" ry="2" />
<text  x="121.57" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (1 samples, 0.02%)</title><rect x="129.6" y="1717" width="0.2" height="15.0" fill="rgb(245,162,38)" rx="2" ry="2" />
<text  x="132.61" y="1727.5" ></text>
</g>
<g >
<title>TDocument::TDocument (2 samples, 0.03%)</title><rect x="864.5" y="1973" width="0.4" height="15.0" fill="rgb(234,9,41)" rx="2" ry="2" />
<text  x="867.47" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (180 samples, 2.95%)</title><rect x="103.1" y="1925" width="34.8" height="15.0" fill="rgb(215,109,11)" rx="2" ry="2" />
<text  x="106.09" y="1935.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.6" y="597" width="0.2" height="15.0" fill="rgb(224,65,28)" rx="2" ry="2" />
<text  x="1173.65" y="607.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="341" width="0.2" height="15.0" fill="rgb(233,107,5)" rx="2" ry="2" />
<text  x="82.87" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.0" y="1461" width="0.2" height="15.0" fill="rgb(231,153,26)" rx="2" ry="2" />
<text  x="13.00" y="1471.5" ></text>
</g>
<g >
<title>__x64_sys_futex (4 samples, 0.07%)</title><rect x="586.4" y="1989" width="0.7" height="15.0" fill="rgb(215,192,20)" rx="2" ry="2" />
<text  x="589.36" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.5" y="613" width="0.1" height="15.0" fill="rgb(239,25,37)" rx="2" ry="2" />
<text  x="1173.45" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1170.5" y="2021" width="0.3" height="15.0" fill="rgb(206,188,48)" rx="2" ry="2" />
<text  x="1173.45" y="2031.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="87.4" y="1941" width="0.2" height="15.0" fill="rgb(233,2,9)" rx="2" ry="2" />
<text  x="90.42" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.6" y="245" width="0.2" height="15.0" fill="rgb(216,179,6)" rx="2" ry="2" />
<text  x="1173.65" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (1 samples, 0.02%)</title><rect x="137.5" y="1813" width="0.2" height="15.0" fill="rgb(225,105,17)" rx="2" ry="2" />
<text  x="140.54" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.6" y="581" width="0.2" height="15.0" fill="rgb(241,158,25)" rx="2" ry="2" />
<text  x="1173.65" y="591.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="1349" width="0.2" height="15.0" fill="rgb(212,86,16)" rx="2" ry="2" />
<text  x="82.87" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.3" y="1317" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="141.32" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="169.3" y="1461" width="0.2" height="15.0" fill="rgb(253,216,21)" rx="2" ry="2" />
<text  x="172.28" y="1471.5" ></text>
</g>
<g >
<title>operator new@plt (1 samples, 0.02%)</title><rect x="342.3" y="1989" width="0.2" height="15.0" fill="rgb(215,206,46)" rx="2" ry="2" />
<text  x="345.30" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (32 samples, 0.52%)</title><rect x="111.0" y="1669" width="6.2" height="15.0" fill="rgb(243,207,53)" rx="2" ry="2" />
<text  x="114.03" y="1679.5" ></text>
</g>
<g >
<title>malloc@plt (2 samples, 0.03%)</title><rect x="629.1" y="1877" width="0.4" height="15.0" fill="rgb(240,163,2)" rx="2" ry="2" />
<text  x="632.13" y="1887.5" ></text>
</g>
<g >
<title>fasttext::ProductQuantizer::addcode (203 samples, 3.33%)</title><rect x="1056.1" y="2053" width="39.3" height="15.0" fill="rgb(205,134,12)" rx="2" ry="2" />
<text  x="1059.07" y="2063.5" >fas..</text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (1 samples, 0.02%)</title><rect x="120.3" y="1621" width="0.2" height="15.0" fill="rgb(230,53,36)" rx="2" ry="2" />
<text  x="123.32" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.0" y="277" width="0.2" height="15.0" fill="rgb(237,92,4)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::addSubwords (2 samples, 0.03%)</title><rect x="943.0" y="2053" width="0.4" height="15.0" fill="rgb(254,208,27)" rx="2" ry="2" />
<text  x="946.05" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="893.7" y="2021" width="0.6" height="15.0" fill="rgb(238,183,54)" rx="2" ry="2" />
<text  x="896.69" y="2031.5" ></text>
</g>
<g >
<title>__libc_start_main (2,584 samples, 42.38%)</title><rect x="86.3" y="2037" width="500.1" height="15.0" fill="rgb(233,199,37)" rx="2" ry="2" />
<text  x="89.25" y="2047.5" >__libc_start_main</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.5" y="661" width="0.1" height="15.0" fill="rgb(249,8,35)" rx="2" ry="2" />
<text  x="1173.45" y="671.5" ></text>
</g>
<g >
<title>malloc@plt (2 samples, 0.03%)</title><rect x="1115.3" y="2053" width="0.4" height="15.0" fill="rgb(224,137,13)" rx="2" ry="2" />
<text  x="1118.29" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="169.3" y="1445" width="0.2" height="15.0" fill="rgb(228,210,32)" rx="2" ry="2" />
<text  x="172.28" y="1455.5" ></text>
</g>
<g >
<title>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::dump (5 samples, 0.08%)</title><rect x="583.6" y="1957" width="1.0" height="15.0" fill="rgb(250,201,50)" rx="2" ry="2" />
<text  x="586.65" y="1967.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (1 samples, 0.02%)</title><rect x="166.2" y="1669" width="0.2" height="15.0" fill="rgb(224,75,43)" rx="2" ry="2" />
<text  x="169.19" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.6" y="789" width="0.2" height="15.0" fill="rgb(222,72,24)" rx="2" ry="2" />
<text  x="1173.65" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (23 samples, 0.38%)</title><rect x="145.1" y="1621" width="4.4" height="15.0" fill="rgb(206,208,51)" rx="2" ry="2" />
<text  x="148.09" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="1093" width="0.2" height="15.0" fill="rgb(226,221,5)" rx="2" ry="2" />
<text  x="1173.07" y="1103.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (3 samples, 0.05%)</title><rect x="589.3" y="1941" width="0.5" height="15.0" fill="rgb(206,5,32)" rx="2" ry="2" />
<text  x="592.26" y="1951.5" ></text>
</g>
<g >
<title>onmt::unicode::get_lower (3 samples, 0.05%)</title><rect x="762.3" y="1893" width="0.6" height="15.0" fill="rgb(239,59,47)" rx="2" ry="2" />
<text  x="765.28" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.0" y="1909" width="0.2" height="15.0" fill="rgb(216,11,3)" rx="2" ry="2" />
<text  x="13.00" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="169.3" y="373" width="0.2" height="15.0" fill="rgb(248,0,38)" rx="2" ry="2" />
<text  x="172.28" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (18 samples, 0.30%)</title><rect x="132.3" y="1701" width="3.5" height="15.0" fill="rgb(248,111,29)" rx="2" ry="2" />
<text  x="135.32" y="1711.5" ></text>
</g>
<g >
<title>Eigen::internal::general_matrix_vector_product&lt;long, float, Eigen::internal::const_blas_data_mapper&lt;float, long, 1&gt;, 1, false, float, Eigen::internal::const_blas_data_mapper&lt;float, long, 0&gt;, false, 0&gt;::run (2 samples, 0.03%)</title><rect x="450.5" y="1941" width="0.4" height="15.0" fill="rgb(224,127,12)" rx="2" ry="2" />
<text  x="453.49" y="1951.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (12 samples, 0.20%)</title><rect x="888.3" y="1973" width="2.3" height="15.0" fill="rgb(244,93,25)" rx="2" ry="2" />
<text  x="891.27" y="1983.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (1 samples, 0.02%)</title><rect x="916.3" y="1957" width="0.2" height="15.0" fill="rgb(207,182,43)" rx="2" ry="2" />
<text  x="919.34" y="1967.5" ></text>
</g>
<g >
<title>fasttext::DenseMatrix::dotRow (3 samples, 0.05%)</title><rect x="942.5" y="2053" width="0.5" height="15.0" fill="rgb(232,12,40)" rx="2" ry="2" />
<text  x="945.47" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="1045" width="0.2" height="15.0" fill="rgb(210,111,34)" rx="2" ry="2" />
<text  x="1173.07" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="693" width="0.2" height="15.0" fill="rgb(235,136,11)" rx="2" ry="2" />
<text  x="1173.07" y="703.5" ></text>
</g>
<g >
<title>copy_page_to_iter (1 samples, 0.02%)</title><rect x="915.4" y="1893" width="0.2" height="15.0" fill="rgb(244,66,37)" rx="2" ry="2" />
<text  x="918.37" y="1903.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (2 samples, 0.03%)</title><rect x="155.5" y="1621" width="0.4" height="15.0" fill="rgb(219,192,14)" rx="2" ry="2" />
<text  x="158.54" y="1631.5" ></text>
</g>
<g >
<title>get_user_pages_fast (1 samples, 0.02%)</title><rect x="102.5" y="1845" width="0.2" height="15.0" fill="rgb(232,90,17)" rx="2" ry="2" />
<text  x="105.51" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.5" y="485" width="0.1" height="15.0" fill="rgb(236,103,20)" rx="2" ry="2" />
<text  x="1173.45" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_repeat (1 samples, 0.02%)</title><rect x="192.5" y="1685" width="0.2" height="15.0" fill="rgb(223,184,16)" rx="2" ry="2" />
<text  x="195.51" y="1695.5" ></text>
</g>
<g >
<title>__schedule (4 samples, 0.07%)</title><rect x="101.7" y="1845" width="0.8" height="15.0" fill="rgb(234,45,21)" rx="2" ry="2" />
<text  x="104.74" y="1855.5" ></text>
</g>
<g >
<title>cfree (1 samples, 0.02%)</title><rect x="585.6" y="1973" width="0.2" height="15.0" fill="rgb(210,38,15)" rx="2" ry="2" />
<text  x="588.58" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.6" y="1717" width="0.2" height="15.0" fill="rgb(242,118,45)" rx="2" ry="2" />
<text  x="1173.65" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.3" y="1845" width="0.2" height="15.0" fill="rgb(252,119,21)" rx="2" ry="2" />
<text  x="1173.26" y="1855.5" ></text>
</g>
<g >
<title>generic_perform_write (1 samples, 0.02%)</title><rect x="894.3" y="1877" width="0.2" height="15.0" fill="rgb(213,211,54)" rx="2" ry="2" />
<text  x="897.27" y="1887.5" ></text>
</g>
<g >
<title>memcpy@plt (2 samples, 0.03%)</title><rect x="629.5" y="1877" width="0.4" height="15.0" fill="rgb(245,133,32)" rx="2" ry="2" />
<text  x="632.51" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="997" width="0.2" height="15.0" fill="rgb(244,98,17)" rx="2" ry="2" />
<text  x="82.87" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (35 samples, 0.57%)</title><rect x="178.6" y="1637" width="6.7" height="15.0" fill="rgb(229,191,41)" rx="2" ry="2" />
<text  x="181.57" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.6" y="133" width="0.2" height="15.0" fill="rgb(218,105,48)" rx="2" ry="2" />
<text  x="1173.65" y="143.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (1 samples, 0.02%)</title><rect x="915.4" y="1925" width="0.2" height="15.0" fill="rgb(224,154,11)" rx="2" ry="2" />
<text  x="918.37" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.6" y="1845" width="0.2" height="15.0" fill="rgb(213,173,7)" rx="2" ry="2" />
<text  x="1173.65" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="949" width="0.2" height="15.0" fill="rgb(221,73,46)" rx="2" ry="2" />
<text  x="1173.07" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.5" y="1541" width="0.1" height="15.0" fill="rgb(210,49,8)" rx="2" ry="2" />
<text  x="1173.45" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.5" y="1829" width="0.1" height="15.0" fill="rgb(226,32,37)" rx="2" ry="2" />
<text  x="1173.45" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="981" width="0.2" height="15.0" fill="rgb(223,170,29)" rx="2" ry="2" />
<text  x="82.87" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.3" y="933" width="0.2" height="15.0" fill="rgb(233,149,23)" rx="2" ry="2" />
<text  x="1173.26" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.3" y="133" width="0.2" height="15.0" fill="rgb(247,151,8)" rx="2" ry="2" />
<text  x="1173.26" y="143.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="1589" width="0.2" height="15.0" fill="rgb(212,175,12)" rx="2" ry="2" />
<text  x="82.87" y="1599.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (1 samples, 0.02%)</title><rect x="894.3" y="1845" width="0.2" height="15.0" fill="rgb(220,74,53)" rx="2" ry="2" />
<text  x="897.27" y="1855.5" ></text>
</g>
<g >
<title>write (1 samples, 0.02%)</title><rect x="894.3" y="2037" width="0.2" height="15.0" fill="rgb(214,85,8)" rx="2" ry="2" />
<text  x="897.27" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.3" y="1349" width="0.2" height="15.0" fill="rgb(242,98,1)" rx="2" ry="2" />
<text  x="1173.26" y="1359.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::~collate (23 samples, 0.38%)</title><rect x="888.3" y="2037" width="4.4" height="15.0" fill="rgb(235,54,35)" rx="2" ry="2" />
<text  x="891.27" y="2047.5" ></text>
</g>
<g >
<title>onmt::unicode::explode_utf8 (1 samples, 0.02%)</title><rect x="760.7" y="1893" width="0.2" height="15.0" fill="rgb(210,4,9)" rx="2" ry="2" />
<text  x="763.73" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.6" y="1557" width="0.2" height="15.0" fill="rgb(240,137,29)" rx="2" ry="2" />
<text  x="1173.65" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="1669" width="0.2" height="15.0" fill="rgb(245,59,47)" rx="2" ry="2" />
<text  x="82.87" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="181" width="0.2" height="15.0" fill="rgb(246,127,9)" rx="2" ry="2" />
<text  x="82.87" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.5" y="1573" width="0.1" height="15.0" fill="rgb(242,196,20)" rx="2" ry="2" />
<text  x="1173.45" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="597" width="0.2" height="15.0" fill="rgb(226,63,10)" rx="2" ry="2" />
<text  x="1173.07" y="607.5" ></text>
</g>
<g >
<title>cfree (1 samples, 0.02%)</title><rect x="864.3" y="1957" width="0.2" height="15.0" fill="rgb(216,36,18)" rx="2" ry="2" />
<text  x="867.28" y="1967.5" ></text>
</g>
<g >
<title>__dynamic_cast (9 samples, 0.15%)</title><rect x="156.3" y="1653" width="1.8" height="15.0" fill="rgb(242,167,11)" rx="2" ry="2" />
<text  x="159.31" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.3" y="1797" width="0.2" height="15.0" fill="rgb(250,133,18)" rx="2" ry="2" />
<text  x="1173.26" y="1807.5" ></text>
</g>
<g >
<title>__handle_mm_fault (36 samples, 0.59%)</title><rect x="435.0" y="1893" width="7.0" height="15.0" fill="rgb(247,199,50)" rx="2" ry="2" />
<text  x="438.01" y="1903.5" ></text>
</g>
<g >
<title>fasttext::Vector::addRow (4 samples, 0.07%)</title><rect x="84.1" y="2021" width="0.8" height="15.0" fill="rgb(218,101,0)" rx="2" ry="2" />
<text  x="87.12" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (27 samples, 0.44%)</title><rect x="139.1" y="1605" width="5.2" height="15.0" fill="rgb(254,45,49)" rx="2" ry="2" />
<text  x="142.09" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.6" y="933" width="0.2" height="15.0" fill="rgb(212,157,30)" rx="2" ry="2" />
<text  x="1173.65" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.0" y="1845" width="0.2" height="15.0" fill="rgb(220,18,10)" rx="2" ry="2" />
<text  x="13.00" y="1855.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::getId (1 samples, 0.02%)</title><rect x="323.7" y="1989" width="0.2" height="15.0" fill="rgb(227,113,52)" rx="2" ry="2" />
<text  x="326.72" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.0" y="901" width="0.2" height="15.0" fill="rgb(211,205,50)" rx="2" ry="2" />
<text  x="13.00" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.5" y="229" width="0.1" height="15.0" fill="rgb(243,201,35)" rx="2" ry="2" />
<text  x="1173.45" y="239.5" ></text>
</g>
<g >
<title>malloc (3 samples, 0.05%)</title><rect x="195.2" y="1669" width="0.6" height="15.0" fill="rgb(239,89,37)" rx="2" ry="2" />
<text  x="198.22" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.07%)</title><rect x="209.9" y="1861" width="0.8" height="15.0" fill="rgb(226,198,47)" rx="2" ry="2" />
<text  x="212.92" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="645" width="0.2" height="15.0" fill="rgb(223,19,45)" rx="2" ry="2" />
<text  x="82.87" y="655.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="469" width="0.2" height="15.0" fill="rgb(224,172,45)" rx="2" ry="2" />
<text  x="82.87" y="479.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (4 samples, 0.07%)</title><rect x="122.3" y="1637" width="0.7" height="15.0" fill="rgb(208,65,47)" rx="2" ry="2" />
<text  x="125.25" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="210.5" y="1429" width="0.2" height="15.0" fill="rgb(253,210,18)" rx="2" ry="2" />
<text  x="213.51" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.0" y="357" width="0.2" height="15.0" fill="rgb(238,174,13)" rx="2" ry="2" />
<text  x="13.00" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (2 samples, 0.03%)</title><rect x="137.3" y="1829" width="0.4" height="15.0" fill="rgb(212,211,30)" rx="2" ry="2" />
<text  x="140.35" y="1839.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (2 samples, 0.03%)</title><rect x="746.6" y="1781" width="0.4" height="15.0" fill="rgb(212,193,5)" rx="2" ry="2" />
<text  x="749.60" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="169.3" y="1429" width="0.2" height="15.0" fill="rgb(212,140,6)" rx="2" ry="2" />
<text  x="172.28" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.6" y="1157" width="0.2" height="15.0" fill="rgb(249,14,27)" rx="2" ry="2" />
<text  x="1173.65" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.6" y="1509" width="0.2" height="15.0" fill="rgb(209,24,31)" rx="2" ry="2" />
<text  x="1173.65" y="1519.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="213" width="0.2" height="15.0" fill="rgb(230,53,38)" rx="2" ry="2" />
<text  x="82.87" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.0" y="1957" width="0.2" height="15.0" fill="rgb(220,210,13)" rx="2" ry="2" />
<text  x="13.00" y="1967.5" ></text>
</g>
<g >
<title>finish_task_switch (4 samples, 0.07%)</title><rect x="101.7" y="1829" width="0.8" height="15.0" fill="rgb(236,110,39)" rx="2" ry="2" />
<text  x="104.74" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="885" width="0.2" height="15.0" fill="rgb(227,55,28)" rx="2" ry="2" />
<text  x="1173.07" y="895.5" ></text>
</g>
<g >
<title>release_pages (1 samples, 0.02%)</title><rect x="582.1" y="1797" width="0.2" height="15.0" fill="rgb(217,4,32)" rx="2" ry="2" />
<text  x="585.10" y="1807.5" ></text>
</g>
<g >
<title>__dynamic_cast (8 samples, 0.13%)</title><rect x="193.5" y="1669" width="1.5" height="15.0" fill="rgb(221,177,11)" rx="2" ry="2" />
<text  x="196.47" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (34 samples, 0.56%)</title><rect x="155.9" y="1717" width="6.6" height="15.0" fill="rgb(215,11,18)" rx="2" ry="2" />
<text  x="158.93" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (41 samples, 0.67%)</title><rect x="200.4" y="1765" width="8.0" height="15.0" fill="rgb(234,106,38)" rx="2" ry="2" />
<text  x="203.44" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="1861" width="0.2" height="15.0" fill="rgb(220,171,17)" rx="2" ry="2" />
<text  x="82.87" y="1871.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (1 samples, 0.02%)</title><rect x="915.4" y="1877" width="0.2" height="15.0" fill="rgb(216,159,20)" rx="2" ry="2" />
<text  x="918.37" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.0" y="1893" width="0.2" height="15.0" fill="rgb(238,195,50)" rx="2" ry="2" />
<text  x="13.00" y="1903.5" ></text>
</g>
<g >
<title>tlb_flush_mmu_free (1 samples, 0.02%)</title><rect x="581.7" y="1829" width="0.2" height="15.0" fill="rgb(231,92,33)" rx="2" ry="2" />
<text  x="584.71" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="133" width="0.2" height="15.0" fill="rgb(250,92,36)" rx="2" ry="2" />
<text  x="1173.07" y="143.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (36 samples, 0.59%)</title><rect x="185.7" y="1765" width="7.0" height="15.0" fill="rgb(208,77,34)" rx="2" ry="2" />
<text  x="188.73" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.5" y="53" width="0.1" height="15.0" fill="rgb(238,178,11)" rx="2" ry="2" />
<text  x="1173.45" y="63.5" ></text>
</g>
<g >
<title>do_page_fault (16 samples, 0.26%)</title><rect x="37.1" y="2021" width="3.1" height="15.0" fill="rgb(208,50,2)" rx="2" ry="2" />
<text  x="40.10" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="168.9" y="1925" width="0.6" height="15.0" fill="rgb(248,28,37)" rx="2" ry="2" />
<text  x="171.89" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="169.3" y="1397" width="0.2" height="15.0" fill="rgb(227,225,2)" rx="2" ry="2" />
<text  x="172.28" y="1407.5" ></text>
</g>
<g >
<title>release_pages (2 samples, 0.03%)</title><rect x="454.2" y="1781" width="0.4" height="15.0" fill="rgb(244,181,25)" rx="2" ry="2" />
<text  x="457.17" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (1 samples, 0.02%)</title><rect x="168.7" y="1861" width="0.2" height="15.0" fill="rgb(226,44,12)" rx="2" ry="2" />
<text  x="171.70" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.6" y="261" width="0.2" height="15.0" fill="rgb(234,179,35)" rx="2" ry="2" />
<text  x="1173.65" y="271.5" ></text>
</g>
<g >
<title>futex_wake (11 samples, 0.18%)</title><rect x="41.7" y="1941" width="2.2" height="15.0" fill="rgb(220,178,44)" rx="2" ry="2" />
<text  x="44.74" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="1877" width="0.2" height="15.0" fill="rgb(205,228,44)" rx="2" ry="2" />
<text  x="1173.07" y="1887.5" ></text>
</g>
<g >
<title>arch_tlb_finish_mmu (1 samples, 0.02%)</title><rect x="916.3" y="1941" width="0.2" height="15.0" fill="rgb(207,86,13)" rx="2" ry="2" />
<text  x="919.34" y="1951.5" ></text>
</g>
<g >
<title>operator new@plt (2 samples, 0.03%)</title><rect x="112.4" y="1621" width="0.4" height="15.0" fill="rgb(251,197,37)" rx="2" ry="2" />
<text  x="115.38" y="1631.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.03%)</title><rect x="197.0" y="1653" width="0.3" height="15.0" fill="rgb(207,18,27)" rx="2" ry="2" />
<text  x="199.96" y="1663.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (2 samples, 0.03%)</title><rect x="190.2" y="1621" width="0.4" height="15.0" fill="rgb(248,189,42)" rx="2" ry="2" />
<text  x="193.18" y="1631.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (1 samples, 0.02%)</title><rect x="1133.3" y="2053" width="0.2" height="15.0" fill="rgb(208,152,37)" rx="2" ry="2" />
<text  x="1136.29" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="169.3" y="709" width="0.2" height="15.0" fill="rgb(246,124,12)" rx="2" ry="2" />
<text  x="172.28" y="719.5" ></text>
</g>
<g >
<title>release_pages (1 samples, 0.02%)</title><rect x="583.1" y="1813" width="0.2" height="15.0" fill="rgb(210,219,36)" rx="2" ry="2" />
<text  x="586.07" y="1823.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (1 samples, 0.02%)</title><rect x="40.0" y="1941" width="0.2" height="15.0" fill="rgb(240,123,0)" rx="2" ry="2" />
<text  x="43.00" y="1951.5" ></text>
</g>
<g >
<title>__do_page_fault (2 samples, 0.03%)</title><rect x="746.6" y="1845" width="0.4" height="15.0" fill="rgb(211,84,29)" rx="2" ry="2" />
<text  x="749.60" y="1855.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (2 samples, 0.03%)</title><rect x="205.5" y="1685" width="0.4" height="15.0" fill="rgb(209,160,51)" rx="2" ry="2" />
<text  x="208.47" y="1695.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="206.2" y="1685" width="0.2" height="15.0" fill="rgb(227,209,23)" rx="2" ry="2" />
<text  x="209.25" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="165" width="0.2" height="15.0" fill="rgb(205,48,35)" rx="2" ry="2" />
<text  x="82.87" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="210.5" y="1461" width="0.2" height="15.0" fill="rgb(206,95,46)" rx="2" ry="2" />
<text  x="213.51" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="169.1" y="1269" width="0.2" height="15.0" fill="rgb(241,96,23)" rx="2" ry="2" />
<text  x="172.09" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="1269" width="0.2" height="15.0" fill="rgb(227,131,13)" rx="2" ry="2" />
<text  x="1173.07" y="1279.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="710.2" y="1845" width="0.2" height="15.0" fill="rgb(212,181,29)" rx="2" ry="2" />
<text  x="713.22" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.6" y="1525" width="0.2" height="15.0" fill="rgb(231,226,21)" rx="2" ry="2" />
<text  x="1173.65" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="169.3" y="1173" width="0.2" height="15.0" fill="rgb(213,62,9)" rx="2" ry="2" />
<text  x="172.28" y="1183.5" ></text>
</g>
<g >
<title>fasttext::ProductQuantizer::addcode (33 samples, 0.54%)</title><rect x="868.9" y="2037" width="6.4" height="15.0" fill="rgb(246,150,38)" rx="2" ry="2" />
<text  x="871.92" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (26 samples, 0.43%)</title><rect x="144.5" y="1637" width="5.0" height="15.0" fill="rgb(218,25,8)" rx="2" ry="2" />
<text  x="147.51" y="1647.5" ></text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (2 samples, 0.03%)</title><rect x="868.5" y="1941" width="0.4" height="15.0" fill="rgb(213,63,2)" rx="2" ry="2" />
<text  x="871.53" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (32 samples, 0.52%)</title><rect x="111.0" y="1701" width="6.2" height="15.0" fill="rgb(247,98,29)" rx="2" ry="2" />
<text  x="114.03" y="1711.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (1 samples, 0.02%)</title><rect x="175.5" y="1573" width="0.2" height="15.0" fill="rgb(217,139,39)" rx="2" ry="2" />
<text  x="178.47" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="1765" width="0.2" height="15.0" fill="rgb(239,15,12)" rx="2" ry="2" />
<text  x="1173.07" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.0" y="741" width="0.2" height="15.0" fill="rgb(220,200,29)" rx="2" ry="2" />
<text  x="13.00" y="751.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt;@plt (1 samples, 0.02%)</title><rect x="136.8" y="1701" width="0.2" height="15.0" fill="rgb(215,204,42)" rx="2" ry="2" />
<text  x="139.77" y="1711.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.03%)</title><rect x="82.4" y="2021" width="0.4" height="15.0" fill="rgb(205,70,4)" rx="2" ry="2" />
<text  x="85.38" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.5" y="1557" width="0.1" height="15.0" fill="rgb(209,118,50)" rx="2" ry="2" />
<text  x="1173.45" y="1567.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 0.02%)</title><rect x="915.4" y="2053" width="0.2" height="15.0" fill="rgb(249,24,47)" rx="2" ry="2" />
<text  x="918.37" y="2063.5" ></text>
</g>
<g >
<title>vfs_read (6 samples, 0.10%)</title><rect x="85.1" y="1957" width="1.2" height="15.0" fill="rgb(235,45,43)" rx="2" ry="2" />
<text  x="88.09" y="1967.5" ></text>
</g>
<g >
<title>onmt::is_alphabet (22 samples, 0.36%)</title><rect x="756.1" y="1893" width="4.2" height="15.0" fill="rgb(248,176,46)" rx="2" ry="2" />
<text  x="759.09" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (34 samples, 0.56%)</title><rect x="155.9" y="1701" width="6.6" height="15.0" fill="rgb(213,24,26)" rx="2" ry="2" />
<text  x="158.93" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="169.3" y="1349" width="0.2" height="15.0" fill="rgb(209,135,25)" rx="2" ry="2" />
<text  x="172.28" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (26 samples, 0.43%)</title><rect x="144.5" y="1685" width="5.0" height="15.0" fill="rgb(219,208,27)" rx="2" ry="2" />
<text  x="147.51" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (1 samples, 0.02%)</title><rect x="172.0" y="1701" width="0.2" height="15.0" fill="rgb(232,61,22)" rx="2" ry="2" />
<text  x="174.99" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.5" y="197" width="0.1" height="15.0" fill="rgb(215,39,42)" rx="2" ry="2" />
<text  x="1173.45" y="207.5" ></text>
</g>
<g >
<title>wake_up_q (7 samples, 0.11%)</title><rect x="42.5" y="1925" width="1.4" height="15.0" fill="rgb(240,125,24)" rx="2" ry="2" />
<text  x="45.51" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (30 samples, 0.49%)</title><rect x="162.5" y="1749" width="5.8" height="15.0" fill="rgb(234,198,35)" rx="2" ry="2" />
<text  x="165.51" y="1759.5" ></text>
</g>
<g >
<title>TFastTextEmbedder::GetSentenceEmbedding (51 samples, 0.84%)</title><rect x="210.9" y="1989" width="9.9" height="15.0" fill="rgb(214,3,37)" rx="2" ry="2" />
<text  x="213.89" y="1999.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::getSubwords (4 samples, 0.07%)</title><rect x="323.9" y="1989" width="0.8" height="15.0" fill="rgb(244,110,2)" rx="2" ry="2" />
<text  x="326.92" y="1999.5" ></text>
</g>
<g >
<title>TFastTextEmbedder::GetSentenceEmbedding (46 samples, 0.75%)</title><rect x="442.2" y="1973" width="8.9" height="15.0" fill="rgb(247,189,18)" rx="2" ry="2" />
<text  x="445.17" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="229" width="0.2" height="15.0" fill="rgb(250,137,30)" rx="2" ry="2" />
<text  x="82.87" y="239.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (2 samples, 0.03%)</title><rect x="39.8" y="1957" width="0.4" height="15.0" fill="rgb(237,139,24)" rx="2" ry="2" />
<text  x="42.80" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.3" y="1493" width="0.2" height="15.0" fill="rgb(242,150,21)" rx="2" ry="2" />
<text  x="141.32" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.6" y="725" width="0.2" height="15.0" fill="rgb(236,175,37)" rx="2" ry="2" />
<text  x="1173.65" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (30 samples, 0.49%)</title><rect x="123.6" y="1701" width="5.8" height="15.0" fill="rgb(227,99,12)" rx="2" ry="2" />
<text  x="126.61" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (26 samples, 0.43%)</title><rect x="144.5" y="1701" width="5.0" height="15.0" fill="rgb(228,177,11)" rx="2" ry="2" />
<text  x="147.51" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="293" width="0.2" height="15.0" fill="rgb(227,75,4)" rx="2" ry="2" />
<text  x="1173.07" y="303.5" ></text>
</g>
<g >
<title>GetHost (1 samples, 0.02%)</title><rect x="10.0" y="2021" width="0.2" height="15.0" fill="rgb(236,124,31)" rx="2" ry="2" />
<text  x="13.00" y="2031.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (5 samples, 0.08%)</title><rect x="38.8" y="1941" width="1.0" height="15.0" fill="rgb(239,111,52)" rx="2" ry="2" />
<text  x="41.84" y="1951.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (1 samples, 0.02%)</title><rect x="183.2" y="1605" width="0.2" height="15.0" fill="rgb(233,120,53)" rx="2" ry="2" />
<text  x="186.22" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.6" y="213" width="0.2" height="15.0" fill="rgb(253,227,41)" rx="2" ry="2" />
<text  x="1173.65" y="223.5" ></text>
</g>
<g >
<title>do_page_fault (4 samples, 0.07%)</title><rect x="868.1" y="2005" width="0.8" height="15.0" fill="rgb(235,128,3)" rx="2" ry="2" />
<text  x="871.15" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="1541" width="0.2" height="15.0" fill="rgb(242,175,15)" rx="2" ry="2" />
<text  x="82.87" y="1551.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="117.2" y="1701" width="0.2" height="15.0" fill="rgb(247,124,12)" rx="2" ry="2" />
<text  x="120.22" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.3" y="2021" width="0.2" height="15.0" fill="rgb(215,205,15)" rx="2" ry="2" />
<text  x="1173.26" y="2031.5" ></text>
</g>
<g >
<title>TDocument::TDocument (1 samples, 0.02%)</title><rect x="587.1" y="2005" width="0.2" height="15.0" fill="rgb(247,163,15)" rx="2" ry="2" />
<text  x="590.13" y="2015.5" ></text>
</g>
<g >
<title>ComputeClusterWeight (1 samples, 0.02%)</title><rect x="10.0" y="2053" width="0.2" height="15.0" fill="rgb(232,200,7)" rx="2" ry="2" />
<text  x="13.00" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.6" y="917" width="0.2" height="15.0" fill="rgb(241,200,19)" rx="2" ry="2" />
<text  x="1173.65" y="927.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="323.5" y="1957" width="0.2" height="15.0" fill="rgb(207,184,30)" rx="2" ry="2" />
<text  x="326.53" y="1967.5" ></text>
</g>
<g >
<title>unmap_vmas (2 samples, 0.03%)</title><rect x="454.2" y="1861" width="0.4" height="15.0" fill="rgb(211,219,15)" rx="2" ry="2" />
<text  x="457.17" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (12 samples, 0.20%)</title><rect x="888.3" y="1989" width="2.3" height="15.0" fill="rgb(245,15,36)" rx="2" ry="2" />
<text  x="891.27" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (3 samples, 0.05%)</title><rect x="137.3" y="1877" width="0.6" height="15.0" fill="rgb(219,224,4)" rx="2" ry="2" />
<text  x="140.35" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="1941" width="0.2" height="15.0" fill="rgb(240,151,10)" rx="2" ry="2" />
<text  x="1173.07" y="1951.5" ></text>
</g>
<g >
<title>std::istream::sentry::sentry (2 samples, 0.03%)</title><rect x="342.5" y="1989" width="0.4" height="15.0" fill="rgb(232,206,6)" rx="2" ry="2" />
<text  x="345.50" y="1999.5" ></text>
</g>
<g >
<title>ComputeClusterWeight (346 samples, 5.67%)</title><rect x="102.7" y="1989" width="67.0" height="15.0" fill="rgb(251,74,2)" rx="2" ry="2" />
<text  x="105.70" y="1999.5" >Compute..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (28 samples, 0.46%)</title><rect x="139.1" y="1717" width="5.4" height="15.0" fill="rgb(237,111,2)" rx="2" ry="2" />
<text  x="142.09" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.5" y="1285" width="0.1" height="15.0" fill="rgb(230,229,20)" rx="2" ry="2" />
<text  x="1173.45" y="1295.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (1 samples, 0.02%)</title><rect x="169.5" y="1973" width="0.2" height="15.0" fill="rgb(246,51,14)" rx="2" ry="2" />
<text  x="172.48" y="1983.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="342.1" y="1989" width="0.2" height="15.0" fill="rgb(254,79,5)" rx="2" ry="2" />
<text  x="345.11" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.5" y="1237" width="0.1" height="15.0" fill="rgb(213,124,26)" rx="2" ry="2" />
<text  x="1173.45" y="1247.5" ></text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.05%)</title><rect x="162.5" y="1685" width="0.6" height="15.0" fill="rgb(252,179,8)" rx="2" ry="2" />
<text  x="165.51" y="1695.5" ></text>
</g>
<g >
<title>cfree (1 samples, 0.02%)</title><rect x="131.3" y="1701" width="0.2" height="15.0" fill="rgb(211,93,11)" rx="2" ry="2" />
<text  x="134.35" y="1711.5" ></text>
</g>
<g >
<title>free_unref_page_list (1 samples, 0.02%)</title><rect x="454.4" y="1765" width="0.2" height="15.0" fill="rgb(214,19,29)" rx="2" ry="2" />
<text  x="457.36" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="1509" width="0.2" height="15.0" fill="rgb(250,90,54)" rx="2" ry="2" />
<text  x="82.87" y="1519.5" ></text>
</g>
<g >
<title>alloc_pages_vma (2 samples, 0.03%)</title><rect x="79.1" y="1941" width="0.4" height="15.0" fill="rgb(241,15,40)" rx="2" ry="2" />
<text  x="82.09" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="661" width="0.2" height="15.0" fill="rgb(241,77,34)" rx="2" ry="2" />
<text  x="1173.07" y="671.5" ></text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::scan (2 samples, 0.03%)</title><rect x="89.2" y="1941" width="0.3" height="15.0" fill="rgb(213,43,47)" rx="2" ry="2" />
<text  x="92.16" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.3" y="709" width="0.2" height="15.0" fill="rgb(214,50,27)" rx="2" ry="2" />
<text  x="1173.26" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.6" y="1637" width="0.2" height="15.0" fill="rgb(210,91,38)" rx="2" ry="2" />
<text  x="1173.65" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.5" y="1525" width="0.1" height="15.0" fill="rgb(238,146,52)" rx="2" ry="2" />
<text  x="1173.45" y="1535.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (69 samples, 1.13%)</title><rect x="598.0" y="1893" width="13.3" height="15.0" fill="rgb(246,89,34)" rx="2" ry="2" />
<text  x="600.97" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (13 samples, 0.21%)</title><rect x="79.9" y="2021" width="2.5" height="15.0" fill="rgb(210,148,44)" rx="2" ry="2" />
<text  x="82.87" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.0" y="245" width="0.2" height="15.0" fill="rgb(232,2,5)" rx="2" ry="2" />
<text  x="13.00" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (33 samples, 0.54%)</title><rect x="149.5" y="1701" width="6.4" height="15.0" fill="rgb(251,46,13)" rx="2" ry="2" />
<text  x="152.54" y="1711.5" ></text>
</g>
<g >
<title>onmt::CaseModifier::extract_case_type (2 samples, 0.03%)</title><rect x="592.4" y="1909" width="0.3" height="15.0" fill="rgb(230,221,43)" rx="2" ry="2" />
<text  x="595.36" y="1919.5" ></text>
</g>
<g >
<title>down_read_trylock (1 samples, 0.02%)</title><rect x="429.2" y="1893" width="0.2" height="15.0" fill="rgb(252,153,13)" rx="2" ry="2" />
<text  x="432.20" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="210.3" y="1701" width="0.4" height="15.0" fill="rgb(227,4,51)" rx="2" ry="2" />
<text  x="213.31" y="1711.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (2 samples, 0.03%)</title><rect x="878.4" y="2005" width="0.4" height="15.0" fill="rgb(248,45,34)" rx="2" ry="2" />
<text  x="881.40" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.3" y="437" width="0.2" height="15.0" fill="rgb(252,35,49)" rx="2" ry="2" />
<text  x="1173.26" y="447.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="671.1" y="1813" width="0.2" height="15.0" fill="rgb(253,215,28)" rx="2" ry="2" />
<text  x="674.13" y="1823.5" ></text>
</g>
<g >
<title>malloc (2 samples, 0.03%)</title><rect x="638.6" y="1861" width="0.4" height="15.0" fill="rgb(206,128,28)" rx="2" ry="2" />
<text  x="641.61" y="1871.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.02%)</title><rect x="222.9" y="1989" width="0.2" height="15.0" fill="rgb(220,120,44)" rx="2" ry="2" />
<text  x="225.89" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (30 samples, 0.49%)</title><rect x="123.6" y="1749" width="5.8" height="15.0" fill="rgb(214,130,10)" rx="2" ry="2" />
<text  x="126.61" y="1759.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (2 samples, 0.03%)</title><rect x="190.6" y="1621" width="0.4" height="15.0" fill="rgb(233,130,43)" rx="2" ry="2" />
<text  x="193.57" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.3" y="453" width="0.2" height="15.0" fill="rgb(241,163,52)" rx="2" ry="2" />
<text  x="1173.26" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.3" y="1269" width="0.2" height="15.0" fill="rgb(218,176,9)" rx="2" ry="2" />
<text  x="141.32" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="168.9" y="1381" width="0.2" height="15.0" fill="rgb(222,170,46)" rx="2" ry="2" />
<text  x="171.89" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="210.3" y="1653" width="0.4" height="15.0" fill="rgb(235,153,36)" rx="2" ry="2" />
<text  x="213.31" y="1663.5" ></text>
</g>
<g >
<title>get_page_from_freelist (4 samples, 0.07%)</title><rect x="432.7" y="1829" width="0.8" height="15.0" fill="rgb(246,212,2)" rx="2" ry="2" />
<text  x="435.69" y="1839.5" ></text>
</g>
<g >
<title>onmt::Tokenizer::finalize_tokens (21 samples, 0.34%)</title><rect x="592.7" y="1909" width="4.1" height="15.0" fill="rgb(210,204,6)" rx="2" ry="2" />
<text  x="595.74" y="1919.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.03%)</title><rect x="189.8" y="1621" width="0.4" height="15.0" fill="rgb(219,211,48)" rx="2" ry="2" />
<text  x="192.80" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (15 samples, 0.25%)</title><rect x="146.4" y="1605" width="2.9" height="15.0" fill="rgb(239,163,51)" rx="2" ry="2" />
<text  x="149.44" y="1615.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="191.5" y="1621" width="0.2" height="15.0" fill="rgb(231,51,33)" rx="2" ry="2" />
<text  x="194.54" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.6" y="533" width="0.2" height="15.0" fill="rgb(230,206,18)" rx="2" ry="2" />
<text  x="1173.65" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.5" y="1045" width="0.1" height="15.0" fill="rgb(243,14,9)" rx="2" ry="2" />
<text  x="1173.45" y="1055.5" ></text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::next_byte_in_range (2 samples, 0.03%)</title><rect x="88.8" y="1941" width="0.4" height="15.0" fill="rgb(234,136,35)" rx="2" ry="2" />
<text  x="91.77" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="168.9" y="1541" width="0.2" height="15.0" fill="rgb(238,180,26)" rx="2" ry="2" />
<text  x="171.89" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.0" y="1157" width="0.2" height="15.0" fill="rgb(244,134,53)" rx="2" ry="2" />
<text  x="13.00" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.0" y="1861" width="0.2" height="15.0" fill="rgb(248,122,0)" rx="2" ry="2" />
<text  x="13.00" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="169.3" y="693" width="0.2" height="15.0" fill="rgb(235,165,16)" rx="2" ry="2" />
<text  x="172.28" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="168.9" y="1525" width="0.2" height="15.0" fill="rgb(250,79,11)" rx="2" ry="2" />
<text  x="171.89" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="169.3" y="837" width="0.2" height="15.0" fill="rgb(223,229,2)" rx="2" ry="2" />
<text  x="172.28" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Scanner&lt;char&gt;::_M_scan_normal (1 samples, 0.02%)</title><rect x="123.2" y="1685" width="0.2" height="15.0" fill="rgb(221,186,29)" rx="2" ry="2" />
<text  x="126.22" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (1 samples, 0.02%)</title><rect x="168.7" y="1813" width="0.2" height="15.0" fill="rgb(246,104,34)" rx="2" ry="2" />
<text  x="171.70" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.6" y="1013" width="0.2" height="15.0" fill="rgb(254,81,17)" rx="2" ry="2" />
<text  x="1173.65" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (1 samples, 0.02%)</title><rect x="172.0" y="1685" width="0.2" height="15.0" fill="rgb(243,214,15)" rx="2" ry="2" />
<text  x="174.99" y="1695.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::future&lt;std::result_of&lt;Annotate (1 samples, 0.02%)</title><rect x="41.5" y="2021" width="0.2" height="15.0" fill="rgb(234,147,51)" rx="2" ry="2" />
<text  x="44.55" y="2031.5" ></text>
</g>
<g >
<title>cfree (2 samples, 0.03%)</title><rect x="150.9" y="1621" width="0.4" height="15.0" fill="rgb(210,225,12)" rx="2" ry="2" />
<text  x="153.90" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.5" y="357" width="0.1" height="15.0" fill="rgb(228,187,51)" rx="2" ry="2" />
<text  x="1173.45" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="1701" width="0.2" height="15.0" fill="rgb(247,60,41)" rx="2" ry="2" />
<text  x="1173.07" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="261" width="0.2" height="15.0" fill="rgb(212,68,6)" rx="2" ry="2" />
<text  x="1173.07" y="271.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="583.1" y="1973" width="0.2" height="15.0" fill="rgb(224,132,10)" rx="2" ry="2" />
<text  x="586.07" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.0" y="1365" width="0.2" height="15.0" fill="rgb(244,135,46)" rx="2" ry="2" />
<text  x="13.00" y="1375.5" ></text>
</g>
<g >
<title>__do_munmap (1 samples, 0.02%)</title><rect x="583.1" y="1925" width="0.2" height="15.0" fill="rgb(219,51,26)" rx="2" ry="2" />
<text  x="586.07" y="1935.5" ></text>
</g>
<g >
<title>onmt::is_alphabet@plt (2 samples, 0.03%)</title><rect x="760.3" y="1893" width="0.4" height="15.0" fill="rgb(215,209,5)" rx="2" ry="2" />
<text  x="763.35" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.0" y="773" width="0.2" height="15.0" fill="rgb(213,157,36)" rx="2" ry="2" />
<text  x="13.00" y="783.5" ></text>
</g>
<g >
<title>onmt::CaseModifier::extract_case_type (122 samples, 2.00%)</title><rect x="616.9" y="1893" width="23.6" height="15.0" fill="rgb(239,20,45)" rx="2" ry="2" />
<text  x="619.93" y="1903.5" >o..</text>
</g>
<g >
<title>__lru_cache_add (2 samples, 0.03%)</title><rect x="868.5" y="1925" width="0.4" height="15.0" fill="rgb(240,183,49)" rx="2" ry="2" />
<text  x="871.53" y="1935.5" ></text>
</g>
<g >
<title>__dynamic_cast (11 samples, 0.18%)</title><rect x="200.6" y="1701" width="2.2" height="15.0" fill="rgb(244,33,50)" rx="2" ry="2" />
<text  x="203.63" y="1711.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (1 samples, 0.02%)</title><rect x="160.6" y="1637" width="0.2" height="15.0" fill="rgb(253,121,42)" rx="2" ry="2" />
<text  x="163.57" y="1647.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (1 samples, 0.02%)</title><rect x="153.8" y="1605" width="0.2" height="15.0" fill="rgb(219,106,16)" rx="2" ry="2" />
<text  x="156.80" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.3" y="85" width="0.2" height="15.0" fill="rgb(248,218,2)" rx="2" ry="2" />
<text  x="1173.26" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.6" y="1461" width="0.2" height="15.0" fill="rgb(220,226,29)" rx="2" ry="2" />
<text  x="1173.65" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.6" y="1813" width="0.2" height="15.0" fill="rgb(226,110,53)" rx="2" ry="2" />
<text  x="1173.65" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="210.5" y="1333" width="0.2" height="15.0" fill="rgb(233,199,34)" rx="2" ry="2" />
<text  x="213.51" y="1343.5" ></text>
</g>
<g >
<title>fasttext::NegativeSamplingLoss::NegativeSamplingLoss (6 samples, 0.10%)</title><rect x="867.8" y="2037" width="1.1" height="15.0" fill="rgb(217,54,43)" rx="2" ry="2" />
<text  x="870.76" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (26 samples, 0.43%)</title><rect x="139.3" y="1589" width="5.0" height="15.0" fill="rgb(237,207,44)" rx="2" ry="2" />
<text  x="142.28" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.0" y="1749" width="0.2" height="15.0" fill="rgb(232,104,12)" rx="2" ry="2" />
<text  x="13.00" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.5" y="1493" width="0.1" height="15.0" fill="rgb(252,5,16)" rx="2" ry="2" />
<text  x="1173.45" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (33 samples, 0.54%)</title><rect x="110.8" y="1733" width="6.4" height="15.0" fill="rgb(238,1,45)" rx="2" ry="2" />
<text  x="113.83" y="1743.5" ></text>
</g>
<g >
<title>handle_mm_fault (10 samples, 0.16%)</title><rect x="38.3" y="1989" width="1.9" height="15.0" fill="rgb(221,167,16)" rx="2" ry="2" />
<text  x="41.26" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="169.3" y="325" width="0.2" height="15.0" fill="rgb(220,121,29)" rx="2" ry="2" />
<text  x="172.28" y="335.5" ></text>
</g>
<g >
<title>__vfs_read (1 samples, 0.02%)</title><rect x="915.4" y="1957" width="0.2" height="15.0" fill="rgb(226,0,31)" rx="2" ry="2" />
<text  x="918.37" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.5" y="405" width="0.1" height="15.0" fill="rgb(228,226,26)" rx="2" ry="2" />
<text  x="1173.45" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (33 samples, 0.54%)</title><rect x="149.5" y="1653" width="6.4" height="15.0" fill="rgb(244,134,17)" rx="2" ry="2" />
<text  x="152.54" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="1013" width="0.2" height="15.0" fill="rgb(244,187,13)" rx="2" ry="2" />
<text  x="1173.07" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.3" y="565" width="0.2" height="15.0" fill="rgb(227,134,0)" rx="2" ry="2" />
<text  x="1173.26" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (33 samples, 0.54%)</title><rect x="149.5" y="1637" width="6.4" height="15.0" fill="rgb(226,80,32)" rx="2" ry="2" />
<text  x="152.54" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.3" y="2037" width="0.2" height="15.0" fill="rgb(213,156,1)" rx="2" ry="2" />
<text  x="1173.26" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="169.3" y="981" width="0.2" height="15.0" fill="rgb(229,58,0)" rx="2" ry="2" />
<text  x="172.28" y="991.5" ></text>
</g>
<g >
<title>__dynamic_cast@plt (1 samples, 0.02%)</title><rect x="158.1" y="1653" width="0.1" height="15.0" fill="rgb(211,171,26)" rx="2" ry="2" />
<text  x="161.06" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="1893" width="0.2" height="15.0" fill="rgb(230,170,50)" rx="2" ry="2" />
<text  x="82.87" y="1903.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (11 samples, 0.18%)</title><rect x="1137.4" y="2053" width="2.1" height="15.0" fill="rgb(214,65,24)" rx="2" ry="2" />
<text  x="1140.36" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.5" y="1909" width="0.1" height="15.0" fill="rgb(232,139,28)" rx="2" ry="2" />
<text  x="1173.45" y="1919.5" ></text>
</g>
<g >
<title>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::dump_escaped (2 samples, 0.03%)</title><rect x="584.2" y="1909" width="0.4" height="15.0" fill="rgb(205,208,47)" rx="2" ry="2" />
<text  x="587.23" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="169.1" y="1333" width="0.2" height="15.0" fill="rgb(234,25,21)" rx="2" ry="2" />
<text  x="172.09" y="1343.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="454.2" y="1765" width="0.2" height="15.0" fill="rgb(248,205,35)" rx="2" ry="2" />
<text  x="457.17" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="917" width="0.2" height="15.0" fill="rgb(211,71,8)" rx="2" ry="2" />
<text  x="1173.07" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.6" y="421" width="0.2" height="15.0" fill="rgb(253,136,35)" rx="2" ry="2" />
<text  x="1173.65" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.3" y="485" width="0.2" height="15.0" fill="rgb(213,52,45)" rx="2" ry="2" />
<text  x="1173.26" y="495.5" ></text>
</g>
<g >
<title>__do_page_fault (32 samples, 0.52%)</title><rect x="428.0" y="1909" width="6.2" height="15.0" fill="rgb(243,224,42)" rx="2" ry="2" />
<text  x="431.04" y="1919.5" ></text>
</g>
<g >
<title>__dynamic_cast (6 samples, 0.10%)</title><rect x="179.0" y="1621" width="1.1" height="15.0" fill="rgb(249,67,42)" rx="2" ry="2" />
<text  x="181.96" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (154 samples, 2.53%)</title><rect x="139.1" y="1893" width="29.8" height="15.0" fill="rgb(216,101,22)" rx="2" ry="2" />
<text  x="142.09" y="1903.5" >st..</text>
</g>
<g >
<title>std::__find_if&lt;std::pair&lt;ENewsCategory, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; const*, __gnu_cxx::__ops::_Iter_pred&lt;void from_json&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; (1 samples, 0.02%)</title><rect x="588.3" y="1941" width="0.2" height="15.0" fill="rgb(224,110,12)" rx="2" ry="2" />
<text  x="591.29" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="169.3" y="517" width="0.2" height="15.0" fill="rgb(210,21,7)" rx="2" ry="2" />
<text  x="172.28" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (11 samples, 0.18%)</title><rect x="174.9" y="1589" width="2.1" height="15.0" fill="rgb(246,170,37)" rx="2" ry="2" />
<text  x="177.89" y="1599.5" ></text>
</g>
<g >
<title>syscall (14 samples, 0.23%)</title><rect x="41.7" y="2021" width="2.7" height="15.0" fill="rgb(249,5,36)" rx="2" ry="2" />
<text  x="44.74" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="169.3" y="1013" width="0.2" height="15.0" fill="rgb(246,4,26)" rx="2" ry="2" />
<text  x="172.28" y="1023.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="1957" width="0.2" height="15.0" fill="rgb(216,228,21)" rx="2" ry="2" />
<text  x="82.87" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (17 samples, 0.28%)</title><rect x="181.1" y="1621" width="3.3" height="15.0" fill="rgb(208,215,6)" rx="2" ry="2" />
<text  x="184.09" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="517" width="0.2" height="15.0" fill="rgb(205,229,31)" rx="2" ry="2" />
<text  x="82.87" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="169.3" y="1285" width="0.2" height="15.0" fill="rgb(222,107,52)" rx="2" ry="2" />
<text  x="172.28" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.0" y="1717" width="0.2" height="15.0" fill="rgb(215,43,54)" rx="2" ry="2" />
<text  x="13.00" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.6" y="1109" width="0.2" height="15.0" fill="rgb(215,118,10)" rx="2" ry="2" />
<text  x="1173.65" y="1119.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.02%)</title><rect x="755.1" y="1813" width="0.2" height="15.0" fill="rgb(224,133,1)" rx="2" ry="2" />
<text  x="758.12" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="901" width="0.2" height="15.0" fill="rgb(220,10,43)" rx="2" ry="2" />
<text  x="1173.07" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (1 samples, 0.02%)</title><rect x="117.2" y="1749" width="0.2" height="15.0" fill="rgb(250,210,33)" rx="2" ry="2" />
<text  x="120.22" y="1759.5" ></text>
</g>
<g >
<title>clear_page_erms (14 samples, 0.23%)</title><rect x="430.0" y="1829" width="2.7" height="15.0" fill="rgb(214,15,43)" rx="2" ry="2" />
<text  x="432.98" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (27 samples, 0.44%)</title><rect x="139.1" y="1653" width="5.2" height="15.0" fill="rgb(221,15,1)" rx="2" ry="2" />
<text  x="142.09" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.3" y="1461" width="0.2" height="15.0" fill="rgb(216,124,5)" rx="2" ry="2" />
<text  x="141.32" y="1471.5" ></text>
</g>
<g >
<title>std::locale::locale (2 samples, 0.03%)</title><rect x="893.1" y="2005" width="0.4" height="15.0" fill="rgb(251,188,41)" rx="2" ry="2" />
<text  x="896.11" y="2015.5" ></text>
</g>
<g >
<title>onmt::unicode::get_case (5 samples, 0.08%)</title><rect x="710.4" y="1877" width="1.0" height="15.0" fill="rgb(246,218,23)" rx="2" ry="2" />
<text  x="713.41" y="1887.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (5 samples, 0.08%)</title><rect x="175.7" y="1573" width="0.9" height="15.0" fill="rgb(229,52,24)" rx="2" ry="2" />
<text  x="178.67" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="169.3" y="821" width="0.2" height="15.0" fill="rgb(245,179,40)" rx="2" ry="2" />
<text  x="172.28" y="831.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (1 samples, 0.02%)</title><rect x="710.0" y="1781" width="0.2" height="15.0" fill="rgb(238,10,30)" rx="2" ry="2" />
<text  x="713.03" y="1791.5" ></text>
</g>
<g >
<title>operator delete@plt (1 samples, 0.02%)</title><rect x="151.5" y="1621" width="0.2" height="15.0" fill="rgb(205,18,31)" rx="2" ry="2" />
<text  x="154.48" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (194 samples, 3.18%)</title><rect x="172.0" y="1909" width="37.5" height="15.0" fill="rgb(223,228,23)" rx="2" ry="2" />
<text  x="174.99" y="1919.5" >std..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (1 samples, 0.02%)</title><rect x="209.0" y="1813" width="0.2" height="15.0" fill="rgb(238,75,29)" rx="2" ry="2" />
<text  x="211.96" y="1823.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="164.1" y="1685" width="0.1" height="15.0" fill="rgb(206,34,50)" rx="2" ry="2" />
<text  x="167.06" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="138.1" y="1845" width="0.4" height="15.0" fill="rgb(215,143,44)" rx="2" ry="2" />
<text  x="141.12" y="1855.5" ></text>
</g>
<g >
<title>std::istream::get (1 samples, 0.02%)</title><rect x="1188.6" y="2053" width="0.2" height="15.0" fill="rgb(210,206,23)" rx="2" ry="2" />
<text  x="1191.65" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.5" y="1477" width="0.1" height="15.0" fill="rgb(219,49,43)" rx="2" ry="2" />
<text  x="1173.45" y="1487.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (7 samples, 0.11%)</title><rect x="627.2" y="1877" width="1.3" height="15.0" fill="rgb(218,29,52)" rx="2" ry="2" />
<text  x="630.19" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (40 samples, 0.66%)</title><rect x="200.4" y="1733" width="7.8" height="15.0" fill="rgb(247,203,25)" rx="2" ry="2" />
<text  x="203.44" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_try_char (1 samples, 0.02%)</title><rect x="117.2" y="1733" width="0.2" height="15.0" fill="rgb(243,173,48)" rx="2" ry="2" />
<text  x="120.22" y="1743.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="868.5" y="1893" width="0.4" height="15.0" fill="rgb(217,201,0)" rx="2" ry="2" />
<text  x="871.53" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (26 samples, 0.43%)</title><rect x="144.5" y="1653" width="5.0" height="15.0" fill="rgb(223,189,36)" rx="2" ry="2" />
<text  x="147.51" y="1663.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (2 samples, 0.03%)</title><rect x="220.4" y="1973" width="0.4" height="15.0" fill="rgb(236,192,35)" rx="2" ry="2" />
<text  x="223.38" y="1983.5" ></text>
</g>
<g >
<title>vfs_write (1 samples, 0.02%)</title><rect x="894.3" y="1957" width="0.2" height="15.0" fill="rgb(212,82,16)" rx="2" ry="2" />
<text  x="897.27" y="1967.5" ></text>
</g>
<g >
<title>rcu_process_callbacks (1 samples, 0.02%)</title><rect x="323.5" y="1909" width="0.2" height="15.0" fill="rgb(228,148,50)" rx="2" ry="2" />
<text  x="326.53" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (27 samples, 0.44%)</title><rect x="139.1" y="1685" width="5.2" height="15.0" fill="rgb(246,140,33)" rx="2" ry="2" />
<text  x="142.09" y="1695.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (39 samples, 0.64%)</title><rect x="847.8" y="1893" width="7.6" height="15.0" fill="rgb(209,169,52)" rx="2" ry="2" />
<text  x="850.83" y="1903.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (155 samples, 2.54%)</title><rect x="10.2" y="2053" width="30.0" height="15.0" fill="rgb(226,181,44)" rx="2" ry="2" />
<text  x="13.19" y="2063.5" >[l..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.6" y="149" width="0.2" height="15.0" fill="rgb(228,133,2)" rx="2" ry="2" />
<text  x="1173.65" y="159.5" ></text>
</g>
<g >
<title>clear_page_erms (2 samples, 0.03%)</title><rect x="746.6" y="1765" width="0.4" height="15.0" fill="rgb(251,165,22)" rx="2" ry="2" />
<text  x="749.60" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (2 samples, 0.03%)</title><rect x="185.3" y="1749" width="0.4" height="15.0" fill="rgb(251,130,50)" rx="2" ry="2" />
<text  x="188.35" y="1759.5" ></text>
</g>
<g >
<title>fasttext::FastText::getWordVector (17 samples, 0.28%)</title><rect x="326.0" y="1989" width="3.3" height="15.0" fill="rgb(229,0,42)" rx="2" ry="2" />
<text  x="329.05" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.3" y="965" width="0.2" height="15.0" fill="rgb(253,161,11)" rx="2" ry="2" />
<text  x="1173.26" y="975.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="357" width="0.2" height="15.0" fill="rgb(213,98,18)" rx="2" ry="2" />
<text  x="82.87" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="210.3" y="1765" width="0.4" height="15.0" fill="rgb(214,35,16)" rx="2" ry="2" />
<text  x="213.31" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (27 samples, 0.44%)</title><rect x="139.1" y="1701" width="5.2" height="15.0" fill="rgb(218,122,29)" rx="2" ry="2" />
<text  x="142.09" y="1711.5" ></text>
</g>
<g >
<title>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::dump (5 samples, 0.08%)</title><rect x="583.6" y="1989" width="1.0" height="15.0" fill="rgb(235,158,50)" rx="2" ry="2" />
<text  x="586.65" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (31 samples, 0.51%)</title><rect x="172.2" y="1637" width="6.0" height="15.0" fill="rgb(214,27,45)" rx="2" ry="2" />
<text  x="175.18" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.0" y="117" width="0.2" height="15.0" fill="rgb(228,45,39)" rx="2" ry="2" />
<text  x="13.00" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="168.9" y="1877" width="0.6" height="15.0" fill="rgb(210,71,47)" rx="2" ry="2" />
<text  x="171.89" y="1887.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.02%)</title><rect x="134.3" y="1685" width="0.1" height="15.0" fill="rgb(244,144,34)" rx="2" ry="2" />
<text  x="137.25" y="1695.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (2 samples, 0.03%)</title><rect x="433.5" y="1861" width="0.3" height="15.0" fill="rgb(250,9,42)" rx="2" ry="2" />
<text  x="436.46" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.5" y="1605" width="0.1" height="15.0" fill="rgb(233,172,39)" rx="2" ry="2" />
<text  x="1173.45" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="169.3" y="917" width="0.2" height="15.0" fill="rgb(243,157,23)" rx="2" ry="2" />
<text  x="172.28" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (36 samples, 0.59%)</title><rect x="192.9" y="1701" width="7.0" height="15.0" fill="rgb(244,79,44)" rx="2" ry="2" />
<text  x="195.89" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (31 samples, 0.51%)</title><rect x="172.2" y="1669" width="6.0" height="15.0" fill="rgb(223,170,26)" rx="2" ry="2" />
<text  x="175.18" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.6" y="1541" width="0.2" height="15.0" fill="rgb(225,67,43)" rx="2" ry="2" />
<text  x="1173.65" y="1551.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="827.7" y="1829" width="0.2" height="15.0" fill="rgb(240,166,6)" rx="2" ry="2" />
<text  x="830.70" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.3" y="1733" width="0.2" height="15.0" fill="rgb(211,100,46)" rx="2" ry="2" />
<text  x="141.32" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="1509" width="0.2" height="15.0" fill="rgb(230,97,31)" rx="2" ry="2" />
<text  x="1173.07" y="1519.5" ></text>
</g>
<g >
<title>fasttext::Vector::mul (22 samples, 0.36%)</title><rect x="331.1" y="1989" width="4.2" height="15.0" fill="rgb(217,211,6)" rx="2" ry="2" />
<text  x="334.08" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (2 samples, 0.03%)</title><rect x="208.4" y="1701" width="0.4" height="15.0" fill="rgb(235,27,6)" rx="2" ry="2" />
<text  x="211.38" y="1711.5" ></text>
</g>
<g >
<title>rcu_report_qs_rnp (1 samples, 0.02%)</title><rect x="323.5" y="1893" width="0.2" height="15.0" fill="rgb(210,60,21)" rx="2" ry="2" />
<text  x="326.53" y="1903.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (18 samples, 0.30%)</title><rect x="430.0" y="1845" width="3.5" height="15.0" fill="rgb(240,49,41)" rx="2" ry="2" />
<text  x="432.98" y="1855.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::computeSubwords (2 samples, 0.03%)</title><rect x="865.6" y="2037" width="0.4" height="15.0" fill="rgb(242,205,51)" rx="2" ry="2" />
<text  x="868.63" y="2047.5" ></text>
</g>
<g >
<title>cfree (2 samples, 0.03%)</title><rect x="141.2" y="1573" width="0.4" height="15.0" fill="rgb(249,125,19)" rx="2" ry="2" />
<text  x="144.22" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.6" y="1765" width="0.2" height="15.0" fill="rgb(210,153,51)" rx="2" ry="2" />
<text  x="1173.65" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.0" y="1349" width="0.2" height="15.0" fill="rgb(248,137,52)" rx="2" ry="2" />
<text  x="13.00" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.6" y="1669" width="0.2" height="15.0" fill="rgb(213,26,7)" rx="2" ry="2" />
<text  x="1173.65" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.0" y="1653" width="0.2" height="15.0" fill="rgb(249,122,13)" rx="2" ry="2" />
<text  x="13.00" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (32 samples, 0.52%)</title><rect x="111.0" y="1637" width="6.2" height="15.0" fill="rgb(223,165,45)" rx="2" ry="2" />
<text  x="114.03" y="1647.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="671.1" y="1797" width="0.2" height="15.0" fill="rgb(207,166,46)" rx="2" ry="2" />
<text  x="674.13" y="1807.5" ></text>
</g>
<g >
<title>__do_page_fault (41 samples, 0.67%)</title><rect x="434.2" y="1925" width="8.0" height="15.0" fill="rgb(226,148,49)" rx="2" ry="2" />
<text  x="437.23" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="210.5" y="1365" width="0.2" height="15.0" fill="rgb(224,47,30)" rx="2" ry="2" />
<text  x="213.51" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="1749" width="0.2" height="15.0" fill="rgb(253,146,1)" rx="2" ry="2" />
<text  x="1173.07" y="1759.5" ></text>
</g>
<g >
<title>mem_cgroup_uncharge_list (1 samples, 0.02%)</title><rect x="916.3" y="1861" width="0.2" height="15.0" fill="rgb(245,92,31)" rx="2" ry="2" />
<text  x="919.34" y="1871.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="323.5" y="1845" width="0.2" height="15.0" fill="rgb(214,98,32)" rx="2" ry="2" />
<text  x="326.53" y="1855.5" ></text>
</g>
<g >
<title>unmap_single_vma (2 samples, 0.03%)</title><rect x="581.9" y="1861" width="0.4" height="15.0" fill="rgb(227,69,7)" rx="2" ry="2" />
<text  x="584.90" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (1 samples, 0.02%)</title><rect x="123.2" y="1717" width="0.2" height="15.0" fill="rgb(235,38,0)" rx="2" ry="2" />
<text  x="126.22" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.6" y="1141" width="0.2" height="15.0" fill="rgb(253,182,48)" rx="2" ry="2" />
<text  x="1173.65" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.3" y="1541" width="0.2" height="15.0" fill="rgb(254,80,29)" rx="2" ry="2" />
<text  x="141.32" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.5" y="1893" width="0.1" height="15.0" fill="rgb(208,165,26)" rx="2" ry="2" />
<text  x="1173.45" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="169.1" y="1525" width="0.4" height="15.0" fill="rgb(232,94,19)" rx="2" ry="2" />
<text  x="172.09" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.6" y="1605" width="0.2" height="15.0" fill="rgb(232,92,30)" rx="2" ry="2" />
<text  x="1173.65" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (2 samples, 0.03%)</title><rect x="208.8" y="1877" width="0.4" height="15.0" fill="rgb(252,18,37)" rx="2" ry="2" />
<text  x="211.76" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="169.3" y="1077" width="0.2" height="15.0" fill="rgb(222,1,15)" rx="2" ry="2" />
<text  x="172.28" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.0" y="533" width="0.2" height="15.0" fill="rgb(209,141,31)" rx="2" ry="2" />
<text  x="13.00" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.5" y="165" width="0.1" height="15.0" fill="rgb(230,93,19)" rx="2" ry="2" />
<text  x="1173.45" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.5" y="1381" width="0.1" height="15.0" fill="rgb(237,54,17)" rx="2" ry="2" />
<text  x="1173.45" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.0" y="1781" width="0.2" height="15.0" fill="rgb(254,151,4)" rx="2" ry="2" />
<text  x="13.00" y="1791.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (42 samples, 0.69%)</title><rect x="1178.8" y="2037" width="8.1" height="15.0" fill="rgb(209,109,26)" rx="2" ry="2" />
<text  x="1181.77" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.0" y="69" width="0.2" height="15.0" fill="rgb(220,3,38)" rx="2" ry="2" />
<text  x="13.00" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.0" y="1557" width="0.2" height="15.0" fill="rgb(227,40,31)" rx="2" ry="2" />
<text  x="13.00" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.0" y="1029" width="0.2" height="15.0" fill="rgb(208,38,48)" rx="2" ry="2" />
<text  x="13.00" y="1039.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (11 samples, 0.18%)</title><rect x="890.6" y="2005" width="2.1" height="15.0" fill="rgb(234,33,24)" rx="2" ry="2" />
<text  x="893.60" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.0" y="1573" width="0.2" height="15.0" fill="rgb(235,85,43)" rx="2" ry="2" />
<text  x="13.00" y="1583.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (3 samples, 0.05%)</title><rect x="197.3" y="1653" width="0.6" height="15.0" fill="rgb(207,111,20)" rx="2" ry="2" />
<text  x="200.34" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.07%)</title><rect x="209.9" y="1877" width="0.8" height="15.0" fill="rgb(241,14,36)" rx="2" ry="2" />
<text  x="212.92" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.3" y="1173" width="0.2" height="15.0" fill="rgb(217,187,16)" rx="2" ry="2" />
<text  x="1173.26" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.3" y="1013" width="0.2" height="15.0" fill="rgb(222,82,18)" rx="2" ry="2" />
<text  x="1173.26" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.0" y="821" width="0.2" height="15.0" fill="rgb(250,219,42)" rx="2" ry="2" />
<text  x="13.00" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.5" y="677" width="0.1" height="15.0" fill="rgb(226,86,52)" rx="2" ry="2" />
<text  x="1173.45" y="687.5" ></text>
</g>
<g >
<title>malloc@plt (1 samples, 0.02%)</title><rect x="188.8" y="1637" width="0.2" height="15.0" fill="rgb(254,36,25)" rx="2" ry="2" />
<text  x="191.83" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="821" width="0.2" height="15.0" fill="rgb(231,224,28)" rx="2" ry="2" />
<text  x="82.87" y="831.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (2 samples, 0.03%)</title><rect x="148.6" y="1589" width="0.4" height="15.0" fill="rgb(227,27,10)" rx="2" ry="2" />
<text  x="151.57" y="1599.5" ></text>
</g>
<g >
<title>tlb_flush_mmu_free (2 samples, 0.03%)</title><rect x="454.2" y="1813" width="0.4" height="15.0" fill="rgb(224,216,52)" rx="2" ry="2" />
<text  x="457.17" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (38 samples, 0.62%)</title><rect x="103.5" y="1685" width="7.3" height="15.0" fill="rgb(238,62,2)" rx="2" ry="2" />
<text  x="106.48" y="1695.5" ></text>
</g>
<g >
<title>unmap_single_vma (1 samples, 0.02%)</title><rect x="583.1" y="1877" width="0.2" height="15.0" fill="rgb(215,167,1)" rx="2" ry="2" />
<text  x="586.07" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.3" y="1205" width="0.2" height="15.0" fill="rgb(231,140,51)" rx="2" ry="2" />
<text  x="1173.26" y="1215.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="629" width="0.2" height="15.0" fill="rgb(239,157,25)" rx="2" ry="2" />
<text  x="82.87" y="639.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (1 samples, 0.02%)</title><rect x="177.0" y="1589" width="0.2" height="15.0" fill="rgb(253,135,43)" rx="2" ry="2" />
<text  x="180.02" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="169.3" y="1157" width="0.2" height="15.0" fill="rgb(207,214,16)" rx="2" ry="2" />
<text  x="172.28" y="1167.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::append (8 samples, 0.13%)</title><rect x="613.5" y="1893" width="1.5" height="15.0" fill="rgb(248,147,40)" rx="2" ry="2" />
<text  x="616.45" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.3" y="725" width="0.2" height="15.0" fill="rgb(246,173,30)" rx="2" ry="2" />
<text  x="1173.26" y="735.5" ></text>
</g>
<g >
<title>__dynamic_cast (8 samples, 0.13%)</title><rect x="186.1" y="1637" width="1.6" height="15.0" fill="rgb(253,59,50)" rx="2" ry="2" />
<text  x="189.12" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="853" width="0.2" height="15.0" fill="rgb(213,38,1)" rx="2" ry="2" />
<text  x="1173.07" y="863.5" ></text>
</g>
<g >
<title>std::vector&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::allocator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;::_M_realloc_insert&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="586.2" y="2005" width="0.2" height="15.0" fill="rgb(237,67,38)" rx="2" ry="2" />
<text  x="589.16" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.3" y="1509" width="0.2" height="15.0" fill="rgb(237,142,30)" rx="2" ry="2" />
<text  x="141.32" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (177 samples, 2.90%)</title><rect x="103.1" y="1877" width="34.2" height="15.0" fill="rgb(210,11,18)" rx="2" ry="2" />
<text  x="106.09" y="1887.5" >st..</text>
</g>
<g >
<title>cfree (1 samples, 0.02%)</title><rect x="585.0" y="1989" width="0.2" height="15.0" fill="rgb(241,33,39)" rx="2" ry="2" />
<text  x="588.00" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (33 samples, 0.54%)</title><rect x="193.5" y="1685" width="6.4" height="15.0" fill="rgb(245,76,15)" rx="2" ry="2" />
<text  x="196.47" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.0" y="421" width="0.2" height="15.0" fill="rgb(246,62,45)" rx="2" ry="2" />
<text  x="13.00" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (1 samples, 0.02%)</title><rect x="129.4" y="1749" width="0.2" height="15.0" fill="rgb(242,119,35)" rx="2" ry="2" />
<text  x="132.41" y="1759.5" ></text>
</g>
<g >
<title>uncharge_page (1 samples, 0.02%)</title><rect x="916.3" y="1845" width="0.2" height="15.0" fill="rgb(206,49,32)" rx="2" ry="2" />
<text  x="919.34" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="1461" width="0.2" height="15.0" fill="rgb(244,205,41)" rx="2" ry="2" />
<text  x="1173.07" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.3" y="501" width="0.2" height="15.0" fill="rgb(241,113,47)" rx="2" ry="2" />
<text  x="1173.26" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="1861" width="0.2" height="15.0" fill="rgb(234,182,18)" rx="2" ry="2" />
<text  x="1173.07" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="169.3" y="885" width="0.2" height="15.0" fill="rgb(220,160,10)" rx="2" ry="2" />
<text  x="172.28" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (152 samples, 2.49%)</title><rect x="139.1" y="1861" width="29.4" height="15.0" fill="rgb(224,30,19)" rx="2" ry="2" />
<text  x="142.09" y="1871.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="210.3" y="1621" width="0.4" height="15.0" fill="rgb(221,130,46)" rx="2" ry="2" />
<text  x="213.31" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="661" width="0.2" height="15.0" fill="rgb(225,38,16)" rx="2" ry="2" />
<text  x="82.87" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace@plt (2 samples, 0.03%)</title><rect x="863.9" y="1941" width="0.4" height="15.0" fill="rgb(254,154,33)" rx="2" ry="2" />
<text  x="866.89" y="1951.5" ></text>
</g>
<g >
<title>std::istream::sentry::sentry (12 samples, 0.20%)</title><rect x="879.0" y="2005" width="2.3" height="15.0" fill="rgb(207,145,27)" rx="2" ry="2" />
<text  x="881.98" y="2015.5" ></text>
</g>
<g >
<title>brk (1 samples, 0.02%)</title><rect x="916.3" y="2053" width="0.2" height="15.0" fill="rgb(253,161,54)" rx="2" ry="2" />
<text  x="919.34" y="2063.5" ></text>
</g>
<g >
<title>page_counter_try_charge (1 samples, 0.02%)</title><rect x="441.8" y="1829" width="0.2" height="15.0" fill="rgb(216,184,45)" rx="2" ry="2" />
<text  x="444.78" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.0" y="1925" width="0.2" height="15.0" fill="rgb(222,71,40)" rx="2" ry="2" />
<text  x="13.00" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="453" width="0.2" height="15.0" fill="rgb(211,169,8)" rx="2" ry="2" />
<text  x="82.87" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find (6 samples, 0.10%)</title><rect x="860.6" y="1909" width="1.2" height="15.0" fill="rgb(214,121,30)" rx="2" ry="2" />
<text  x="863.60" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (37 samples, 0.61%)</title><rect x="129.8" y="1717" width="7.2" height="15.0" fill="rgb(208,100,25)" rx="2" ry="2" />
<text  x="132.80" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.3" y="69" width="0.2" height="15.0" fill="rgb(234,4,12)" rx="2" ry="2" />
<text  x="1173.26" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (2 samples, 0.03%)</title><rect x="199.9" y="1781" width="0.3" height="15.0" fill="rgb(237,81,48)" rx="2" ry="2" />
<text  x="202.86" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (35 samples, 0.57%)</title><rect x="878.4" y="2021" width="6.8" height="15.0" fill="rgb(247,1,34)" rx="2" ry="2" />
<text  x="881.40" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.6" y="1397" width="0.2" height="15.0" fill="rgb(234,96,45)" rx="2" ry="2" />
<text  x="1173.65" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="137.9" y="1909" width="0.6" height="15.0" fill="rgb(208,142,14)" rx="2" ry="2" />
<text  x="140.93" y="1919.5" ></text>
</g>
<g >
<title>memcpy@plt (1 samples, 0.02%)</title><rect x="671.3" y="1877" width="0.2" height="15.0" fill="rgb(208,96,38)" rx="2" ry="2" />
<text  x="674.32" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="168.9" y="1653" width="0.6" height="15.0" fill="rgb(234,118,39)" rx="2" ry="2" />
<text  x="171.89" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.3" y="293" width="0.2" height="15.0" fill="rgb(232,98,20)" rx="2" ry="2" />
<text  x="1173.26" y="303.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="161.2" y="1637" width="0.1" height="15.0" fill="rgb(228,14,24)" rx="2" ry="2" />
<text  x="164.15" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.0" y="1445" width="0.2" height="15.0" fill="rgb(215,205,19)" rx="2" ry="2" />
<text  x="13.00" y="1455.5" ></text>
</g>
<g >
<title>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::dump (4 samples, 0.07%)</title><rect x="583.8" y="1925" width="0.8" height="15.0" fill="rgb(229,60,32)" rx="2" ry="2" />
<text  x="586.84" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="138.1" y="1813" width="0.4" height="15.0" fill="rgb(242,204,2)" rx="2" ry="2" />
<text  x="141.12" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (32 samples, 0.52%)</title><rect x="117.4" y="1765" width="6.2" height="15.0" fill="rgb(205,116,33)" rx="2" ry="2" />
<text  x="120.41" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.3" y="853" width="0.2" height="15.0" fill="rgb(241,135,49)" rx="2" ry="2" />
<text  x="1173.26" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (13 samples, 0.21%)</title><rect x="119.0" y="1637" width="2.5" height="15.0" fill="rgb(235,211,33)" rx="2" ry="2" />
<text  x="121.96" y="1647.5" ></text>
</g>
<g >
<title>cfree (2 samples, 0.03%)</title><rect x="138.5" y="1925" width="0.4" height="15.0" fill="rgb(231,195,50)" rx="2" ry="2" />
<text  x="141.51" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.3" y="1525" width="0.2" height="15.0" fill="rgb(214,69,46)" rx="2" ry="2" />
<text  x="1173.26" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (2 samples, 0.03%)</title><rect x="193.1" y="1685" width="0.4" height="15.0" fill="rgb(251,122,18)" rx="2" ry="2" />
<text  x="196.09" y="1695.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (2 samples, 0.03%)</title><rect x="128.1" y="1653" width="0.3" height="15.0" fill="rgb(252,17,52)" rx="2" ry="2" />
<text  x="131.06" y="1663.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="112.2" y="1621" width="0.2" height="15.0" fill="rgb(242,198,5)" rx="2" ry="2" />
<text  x="115.19" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.0" y="1413" width="0.2" height="15.0" fill="rgb(219,52,5)" rx="2" ry="2" />
<text  x="13.00" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="1077" width="0.2" height="15.0" fill="rgb(240,31,53)" rx="2" ry="2" />
<text  x="1173.07" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="2005" width="0.2" height="15.0" fill="rgb(235,80,50)" rx="2" ry="2" />
<text  x="1173.07" y="2015.5" ></text>
</g>
<g >
<title>mem_cgroup_throttle_swaprate (1 samples, 0.02%)</title><rect x="433.5" y="1845" width="0.2" height="15.0" fill="rgb(223,8,7)" rx="2" ry="2" />
<text  x="436.46" y="1855.5" ></text>
</g>
<g >
<title>std::locale::~locale (3 samples, 0.05%)</title><rect x="580.2" y="1973" width="0.5" height="15.0" fill="rgb(234,188,38)" rx="2" ry="2" />
<text  x="583.16" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (31 samples, 0.51%)</title><rect x="172.2" y="1621" width="6.0" height="15.0" fill="rgb(246,28,35)" rx="2" ry="2" />
<text  x="175.18" y="1631.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (2 samples, 0.03%)</title><rect x="79.1" y="1925" width="0.4" height="15.0" fill="rgb(249,41,11)" rx="2" ry="2" />
<text  x="82.09" y="1935.5" ></text>
</g>
<g >
<title>cfree (1 samples, 0.02%)</title><rect x="174.1" y="1589" width="0.2" height="15.0" fill="rgb(254,11,14)" rx="2" ry="2" />
<text  x="177.12" y="1599.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (2 samples, 0.03%)</title><rect x="136.4" y="1701" width="0.4" height="15.0" fill="rgb(213,211,9)" rx="2" ry="2" />
<text  x="139.38" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (180 samples, 2.95%)</title><rect x="103.1" y="1909" width="34.8" height="15.0" fill="rgb(221,199,24)" rx="2" ry="2" />
<text  x="106.09" y="1919.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="168.9" y="1829" width="0.6" height="15.0" fill="rgb(219,18,33)" rx="2" ry="2" />
<text  x="171.89" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.0" y="325" width="0.2" height="15.0" fill="rgb(225,132,49)" rx="2" ry="2" />
<text  x="13.00" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.3" y="1541" width="0.2" height="15.0" fill="rgb(205,99,8)" rx="2" ry="2" />
<text  x="1173.26" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="169.1" y="1205" width="0.2" height="15.0" fill="rgb(231,0,54)" rx="2" ry="2" />
<text  x="172.09" y="1215.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="533" width="0.2" height="15.0" fill="rgb(209,195,16)" rx="2" ry="2" />
<text  x="82.87" y="543.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="671.1" y="1765" width="0.2" height="15.0" fill="rgb(241,109,16)" rx="2" ry="2" />
<text  x="674.13" y="1775.5" ></text>
</g>
<g >
<title>copy_page_to_iter (6 samples, 0.10%)</title><rect x="85.1" y="1877" width="1.2" height="15.0" fill="rgb(245,204,32)" rx="2" ry="2" />
<text  x="88.09" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="210.5" y="1509" width="0.2" height="15.0" fill="rgb(215,97,32)" rx="2" ry="2" />
<text  x="213.51" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.3" y="1717" width="0.2" height="15.0" fill="rgb(244,228,53)" rx="2" ry="2" />
<text  x="141.32" y="1727.5" ></text>
</g>
<g >
<title>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::dump_escaped (2 samples, 0.03%)</title><rect x="583.8" y="1893" width="0.4" height="15.0" fill="rgb(209,183,53)" rx="2" ry="2" />
<text  x="586.84" y="1903.5" ></text>
</g>
<g >
<title>cfree (2 samples, 0.03%)</title><rect x="180.1" y="1621" width="0.4" height="15.0" fill="rgb(210,76,41)" rx="2" ry="2" />
<text  x="183.12" y="1631.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="170.8" y="1973" width="0.2" height="15.0" fill="rgb(239,56,30)" rx="2" ry="2" />
<text  x="173.83" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (32 samples, 0.52%)</title><rect x="172.0" y="1733" width="6.2" height="15.0" fill="rgb(252,163,18)" rx="2" ry="2" />
<text  x="174.99" y="1743.5" ></text>
</g>
<g >
<title>clear_page_erms (5 samples, 0.08%)</title><rect x="38.8" y="1925" width="1.0" height="15.0" fill="rgb(234,98,24)" rx="2" ry="2" />
<text  x="41.84" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="117" width="0.2" height="15.0" fill="rgb(229,36,29)" rx="2" ry="2" />
<text  x="82.87" y="127.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="129.4" y="1733" width="0.2" height="15.0" fill="rgb(247,63,26)" rx="2" ry="2" />
<text  x="132.41" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="1893" width="0.2" height="15.0" fill="rgb(233,174,7)" rx="2" ry="2" />
<text  x="1173.07" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.3" y="1301" width="0.2" height="15.0" fill="rgb(206,149,35)" rx="2" ry="2" />
<text  x="1173.26" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="405" width="0.2" height="15.0" fill="rgb(230,168,17)" rx="2" ry="2" />
<text  x="1173.07" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (30 samples, 0.49%)</title><rect x="123.6" y="1765" width="5.8" height="15.0" fill="rgb(217,81,38)" rx="2" ry="2" />
<text  x="126.61" y="1775.5" ></text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::get (30 samples, 0.49%)</title><rect x="92.1" y="1925" width="5.8" height="15.0" fill="rgb(216,148,46)" rx="2" ry="2" />
<text  x="95.06" y="1935.5" ></text>
</g>
<g >
<title>__munmap (2 samples, 0.03%)</title><rect x="454.2" y="1973" width="0.4" height="15.0" fill="rgb(220,172,10)" rx="2" ry="2" />
<text  x="457.17" y="1983.5" ></text>
</g>
<g >
<title>__handle_mm_fault (21 samples, 0.34%)</title><rect x="429.8" y="1877" width="4.0" height="15.0" fill="rgb(241,144,17)" rx="2" ry="2" />
<text  x="432.78" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="169.3" y="405" width="0.2" height="15.0" fill="rgb(220,56,45)" rx="2" ry="2" />
<text  x="172.28" y="415.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="1557" width="0.2" height="15.0" fill="rgb(241,96,49)" rx="2" ry="2" />
<text  x="82.87" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (35 samples, 0.57%)</title><rect x="185.7" y="1701" width="6.8" height="15.0" fill="rgb(252,228,16)" rx="2" ry="2" />
<text  x="188.73" y="1711.5" ></text>
</g>
<g >
<title>onmt::CaseModifier::type_to_char (2 samples, 0.03%)</title><rect x="594.7" y="1893" width="0.4" height="15.0" fill="rgb(213,125,30)" rx="2" ry="2" />
<text  x="597.68" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.07%)</title><rect x="209.9" y="1893" width="0.8" height="15.0" fill="rgb(219,206,16)" rx="2" ry="2" />
<text  x="212.92" y="1903.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="144.3" y="1669" width="0.2" height="15.0" fill="rgb(247,16,9)" rx="2" ry="2" />
<text  x="147.32" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (30 samples, 0.49%)</title><rect x="117.4" y="1717" width="5.8" height="15.0" fill="rgb(249,55,47)" rx="2" ry="2" />
<text  x="120.41" y="1727.5" ></text>
</g>
<g >
<title>onmt::Tokenizer::tokenize (1,361 samples, 22.32%)</title><rect x="596.8" y="1909" width="263.4" height="15.0" fill="rgb(216,128,30)" rx="2" ry="2" />
<text  x="599.81" y="1919.5" >onmt::Tokenizer::tokenize</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.6" y="1077" width="0.2" height="15.0" fill="rgb(219,91,3)" rx="2" ry="2" />
<text  x="1173.65" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.07%)</title><rect x="209.9" y="1925" width="0.8" height="15.0" fill="rgb(228,164,49)" rx="2" ry="2" />
<text  x="212.92" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="1941" width="0.2" height="15.0" fill="rgb(211,3,46)" rx="2" ry="2" />
<text  x="82.87" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.0" y="1637" width="0.2" height="15.0" fill="rgb(245,156,37)" rx="2" ry="2" />
<text  x="13.00" y="1647.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="587.9" y="1957" width="0.2" height="15.0" fill="rgb(246,219,33)" rx="2" ry="2" />
<text  x="590.90" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="169.3" y="933" width="0.2" height="15.0" fill="rgb(224,204,29)" rx="2" ry="2" />
<text  x="172.28" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (30 samples, 0.49%)</title><rect x="123.6" y="1781" width="5.8" height="15.0" fill="rgb(230,2,34)" rx="2" ry="2" />
<text  x="126.61" y="1791.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (4 samples, 0.07%)</title><rect x="670.5" y="1877" width="0.8" height="15.0" fill="rgb(217,21,51)" rx="2" ry="2" />
<text  x="673.54" y="1887.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.03%)</title><rect x="639.0" y="1861" width="0.4" height="15.0" fill="rgb(250,166,3)" rx="2" ry="2" />
<text  x="642.00" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (190 samples, 3.12%)</title><rect x="172.0" y="1893" width="36.8" height="15.0" fill="rgb(251,112,48)" rx="2" ry="2" />
<text  x="174.99" y="1903.5" >std..</text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="585.2" y="1989" width="0.2" height="15.0" fill="rgb(231,75,23)" rx="2" ry="2" />
<text  x="588.19" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="117" width="0.2" height="15.0" fill="rgb(229,42,53)" rx="2" ry="2" />
<text  x="1173.07" y="127.5" ></text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::get (5 samples, 0.08%)</title><rect x="100.0" y="1909" width="1.0" height="15.0" fill="rgb(229,150,54)" rx="2" ry="2" />
<text  x="103.00" y="1919.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (4 samples, 0.07%)</title><rect x="147.8" y="1589" width="0.8" height="15.0" fill="rgb(214,188,4)" rx="2" ry="2" />
<text  x="150.80" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.0" y="885" width="0.2" height="15.0" fill="rgb(232,22,54)" rx="2" ry="2" />
<text  x="13.00" y="895.5" ></text>
</g>
<g >
<title>operator new@plt (1 samples, 0.02%)</title><rect x="174.7" y="1589" width="0.2" height="15.0" fill="rgb(222,41,0)" rx="2" ry="2" />
<text  x="177.70" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.6" y="53" width="0.2" height="15.0" fill="rgb(239,114,3)" rx="2" ry="2" />
<text  x="1173.65" y="63.5" ></text>
</g>
<g >
<title>unmap_page_range (2 samples, 0.03%)</title><rect x="581.9" y="1845" width="0.4" height="15.0" fill="rgb(251,117,10)" rx="2" ry="2" />
<text  x="584.90" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.5" y="885" width="0.1" height="15.0" fill="rgb(231,135,10)" rx="2" ry="2" />
<text  x="1173.45" y="895.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (1 samples, 0.02%)</title><rect x="583.1" y="1957" width="0.2" height="15.0" fill="rgb(248,72,53)" rx="2" ry="2" />
<text  x="586.07" y="1967.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::set_case (1 samples, 0.02%)</title><rect x="590.8" y="1909" width="0.2" height="15.0" fill="rgb(228,106,8)" rx="2" ry="2" />
<text  x="593.81" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (2 samples, 0.03%)</title><rect x="208.4" y="1781" width="0.4" height="15.0" fill="rgb(220,102,9)" rx="2" ry="2" />
<text  x="211.38" y="1791.5" ></text>
</g>
<g >
<title>__dynamic_cast (5 samples, 0.08%)</title><rect x="149.9" y="1621" width="1.0" height="15.0" fill="rgb(205,45,35)" rx="2" ry="2" />
<text  x="152.93" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="169.3" y="1205" width="0.2" height="15.0" fill="rgb(234,67,30)" rx="2" ry="2" />
<text  x="172.28" y="1215.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="1477" width="0.2" height="15.0" fill="rgb(207,148,50)" rx="2" ry="2" />
<text  x="82.87" y="1487.5" ></text>
</g>
<g >
<title>onmt::Tokenizer::tokenize (1,408 samples, 23.09%)</title><rect x="589.8" y="1925" width="272.5" height="15.0" fill="rgb(222,157,11)" rx="2" ry="2" />
<text  x="592.84" y="1935.5" >onmt::Tokenizer::tokenize</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (1 samples, 0.02%)</title><rect x="168.7" y="1797" width="0.2" height="15.0" fill="rgb(246,139,47)" rx="2" ry="2" />
<text  x="171.70" y="1807.5" ></text>
</g>
<g >
<title>arch_tlb_finish_mmu (1 samples, 0.02%)</title><rect x="581.7" y="1861" width="0.2" height="15.0" fill="rgb(218,69,42)" rx="2" ry="2" />
<text  x="584.71" y="1871.5" ></text>
</g>
<g >
<title>generic_file_read_iter (6 samples, 0.10%)</title><rect x="85.1" y="1893" width="1.2" height="15.0" fill="rgb(244,17,42)" rx="2" ry="2" />
<text  x="88.09" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (38 samples, 0.62%)</title><rect x="103.5" y="1621" width="7.3" height="15.0" fill="rgb(249,72,28)" rx="2" ry="2" />
<text  x="106.48" y="1631.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (3 samples, 0.05%)</title><rect x="581.7" y="1941" width="0.6" height="15.0" fill="rgb(238,60,26)" rx="2" ry="2" />
<text  x="584.71" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_try_char (1 samples, 0.02%)</title><rect x="137.3" y="1781" width="0.2" height="15.0" fill="rgb(219,73,3)" rx="2" ry="2" />
<text  x="140.35" y="1791.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt; &gt;::_M_manager (1 samples, 0.02%)</title><rect x="129.4" y="1701" width="0.2" height="15.0" fill="rgb(254,198,1)" rx="2" ry="2" />
<text  x="132.41" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (36 samples, 0.59%)</title><rect x="185.7" y="1717" width="7.0" height="15.0" fill="rgb(254,54,48)" rx="2" ry="2" />
<text  x="188.73" y="1727.5" ></text>
</g>
<g >
<title>operator new@plt (4 samples, 0.07%)</title><rect x="1120.9" y="2053" width="0.8" height="15.0" fill="rgb(235,172,12)" rx="2" ry="2" />
<text  x="1123.91" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="169.3" y="197" width="0.2" height="15.0" fill="rgb(223,167,22)" rx="2" ry="2" />
<text  x="172.28" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="138.1" y="1781" width="0.4" height="15.0" fill="rgb(211,41,32)" rx="2" ry="2" />
<text  x="141.12" y="1791.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.08%)</title><rect x="101.7" y="1957" width="1.0" height="15.0" fill="rgb(251,216,11)" rx="2" ry="2" />
<text  x="104.74" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="1365" width="0.2" height="15.0" fill="rgb(212,168,53)" rx="2" ry="2" />
<text  x="1173.07" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Scanner&lt;char&gt;::_M_scan_normal (1 samples, 0.02%)</title><rect x="137.5" y="1781" width="0.2" height="15.0" fill="rgb(251,34,37)" rx="2" ry="2" />
<text  x="140.54" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (30 samples, 0.49%)</title><rect x="123.6" y="1685" width="5.8" height="15.0" fill="rgb(246,150,46)" rx="2" ry="2" />
<text  x="126.61" y="1695.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::getLine (129 samples, 2.12%)</title><rect x="981.8" y="2053" width="24.9" height="15.0" fill="rgb(233,209,51)" rx="2" ry="2" />
<text  x="984.75" y="2063.5" >f..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.3" y="997" width="0.2" height="15.0" fill="rgb(222,211,14)" rx="2" ry="2" />
<text  x="1173.26" y="1007.5" ></text>
</g>
<g >
<title>fasttext::Vector::zero (1 samples, 0.02%)</title><rect x="579.6" y="1973" width="0.2" height="15.0" fill="rgb(208,58,42)" rx="2" ry="2" />
<text  x="582.58" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (151 samples, 2.48%)</title><rect x="139.1" y="1813" width="29.2" height="15.0" fill="rgb(231,110,51)" rx="2" ry="2" />
<text  x="142.09" y="1823.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="210.3" y="1749" width="0.4" height="15.0" fill="rgb(221,17,29)" rx="2" ry="2" />
<text  x="213.31" y="1759.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (2 samples, 0.03%)</title><rect x="198.9" y="1669" width="0.4" height="15.0" fill="rgb(211,95,1)" rx="2" ry="2" />
<text  x="201.89" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="169.3" y="293" width="0.2" height="15.0" fill="rgb(213,149,53)" rx="2" ry="2" />
<text  x="172.28" y="303.5" ></text>
</g>
<g >
<title>cfree (1 samples, 0.02%)</title><rect x="124.6" y="1669" width="0.2" height="15.0" fill="rgb(250,172,23)" rx="2" ry="2" />
<text  x="127.57" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="168.9" y="1429" width="0.2" height="15.0" fill="rgb(221,100,27)" rx="2" ry="2" />
<text  x="171.89" y="1439.5" ></text>
</g>
<g >
<title>cfree (1 samples, 0.02%)</title><rect x="105.6" y="1589" width="0.2" height="15.0" fill="rgb(247,165,9)" rx="2" ry="2" />
<text  x="108.61" y="1599.5" ></text>
</g>
<g >
<title>fasttext::ProductQuantizer::get_centroids (2 samples, 0.03%)</title><rect x="1095.4" y="2053" width="0.3" height="15.0" fill="rgb(223,186,33)" rx="2" ry="2" />
<text  x="1098.36" y="2063.5" ></text>
</g>
<g >
<title>new_sync_read (6 samples, 0.10%)</title><rect x="85.1" y="1925" width="1.2" height="15.0" fill="rgb(231,159,21)" rx="2" ry="2" />
<text  x="88.09" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.0" y="565" width="0.2" height="15.0" fill="rgb(212,203,53)" rx="2" ry="2" />
<text  x="13.00" y="575.5" ></text>
</g>
<g >
<title>fasttext::Vector::norm (33 samples, 0.54%)</title><rect x="335.3" y="1989" width="6.4" height="15.0" fill="rgb(235,144,4)" rx="2" ry="2" />
<text  x="338.34" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="210.3" y="1573" width="0.4" height="15.0" fill="rgb(235,21,0)" rx="2" ry="2" />
<text  x="213.31" y="1583.5" ></text>
</g>
<g >
<title>__libc_read (6 samples, 0.10%)</title><rect x="85.1" y="2037" width="1.2" height="15.0" fill="rgb(252,181,20)" rx="2" ry="2" />
<text  x="88.09" y="2047.5" ></text>
</g>
<g >
<title>nlohmann::detail::input_stream_adapter::get_character (1 samples, 0.02%)</title><rect x="100.8" y="1893" width="0.2" height="15.0" fill="rgb(233,156,52)" rx="2" ry="2" />
<text  x="103.77" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.5" y="1109" width="0.1" height="15.0" fill="rgb(237,73,34)" rx="2" ry="2" />
<text  x="1173.45" y="1119.5" ></text>
</g>
<g >
<title>__x64_sys_read (6 samples, 0.10%)</title><rect x="85.1" y="1989" width="1.2" height="15.0" fill="rgb(254,77,4)" rx="2" ry="2" />
<text  x="88.09" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt;,  (4 samples, 0.07%)</title><rect x="209.9" y="1957" width="0.8" height="15.0" fill="rgb(221,81,51)" rx="2" ry="2" />
<text  x="212.92" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="1605" width="0.2" height="15.0" fill="rgb(231,213,29)" rx="2" ry="2" />
<text  x="82.87" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="169.3" y="1189" width="0.2" height="15.0" fill="rgb(209,167,16)" rx="2" ry="2" />
<text  x="172.28" y="1199.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (2 samples, 0.03%)</title><rect x="143.2" y="1557" width="0.3" height="15.0" fill="rgb(205,87,26)" rx="2" ry="2" />
<text  x="146.15" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="709" width="0.2" height="15.0" fill="rgb(237,65,0)" rx="2" ry="2" />
<text  x="82.87" y="719.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::load (1 samples, 0.02%)</title><rect x="79.9" y="37" width="0.2" height="15.0" fill="rgb(248,175,5)" rx="2" ry="2" />
<text  x="82.87" y="47.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.3" y="1589" width="0.2" height="15.0" fill="rgb(218,75,26)" rx="2" ry="2" />
<text  x="141.32" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (38 samples, 0.62%)</title><rect x="129.6" y="1813" width="7.4" height="15.0" fill="rgb(210,159,18)" rx="2" ry="2" />
<text  x="132.61" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_try_char (1 samples, 0.02%)</title><rect x="123.2" y="1701" width="0.2" height="15.0" fill="rgb(249,93,11)" rx="2" ry="2" />
<text  x="126.22" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.5" y="533" width="0.1" height="15.0" fill="rgb(245,148,21)" rx="2" ry="2" />
<text  x="1173.45" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="168.9" y="1797" width="0.6" height="15.0" fill="rgb(228,70,44)" rx="2" ry="2" />
<text  x="171.89" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.5" y="1861" width="0.1" height="15.0" fill="rgb(208,31,17)" rx="2" ry="2" />
<text  x="1173.45" y="1871.5" ></text>
</g>
<g >
<title>std::locale::locale (3 samples, 0.05%)</title><rect x="342.9" y="1989" width="0.6" height="15.0" fill="rgb(234,90,46)" rx="2" ry="2" />
<text  x="345.89" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.6" y="997" width="0.2" height="15.0" fill="rgb(239,88,52)" rx="2" ry="2" />
<text  x="1173.65" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="169.3" y="1029" width="0.2" height="15.0" fill="rgb(228,49,24)" rx="2" ry="2" />
<text  x="172.28" y="1039.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="565" width="0.2" height="15.0" fill="rgb(226,153,44)" rx="2" ry="2" />
<text  x="82.87" y="575.5" ></text>
</g>
<g >
<title>up_read (1 samples, 0.02%)</title><rect x="442.0" y="1909" width="0.2" height="15.0" fill="rgb(232,173,30)" rx="2" ry="2" />
<text  x="444.98" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.6" y="1269" width="0.2" height="15.0" fill="rgb(209,37,38)" rx="2" ry="2" />
<text  x="1173.65" y="1279.5" ></text>
</g>
<g >
<title>free_unref_page_list (1 samples, 0.02%)</title><rect x="581.7" y="1781" width="0.2" height="15.0" fill="rgb(242,68,19)" rx="2" ry="2" />
<text  x="584.71" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="101" width="0.2" height="15.0" fill="rgb(229,220,13)" rx="2" ry="2" />
<text  x="1173.07" y="111.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (53 samples, 0.87%)</title><rect x="1122.8" y="2053" width="10.3" height="15.0" fill="rgb(219,210,49)" rx="2" ry="2" />
<text  x="1125.84" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (1 samples, 0.02%)</title><rect x="168.7" y="1765" width="0.2" height="15.0" fill="rgb(225,9,13)" rx="2" ry="2" />
<text  x="171.70" y="1775.5" ></text>
</g>
<g >
<title>__dynamic_cast (9 samples, 0.15%)</title><rect x="139.5" y="1573" width="1.7" height="15.0" fill="rgb(234,42,41)" rx="2" ry="2" />
<text  x="142.48" y="1583.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (2 samples, 0.03%)</title><rect x="184.4" y="1621" width="0.4" height="15.0" fill="rgb(235,116,19)" rx="2" ry="2" />
<text  x="187.38" y="1631.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (28 samples, 0.46%)</title><rect x="435.2" y="1861" width="5.4" height="15.0" fill="rgb(229,213,10)" rx="2" ry="2" />
<text  x="438.20" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.3" y="1573" width="0.2" height="15.0" fill="rgb(243,147,45)" rx="2" ry="2" />
<text  x="1173.26" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="168.9" y="1909" width="0.6" height="15.0" fill="rgb(218,167,20)" rx="2" ry="2" />
<text  x="171.89" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="168.9" y="1301" width="0.2" height="15.0" fill="rgb(254,52,9)" rx="2" ry="2" />
<text  x="171.89" y="1311.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::computeSubwords (88 samples, 1.44%)</title><rect x="943.4" y="2053" width="17.1" height="15.0" fill="rgb(236,127,16)" rx="2" ry="2" />
<text  x="946.43" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.3" y="229" width="0.2" height="15.0" fill="rgb(214,107,10)" rx="2" ry="2" />
<text  x="1173.26" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.6" y="1877" width="0.2" height="15.0" fill="rgb(216,6,9)" rx="2" ry="2" />
<text  x="1173.65" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="165" width="0.2" height="15.0" fill="rgb(221,19,19)" rx="2" ry="2" />
<text  x="1173.07" y="175.5" ></text>
</g>
<g >
<title>GetHost (185 samples, 3.03%)</title><rect x="102.7" y="1973" width="35.8" height="15.0" fill="rgb(214,46,46)" rx="2" ry="2" />
<text  x="105.70" y="1983.5" >Get..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.6" y="37" width="0.2" height="15.0" fill="rgb(220,36,16)" rx="2" ry="2" />
<text  x="1173.65" y="47.5" ></text>
</g>
<g >
<title>tgnews (6,097 samples, 100.00%)</title><rect x="10.0" y="2069" width="1180.0" height="15.0" fill="rgb(241,65,51)" rx="2" ry="2" />
<text  x="13.00" y="2079.5" >tgnews</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="169.3" y="245" width="0.2" height="15.0" fill="rgb(254,61,1)" rx="2" ry="2" />
<text  x="172.28" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="1221" width="0.2" height="15.0" fill="rgb(212,49,36)" rx="2" ry="2" />
<text  x="1173.07" y="1231.5" ></text>
</g>
<g >
<title>std::istream::sentry::sentry (2 samples, 0.03%)</title><rect x="1188.8" y="2053" width="0.4" height="15.0" fill="rgb(242,201,48)" rx="2" ry="2" />
<text  x="1191.84" y="2063.5" ></text>
</g>
<g >
<title>fasttext::QuantMatrix::addRowToVector (14 samples, 0.23%)</title><rect x="1095.7" y="2053" width="2.8" height="15.0" fill="rgb(234,55,36)" rx="2" ry="2" />
<text  x="1098.75" y="2063.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="827.7" y="1845" width="0.2" height="15.0" fill="rgb(208,98,54)" rx="2" ry="2" />
<text  x="830.70" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.0" y="1333" width="0.2" height="15.0" fill="rgb(235,95,43)" rx="2" ry="2" />
<text  x="13.00" y="1343.5" ></text>
</g>
<g >
<title>__handle_mm_fault (3 samples, 0.05%)</title><rect x="79.1" y="1957" width="0.6" height="15.0" fill="rgb(230,71,6)" rx="2" ry="2" />
<text  x="82.09" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.0" y="261" width="0.2" height="15.0" fill="rgb(215,203,12)" rx="2" ry="2" />
<text  x="13.00" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.3" y="885" width="0.2" height="15.0" fill="rgb(207,183,20)" rx="2" ry="2" />
<text  x="1173.26" y="895.5" ></text>
</g>
<g >
<title>Preprocess (1,423 samples, 23.34%)</title><rect x="588.9" y="1957" width="275.4" height="15.0" fill="rgb(235,135,7)" rx="2" ry="2" />
<text  x="591.87" y="1967.5" >Preprocess</text>
</g>
<g >
<title>page_fault (4 samples, 0.07%)</title><rect x="868.1" y="2021" width="0.8" height="15.0" fill="rgb(215,169,38)" rx="2" ry="2" />
<text  x="871.15" y="2031.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (1 samples, 0.02%)</title><rect x="433.7" y="1845" width="0.1" height="15.0" fill="rgb(233,185,3)" rx="2" ry="2" />
<text  x="436.65" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.5" y="261" width="0.1" height="15.0" fill="rgb(211,31,15)" rx="2" ry="2" />
<text  x="1173.45" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (1 samples, 0.02%)</title><rect x="209.2" y="1877" width="0.1" height="15.0" fill="rgb(252,190,15)" rx="2" ry="2" />
<text  x="212.15" y="1887.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.02%)</title><rect x="893.9" y="2005" width="0.2" height="15.0" fill="rgb(236,27,1)" rx="2" ry="2" />
<text  x="896.89" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.3" y="1317" width="0.2" height="15.0" fill="rgb(247,54,1)" rx="2" ry="2" />
<text  x="1173.26" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="1845" width="0.2" height="15.0" fill="rgb(207,84,43)" rx="2" ry="2" />
<text  x="1173.07" y="1855.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.03%)</title><rect x="1117.2" y="2053" width="0.4" height="15.0" fill="rgb(219,46,23)" rx="2" ry="2" />
<text  x="1120.23" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="485" width="0.2" height="15.0" fill="rgb(226,222,3)" rx="2" ry="2" />
<text  x="1173.07" y="495.5" ></text>
</g>
<g >
<title>onmt::add_final_token&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="860.2" y="1909" width="0.2" height="15.0" fill="rgb(240,48,50)" rx="2" ry="2" />
<text  x="863.21" y="1919.5" ></text>
</g>
<g >
<title>fasttext::ProductQuantizer::addcode (6 samples, 0.10%)</title><rect x="82.8" y="2021" width="1.1" height="15.0" fill="rgb(253,40,10)" rx="2" ry="2" />
<text  x="85.77" y="2031.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="174.5" y="1589" width="0.2" height="15.0" fill="rgb(240,65,23)" rx="2" ry="2" />
<text  x="177.51" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (173 samples, 2.84%)</title><rect x="103.5" y="1829" width="33.5" height="15.0" fill="rgb(240,149,11)" rx="2" ry="2" />
<text  x="106.48" y="1839.5" >st..</text>
</g>
<g >
<title>std::locale::id::_M_id@plt (1 samples, 0.02%)</title><rect x="143.5" y="1557" width="0.2" height="15.0" fill="rgb(236,170,54)" rx="2" ry="2" />
<text  x="146.54" y="1567.5" ></text>
</g>
<g >
<title>fasttext::Vector::addVector (6 samples, 0.10%)</title><rect x="329.9" y="1989" width="1.2" height="15.0" fill="rgb(252,172,1)" rx="2" ry="2" />
<text  x="332.92" y="1999.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (2 samples, 0.03%)</title><rect x="191.0" y="1621" width="0.3" height="15.0" fill="rgb(209,55,15)" rx="2" ry="2" />
<text  x="193.96" y="1631.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (3 samples, 0.05%)</title><rect x="167.7" y="1685" width="0.6" height="15.0" fill="rgb(238,18,4)" rx="2" ry="2" />
<text  x="170.73" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.6" y="693" width="0.2" height="15.0" fill="rgb(211,190,0)" rx="2" ry="2" />
<text  x="1173.65" y="703.5" ></text>
</g>
<g >
<title>malloc (6 samples, 0.10%)</title><rect x="875.3" y="2037" width="1.2" height="15.0" fill="rgb(210,89,30)" rx="2" ry="2" />
<text  x="878.31" y="2047.5" ></text>
</g>
<g >
<title>GetHost (160 samples, 2.62%)</title><rect x="138.5" y="1957" width="31.0" height="15.0" fill="rgb(222,192,22)" rx="2" ry="2" />
<text  x="141.51" y="1967.5" >Ge..</text>
</g>
<g >
<title>__pthread_once (1 samples, 0.02%)</title><rect x="892.9" y="2005" width="0.2" height="15.0" fill="rgb(219,220,42)" rx="2" ry="2" />
<text  x="895.92" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.3" y="1605" width="0.2" height="15.0" fill="rgb(209,121,12)" rx="2" ry="2" />
<text  x="1173.26" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.6" y="1445" width="0.2" height="15.0" fill="rgb(232,27,38)" rx="2" ry="2" />
<text  x="1173.65" y="1455.5" ></text>
</g>
<g >
<title>do_syscall_64 (6 samples, 0.10%)</title><rect x="85.1" y="2005" width="1.2" height="15.0" fill="rgb(228,104,47)" rx="2" ry="2" />
<text  x="88.09" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (37 samples, 0.61%)</title><rect x="192.7" y="1749" width="7.2" height="15.0" fill="rgb(206,159,9)" rx="2" ry="2" />
<text  x="195.70" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.3" y="517" width="0.2" height="15.0" fill="rgb(217,93,8)" rx="2" ry="2" />
<text  x="1173.26" y="527.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::getId (110 samples, 1.80%)</title><rect x="960.5" y="2053" width="21.3" height="15.0" fill="rgb(230,67,13)" rx="2" ry="2" />
<text  x="963.46" y="2063.5" >f..</text>
</g>
<g >
<title>page_remove_rmap (1 samples, 0.02%)</title><rect x="581.9" y="1829" width="0.2" height="15.0" fill="rgb(234,228,32)" rx="2" ry="2" />
<text  x="584.90" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.6" y="1317" width="0.2" height="15.0" fill="rgb(240,100,6)" rx="2" ry="2" />
<text  x="1173.65" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.0" y="1765" width="0.2" height="15.0" fill="rgb(232,20,32)" rx="2" ry="2" />
<text  x="13.00" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.6" y="805" width="0.2" height="15.0" fill="rgb(235,96,49)" rx="2" ry="2" />
<text  x="1173.65" y="815.5" ></text>
</g>
<g >
<title>__dynamic_cast (4 samples, 0.07%)</title><rect x="204.7" y="1685" width="0.8" height="15.0" fill="rgb(244,136,22)" rx="2" ry="2" />
<text  x="207.70" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.5" y="741" width="0.1" height="15.0" fill="rgb(244,74,34)" rx="2" ry="2" />
<text  x="1173.45" y="751.5" ></text>
</g>
<g >
<title>get_futex_key (1 samples, 0.02%)</title><rect x="42.1" y="1925" width="0.2" height="15.0" fill="rgb(245,92,14)" rx="2" ry="2" />
<text  x="45.13" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="373" width="0.2" height="15.0" fill="rgb(219,155,13)" rx="2" ry="2" />
<text  x="82.87" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.5" y="837" width="0.1" height="15.0" fill="rgb(243,122,54)" rx="2" ry="2" />
<text  x="1173.45" y="847.5" ></text>
</g>
<g >
<title>Eigen::internal::call_dense_assignment_loop&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_sum_op&lt;float, float&gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_quotient_op&lt;float, float&gt;, Eigen::CwiseUnaryOp&lt;Eigen::internal::scalar_opposite_op&lt;float&gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_sum_op&lt;float, float&gt;, Eigen::ArrayWrapper&lt;Eigen::Product&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt;, 0&gt; const&gt; const, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Array&lt;float, -1, -1, 0, -1, -1&gt; const&gt; const&gt; const&gt; const, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Array&lt;float, -1, -1, 0, -1, -1&gt; const&gt; const&gt; const, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Array&lt;float, -1, -1, 0, -1, -1&gt; const&gt; const&gt;, Eigen::internal::assign_op&lt;float, float&gt; &gt; (123 samples, 2.02%)</title><rect x="418.4" y="1973" width="23.8" height="15.0" fill="rgb(254,106,30)" rx="2" ry="2" />
<text  x="421.36" y="1983.5" >E..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.5" y="1445" width="0.1" height="15.0" fill="rgb(252,191,40)" rx="2" ry="2" />
<text  x="1173.45" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.6" y="1045" width="0.2" height="15.0" fill="rgb(216,83,53)" rx="2" ry="2" />
<text  x="1173.65" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.0" y="1045" width="0.2" height="15.0" fill="rgb(229,134,26)" rx="2" ry="2" />
<text  x="13.00" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="629" width="0.2" height="15.0" fill="rgb(207,157,31)" rx="2" ry="2" />
<text  x="1173.07" y="639.5" ></text>
</g>
<g >
<title>alloc_pages_vma (18 samples, 0.30%)</title><rect x="430.0" y="1861" width="3.5" height="15.0" fill="rgb(218,208,47)" rx="2" ry="2" />
<text  x="432.98" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (33 samples, 0.54%)</title><rect x="149.5" y="1669" width="6.4" height="15.0" fill="rgb(250,8,7)" rx="2" ry="2" />
<text  x="152.54" y="1679.5" ></text>
</g>
<g >
<title>operator delete[] (2 samples, 0.03%)</title><rect x="1117.8" y="2053" width="0.4" height="15.0" fill="rgb(213,162,12)" rx="2" ry="2" />
<text  x="1120.81" y="2063.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace_aux (3 samples, 0.05%)</title><rect x="1139.5" y="2053" width="0.6" height="15.0" fill="rgb(236,110,30)" rx="2" ry="2" />
<text  x="1142.49" y="2063.5" ></text>
</g>
<g >
<title>std::locale::~locale (1 samples, 0.02%)</title><rect x="343.5" y="1989" width="0.2" height="15.0" fill="rgb(240,9,12)" rx="2" ry="2" />
<text  x="346.47" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="169.3" y="1381" width="0.2" height="15.0" fill="rgb(251,36,25)" rx="2" ry="2" />
<text  x="172.28" y="1391.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="840.9" y="1861" width="0.2" height="15.0" fill="rgb(220,204,9)" rx="2" ry="2" />
<text  x="843.86" y="1871.5" ></text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.02%)</title><rect x="671.1" y="1749" width="0.2" height="15.0" fill="rgb(227,17,44)" rx="2" ry="2" />
<text  x="674.13" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="169.3" y="1301" width="0.2" height="15.0" fill="rgb(216,98,13)" rx="2" ry="2" />
<text  x="172.28" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.3" y="405" width="0.2" height="15.0" fill="rgb(215,4,18)" rx="2" ry="2" />
<text  x="1173.26" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (31 samples, 0.51%)</title><rect x="172.2" y="1701" width="6.0" height="15.0" fill="rgb(215,104,16)" rx="2" ry="2" />
<text  x="175.18" y="1711.5" ></text>
</g>
<g >
<title>TNewsCluster::GetFreshestTimestamp (1 samples, 0.02%)</title><rect x="345.0" y="2005" width="0.2" height="15.0" fill="rgb(248,46,36)" rx="2" ry="2" />
<text  x="348.01" y="2015.5" ></text>
</g>
<g >
<title>alloc_pages_vma (5 samples, 0.08%)</title><rect x="38.8" y="1957" width="1.0" height="15.0" fill="rgb(236,12,27)" rx="2" ry="2" />
<text  x="41.84" y="1967.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (2 samples, 0.03%)</title><rect x="136.0" y="1701" width="0.4" height="15.0" fill="rgb(217,101,30)" rx="2" ry="2" />
<text  x="138.99" y="1711.5" ></text>
</g>
<g >
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="755.1" y="1797" width="0.2" height="15.0" fill="rgb(212,9,36)" rx="2" ry="2" />
<text  x="758.12" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (72 samples, 1.18%)</title><rect x="103.5" y="1765" width="13.9" height="15.0" fill="rgb(225,104,54)" rx="2" ry="2" />
<text  x="106.48" y="1775.5" ></text>
</g>
<g >
<title>virtual thunk to std::__cxx11::basic_istringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_istringstream (3 samples, 0.05%)</title><rect x="893.7" y="2037" width="0.6" height="15.0" fill="rgb(221,36,11)" rx="2" ry="2" />
<text  x="896.69" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.0" y="789" width="0.2" height="15.0" fill="rgb(217,142,37)" rx="2" ry="2" />
<text  x="13.00" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.6" y="1173" width="0.2" height="15.0" fill="rgb(250,13,29)" rx="2" ry="2" />
<text  x="1173.65" y="1183.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="2005" width="0.2" height="15.0" fill="rgb(251,84,5)" rx="2" ry="2" />
<text  x="82.87" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.0" y="1093" width="0.2" height="15.0" fill="rgb(227,0,42)" rx="2" ry="2" />
<text  x="13.00" y="1103.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::at (3 samples, 0.05%)</title><rect x="86.6" y="1957" width="0.6" height="15.0" fill="rgb(220,134,32)" rx="2" ry="2" />
<text  x="89.64" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.0" y="197" width="0.2" height="15.0" fill="rgb(249,170,24)" rx="2" ry="2" />
<text  x="13.00" y="207.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (3 samples, 0.05%)</title><rect x="184.8" y="1621" width="0.5" height="15.0" fill="rgb(247,156,45)" rx="2" ry="2" />
<text  x="187.76" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="1621" width="0.2" height="15.0" fill="rgb(211,86,16)" rx="2" ry="2" />
<text  x="82.87" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (1 samples, 0.02%)</title><rect x="209.0" y="1781" width="0.2" height="15.0" fill="rgb(245,72,8)" rx="2" ry="2" />
<text  x="211.96" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="1605" width="0.2" height="15.0" fill="rgb(251,85,9)" rx="2" ry="2" />
<text  x="1173.07" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (40 samples, 0.66%)</title><rect x="200.4" y="1749" width="7.8" height="15.0" fill="rgb(248,207,11)" rx="2" ry="2" />
<text  x="203.44" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="965" width="0.2" height="15.0" fill="rgb(233,48,12)" rx="2" ry="2" />
<text  x="82.87" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.3" y="645" width="0.2" height="15.0" fill="rgb(209,49,37)" rx="2" ry="2" />
<text  x="1173.26" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="501" width="0.2" height="15.0" fill="rgb(232,34,19)" rx="2" ry="2" />
<text  x="1173.07" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.6" y="613" width="0.2" height="15.0" fill="rgb(219,70,19)" rx="2" ry="2" />
<text  x="1173.65" y="623.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (2 samples, 0.03%)</title><rect x="1045.8" y="2005" width="0.4" height="15.0" fill="rgb(242,84,21)" rx="2" ry="2" />
<text  x="1048.81" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="309" width="0.2" height="15.0" fill="rgb(235,27,27)" rx="2" ry="2" />
<text  x="82.87" y="319.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="341.9" y="1989" width="0.2" height="15.0" fill="rgb(254,102,30)" rx="2" ry="2" />
<text  x="344.92" y="1999.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (1 samples, 0.02%)</title><rect x="581.7" y="1845" width="0.2" height="15.0" fill="rgb(222,157,24)" rx="2" ry="2" />
<text  x="584.71" y="1855.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (2 samples, 0.03%)</title><rect x="199.9" y="1733" width="0.3" height="15.0" fill="rgb(229,96,46)" rx="2" ry="2" />
<text  x="202.86" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.3" y="469" width="0.2" height="15.0" fill="rgb(246,156,3)" rx="2" ry="2" />
<text  x="1173.26" y="479.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id@plt (1 samples, 0.02%)</title><rect x="122.1" y="1637" width="0.2" height="15.0" fill="rgb(226,99,25)" rx="2" ry="2" />
<text  x="125.06" y="1647.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.05%)</title><rect x="841.2" y="1893" width="0.6" height="15.0" fill="rgb(247,162,31)" rx="2" ry="2" />
<text  x="844.24" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="1973" width="0.2" height="15.0" fill="rgb(244,174,34)" rx="2" ry="2" />
<text  x="82.87" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.5" y="581" width="0.1" height="15.0" fill="rgb(230,4,24)" rx="2" ry="2" />
<text  x="1173.45" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="210.5" y="1397" width="0.2" height="15.0" fill="rgb(213,50,45)" rx="2" ry="2" />
<text  x="213.51" y="1407.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.02%)</title><rect x="755.1" y="1829" width="0.2" height="15.0" fill="rgb(241,50,16)" rx="2" ry="2" />
<text  x="758.12" y="1839.5" ></text>
</g>
<g >
<title>RunFasttextClf (1 samples, 0.02%)</title><rect x="588.7" y="1973" width="0.2" height="15.0" fill="rgb(221,21,36)" rx="2" ry="2" />
<text  x="591.68" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.5" y="901" width="0.1" height="15.0" fill="rgb(244,205,21)" rx="2" ry="2" />
<text  x="1173.45" y="911.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="1493" width="0.2" height="15.0" fill="rgb(239,206,14)" rx="2" ry="2" />
<text  x="82.87" y="1503.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append@plt (1 samples, 0.02%)</title><rect x="1133.1" y="2053" width="0.2" height="15.0" fill="rgb(244,8,33)" rx="2" ry="2" />
<text  x="1136.10" y="2063.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="710.2" y="1829" width="0.2" height="15.0" fill="rgb(240,75,16)" rx="2" ry="2" />
<text  x="713.22" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.5" y="869" width="0.1" height="15.0" fill="rgb(252,85,36)" rx="2" ry="2" />
<text  x="1173.45" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (1 samples, 0.02%)</title><rect x="144.3" y="1701" width="0.2" height="15.0" fill="rgb(211,86,2)" rx="2" ry="2" />
<text  x="147.32" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="168.9" y="1365" width="0.2" height="15.0" fill="rgb(230,145,49)" rx="2" ry="2" />
<text  x="171.89" y="1375.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.02%)</title><rect x="87.4" y="1973" width="0.2" height="15.0" fill="rgb(218,144,35)" rx="2" ry="2" />
<text  x="90.42" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.6" y="405" width="0.2" height="15.0" fill="rgb(249,65,9)" rx="2" ry="2" />
<text  x="1173.65" y="415.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::json_value::destroy (1 samples, 0.02%)</title><rect x="88.2" y="1989" width="0.2" height="15.0" fill="rgb(214,60,45)" rx="2" ry="2" />
<text  x="91.19" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="1301" width="0.2" height="15.0" fill="rgb(206,128,0)" rx="2" ry="2" />
<text  x="82.87" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.5" y="1413" width="0.1" height="15.0" fill="rgb(248,65,35)" rx="2" ry="2" />
<text  x="1173.45" y="1423.5" ></text>
</g>
<g >
<title>try_charge (3 samples, 0.05%)</title><rect x="441.4" y="1845" width="0.6" height="15.0" fill="rgb(219,101,9)" rx="2" ry="2" />
<text  x="444.40" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.6" y="293" width="0.2" height="15.0" fill="rgb(254,46,41)" rx="2" ry="2" />
<text  x="1173.65" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.3" y="1077" width="0.2" height="15.0" fill="rgb(251,17,3)" rx="2" ry="2" />
<text  x="1173.26" y="1087.5" ></text>
</g>
<g >
<title>__lru_cache_add (1 samples, 0.02%)</title><rect x="440.6" y="1861" width="0.2" height="15.0" fill="rgb(210,178,19)" rx="2" ry="2" />
<text  x="443.62" y="1871.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (11 samples, 0.18%)</title><rect x="894.5" y="2053" width="2.1" height="15.0" fill="rgb(230,75,29)" rx="2" ry="2" />
<text  x="897.47" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.6" y="1061" width="0.2" height="15.0" fill="rgb(217,214,9)" rx="2" ry="2" />
<text  x="1173.65" y="1071.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;std::__detail::_State&lt;char&gt; const*, std::__detail::_State&lt;char&gt;*&gt; (2 samples, 0.03%)</title><rect x="199.9" y="1717" width="0.3" height="15.0" fill="rgb(232,48,36)" rx="2" ry="2" />
<text  x="202.86" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (3 samples, 0.05%)</title><rect x="137.3" y="1893" width="0.6" height="15.0" fill="rgb(234,130,16)" rx="2" ry="2" />
<text  x="140.35" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="169.3" y="1141" width="0.2" height="15.0" fill="rgb(227,133,39)" rx="2" ry="2" />
<text  x="172.28" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.5" y="1173" width="0.1" height="15.0" fill="rgb(212,218,42)" rx="2" ry="2" />
<text  x="1173.45" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.5" y="1141" width="0.1" height="15.0" fill="rgb(206,113,35)" rx="2" ry="2" />
<text  x="1173.45" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.3" y="101" width="0.2" height="15.0" fill="rgb(229,137,50)" rx="2" ry="2" />
<text  x="1173.26" y="111.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="169.3" y="229" width="0.2" height="15.0" fill="rgb(239,145,5)" rx="2" ry="2" />
<text  x="172.28" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.0" y="837" width="0.2" height="15.0" fill="rgb(229,45,53)" rx="2" ry="2" />
<text  x="13.00" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.3" y="1829" width="0.2" height="15.0" fill="rgb(226,37,16)" rx="2" ry="2" />
<text  x="1173.26" y="1839.5" ></text>
</g>
<g >
<title>try_charge (1 samples, 0.02%)</title><rect x="40.0" y="1925" width="0.2" height="15.0" fill="rgb(221,54,7)" rx="2" ry="2" />
<text  x="43.00" y="1935.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::_M_do_set (1,439 samples, 23.60%)</title><rect x="587.1" y="2021" width="278.5" height="15.0" fill="rgb(209,86,37)" rx="2" ry="2" />
<text  x="590.13" y="2031.5" >std::__future_base::_State_baseV2::_M..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.3" y="1221" width="0.2" height="15.0" fill="rgb(226,133,4)" rx="2" ry="2" />
<text  x="1173.26" y="1231.5" ></text>
</g>
<g >
<title>TSlinkClustering::ClusterBatch (1,222 samples, 20.04%)</title><rect x="345.2" y="1989" width="236.5" height="15.0" fill="rgb(211,23,52)" rx="2" ry="2" />
<text  x="348.21" y="1999.5" >TSlinkClustering::ClusterBatch</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="168.9" y="1749" width="0.6" height="15.0" fill="rgb(251,60,31)" rx="2" ry="2" />
<text  x="171.89" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="169.3" y="469" width="0.2" height="15.0" fill="rgb(246,128,17)" rx="2" ry="2" />
<text  x="172.28" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (1 samples, 0.02%)</title><rect x="209.0" y="1797" width="0.2" height="15.0" fill="rgb(247,158,28)" rx="2" ry="2" />
<text  x="211.96" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.5" y="981" width="0.1" height="15.0" fill="rgb(237,229,35)" rx="2" ry="2" />
<text  x="1173.45" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="169.3" y="357" width="0.2" height="15.0" fill="rgb(222,196,17)" rx="2" ry="2" />
<text  x="172.28" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.5" y="1429" width="0.1" height="15.0" fill="rgb(211,116,52)" rx="2" ry="2" />
<text  x="1173.45" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (2 samples, 0.03%)</title><rect x="199.9" y="1765" width="0.3" height="15.0" fill="rgb(209,106,45)" rx="2" ry="2" />
<text  x="202.86" y="1775.5" ></text>
</g>
<g >
<title>std::_Rb_tree_insert_and_rebalance (1 samples, 0.02%)</title><rect x="101.0" y="1925" width="0.2" height="15.0" fill="rgb(221,97,4)" rx="2" ry="2" />
<text  x="103.96" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1170.5" y="2037" width="0.3" height="15.0" fill="rgb(209,84,20)" rx="2" ry="2" />
<text  x="1173.45" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.6" y="1781" width="0.2" height="15.0" fill="rgb(243,221,47)" rx="2" ry="2" />
<text  x="1173.65" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.0" y="1013" width="0.2" height="15.0" fill="rgb(228,53,43)" rx="2" ry="2" />
<text  x="13.00" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="1125" width="0.2" height="15.0" fill="rgb(232,179,39)" rx="2" ry="2" />
<text  x="1173.07" y="1135.5" ></text>
</g>
<g >
<title>__pthread_once_slow (1,443 samples, 23.67%)</title><rect x="586.4" y="2037" width="279.2" height="15.0" fill="rgb(254,178,28)" rx="2" ry="2" />
<text  x="589.36" y="2047.5" >__pthread_once_slow</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="2037" width="0.2" height="15.0" fill="rgb(253,38,34)" rx="2" ry="2" />
<text  x="1173.07" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (30 samples, 0.49%)</title><rect x="117.4" y="1685" width="5.8" height="15.0" fill="rgb(252,228,6)" rx="2" ry="2" />
<text  x="120.41" y="1695.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="450.9" y="1957" width="0.2" height="15.0" fill="rgb(227,180,47)" rx="2" ry="2" />
<text  x="453.88" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.3" y="1141" width="0.2" height="15.0" fill="rgb(232,194,14)" rx="2" ry="2" />
<text  x="1173.26" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.6" y="1797" width="0.2" height="15.0" fill="rgb(213,188,40)" rx="2" ry="2" />
<text  x="1173.65" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.0" y="1669" width="0.2" height="15.0" fill="rgb(250,160,17)" rx="2" ry="2" />
<text  x="13.00" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="169.3" y="997" width="0.2" height="15.0" fill="rgb(247,195,16)" rx="2" ry="2" />
<text  x="172.28" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (177 samples, 2.90%)</title><rect x="103.1" y="1893" width="34.2" height="15.0" fill="rgb(253,131,45)" rx="2" ry="2" />
<text  x="106.09" y="1903.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.0" y="1701" width="0.2" height="15.0" fill="rgb(245,106,28)" rx="2" ry="2" />
<text  x="13.00" y="1711.5" ></text>
</g>
<g >
<title>alloc_pages_vma (2 samples, 0.03%)</title><rect x="746.6" y="1797" width="0.4" height="15.0" fill="rgb(216,147,48)" rx="2" ry="2" />
<text  x="749.60" y="1807.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (11 samples, 0.18%)</title><rect x="220.8" y="1989" width="2.1" height="15.0" fill="rgb(252,105,14)" rx="2" ry="2" />
<text  x="223.76" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.5" y="597" width="0.1" height="15.0" fill="rgb(241,117,45)" rx="2" ry="2" />
<text  x="1173.45" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="581" width="0.2" height="15.0" fill="rgb(230,102,2)" rx="2" ry="2" />
<text  x="1173.07" y="591.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="755.1" y="1861" width="0.2" height="15.0" fill="rgb(241,49,5)" rx="2" ry="2" />
<text  x="758.12" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (152 samples, 2.49%)</title><rect x="139.1" y="1829" width="29.4" height="15.0" fill="rgb(249,98,24)" rx="2" ry="2" />
<text  x="142.09" y="1839.5" >st..</text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (1 samples, 0.02%)</title><rect x="210.7" y="1973" width="0.2" height="15.0" fill="rgb(214,49,37)" rx="2" ry="2" />
<text  x="213.70" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.0" y="1813" width="0.2" height="15.0" fill="rgb(206,109,47)" rx="2" ry="2" />
<text  x="13.00" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.6" y="1253" width="0.2" height="15.0" fill="rgb(236,62,7)" rx="2" ry="2" />
<text  x="1173.65" y="1263.5" ></text>
</g>
<g >
<title>@plt (5 samples, 0.08%)</title><rect x="1156.9" y="2037" width="1.0" height="15.0" fill="rgb(210,71,26)" rx="2" ry="2" />
<text  x="1159.91" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (153 samples, 2.51%)</title><rect x="139.1" y="1877" width="29.6" height="15.0" fill="rgb(241,220,16)" rx="2" ry="2" />
<text  x="142.09" y="1887.5" >st..</text>
</g>
<g >
<title>fasttext::DenseMatrix::addRowToVector (539 samples, 8.84%)</title><rect x="455.7" y="1973" width="104.3" height="15.0" fill="rgb(225,51,50)" rx="2" ry="2" />
<text  x="458.72" y="1983.5" >fasttext::De..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="389" width="0.2" height="15.0" fill="rgb(216,94,25)" rx="2" ry="2" />
<text  x="1173.07" y="399.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (3 samples, 0.05%)</title><rect x="864.9" y="1973" width="0.5" height="15.0" fill="rgb(235,122,42)" rx="2" ry="2" />
<text  x="867.86" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (13 samples, 0.21%)</title><rect x="158.8" y="1653" width="2.5" height="15.0" fill="rgb(247,100,18)" rx="2" ry="2" />
<text  x="161.83" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (190 samples, 3.12%)</title><rect x="172.0" y="1877" width="36.8" height="15.0" fill="rgb(211,112,50)" rx="2" ry="2" />
<text  x="174.99" y="1887.5" >std..</text>
</g>
<g >
<title>std::locale::id::_M_id (1 samples, 0.02%)</title><rect x="110.3" y="1589" width="0.1" height="15.0" fill="rgb(225,27,35)" rx="2" ry="2" />
<text  x="113.25" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (2 samples, 0.03%)</title><rect x="199.9" y="1749" width="0.3" height="15.0" fill="rgb(251,176,30)" rx="2" ry="2" />
<text  x="202.86" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="149" width="0.2" height="15.0" fill="rgb(225,216,49)" rx="2" ry="2" />
<text  x="1173.07" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1170.5" y="1957" width="0.3" height="15.0" fill="rgb(225,199,39)" rx="2" ry="2" />
<text  x="1173.45" y="1967.5" ></text>
</g>
<g >
<title>onmt::unicode::is_letter@plt (2 samples, 0.03%)</title><rect x="827.9" y="1893" width="0.4" height="15.0" fill="rgb(221,25,23)" rx="2" ry="2" />
<text  x="830.89" y="1903.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::basic_regex&lt;char const*&gt; (155 samples, 2.54%)</title><rect x="138.9" y="1941" width="30.0" height="15.0" fill="rgb(216,104,34)" rx="2" ry="2" />
<text  x="141.90" y="1951.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="169.1" y="1573" width="0.4" height="15.0" fill="rgb(233,104,15)" rx="2" ry="2" />
<text  x="172.09" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.3" y="1621" width="0.2" height="15.0" fill="rgb(247,65,17)" rx="2" ry="2" />
<text  x="141.32" y="1631.5" ></text>
</g>
<g >
<title>clear_page_erms (8 samples, 0.13%)</title><rect x="708.5" y="1749" width="1.5" height="15.0" fill="rgb(234,9,35)" rx="2" ry="2" />
<text  x="711.48" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.0" y="149" width="0.2" height="15.0" fill="rgb(233,75,22)" rx="2" ry="2" />
<text  x="13.00" y="159.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.03%)</title><rect x="127.7" y="1653" width="0.4" height="15.0" fill="rgb(210,146,7)" rx="2" ry="2" />
<text  x="130.67" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="1989" width="0.2" height="15.0" fill="rgb(233,200,8)" rx="2" ry="2" />
<text  x="82.87" y="1999.5" ></text>
</g>
<g >
<title>fasttext::DenseMatrix::addRowToVector (513 samples, 8.41%)</title><rect x="224.4" y="1989" width="99.3" height="15.0" fill="rgb(245,41,28)" rx="2" ry="2" />
<text  x="227.44" y="1999.5" >fasttext::De..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.6" y="277" width="0.2" height="15.0" fill="rgb(205,59,21)" rx="2" ry="2" />
<text  x="1173.65" y="287.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (10 samples, 0.16%)</title><rect x="856.1" y="1893" width="2.0" height="15.0" fill="rgb(208,123,14)" rx="2" ry="2" />
<text  x="859.15" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="892.9" y="2021" width="0.6" height="15.0" fill="rgb(240,90,19)" rx="2" ry="2" />
<text  x="895.92" y="2031.5" ></text>
</g>
<g >
<title>handle_mm_fault (2 samples, 0.03%)</title><rect x="746.6" y="1829" width="0.4" height="15.0" fill="rgb(234,15,25)" rx="2" ry="2" />
<text  x="749.60" y="1839.5" ></text>
</g>
<g >
<title>operator delete@plt (1 samples, 0.02%)</title><rect x="841.8" y="1893" width="0.2" height="15.0" fill="rgb(220,114,33)" rx="2" ry="2" />
<text  x="844.83" y="1903.5" ></text>
</g>
<g >
<title>__dynamic_cast (6 samples, 0.10%)</title><rect x="130.2" y="1701" width="1.1" height="15.0" fill="rgb(251,185,27)" rx="2" ry="2" />
<text  x="133.19" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.5" y="389" width="0.1" height="15.0" fill="rgb(230,186,53)" rx="2" ry="2" />
<text  x="1173.45" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (36 samples, 0.59%)</title><rect x="178.4" y="1685" width="6.9" height="15.0" fill="rgb(240,199,18)" rx="2" ry="2" />
<text  x="181.38" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.0" y="1221" width="0.2" height="15.0" fill="rgb(226,53,25)" rx="2" ry="2" />
<text  x="13.00" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="277" width="0.2" height="15.0" fill="rgb(247,27,33)" rx="2" ry="2" />
<text  x="1173.07" y="287.5" ></text>
</g>
<g >
<title>swake_up_one (1 samples, 0.02%)</title><rect x="323.5" y="1861" width="0.2" height="15.0" fill="rgb(237,214,17)" rx="2" ry="2" />
<text  x="326.53" y="1871.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::str[abi:cxx11]@plt (2 samples, 0.03%)</title><rect x="592.0" y="1909" width="0.4" height="15.0" fill="rgb(244,150,24)" rx="2" ry="2" />
<text  x="594.97" y="1919.5" ></text>
</g>
<g >
<title>std::vector&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::allocator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;::vector (1 samples, 0.02%)</title><rect x="586.2" y="1909" width="0.2" height="15.0" fill="rgb(213,6,19)" rx="2" ry="2" />
<text  x="589.16" y="1919.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::should_preserve (2 samples, 0.03%)</title><rect x="591.2" y="1909" width="0.4" height="15.0" fill="rgb(212,189,44)" rx="2" ry="2" />
<text  x="594.19" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="245" width="0.2" height="15.0" fill="rgb(254,33,3)" rx="2" ry="2" />
<text  x="1173.07" y="255.5" ></text>
</g>
<g >
<title>do_page_fault (7 samples, 0.11%)</title><rect x="78.3" y="2005" width="1.4" height="15.0" fill="rgb(227,37,34)" rx="2" ry="2" />
<text  x="81.32" y="2015.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (2 samples, 0.03%)</title><rect x="155.2" y="1621" width="0.3" height="15.0" fill="rgb(235,218,14)" rx="2" ry="2" />
<text  x="158.15" y="1631.5" ></text>
</g>
<g >
<title>cfree (6 samples, 0.10%)</title><rect x="454.6" y="1973" width="1.1" height="15.0" fill="rgb(249,176,28)" rx="2" ry="2" />
<text  x="457.56" y="1983.5" ></text>
</g>
<g >
<title>free@plt (1 samples, 0.02%)</title><rect x="118.8" y="1637" width="0.2" height="15.0" fill="rgb(248,129,23)" rx="2" ry="2" />
<text  x="121.77" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.5" y="1397" width="0.1" height="15.0" fill="rgb(216,26,7)" rx="2" ry="2" />
<text  x="1173.45" y="1407.5" ></text>
</g>
<g >
<title>mem_cgroup_throttle_swaprate (1 samples, 0.02%)</title><rect x="39.8" y="1941" width="0.2" height="15.0" fill="rgb(222,184,34)" rx="2" ry="2" />
<text  x="42.80" y="1951.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;TDocument, std::allocator&lt;TDocument&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;TDocument, std::allocator&lt;TDocument&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;TDocument, std::allocator&lt;TDocument&gt; &gt; &gt; &gt; &gt;::_M_erase (1 samples, 0.02%)</title><rect x="585.6" y="1989" width="0.2" height="15.0" fill="rgb(227,84,0)" rx="2" ry="2" />
<text  x="588.58" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (31 samples, 0.51%)</title><rect x="172.2" y="1653" width="6.0" height="15.0" fill="rgb(206,81,8)" rx="2" ry="2" />
<text  x="175.18" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.6" y="709" width="0.2" height="15.0" fill="rgb(208,91,48)" rx="2" ry="2" />
<text  x="1173.65" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (36 samples, 0.59%)</title><rect x="178.4" y="1653" width="6.9" height="15.0" fill="rgb(226,8,4)" rx="2" ry="2" />
<text  x="181.38" y="1663.5" ></text>
</g>
<g >
<title>malloc@plt (1 samples, 0.02%)</title><rect x="200.1" y="1701" width="0.1" height="15.0" fill="rgb(206,31,13)" rx="2" ry="2" />
<text  x="203.05" y="1711.5" ></text>
</g>
<g >
<title>Summarize (901 samples, 14.78%)</title><rect x="170.1" y="2005" width="174.3" height="15.0" fill="rgb(211,63,2)" rx="2" ry="2" />
<text  x="173.06" y="2015.5" >Summarize</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.6" y="1029" width="0.2" height="15.0" fill="rgb(248,52,26)" rx="2" ry="2" />
<text  x="1173.65" y="1039.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::append@plt (6 samples, 0.10%)</title><rect x="615.0" y="1893" width="1.2" height="15.0" fill="rgb(241,69,13)" rx="2" ry="2" />
<text  x="618.00" y="1903.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="202.8" y="1701" width="0.2" height="15.0" fill="rgb(236,30,54)" rx="2" ry="2" />
<text  x="205.76" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.0" y="981" width="0.2" height="15.0" fill="rgb(236,74,4)" rx="2" ry="2" />
<text  x="13.00" y="991.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="1813" width="0.2" height="15.0" fill="rgb(214,67,25)" rx="2" ry="2" />
<text  x="82.87" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="210.3" y="1589" width="0.4" height="15.0" fill="rgb(215,196,23)" rx="2" ry="2" />
<text  x="213.31" y="1599.5" ></text>
</g>
<g >
<title>std::istream::_M_extract&lt;long&gt; (1 samples, 0.02%)</title><rect x="185.5" y="1717" width="0.2" height="15.0" fill="rgb(236,2,14)" rx="2" ry="2" />
<text  x="188.54" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.5" y="789" width="0.1" height="15.0" fill="rgb(245,168,12)" rx="2" ry="2" />
<text  x="1173.45" y="799.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.02%)</title><rect x="142.8" y="1557" width="0.2" height="15.0" fill="rgb(226,225,23)" rx="2" ry="2" />
<text  x="145.77" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.5" y="1253" width="0.1" height="15.0" fill="rgb(230,190,16)" rx="2" ry="2" />
<text  x="1173.45" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="169.1" y="1173" width="0.2" height="15.0" fill="rgb(205,21,53)" rx="2" ry="2" />
<text  x="172.09" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (33 samples, 0.54%)</title><rect x="149.5" y="1685" width="6.4" height="15.0" fill="rgb(232,101,43)" rx="2" ry="2" />
<text  x="152.54" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="1717" width="0.2" height="15.0" fill="rgb(244,87,26)" rx="2" ry="2" />
<text  x="1173.07" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="169.3" y="485" width="0.2" height="15.0" fill="rgb(239,134,24)" rx="2" ry="2" />
<text  x="172.28" y="495.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="192.9" y="1685" width="0.2" height="15.0" fill="rgb(243,166,12)" rx="2" ry="2" />
<text  x="195.89" y="1695.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.02%)</title><rect x="87.4" y="1957" width="0.2" height="15.0" fill="rgb(213,37,10)" rx="2" ry="2" />
<text  x="90.42" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.3" y="1861" width="0.2" height="15.0" fill="rgb(207,180,12)" rx="2" ry="2" />
<text  x="1173.26" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="169.3" y="1045" width="0.2" height="15.0" fill="rgb(249,195,50)" rx="2" ry="2" />
<text  x="172.28" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="169.1" y="1317" width="0.2" height="15.0" fill="rgb(246,197,17)" rx="2" ry="2" />
<text  x="172.09" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.3" y="917" width="0.2" height="15.0" fill="rgb(209,200,22)" rx="2" ry="2" />
<text  x="1173.26" y="927.5" ></text>
</g>
<g >
<title>__dynamic_cast (4 samples, 0.07%)</title><rect x="453.4" y="1973" width="0.8" height="15.0" fill="rgb(239,148,4)" rx="2" ry="2" />
<text  x="456.40" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.0" y="85" width="0.2" height="15.0" fill="rgb(219,22,21)" rx="2" ry="2" />
<text  x="13.00" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (19 samples, 0.31%)</title><rect x="125.3" y="1669" width="3.7" height="15.0" fill="rgb(207,179,20)" rx="2" ry="2" />
<text  x="128.35" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="757" width="0.2" height="15.0" fill="rgb(231,30,20)" rx="2" ry="2" />
<text  x="82.87" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.3" y="1669" width="0.2" height="15.0" fill="rgb(228,112,37)" rx="2" ry="2" />
<text  x="141.32" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1170.5" y="1941" width="0.3" height="15.0" fill="rgb(227,179,53)" rx="2" ry="2" />
<text  x="1173.45" y="1951.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="323.5" y="1925" width="0.2" height="15.0" fill="rgb(252,80,46)" rx="2" ry="2" />
<text  x="326.53" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.3" y="373" width="0.2" height="15.0" fill="rgb(252,115,32)" rx="2" ry="2" />
<text  x="1173.26" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.3" y="1157" width="0.2" height="15.0" fill="rgb(234,189,48)" rx="2" ry="2" />
<text  x="1173.26" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="210.3" y="1637" width="0.4" height="15.0" fill="rgb(226,170,34)" rx="2" ry="2" />
<text  x="213.31" y="1647.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::num_get&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="84.9" y="2021" width="0.2" height="15.0" fill="rgb(226,15,21)" rx="2" ry="2" />
<text  x="87.90" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (34 samples, 0.56%)</title><rect x="155.9" y="1733" width="6.6" height="15.0" fill="rgb(249,206,41)" rx="2" ry="2" />
<text  x="158.93" y="1743.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::clear (1 samples, 0.02%)</title><rect x="616.2" y="1893" width="0.2" height="15.0" fill="rgb(249,189,49)" rx="2" ry="2" />
<text  x="619.16" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="245" width="0.2" height="15.0" fill="rgb(248,116,10)" rx="2" ry="2" />
<text  x="82.87" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="1381" width="0.2" height="15.0" fill="rgb(217,67,12)" rx="2" ry="2" />
<text  x="1173.07" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.0" y="437" width="0.2" height="15.0" fill="rgb(239,6,6)" rx="2" ry="2" />
<text  x="13.00" y="447.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="146.3" y="1605" width="0.1" height="15.0" fill="rgb(207,175,3)" rx="2" ry="2" />
<text  x="149.25" y="1615.5" ></text>
</g>
<g >
<title>futex_wait (5 samples, 0.08%)</title><rect x="101.7" y="1893" width="1.0" height="15.0" fill="rgb(228,199,49)" rx="2" ry="2" />
<text  x="104.74" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.5" y="101" width="0.1" height="15.0" fill="rgb(242,8,35)" rx="2" ry="2" />
<text  x="1173.45" y="111.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="710.2" y="1861" width="0.2" height="15.0" fill="rgb(222,146,1)" rx="2" ry="2" />
<text  x="713.22" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_try_char (1 samples, 0.02%)</title><rect x="168.5" y="1845" width="0.2" height="15.0" fill="rgb(221,182,33)" rx="2" ry="2" />
<text  x="171.51" y="1855.5" ></text>
</g>
<g >
<title>__dynamic_cast (5 samples, 0.08%)</title><rect x="111.2" y="1621" width="1.0" height="15.0" fill="rgb(241,83,1)" rx="2" ry="2" />
<text  x="114.22" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1170.5" y="2005" width="0.3" height="15.0" fill="rgb(243,94,54)" rx="2" ry="2" />
<text  x="1173.45" y="2015.5" ></text>
</g>
<g >
<title>std::__merge_without_buffer&lt;__gnu_cxx::__normal_iterator&lt;TWeightedDoc*, std::vector&lt;TWeightedDoc, std::allocator&lt;TWeightedDoc&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;TNewsCluster::SortByWeights (90 samples, 1.48%)</title><rect x="1170.8" y="2053" width="17.5" height="15.0" fill="rgb(253,220,15)" rx="2" ry="2" />
<text  x="1173.84" y="2063.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (4 samples, 0.07%)</title><rect x="197.9" y="1653" width="0.8" height="15.0" fill="rgb(228,147,1)" rx="2" ry="2" />
<text  x="200.93" y="1663.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_Alloc_node&gt; (1 samples, 0.02%)</title><rect x="586.2" y="1957" width="0.2" height="15.0" fill="rgb(208,99,15)" rx="2" ry="2" />
<text  x="589.16" y="1967.5" ></text>
</g>
<g >
<title>strcmp@plt (7 samples, 0.11%)</title><rect x="1186.9" y="2037" width="1.4" height="15.0" fill="rgb(216,35,4)" rx="2" ry="2" />
<text  x="1189.90" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (1 samples, 0.02%)</title><rect x="137.2" y="1845" width="0.1" height="15.0" fill="rgb(251,78,28)" rx="2" ry="2" />
<text  x="140.15" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="197" width="0.2" height="15.0" fill="rgb(239,180,9)" rx="2" ry="2" />
<text  x="1173.07" y="207.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="1285" width="0.2" height="15.0" fill="rgb(207,49,2)" rx="2" ry="2" />
<text  x="82.87" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.6" y="1861" width="0.2" height="15.0" fill="rgb(233,147,10)" rx="2" ry="2" />
<text  x="1173.65" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.6" y="1125" width="0.2" height="15.0" fill="rgb(244,115,38)" rx="2" ry="2" />
<text  x="1173.65" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="677" width="0.2" height="15.0" fill="rgb(246,193,21)" rx="2" ry="2" />
<text  x="1173.07" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="1493" width="0.2" height="15.0" fill="rgb(244,59,20)" rx="2" ry="2" />
<text  x="1173.07" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="169.1" y="1365" width="0.2" height="15.0" fill="rgb(221,111,9)" rx="2" ry="2" />
<text  x="172.09" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="169.3" y="1109" width="0.2" height="15.0" fill="rgb(247,208,34)" rx="2" ry="2" />
<text  x="172.28" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.3" y="1397" width="0.2" height="15.0" fill="rgb(227,11,5)" rx="2" ry="2" />
<text  x="1173.26" y="1407.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="1253" width="0.2" height="15.0" fill="rgb(246,42,8)" rx="2" ry="2" />
<text  x="82.87" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="169.1" y="1557" width="0.4" height="15.0" fill="rgb(230,160,54)" rx="2" ry="2" />
<text  x="172.09" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="325" width="0.2" height="15.0" fill="rgb(221,152,48)" rx="2" ry="2" />
<text  x="1173.07" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="169.1" y="1285" width="0.2" height="15.0" fill="rgb(205,151,18)" rx="2" ry="2" />
<text  x="172.09" y="1295.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;std::unique_ptr&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;  (1,438 samples, 23.59%)</title><rect x="587.3" y="2005" width="278.3" height="15.0" fill="rgb(205,179,47)" rx="2" ry="2" />
<text  x="590.32" y="2015.5" >std::_Function_handler&lt;std::unique_pt..</text>
</g>
<g >
<title>std::locale::id::_M_id (1 samples, 0.02%)</title><rect x="121.9" y="1637" width="0.2" height="15.0" fill="rgb(237,124,28)" rx="2" ry="2" />
<text  x="124.86" y="1647.5" ></text>
</g>
<g >
<title>nlohmann::detail::output_string_adapter&lt;char, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::write_character (1 samples, 0.02%)</title><rect x="583.6" y="1941" width="0.2" height="15.0" fill="rgb(247,190,3)" rx="2" ry="2" />
<text  x="586.65" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.5" y="933" width="0.1" height="15.0" fill="rgb(246,62,40)" rx="2" ry="2" />
<text  x="1173.45" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="169.3" y="1413" width="0.2" height="15.0" fill="rgb(241,72,14)" rx="2" ry="2" />
<text  x="172.28" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.5" y="1845" width="0.1" height="15.0" fill="rgb(225,31,1)" rx="2" ry="2" />
<text  x="1173.45" y="1855.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (9 samples, 0.15%)</title><rect x="1135.6" y="2053" width="1.8" height="15.0" fill="rgb(250,102,43)" rx="2" ry="2" />
<text  x="1138.62" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.0" y="1173" width="0.2" height="15.0" fill="rgb(242,175,4)" rx="2" ry="2" />
<text  x="13.00" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="168.9" y="1717" width="0.6" height="15.0" fill="rgb(228,17,24)" rx="2" ry="2" />
<text  x="171.89" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="1797" width="0.2" height="15.0" fill="rgb(212,128,44)" rx="2" ry="2" />
<text  x="1173.07" y="1807.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="144.1" y="1573" width="0.2" height="15.0" fill="rgb(217,139,52)" rx="2" ry="2" />
<text  x="147.12" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.0" y="181" width="0.2" height="15.0" fill="rgb(237,210,44)" rx="2" ry="2" />
<text  x="13.00" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.6" y="1829" width="0.2" height="15.0" fill="rgb(244,219,32)" rx="2" ry="2" />
<text  x="1173.65" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.0" y="949" width="0.2" height="15.0" fill="rgb(205,104,2)" rx="2" ry="2" />
<text  x="13.00" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (2 samples, 0.03%)</title><rect x="208.8" y="1861" width="0.4" height="15.0" fill="rgb(229,104,44)" rx="2" ry="2" />
<text  x="211.76" y="1871.5" ></text>
</g>
<g >
<title>do_futex (11 samples, 0.18%)</title><rect x="41.7" y="1957" width="2.2" height="15.0" fill="rgb(208,191,11)" rx="2" ry="2" />
<text  x="44.74" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.0" y="1269" width="0.2" height="15.0" fill="rgb(240,207,8)" rx="2" ry="2" />
<text  x="13.00" y="1279.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="894.3" y="2021" width="0.2" height="15.0" fill="rgb(236,5,18)" rx="2" ry="2" />
<text  x="897.27" y="2031.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (1 samples, 0.02%)</title><rect x="894.3" y="1909" width="0.2" height="15.0" fill="rgb(208,26,52)" rx="2" ry="2" />
<text  x="897.27" y="1919.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (1 samples, 0.02%)</title><rect x="167.2" y="1685" width="0.1" height="15.0" fill="rgb(205,219,4)" rx="2" ry="2" />
<text  x="170.15" y="1695.5" ></text>
</g>
<g >
<title>cfree (1 samples, 0.02%)</title><rect x="195.0" y="1669" width="0.2" height="15.0" fill="rgb(233,34,4)" rx="2" ry="2" />
<text  x="198.02" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (188 samples, 3.08%)</title><rect x="172.0" y="1829" width="36.4" height="15.0" fill="rgb(232,30,28)" rx="2" ry="2" />
<text  x="174.99" y="1839.5" >std..</text>
</g>
<g >
<title>handle_mm_fault (25 samples, 0.41%)</title><rect x="429.4" y="1893" width="4.8" height="15.0" fill="rgb(236,228,24)" rx="2" ry="2" />
<text  x="432.40" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="168.9" y="1477" width="0.2" height="15.0" fill="rgb(207,101,17)" rx="2" ry="2" />
<text  x="171.89" y="1487.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (2 samples, 0.03%)</title><rect x="120.9" y="1621" width="0.4" height="15.0" fill="rgb(253,9,22)" rx="2" ry="2" />
<text  x="123.90" y="1631.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::getSubwords (4 samples, 0.07%)</title><rect x="560.2" y="1973" width="0.8" height="15.0" fill="rgb(209,190,53)" rx="2" ry="2" />
<text  x="563.23" y="1983.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::__detail::_CharMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt; &gt;::_M_manager (1 samples, 0.02%)</title><rect x="171.0" y="1957" width="0.2" height="15.0" fill="rgb(240,45,48)" rx="2" ry="2" />
<text  x="174.02" y="1967.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.02%)</title><rect x="671.1" y="1845" width="0.2" height="15.0" fill="rgb(207,107,32)" rx="2" ry="2" />
<text  x="674.13" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_quantifier (1 samples, 0.02%)</title><rect x="137.7" y="1829" width="0.2" height="15.0" fill="rgb(218,118,52)" rx="2" ry="2" />
<text  x="140.73" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="169.1" y="1349" width="0.2" height="15.0" fill="rgb(223,57,45)" rx="2" ry="2" />
<text  x="172.09" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.5" y="1013" width="0.1" height="15.0" fill="rgb(238,81,4)" rx="2" ry="2" />
<text  x="1173.45" y="1023.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (1 samples, 0.02%)</title><rect x="167.3" y="1685" width="0.2" height="15.0" fill="rgb(223,132,15)" rx="2" ry="2" />
<text  x="170.35" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.6" y="373" width="0.2" height="15.0" fill="rgb(220,229,12)" rx="2" ry="2" />
<text  x="1173.65" y="383.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (1 samples, 0.02%)</title><rect x="583.1" y="1829" width="0.2" height="15.0" fill="rgb(237,105,14)" rx="2" ry="2" />
<text  x="586.07" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.0" y="1205" width="0.2" height="15.0" fill="rgb(232,204,27)" rx="2" ry="2" />
<text  x="13.00" y="1215.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::do_tolower (1 samples, 0.02%)</title><rect x="161.3" y="1653" width="0.2" height="15.0" fill="rgb(235,119,28)" rx="2" ry="2" />
<text  x="164.35" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.0" y="101" width="0.2" height="15.0" fill="rgb(250,30,17)" rx="2" ry="2" />
<text  x="13.00" y="111.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;fasttext::FastText, std::default_delete&lt;fasttext::FastText&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;fasttext::FastText, std::default_delete&lt;fasttext::FastText&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (1 samples, 0.02%)</title><rect x="865.4" y="1973" width="0.2" height="15.0" fill="rgb(219,45,35)" rx="2" ry="2" />
<text  x="868.44" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="853" width="0.2" height="15.0" fill="rgb(205,3,18)" rx="2" ry="2" />
<text  x="82.87" y="863.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="805" width="0.2" height="15.0" fill="rgb(213,220,34)" rx="2" ry="2" />
<text  x="82.87" y="815.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1135.4" y="2037" width="0.2" height="15.0" fill="rgb(213,53,33)" rx="2" ry="2" />
<text  x="1138.42" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_Compiler (181 samples, 2.97%)</title><rect x="102.9" y="1941" width="35.0" height="15.0" fill="rgb(235,145,24)" rx="2" ry="2" />
<text  x="105.90" y="1951.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.5" y="501" width="0.1" height="15.0" fill="rgb(217,213,35)" rx="2" ry="2" />
<text  x="1173.45" y="511.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="916.3" y="2037" width="0.2" height="15.0" fill="rgb(226,121,5)" rx="2" ry="2" />
<text  x="919.34" y="2047.5" ></text>
</g>
<g >
<title>cfree (1 samples, 0.02%)</title><rect x="172.0" y="1653" width="0.2" height="15.0" fill="rgb(221,19,31)" rx="2" ry="2" />
<text  x="174.99" y="1663.5" ></text>
</g>
<g >
<title>nlohmann::detail::input_stream_adapter::get_character (6 samples, 0.10%)</title><rect x="96.7" y="1909" width="1.2" height="15.0" fill="rgb(239,10,20)" rx="2" ry="2" />
<text  x="99.70" y="1919.5" ></text>
</g>
<g >
<title>fasttext::FastText::getDimension (7 samples, 0.11%)</title><rect x="324.7" y="1989" width="1.3" height="15.0" fill="rgb(238,25,4)" rx="2" ry="2" />
<text  x="327.69" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.3" y="1285" width="0.2" height="15.0" fill="rgb(221,100,15)" rx="2" ry="2" />
<text  x="1173.26" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.0" y="1733" width="0.2" height="15.0" fill="rgb(244,143,30)" rx="2" ry="2" />
<text  x="13.00" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="137.9" y="1941" width="0.6" height="15.0" fill="rgb(233,60,46)" rx="2" ry="2" />
<text  x="140.93" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="1653" width="0.2" height="15.0" fill="rgb(230,160,20)" rx="2" ry="2" />
<text  x="82.87" y="1663.5" ></text>
</g>
<g >
<title>page_fault (41 samples, 0.67%)</title><rect x="434.2" y="1957" width="8.0" height="15.0" fill="rgb(225,35,48)" rx="2" ry="2" />
<text  x="437.23" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.6" y="1429" width="0.2" height="15.0" fill="rgb(251,180,13)" rx="2" ry="2" />
<text  x="1173.65" y="1439.5" ></text>
</g>
<g >
<title>std::future&lt;boost::optional&lt;TDocument&gt; &gt;::get (7 samples, 0.11%)</title><rect x="101.3" y="1989" width="1.4" height="15.0" fill="rgb(237,144,10)" rx="2" ry="2" />
<text  x="104.35" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="677" width="0.2" height="15.0" fill="rgb(225,218,38)" rx="2" ry="2" />
<text  x="82.87" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.6" y="757" width="0.2" height="15.0" fill="rgb(251,97,23)" rx="2" ry="2" />
<text  x="1173.65" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_quantifier (1 samples, 0.02%)</title><rect x="137.0" y="1829" width="0.2" height="15.0" fill="rgb(205,164,5)" rx="2" ry="2" />
<text  x="139.96" y="1839.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (3 samples, 0.05%)</title><rect x="1189.2" y="2053" width="0.6" height="15.0" fill="rgb(247,24,23)" rx="2" ry="2" />
<text  x="1192.23" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.0" y="725" width="0.2" height="15.0" fill="rgb(206,212,45)" rx="2" ry="2" />
<text  x="13.00" y="735.5" ></text>
</g>
<g >
<title>__dynamic_cast (7 samples, 0.11%)</title><rect x="172.8" y="1589" width="1.3" height="15.0" fill="rgb(213,120,23)" rx="2" ry="2" />
<text  x="175.77" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (33 samples, 0.54%)</title><rect x="149.5" y="1717" width="6.4" height="15.0" fill="rgb(246,54,17)" rx="2" ry="2" />
<text  x="152.54" y="1727.5" ></text>
</g>
<g >
<title>unmap_region (1 samples, 0.02%)</title><rect x="583.1" y="1909" width="0.2" height="15.0" fill="rgb(247,169,32)" rx="2" ry="2" />
<text  x="586.07" y="1919.5" ></text>
</g>
<g >
<title>TDocument::TDocument (3 samples, 0.05%)</title><rect x="344.4" y="2005" width="0.6" height="15.0" fill="rgb(234,11,5)" rx="2" ry="2" />
<text  x="347.43" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (4,392 samples, 72.04%)</title><rect x="44.4" y="2053" width="850.1" height="15.0" fill="rgb(253,142,46)" rx="2" ry="2" />
<text  x="47.45" y="2063.5" >[unknown]</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="210.5" y="1541" width="0.2" height="15.0" fill="rgb(248,65,12)" rx="2" ry="2" />
<text  x="213.51" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.5" y="1653" width="0.1" height="15.0" fill="rgb(231,68,34)" rx="2" ry="2" />
<text  x="1173.45" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="1189" width="0.2" height="15.0" fill="rgb(230,68,50)" rx="2" ry="2" />
<text  x="1173.07" y="1199.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::pushHash (202 samples, 3.31%)</title><rect x="1007.1" y="2053" width="39.1" height="15.0" fill="rgb(224,78,43)" rx="2" ry="2" />
<text  x="1010.11" y="2063.5" >fas..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="168.9" y="1397" width="0.2" height="15.0" fill="rgb(210,86,7)" rx="2" ry="2" />
<text  x="171.89" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.5" y="69" width="0.1" height="15.0" fill="rgb(243,186,28)" rx="2" ry="2" />
<text  x="1173.45" y="79.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find@plt (3 samples, 0.05%)</title><rect x="861.8" y="1909" width="0.5" height="15.0" fill="rgb(234,175,5)" rx="2" ry="2" />
<text  x="864.76" y="1919.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1045.6" y="2005" width="0.2" height="15.0" fill="rgb(245,128,51)" rx="2" ry="2" />
<text  x="1048.62" y="2015.5" ></text>
</g>
<g >
<title>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::dump (5 samples, 0.08%)</title><rect x="583.6" y="1973" width="1.0" height="15.0" fill="rgb(253,156,51)" rx="2" ry="2" />
<text  x="586.65" y="1983.5" ></text>
</g>
<g >
<title>onmt::ITokenizer::tokenize (1,408 samples, 23.09%)</title><rect x="589.8" y="1941" width="272.5" height="15.0" fill="rgb(251,213,11)" rx="2" ry="2" />
<text  x="592.84" y="1951.5" >onmt::ITokenizer::tokenize</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.5" y="149" width="0.1" height="15.0" fill="rgb(216,138,13)" rx="2" ry="2" />
<text  x="1173.45" y="159.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1045.6" y="2021" width="0.2" height="15.0" fill="rgb(211,47,13)" rx="2" ry="2" />
<text  x="1048.62" y="2031.5" ></text>
</g>
<g >
<title>cfree (2 samples, 0.03%)</title><rect x="163.1" y="1685" width="0.4" height="15.0" fill="rgb(224,106,17)" rx="2" ry="2" />
<text  x="166.09" y="1695.5" ></text>
</g>
<g >
<title>cfree (1 samples, 0.02%)</title><rect x="583.5" y="1973" width="0.1" height="15.0" fill="rgb(237,72,30)" rx="2" ry="2" />
<text  x="586.45" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (30 samples, 0.49%)</title><rect x="162.5" y="1717" width="5.8" height="15.0" fill="rgb(227,118,21)" rx="2" ry="2" />
<text  x="165.51" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="1573" width="0.2" height="15.0" fill="rgb(219,3,27)" rx="2" ry="2" />
<text  x="82.87" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.0" y="933" width="0.2" height="15.0" fill="rgb(233,160,24)" rx="2" ry="2" />
<text  x="13.00" y="943.5" ></text>
</g>
<g >
<title>Eigen::internal::generic_product_impl&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt;, Eigen::DenseShape, Eigen::DenseShape, 8&gt;::scaleAndAddTo&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt; (26 samples, 0.43%)</title><rect x="421.3" y="1941" width="5.0" height="15.0" fill="rgb(241,30,21)" rx="2" ry="2" />
<text  x="424.27" y="1951.5" ></text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.05%)</title><rect x="165.6" y="1669" width="0.6" height="15.0" fill="rgb(244,164,2)" rx="2" ry="2" />
<text  x="168.60" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.6" y="1685" width="0.2" height="15.0" fill="rgb(224,228,23)" rx="2" ry="2" />
<text  x="1173.65" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="485" width="0.2" height="15.0" fill="rgb(239,39,8)" rx="2" ry="2" />
<text  x="82.87" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (1 samples, 0.02%)</title><rect x="134.4" y="1685" width="0.2" height="15.0" fill="rgb(252,73,37)" rx="2" ry="2" />
<text  x="137.44" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (38 samples, 0.62%)</title><rect x="103.5" y="1653" width="7.3" height="15.0" fill="rgb(230,103,3)" rx="2" ry="2" />
<text  x="106.48" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (30 samples, 0.49%)</title><rect x="117.4" y="1701" width="5.8" height="15.0" fill="rgb(251,94,21)" rx="2" ry="2" />
<text  x="120.41" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (38 samples, 0.62%)</title><rect x="103.5" y="1637" width="7.3" height="15.0" fill="rgb(218,122,2)" rx="2" ry="2" />
<text  x="106.48" y="1647.5" ></text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.05%)</title><rect x="145.3" y="1605" width="0.6" height="15.0" fill="rgb(221,102,22)" rx="2" ry="2" />
<text  x="148.28" y="1615.5" ></text>
</g>
<g >
<title>TDocument::PreprocessTextFields (1,424 samples, 23.36%)</title><rect x="588.9" y="1973" width="275.6" height="15.0" fill="rgb(253,179,12)" rx="2" ry="2" />
<text  x="591.87" y="1983.5" >TDocument::PreprocessTextFields</text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="1173" width="0.2" height="15.0" fill="rgb(239,7,50)" rx="2" ry="2" />
<text  x="82.87" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.0" y="405" width="0.2" height="15.0" fill="rgb(223,93,8)" rx="2" ry="2" />
<text  x="13.00" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.3" y="1653" width="0.2" height="15.0" fill="rgb(209,39,39)" rx="2" ry="2" />
<text  x="141.32" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.3" y="1573" width="0.2" height="15.0" fill="rgb(225,77,25)" rx="2" ry="2" />
<text  x="141.32" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="373" width="0.2" height="15.0" fill="rgb(241,169,33)" rx="2" ry="2" />
<text  x="1173.07" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.5" y="325" width="0.1" height="15.0" fill="rgb(205,95,25)" rx="2" ry="2" />
<text  x="1173.45" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.5" y="1781" width="0.1" height="15.0" fill="rgb(240,3,13)" rx="2" ry="2" />
<text  x="1173.45" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="169.3" y="901" width="0.2" height="15.0" fill="rgb(251,127,37)" rx="2" ry="2" />
<text  x="172.28" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.6" y="1621" width="0.2" height="15.0" fill="rgb(245,50,47)" rx="2" ry="2" />
<text  x="1173.65" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.3" y="1637" width="0.2" height="15.0" fill="rgb(207,107,12)" rx="2" ry="2" />
<text  x="1173.26" y="1647.5" ></text>
</g>
<g >
<title>alloc_pages_vma (8 samples, 0.13%)</title><rect x="708.5" y="1781" width="1.5" height="15.0" fill="rgb(231,185,11)" rx="2" ry="2" />
<text  x="711.48" y="1791.5" ></text>
</g>
<g >
<title>pmd_pfn (1 samples, 0.02%)</title><rect x="434.0" y="1877" width="0.2" height="15.0" fill="rgb(235,152,11)" rx="2" ry="2" />
<text  x="437.04" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="1621" width="0.2" height="15.0" fill="rgb(232,178,47)" rx="2" ry="2" />
<text  x="1173.07" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.3" y="1973" width="0.2" height="15.0" fill="rgb(235,174,41)" rx="2" ry="2" />
<text  x="1173.26" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (1 samples, 0.02%)</title><rect x="129.4" y="1797" width="0.2" height="15.0" fill="rgb(208,7,23)" rx="2" ry="2" />
<text  x="132.41" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.0" y="757" width="0.2" height="15.0" fill="rgb(232,38,18)" rx="2" ry="2" />
<text  x="13.00" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.0" y="1125" width="0.2" height="15.0" fill="rgb(250,219,29)" rx="2" ry="2" />
<text  x="13.00" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="137.9" y="1893" width="0.6" height="15.0" fill="rgb(211,8,23)" rx="2" ry="2" />
<text  x="140.93" y="1903.5" ></text>
</g>
<g >
<title>operator new@plt (1 samples, 0.02%)</title><rect x="189.0" y="1637" width="0.2" height="15.0" fill="rgb(215,30,45)" rx="2" ry="2" />
<text  x="192.02" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="168.9" y="1493" width="0.2" height="15.0" fill="rgb(209,13,53)" rx="2" ry="2" />
<text  x="171.89" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.0" y="1477" width="0.2" height="15.0" fill="rgb(211,87,13)" rx="2" ry="2" />
<text  x="13.00" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.5" y="85" width="0.1" height="15.0" fill="rgb(238,157,4)" rx="2" ry="2" />
<text  x="1173.45" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="1909" width="0.2" height="15.0" fill="rgb(221,204,30)" rx="2" ry="2" />
<text  x="1173.07" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.3" y="117" width="0.2" height="15.0" fill="rgb(249,95,35)" rx="2" ry="2" />
<text  x="1173.26" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.0" y="1237" width="0.2" height="15.0" fill="rgb(242,54,42)" rx="2" ry="2" />
<text  x="13.00" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.5" y="773" width="0.1" height="15.0" fill="rgb(212,194,48)" rx="2" ry="2" />
<text  x="1173.45" y="783.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::basic_json (1 samples, 0.02%)</title><rect x="583.5" y="2005" width="0.1" height="15.0" fill="rgb(220,218,17)" rx="2" ry="2" />
<text  x="586.45" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="1061" width="0.2" height="15.0" fill="rgb(250,73,40)" rx="2" ry="2" />
<text  x="82.87" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (1 samples, 0.02%)</title><rect x="123.4" y="1685" width="0.2" height="15.0" fill="rgb(233,32,9)" rx="2" ry="2" />
<text  x="126.41" y="1695.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (14 samples, 0.23%)</title><rect x="41.7" y="2005" width="2.7" height="15.0" fill="rgb(243,122,46)" rx="2" ry="2" />
<text  x="44.74" y="2015.5" ></text>
</g>
<g >
<title>std::operator&gt;&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (3 samples, 0.05%)</title><rect x="580.7" y="1973" width="0.6" height="15.0" fill="rgb(223,185,27)" rx="2" ry="2" />
<text  x="583.74" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="197" width="0.2" height="15.0" fill="rgb(237,32,17)" rx="2" ry="2" />
<text  x="82.87" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.0" y="1317" width="0.2" height="15.0" fill="rgb(243,202,4)" rx="2" ry="2" />
<text  x="13.00" y="1327.5" ></text>
</g>
<g >
<title>std::locale::locale (1 samples, 0.02%)</title><rect x="82.2" y="2005" width="0.2" height="15.0" fill="rgb(246,98,34)" rx="2" ry="2" />
<text  x="85.19" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (1 samples, 0.02%)</title><rect x="168.7" y="1781" width="0.2" height="15.0" fill="rgb(238,51,43)" rx="2" ry="2" />
<text  x="171.70" y="1791.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_Alloc_node&gt; (1 samples, 0.02%)</title><rect x="586.2" y="1973" width="0.2" height="15.0" fill="rgb(253,218,6)" rx="2" ry="2" />
<text  x="589.16" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (2 samples, 0.03%)</title><rect x="208.4" y="1813" width="0.4" height="15.0" fill="rgb(217,97,48)" rx="2" ry="2" />
<text  x="211.38" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="169.3" y="421" width="0.2" height="15.0" fill="rgb(226,150,3)" rx="2" ry="2" />
<text  x="172.28" y="431.5" ></text>
</g>
<g >
<title>onmt::unicode::is_separator (62 samples, 1.02%)</title><rect x="829.1" y="1893" width="12.0" height="15.0" fill="rgb(245,89,12)" rx="2" ry="2" />
<text  x="832.05" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="169.3" y="549" width="0.2" height="15.0" fill="rgb(215,75,5)" rx="2" ry="2" />
<text  x="172.28" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="168.9" y="1269" width="0.2" height="15.0" fill="rgb(210,47,48)" rx="2" ry="2" />
<text  x="171.89" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.6" y="389" width="0.2" height="15.0" fill="rgb(231,89,6)" rx="2" ry="2" />
<text  x="1173.65" y="399.5" ></text>
</g>
<g >
<title>Eigen::internal::product_evaluator&lt;Eigen::Product&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0&gt;, 7, Eigen::DenseShape, Eigen::DenseShape, float, float&gt;::product_evaluator (1 samples, 0.02%)</title><rect x="220.2" y="1973" width="0.2" height="15.0" fill="rgb(244,10,14)" rx="2" ry="2" />
<text  x="223.18" y="1983.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (1 samples, 0.02%)</title><rect x="191.3" y="1621" width="0.2" height="15.0" fill="rgb(234,62,46)" rx="2" ry="2" />
<text  x="194.34" y="1631.5" ></text>
</g>
<g >
<title>free@plt (4 samples, 0.07%)</title><rect x="1098.8" y="2053" width="0.8" height="15.0" fill="rgb(206,63,49)" rx="2" ry="2" />
<text  x="1101.84" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="1397" width="0.2" height="15.0" fill="rgb(233,85,19)" rx="2" ry="2" />
<text  x="82.87" y="1407.5" ></text>
</g>
<g >
<title>__x64_sys_write (1 samples, 0.02%)</title><rect x="894.3" y="1989" width="0.2" height="15.0" fill="rgb(238,15,42)" rx="2" ry="2" />
<text  x="897.27" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.3" y="357" width="0.2" height="15.0" fill="rgb(232,2,42)" rx="2" ry="2" />
<text  x="1173.26" y="367.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="549" width="0.2" height="15.0" fill="rgb(238,34,43)" rx="2" ry="2" />
<text  x="82.87" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (38 samples, 0.62%)</title><rect x="103.5" y="1701" width="7.3" height="15.0" fill="rgb(209,203,41)" rx="2" ry="2" />
<text  x="106.48" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (1 samples, 0.02%)</title><rect x="137.3" y="1813" width="0.2" height="15.0" fill="rgb(229,69,9)" rx="2" ry="2" />
<text  x="140.35" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.0" y="1829" width="0.2" height="15.0" fill="rgb(217,224,49)" rx="2" ry="2" />
<text  x="13.00" y="1839.5" ></text>
</g>
<g >
<title>onmt::unicode::explode_utf8@plt (1 samples, 0.02%)</title><rect x="760.9" y="1893" width="0.2" height="15.0" fill="rgb(222,129,47)" rx="2" ry="2" />
<text  x="763.93" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="1045" width="0.2" height="15.0" fill="rgb(210,67,2)" rx="2" ry="2" />
<text  x="82.87" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="210.5" y="1445" width="0.2" height="15.0" fill="rgb(220,149,40)" rx="2" ry="2" />
<text  x="213.51" y="1455.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="105.8" y="1589" width="0.2" height="15.0" fill="rgb(250,153,2)" rx="2" ry="2" />
<text  x="108.80" y="1599.5" ></text>
</g>
<g >
<title>malloc (2 samples, 0.03%)</title><rect x="188.4" y="1637" width="0.4" height="15.0" fill="rgb(237,4,20)" rx="2" ry="2" />
<text  x="191.44" y="1647.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.02%)</title><rect x="840.9" y="1813" width="0.2" height="15.0" fill="rgb(218,168,8)" rx="2" ry="2" />
<text  x="843.86" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="773" width="0.2" height="15.0" fill="rgb(219,19,11)" rx="2" ry="2" />
<text  x="1173.07" y="783.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::push_back (1 samples, 0.02%)</title><rect x="893.5" y="2037" width="0.2" height="15.0" fill="rgb(245,106,53)" rx="2" ry="2" />
<text  x="896.50" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="210.3" y="1717" width="0.4" height="15.0" fill="rgb(246,174,7)" rx="2" ry="2" />
<text  x="213.31" y="1727.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="840.9" y="1845" width="0.2" height="15.0" fill="rgb(243,69,7)" rx="2" ry="2" />
<text  x="843.86" y="1855.5" ></text>
</g>
<g >
<title>do_page_fault (41 samples, 0.67%)</title><rect x="434.2" y="1941" width="8.0" height="15.0" fill="rgb(217,19,1)" rx="2" ry="2" />
<text  x="437.23" y="1951.5" ></text>
</g>
<g >
<title>fasttext::Vector::addVector (8 samples, 0.13%)</title><rect x="566.8" y="1973" width="1.6" height="15.0" fill="rgb(254,30,3)" rx="2" ry="2" />
<text  x="569.81" y="1983.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.03%)</title><rect x="131.7" y="1701" width="0.4" height="15.0" fill="rgb(242,162,34)" rx="2" ry="2" />
<text  x="134.74" y="1711.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (4 samples, 0.07%)</title><rect x="101.7" y="1877" width="0.8" height="15.0" fill="rgb(245,114,22)" rx="2" ry="2" />
<text  x="104.74" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.0" y="1061" width="0.2" height="15.0" fill="rgb(218,12,46)" rx="2" ry="2" />
<text  x="13.00" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.3" y="1941" width="0.2" height="15.0" fill="rgb(220,50,14)" rx="2" ry="2" />
<text  x="1173.26" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="725" width="0.2" height="15.0" fill="rgb(205,204,27)" rx="2" ry="2" />
<text  x="1173.07" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_Compiler (155 samples, 2.54%)</title><rect x="138.9" y="1925" width="30.0" height="15.0" fill="rgb(209,179,6)" rx="2" ry="2" />
<text  x="141.90" y="1935.5" >st..</text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (1 samples, 0.02%)</title><rect x="178.4" y="1637" width="0.2" height="15.0" fill="rgb(251,62,45)" rx="2" ry="2" />
<text  x="181.38" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.0" y="1941" width="0.2" height="15.0" fill="rgb(213,214,32)" rx="2" ry="2" />
<text  x="13.00" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.5" y="821" width="0.1" height="15.0" fill="rgb(252,75,24)" rx="2" ry="2" />
<text  x="1173.45" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Scanner&lt;char&gt;::_Scanner (2 samples, 0.03%)</title><rect x="209.5" y="1925" width="0.4" height="15.0" fill="rgb(219,60,15)" rx="2" ry="2" />
<text  x="212.54" y="1935.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.03%)</title><rect x="114.3" y="1605" width="0.4" height="15.0" fill="rgb(217,68,41)" rx="2" ry="2" />
<text  x="117.32" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="169.3" y="437" width="0.2" height="15.0" fill="rgb(249,20,37)" rx="2" ry="2" />
<text  x="172.28" y="447.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.02%)</title><rect x="671.1" y="1861" width="0.2" height="15.0" fill="rgb(205,20,45)" rx="2" ry="2" />
<text  x="674.13" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.3" y="1413" width="0.2" height="15.0" fill="rgb(215,74,46)" rx="2" ry="2" />
<text  x="141.32" y="1423.5" ></text>
</g>
<g >
<title>onmt::unicode::is_letter@plt (3 samples, 0.05%)</title><rect x="746.0" y="1877" width="0.6" height="15.0" fill="rgb(252,22,6)" rx="2" ry="2" />
<text  x="749.02" y="1887.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (16 samples, 0.26%)</title><rect x="885.2" y="2037" width="3.1" height="15.0" fill="rgb(208,136,10)" rx="2" ry="2" />
<text  x="888.18" y="2047.5" ></text>
</g>
<g >
<title>all (6,097 samples, 100%)</title><rect x="10.0" y="2085" width="1180.0" height="15.0" fill="rgb(240,195,30)" rx="2" ry="2" />
<text  x="13.00" y="2095.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (5 samples, 0.08%)</title><rect x="114.7" y="1605" width="1.0" height="15.0" fill="rgb(231,126,43)" rx="2" ry="2" />
<text  x="117.70" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="901" width="0.2" height="15.0" fill="rgb(236,218,7)" rx="2" ry="2" />
<text  x="82.87" y="911.5" ></text>
</g>
<g >
<title>try_to_wake_up (7 samples, 0.11%)</title><rect x="42.5" y="1909" width="1.4" height="15.0" fill="rgb(238,122,1)" rx="2" ry="2" />
<text  x="45.51" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="85" width="0.2" height="15.0" fill="rgb(240,26,39)" rx="2" ry="2" />
<text  x="82.87" y="95.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (4 samples, 0.07%)</title><rect x="154.0" y="1605" width="0.8" height="15.0" fill="rgb(232,14,44)" rx="2" ry="2" />
<text  x="156.99" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="1925" width="0.2" height="15.0" fill="rgb(222,211,50)" rx="2" ry="2" />
<text  x="82.87" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (1 samples, 0.02%)</title><rect x="178.2" y="1669" width="0.2" height="15.0" fill="rgb(208,68,40)" rx="2" ry="2" />
<text  x="181.18" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="169.3" y="453" width="0.2" height="15.0" fill="rgb(251,72,24)" rx="2" ry="2" />
<text  x="172.28" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (1 samples, 0.02%)</title><rect x="137.3" y="1797" width="0.2" height="15.0" fill="rgb(241,181,8)" rx="2" ry="2" />
<text  x="140.35" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="1829" width="0.2" height="15.0" fill="rgb(245,122,44)" rx="2" ry="2" />
<text  x="1173.07" y="1839.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (1 samples, 0.02%)</title><rect x="710.0" y="1765" width="0.2" height="15.0" fill="rgb(209,155,25)" rx="2" ry="2" />
<text  x="713.03" y="1775.5" ></text>
</g>
<g >
<title>page_fault (16 samples, 0.26%)</title><rect x="37.1" y="2037" width="3.1" height="15.0" fill="rgb(222,45,35)" rx="2" ry="2" />
<text  x="40.10" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.5" y="1157" width="0.1" height="15.0" fill="rgb(251,47,12)" rx="2" ry="2" />
<text  x="1173.45" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="1109" width="0.2" height="15.0" fill="rgb(240,158,11)" rx="2" ry="2" />
<text  x="1173.07" y="1119.5" ></text>
</g>
<g >
<title>handle_mm_fault (37 samples, 0.61%)</title><rect x="434.8" y="1909" width="7.2" height="15.0" fill="rgb(212,85,45)" rx="2" ry="2" />
<text  x="437.82" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.6" y="1589" width="0.2" height="15.0" fill="rgb(217,171,37)" rx="2" ry="2" />
<text  x="1173.65" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.3" y="261" width="0.2" height="15.0" fill="rgb(211,40,18)" rx="2" ry="2" />
<text  x="1173.26" y="271.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="323.5" y="1941" width="0.2" height="15.0" fill="rgb(220,40,16)" rx="2" ry="2" />
<text  x="326.53" y="1951.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="582.1" y="1781" width="0.2" height="15.0" fill="rgb(231,77,14)" rx="2" ry="2" />
<text  x="585.10" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.5" y="453" width="0.1" height="15.0" fill="rgb(207,85,24)" rx="2" ry="2" />
<text  x="1173.45" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="1253" width="0.2" height="15.0" fill="rgb(214,210,21)" rx="2" ry="2" />
<text  x="1173.07" y="1263.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; const*, std::vector&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::allocator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;*&gt; (1 samples, 0.02%)</title><rect x="586.2" y="1893" width="0.2" height="15.0" fill="rgb(220,59,30)" rx="2" ry="2" />
<text  x="589.16" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.5" y="1125" width="0.1" height="15.0" fill="rgb(254,206,6)" rx="2" ry="2" />
<text  x="1173.45" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="997" width="0.2" height="15.0" fill="rgb(214,1,19)" rx="2" ry="2" />
<text  x="1173.07" y="1007.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="827.7" y="1861" width="0.2" height="15.0" fill="rgb(254,108,32)" rx="2" ry="2" />
<text  x="830.70" y="1871.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="454.2" y="1957" width="0.4" height="15.0" fill="rgb(235,4,52)" rx="2" ry="2" />
<text  x="457.17" y="1967.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (4 samples, 0.07%)</title><rect x="177.4" y="1589" width="0.8" height="15.0" fill="rgb(239,43,4)" rx="2" ry="2" />
<text  x="180.41" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.6" y="549" width="0.2" height="15.0" fill="rgb(215,98,41)" rx="2" ry="2" />
<text  x="1173.65" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (1 samples, 0.02%)</title><rect x="137.2" y="1861" width="0.1" height="15.0" fill="rgb(224,191,17)" rx="2" ry="2" />
<text  x="140.15" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="565" width="0.2" height="15.0" fill="rgb(247,189,17)" rx="2" ry="2" />
<text  x="1173.07" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (69 samples, 1.13%)</title><rect x="172.0" y="1749" width="13.3" height="15.0" fill="rgb(213,24,37)" rx="2" ry="2" />
<text  x="174.99" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.0" y="1877" width="0.2" height="15.0" fill="rgb(214,8,43)" rx="2" ry="2" />
<text  x="13.00" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.5" y="1813" width="0.1" height="15.0" fill="rgb(220,65,27)" rx="2" ry="2" />
<text  x="1173.45" y="1823.5" ></text>
</g>
<g >
<title>rcu_gp_kthread_wake (1 samples, 0.02%)</title><rect x="323.5" y="1877" width="0.2" height="15.0" fill="rgb(230,156,14)" rx="2" ry="2" />
<text  x="326.53" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="169.1" y="1477" width="0.4" height="15.0" fill="rgb(237,188,24)" rx="2" ry="2" />
<text  x="172.09" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.5" y="1925" width="0.1" height="15.0" fill="rgb(237,57,50)" rx="2" ry="2" />
<text  x="1173.45" y="1935.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::value (1 samples, 0.02%)</title><rect x="185.3" y="1717" width="0.2" height="15.0" fill="rgb(226,165,30)" rx="2" ry="2" />
<text  x="188.35" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="917" width="0.2" height="15.0" fill="rgb(226,68,26)" rx="2" ry="2" />
<text  x="82.87" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.6" y="965" width="0.2" height="15.0" fill="rgb(215,50,1)" rx="2" ry="2" />
<text  x="1173.65" y="975.5" ></text>
</g>
<g >
<title>__vm_munmap (3 samples, 0.05%)</title><rect x="581.7" y="1925" width="0.6" height="15.0" fill="rgb(220,38,28)" rx="2" ry="2" />
<text  x="584.71" y="1935.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id@plt (1 samples, 0.02%)</title><rect x="207.0" y="1701" width="0.2" height="15.0" fill="rgb(216,217,16)" rx="2" ry="2" />
<text  x="210.02" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.5" y="181" width="0.1" height="15.0" fill="rgb(228,72,54)" rx="2" ry="2" />
<text  x="1173.45" y="191.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (1 samples, 0.02%)</title><rect x="161.5" y="1653" width="0.2" height="15.0" fill="rgb(210,105,5)" rx="2" ry="2" />
<text  x="164.54" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="1925" width="0.2" height="15.0" fill="rgb(243,83,53)" rx="2" ry="2" />
<text  x="1173.07" y="1935.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt;@plt (1 samples, 0.02%)</title><rect x="123.0" y="1637" width="0.2" height="15.0" fill="rgb(242,142,33)" rx="2" ry="2" />
<text  x="126.03" y="1647.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.07%)</title><rect x="586.4" y="2021" width="0.7" height="15.0" fill="rgb(223,58,44)" rx="2" ry="2" />
<text  x="589.36" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (134 samples, 2.20%)</title><rect x="103.5" y="1797" width="25.9" height="15.0" fill="rgb(207,218,47)" rx="2" ry="2" />
<text  x="106.48" y="1807.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="169.3" y="1237" width="0.2" height="15.0" fill="rgb(251,71,38)" rx="2" ry="2" />
<text  x="172.28" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (37 samples, 0.61%)</title><rect x="178.2" y="1701" width="7.1" height="15.0" fill="rgb(225,151,8)" rx="2" ry="2" />
<text  x="181.18" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="168.9" y="1861" width="0.6" height="15.0" fill="rgb(242,178,7)" rx="2" ry="2" />
<text  x="171.89" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="1637" width="0.2" height="15.0" fill="rgb(232,12,32)" rx="2" ry="2" />
<text  x="82.87" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.3" y="197" width="0.2" height="15.0" fill="rgb(252,3,3)" rx="2" ry="2" />
<text  x="1173.26" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.0" y="229" width="0.2" height="15.0" fill="rgb(241,165,54)" rx="2" ry="2" />
<text  x="13.00" y="239.5" ></text>
</g>
<g >
<title>onmt::unicode::get_case (6 samples, 0.10%)</title><rect x="761.1" y="1893" width="1.2" height="15.0" fill="rgb(231,71,8)" rx="2" ry="2" />
<text  x="764.12" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (27 samples, 0.44%)</title><rect x="139.1" y="1669" width="5.2" height="15.0" fill="rgb(248,14,15)" rx="2" ry="2" />
<text  x="142.09" y="1679.5" ></text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::get (2 samples, 0.03%)</title><rect x="89.2" y="1925" width="0.3" height="15.0" fill="rgb(215,228,2)" rx="2" ry="2" />
<text  x="92.16" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="168.9" y="1445" width="0.2" height="15.0" fill="rgb(250,183,24)" rx="2" ry="2" />
<text  x="171.89" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.0" y="629" width="0.2" height="15.0" fill="rgb(219,110,27)" rx="2" ry="2" />
<text  x="13.00" y="639.5" ></text>
</g>
<g >
<title>TSlinkClustering::Cluster (1,225 samples, 20.09%)</title><rect x="345.2" y="2005" width="237.1" height="15.0" fill="rgb(211,141,24)" rx="2" ry="2" />
<text  x="348.21" y="2015.5" >TSlinkClustering::Cluster</text>
</g>
<g >
<title>unmap_single_vma (2 samples, 0.03%)</title><rect x="454.2" y="1845" width="0.4" height="15.0" fill="rgb(212,9,2)" rx="2" ry="2" />
<text  x="457.17" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (32 samples, 0.52%)</title><rect x="117.4" y="1733" width="6.2" height="15.0" fill="rgb(254,185,39)" rx="2" ry="2" />
<text  x="120.41" y="1743.5" ></text>
</g>
<g >
<title>new_sync_write (1 samples, 0.02%)</title><rect x="894.3" y="1925" width="0.2" height="15.0" fill="rgb(233,26,0)" rx="2" ry="2" />
<text  x="897.27" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="168.9" y="1285" width="0.2" height="15.0" fill="rgb(246,25,1)" rx="2" ry="2" />
<text  x="171.89" y="1295.5" ></text>
</g>
<g >
<title>do_page_fault (2 samples, 0.03%)</title><rect x="746.6" y="1861" width="0.4" height="15.0" fill="rgb(254,47,25)" rx="2" ry="2" />
<text  x="749.60" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.3" y="821" width="0.2" height="15.0" fill="rgb(250,156,39)" rx="2" ry="2" />
<text  x="1173.26" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.3" y="581" width="0.2" height="15.0" fill="rgb(230,226,25)" rx="2" ry="2" />
<text  x="1173.26" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (2 samples, 0.03%)</title><rect x="208.4" y="1797" width="0.4" height="15.0" fill="rgb(220,156,3)" rx="2" ry="2" />
<text  x="211.38" y="1807.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (1 samples, 0.02%)</title><rect x="143.0" y="1557" width="0.2" height="15.0" fill="rgb(233,74,11)" rx="2" ry="2" />
<text  x="145.96" y="1567.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="755.1" y="1877" width="0.2" height="15.0" fill="rgb(215,134,27)" rx="2" ry="2" />
<text  x="758.12" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.5" y="1269" width="0.1" height="15.0" fill="rgb(215,200,41)" rx="2" ry="2" />
<text  x="1173.45" y="1279.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="149" width="0.2" height="15.0" fill="rgb(236,208,1)" rx="2" ry="2" />
<text  x="82.87" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (121 samples, 1.98%)</title><rect x="139.1" y="1781" width="23.4" height="15.0" fill="rgb(242,49,4)" rx="2" ry="2" />
<text  x="142.09" y="1791.5" >s..</text>
</g>
<g >
<title>__schedule (3 samples, 0.05%)</title><rect x="43.9" y="1941" width="0.5" height="15.0" fill="rgb(254,199,37)" rx="2" ry="2" />
<text  x="46.87" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="421" width="0.2" height="15.0" fill="rgb(232,189,39)" rx="2" ry="2" />
<text  x="82.87" y="431.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.05%)</title><rect x="203.0" y="1701" width="0.5" height="15.0" fill="rgb(236,76,39)" rx="2" ry="2" />
<text  x="205.96" y="1711.5" ></text>
</g>
<g >
<title>from_json&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; (1 samples, 0.02%)</title><rect x="588.3" y="1957" width="0.2" height="15.0" fill="rgb(251,107,24)" rx="2" ry="2" />
<text  x="591.29" y="1967.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (42 samples, 0.69%)</title><rect x="1157.9" y="2037" width="8.1" height="15.0" fill="rgb(226,134,11)" rx="2" ry="2" />
<text  x="1160.87" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="210.1" y="1749" width="0.2" height="15.0" fill="rgb(254,194,40)" rx="2" ry="2" />
<text  x="213.12" y="1759.5" ></text>
</g>
<g >
<title>TDocument::FromJson (4 samples, 0.07%)</title><rect x="86.6" y="1973" width="0.8" height="15.0" fill="rgb(226,15,11)" rx="2" ry="2" />
<text  x="89.64" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.5" y="1189" width="0.1" height="15.0" fill="rgb(226,94,13)" rx="2" ry="2" />
<text  x="1173.45" y="1199.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="581.5" y="1973" width="0.2" height="15.0" fill="rgb(241,39,32)" rx="2" ry="2" />
<text  x="584.52" y="1983.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (1 samples, 0.02%)</title><rect x="128.8" y="1653" width="0.2" height="15.0" fill="rgb(242,10,45)" rx="2" ry="2" />
<text  x="131.83" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="169.1" y="1541" width="0.4" height="15.0" fill="rgb(211,54,46)" rx="2" ry="2" />
<text  x="172.09" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.3" y="1525" width="0.2" height="15.0" fill="rgb(213,180,4)" rx="2" ry="2" />
<text  x="141.32" y="1535.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="789" width="0.2" height="15.0" fill="rgb(252,96,20)" rx="2" ry="2" />
<text  x="82.87" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="1733" width="0.2" height="15.0" fill="rgb(213,176,2)" rx="2" ry="2" />
<text  x="1173.07" y="1743.5" ></text>
</g>
<g >
<title>__handle_mm_fault (10 samples, 0.16%)</title><rect x="708.3" y="1797" width="1.9" height="15.0" fill="rgb(224,172,38)" rx="2" ry="2" />
<text  x="711.28" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="168.9" y="1733" width="0.6" height="15.0" fill="rgb(225,73,0)" rx="2" ry="2" />
<text  x="171.89" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="169.3" y="1061" width="0.2" height="15.0" fill="rgb(243,25,18)" rx="2" ry="2" />
<text  x="172.28" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.0" y="1797" width="0.2" height="15.0" fill="rgb(245,171,42)" rx="2" ry="2" />
<text  x="13.00" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="1077" width="0.2" height="15.0" fill="rgb(213,229,6)" rx="2" ry="2" />
<text  x="82.87" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="1557" width="0.2" height="15.0" fill="rgb(224,102,19)" rx="2" ry="2" />
<text  x="1173.07" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.0" y="597" width="0.2" height="15.0" fill="rgb(237,76,3)" rx="2" ry="2" />
<text  x="13.00" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="1813" width="0.2" height="15.0" fill="rgb(226,186,31)" rx="2" ry="2" />
<text  x="1173.07" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (30 samples, 0.49%)</title><rect x="117.4" y="1669" width="5.8" height="15.0" fill="rgb(252,130,1)" rx="2" ry="2" />
<text  x="120.41" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.3" y="245" width="0.2" height="15.0" fill="rgb(237,203,39)" rx="2" ry="2" />
<text  x="1173.26" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.0" y="1429" width="0.2" height="15.0" fill="rgb(250,51,47)" rx="2" ry="2" />
<text  x="13.00" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.5" y="373" width="0.1" height="15.0" fill="rgb(249,75,43)" rx="2" ry="2" />
<text  x="1173.45" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.3" y="1125" width="0.2" height="15.0" fill="rgb(244,63,35)" rx="2" ry="2" />
<text  x="1173.26" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.0" y="1493" width="0.2" height="15.0" fill="rgb(225,31,33)" rx="2" ry="2" />
<text  x="13.00" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="181" width="0.2" height="15.0" fill="rgb(226,142,28)" rx="2" ry="2" />
<text  x="1173.07" y="191.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="158.4" y="1653" width="0.2" height="15.0" fill="rgb(254,171,36)" rx="2" ry="2" />
<text  x="161.44" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.3" y="1621" width="0.2" height="15.0" fill="rgb(241,147,17)" rx="2" ry="2" />
<text  x="1173.26" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (54 samples, 0.89%)</title><rect x="139.1" y="1749" width="10.4" height="15.0" fill="rgb(243,221,12)" rx="2" ry="2" />
<text  x="142.09" y="1759.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::json_value::destroy (5 samples, 0.08%)</title><rect x="584.6" y="2005" width="1.0" height="15.0" fill="rgb(221,211,33)" rx="2" ry="2" />
<text  x="587.61" y="2015.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::push_back (1 samples, 0.02%)</title><rect x="1189.8" y="2053" width="0.2" height="15.0" fill="rgb(231,119,26)" rx="2" ry="2" />
<text  x="1192.81" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.0" y="1989" width="0.2" height="15.0" fill="rgb(246,40,14)" rx="2" ry="2" />
<text  x="13.00" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.5" y="709" width="0.1" height="15.0" fill="rgb(212,22,1)" rx="2" ry="2" />
<text  x="1173.45" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.0" y="1253" width="0.2" height="15.0" fill="rgb(209,113,20)" rx="2" ry="2" />
<text  x="13.00" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (36 samples, 0.59%)</title><rect x="178.4" y="1669" width="6.9" height="15.0" fill="rgb(211,53,18)" rx="2" ry="2" />
<text  x="181.38" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="169.3" y="949" width="0.2" height="15.0" fill="rgb(215,198,19)" rx="2" ry="2" />
<text  x="172.28" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.0" y="37" width="0.2" height="15.0" fill="rgb(252,4,49)" rx="2" ry="2" />
<text  x="13.00" y="47.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (2 samples, 0.03%)</title><rect x="208.4" y="1765" width="0.4" height="15.0" fill="rgb(229,12,19)" rx="2" ry="2" />
<text  x="211.38" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="1797" width="0.2" height="15.0" fill="rgb(225,223,25)" rx="2" ry="2" />
<text  x="82.87" y="1807.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (8 samples, 0.13%)</title><rect x="862.3" y="1941" width="1.6" height="15.0" fill="rgb(231,184,44)" rx="2" ry="2" />
<text  x="865.34" y="1951.5" ></text>
</g>
<g >
<title>fasttext::Vector::mul (26 samples, 0.43%)</title><rect x="568.4" y="1973" width="5.0" height="15.0" fill="rgb(247,5,8)" rx="2" ry="2" />
<text  x="571.36" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.0" y="53" width="0.2" height="15.0" fill="rgb(219,47,17)" rx="2" ry="2" />
<text  x="13.00" y="63.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="1125" width="0.2" height="15.0" fill="rgb(246,77,34)" rx="2" ry="2" />
<text  x="82.87" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="168.9" y="1765" width="0.6" height="15.0" fill="rgb(235,121,9)" rx="2" ry="2" />
<text  x="171.89" y="1775.5" ></text>
</g>
<g >
<title>ksys_read (1 samples, 0.02%)</title><rect x="915.4" y="1989" width="0.2" height="15.0" fill="rgb(207,182,1)" rx="2" ry="2" />
<text  x="918.37" y="1999.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (4 samples, 0.07%)</title><rect x="582.3" y="2005" width="0.8" height="15.0" fill="rgb(222,24,9)" rx="2" ry="2" />
<text  x="585.29" y="2015.5" ></text>
</g>
<g >
<title>__handle_mm_fault (10 samples, 0.16%)</title><rect x="38.3" y="1973" width="1.9" height="15.0" fill="rgb(210,6,44)" rx="2" ry="2" />
<text  x="41.26" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="210.1" y="1717" width="0.2" height="15.0" fill="rgb(227,220,34)" rx="2" ry="2" />
<text  x="213.12" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (1 samples, 0.02%)</title><rect x="192.7" y="1733" width="0.2" height="15.0" fill="rgb(254,155,40)" rx="2" ry="2" />
<text  x="195.70" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.5" y="117" width="0.1" height="15.0" fill="rgb(237,197,24)" rx="2" ry="2" />
<text  x="1173.45" y="127.5" ></text>
</g>
<g >
<title>Eigen::internal::general_matrix_vector_product&lt;long, float, Eigen::internal::const_blas_data_mapper&lt;float, long, 1&gt;, 1, false, float, Eigen::internal::const_blas_data_mapper&lt;float, long, 0&gt;, false, 0&gt;::run (157 samples, 2.58%)</title><rect x="44.4" y="2037" width="30.4" height="15.0" fill="rgb(206,75,53)" rx="2" ry="2" />
<text  x="47.45" y="2047.5" >Ei..</text>
</g>
<g >
<title>std::__numpunct_cache&lt;char&gt;::~__numpunct_cache (1 samples, 0.02%)</title><rect x="892.7" y="2037" width="0.2" height="15.0" fill="rgb(208,194,31)" rx="2" ry="2" />
<text  x="895.73" y="2047.5" ></text>
</g>
<g >
<title>get_futex_key_refs.isra.16 (1 samples, 0.02%)</title><rect x="586.9" y="1941" width="0.2" height="15.0" fill="rgb(232,126,2)" rx="2" ry="2" />
<text  x="589.94" y="1951.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (2 samples, 0.03%)</title><rect x="176.6" y="1573" width="0.4" height="15.0" fill="rgb(236,60,11)" rx="2" ry="2" />
<text  x="179.64" y="1583.5" ></text>
</g>
<g >
<title>vfs_read (1 samples, 0.02%)</title><rect x="915.4" y="1973" width="0.2" height="15.0" fill="rgb(207,126,15)" rx="2" ry="2" />
<text  x="918.37" y="1983.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::basic_regex&lt;char const*&gt; (200 samples, 3.28%)</title><rect x="171.2" y="1957" width="38.7" height="15.0" fill="rgb(251,174,1)" rx="2" ry="2" />
<text  x="174.22" y="1967.5" >std..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (28 samples, 0.46%)</title><rect x="842.0" y="1893" width="5.4" height="15.0" fill="rgb(208,127,10)" rx="2" ry="2" />
<text  x="845.02" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.5" y="277" width="0.1" height="15.0" fill="rgb(206,120,18)" rx="2" ry="2" />
<text  x="1173.45" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="1413" width="0.2" height="15.0" fill="rgb(235,72,8)" rx="2" ry="2" />
<text  x="1173.07" y="1423.5" ></text>
</g>
<g >
<title>handle_mm_fault (2 samples, 0.03%)</title><rect x="868.5" y="1973" width="0.4" height="15.0" fill="rgb(240,32,21)" rx="2" ry="2" />
<text  x="871.53" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt;,  (3 samples, 0.05%)</title><rect x="168.9" y="1941" width="0.6" height="15.0" fill="rgb(252,74,42)" rx="2" ry="2" />
<text  x="171.89" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="138.1" y="1877" width="0.4" height="15.0" fill="rgb(235,5,33)" rx="2" ry="2" />
<text  x="141.12" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.3" y="1301" width="0.2" height="15.0" fill="rgb(227,184,2)" rx="2" ry="2" />
<text  x="141.32" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="168.9" y="1605" width="0.6" height="15.0" fill="rgb(233,12,46)" rx="2" ry="2" />
<text  x="171.89" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.0" y="389" width="0.2" height="15.0" fill="rgb(227,108,4)" rx="2" ry="2" />
<text  x="13.00" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="169.3" y="1221" width="0.2" height="15.0" fill="rgb(225,48,34)" rx="2" ry="2" />
<text  x="172.28" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="169.3" y="789" width="0.2" height="15.0" fill="rgb(223,165,32)" rx="2" ry="2" />
<text  x="172.28" y="799.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="1029" width="0.2" height="15.0" fill="rgb(214,222,21)" rx="2" ry="2" />
<text  x="82.87" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.3" y="421" width="0.2" height="15.0" fill="rgb(211,112,1)" rx="2" ry="2" />
<text  x="1173.26" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.5" y="1205" width="0.1" height="15.0" fill="rgb(212,227,44)" rx="2" ry="2" />
<text  x="1173.45" y="1215.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (2 samples, 0.03%)</title><rect x="149.0" y="1589" width="0.3" height="15.0" fill="rgb(232,32,33)" rx="2" ry="2" />
<text  x="151.96" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (30 samples, 0.49%)</title><rect x="123.6" y="1717" width="5.8" height="15.0" fill="rgb(241,119,26)" rx="2" ry="2" />
<text  x="126.61" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.3" y="309" width="0.2" height="15.0" fill="rgb(247,18,16)" rx="2" ry="2" />
<text  x="1173.26" y="319.5" ></text>
</g>
<g >
<title>generic_file_read_iter (1 samples, 0.02%)</title><rect x="915.4" y="1909" width="0.2" height="15.0" fill="rgb(229,102,15)" rx="2" ry="2" />
<text  x="918.37" y="1919.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id@plt (1 samples, 0.02%)</title><rect x="167.5" y="1685" width="0.2" height="15.0" fill="rgb(239,104,4)" rx="2" ry="2" />
<text  x="170.54" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.0" y="1109" width="0.2" height="15.0" fill="rgb(254,4,1)" rx="2" ry="2" />
<text  x="13.00" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.6" y="869" width="0.2" height="15.0" fill="rgb(224,108,23)" rx="2" ry="2" />
<text  x="1173.65" y="879.5" ></text>
</g>
<g >
<title>onmt::unicode::explode_utf8 (52 samples, 0.85%)</title><rect x="630.1" y="1877" width="10.1" height="15.0" fill="rgb(218,123,2)" rx="2" ry="2" />
<text  x="633.10" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (3 samples, 0.05%)</title><rect x="208.8" y="1893" width="0.5" height="15.0" fill="rgb(250,208,13)" rx="2" ry="2" />
<text  x="211.76" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.3" y="901" width="0.2" height="15.0" fill="rgb(251,171,29)" rx="2" ry="2" />
<text  x="1173.26" y="911.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (2 samples, 0.03%)</title><rect x="116.3" y="1621" width="0.3" height="15.0" fill="rgb(211,219,49)" rx="2" ry="2" />
<text  x="119.25" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (104 samples, 1.71%)</title><rect x="103.5" y="1781" width="20.1" height="15.0" fill="rgb(247,151,11)" rx="2" ry="2" />
<text  x="106.48" y="1791.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.25] (1 samples, 0.02%)</title><rect x="41.2" y="2021" width="0.2" height="15.0" fill="rgb(246,133,40)" rx="2" ry="2" />
<text  x="44.16" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="37" width="0.2" height="15.0" fill="rgb(239,39,32)" rx="2" ry="2" />
<text  x="1173.07" y="47.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="949" width="0.2" height="15.0" fill="rgb(213,90,0)" rx="2" ry="2" />
<text  x="82.87" y="959.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (2 samples, 0.03%)</title><rect x="129.0" y="1669" width="0.4" height="15.0" fill="rgb(218,203,32)" rx="2" ry="2" />
<text  x="132.03" y="1679.5" ></text>
</g>
<g >
<title>onmt::unicode::cp_to_utf8[abi:cxx11] (1 samples, 0.02%)</title><rect x="629.9" y="1877" width="0.2" height="15.0" fill="rgb(222,219,16)" rx="2" ry="2" />
<text  x="632.90" y="1887.5" ></text>
</g>
<g >
<title>__dynamic_cast (4 samples, 0.07%)</title><rect x="123.8" y="1669" width="0.8" height="15.0" fill="rgb(207,141,39)" rx="2" ry="2" />
<text  x="126.80" y="1679.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (9 samples, 0.15%)</title><rect x="80.4" y="2005" width="1.8" height="15.0" fill="rgb(224,0,29)" rx="2" ry="2" />
<text  x="83.45" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="169.3" y="965" width="0.2" height="15.0" fill="rgb(224,105,47)" rx="2" ry="2" />
<text  x="172.28" y="975.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::basic_json (1 samples, 0.02%)</title><rect x="586.2" y="1925" width="0.2" height="15.0" fill="rgb(242,148,32)" rx="2" ry="2" />
<text  x="589.16" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="773" width="0.2" height="15.0" fill="rgb(210,214,43)" rx="2" ry="2" />
<text  x="82.87" y="783.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (106 samples, 1.74%)</title><rect x="1149.6" y="2053" width="20.5" height="15.0" fill="rgb(219,219,3)" rx="2" ry="2" />
<text  x="1152.55" y="2063.5" ></text>
</g>
<g >
<title>clear_page_erms (26 samples, 0.43%)</title><rect x="435.2" y="1845" width="5.0" height="15.0" fill="rgb(212,162,38)" rx="2" ry="2" />
<text  x="438.20" y="1855.5" ></text>
</g>
<g >
<title>std::__move_merge&lt;__gnu_cxx::__normal_iterator&lt;TDocument*, std::vector&lt;TDocument, std::allocator&lt;TDocument&gt; &gt; &gt;, TDocument*, __gnu_cxx::__ops::_Iter_comp_iter&lt;main::$_0&gt; &gt; (1 samples, 0.02%)</title><rect x="586.0" y="1973" width="0.2" height="15.0" fill="rgb(234,105,6)" rx="2" ry="2" />
<text  x="588.97" y="1983.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (2 samples, 0.03%)</title><rect x="878.0" y="2037" width="0.4" height="15.0" fill="rgb(244,8,13)" rx="2" ry="2" />
<text  x="881.02" y="2047.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (7 samples, 0.11%)</title><rect x="42.5" y="1893" width="1.4" height="15.0" fill="rgb(245,96,30)" rx="2" ry="2" />
<text  x="45.51" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="169.3" y="501" width="0.2" height="15.0" fill="rgb(230,36,18)" rx="2" ry="2" />
<text  x="172.28" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (38 samples, 0.62%)</title><rect x="103.5" y="1717" width="7.3" height="15.0" fill="rgb(220,4,50)" rx="2" ry="2" />
<text  x="106.48" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="981" width="0.2" height="15.0" fill="rgb(254,45,53)" rx="2" ry="2" />
<text  x="1173.07" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (1 samples, 0.02%)</title><rect x="209.0" y="1749" width="0.2" height="15.0" fill="rgb(226,142,42)" rx="2" ry="2" />
<text  x="211.96" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="229" width="0.2" height="15.0" fill="rgb(210,203,18)" rx="2" ry="2" />
<text  x="1173.07" y="239.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="325" width="0.2" height="15.0" fill="rgb(232,7,21)" rx="2" ry="2" />
<text  x="82.87" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (190 samples, 3.12%)</title><rect x="172.0" y="1845" width="36.8" height="15.0" fill="rgb(210,51,21)" rx="2" ry="2" />
<text  x="174.99" y="1855.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.3" y="597" width="0.2" height="15.0" fill="rgb(213,107,45)" rx="2" ry="2" />
<text  x="1173.26" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.0" y="1285" width="0.2" height="15.0" fill="rgb(253,65,29)" rx="2" ry="2" />
<text  x="13.00" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="169.3" y="341" width="0.2" height="15.0" fill="rgb(233,135,48)" rx="2" ry="2" />
<text  x="172.28" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (27 samples, 0.44%)</title><rect x="139.1" y="1621" width="5.2" height="15.0" fill="rgb(244,59,9)" rx="2" ry="2" />
<text  x="142.09" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.0" y="501" width="0.2" height="15.0" fill="rgb(211,158,52)" rx="2" ry="2" />
<text  x="13.00" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="169.3" y="741" width="0.2" height="15.0" fill="rgb(222,118,36)" rx="2" ry="2" />
<text  x="172.28" y="751.5" ></text>
</g>
<g >
<title>TDocument::TDocument (6 samples, 0.10%)</title><rect x="86.4" y="1989" width="1.2" height="15.0" fill="rgb(243,205,2)" rx="2" ry="2" />
<text  x="89.45" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="725" width="0.2" height="15.0" fill="rgb(243,146,26)" rx="2" ry="2" />
<text  x="82.87" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.5" y="1029" width="0.1" height="15.0" fill="rgb(254,190,14)" rx="2" ry="2" />
<text  x="1173.45" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="168.9" y="1669" width="0.6" height="15.0" fill="rgb(245,216,51)" rx="2" ry="2" />
<text  x="171.89" y="1679.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::set (3 samples, 0.05%)</title><rect x="616.4" y="1893" width="0.5" height="15.0" fill="rgb(250,158,52)" rx="2" ry="2" />
<text  x="619.35" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="169.3" y="853" width="0.2" height="15.0" fill="rgb(216,223,47)" rx="2" ry="2" />
<text  x="172.28" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.3" y="1909" width="0.2" height="15.0" fill="rgb(236,126,43)" rx="2" ry="2" />
<text  x="1173.26" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.3" y="837" width="0.2" height="15.0" fill="rgb(211,44,30)" rx="2" ry="2" />
<text  x="1173.26" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.3" y="1781" width="0.2" height="15.0" fill="rgb(206,145,34)" rx="2" ry="2" />
<text  x="1173.26" y="1791.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare@plt (4 samples, 0.07%)</title><rect x="855.4" y="1893" width="0.7" height="15.0" fill="rgb(221,20,41)" rx="2" ry="2" />
<text  x="858.37" y="1903.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (41 samples, 0.67%)</title><rect x="426.3" y="1957" width="7.9" height="15.0" fill="rgb(238,55,27)" rx="2" ry="2" />
<text  x="429.30" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.5" y="1749" width="0.1" height="15.0" fill="rgb(239,203,7)" rx="2" ry="2" />
<text  x="1173.45" y="1759.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (3 samples, 0.05%)</title><rect x="166.6" y="1669" width="0.6" height="15.0" fill="rgb(216,129,54)" rx="2" ry="2" />
<text  x="169.57" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.0" y="309" width="0.2" height="15.0" fill="rgb(230,21,54)" rx="2" ry="2" />
<text  x="13.00" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.5" y="309" width="0.1" height="15.0" fill="rgb(249,189,16)" rx="2" ry="2" />
<text  x="1173.45" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (152 samples, 2.49%)</title><rect x="139.1" y="1845" width="29.4" height="15.0" fill="rgb(238,224,6)" rx="2" ry="2" />
<text  x="142.09" y="1855.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="169.3" y="725" width="0.2" height="15.0" fill="rgb(219,52,17)" rx="2" ry="2" />
<text  x="172.28" y="735.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="915.4" y="2037" width="0.2" height="15.0" fill="rgb(254,130,17)" rx="2" ry="2" />
<text  x="918.37" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="168.9" y="1813" width="0.6" height="15.0" fill="rgb(220,128,25)" rx="2" ry="2" />
<text  x="171.89" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="357" width="0.2" height="15.0" fill="rgb(230,211,45)" rx="2" ry="2" />
<text  x="1173.07" y="367.5" ></text>
</g>
<g >
<title>tlb_flush_mmu_free (1 samples, 0.02%)</title><rect x="583.1" y="1845" width="0.2" height="15.0" fill="rgb(249,154,51)" rx="2" ry="2" />
<text  x="586.07" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.3" y="1557" width="0.2" height="15.0" fill="rgb(236,224,32)" rx="2" ry="2" />
<text  x="1173.26" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="1013" width="0.2" height="15.0" fill="rgb(246,192,41)" rx="2" ry="2" />
<text  x="82.87" y="1023.5" ></text>
</g>
<g >
<title>kthread_blkcg (1 samples, 0.02%)</title><rect x="441.0" y="1861" width="0.2" height="15.0" fill="rgb(240,218,19)" rx="2" ry="2" />
<text  x="444.01" y="1871.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (1 samples, 0.02%)</title><rect x="184.2" y="1605" width="0.2" height="15.0" fill="rgb(253,63,13)" rx="2" ry="2" />
<text  x="187.18" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="169.3" y="645" width="0.2" height="15.0" fill="rgb(242,203,33)" rx="2" ry="2" />
<text  x="172.28" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="210.3" y="1605" width="0.4" height="15.0" fill="rgb(249,40,5)" rx="2" ry="2" />
<text  x="213.31" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.6" y="1733" width="0.2" height="15.0" fill="rgb(227,13,49)" rx="2" ry="2" />
<text  x="1173.65" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.6" y="1381" width="0.2" height="15.0" fill="rgb(222,2,1)" rx="2" ry="2" />
<text  x="1173.65" y="1391.5" ></text>
</g>
<g >
<title>finish_task_switch (3 samples, 0.05%)</title><rect x="43.9" y="1925" width="0.5" height="15.0" fill="rgb(231,37,25)" rx="2" ry="2" />
<text  x="46.87" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (1 samples, 0.02%)</title><rect x="168.5" y="1861" width="0.2" height="15.0" fill="rgb(207,21,44)" rx="2" ry="2" />
<text  x="171.51" y="1871.5" ></text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::next_byte_in_range (16 samples, 0.26%)</title><rect x="97.9" y="1925" width="3.1" height="15.0" fill="rgb(222,81,12)" rx="2" ry="2" />
<text  x="100.87" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.3" y="1445" width="0.2" height="15.0" fill="rgb(213,207,8)" rx="2" ry="2" />
<text  x="141.32" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.6" y="117" width="0.2" height="15.0" fill="rgb(234,136,43)" rx="2" ry="2" />
<text  x="1173.65" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="169.3" y="389" width="0.2" height="15.0" fill="rgb(206,63,29)" rx="2" ry="2" />
<text  x="172.28" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="1957" width="0.2" height="15.0" fill="rgb(210,60,41)" rx="2" ry="2" />
<text  x="1173.07" y="1967.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1135.4" y="2021" width="0.2" height="15.0" fill="rgb(217,1,15)" rx="2" ry="2" />
<text  x="1138.42" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (71 samples, 1.16%)</title><rect x="172.0" y="1765" width="13.7" height="15.0" fill="rgb(224,170,44)" rx="2" ry="2" />
<text  x="174.99" y="1775.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1045.6" y="1989" width="0.2" height="15.0" fill="rgb(221,36,25)" rx="2" ry="2" />
<text  x="1048.62" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.3" y="1893" width="0.2" height="15.0" fill="rgb(229,118,49)" rx="2" ry="2" />
<text  x="1173.26" y="1903.5" ></text>
</g>
<g >
<title>std::operator&gt;&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (20 samples, 0.33%)</title><rect x="881.3" y="2005" width="3.9" height="15.0" fill="rgb(230,133,19)" rx="2" ry="2" />
<text  x="884.31" y="2015.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.02%)</title><rect x="183.0" y="1605" width="0.2" height="15.0" fill="rgb(205,61,48)" rx="2" ry="2" />
<text  x="186.02" y="1615.5" ></text>
</g>
<g >
<title>TAgencyRating::ScoreUrl (206 samples, 3.38%)</title><rect x="171.0" y="1989" width="39.9" height="15.0" fill="rgb(248,4,29)" rx="2" ry="2" />
<text  x="174.02" y="1999.5" >TAg..</text>
</g>
<g >
<title>onmt::Tokenizer::tokenize_text (593 samples, 9.73%)</title><rect x="640.5" y="1893" width="114.8" height="15.0" fill="rgb(251,216,29)" rx="2" ry="2" />
<text  x="643.55" y="1903.5" >onmt::Tokenize..</text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (2 samples, 0.03%)</title><rect x="144.7" y="1621" width="0.4" height="15.0" fill="rgb(243,215,20)" rx="2" ry="2" />
<text  x="147.70" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.6" y="1093" width="0.2" height="15.0" fill="rgb(254,183,8)" rx="2" ry="2" />
<text  x="1173.65" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="210.3" y="1669" width="0.4" height="15.0" fill="rgb(220,135,35)" rx="2" ry="2" />
<text  x="213.31" y="1679.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append@plt (2 samples, 0.03%)</title><rect x="847.4" y="1893" width="0.4" height="15.0" fill="rgb(228,113,2)" rx="2" ry="2" />
<text  x="850.44" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.5" y="1701" width="0.1" height="15.0" fill="rgb(246,2,53)" rx="2" ry="2" />
<text  x="1173.45" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (42 samples, 0.69%)</title><rect x="200.2" y="1813" width="8.2" height="15.0" fill="rgb(254,175,51)" rx="2" ry="2" />
<text  x="203.25" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.3" y="1253" width="0.2" height="15.0" fill="rgb(226,41,32)" rx="2" ry="2" />
<text  x="141.32" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.3" y="869" width="0.2" height="15.0" fill="rgb(206,174,40)" rx="2" ry="2" />
<text  x="1173.26" y="879.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="261" width="0.2" height="15.0" fill="rgb(231,124,49)" rx="2" ry="2" />
<text  x="82.87" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.6" y="885" width="0.2" height="15.0" fill="rgb(207,218,44)" rx="2" ry="2" />
<text  x="1173.65" y="895.5" ></text>
</g>
<g >
<title>get_futex_key (1 samples, 0.02%)</title><rect x="586.7" y="1941" width="0.2" height="15.0" fill="rgb(210,13,3)" rx="2" ry="2" />
<text  x="589.74" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.5" y="693" width="0.1" height="15.0" fill="rgb(218,85,8)" rx="2" ry="2" />
<text  x="1173.45" y="703.5" ></text>
</g>
<g >
<title>main (2,584 samples, 42.38%)</title><rect x="86.3" y="2021" width="500.1" height="15.0" fill="rgb(237,96,0)" rx="2" ry="2" />
<text  x="89.25" y="2031.5" >main</text>
</g>
<g >
<title>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::dump (2 samples, 0.03%)</title><rect x="583.8" y="1909" width="0.4" height="15.0" fill="rgb(215,10,9)" rx="2" ry="2" />
<text  x="586.84" y="1919.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::dump (5 samples, 0.08%)</title><rect x="583.6" y="2005" width="1.0" height="15.0" fill="rgb(215,118,50)" rx="2" ry="2" />
<text  x="586.65" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.0" y="341" width="0.2" height="15.0" fill="rgb(247,19,10)" rx="2" ry="2" />
<text  x="13.00" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="549" width="0.2" height="15.0" fill="rgb(245,95,47)" rx="2" ry="2" />
<text  x="1173.07" y="559.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::load (2 samples, 0.03%)</title><rect x="1006.7" y="2053" width="0.4" height="15.0" fill="rgb(244,122,43)" rx="2" ry="2" />
<text  x="1009.72" y="2063.5" ></text>
</g>
<g >
<title>malloc@plt (1 samples, 0.02%)</title><rect x="180.7" y="1621" width="0.2" height="15.0" fill="rgb(218,43,18)" rx="2" ry="2" />
<text  x="183.70" y="1631.5" ></text>
</g>
<g >
<title>DetectCategory (6 samples, 0.10%)</title><rect x="587.5" y="1973" width="1.2" height="15.0" fill="rgb(217,91,9)" rx="2" ry="2" />
<text  x="590.52" y="1983.5" ></text>
</g>
<g >
<title>fasttext::FastText::predictLine (1 samples, 0.02%)</title><rect x="588.1" y="1957" width="0.2" height="15.0" fill="rgb(227,3,44)" rx="2" ry="2" />
<text  x="591.10" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.3" y="981" width="0.2" height="15.0" fill="rgb(218,152,27)" rx="2" ry="2" />
<text  x="1173.26" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (175 samples, 2.87%)</title><rect x="103.3" y="1845" width="33.9" height="15.0" fill="rgb(211,58,46)" rx="2" ry="2" />
<text  x="106.29" y="1855.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="137.9" y="1925" width="0.6" height="15.0" fill="rgb(232,136,20)" rx="2" ry="2" />
<text  x="140.93" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (38 samples, 0.62%)</title><rect x="129.6" y="1797" width="7.4" height="15.0" fill="rgb(210,210,54)" rx="2" ry="2" />
<text  x="132.61" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (146 samples, 2.39%)</title><rect x="172.0" y="1813" width="28.2" height="15.0" fill="rgb(224,174,48)" rx="2" ry="2" />
<text  x="174.99" y="1823.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.3" y="37" width="0.2" height="15.0" fill="rgb(247,197,6)" rx="2" ry="2" />
<text  x="1173.26" y="47.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::set (1 samples, 0.02%)</title><rect x="590.4" y="1909" width="0.2" height="15.0" fill="rgb(224,227,47)" rx="2" ry="2" />
<text  x="593.42" y="1919.5" ></text>
</g>
<g >
<title>fasttext::FastText::getWordVector (12 samples, 0.20%)</title><rect x="563.5" y="1973" width="2.3" height="15.0" fill="rgb(246,224,26)" rx="2" ry="2" />
<text  x="566.52" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.6" y="1701" width="0.2" height="15.0" fill="rgb(225,62,52)" rx="2" ry="2" />
<text  x="1173.65" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="1765" width="0.2" height="15.0" fill="rgb(229,3,13)" rx="2" ry="2" />
<text  x="82.87" y="1775.5" ></text>
</g>
<g >
<title>page_fault (32 samples, 0.52%)</title><rect x="428.0" y="1941" width="6.2" height="15.0" fill="rgb(219,228,27)" rx="2" ry="2" />
<text  x="431.04" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.5" y="1637" width="0.1" height="15.0" fill="rgb(240,135,36)" rx="2" ry="2" />
<text  x="1173.45" y="1647.5" ></text>
</g>
<g >
<title>Eigen::internal::gebp_kernel&lt;float, float, long, Eigen::internal::blas_data_mapper&lt;float, long, 0, 0, 1&gt;, 48, 4, false, false&gt;::operator (26 samples, 0.43%)</title><rect x="421.3" y="1909" width="5.0" height="15.0" fill="rgb(247,33,18)" rx="2" ry="2" />
<text  x="424.27" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.5" y="1797" width="0.1" height="15.0" fill="rgb(227,45,47)" rx="2" ry="2" />
<text  x="1173.45" y="1807.5" ></text>
</g>
<g >
<title>fasttext::Vector::Vector (1 samples, 0.02%)</title><rect x="329.3" y="1989" width="0.2" height="15.0" fill="rgb(217,117,10)" rx="2" ry="2" />
<text  x="332.34" y="1999.5" ></text>
</g>
<g >
<title>__munmap (3 samples, 0.05%)</title><rect x="581.7" y="1989" width="0.6" height="15.0" fill="rgb(230,34,16)" rx="2" ry="2" />
<text  x="584.71" y="1999.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="172.0" y="1669" width="0.2" height="15.0" fill="rgb(245,67,35)" rx="2" ry="2" />
<text  x="174.99" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (32 samples, 0.52%)</title><rect x="111.0" y="1653" width="6.2" height="15.0" fill="rgb(211,81,40)" rx="2" ry="2" />
<text  x="114.03" y="1663.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::contains&lt;char const  (1 samples, 0.02%)</title><rect x="87.2" y="1957" width="0.2" height="15.0" fill="rgb(231,152,33)" rx="2" ry="2" />
<text  x="90.22" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (32 samples, 0.52%)</title><rect x="117.4" y="1749" width="6.2" height="15.0" fill="rgb(239,189,0)" rx="2" ry="2" />
<text  x="120.41" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.6" y="981" width="0.2" height="15.0" fill="rgb(224,62,40)" rx="2" ry="2" />
<text  x="1173.65" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="168.9" y="1589" width="0.2" height="15.0" fill="rgb(223,157,0)" rx="2" ry="2" />
<text  x="171.89" y="1599.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="174.3" y="1589" width="0.2" height="15.0" fill="rgb(207,50,20)" rx="2" ry="2" />
<text  x="177.31" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.5" y="1061" width="0.1" height="15.0" fill="rgb(219,158,33)" rx="2" ry="2" />
<text  x="1173.45" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.3" y="149" width="0.2" height="15.0" fill="rgb(245,37,13)" rx="2" ry="2" />
<text  x="1173.26" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="210.5" y="1557" width="0.2" height="15.0" fill="rgb(211,14,39)" rx="2" ry="2" />
<text  x="213.51" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="169.3" y="565" width="0.2" height="15.0" fill="rgb(225,60,7)" rx="2" ry="2" />
<text  x="172.28" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="437" width="0.2" height="15.0" fill="rgb(213,9,30)" rx="2" ry="2" />
<text  x="1173.07" y="447.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="581" width="0.2" height="15.0" fill="rgb(210,28,17)" rx="2" ry="2" />
<text  x="82.87" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (15 samples, 0.25%)</title><rect x="203.5" y="1701" width="2.9" height="15.0" fill="rgb(219,214,44)" rx="2" ry="2" />
<text  x="206.54" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.6" y="949" width="0.2" height="15.0" fill="rgb(246,102,6)" rx="2" ry="2" />
<text  x="1173.65" y="959.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="323.5" y="1973" width="0.2" height="15.0" fill="rgb(235,44,0)" rx="2" ry="2" />
<text  x="326.53" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.5" y="565" width="0.1" height="15.0" fill="rgb(206,145,43)" rx="2" ry="2" />
<text  x="1173.45" y="575.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1135.4" y="2005" width="0.2" height="15.0" fill="rgb(230,48,16)" rx="2" ry="2" />
<text  x="1138.42" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (2 samples, 0.03%)</title><rect x="208.4" y="1829" width="0.4" height="15.0" fill="rgb(247,149,18)" rx="2" ry="2" />
<text  x="211.38" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="168.9" y="1573" width="0.2" height="15.0" fill="rgb(206,218,2)" rx="2" ry="2" />
<text  x="171.89" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (17 samples, 0.28%)</title><rect x="106.2" y="1589" width="3.3" height="15.0" fill="rgb(236,76,7)" rx="2" ry="2" />
<text  x="109.19" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.0" y="1685" width="0.2" height="15.0" fill="rgb(248,35,32)" rx="2" ry="2" />
<text  x="13.00" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.5" y="805" width="0.1" height="15.0" fill="rgb(207,20,28)" rx="2" ry="2" />
<text  x="1173.45" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.3" y="1093" width="0.2" height="15.0" fill="rgb(232,62,5)" rx="2" ry="2" />
<text  x="1173.26" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.5" y="469" width="0.1" height="15.0" fill="rgb(240,26,46)" rx="2" ry="2" />
<text  x="1173.45" y="479.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="1109" width="0.2" height="15.0" fill="rgb(247,151,36)" rx="2" ry="2" />
<text  x="82.87" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="1973" width="0.2" height="15.0" fill="rgb(215,161,24)" rx="2" ry="2" />
<text  x="1173.07" y="1983.5" ></text>
</g>
<g >
<title>strlen@plt (11 samples, 0.18%)</title><rect x="858.1" y="1893" width="2.1" height="15.0" fill="rgb(209,96,49)" rx="2" ry="2" />
<text  x="861.08" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="1525" width="0.2" height="15.0" fill="rgb(251,201,42)" rx="2" ry="2" />
<text  x="82.87" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.6" y="853" width="0.2" height="15.0" fill="rgb(252,73,33)" rx="2" ry="2" />
<text  x="1173.65" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.3" y="1749" width="0.2" height="15.0" fill="rgb(243,17,9)" rx="2" ry="2" />
<text  x="141.32" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="169.1" y="1461" width="0.2" height="15.0" fill="rgb(250,77,27)" rx="2" ry="2" />
<text  x="172.09" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="169.3" y="629" width="0.2" height="15.0" fill="rgb(237,50,50)" rx="2" ry="2" />
<text  x="172.28" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (30 samples, 0.49%)</title><rect x="1140.1" y="2053" width="5.8" height="15.0" fill="rgb(210,165,49)" rx="2" ry="2" />
<text  x="1143.07" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="933" width="0.2" height="15.0" fill="rgb(237,76,40)" rx="2" ry="2" />
<text  x="1173.07" y="943.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="1221" width="0.2" height="15.0" fill="rgb(207,30,21)" rx="2" ry="2" />
<text  x="82.87" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.5" y="1765" width="0.1" height="15.0" fill="rgb(220,19,30)" rx="2" ry="2" />
<text  x="1173.45" y="1775.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::create&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="586.2" y="1861" width="0.2" height="15.0" fill="rgb(216,50,8)" rx="2" ry="2" />
<text  x="589.16" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Scanner&lt;char&gt;::_M_scan_normal (1 samples, 0.02%)</title><rect x="209.3" y="1893" width="0.2" height="15.0" fill="rgb(235,222,7)" rx="2" ry="2" />
<text  x="212.34" y="1903.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find (1 samples, 0.02%)</title><rect x="1145.9" y="2053" width="0.2" height="15.0" fill="rgb(229,47,5)" rx="2" ry="2" />
<text  x="1148.87" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="389" width="0.2" height="15.0" fill="rgb(236,73,34)" rx="2" ry="2" />
<text  x="82.87" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.6" y="357" width="0.2" height="15.0" fill="rgb(214,45,7)" rx="2" ry="2" />
<text  x="1173.65" y="367.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="277" width="0.2" height="15.0" fill="rgb(211,14,11)" rx="2" ry="2" />
<text  x="82.87" y="287.5" ></text>
</g>
<g >
<title>Eigen::internal::generic_product_impl&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt;, Eigen::DenseShape, Eigen::DenseShape, 8&gt;::evalTo&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt; (26 samples, 0.43%)</title><rect x="421.3" y="1957" width="5.0" height="15.0" fill="rgb(241,152,18)" rx="2" ry="2" />
<text  x="424.27" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="210.5" y="1349" width="0.2" height="15.0" fill="rgb(216,66,34)" rx="2" ry="2" />
<text  x="213.51" y="1359.5" ></text>
</g>
<g >
<title>memcmp@plt (4 samples, 0.07%)</title><rect x="1115.9" y="2053" width="0.7" height="15.0" fill="rgb(250,183,45)" rx="2" ry="2" />
<text  x="1118.88" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.3" y="1733" width="0.2" height="15.0" fill="rgb(243,39,42)" rx="2" ry="2" />
<text  x="1173.26" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.3" y="1365" width="0.2" height="15.0" fill="rgb(208,60,21)" rx="2" ry="2" />
<text  x="141.32" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.6" y="773" width="0.2" height="15.0" fill="rgb(253,103,41)" rx="2" ry="2" />
<text  x="1173.65" y="783.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt;@plt (1 samples, 0.02%)</title><rect x="162.3" y="1653" width="0.2" height="15.0" fill="rgb(220,10,27)" rx="2" ry="2" />
<text  x="165.31" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.0" y="1973" width="0.2" height="15.0" fill="rgb(210,218,10)" rx="2" ry="2" />
<text  x="13.00" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.3" y="1765" width="0.2" height="15.0" fill="rgb(248,165,16)" rx="2" ry="2" />
<text  x="1173.26" y="1775.5" ></text>
</g>
<g >
<title>malloc (81 samples, 1.33%)</title><rect x="1099.6" y="2053" width="15.7" height="15.0" fill="rgb(251,208,21)" rx="2" ry="2" />
<text  x="1102.62" y="2063.5" ></text>
</g>
<g >
<title>do_page_fault (32 samples, 0.52%)</title><rect x="428.0" y="1925" width="6.2" height="15.0" fill="rgb(229,45,5)" rx="2" ry="2" />
<text  x="431.04" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="1429" width="0.2" height="15.0" fill="rgb(229,127,49)" rx="2" ry="2" />
<text  x="82.87" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.0" y="805" width="0.2" height="15.0" fill="rgb(240,103,31)" rx="2" ry="2" />
<text  x="13.00" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="138.1" y="1861" width="0.4" height="15.0" fill="rgb(229,146,19)" rx="2" ry="2" />
<text  x="141.12" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.5" y="853" width="0.1" height="15.0" fill="rgb(217,55,37)" rx="2" ry="2" />
<text  x="1173.45" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="210.1" y="1765" width="0.2" height="15.0" fill="rgb(238,62,22)" rx="2" ry="2" />
<text  x="213.12" y="1775.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (1 samples, 0.02%)</title><rect x="177.2" y="1589" width="0.2" height="15.0" fill="rgb(250,46,1)" rx="2" ry="2" />
<text  x="180.22" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.0" y="453" width="0.2" height="15.0" fill="rgb(215,72,29)" rx="2" ry="2" />
<text  x="13.00" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.07%)</title><rect x="209.9" y="1909" width="0.8" height="15.0" fill="rgb(212,224,18)" rx="2" ry="2" />
<text  x="212.92" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (1 samples, 0.02%)</title><rect x="192.5" y="1669" width="0.2" height="15.0" fill="rgb(253,17,33)" rx="2" ry="2" />
<text  x="195.51" y="1679.5" ></text>
</g>
<g >
<title>unmap_page_range (2 samples, 0.03%)</title><rect x="454.2" y="1829" width="0.4" height="15.0" fill="rgb(212,152,0)" rx="2" ry="2" />
<text  x="457.17" y="1839.5" ></text>
</g>
<g >
<title>do_syscall_64 (14 samples, 0.23%)</title><rect x="41.7" y="1989" width="2.7" height="15.0" fill="rgb(209,77,20)" rx="2" ry="2" />
<text  x="44.74" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (34 samples, 0.56%)</title><rect x="155.9" y="1685" width="6.6" height="15.0" fill="rgb(252,111,15)" rx="2" ry="2" />
<text  x="158.93" y="1695.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (3 samples, 0.05%)</title><rect x="87.6" y="1989" width="0.6" height="15.0" fill="rgb(215,143,22)" rx="2" ry="2" />
<text  x="90.61" y="1999.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.10%)</title><rect x="85.1" y="2021" width="1.2" height="15.0" fill="rgb(224,31,0)" rx="2" ry="2" />
<text  x="88.09" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (1 samples, 0.02%)</title><rect x="168.7" y="1877" width="0.2" height="15.0" fill="rgb(245,162,8)" rx="2" ry="2" />
<text  x="171.70" y="1887.5" ></text>
</g>
<g >
<title>__vfs_write (1 samples, 0.02%)</title><rect x="894.3" y="1941" width="0.2" height="15.0" fill="rgb(210,14,52)" rx="2" ry="2" />
<text  x="897.27" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.3" y="53" width="0.2" height="15.0" fill="rgb(243,39,54)" rx="2" ry="2" />
<text  x="1173.26" y="63.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (3 samples, 0.05%)</title><rect x="199.3" y="1669" width="0.6" height="15.0" fill="rgb(229,50,13)" rx="2" ry="2" />
<text  x="202.28" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="169.1" y="1397" width="0.2" height="15.0" fill="rgb(239,185,0)" rx="2" ry="2" />
<text  x="172.09" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (37 samples, 0.61%)</title><rect x="178.2" y="1733" width="7.1" height="15.0" fill="rgb(252,157,43)" rx="2" ry="2" />
<text  x="181.18" y="1743.5" ></text>
</g>
<g >
<title>__do_page_fault (11 samples, 0.18%)</title><rect x="708.1" y="1829" width="2.1" height="15.0" fill="rgb(219,76,44)" rx="2" ry="2" />
<text  x="711.09" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (41 samples, 0.67%)</title><rect x="200.4" y="1781" width="8.0" height="15.0" fill="rgb(220,9,9)" rx="2" ry="2" />
<text  x="203.44" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.0" y="549" width="0.2" height="15.0" fill="rgb(230,164,51)" rx="2" ry="2" />
<text  x="13.00" y="559.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;TDocument, std::allocator&lt;TDocument&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;TDocument, std::allocator&lt;TDocument&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;TDocument, std::allocator&lt;TDocument&gt; &gt; &gt; &gt; &gt;::_M_erase (1 samples, 0.02%)</title><rect x="585.6" y="2005" width="0.2" height="15.0" fill="rgb(252,210,47)" rx="2" ry="2" />
<text  x="588.58" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="1701" width="0.2" height="15.0" fill="rgb(214,21,3)" rx="2" ry="2" />
<text  x="82.87" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.6" y="453" width="0.2" height="15.0" fill="rgb(217,196,27)" rx="2" ry="2" />
<text  x="1173.65" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.5" y="645" width="0.1" height="15.0" fill="rgb(209,207,44)" rx="2" ry="2" />
<text  x="1173.45" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="210.1" y="1797" width="0.6" height="15.0" fill="rgb(250,9,5)" rx="2" ry="2" />
<text  x="213.12" y="1807.5" ></text>
</g>
<g >
<title>std::__basic_future&lt;boost::optional&lt;TDocument&gt; &gt;::_M_get_result (1 samples, 0.02%)</title><rect x="101.3" y="1973" width="0.2" height="15.0" fill="rgb(239,11,40)" rx="2" ry="2" />
<text  x="104.35" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (14 samples, 0.23%)</title><rect x="196.0" y="1669" width="2.7" height="15.0" fill="rgb(227,29,30)" rx="2" ry="2" />
<text  x="198.99" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="1093" width="0.2" height="15.0" fill="rgb(228,155,25)" rx="2" ry="2" />
<text  x="82.87" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.0" y="613" width="0.2" height="15.0" fill="rgb(229,101,25)" rx="2" ry="2" />
<text  x="13.00" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.5" y="1333" width="0.1" height="15.0" fill="rgb(228,49,16)" rx="2" ry="2" />
<text  x="1173.45" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.0" y="1605" width="0.2" height="15.0" fill="rgb(217,21,4)" rx="2" ry="2" />
<text  x="13.00" y="1615.5" ></text>
</g>
<g >
<title>__generic_file_write_iter (1 samples, 0.02%)</title><rect x="894.3" y="1893" width="0.2" height="15.0" fill="rgb(213,25,38)" rx="2" ry="2" />
<text  x="897.27" y="1903.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="79.7" y="2021" width="0.2" height="15.0" fill="rgb(228,203,12)" rx="2" ry="2" />
<text  x="82.67" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (26 samples, 0.43%)</title><rect x="144.5" y="1717" width="5.0" height="15.0" fill="rgb(220,52,33)" rx="2" ry="2" />
<text  x="147.51" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.6" y="837" width="0.2" height="15.0" fill="rgb(232,123,47)" rx="2" ry="2" />
<text  x="1173.65" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.5" y="997" width="0.1" height="15.0" fill="rgb(219,49,20)" rx="2" ry="2" />
<text  x="1173.45" y="1007.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;std::__detail::_State&lt;char&gt; const*, std::__detail::_State&lt;char&gt;*&gt; (1 samples, 0.02%)</title><rect x="129.4" y="1717" width="0.2" height="15.0" fill="rgb(240,0,49)" rx="2" ry="2" />
<text  x="132.41" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="1237" width="0.2" height="15.0" fill="rgb(209,119,19)" rx="2" ry="2" />
<text  x="1173.07" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.5" y="1461" width="0.1" height="15.0" fill="rgb(232,53,43)" rx="2" ry="2" />
<text  x="1173.45" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.3" y="165" width="0.2" height="15.0" fill="rgb(229,125,9)" rx="2" ry="2" />
<text  x="1173.26" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.6" y="517" width="0.2" height="15.0" fill="rgb(216,39,3)" rx="2" ry="2" />
<text  x="1173.65" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="1061" width="0.2" height="15.0" fill="rgb(222,4,9)" rx="2" ry="2" />
<text  x="1173.07" y="1071.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="1733" width="0.2" height="15.0" fill="rgb(245,52,7)" rx="2" ry="2" />
<text  x="82.87" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="533" width="0.2" height="15.0" fill="rgb(220,229,48)" rx="2" ry="2" />
<text  x="1173.07" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::reserve@plt (1 samples, 0.02%)</title><rect x="640.4" y="1877" width="0.1" height="15.0" fill="rgb(219,214,50)" rx="2" ry="2" />
<text  x="643.35" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.3" y="693" width="0.2" height="15.0" fill="rgb(214,195,29)" rx="2" ry="2" />
<text  x="1173.26" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (1 samples, 0.02%)</title><rect x="209.0" y="1765" width="0.2" height="15.0" fill="rgb(217,192,29)" rx="2" ry="2" />
<text  x="211.96" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.6" y="1365" width="0.2" height="15.0" fill="rgb(211,21,31)" rx="2" ry="2" />
<text  x="1173.65" y="1375.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="1269" width="0.2" height="15.0" fill="rgb(225,204,7)" rx="2" ry="2" />
<text  x="82.87" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="1157" width="0.2" height="15.0" fill="rgb(232,111,18)" rx="2" ry="2" />
<text  x="1173.07" y="1167.5" ></text>
</g>
<g >
<title>std::istream::sentry::sentry (1 samples, 0.02%)</title><rect x="580.0" y="1973" width="0.2" height="15.0" fill="rgb(248,65,26)" rx="2" ry="2" />
<text  x="582.97" y="1983.5" ></text>
</g>
<g >
<title>GetHost (205 samples, 3.36%)</title><rect x="171.0" y="1973" width="39.7" height="15.0" fill="rgb(233,149,8)" rx="2" ry="2" />
<text  x="174.02" y="1983.5" >Get..</text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (5 samples, 0.08%)</title><rect x="207.2" y="1701" width="1.0" height="15.0" fill="rgb(236,159,24)" rx="2" ry="2" />
<text  x="210.22" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.5" y="949" width="0.1" height="15.0" fill="rgb(239,131,12)" rx="2" ry="2" />
<text  x="1173.45" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.5" y="725" width="0.1" height="15.0" fill="rgb(213,144,20)" rx="2" ry="2" />
<text  x="1173.45" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="168.9" y="1781" width="0.6" height="15.0" fill="rgb(233,1,17)" rx="2" ry="2" />
<text  x="171.89" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1170.1" y="2053" width="0.4" height="15.0" fill="rgb(209,55,20)" rx="2" ry="2" />
<text  x="1173.07" y="2063.5" ></text>
</g>
<g >
<title>fasttext::QuantMatrix::addRowToVector (1 samples, 0.02%)</title><rect x="83.9" y="2021" width="0.2" height="15.0" fill="rgb(205,125,10)" rx="2" ry="2" />
<text  x="86.93" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.3" y="1445" width="0.2" height="15.0" fill="rgb(217,85,46)" rx="2" ry="2" />
<text  x="1173.26" y="1455.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="1237" width="0.2" height="15.0" fill="rgb(218,21,4)" rx="2" ry="2" />
<text  x="82.87" y="1247.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::do_tolower (1 samples, 0.02%)</title><rect x="206.4" y="1701" width="0.2" height="15.0" fill="rgb(254,162,14)" rx="2" ry="2" />
<text  x="209.44" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="41.2" y="2037" width="0.2" height="15.0" fill="rgb(237,56,13)" rx="2" ry="2" />
<text  x="44.16" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="1157" width="0.2" height="15.0" fill="rgb(227,146,14)" rx="2" ry="2" />
<text  x="82.87" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Scanner&lt;char&gt;::_M_scan_normal (2 samples, 0.03%)</title><rect x="209.5" y="1909" width="0.4" height="15.0" fill="rgb(254,218,8)" rx="2" ry="2" />
<text  x="212.54" y="1919.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::reserve (3 samples, 0.05%)</title><rect x="639.6" y="1861" width="0.6" height="15.0" fill="rgb(213,189,29)" rx="2" ry="2" />
<text  x="642.58" y="1871.5" ></text>
</g>
<g >
<title>nlohmann::operator== (1 samples, 0.02%)</title><rect x="588.3" y="1925" width="0.2" height="15.0" fill="rgb(246,74,52)" rx="2" ry="2" />
<text  x="591.29" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.3" y="1397" width="0.2" height="15.0" fill="rgb(227,113,36)" rx="2" ry="2" />
<text  x="141.32" y="1407.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (4 samples, 0.07%)</title><rect x="183.4" y="1605" width="0.8" height="15.0" fill="rgb(242,195,45)" rx="2" ry="2" />
<text  x="186.41" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.6" y="821" width="0.2" height="15.0" fill="rgb(233,168,35)" rx="2" ry="2" />
<text  x="1173.65" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.5" y="917" width="0.1" height="15.0" fill="rgb(207,140,7)" rx="2" ry="2" />
<text  x="1173.45" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (34 samples, 0.56%)</title><rect x="155.9" y="1669" width="6.6" height="15.0" fill="rgb(208,212,49)" rx="2" ry="2" />
<text  x="158.93" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="169.1" y="1429" width="0.2" height="15.0" fill="rgb(224,163,33)" rx="2" ry="2" />
<text  x="172.09" y="1439.5" ></text>
</g>
<g >
<title>release_pages (1 samples, 0.02%)</title><rect x="581.7" y="1797" width="0.2" height="15.0" fill="rgb(240,117,0)" rx="2" ry="2" />
<text  x="584.71" y="1807.5" ></text>
</g>
<g >
<title>Eigen::internal::general_matrix_matrix_product&lt;long, float, 0, false, float, 1, false, 0, 1&gt;::run (26 samples, 0.43%)</title><rect x="421.3" y="1925" width="5.0" height="15.0" fill="rgb(219,119,39)" rx="2" ry="2" />
<text  x="424.27" y="1935.5" ></text>
</g>
<g >
<title>free@plt (1 samples, 0.02%)</title><rect x="613.3" y="1893" width="0.2" height="15.0" fill="rgb(245,173,54)" rx="2" ry="2" />
<text  x="616.26" y="1903.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.02%)</title><rect x="840.9" y="1829" width="0.2" height="15.0" fill="rgb(216,96,28)" rx="2" ry="2" />
<text  x="843.86" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.0" y="677" width="0.2" height="15.0" fill="rgb(211,101,12)" rx="2" ry="2" />
<text  x="13.00" y="687.5" ></text>
</g>
<g >
<title>handle_mm_fault (10 samples, 0.16%)</title><rect x="708.3" y="1813" width="1.9" height="15.0" fill="rgb(226,224,35)" rx="2" ry="2" />
<text  x="711.28" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="210.1" y="1701" width="0.2" height="15.0" fill="rgb(211,160,43)" rx="2" ry="2" />
<text  x="213.12" y="1711.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="101.0" y="1941" width="0.2" height="15.0" fill="rgb(228,154,21)" rx="2" ry="2" />
<text  x="103.96" y="1951.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (2 samples, 0.03%)</title><rect x="206.6" y="1701" width="0.4" height="15.0" fill="rgb(216,6,34)" rx="2" ry="2" />
<text  x="209.63" y="1711.5" ></text>
</g>
<g >
<title>fasttext::Vector::addRow (2 samples, 0.03%)</title><rect x="329.5" y="1989" width="0.4" height="15.0" fill="rgb(249,108,41)" rx="2" ry="2" />
<text  x="332.53" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="892.7" y="2021" width="0.2" height="15.0" fill="rgb(246,148,0)" rx="2" ry="2" />
<text  x="895.73" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="169.3" y="661" width="0.2" height="15.0" fill="rgb(208,69,7)" rx="2" ry="2" />
<text  x="172.28" y="671.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="151.7" y="1621" width="0.2" height="15.0" fill="rgb(206,108,27)" rx="2" ry="2" />
<text  x="154.67" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.3" y="1957" width="0.2" height="15.0" fill="rgb(237,83,3)" rx="2" ry="2" />
<text  x="1173.26" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.6" y="485" width="0.2" height="15.0" fill="rgb(241,93,20)" rx="2" ry="2" />
<text  x="1173.65" y="495.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="894.3" y="2005" width="0.2" height="15.0" fill="rgb(235,164,41)" rx="2" ry="2" />
<text  x="897.27" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.3" y="661" width="0.2" height="15.0" fill="rgb(241,182,5)" rx="2" ry="2" />
<text  x="1173.26" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.3" y="1237" width="0.2" height="15.0" fill="rgb(235,66,32)" rx="2" ry="2" />
<text  x="1173.26" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.5" y="1093" width="0.1" height="15.0" fill="rgb(241,66,32)" rx="2" ry="2" />
<text  x="1173.45" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="169.3" y="869" width="0.2" height="15.0" fill="rgb(220,197,49)" rx="2" ry="2" />
<text  x="172.28" y="879.5" ></text>
</g>
<g >
<title>__handle_mm_fault (2 samples, 0.03%)</title><rect x="746.6" y="1813" width="0.4" height="15.0" fill="rgb(206,30,33)" rx="2" ry="2" />
<text  x="749.60" y="1823.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (2 samples, 0.03%)</title><rect x="205.9" y="1685" width="0.3" height="15.0" fill="rgb(223,72,45)" rx="2" ry="2" />
<text  x="208.86" y="1695.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (1 samples, 0.02%)</title><rect x="116.1" y="1605" width="0.2" height="15.0" fill="rgb(206,84,16)" rx="2" ry="2" />
<text  x="119.06" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.0" y="1525" width="0.2" height="15.0" fill="rgb(212,17,1)" rx="2" ry="2" />
<text  x="13.00" y="1535.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="454.2" y="1941" width="0.4" height="15.0" fill="rgb(237,126,11)" rx="2" ry="2" />
<text  x="457.17" y="1951.5" ></text>
</g>
<g >
<title>fasttext::Loss::predict (2 samples, 0.03%)</title><rect x="80.1" y="2005" width="0.3" height="15.0" fill="rgb(253,11,26)" rx="2" ry="2" />
<text  x="83.06" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.3" y="949" width="0.2" height="15.0" fill="rgb(253,100,3)" rx="2" ry="2" />
<text  x="1173.26" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (41 samples, 0.67%)</title><rect x="200.4" y="1797" width="8.0" height="15.0" fill="rgb(235,223,23)" rx="2" ry="2" />
<text  x="203.44" y="1807.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::underflow (1 samples, 0.02%)</title><rect x="878.8" y="2005" width="0.2" height="15.0" fill="rgb(238,113,17)" rx="2" ry="2" />
<text  x="881.79" y="2015.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="151.3" y="1621" width="0.2" height="15.0" fill="rgb(208,31,25)" rx="2" ry="2" />
<text  x="154.28" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="1189" width="0.2" height="15.0" fill="rgb(222,175,48)" rx="2" ry="2" />
<text  x="82.87" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.5" y="1877" width="0.1" height="15.0" fill="rgb(219,118,54)" rx="2" ry="2" />
<text  x="1173.45" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (135 samples, 2.21%)</title><rect x="103.5" y="1813" width="26.1" height="15.0" fill="rgb(229,17,52)" rx="2" ry="2" />
<text  x="106.48" y="1823.5" >s..</text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (2 samples, 0.03%)</title><rect x="110.4" y="1589" width="0.4" height="15.0" fill="rgb(215,122,34)" rx="2" ry="2" />
<text  x="113.45" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="1365" width="0.2" height="15.0" fill="rgb(241,72,33)" rx="2" ry="2" />
<text  x="82.87" y="1375.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (2 samples, 0.03%)</title><rect x="128.4" y="1653" width="0.4" height="15.0" fill="rgb(238,66,3)" rx="2" ry="2" />
<text  x="131.45" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="405" width="0.2" height="15.0" fill="rgb(249,67,43)" rx="2" ry="2" />
<text  x="82.87" y="415.5" ></text>
</g>
<g >
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="1046.0" y="1957" width="0.2" height="15.0" fill="rgb(236,149,34)" rx="2" ry="2" />
<text  x="1049.01" y="1967.5" ></text>
</g>
<g >
<title>std::__merge_sort_with_buffer&lt;__gnu_cxx::__normal_iterator&lt;TDocument*, std::vector&lt;TDocument, std::allocator&lt;TDocument&gt; &gt; &gt;, TDocument*, __gnu_cxx::__ops::_Iter_comp_iter&lt;main::$_0&gt; &gt; (2 samples, 0.03%)</title><rect x="585.8" y="1989" width="0.4" height="15.0" fill="rgb(209,45,53)" rx="2" ry="2" />
<text  x="588.77" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="168.9" y="1893" width="0.6" height="15.0" fill="rgb(243,67,4)" rx="2" ry="2" />
<text  x="171.89" y="1903.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::_M_transform (11 samples, 0.18%)</title><rect x="1146.3" y="2053" width="2.1" height="15.0" fill="rgb(247,9,0)" rx="2" ry="2" />
<text  x="1149.26" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (36 samples, 0.59%)</title><rect x="192.9" y="1733" width="7.0" height="15.0" fill="rgb(216,42,48)" rx="2" ry="2" />
<text  x="195.89" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.3" y="1429" width="0.2" height="15.0" fill="rgb(236,51,47)" rx="2" ry="2" />
<text  x="141.32" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="1205" width="0.2" height="15.0" fill="rgb(253,161,36)" rx="2" ry="2" />
<text  x="1173.07" y="1215.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="693" width="0.2" height="15.0" fill="rgb(254,157,12)" rx="2" ry="2" />
<text  x="82.87" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="1397" width="0.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1173.07" y="1407.5" ></text>
</g>
<g >
<title>mem_cgroup_commit_charge (1 samples, 0.02%)</title><rect x="79.5" y="1941" width="0.2" height="15.0" fill="rgb(210,153,33)" rx="2" ry="2" />
<text  x="82.48" y="1951.5" ></text>
</g>
<g >
<title>__do_munmap (2 samples, 0.03%)</title><rect x="454.2" y="1893" width="0.4" height="15.0" fill="rgb(232,78,12)" rx="2" ry="2" />
<text  x="457.17" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (23 samples, 0.38%)</title><rect x="888.3" y="2021" width="4.4" height="15.0" fill="rgb(231,168,5)" rx="2" ry="2" />
<text  x="891.27" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="421" width="0.2" height="15.0" fill="rgb(216,70,48)" rx="2" ry="2" />
<text  x="1173.07" y="431.5" ></text>
</g>
<g >
<title>ksys_read (6 samples, 0.10%)</title><rect x="85.1" y="1973" width="1.2" height="15.0" fill="rgb(239,102,51)" rx="2" ry="2" />
<text  x="88.09" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.3" y="533" width="0.2" height="15.0" fill="rgb(212,186,0)" rx="2" ry="2" />
<text  x="1173.26" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.3" y="1925" width="0.2" height="15.0" fill="rgb(237,122,40)" rx="2" ry="2" />
<text  x="1173.26" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.3" y="741" width="0.2" height="15.0" fill="rgb(219,36,27)" rx="2" ry="2" />
<text  x="1173.26" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.6" y="101" width="0.2" height="15.0" fill="rgb(207,159,47)" rx="2" ry="2" />
<text  x="1173.65" y="111.5" ></text>
</g>
<g >
<title>__dynamic_cast (10 samples, 0.16%)</title><rect x="103.7" y="1589" width="1.9" height="15.0" fill="rgb(218,86,46)" rx="2" ry="2" />
<text  x="106.67" y="1599.5" ></text>
</g>
<g >
<title>tlb_flush_mmu_free (1 samples, 0.02%)</title><rect x="916.3" y="1909" width="0.2" height="15.0" fill="rgb(225,56,25)" rx="2" ry="2" />
<text  x="919.34" y="1919.5" ></text>
</g>
<g >
<title>free@plt (1 samples, 0.02%)</title><rect x="158.2" y="1653" width="0.2" height="15.0" fill="rgb(251,50,24)" rx="2" ry="2" />
<text  x="161.25" y="1663.5" ></text>
</g>
<g >
<title>std::__move_merge&lt;__gnu_cxx::__normal_iterator&lt;TWeightedNewsCluster*, std::vector&lt;TWeightedNewsCluster, std::allocator&lt;TWeightedNewsCluster&gt; &gt; &gt;, TWeightedNewsCluster*, __gnu_cxx::__ops::_Iter_comp_iter&lt;Rank (1 samples, 0.02%)</title><rect x="169.9" y="1957" width="0.2" height="15.0" fill="rgb(227,114,19)" rx="2" ry="2" />
<text  x="172.86" y="1967.5" ></text>
</g>
<g >
<title>handle_mm_fault (4 samples, 0.07%)</title><rect x="78.9" y="1973" width="0.8" height="15.0" fill="rgb(243,15,22)" rx="2" ry="2" />
<text  x="81.90" y="1983.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (1 samples, 0.02%)</title><rect x="581.7" y="1877" width="0.2" height="15.0" fill="rgb(206,78,20)" rx="2" ry="2" />
<text  x="584.71" y="1887.5" ></text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.05%)</title><rect x="118.0" y="1637" width="0.6" height="15.0" fill="rgb(226,138,0)" rx="2" ry="2" />
<text  x="120.99" y="1647.5" ></text>
</g>
<g >
<title>cfree (1 samples, 0.02%)</title><rect x="168.7" y="1749" width="0.2" height="15.0" fill="rgb(225,89,26)" rx="2" ry="2" />
<text  x="171.70" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.6" y="1749" width="0.2" height="15.0" fill="rgb(225,193,27)" rx="2" ry="2" />
<text  x="1173.65" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.6" y="1221" width="0.2" height="15.0" fill="rgb(205,30,49)" rx="2" ry="2" />
<text  x="1173.65" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="169.3" y="1269" width="0.2" height="15.0" fill="rgb(247,50,43)" rx="2" ry="2" />
<text  x="172.28" y="1279.5" ></text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::get (2 samples, 0.03%)</title><rect x="88.4" y="1941" width="0.4" height="15.0" fill="rgb(249,133,9)" rx="2" ry="2" />
<text  x="91.38" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="169.1" y="1381" width="0.2" height="15.0" fill="rgb(242,165,3)" rx="2" ry="2" />
<text  x="172.09" y="1391.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="1909" width="0.2" height="15.0" fill="rgb(247,149,4)" rx="2" ry="2" />
<text  x="82.87" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.0" y="213" width="0.2" height="15.0" fill="rgb(244,105,43)" rx="2" ry="2" />
<text  x="13.00" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="1525" width="0.2" height="15.0" fill="rgb(226,144,45)" rx="2" ry="2" />
<text  x="1173.07" y="1535.5" ></text>
</g>
<g >
<title>onmt::unicode::explode_utf8_with_marks (201 samples, 3.30%)</title><rect x="671.5" y="1877" width="38.9" height="15.0" fill="rgb(207,11,16)" rx="2" ry="2" />
<text  x="674.51" y="1887.5" >onm..</text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (3 samples, 0.05%)</title><rect x="135.2" y="1685" width="0.6" height="15.0" fill="rgb(228,116,42)" rx="2" ry="2" />
<text  x="138.22" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (155 samples, 2.54%)</title><rect x="138.9" y="1909" width="30.0" height="15.0" fill="rgb(247,148,11)" rx="2" ry="2" />
<text  x="141.90" y="1919.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.3" y="1045" width="0.2" height="15.0" fill="rgb(248,26,45)" rx="2" ry="2" />
<text  x="1173.26" y="1055.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct (10 samples, 0.16%)</title><rect x="1133.5" y="2053" width="1.9" height="15.0" fill="rgb(235,162,39)" rx="2" ry="2" />
<text  x="1136.49" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="169.3" y="581" width="0.2" height="15.0" fill="rgb(213,16,10)" rx="2" ry="2" />
<text  x="172.28" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="168.9" y="1701" width="0.6" height="15.0" fill="rgb(222,173,27)" rx="2" ry="2" />
<text  x="171.89" y="1711.5" ></text>
</g>
<g >
<title>__x64_sys_futex (11 samples, 0.18%)</title><rect x="41.7" y="1973" width="2.2" height="15.0" fill="rgb(253,201,22)" rx="2" ry="2" />
<text  x="44.74" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="53" width="0.2" height="15.0" fill="rgb(232,48,27)" rx="2" ry="2" />
<text  x="1173.07" y="63.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.3" y="1413" width="0.2" height="15.0" fill="rgb(211,174,18)" rx="2" ry="2" />
<text  x="1173.26" y="1423.5" ></text>
</g>
<g >
<title>pmd_page_vaddr (1 samples, 0.02%)</title><rect x="433.8" y="1877" width="0.2" height="15.0" fill="rgb(217,223,23)" rx="2" ry="2" />
<text  x="436.85" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="169.1" y="1253" width="0.2" height="15.0" fill="rgb(216,135,54)" rx="2" ry="2" />
<text  x="172.09" y="1263.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;TThreadPool::TThreadPool (16 samples, 0.26%)</title><rect x="41.4" y="2037" width="3.0" height="15.0" fill="rgb(216,64,42)" rx="2" ry="2" />
<text  x="44.35" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="169.3" y="309" width="0.2" height="15.0" fill="rgb(243,143,17)" rx="2" ry="2" />
<text  x="172.28" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (2 samples, 0.03%)</title><rect x="108.5" y="1573" width="0.4" height="15.0" fill="rgb(246,8,20)" rx="2" ry="2" />
<text  x="111.51" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="1381" width="0.2" height="15.0" fill="rgb(231,26,37)" rx="2" ry="2" />
<text  x="82.87" y="1391.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="143.7" y="1557" width="0.2" height="15.0" fill="rgb(212,186,7)" rx="2" ry="2" />
<text  x="146.73" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="210.3" y="1685" width="0.4" height="15.0" fill="rgb(212,19,50)" rx="2" ry="2" />
<text  x="213.31" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="469" width="0.2" height="15.0" fill="rgb(226,40,39)" rx="2" ry="2" />
<text  x="1173.07" y="479.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="741" width="0.2" height="15.0" fill="rgb(231,62,10)" rx="2" ry="2" />
<text  x="82.87" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.5" y="293" width="0.1" height="15.0" fill="rgb(212,95,21)" rx="2" ry="2" />
<text  x="1173.45" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="168.9" y="1557" width="0.2" height="15.0" fill="rgb(233,128,10)" rx="2" ry="2" />
<text  x="171.89" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.5" y="1621" width="0.1" height="15.0" fill="rgb(221,154,4)" rx="2" ry="2" />
<text  x="1173.45" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.3" y="1429" width="0.2" height="15.0" fill="rgb(250,37,18)" rx="2" ry="2" />
<text  x="1173.26" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (17 samples, 0.28%)</title><rect x="151.9" y="1621" width="3.3" height="15.0" fill="rgb(240,31,21)" rx="2" ry="2" />
<text  x="154.86" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.5" y="341" width="0.1" height="15.0" fill="rgb(222,38,17)" rx="2" ry="2" />
<text  x="1173.45" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (37 samples, 0.61%)</title><rect x="192.7" y="1781" width="7.2" height="15.0" fill="rgb(205,195,42)" rx="2" ry="2" />
<text  x="195.70" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="69" width="0.2" height="15.0" fill="rgb(217,40,23)" rx="2" ry="2" />
<text  x="1173.07" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_repeat (1 samples, 0.02%)</title><rect x="123.4" y="1701" width="0.2" height="15.0" fill="rgb(253,175,36)" rx="2" ry="2" />
<text  x="126.41" y="1711.5" ></text>
</g>
<g >
<title>__handle_mm_fault (2 samples, 0.03%)</title><rect x="868.5" y="1957" width="0.4" height="15.0" fill="rgb(253,34,1)" rx="2" ry="2" />
<text  x="871.53" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.1" y="1989" width="0.2" height="15.0" fill="rgb(228,99,53)" rx="2" ry="2" />
<text  x="1173.07" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.0" y="1077" width="0.2" height="15.0" fill="rgb(250,203,36)" rx="2" ry="2" />
<text  x="13.00" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="168.9" y="1333" width="0.2" height="15.0" fill="rgb(227,200,32)" rx="2" ry="2" />
<text  x="171.89" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.0" y="965" width="0.2" height="15.0" fill="rgb(249,38,51)" rx="2" ry="2" />
<text  x="13.00" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="965" width="0.2" height="15.0" fill="rgb(232,129,34)" rx="2" ry="2" />
<text  x="1173.07" y="975.5" ></text>
</g>
<g >
<title>nlohmann::detail::parser&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::parse (66 samples, 1.08%)</title><rect x="88.4" y="1973" width="12.8" height="15.0" fill="rgb(250,113,31)" rx="2" ry="2" />
<text  x="91.38" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.0" y="1381" width="0.2" height="15.0" fill="rgb(225,122,24)" rx="2" ry="2" />
<text  x="13.00" y="1391.5" ></text>
</g>
<g >
<title>schedule (3 samples, 0.05%)</title><rect x="43.9" y="1957" width="0.5" height="15.0" fill="rgb(234,85,1)" rx="2" ry="2" />
<text  x="46.87" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="210.5" y="1525" width="0.2" height="15.0" fill="rgb(205,23,30)" rx="2" ry="2" />
<text  x="213.51" y="1535.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::set@plt (1 samples, 0.02%)</title><rect x="590.6" y="1909" width="0.2" height="15.0" fill="rgb(229,46,23)" rx="2" ry="2" />
<text  x="593.61" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.6" y="1909" width="0.2" height="15.0" fill="rgb(232,34,22)" rx="2" ry="2" />
<text  x="1173.65" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (38 samples, 0.62%)</title><rect x="103.5" y="1669" width="7.3" height="15.0" fill="rgb(223,93,32)" rx="2" ry="2" />
<text  x="106.48" y="1679.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="755.1" y="1845" width="0.2" height="15.0" fill="rgb(246,198,6)" rx="2" ry="2" />
<text  x="758.12" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (36 samples, 0.59%)</title><rect x="185.7" y="1749" width="7.0" height="15.0" fill="rgb(246,195,12)" rx="2" ry="2" />
<text  x="188.73" y="1759.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (1 samples, 0.02%)</title><rect x="916.3" y="1925" width="0.2" height="15.0" fill="rgb(246,92,6)" rx="2" ry="2" />
<text  x="919.34" y="1935.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="440.6" y="1829" width="0.2" height="15.0" fill="rgb(235,155,31)" rx="2" ry="2" />
<text  x="443.62" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="169.1" y="1509" width="0.4" height="15.0" fill="rgb(229,149,52)" rx="2" ry="2" />
<text  x="172.09" y="1519.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="1781" width="0.2" height="15.0" fill="rgb(250,103,54)" rx="2" ry="2" />
<text  x="82.87" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="169.3" y="1333" width="0.2" height="15.0" fill="rgb(244,152,2)" rx="2" ry="2" />
<text  x="172.28" y="1343.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="69" width="0.2" height="15.0" fill="rgb(234,196,45)" rx="2" ry="2" />
<text  x="82.87" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.3" y="1701" width="0.2" height="15.0" fill="rgb(210,16,33)" rx="2" ry="2" />
<text  x="1173.26" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.0" y="709" width="0.2" height="15.0" fill="rgb(232,29,43)" rx="2" ry="2" />
<text  x="13.00" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.3" y="1637" width="0.2" height="15.0" fill="rgb(221,109,26)" rx="2" ry="2" />
<text  x="141.32" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="1477" width="0.2" height="15.0" fill="rgb(223,107,35)" rx="2" ry="2" />
<text  x="1173.07" y="1487.5" ></text>
</g>
<g >
<title>__dynamic_cast (45 samples, 0.74%)</title><rect x="906.7" y="2053" width="8.7" height="15.0" fill="rgb(215,94,38)" rx="2" ry="2" />
<text  x="909.66" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt;,  (3 samples, 0.05%)</title><rect x="137.9" y="1957" width="0.6" height="15.0" fill="rgb(218,80,49)" rx="2" ry="2" />
<text  x="140.93" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.6" y="85" width="0.2" height="15.0" fill="rgb(253,67,11)" rx="2" ry="2" />
<text  x="1173.65" y="95.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="1877" width="0.2" height="15.0" fill="rgb(209,149,43)" rx="2" ry="2" />
<text  x="82.87" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3 samples, 0.05%)</title><rect x="137.3" y="1861" width="0.6" height="15.0" fill="rgb(252,131,35)" rx="2" ry="2" />
<text  x="140.35" y="1871.5" ></text>
</g>
<g >
<title>TDocument::operator= (1 samples, 0.02%)</title><rect x="586.0" y="1957" width="0.2" height="15.0" fill="rgb(243,28,25)" rx="2" ry="2" />
<text  x="588.97" y="1967.5" ></text>
</g>
<g >
<title>operator new (14 samples, 0.23%)</title><rect x="1118.2" y="2053" width="2.7" height="15.0" fill="rgb(213,50,2)" rx="2" ry="2" />
<text  x="1121.20" y="2063.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.02%)</title><rect x="160.4" y="1637" width="0.2" height="15.0" fill="rgb(247,6,48)" rx="2" ry="2" />
<text  x="163.38" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="168.9" y="1349" width="0.2" height="15.0" fill="rgb(219,51,37)" rx="2" ry="2" />
<text  x="171.89" y="1359.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::str[abi:cxx11] (2 samples, 0.03%)</title><rect x="591.6" y="1909" width="0.4" height="15.0" fill="rgb(237,19,48)" rx="2" ry="2" />
<text  x="594.58" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1170.5" y="213" width="0.1" height="15.0" fill="rgb(243,206,46)" rx="2" ry="2" />
<text  x="1173.45" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.1" y="1317" width="0.2" height="15.0" fill="rgb(213,123,45)" rx="2" ry="2" />
<text  x="1173.07" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1170.5" y="1973" width="0.3" height="15.0" fill="rgb(237,169,21)" rx="2" ry="2" />
<text  x="1173.45" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.6" y="677" width="0.2" height="15.0" fill="rgb(248,17,20)" rx="2" ry="2" />
<text  x="1173.65" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1170.6" y="229" width="0.2" height="15.0" fill="rgb(232,83,19)" rx="2" ry="2" />
<text  x="1173.65" y="239.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.02%)</title><rect x="79.9" y="1845" width="0.2" height="15.0" fill="rgb(220,13,11)" rx="2" ry="2" />
<text  x="82.87" y="1855.5" ></text>
</g>
</g>
</svg>
