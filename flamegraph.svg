<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="2134" onload="init(evt)" viewBox="0 0 1200 2134" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="2134.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="2117" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="2117" > </text>
<g id="frames">
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (76 samples, 0.41%)</title><rect x="152.9" y="1717" width="4.8" height="15.0" fill="rgb(220,39,53)" rx="2" ry="2" />
<text  x="155.86" y="1727.5" ></text>
</g>
<g >
<title>memcpy (3 samples, 0.02%)</title><rect x="1124.7" y="2037" width="0.2" height="15.0" fill="rgb(249,15,25)" rx="2" ry="2" />
<text  x="1127.68" y="2047.5" ></text>
</g>
<g >
<title>TDocument::FromJson (4 samples, 0.02%)</title><rect x="120.3" y="1973" width="0.2" height="15.0" fill="rgb(222,24,47)" rx="2" ry="2" />
<text  x="123.26" y="1983.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (2 samples, 0.01%)</title><rect x="90.6" y="1845" width="0.1" height="15.0" fill="rgb(216,12,48)" rx="2" ry="2" />
<text  x="93.60" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.9" y="245" width="0.1" height="15.0" fill="rgb(246,192,23)" rx="2" ry="2" />
<text  x="1191.91" y="255.5" ></text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::xsgetn (3 samples, 0.02%)</title><rect x="1109.6" y="2053" width="0.2" height="15.0" fill="rgb(218,79,29)" rx="2" ry="2" />
<text  x="1112.59" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1188.9" y="1749" width="0.1" height="15.0" fill="rgb(247,88,36)" rx="2" ry="2" />
<text  x="1191.91" y="1759.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.02%)</title><rect x="321.8" y="1957" width="0.2" height="15.0" fill="rgb(212,199,3)" rx="2" ry="2" />
<text  x="324.79" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1189.1" y="1733" width="0.5" height="15.0" fill="rgb(245,138,51)" rx="2" ry="2" />
<text  x="1192.11" y="1743.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (2 samples, 0.01%)</title><rect x="182.1" y="1653" width="0.2" height="15.0" fill="rgb(252,5,26)" rx="2" ry="2" />
<text  x="185.13" y="1663.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (8 samples, 0.04%)</title><rect x="877.6" y="2005" width="0.5" height="15.0" fill="rgb(208,170,26)" rx="2" ry="2" />
<text  x="880.57" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (89 samples, 0.48%)</title><rect x="186.9" y="1669" width="5.7" height="15.0" fill="rgb(231,212,16)" rx="2" ry="2" />
<text  x="189.93" y="1679.5" ></text>
</g>
<g >
<title>fasttext::ProductQuantizer::get_centroids (3 samples, 0.02%)</title><rect x="564.6" y="1877" width="0.2" height="15.0" fill="rgb(207,48,8)" rx="2" ry="2" />
<text  x="567.62" y="1887.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (4 samples, 0.02%)</title><rect x="89.7" y="1957" width="0.3" height="15.0" fill="rgb(212,97,10)" rx="2" ry="2" />
<text  x="92.71" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1188.5" y="133" width="0.3" height="15.0" fill="rgb(237,5,24)" rx="2" ry="2" />
<text  x="1191.47" y="143.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (14 samples, 0.08%)</title><rect x="803.4" y="1973" width="0.9" height="15.0" fill="rgb(219,114,11)" rx="2" ry="2" />
<text  x="806.36" y="1983.5" ></text>
</g>
<g >
<title>std::vector&lt;TWeightedNewsCluster, std::allocator&lt;TWeightedNewsCluster&gt; &gt;::push_back (2 samples, 0.01%)</title><rect x="186.1" y="1989" width="0.1" height="15.0" fill="rgb(244,48,19)" rx="2" ry="2" />
<text  x="189.10" y="1999.5" ></text>
</g>
<g >
<title>__pthread_getspecific (2 samples, 0.01%)</title><rect x="201.1" y="1605" width="0.1" height="15.0" fill="rgb(207,124,37)" rx="2" ry="2" />
<text  x="204.12" y="1615.5" ></text>
</g>
<g >
<title>__do_munmap (2 samples, 0.01%)</title><rect x="90.6" y="1909" width="0.1" height="15.0" fill="rgb(238,64,40)" rx="2" ry="2" />
<text  x="93.60" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1189.2" y="1653" width="0.4" height="15.0" fill="rgb(248,171,4)" rx="2" ry="2" />
<text  x="1192.17" y="1663.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="89.4" y="1941" width="0.1" height="15.0" fill="rgb(233,144,4)" rx="2" ry="2" />
<text  x="92.39" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.9" y="277" width="0.1" height="15.0" fill="rgb(234,126,7)" rx="2" ry="2" />
<text  x="1191.91" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (2 samples, 0.01%)</title><rect x="164.3" y="1669" width="0.1" height="15.0" fill="rgb(229,16,9)" rx="2" ry="2" />
<text  x="167.30" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1189.2" y="837" width="0.4" height="15.0" fill="rgb(220,158,51)" rx="2" ry="2" />
<text  x="1192.17" y="847.5" ></text>
</g>
<g >
<title>__sanitizer::LargeMmapAllocator&lt;__asan::AsanMapUnmapCallback, __sanitizer::LargeMmapAllocatorPtrArrayDynamic&gt;::Allocate (6 samples, 0.03%)</title><rect x="1018.6" y="2053" width="0.4" height="15.0" fill="rgb(219,160,8)" rx="2" ry="2" />
<text  x="1021.57" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (4 samples, 0.02%)</title><rect x="179.8" y="1765" width="0.3" height="15.0" fill="rgb(249,222,53)" rx="2" ry="2" />
<text  x="182.83" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.9" y="101" width="0.1" height="15.0" fill="rgb(238,72,15)" rx="2" ry="2" />
<text  x="1191.91" y="111.5" ></text>
</g>
<g >
<title>[unknown] (327 samples, 1.77%)</title><rect x="54.3" y="917" width="20.9" height="15.0" fill="rgb(209,76,37)" rx="2" ry="2" />
<text  x="57.30" y="927.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (18 samples, 0.10%)</title><rect x="467.0" y="1925" width="1.2" height="15.0" fill="rgb(252,221,8)" rx="2" ry="2" />
<text  x="470.02" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1188.8" y="1957" width="0.2" height="15.0" fill="rgb(212,148,3)" rx="2" ry="2" />
<text  x="1191.85" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (369 samples, 2.00%)</title><rect x="54.3" y="1253" width="23.6" height="15.0" fill="rgb(223,71,19)" rx="2" ry="2" />
<text  x="57.30" y="1263.5" >[..</text>
</g>
<g >
<title>fasttext::Matrix::size (6 samples, 0.03%)</title><rect x="597.7" y="1877" width="0.4" height="15.0" fill="rgb(227,167,11)" rx="2" ry="2" />
<text  x="600.73" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1188.9" y="501" width="0.1" height="15.0" fill="rgb(226,42,0)" rx="2" ry="2" />
<text  x="1191.91" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.9" y="1477" width="0.1" height="15.0" fill="rgb(231,139,2)" rx="2" ry="2" />
<text  x="1191.91" y="1487.5" ></text>
</g>
<g >
<title>__lsan::LsanMetadata::allocated (2 samples, 0.01%)</title><rect x="93.0" y="2021" width="0.2" height="15.0" fill="rgb(230,52,54)" rx="2" ry="2" />
<text  x="96.03" y="2031.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (3 samples, 0.02%)</title><rect x="184.2" y="1669" width="0.2" height="15.0" fill="rgb(245,14,20)" rx="2" ry="2" />
<text  x="187.18" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1188.4" y="277" width="0.4" height="15.0" fill="rgb(223,95,31)" rx="2" ry="2" />
<text  x="1191.40" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1188.4" y="1573" width="0.4" height="15.0" fill="rgb(240,49,38)" rx="2" ry="2" />
<text  x="1191.40" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1189.2" y="613" width="0.4" height="15.0" fill="rgb(229,115,44)" rx="2" ry="2" />
<text  x="1192.17" y="623.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;TThreadPool::TThreadPool (23 samples, 0.12%)</title><rect x="27.6" y="2037" width="1.5" height="15.0" fill="rgb(253,226,10)" rx="2" ry="2" />
<text  x="30.64" y="2047.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (2 samples, 0.01%)</title><rect x="119.7" y="1909" width="0.1" height="15.0" fill="rgb(224,77,1)" rx="2" ry="2" />
<text  x="122.68" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (85 samples, 0.46%)</title><rect x="140.5" y="1749" width="5.4" height="15.0" fill="rgb(249,191,53)" rx="2" ry="2" />
<text  x="143.46" y="1759.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (10 samples, 0.05%)</title><rect x="819.0" y="2005" width="0.6" height="15.0" fill="rgb(224,156,31)" rx="2" ry="2" />
<text  x="821.95" y="2015.5" ></text>
</g>
<g >
<title>__asan::GetMallocContextSize (2 samples, 0.01%)</title><rect x="401.0" y="1941" width="0.1" height="15.0" fill="rgb(228,183,45)" rx="2" ry="2" />
<text  x="403.99" y="1951.5" ></text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.02%)</title><rect x="499.0" y="1973" width="0.2" height="15.0" fill="rgb(227,206,36)" rx="2" ry="2" />
<text  x="501.98" y="1983.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::getLine (298 samples, 1.61%)</title><rect x="514.1" y="1925" width="19.1" height="15.0" fill="rgb(213,178,37)" rx="2" ry="2" />
<text  x="517.13" y="1935.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (2 samples, 0.01%)</title><rect x="84.4" y="1573" width="0.1" height="15.0" fill="rgb(205,30,54)" rx="2" ry="2" />
<text  x="87.40" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (4 samples, 0.02%)</title><rect x="179.8" y="1781" width="0.3" height="15.0" fill="rgb(253,182,6)" rx="2" ry="2" />
<text  x="182.83" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (67 samples, 0.36%)</title><rect x="165.3" y="1605" width="4.2" height="15.0" fill="rgb(216,109,23)" rx="2" ry="2" />
<text  x="168.26" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (8 samples, 0.04%)</title><rect x="185.0" y="1877" width="0.5" height="15.0" fill="rgb(236,9,2)" rx="2" ry="2" />
<text  x="188.01" y="1887.5" ></text>
</g>
<g >
<title>memcpy (2 samples, 0.01%)</title><rect x="604.6" y="1877" width="0.1" height="15.0" fill="rgb(247,17,50)" rx="2" ry="2" />
<text  x="607.57" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (318 samples, 1.72%)</title><rect x="54.3" y="405" width="20.3" height="15.0" fill="rgb(217,26,4)" rx="2" ry="2" />
<text  x="57.30" y="415.5" ></text>
</g>
<g >
<title>onmt::unicode::is_letter@plt (6 samples, 0.03%)</title><rect x="772.2" y="1893" width="0.4" height="15.0" fill="rgb(206,215,40)" rx="2" ry="2" />
<text  x="775.23" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1189.2" y="1573" width="0.4" height="15.0" fill="rgb(218,26,11)" rx="2" ry="2" />
<text  x="1192.17" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1189.2" y="1109" width="0.4" height="15.0" fill="rgb(225,8,17)" rx="2" ry="2" />
<text  x="1192.17" y="1119.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (2 samples, 0.01%)</title><rect x="144.7" y="1605" width="0.2" height="15.0" fill="rgb(233,90,43)" rx="2" ry="2" />
<text  x="147.74" y="1615.5" ></text>
</g>
<g >
<title>__lru_cache_add (3 samples, 0.02%)</title><rect x="26.0" y="1941" width="0.2" height="15.0" fill="rgb(251,50,18)" rx="2" ry="2" />
<text  x="29.04" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (8 samples, 0.04%)</title><rect x="876.7" y="2037" width="0.5" height="15.0" fill="rgb(246,20,49)" rx="2" ry="2" />
<text  x="879.67" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.9" y="437" width="0.1" height="15.0" fill="rgb(210,67,44)" rx="2" ry="2" />
<text  x="1191.91" y="447.5" ></text>
</g>
<g >
<title>__asan::asan_memalign (9 samples, 0.05%)</title><rect x="1164.6" y="2037" width="0.6" height="15.0" fill="rgb(232,81,5)" rx="2" ry="2" />
<text  x="1167.62" y="2047.5" ></text>
</g>
<g >
<title>onmt::unicode::is_separator (89 samples, 0.48%)</title><rect x="760.0" y="1877" width="5.6" height="15.0" fill="rgb(211,154,37)" rx="2" ry="2" />
<text  x="762.96" y="1887.5" ></text>
</g>
<g >
<title>__strxfrm_l (5 samples, 0.03%)</title><rect x="1180.3" y="2037" width="0.4" height="15.0" fill="rgb(208,228,33)" rx="2" ry="2" />
<text  x="1183.35" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (4 samples, 0.02%)</title><rect x="207.6" y="1749" width="0.2" height="15.0" fill="rgb(239,139,21)" rx="2" ry="2" />
<text  x="210.57" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="216.6" y="853" width="0.2" height="15.0" fill="rgb(251,7,2)" rx="2" ry="2" />
<text  x="219.65" y="863.5" ></text>
</g>
<g >
<title>__strxfrm_l (42 samples, 0.23%)</title><rect x="1169.7" y="2021" width="2.7" height="15.0" fill="rgb(229,32,26)" rx="2" ry="2" />
<text  x="1172.67" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1188.5" y="37" width="0.3" height="15.0" fill="rgb(230,6,29)" rx="2" ry="2" />
<text  x="1191.53" y="47.5" ></text>
</g>
<g >
<title>__handle_mm_fault (2 samples, 0.01%)</title><rect x="503.5" y="1845" width="0.1" height="15.0" fill="rgb(253,49,27)" rx="2" ry="2" />
<text  x="506.51" y="1855.5" ></text>
</g>
<g >
<title>__asan::AsanThread::stack_bottom (2 samples, 0.01%)</title><rect x="247.9" y="1957" width="0.1" height="15.0" fill="rgb(214,16,17)" rx="2" ry="2" />
<text  x="250.90" y="1967.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt; &gt;::_M_manager (3 samples, 0.02%)</title><rect x="130.6" y="1637" width="0.1" height="15.0" fill="rgb(220,193,4)" rx="2" ry="2" />
<text  x="133.55" y="1647.5" ></text>
</g>
<g >
<title>__sanitizer_weak_hook_memcmp (6 samples, 0.03%)</title><rect x="1148.2" y="2037" width="0.4" height="15.0" fill="rgb(254,162,6)" rx="2" ry="2" />
<text  x="1151.20" y="2047.5" ></text>
</g>
<g >
<title>fasttext::FastText::predict (115 samples, 0.62%)</title><rect x="590.8" y="1925" width="7.4" height="15.0" fill="rgb(225,57,35)" rx="2" ry="2" />
<text  x="593.83" y="1935.5" ></text>
</g>
<g >
<title>__libc_read (3 samples, 0.02%)</title><rect x="1109.6" y="2037" width="0.2" height="15.0" fill="rgb(212,149,42)" rx="2" ry="2" />
<text  x="1112.59" y="2047.5" ></text>
</g>
<g >
<title>flush_tlb_mm_range (32 samples, 0.17%)</title><rect x="941.7" y="1909" width="2.1" height="15.0" fill="rgb(210,206,51)" rx="2" ry="2" />
<text  x="944.74" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (319 samples, 1.73%)</title><rect x="54.3" y="501" width="20.4" height="15.0" fill="rgb(240,175,26)" rx="2" ry="2" />
<text  x="57.30" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (4 samples, 0.02%)</title><rect x="215.0" y="1797" width="0.2" height="15.0" fill="rgb(237,138,36)" rx="2" ry="2" />
<text  x="217.99" y="1807.5" ></text>
</g>
<g >
<title>x2apic_send_IPI (17 samples, 0.09%)</title><rect x="942.6" y="1781" width="1.1" height="15.0" fill="rgb(243,138,51)" rx="2" ry="2" />
<text  x="945.57" y="1791.5" ></text>
</g>
<g >
<title>__asan::AsanChunk::UsedSize (45 samples, 0.24%)</title><rect x="960.9" y="2053" width="2.9" height="15.0" fill="rgb(241,128,4)" rx="2" ry="2" />
<text  x="963.92" y="2063.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (2 samples, 0.01%)</title><rect x="155.7" y="1669" width="0.2" height="15.0" fill="rgb(223,196,23)" rx="2" ry="2" />
<text  x="158.73" y="1679.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::basic_regex&lt;char const*&gt; (409 samples, 2.22%)</title><rect x="159.4" y="1941" width="26.2" height="15.0" fill="rgb(247,168,42)" rx="2" ry="2" />
<text  x="162.44" y="1951.5" >s..</text>
</g>
<g >
<title>x2apic_send_IPI (2 samples, 0.01%)</title><rect x="1107.2" y="1717" width="0.2" height="15.0" fill="rgb(223,110,38)" rx="2" ry="2" />
<text  x="1110.23" y="1727.5" ></text>
</g>
<g >
<title>[tgnews] (203 samples, 1.10%)</title><rect x="29.1" y="2053" width="13.0" height="15.0" fill="rgb(205,114,38)" rx="2" ry="2" />
<text  x="32.11" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1188.4" y="1157" width="0.4" height="15.0" fill="rgb(209,87,43)" rx="2" ry="2" />
<text  x="1191.40" y="1167.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (4 samples, 0.02%)</title><rect x="91.4" y="2005" width="0.3" height="15.0" fill="rgb(249,15,39)" rx="2" ry="2" />
<text  x="94.43" y="2015.5" ></text>
</g>
<g >
<title>unmap_page_range (6 samples, 0.03%)</title><rect x="1108.2" y="1909" width="0.4" height="15.0" fill="rgb(228,52,7)" rx="2" ry="2" />
<text  x="1111.18" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (322 samples, 1.74%)</title><rect x="54.3" y="725" width="20.6" height="15.0" fill="rgb(244,117,22)" rx="2" ry="2" />
<text  x="57.30" y="735.5" ></text>
</g>
<g >
<title>__asan::AsanThread::stack_bottom (13 samples, 0.07%)</title><rect x="1156.5" y="2037" width="0.8" height="15.0" fill="rgb(217,118,51)" rx="2" ry="2" />
<text  x="1159.51" y="2047.5" ></text>
</g>
<g >
<title>std::ios_base::~ios_base (3 samples, 0.02%)</title><rect x="877.4" y="2037" width="0.2" height="15.0" fill="rgb(252,228,26)" rx="2" ry="2" />
<text  x="880.37" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (73 samples, 0.40%)</title><rect x="198.1" y="1733" width="4.7" height="15.0" fill="rgb(252,4,15)" rx="2" ry="2" />
<text  x="201.11" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (2 samples, 0.01%)</title><rect x="198.0" y="1749" width="0.1" height="15.0" fill="rgb(230,213,16)" rx="2" ry="2" />
<text  x="200.98" y="1759.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::computeSubwords (15 samples, 0.08%)</title><rect x="526.7" y="1893" width="0.9" height="15.0" fill="rgb(212,216,36)" rx="2" ry="2" />
<text  x="529.65" y="1903.5" ></text>
</g>
<g >
<title>onmt::unicode::get_lower (5 samples, 0.03%)</title><rect x="649.7" y="1877" width="0.3" height="15.0" fill="rgb(243,181,0)" rx="2" ry="2" />
<text  x="652.70" y="1887.5" ></text>
</g>
<g >
<title>fasttext::NegativeSamplingLoss::NegativeSamplingLoss (16 samples, 0.09%)</title><rect x="502.8" y="1957" width="1.0" height="15.0" fill="rgb(215,43,14)" rx="2" ry="2" />
<text  x="505.81" y="1967.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (4 samples, 0.02%)</title><rect x="120.5" y="1973" width="0.3" height="15.0" fill="rgb(220,141,49)" rx="2" ry="2" />
<text  x="123.52" y="1983.5" ></text>
</g>
<g >
<title>lru_add_drain (2 samples, 0.01%)</title><rect x="803.7" y="1877" width="0.1" height="15.0" fill="rgb(221,68,54)" rx="2" ry="2" />
<text  x="806.68" y="1887.5" ></text>
</g>
<g >
<title>try_to_wake_up (13 samples, 0.07%)</title><rect x="28.2" y="1893" width="0.8" height="15.0" fill="rgb(214,204,1)" rx="2" ry="2" />
<text  x="31.22" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.9" y="325" width="0.1" height="15.0" fill="rgb(218,71,39)" rx="2" ry="2" />
<text  x="1191.91" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::allocator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;::_M_realloc_insert&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; const&amp;&gt; (3 samples, 0.02%)</title><rect x="505.2" y="1989" width="0.2" height="15.0" fill="rgb(246,202,6)" rx="2" ry="2" />
<text  x="508.24" y="1999.5" ></text>
</g>
<g >
<title>GetHost (462 samples, 2.50%)</title><rect x="129.8" y="1973" width="29.5" height="15.0" fill="rgb(218,228,44)" rx="2" ry="2" />
<text  x="132.78" y="1983.5" >Ge..</text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (4 samples, 0.02%)</title><rect x="197.7" y="1621" width="0.3" height="15.0" fill="rgb(243,176,13)" rx="2" ry="2" />
<text  x="200.73" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (70 samples, 0.38%)</title><rect x="170.5" y="1717" width="4.5" height="15.0" fill="rgb(235,76,48)" rx="2" ry="2" />
<text  x="173.50" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1189.2" y="277" width="0.4" height="15.0" fill="rgb(211,67,27)" rx="2" ry="2" />
<text  x="1192.17" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="216.9" y="1669" width="0.2" height="15.0" fill="rgb(228,153,30)" rx="2" ry="2" />
<text  x="219.90" y="1679.5" ></text>
</g>
<g >
<title>fasttext::FastText::getDimension (4 samples, 0.02%)</title><rect x="326.3" y="1989" width="0.3" height="15.0" fill="rgb(239,62,43)" rx="2" ry="2" />
<text  x="329.33" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (81 samples, 0.44%)</title><rect x="192.8" y="1637" width="5.2" height="15.0" fill="rgb(216,76,4)" rx="2" ry="2" />
<text  x="195.81" y="1647.5" ></text>
</g>
<g >
<title>__asan::AsanThread::stack_top (10 samples, 0.05%)</title><rect x="1157.3" y="2037" width="0.7" height="15.0" fill="rgb(237,92,39)" rx="2" ry="2" />
<text  x="1160.34" y="2047.5" ></text>
</g>
<g >
<title>std::__move_merge&lt;TDocument*, __gnu_cxx::__normal_iterator&lt;TDocument*, std::vector&lt;TDocument, std::allocator&lt;TDocument&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;main::$_1&gt; &gt; (4 samples, 0.02%)</title><rect x="506.0" y="1973" width="0.3" height="15.0" fill="rgb(241,13,40)" rx="2" ry="2" />
<text  x="509.01" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1189.1" y="1813" width="0.5" height="15.0" fill="rgb(250,55,3)" rx="2" ry="2" />
<text  x="1192.11" y="1823.5" ></text>
</g>
<g >
<title>unmap_region (2 samples, 0.01%)</title><rect x="81.5" y="1381" width="0.2" height="15.0" fill="rgb(226,121,46)" rx="2" ry="2" />
<text  x="84.52" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1188.4" y="1045" width="0.4" height="15.0" fill="rgb(235,98,43)" rx="2" ry="2" />
<text  x="1191.40" y="1055.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (3 samples, 0.02%)</title><rect x="168.3" y="1573" width="0.2" height="15.0" fill="rgb(226,99,35)" rx="2" ry="2" />
<text  x="171.33" y="1583.5" ></text>
</g>
<g >
<title>TFastTextEmbedder::GetSentenceEmbedding (1,823 samples, 9.87%)</title><rect x="367.2" y="1973" width="116.5" height="15.0" fill="rgb(220,115,7)" rx="2" ry="2" />
<text  x="370.18" y="1983.5" >TFastTextEmbed..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (6 samples, 0.03%)</title><rect x="157.7" y="1829" width="0.4" height="15.0" fill="rgb(234,122,6)" rx="2" ry="2" />
<text  x="160.72" y="1839.5" ></text>
</g>
<g >
<title>fasttext::DenseMatrix::addRowToVector (922 samples, 4.99%)</title><rect x="248.7" y="1957" width="58.9" height="15.0" fill="rgb(234,55,4)" rx="2" ry="2" />
<text  x="251.67" y="1967.5" >fastte..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (85 samples, 0.46%)</title><rect x="140.5" y="1765" width="5.4" height="15.0" fill="rgb(215,43,44)" rx="2" ry="2" />
<text  x="143.46" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="185.8" y="1621" width="0.1" height="15.0" fill="rgb(210,11,17)" rx="2" ry="2" />
<text  x="188.78" y="1631.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (5 samples, 0.03%)</title><rect x="169.1" y="1573" width="0.3" height="15.0" fill="rgb(247,58,42)" rx="2" ry="2" />
<text  x="172.09" y="1583.5" ></text>
</g>
<g >
<title>native_write_msr (17 samples, 0.09%)</title><rect x="942.6" y="1765" width="1.1" height="15.0" fill="rgb(211,172,2)" rx="2" ry="2" />
<text  x="945.57" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (316 samples, 1.71%)</title><rect x="54.3" y="293" width="20.2" height="15.0" fill="rgb(223,94,1)" rx="2" ry="2" />
<text  x="57.30" y="303.5" ></text>
</g>
<g >
<title>TDocument::TDocument (9 samples, 0.05%)</title><rect x="327.3" y="2005" width="0.6" height="15.0" fill="rgb(219,113,26)" rx="2" ry="2" />
<text  x="330.29" y="2015.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&gt;::ReleaseFreeMemoryToOS&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&gt;::MemoryMapper&gt; (4 samples, 0.02%)</title><rect x="802.7" y="2037" width="0.2" height="15.0" fill="rgb(240,222,27)" rx="2" ry="2" />
<text  x="805.65" y="2047.5" ></text>
</g>
<g >
<title>__dynamic_cast (4 samples, 0.02%)</title><rect x="188.5" y="1573" width="0.3" height="15.0" fill="rgb(236,23,48)" rx="2" ry="2" />
<text  x="191.52" y="1583.5" ></text>
</g>
<g >
<title>mem_cgroup_throttle_swaprate (8 samples, 0.04%)</title><rect x="940.5" y="1909" width="0.5" height="15.0" fill="rgb(232,182,22)" rx="2" ry="2" />
<text  x="943.53" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (26 samples, 0.14%)</title><rect x="879.5" y="2021" width="1.6" height="15.0" fill="rgb(254,98,51)" rx="2" ry="2" />
<text  x="882.48" y="2031.5" ></text>
</g>
<g >
<title>free_cpumask_var (2 samples, 0.01%)</title><rect x="942.2" y="1861" width="0.1" height="15.0" fill="rgb(215,198,30)" rx="2" ry="2" />
<text  x="945.19" y="1871.5" ></text>
</g>
<g >
<title>onmt::Tokenizer::tokenize (3,014 samples, 16.33%)</title><rect x="600.1" y="1925" width="192.6" height="15.0" fill="rgb(215,118,39)" rx="2" ry="2" />
<text  x="603.10" y="1935.5" >onmt::Tokenizer::tokenize</text>
</g>
<g >
<title>[unknown] (325 samples, 1.76%)</title><rect x="54.3" y="869" width="20.8" height="15.0" fill="rgb(228,227,12)" rx="2" ry="2" />
<text  x="57.30" y="879.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (3 samples, 0.02%)</title><rect x="204.2" y="1637" width="0.2" height="15.0" fill="rgb(221,6,0)" rx="2" ry="2" />
<text  x="207.18" y="1647.5" ></text>
</g>
<g >
<title>__lsan::GetUserBegin (7 samples, 0.04%)</title><rect x="507.0" y="2037" width="0.5" height="15.0" fill="rgb(245,111,15)" rx="2" ry="2" />
<text  x="510.03" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1188.8" y="1797" width="0.2" height="15.0" fill="rgb(253,122,47)" rx="2" ry="2" />
<text  x="1191.85" y="1807.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (5 samples, 0.03%)</title><rect x="644.5" y="1845" width="0.3" height="15.0" fill="rgb(212,216,20)" rx="2" ry="2" />
<text  x="647.46" y="1855.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (2 samples, 0.01%)</title><rect x="83.7" y="1589" width="0.1" height="15.0" fill="rgb(216,168,1)" rx="2" ry="2" />
<text  x="86.70" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (75 samples, 0.41%)</title><rect x="202.8" y="1781" width="4.8" height="15.0" fill="rgb(238,212,3)" rx="2" ry="2" />
<text  x="205.78" y="1791.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (7 samples, 0.04%)</title><rect x="144.9" y="1605" width="0.4" height="15.0" fill="rgb(233,142,54)" rx="2" ry="2" />
<text  x="147.87" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (83 samples, 0.45%)</title><rect x="192.7" y="1685" width="5.3" height="15.0" fill="rgb(250,128,0)" rx="2" ry="2" />
<text  x="195.68" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.9" y="53" width="0.1" height="15.0" fill="rgb(223,190,15)" rx="2" ry="2" />
<text  x="1191.91" y="63.5" ></text>
</g>
<g >
<title>__asan::AsanChunk::UsedSize (3 samples, 0.02%)</title><rect x="92.5" y="2021" width="0.2" height="15.0" fill="rgb(235,130,53)" rx="2" ry="2" />
<text  x="95.52" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (78 samples, 0.42%)</title><rect x="152.7" y="1749" width="5.0" height="15.0" fill="rgb(227,210,46)" rx="2" ry="2" />
<text  x="155.73" y="1759.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="86.9" y="1797" width="0.1" height="15.0" fill="rgb(214,161,3)" rx="2" ry="2" />
<text  x="89.89" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (78 samples, 0.42%)</title><rect x="152.7" y="1765" width="5.0" height="15.0" fill="rgb(218,100,40)" rx="2" ry="2" />
<text  x="155.73" y="1775.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (3 samples, 0.02%)</title><rect x="143.2" y="1605" width="0.2" height="15.0" fill="rgb(250,178,12)" rx="2" ry="2" />
<text  x="146.21" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (111 samples, 0.60%)</title><rect x="207.9" y="1733" width="7.1" height="15.0" fill="rgb(235,189,22)" rx="2" ry="2" />
<text  x="210.89" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1189.2" y="469" width="0.4" height="15.0" fill="rgb(208,150,21)" rx="2" ry="2" />
<text  x="1192.17" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1188.4" y="597" width="0.4" height="15.0" fill="rgb(239,164,27)" rx="2" ry="2" />
<text  x="1191.40" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.9" y="629" width="0.1" height="15.0" fill="rgb(214,226,18)" rx="2" ry="2" />
<text  x="1191.91" y="639.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="119.7" y="2005" width="0.1" height="15.0" fill="rgb(226,20,6)" rx="2" ry="2" />
<text  x="122.68" y="2015.5" ></text>
</g>
<g >
<title>do_syscall_64 (14 samples, 0.08%)</title><rect x="28.2" y="1973" width="0.9" height="15.0" fill="rgb(241,56,49)" rx="2" ry="2" />
<text  x="31.22" y="1983.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (4 samples, 0.02%)</title><rect x="139.5" y="1589" width="0.3" height="15.0" fill="rgb(226,127,24)" rx="2" ry="2" />
<text  x="142.50" y="1599.5" ></text>
</g>
<g >
<title>__interceptor_memcmp (2 samples, 0.01%)</title><rect x="312.2" y="1941" width="0.1" height="15.0" fill="rgb(213,28,25)" rx="2" ry="2" />
<text  x="315.21" y="1951.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::getLine (2 samples, 0.01%)</title><rect x="805.0" y="2037" width="0.1" height="15.0" fill="rgb(244,103,6)" rx="2" ry="2" />
<text  x="808.02" y="2047.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.01%)</title><rect x="206.0" y="1637" width="0.2" height="15.0" fill="rgb(228,63,19)" rx="2" ry="2" />
<text  x="209.04" y="1647.5" ></text>
</g>
<g >
<title>__do_munmap (2 samples, 0.01%)</title><rect x="84.4" y="1541" width="0.1" height="15.0" fill="rgb(247,164,27)" rx="2" ry="2" />
<text  x="87.40" y="1551.5" ></text>
</g>
<g >
<title>memcpy (3 samples, 0.02%)</title><rect x="726.0" y="1845" width="0.2" height="15.0" fill="rgb(234,90,31)" rx="2" ry="2" />
<text  x="729.02" y="1855.5" ></text>
</g>
<g >
<title>__asan::AsanTSDGet (2 samples, 0.01%)</title><rect x="647.7" y="1845" width="0.1" height="15.0" fill="rgb(245,60,13)" rx="2" ry="2" />
<text  x="650.72" y="1855.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.02%)</title><rect x="183.2" y="1653" width="0.2" height="15.0" fill="rgb(237,215,15)" rx="2" ry="2" />
<text  x="186.22" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (3 samples, 0.02%)</title><rect x="164.2" y="1701" width="0.2" height="15.0" fill="rgb(222,87,37)" rx="2" ry="2" />
<text  x="167.24" y="1711.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::computeSubwords (48 samples, 0.26%)</title><rect x="314.0" y="1941" width="3.1" height="15.0" fill="rgb(248,193,47)" rx="2" ry="2" />
<text  x="317.00" y="1951.5" ></text>
</g>
<g >
<title>__lsan::CollectIgnoredCb (3 samples, 0.02%)</title><rect x="506.4" y="2037" width="0.2" height="15.0" fill="rgb(222,199,20)" rx="2" ry="2" />
<text  x="509.39" y="2047.5" ></text>
</g>
<g >
<title>do_page_fault (5 samples, 0.03%)</title><rect x="765.6" y="1861" width="0.4" height="15.0" fill="rgb(234,147,42)" rx="2" ry="2" />
<text  x="768.64" y="1871.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (4 samples, 0.02%)</title><rect x="214.7" y="1701" width="0.2" height="15.0" fill="rgb(223,163,46)" rx="2" ry="2" />
<text  x="217.67" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="185.7" y="1781" width="0.2" height="15.0" fill="rgb(251,42,10)" rx="2" ry="2" />
<text  x="188.71" y="1791.5" ></text>
</g>
<g >
<title>__handle_mm_fault (2 samples, 0.01%)</title><rect x="1104.5" y="1973" width="0.2" height="15.0" fill="rgb(231,84,16)" rx="2" ry="2" />
<text  x="1107.54" y="1983.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (4 samples, 0.02%)</title><rect x="173.4" y="1589" width="0.3" height="15.0" fill="rgb(230,19,8)" rx="2" ry="2" />
<text  x="176.44" y="1599.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (6 samples, 0.03%)</title><rect x="604.1" y="1877" width="0.3" height="15.0" fill="rgb(246,79,15)" rx="2" ry="2" />
<text  x="607.06" y="1887.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::pushHash (185 samples, 1.00%)</title><rect x="577.0" y="1877" width="11.8" height="15.0" fill="rgb(237,144,51)" rx="2" ry="2" />
<text  x="580.02" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (67 samples, 0.36%)</title><rect x="160.0" y="1685" width="4.2" height="15.0" fill="rgb(230,54,17)" rx="2" ry="2" />
<text  x="162.95" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1189.2" y="229" width="0.4" height="15.0" fill="rgb(216,149,25)" rx="2" ry="2" />
<text  x="1192.17" y="239.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (28 samples, 0.15%)</title><rect x="24.1" y="1941" width="1.8" height="15.0" fill="rgb(231,195,12)" rx="2" ry="2" />
<text  x="27.13" y="1951.5" ></text>
</g>
<g >
<title>page_fault (34 samples, 0.18%)</title><rect x="496.8" y="1957" width="2.2" height="15.0" fill="rgb(246,122,29)" rx="2" ry="2" />
<text  x="499.80" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (406 samples, 2.20%)</title><rect x="159.6" y="1893" width="25.9" height="15.0" fill="rgb(250,137,18)" rx="2" ry="2" />
<text  x="162.57" y="1903.5" >s..</text>
</g>
<g >
<title>nlohmann::detail::input_stream_adapter::get_character (4 samples, 0.02%)</title><rect x="128.8" y="1893" width="0.2" height="15.0" fill="rgb(224,145,53)" rx="2" ry="2" />
<text  x="131.76" y="1903.5" ></text>
</g>
<g >
<title>__sanitizer::CombinedAllocator&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&gt;, __sanitizer::SizeClassAllocatorLocalCache&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&gt; &gt;, __sanitizer::LargeMmapAllocator&lt;__asan::AsanMapUnmapCallback, __sanitizer::LargeMmapAllocatorPtrArrayDynamic&gt; &gt;::Allocate (128 samples, 0.69%)</title><rect x="1010.4" y="2053" width="8.2" height="15.0" fill="rgb(216,77,18)" rx="2" ry="2" />
<text  x="1013.39" y="2063.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThreadStats (30 samples, 0.16%)</title><rect x="970.2" y="2053" width="1.9" height="15.0" fill="rgb(206,5,12)" rx="2" ry="2" />
<text  x="973.18" y="2063.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (9 samples, 0.05%)</title><rect x="93.3" y="2021" width="0.6" height="15.0" fill="rgb(239,99,10)" rx="2" ry="2" />
<text  x="96.29" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="216.6" y="741" width="0.2" height="15.0" fill="rgb(217,53,37)" rx="2" ry="2" />
<text  x="219.65" y="751.5" ></text>
</g>
<g >
<title>do_syscall_64 (5 samples, 0.03%)</title><rect x="804.3" y="2005" width="0.3" height="15.0" fill="rgb(241,113,46)" rx="2" ry="2" />
<text  x="807.25" y="2015.5" ></text>
</g>
<g >
<title>__asan::PoisonShadow (141 samples, 0.76%)</title><rect x="972.1" y="2053" width="9.0" height="15.0" fill="rgb(210,115,19)" rx="2" ry="2" />
<text  x="975.10" y="2063.5" ></text>
</g>
<g >
<title>__asan_memcpy (9 samples, 0.05%)</title><rect x="149.0" y="1637" width="0.6" height="15.0" fill="rgb(252,181,38)" rx="2" ry="2" />
<text  x="152.02" y="1647.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::emplace_back&lt;char const*&amp;, unsigned int&amp;&gt; (192 samples, 1.04%)</title><rect x="715.7" y="1861" width="12.3" height="15.0" fill="rgb(251,165,4)" rx="2" ry="2" />
<text  x="718.72" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="805.0" y="2021" width="0.1" height="15.0" fill="rgb(238,159,48)" rx="2" ry="2" />
<text  x="808.02" y="2031.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (19 samples, 0.10%)</title><rect x="1178.5" y="2037" width="1.2" height="15.0" fill="rgb(247,148,31)" rx="2" ry="2" />
<text  x="1181.49" y="2047.5" ></text>
</g>
<g >
<title>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::dump (4 samples, 0.02%)</title><rect x="504.4" y="1989" width="0.3" height="15.0" fill="rgb(219,109,3)" rx="2" ry="2" />
<text  x="507.41" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_try_char (2 samples, 0.01%)</title><rect x="215.1" y="1733" width="0.1" height="15.0" fill="rgb(224,210,19)" rx="2" ry="2" />
<text  x="218.11" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (330 samples, 1.79%)</title><rect x="54.3" y="981" width="21.1" height="15.0" fill="rgb(227,17,7)" rx="2" ry="2" />
<text  x="57.30" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (4 samples, 0.02%)</title><rect x="215.0" y="1781" width="0.2" height="15.0" fill="rgb(253,90,20)" rx="2" ry="2" />
<text  x="217.99" y="1791.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="85.4" y="1701" width="0.2" height="15.0" fill="rgb(209,75,21)" rx="2" ry="2" />
<text  x="88.42" y="1711.5" ></text>
</g>
<g >
<title>alloc_pages_vma (3 samples, 0.02%)</title><rect x="685.7" y="1781" width="0.2" height="15.0" fill="rgb(240,197,22)" rx="2" ry="2" />
<text  x="688.68" y="1791.5" ></text>
</g>
<g >
<title>__vm_munmap (2 samples, 0.01%)</title><rect x="90.6" y="1925" width="0.1" height="15.0" fill="rgb(214,144,34)" rx="2" ry="2" />
<text  x="93.60" y="1935.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (6 samples, 0.03%)</title><rect x="195.1" y="1589" width="0.4" height="15.0" fill="rgb(206,213,51)" rx="2" ry="2" />
<text  x="198.11" y="1599.5" ></text>
</g>
<g >
<title>__asan::AsanTSDGet (40 samples, 0.22%)</title><rect x="963.8" y="2053" width="2.5" height="15.0" fill="rgb(234,216,28)" rx="2" ry="2" />
<text  x="966.79" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (321 samples, 1.74%)</title><rect x="54.3" y="629" width="20.5" height="15.0" fill="rgb(216,39,28)" rx="2" ry="2" />
<text  x="57.30" y="639.5" ></text>
</g>
<g >
<title>__asan_memcpy (12 samples, 0.07%)</title><rect x="645.8" y="1845" width="0.8" height="15.0" fill="rgb(230,167,17)" rx="2" ry="2" />
<text  x="648.80" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (8 samples, 0.04%)</title><rect x="1189.0" y="2053" width="0.6" height="15.0" fill="rgb(233,24,14)" rx="2" ry="2" />
<text  x="1192.04" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1188.9" y="453" width="0.1" height="15.0" fill="rgb(205,144,42)" rx="2" ry="2" />
<text  x="1191.91" y="463.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (106 samples, 0.57%)</title><rect x="981.1" y="2053" width="6.8" height="15.0" fill="rgb(219,70,12)" rx="2" ry="2" />
<text  x="984.11" y="2063.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::do_tolower (4 samples, 0.02%)</title><rect x="191.7" y="1573" width="0.2" height="15.0" fill="rgb(243,137,45)" rx="2" ry="2" />
<text  x="194.66" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1188.4" y="1621" width="0.4" height="15.0" fill="rgb(248,158,23)" rx="2" ry="2" />
<text  x="1191.40" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="185.7" y="1797" width="0.2" height="15.0" fill="rgb(238,98,6)" rx="2" ry="2" />
<text  x="188.71" y="1807.5" ></text>
</g>
<g >
<title>memcpy (4 samples, 0.02%)</title><rect x="1118.0" y="2037" width="0.3" height="15.0" fill="rgb(212,67,40)" rx="2" ry="2" />
<text  x="1121.03" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1188.4" y="1269" width="0.4" height="15.0" fill="rgb(228,13,43)" rx="2" ry="2" />
<text  x="1191.40" y="1279.5" ></text>
</g>
<g >
<title>DetectCategory (829 samples, 4.49%)</title><rect x="513.3" y="1973" width="53.0" height="15.0" fill="rgb(205,48,0)" rx="2" ry="2" />
<text  x="516.29" y="1983.5" >Detec..</text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::~collate (19 samples, 0.10%)</title><rect x="818.4" y="2037" width="1.2" height="15.0" fill="rgb(228,158,31)" rx="2" ry="2" />
<text  x="821.38" y="2047.5" ></text>
</g>
<g >
<title>__asan::PoisonShadow (86 samples, 0.47%)</title><rect x="46.8" y="2021" width="5.5" height="15.0" fill="rgb(222,46,18)" rx="2" ry="2" />
<text  x="49.75" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1189.2" y="1269" width="0.4" height="15.0" fill="rgb(233,127,17)" rx="2" ry="2" />
<text  x="1192.17" y="1279.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (6 samples, 0.03%)</title><rect x="152.2" y="1733" width="0.4" height="15.0" fill="rgb(208,28,49)" rx="2" ry="2" />
<text  x="155.22" y="1743.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::has_features (5 samples, 0.03%)</title><rect x="601.6" y="1893" width="0.3" height="15.0" fill="rgb(241,200,9)" rx="2" ry="2" />
<text  x="604.57" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (72 samples, 0.39%)</title><rect x="159.6" y="1701" width="4.6" height="15.0" fill="rgb(205,15,4)" rx="2" ry="2" />
<text  x="162.63" y="1711.5" ></text>
</g>
<g >
<title>__dynamic_cast@plt (2 samples, 0.01%)</title><rect x="199.1" y="1621" width="0.1" height="15.0" fill="rgb(235,222,42)" rx="2" ry="2" />
<text  x="202.07" y="1631.5" ></text>
</g>
<g >
<title>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::dump (4 samples, 0.02%)</title><rect x="504.4" y="1973" width="0.3" height="15.0" fill="rgb(226,208,45)" rx="2" ry="2" />
<text  x="507.41" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (66 samples, 0.36%)</title><rect x="131.6" y="1589" width="4.2" height="15.0" fill="rgb(252,12,50)" rx="2" ry="2" />
<text  x="134.57" y="1599.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (4 samples, 0.02%)</title><rect x="620.6" y="1877" width="0.3" height="15.0" fill="rgb(217,12,24)" rx="2" ry="2" />
<text  x="623.61" y="1887.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (3 samples, 0.02%)</title><rect x="76.0" y="1141" width="0.2" height="15.0" fill="rgb(213,198,33)" rx="2" ry="2" />
<text  x="79.03" y="1151.5" ></text>
</g>
<g >
<title>fasttext::Model::predict (109 samples, 0.59%)</title><rect x="591.1" y="1909" width="7.0" height="15.0" fill="rgb(246,56,32)" rx="2" ry="2" />
<text  x="594.15" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (333 samples, 1.80%)</title><rect x="54.3" y="1077" width="21.3" height="15.0" fill="rgb(246,132,54)" rx="2" ry="2" />
<text  x="57.30" y="1087.5" >[..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1188.4" y="1861" width="0.4" height="15.0" fill="rgb(243,192,16)" rx="2" ry="2" />
<text  x="1191.40" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1188.4" y="421" width="0.4" height="15.0" fill="rgb(219,159,24)" rx="2" ry="2" />
<text  x="1191.40" y="431.5" ></text>
</g>
<g >
<title>__interceptor_memcpy (12 samples, 0.07%)</title><rect x="1002.0" y="2053" width="0.8" height="15.0" fill="rgb(250,110,23)" rx="2" ry="2" />
<text  x="1005.02" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="216.6" y="789" width="0.2" height="15.0" fill="rgb(215,81,4)" rx="2" ry="2" />
<text  x="219.65" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1188.9" y="1077" width="0.1" height="15.0" fill="rgb(238,86,18)" rx="2" ry="2" />
<text  x="1191.91" y="1087.5" ></text>
</g>
<g >
<title>__handle_mm_fault (28 samples, 0.15%)</title><rect x="497.1" y="1893" width="1.8" height="15.0" fill="rgb(231,205,0)" rx="2" ry="2" />
<text  x="500.12" y="1903.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (5 samples, 0.03%)</title><rect x="498.5" y="1861" width="0.3" height="15.0" fill="rgb(229,20,30)" rx="2" ry="2" />
<text  x="501.53" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (70 samples, 0.38%)</title><rect x="180.1" y="1765" width="4.5" height="15.0" fill="rgb(214,187,48)" rx="2" ry="2" />
<text  x="183.09" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_try_char (2 samples, 0.01%)</title><rect x="198.0" y="1733" width="0.1" height="15.0" fill="rgb(215,62,27)" rx="2" ry="2" />
<text  x="200.98" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1188.9" y="357" width="0.1" height="15.0" fill="rgb(247,199,17)" rx="2" ry="2" />
<text  x="1191.91" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="159.2" y="1797" width="0.1" height="15.0" fill="rgb(213,6,31)" rx="2" ry="2" />
<text  x="162.19" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (70 samples, 0.38%)</title><rect x="170.5" y="1653" width="4.5" height="15.0" fill="rgb(244,198,37)" rx="2" ry="2" />
<text  x="173.50" y="1663.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="87.5" y="1797" width="0.2" height="15.0" fill="rgb(210,95,37)" rx="2" ry="2" />
<text  x="90.53" y="1807.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::Unwind (22 samples, 0.12%)</title><rect x="1177.1" y="2037" width="1.4" height="15.0" fill="rgb(230,28,47)" rx="2" ry="2" />
<text  x="1180.09" y="2047.5" ></text>
</g>
<g >
<title>fasttext::Vector::norm (16 samples, 0.09%)</title><rect x="325.2" y="1973" width="1.0" height="15.0" fill="rgb(228,206,41)" rx="2" ry="2" />
<text  x="328.18" y="1983.5" ></text>
</g>
<g >
<title>clear_page_erms (4 samples, 0.02%)</title><rect x="681.5" y="1749" width="0.3" height="15.0" fill="rgb(226,123,16)" rx="2" ry="2" />
<text  x="684.53" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.04%)</title><rect x="1189.0" y="1925" width="0.6" height="15.0" fill="rgb(225,166,9)" rx="2" ry="2" />
<text  x="1192.04" y="1935.5" ></text>
</g>
<g >
<title>__do_page_fault (5 samples, 0.03%)</title><rect x="100.1" y="1989" width="0.3" height="15.0" fill="rgb(227,131,28)" rx="2" ry="2" />
<text  x="103.06" y="1999.5" ></text>
</g>
<g >
<title>__do_munmap (2 samples, 0.01%)</title><rect x="87.5" y="1749" width="0.2" height="15.0" fill="rgb(253,126,24)" rx="2" ry="2" />
<text  x="90.53" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="812.2" y="2021" width="0.2" height="15.0" fill="rgb(237,207,7)" rx="2" ry="2" />
<text  x="815.24" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="159.2" y="1941" width="0.1" height="15.0" fill="rgb(247,93,52)" rx="2" ry="2" />
<text  x="162.19" y="1951.5" ></text>
</g>
<g >
<title>__interceptor_memcmp (12 samples, 0.07%)</title><rect x="1001.2" y="2053" width="0.8" height="15.0" fill="rgb(211,180,6)" rx="2" ry="2" />
<text  x="1004.25" y="2063.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (3 samples, 0.02%)</title><rect x="80.9" y="1429" width="0.2" height="15.0" fill="rgb(248,112,9)" rx="2" ry="2" />
<text  x="83.89" y="1439.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="76.3" y="1173" width="0.1" height="15.0" fill="rgb(248,18,42)" rx="2" ry="2" />
<text  x="79.28" y="1183.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.01%)</title><rect x="160.2" y="1573" width="0.1" height="15.0" fill="rgb(246,191,25)" rx="2" ry="2" />
<text  x="163.21" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1189.2" y="293" width="0.4" height="15.0" fill="rgb(235,183,20)" rx="2" ry="2" />
<text  x="1192.17" y="303.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (3 samples, 0.02%)</title><rect x="161.4" y="1541" width="0.2" height="15.0" fill="rgb(249,23,15)" rx="2" ry="2" />
<text  x="164.36" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (424 samples, 2.30%)</title><rect x="54.3" y="1477" width="27.1" height="15.0" fill="rgb(207,108,12)" rx="2" ry="2" />
<text  x="57.30" y="1487.5" >[..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (2 samples, 0.01%)</title><rect x="215.0" y="1749" width="0.1" height="15.0" fill="rgb(230,0,2)" rx="2" ry="2" />
<text  x="217.99" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (179 samples, 0.97%)</title><rect x="186.5" y="1749" width="11.5" height="15.0" fill="rgb(216,178,13)" rx="2" ry="2" />
<text  x="189.54" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (4 samples, 0.02%)</title><rect x="215.5" y="1813" width="0.3" height="15.0" fill="rgb(240,179,54)" rx="2" ry="2" />
<text  x="218.50" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1188.9" y="1173" width="0.1" height="15.0" fill="rgb(250,202,46)" rx="2" ry="2" />
<text  x="1191.91" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (111 samples, 0.60%)</title><rect x="207.9" y="1781" width="7.1" height="15.0" fill="rgb(205,206,8)" rx="2" ry="2" />
<text  x="210.89" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1188.9" y="1509" width="0.1" height="15.0" fill="rgb(222,8,10)" rx="2" ry="2" />
<text  x="1191.91" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1188.4" y="453" width="0.4" height="15.0" fill="rgb(244,188,26)" rx="2" ry="2" />
<text  x="1191.40" y="463.5" ></text>
</g>
<g >
<title>__asan_memcpy (2 samples, 0.01%)</title><rect x="186.7" y="1637" width="0.1" height="15.0" fill="rgb(236,89,27)" rx="2" ry="2" />
<text  x="189.67" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1188.4" y="1365" width="0.4" height="15.0" fill="rgb(219,71,19)" rx="2" ry="2" />
<text  x="1191.40" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (464 samples, 2.51%)</title><rect x="186.5" y="1925" width="29.7" height="15.0" fill="rgb(241,185,54)" rx="2" ry="2" />
<text  x="189.54" y="1935.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1188.4" y="1013" width="0.4" height="15.0" fill="rgb(205,191,21)" rx="2" ry="2" />
<text  x="1191.40" y="1023.5" ></text>
</g>
<g >
<title>__asan::asan_memalign (2 samples, 0.01%)</title><rect x="138.4" y="1589" width="0.1" height="15.0" fill="rgb(233,221,50)" rx="2" ry="2" />
<text  x="141.41" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1188.5" y="85" width="0.3" height="15.0" fill="rgb(216,118,50)" rx="2" ry="2" />
<text  x="1191.53" y="95.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.01%)</title><rect x="164.6" y="1621" width="0.1" height="15.0" fill="rgb(225,225,20)" rx="2" ry="2" />
<text  x="167.56" y="1631.5" ></text>
</g>
<g >
<title>__pthread_getspecific (2 samples, 0.01%)</title><rect x="134.1" y="1557" width="0.1" height="15.0" fill="rgb(232,3,2)" rx="2" ry="2" />
<text  x="137.07" y="1567.5" ></text>
</g>
<g >
<title>__asan::Allocator::Deallocate (2 samples, 0.01%)</title><rect x="211.0" y="1669" width="0.1" height="15.0" fill="rgb(250,51,31)" rx="2" ry="2" />
<text  x="213.96" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (66 samples, 0.36%)</title><rect x="160.0" y="1637" width="4.2" height="15.0" fill="rgb(247,67,22)" rx="2" ry="2" />
<text  x="162.95" y="1647.5" ></text>
</g>
<g >
<title>handle_mm_fault (4 samples, 0.02%)</title><rect x="502.5" y="1893" width="0.2" height="15.0" fill="rgb(207,55,2)" rx="2" ry="2" />
<text  x="505.49" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (77 samples, 0.42%)</title><rect x="152.8" y="1733" width="4.9" height="15.0" fill="rgb(219,116,31)" rx="2" ry="2" />
<text  x="155.79" y="1743.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (9 samples, 0.05%)</title><rect x="509.2" y="1893" width="0.6" height="15.0" fill="rgb(223,150,36)" rx="2" ry="2" />
<text  x="512.20" y="1903.5" ></text>
</g>
<g >
<title>__interceptor_strcmp (78 samples, 0.42%)</title><rect x="36.3" y="2021" width="5.0" height="15.0" fill="rgb(252,223,22)" rx="2" ry="2" />
<text  x="39.27" y="2031.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::push_back (5 samples, 0.03%)</title><rect x="505.1" y="2005" width="0.3" height="15.0" fill="rgb(225,123,0)" rx="2" ry="2" />
<text  x="508.11" y="2015.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (2 samples, 0.01%)</title><rect x="217.4" y="1973" width="0.1" height="15.0" fill="rgb(237,42,49)" rx="2" ry="2" />
<text  x="220.35" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1188.4" y="389" width="0.4" height="15.0" fill="rgb(248,144,18)" rx="2" ry="2" />
<text  x="1191.40" y="399.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (2 samples, 0.01%)</title><rect x="803.7" y="1829" width="0.1" height="15.0" fill="rgb(247,77,30)" rx="2" ry="2" />
<text  x="806.68" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1188.4" y="629" width="0.4" height="15.0" fill="rgb(212,85,26)" rx="2" ry="2" />
<text  x="1191.40" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1189.2" y="1461" width="0.4" height="15.0" fill="rgb(215,173,20)" rx="2" ry="2" />
<text  x="1192.17" y="1471.5" ></text>
</g>
<g >
<title>fasttext::DenseMatrix::addRowToVector (965 samples, 5.23%)</title><rect x="401.3" y="1941" width="61.7" height="15.0" fill="rgb(238,0,53)" rx="2" ry="2" />
<text  x="404.31" y="1951.5" >fastte..</text>
</g>
<g >
<title>fasttext::Vector::zero (6 samples, 0.03%)</title><rect x="321.4" y="1957" width="0.4" height="15.0" fill="rgb(240,228,17)" rx="2" ry="2" />
<text  x="324.41" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (8 samples, 0.04%)</title><rect x="215.5" y="1845" width="0.5" height="15.0" fill="rgb(226,144,45)" rx="2" ry="2" />
<text  x="218.50" y="1855.5" ></text>
</g>
<g >
<title>free_unref_page_list (2 samples, 0.01%)</title><rect x="509.5" y="1861" width="0.2" height="15.0" fill="rgb(218,200,32)" rx="2" ry="2" />
<text  x="512.52" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1189.2" y="453" width="0.4" height="15.0" fill="rgb(237,22,45)" rx="2" ry="2" />
<text  x="1192.17" y="463.5" ></text>
</g>
<g >
<title>syscall (14 samples, 0.08%)</title><rect x="28.2" y="2005" width="0.9" height="15.0" fill="rgb(211,57,20)" rx="2" ry="2" />
<text  x="31.22" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="216.6" y="1317" width="0.2" height="15.0" fill="rgb(206,71,1)" rx="2" ry="2" />
<text  x="219.58" y="1327.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (2 samples, 0.01%)</title><rect x="812.9" y="2037" width="0.1" height="15.0" fill="rgb(236,219,9)" rx="2" ry="2" />
<text  x="815.88" y="2047.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_Alloc_node&gt; (3 samples, 0.02%)</title><rect x="505.2" y="1797" width="0.2" height="15.0" fill="rgb(241,133,54)" rx="2" ry="2" />
<text  x="508.24" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (82 samples, 0.44%)</title><rect x="130.7" y="1685" width="5.3" height="15.0" fill="rgb(252,187,19)" rx="2" ry="2" />
<text  x="133.74" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="216.6" y="1285" width="0.2" height="15.0" fill="rgb(227,94,9)" rx="2" ry="2" />
<text  x="219.58" y="1295.5" ></text>
</g>
<g >
<title>do_page_fault (4 samples, 0.02%)</title><rect x="502.5" y="1925" width="0.2" height="15.0" fill="rgb(241,180,52)" rx="2" ry="2" />
<text  x="505.49" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (73 samples, 0.40%)</title><rect x="198.1" y="1669" width="4.7" height="15.0" fill="rgb(250,220,26)" rx="2" ry="2" />
<text  x="201.11" y="1679.5" ></text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (2 samples, 0.01%)</title><rect x="53.0" y="1909" width="0.1" height="15.0" fill="rgb(235,31,14)" rx="2" ry="2" />
<text  x="55.95" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_BracketMatcher (2 samples, 0.01%)</title><rect x="876.5" y="2037" width="0.2" height="15.0" fill="rgb(221,175,33)" rx="2" ry="2" />
<text  x="879.54" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (333 samples, 1.80%)</title><rect x="54.3" y="1093" width="21.3" height="15.0" fill="rgb(232,109,43)" rx="2" ry="2" />
<text  x="57.30" y="1103.5" >[..</text>
</g>
<g >
<title>fasttext::FastText::loadModel (53 samples, 0.29%)</title><rect x="500.4" y="2005" width="3.4" height="15.0" fill="rgb(229,209,7)" rx="2" ry="2" />
<text  x="503.45" y="2015.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::computeSubwords (310 samples, 1.68%)</title><rect x="569.1" y="1893" width="19.8" height="15.0" fill="rgb(225,151,15)" rx="2" ry="2" />
<text  x="572.10" y="1903.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (6 samples, 0.03%)</title><rect x="1123.3" y="2037" width="0.4" height="15.0" fill="rgb(246,152,25)" rx="2" ry="2" />
<text  x="1126.33" y="2047.5" ></text>
</g>
<g >
<title>clear_page_erms (2 samples, 0.01%)</title><rect x="53.8" y="1893" width="0.1" height="15.0" fill="rgb(250,57,36)" rx="2" ry="2" />
<text  x="56.78" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1188.4" y="837" width="0.4" height="15.0" fill="rgb(211,64,23)" rx="2" ry="2" />
<text  x="1191.40" y="847.5" ></text>
</g>
<g >
<title>flush_tlb_mm_range (4 samples, 0.02%)</title><rect x="53.2" y="1893" width="0.3" height="15.0" fill="rgb(205,95,8)" rx="2" ry="2" />
<text  x="56.21" y="1903.5" ></text>
</g>
<g >
<title>__asan_memcpy (2 samples, 0.01%)</title><rect x="604.4" y="1877" width="0.2" height="15.0" fill="rgb(219,117,53)" rx="2" ry="2" />
<text  x="607.44" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (2 samples, 0.01%)</title><rect x="215.8" y="1813" width="0.1" height="15.0" fill="rgb(210,124,36)" rx="2" ry="2" />
<text  x="218.75" y="1823.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (3 samples, 0.02%)</title><rect x="87.8" y="1861" width="0.2" height="15.0" fill="rgb(209,39,28)" rx="2" ry="2" />
<text  x="90.79" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1188.9" y="933" width="0.1" height="15.0" fill="rgb(230,66,6)" rx="2" ry="2" />
<text  x="1191.91" y="943.5" ></text>
</g>
<g >
<title>__lsan::CollectLeaksCb (2 samples, 0.01%)</title><rect x="506.6" y="2037" width="0.1" height="15.0" fill="rgb(224,67,8)" rx="2" ry="2" />
<text  x="509.58" y="2047.5" ></text>
</g>
<g >
<title>std::vector&lt;TDocument, std::allocator&lt;TDocument&gt; &gt;::_M_realloc_insert&lt;TDocument const&amp;&gt; (2 samples, 0.01%)</title><rect x="506.3" y="2005" width="0.1" height="15.0" fill="rgb(208,36,17)" rx="2" ry="2" />
<text  x="509.26" y="2015.5" ></text>
</g>
<g >
<title>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::dump (3 samples, 0.02%)</title><rect x="504.4" y="1925" width="0.2" height="15.0" fill="rgb(221,127,36)" rx="2" ry="2" />
<text  x="507.41" y="1935.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.01%)</title><rect x="664.4" y="1877" width="0.1" height="15.0" fill="rgb(224,100,9)" rx="2" ry="2" />
<text  x="667.40" y="1887.5" ></text>
</g>
<g >
<title>handle_mm_fault (15 samples, 0.08%)</title><rect x="52.5" y="1973" width="1.0" height="15.0" fill="rgb(229,82,36)" rx="2" ry="2" />
<text  x="55.51" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1188.4" y="1141" width="0.4" height="15.0" fill="rgb(215,24,10)" rx="2" ry="2" />
<text  x="1191.40" y="1151.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (2 samples, 0.01%)</title><rect x="87.5" y="1717" width="0.2" height="15.0" fill="rgb(210,7,51)" rx="2" ry="2" />
<text  x="90.53" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (5 samples, 0.03%)</title><rect x="185.2" y="1797" width="0.3" height="15.0" fill="rgb(240,170,17)" rx="2" ry="2" />
<text  x="188.20" y="1807.5" ></text>
</g>
<g >
<title>try_charge (2 samples, 0.01%)</title><rect x="54.2" y="1893" width="0.1" height="15.0" fill="rgb(214,214,48)" rx="2" ry="2" />
<text  x="57.17" y="1903.5" ></text>
</g>
<g >
<title>fasttext::Vector::addRow (43 samples, 0.23%)</title><rect x="317.8" y="1957" width="2.8" height="15.0" fill="rgb(235,31,8)" rx="2" ry="2" />
<text  x="320.83" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1188.4" y="533" width="0.4" height="15.0" fill="rgb(254,76,9)" rx="2" ry="2" />
<text  x="1191.40" y="543.5" ></text>
</g>
<g >
<title>[unknown] (376 samples, 2.04%)</title><rect x="54.3" y="1285" width="24.0" height="15.0" fill="rgb(246,45,47)" rx="2" ry="2" />
<text  x="57.30" y="1295.5" >[..</text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (3 samples, 0.02%)</title><rect x="185.3" y="1765" width="0.2" height="15.0" fill="rgb(219,163,8)" rx="2" ry="2" />
<text  x="188.33" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (169 samples, 0.92%)</title><rect x="159.6" y="1749" width="10.8" height="15.0" fill="rgb(226,199,9)" rx="2" ry="2" />
<text  x="162.63" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (2 samples, 0.01%)</title><rect x="215.2" y="1877" width="0.2" height="15.0" fill="rgb(216,63,18)" rx="2" ry="2" />
<text  x="218.24" y="1887.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="85.3" y="1685" width="0.1" height="15.0" fill="rgb(248,216,4)" rx="2" ry="2" />
<text  x="88.30" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1188.4" y="1797" width="0.4" height="15.0" fill="rgb(237,157,40)" rx="2" ry="2" />
<text  x="1191.40" y="1807.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::getLine (376 samples, 2.04%)</title><rect x="566.8" y="1925" width="24.0" height="15.0" fill="rgb(235,65,6)" rx="2" ry="2" />
<text  x="569.79" y="1935.5" >f..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.04%)</title><rect x="1189.0" y="1973" width="0.6" height="15.0" fill="rgb(254,148,11)" rx="2" ry="2" />
<text  x="1192.04" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1189.2" y="437" width="0.4" height="15.0" fill="rgb(219,35,3)" rx="2" ry="2" />
<text  x="1192.17" y="447.5" ></text>
</g>
<g >
<title>alloc_pages_vma (2 samples, 0.01%)</title><rect x="800.7" y="1941" width="0.1" height="15.0" fill="rgb(239,229,32)" rx="2" ry="2" />
<text  x="803.67" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="159.2" y="1781" width="0.1" height="15.0" fill="rgb(208,216,9)" rx="2" ry="2" />
<text  x="162.19" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (83 samples, 0.45%)</title><rect x="192.7" y="1733" width="5.3" height="15.0" fill="rgb(252,93,16)" rx="2" ry="2" />
<text  x="195.68" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (2 samples, 0.01%)</title><rect x="215.6" y="1797" width="0.1" height="15.0" fill="rgb(232,140,31)" rx="2" ry="2" />
<text  x="218.56" y="1807.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (3 samples, 0.02%)</title><rect x="1018.8" y="1941" width="0.2" height="15.0" fill="rgb(224,27,30)" rx="2" ry="2" />
<text  x="1021.76" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="185.8" y="1669" width="0.1" height="15.0" fill="rgb(245,8,19)" rx="2" ry="2" />
<text  x="188.78" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (72 samples, 0.39%)</title><rect x="170.4" y="1749" width="4.6" height="15.0" fill="rgb(240,183,34)" rx="2" ry="2" />
<text  x="173.44" y="1759.5" ></text>
</g>
<g >
<title>get_page_from_freelist (3 samples, 0.02%)</title><rect x="727.4" y="1733" width="0.1" height="15.0" fill="rgb(213,59,16)" rx="2" ry="2" />
<text  x="730.36" y="1743.5" ></text>
</g>
<g >
<title>TAgencyRating::ScoreUrl (486 samples, 2.63%)</title><rect x="186.4" y="1989" width="31.1" height="15.0" fill="rgb(253,99,32)" rx="2" ry="2" />
<text  x="189.42" y="1999.5" >TA..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1188.8" y="1893" width="0.2" height="15.0" fill="rgb(207,208,21)" rx="2" ry="2" />
<text  x="1191.85" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (634 samples, 3.43%)</title><rect x="53.5" y="2037" width="40.6" height="15.0" fill="rgb(238,181,38)" rx="2" ry="2" />
<text  x="56.53" y="2047.5" >[un..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (452 samples, 2.45%)</title><rect x="130.2" y="1925" width="28.9" height="15.0" fill="rgb(217,162,42)" rx="2" ry="2" />
<text  x="133.23" y="1935.5" >st..</text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt; &gt;::_M_manager (2 samples, 0.01%)</title><rect x="152.5" y="1701" width="0.1" height="15.0" fill="rgb(245,125,26)" rx="2" ry="2" />
<text  x="155.47" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (316 samples, 1.71%)</title><rect x="54.3" y="325" width="20.2" height="15.0" fill="rgb(232,53,38)" rx="2" ry="2" />
<text  x="57.30" y="335.5" ></text>
</g>
<g >
<title>__pthread_getspecific (45 samples, 0.24%)</title><rect x="510.0" y="2037" width="2.8" height="15.0" fill="rgb(234,24,7)" rx="2" ry="2" />
<text  x="512.97" y="2047.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (3 samples, 0.02%)</title><rect x="599.3" y="1925" width="0.2" height="15.0" fill="rgb(246,219,5)" rx="2" ry="2" />
<text  x="602.26" y="1935.5" ></text>
</g>
<g >
<title>__interceptor_memchr (4 samples, 0.02%)</title><rect x="1148.8" y="2037" width="0.3" height="15.0" fill="rgb(232,102,53)" rx="2" ry="2" />
<text  x="1151.84" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (316 samples, 1.71%)</title><rect x="54.3" y="373" width="20.2" height="15.0" fill="rgb(254,199,11)" rx="2" ry="2" />
<text  x="57.30" y="383.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (2 samples, 0.01%)</title><rect x="176.9" y="1621" width="0.1" height="15.0" fill="rgb(223,195,17)" rx="2" ry="2" />
<text  x="179.89" y="1631.5" ></text>
</g>
<g >
<title>handle_mm_fault (29 samples, 0.16%)</title><rect x="497.1" y="1909" width="1.9" height="15.0" fill="rgb(215,99,11)" rx="2" ry="2" />
<text  x="500.12" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (60 samples, 0.33%)</title><rect x="180.5" y="1685" width="3.9" height="15.0" fill="rgb(211,161,41)" rx="2" ry="2" />
<text  x="183.53" y="1695.5" ></text>
</g>
<g >
<title>Summarize (2,207 samples, 11.95%)</title><rect x="186.2" y="2005" width="141.1" height="15.0" fill="rgb(212,26,13)" rx="2" ry="2" />
<text  x="189.22" y="2015.5" >Summarize</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.9" y="1733" width="0.1" height="15.0" fill="rgb(235,117,48)" rx="2" ry="2" />
<text  x="1191.91" y="1743.5" ></text>
</g>
<g >
<title>__sanitizer::mem_is_zero (2 samples, 0.01%)</title><rect x="1122.2" y="2037" width="0.2" height="15.0" fill="rgb(231,85,51)" rx="2" ry="2" />
<text  x="1125.25" y="2047.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="77.9" y="1253" width="0.1" height="15.0" fill="rgb(224,137,39)" rx="2" ry="2" />
<text  x="80.88" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1189.2" y="677" width="0.4" height="15.0" fill="rgb(231,20,16)" rx="2" ry="2" />
<text  x="1192.17" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (317 samples, 1.72%)</title><rect x="159.6" y="1781" width="20.2" height="15.0" fill="rgb(245,118,25)" rx="2" ry="2" />
<text  x="162.57" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="185.8" y="1477" width="0.1" height="15.0" fill="rgb(205,208,33)" rx="2" ry="2" />
<text  x="188.78" y="1487.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64LocalCache&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&gt; &gt;::Deallocate (2 samples, 0.01%)</title><rect x="86.1" y="1733" width="0.1" height="15.0" fill="rgb(228,178,20)" rx="2" ry="2" />
<text  x="89.06" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.9" y="197" width="0.1" height="15.0" fill="rgb(248,80,20)" rx="2" ry="2" />
<text  x="1191.91" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1189.2" y="1621" width="0.4" height="15.0" fill="rgb(251,70,43)" rx="2" ry="2" />
<text  x="1192.17" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1189.2" y="1557" width="0.4" height="15.0" fill="rgb(226,153,5)" rx="2" ry="2" />
<text  x="1192.17" y="1567.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (8 samples, 0.04%)</title><rect x="487.5" y="1829" width="0.5" height="15.0" fill="rgb(241,86,2)" rx="2" ry="2" />
<text  x="490.54" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="216.6" y="693" width="0.2" height="15.0" fill="rgb(231,117,17)" rx="2" ry="2" />
<text  x="219.65" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1189.2" y="1029" width="0.4" height="15.0" fill="rgb(230,156,14)" rx="2" ry="2" />
<text  x="1192.17" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (5 samples, 0.03%)</title><rect x="159.6" y="1669" width="0.4" height="15.0" fill="rgb(230,148,30)" rx="2" ry="2" />
<text  x="162.63" y="1679.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (2 samples, 0.01%)</title><rect x="42.6" y="2005" width="0.1" height="15.0" fill="rgb(227,145,28)" rx="2" ry="2" />
<text  x="45.60" y="2015.5" ></text>
</g>
<g >
<title>arch_get_unmapped_area_topdown (3 samples, 0.02%)</title><rect x="1107.0" y="1925" width="0.2" height="15.0" fill="rgb(219,109,47)" rx="2" ry="2" />
<text  x="1109.97" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (2 samples, 0.01%)</title><rect x="215.0" y="1733" width="0.1" height="15.0" fill="rgb(232,2,10)" rx="2" ry="2" />
<text  x="217.99" y="1743.5" ></text>
</g>
<g >
<title>handle_mm_fault (88 samples, 0.48%)</title><rect x="938.2" y="1989" width="5.6" height="15.0" fill="rgb(227,15,6)" rx="2" ry="2" />
<text  x="941.22" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.9" y="533" width="0.1" height="15.0" fill="rgb(239,153,1)" rx="2" ry="2" />
<text  x="1191.91" y="543.5" ></text>
</g>
<g >
<title>unmap_vmas (4 samples, 0.02%)</title><rect x="804.3" y="1925" width="0.3" height="15.0" fill="rgb(225,204,35)" rx="2" ry="2" />
<text  x="807.32" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.05%)</title><rect x="216.5" y="1749" width="0.6" height="15.0" fill="rgb(218,103,26)" rx="2" ry="2" />
<text  x="219.52" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (512 samples, 2.77%)</title><rect x="54.3" y="1813" width="32.7" height="15.0" fill="rgb(244,22,11)" rx="2" ry="2" />
<text  x="57.30" y="1823.5" >[u..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (321 samples, 1.74%)</title><rect x="159.6" y="1797" width="20.5" height="15.0" fill="rgb(226,14,7)" rx="2" ry="2" />
<text  x="162.57" y="1807.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotPut (5 samples, 0.03%)</title><rect x="625.5" y="1877" width="0.4" height="15.0" fill="rgb(238,40,16)" rx="2" ry="2" />
<text  x="628.54" y="1887.5" ></text>
</g>
<g >
<title>native_write_msr (2 samples, 0.01%)</title><rect x="1107.2" y="1701" width="0.2" height="15.0" fill="rgb(220,60,20)" rx="2" ry="2" />
<text  x="1110.23" y="1711.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (46 samples, 0.25%)</title><rect x="142.4" y="1621" width="2.9" height="15.0" fill="rgb(230,42,52)" rx="2" ry="2" />
<text  x="145.38" y="1631.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (2 samples, 0.01%)</title><rect x="191.1" y="1557" width="0.1" height="15.0" fill="rgb(250,104,54)" rx="2" ry="2" />
<text  x="194.08" y="1567.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="90.6" y="1973" width="0.1" height="15.0" fill="rgb(214,184,4)" rx="2" ry="2" />
<text  x="93.60" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.9" y="1061" width="0.1" height="15.0" fill="rgb(233,216,53)" rx="2" ry="2" />
<text  x="1191.91" y="1071.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (34 samples, 0.18%)</title><rect x="1167.5" y="2021" width="2.2" height="15.0" fill="rgb(239,202,16)" rx="2" ry="2" />
<text  x="1170.50" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (72 samples, 0.39%)</title><rect x="202.8" y="1701" width="4.6" height="15.0" fill="rgb(254,142,16)" rx="2" ry="2" />
<text  x="205.78" y="1711.5" ></text>
</g>
<g >
<title>page_fault (4 samples, 0.02%)</title><rect x="502.5" y="1941" width="0.2" height="15.0" fill="rgb(216,195,7)" rx="2" ry="2" />
<text  x="505.49" y="1951.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (3 samples, 0.02%)</title><rect x="90.7" y="2005" width="0.2" height="15.0" fill="rgb(250,167,33)" rx="2" ry="2" />
<text  x="93.73" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.9" y="869" width="0.1" height="15.0" fill="rgb(234,217,9)" rx="2" ry="2" />
<text  x="1191.91" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="216.6" y="773" width="0.2" height="15.0" fill="rgb(219,78,42)" rx="2" ry="2" />
<text  x="219.65" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1188.4" y="1941" width="0.4" height="15.0" fill="rgb(208,208,38)" rx="2" ry="2" />
<text  x="1191.40" y="1951.5" ></text>
</g>
<g >
<title>fasttext::FastText::predictLine (818 samples, 4.43%)</title><rect x="513.8" y="1941" width="52.3" height="15.0" fill="rgb(250,223,40)" rx="2" ry="2" />
<text  x="516.81" y="1951.5" >fastt..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (2 samples, 0.01%)</title><rect x="158.8" y="1829" width="0.1" height="15.0" fill="rgb(237,124,0)" rx="2" ry="2" />
<text  x="161.80" y="1839.5" ></text>
</g>
<g >
<title>__sanitizer::internal_munmap (2 samples, 0.01%)</title><rect x="81.5" y="1477" width="0.2" height="15.0" fill="rgb(227,97,26)" rx="2" ry="2" />
<text  x="84.52" y="1487.5" ></text>
</g>
<g >
<title>page_fault (14 samples, 0.08%)</title><rect x="710.2" y="1845" width="0.9" height="15.0" fill="rgb(248,128,53)" rx="2" ry="2" />
<text  x="713.16" y="1855.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (5 samples, 0.03%)</title><rect x="167.2" y="1573" width="0.3" height="15.0" fill="rgb(228,83,4)" rx="2" ry="2" />
<text  x="170.18" y="1583.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::pushHash (4 samples, 0.02%)</title><rect x="588.9" y="1893" width="0.3" height="15.0" fill="rgb(216,145,2)" rx="2" ry="2" />
<text  x="591.91" y="1903.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.01%)</title><rect x="772.9" y="1893" width="0.1" height="15.0" fill="rgb(237,79,40)" rx="2" ry="2" />
<text  x="775.87" y="1903.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; const*, std::vector&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::allocator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;*&gt; (3 samples, 0.02%)</title><rect x="505.2" y="1845" width="0.2" height="15.0" fill="rgb(221,7,11)" rx="2" ry="2" />
<text  x="508.24" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (96 samples, 0.52%)</title><rect x="146.0" y="1685" width="6.2" height="15.0" fill="rgb(230,52,41)" rx="2" ry="2" />
<text  x="149.02" y="1695.5" ></text>
</g>
<g >
<title>__asan::Allocator::Deallocate (2 samples, 0.01%)</title><rect x="142.6" y="1605" width="0.2" height="15.0" fill="rgb(205,57,17)" rx="2" ry="2" />
<text  x="145.63" y="1615.5" ></text>
</g>
<g >
<title>__pthread_getspecific (5 samples, 0.03%)</title><rect x="635.1" y="1861" width="0.3" height="15.0" fill="rgb(220,47,30)" rx="2" ry="2" />
<text  x="638.12" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1189.2" y="917" width="0.4" height="15.0" fill="rgb(205,65,47)" rx="2" ry="2" />
<text  x="1192.17" y="927.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="74.7" y="581" width="0.1" height="15.0" fill="rgb(205,207,41)" rx="2" ry="2" />
<text  x="77.69" y="591.5" ></text>
</g>
<g >
<title>x2apic_send_IPI (2 samples, 0.01%)</title><rect x="54.0" y="1749" width="0.2" height="15.0" fill="rgb(210,120,32)" rx="2" ry="2" />
<text  x="57.04" y="1759.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (5 samples, 0.03%)</title><rect x="159.6" y="1653" width="0.4" height="15.0" fill="rgb(241,90,26)" rx="2" ry="2" />
<text  x="162.63" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (2 samples, 0.01%)</title><rect x="192.7" y="1637" width="0.1" height="15.0" fill="rgb(229,105,31)" rx="2" ry="2" />
<text  x="195.68" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1188.9" y="1701" width="0.1" height="15.0" fill="rgb(237,154,49)" rx="2" ry="2" />
<text  x="1191.91" y="1711.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (26 samples, 0.14%)</title><rect x="723.3" y="1845" width="1.6" height="15.0" fill="rgb(220,80,31)" rx="2" ry="2" />
<text  x="726.27" y="1855.5" ></text>
</g>
<g >
<title>wp_page_copy (2 samples, 0.01%)</title><rect x="1104.5" y="1941" width="0.2" height="15.0" fill="rgb(224,90,1)" rx="2" ry="2" />
<text  x="1107.54" y="1951.5" ></text>
</g>
<g >
<title>operator new (43 samples, 0.23%)</title><rect x="636.1" y="1861" width="2.8" height="15.0" fill="rgb(219,146,52)" rx="2" ry="2" />
<text  x="639.15" y="1871.5" ></text>
</g>
<g >
<title>handle_mm_fault (7 samples, 0.04%)</title><rect x="800.7" y="1973" width="0.4" height="15.0" fill="rgb(230,59,35)" rx="2" ry="2" />
<text  x="803.67" y="1983.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (13 samples, 0.07%)</title><rect x="1107.0" y="1989" width="0.8" height="15.0" fill="rgb(249,222,33)" rx="2" ry="2" />
<text  x="1109.97" y="1999.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::basic_json (2 samples, 0.01%)</title><rect x="505.1" y="1989" width="0.1" height="15.0" fill="rgb(235,165,22)" rx="2" ry="2" />
<text  x="508.11" y="1999.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="145.8" y="1637" width="0.1" height="15.0" fill="rgb(206,144,49)" rx="2" ry="2" />
<text  x="148.76" y="1647.5" ></text>
</g>
<g >
<title>__sanitizer::ThreadContextBase::OnJoined (5 samples, 0.03%)</title><rect x="802.9" y="2037" width="0.3" height="15.0" fill="rgb(210,121,13)" rx="2" ry="2" />
<text  x="805.91" y="2047.5" ></text>
</g>
<g >
<title>__asan_memset (38 samples, 0.21%)</title><rect x="713.2" y="1861" width="2.4" height="15.0" fill="rgb(209,41,50)" rx="2" ry="2" />
<text  x="716.17" y="1871.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (3 samples, 0.02%)</title><rect x="202.2" y="1621" width="0.2" height="15.0" fill="rgb(205,4,21)" rx="2" ry="2" />
<text  x="205.20" y="1631.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="598.5" y="1957" width="0.1" height="15.0" fill="rgb(245,160,19)" rx="2" ry="2" />
<text  x="601.50" y="1967.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (4 samples, 0.02%)</title><rect x="161.7" y="1541" width="0.3" height="15.0" fill="rgb(214,96,24)" rx="2" ry="2" />
<text  x="164.74" y="1551.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (5 samples, 0.03%)</title><rect x="802.9" y="1989" width="0.3" height="15.0" fill="rgb(213,208,47)" rx="2" ry="2" />
<text  x="805.91" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (316 samples, 1.71%)</title><rect x="54.3" y="341" width="20.2" height="15.0" fill="rgb(246,52,16)" rx="2" ry="2" />
<text  x="57.30" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (8 samples, 0.04%)</title><rect x="130.2" y="1685" width="0.5" height="15.0" fill="rgb(249,30,43)" rx="2" ry="2" />
<text  x="133.23" y="1695.5" ></text>
</g>
<g >
<title>onmt::unicode::is_letter@plt (2 samples, 0.01%)</title><rect x="759.1" y="1877" width="0.1" height="15.0" fill="rgb(205,194,17)" rx="2" ry="2" />
<text  x="762.06" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="216.6" y="1013" width="0.2" height="15.0" fill="rgb(229,142,51)" rx="2" ry="2" />
<text  x="219.65" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1189.1" y="1797" width="0.5" height="15.0" fill="rgb(225,168,8)" rx="2" ry="2" />
<text  x="1192.11" y="1807.5" ></text>
</g>
<g >
<title>__do_munmap (2 samples, 0.01%)</title><rect x="77.5" y="1141" width="0.1" height="15.0" fill="rgb(212,158,52)" rx="2" ry="2" />
<text  x="80.50" y="1151.5" ></text>
</g>
<g >
<title>[unknown] (365 samples, 1.98%)</title><rect x="54.3" y="1237" width="23.3" height="15.0" fill="rgb(254,171,24)" rx="2" ry="2" />
<text  x="57.30" y="1247.5" >[..</text>
</g>
<g >
<title>TDocument::PreprocessTextFields (3,046 samples, 16.50%)</title><rect x="598.6" y="1973" width="194.7" height="15.0" fill="rgb(211,82,24)" rx="2" ry="2" />
<text  x="601.63" y="1983.5" >TDocument::PreprocessText..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1188.4" y="1429" width="0.4" height="15.0" fill="rgb(235,151,24)" rx="2" ry="2" />
<text  x="1191.40" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1188.8" y="1989" width="0.2" height="15.0" fill="rgb(211,32,4)" rx="2" ry="2" />
<text  x="1191.85" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1189.2" y="933" width="0.4" height="15.0" fill="rgb(224,153,46)" rx="2" ry="2" />
<text  x="1192.17" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (73 samples, 0.40%)</title><rect x="198.1" y="1685" width="4.7" height="15.0" fill="rgb(239,48,35)" rx="2" ry="2" />
<text  x="201.11" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.9" y="341" width="0.1" height="15.0" fill="rgb(236,191,7)" rx="2" ry="2" />
<text  x="1191.91" y="351.5" ></text>
</g>
<g >
<title>[unknown] (482 samples, 2.61%)</title><rect x="54.3" y="1669" width="30.8" height="15.0" fill="rgb(234,64,15)" rx="2" ry="2" />
<text  x="57.30" y="1679.5" >[u..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3 samples, 0.02%)</title><rect x="184.6" y="1749" width="0.2" height="15.0" fill="rgb(208,218,38)" rx="2" ry="2" />
<text  x="187.63" y="1759.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.03%)</title><rect x="168.7" y="1573" width="0.3" height="15.0" fill="rgb(209,178,45)" rx="2" ry="2" />
<text  x="171.71" y="1583.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::do_tolower (3 samples, 0.02%)</title><rect x="206.9" y="1653" width="0.2" height="15.0" fill="rgb(238,50,17)" rx="2" ry="2" />
<text  x="209.87" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1188.4" y="501" width="0.4" height="15.0" fill="rgb(250,219,50)" rx="2" ry="2" />
<text  x="1191.40" y="511.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="86.7" y="1781" width="0.1" height="15.0" fill="rgb(237,197,1)" rx="2" ry="2" />
<text  x="89.70" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (428 samples, 2.32%)</title><rect x="54.3" y="1493" width="27.4" height="15.0" fill="rgb(206,14,39)" rx="2" ry="2" />
<text  x="57.30" y="1503.5" >[..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.3" y="1957" width="0.1" height="15.0" fill="rgb(235,19,28)" rx="2" ry="2" />
<text  x="1191.27" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1189.2" y="629" width="0.4" height="15.0" fill="rgb(228,0,17)" rx="2" ry="2" />
<text  x="1192.17" y="639.5" ></text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.02%)</title><rect x="195.6" y="1589" width="0.2" height="15.0" fill="rgb(209,143,34)" rx="2" ry="2" />
<text  x="198.62" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (399 samples, 2.16%)</title><rect x="54.3" y="1365" width="25.5" height="15.0" fill="rgb(252,211,8)" rx="2" ry="2" />
<text  x="57.30" y="1375.5" >[..</text>
</g>
<g >
<title>onmt::unicode::is_separator (3 samples, 0.02%)</title><rect x="772.6" y="1893" width="0.2" height="15.0" fill="rgb(231,219,16)" rx="2" ry="2" />
<text  x="775.61" y="1903.5" ></text>
</g>
<g >
<title>__asan_memset (5 samples, 0.03%)</title><rect x="606.4" y="1893" width="0.3" height="15.0" fill="rgb(254,64,26)" rx="2" ry="2" />
<text  x="609.42" y="1903.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="80.8" y="1429" width="0.1" height="15.0" fill="rgb(212,52,45)" rx="2" ry="2" />
<text  x="83.76" y="1439.5" ></text>
</g>
<g >
<title>__asan::Allocator::Deallocate (264 samples, 1.43%)</title><rect x="944.0" y="2053" width="16.9" height="15.0" fill="rgb(250,93,37)" rx="2" ry="2" />
<text  x="947.04" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1189.2" y="565" width="0.4" height="15.0" fill="rgb(238,81,26)" rx="2" ry="2" />
<text  x="1192.17" y="575.5" ></text>
</g>
<g >
<title>[unknown] (335 samples, 1.81%)</title><rect x="54.3" y="1109" width="21.4" height="15.0" fill="rgb(209,45,36)" rx="2" ry="2" />
<text  x="57.30" y="1119.5" >[..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="216.6" y="885" width="0.2" height="15.0" fill="rgb(242,37,17)" rx="2" ry="2" />
<text  x="219.65" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1188.9" y="1557" width="0.1" height="15.0" fill="rgb(213,79,45)" rx="2" ry="2" />
<text  x="1191.91" y="1567.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare@plt (3 samples, 0.02%)</title><rect x="790.8" y="1893" width="0.2" height="15.0" fill="rgb(249,228,6)" rx="2" ry="2" />
<text  x="793.76" y="1903.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (5 samples, 0.03%)</title><rect x="727.6" y="1765" width="0.3" height="15.0" fill="rgb(233,229,31)" rx="2" ry="2" />
<text  x="730.61" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (479 samples, 2.59%)</title><rect x="54.3" y="1653" width="30.6" height="15.0" fill="rgb(241,211,51)" rx="2" ry="2" />
<text  x="57.30" y="1663.5" >[u..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (70 samples, 0.38%)</title><rect x="180.1" y="1733" width="4.5" height="15.0" fill="rgb(234,217,46)" rx="2" ry="2" />
<text  x="183.09" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (507 samples, 2.75%)</title><rect x="54.3" y="1781" width="32.4" height="15.0" fill="rgb(208,221,17)" rx="2" ry="2" />
<text  x="57.30" y="1791.5" >[u..</text>
</g>
<g >
<title>__x64_sys_read (2 samples, 0.01%)</title><rect x="119.7" y="1989" width="0.1" height="15.0" fill="rgb(211,47,32)" rx="2" ry="2" />
<text  x="122.68" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="216.6" y="1077" width="0.2" height="15.0" fill="rgb(225,215,44)" rx="2" ry="2" />
<text  x="219.65" y="1087.5" ></text>
</g>
<g >
<title>exit_mmap (6 samples, 0.03%)</title><rect x="1108.2" y="1957" width="0.4" height="15.0" fill="rgb(244,156,4)" rx="2" ry="2" />
<text  x="1111.18" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="216.5" y="1637" width="0.3" height="15.0" fill="rgb(225,59,50)" rx="2" ry="2" />
<text  x="219.52" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (9 samples, 0.05%)</title><rect x="805.1" y="2021" width="0.6" height="15.0" fill="rgb(214,208,36)" rx="2" ry="2" />
<text  x="808.15" y="2031.5" ></text>
</g>
<g >
<title>fasttext::HierarchicalSoftmaxLoss::dfs (5 samples, 0.03%)</title><rect x="590.8" y="1893" width="0.3" height="15.0" fill="rgb(210,26,14)" rx="2" ry="2" />
<text  x="593.83" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1188.4" y="709" width="0.4" height="15.0" fill="rgb(240,78,47)" rx="2" ry="2" />
<text  x="1191.40" y="719.5" ></text>
</g>
<g >
<title>__dynamic_cast (5 samples, 0.03%)</title><rect x="132.0" y="1573" width="0.3" height="15.0" fill="rgb(207,212,28)" rx="2" ry="2" />
<text  x="135.02" y="1583.5" ></text>
</g>
<g >
<title>do_page_fault (13 samples, 0.07%)</title><rect x="681.1" y="1845" width="0.9" height="15.0" fill="rgb(241,7,47)" rx="2" ry="2" />
<text  x="684.14" y="1855.5" ></text>
</g>
<g >
<title>vma_merge (3 samples, 0.02%)</title><rect x="803.9" y="1909" width="0.2" height="15.0" fill="rgb(212,197,5)" rx="2" ry="2" />
<text  x="806.93" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="216.6" y="1301" width="0.2" height="15.0" fill="rgb(235,85,49)" rx="2" ry="2" />
<text  x="219.58" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1189.2" y="1221" width="0.4" height="15.0" fill="rgb(254,37,22)" rx="2" ry="2" />
<text  x="1192.17" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1188.4" y="341" width="0.4" height="15.0" fill="rgb(206,141,52)" rx="2" ry="2" />
<text  x="1191.40" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1189.2" y="181" width="0.4" height="15.0" fill="rgb(233,224,31)" rx="2" ry="2" />
<text  x="1192.17" y="191.5" ></text>
</g>
<g >
<title>__lsan::ForEachChunk (5 samples, 0.03%)</title><rect x="506.7" y="2037" width="0.3" height="15.0" fill="rgb(241,85,9)" rx="2" ry="2" />
<text  x="509.71" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1188.4" y="1253" width="0.4" height="15.0" fill="rgb(228,220,20)" rx="2" ry="2" />
<text  x="1191.40" y="1263.5" ></text>
</g>
<g >
<title>fasttext::FastText::~FastText (2 samples, 0.01%)</title><rect x="505.5" y="1989" width="0.1" height="15.0" fill="rgb(222,193,28)" rx="2" ry="2" />
<text  x="508.50" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1189.2" y="725" width="0.4" height="15.0" fill="rgb(205,18,12)" rx="2" ry="2" />
<text  x="1192.17" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1188.4" y="965" width="0.4" height="15.0" fill="rgb(218,211,28)" rx="2" ry="2" />
<text  x="1191.40" y="975.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (2 samples, 0.01%)</title><rect x="527.9" y="1877" width="0.2" height="15.0" fill="rgb(251,13,1)" rx="2" ry="2" />
<text  x="530.93" y="1887.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (17 samples, 0.09%)</title><rect x="523.9" y="1909" width="1.1" height="15.0" fill="rgb(212,80,44)" rx="2" ry="2" />
<text  x="526.90" y="1919.5" ></text>
</g>
<g >
<title>on_each_cpu_mask (2 samples, 0.01%)</title><rect x="1107.2" y="1797" width="0.2" height="15.0" fill="rgb(237,9,6)" rx="2" ry="2" />
<text  x="1110.23" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (89 samples, 0.48%)</title><rect x="164.6" y="1669" width="5.6" height="15.0" fill="rgb(239,177,37)" rx="2" ry="2" />
<text  x="167.56" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1188.5" y="149" width="0.3" height="15.0" fill="rgb(208,105,35)" rx="2" ry="2" />
<text  x="1191.47" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1188.4" y="1877" width="0.4" height="15.0" fill="rgb(234,201,16)" rx="2" ry="2" />
<text  x="1191.40" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="216.6" y="1045" width="0.2" height="15.0" fill="rgb(226,55,35)" rx="2" ry="2" />
<text  x="219.65" y="1055.5" ></text>
</g>
<g >
<title>operator delete (19 samples, 0.10%)</title><rect x="663.2" y="1877" width="1.2" height="15.0" fill="rgb(213,84,32)" rx="2" ry="2" />
<text  x="666.18" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1189.2" y="741" width="0.4" height="15.0" fill="rgb(254,38,35)" rx="2" ry="2" />
<text  x="1192.17" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1188.4" y="1973" width="0.4" height="15.0" fill="rgb(226,155,50)" rx="2" ry="2" />
<text  x="1191.40" y="1983.5" ></text>
</g>
<g >
<title>onmt::CaseModifier::extract_case_type (49 samples, 0.27%)</title><rect x="806.8" y="2037" width="3.1" height="15.0" fill="rgb(216,175,44)" rx="2" ry="2" />
<text  x="809.81" y="2047.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (46 samples, 0.25%)</title><rect x="199.3" y="1621" width="2.9" height="15.0" fill="rgb(251,51,16)" rx="2" ry="2" />
<text  x="202.26" y="1631.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="483.5" y="1957" width="0.1" height="15.0" fill="rgb(231,29,39)" rx="2" ry="2" />
<text  x="486.51" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1189.2" y="245" width="0.4" height="15.0" fill="rgb(244,229,54)" rx="2" ry="2" />
<text  x="1192.17" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (79 samples, 0.43%)</title><rect x="152.7" y="1813" width="5.0" height="15.0" fill="rgb(230,142,31)" rx="2" ry="2" />
<text  x="155.67" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.05%)</title><rect x="216.5" y="1909" width="0.7" height="15.0" fill="rgb(232,33,42)" rx="2" ry="2" />
<text  x="219.52" y="1919.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (2 samples, 0.01%)</title><rect x="805.0" y="2005" width="0.1" height="15.0" fill="rgb(213,205,50)" rx="2" ry="2" />
<text  x="808.02" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1189.2" y="325" width="0.4" height="15.0" fill="rgb(242,108,38)" rx="2" ry="2" />
<text  x="1192.17" y="335.5" ></text>
</g>
<g >
<title>ksys_read (2 samples, 0.01%)</title><rect x="119.7" y="1973" width="0.1" height="15.0" fill="rgb(238,150,20)" rx="2" ry="2" />
<text  x="122.68" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1189.1" y="1877" width="0.5" height="15.0" fill="rgb(232,105,28)" rx="2" ry="2" />
<text  x="1192.11" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (5 samples, 0.03%)</title><rect x="158.4" y="1813" width="0.3" height="15.0" fill="rgb(226,84,31)" rx="2" ry="2" />
<text  x="161.42" y="1823.5" ></text>
</g>
<g >
<title>__sanitizer::QuarantineCache&lt;__asan::QuarantineCallback&gt;::MergeBatches (9 samples, 0.05%)</title><rect x="801.2" y="2037" width="0.6" height="15.0" fill="rgb(241,35,49)" rx="2" ry="2" />
<text  x="804.18" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.3" y="1989" width="0.1" height="15.0" fill="rgb(224,184,41)" rx="2" ry="2" />
<text  x="1191.27" y="1999.5" ></text>
</g>
<g >
<title>do_page_fault (6 samples, 0.03%)</title><rect x="1018.6" y="2021" width="0.4" height="15.0" fill="rgb(243,122,20)" rx="2" ry="2" />
<text  x="1021.57" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1188.8" y="1973" width="0.2" height="15.0" fill="rgb(226,58,35)" rx="2" ry="2" />
<text  x="1191.85" y="1983.5" ></text>
</g>
<g >
<title>std::operator&gt;&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (9 samples, 0.05%)</title><rect x="814.0" y="2005" width="0.6" height="15.0" fill="rgb(242,98,4)" rx="2" ry="2" />
<text  x="817.03" y="2015.5" ></text>
</g>
<g >
<title>__pthread_getspecific (3 samples, 0.02%)</title><rect x="173.2" y="1589" width="0.2" height="15.0" fill="rgb(237,45,28)" rx="2" ry="2" />
<text  x="176.18" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (9 samples, 0.05%)</title><rect x="818.4" y="1989" width="0.6" height="15.0" fill="rgb(240,61,30)" rx="2" ry="2" />
<text  x="821.38" y="1999.5" ></text>
</g>
<g >
<title>do_syscall_64 (15 samples, 0.08%)</title><rect x="1106.9" y="2021" width="1.0" height="15.0" fill="rgb(251,201,11)" rx="2" ry="2" />
<text  x="1109.91" y="2031.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;std::__detail::_State&lt;char&gt; const*, std::__detail::_State&lt;char&gt;*&gt; (8 samples, 0.04%)</title><rect x="130.2" y="1653" width="0.5" height="15.0" fill="rgb(247,80,26)" rx="2" ry="2" />
<text  x="133.23" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.05%)</title><rect x="216.5" y="1813" width="0.7" height="15.0" fill="rgb(233,193,48)" rx="2" ry="2" />
<text  x="219.52" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (325 samples, 1.76%)</title><rect x="54.3" y="853" width="20.8" height="15.0" fill="rgb(211,90,18)" rx="2" ry="2" />
<text  x="57.30" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (85 samples, 0.46%)</title><rect x="140.5" y="1685" width="5.4" height="15.0" fill="rgb(221,88,40)" rx="2" ry="2" />
<text  x="143.46" y="1695.5" ></text>
</g>
<g >
<title>RunFasttextClf (502 samples, 2.72%)</title><rect x="566.3" y="1957" width="32.1" height="15.0" fill="rgb(219,68,17)" rx="2" ry="2" />
<text  x="569.28" y="1967.5" >Ru..</text>
</g>
<g >
<title>__do_page_fault (19 samples, 0.10%)</title><rect x="52.3" y="1989" width="1.2" height="15.0" fill="rgb(226,28,2)" rx="2" ry="2" />
<text  x="55.25" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (358 samples, 1.94%)</title><rect x="54.3" y="1221" width="22.9" height="15.0" fill="rgb(218,176,26)" rx="2" ry="2" />
<text  x="57.30" y="1231.5" >[..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1189.2" y="1637" width="0.4" height="15.0" fill="rgb(253,62,28)" rx="2" ry="2" />
<text  x="1192.17" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1189.2" y="1493" width="0.4" height="15.0" fill="rgb(224,97,48)" rx="2" ry="2" />
<text  x="1192.17" y="1503.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="80.5" y="1413" width="0.1" height="15.0" fill="rgb(220,94,17)" rx="2" ry="2" />
<text  x="83.50" y="1423.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int&gt; (7 samples, 0.04%)</title><rect x="472.1" y="1893" width="0.4" height="15.0" fill="rgb(246,33,42)" rx="2" ry="2" />
<text  x="475.07" y="1903.5" ></text>
</g>
<g >
<title>__asan_memset (2 samples, 0.01%)</title><rect x="466.9" y="1925" width="0.1" height="15.0" fill="rgb(233,174,45)" rx="2" ry="2" />
<text  x="469.89" y="1935.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="74.4" y="69" width="0.1" height="15.0" fill="rgb(239,202,30)" rx="2" ry="2" />
<text  x="77.37" y="79.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (2 samples, 0.01%)</title><rect x="1148.6" y="2037" width="0.2" height="15.0" fill="rgb(239,154,12)" rx="2" ry="2" />
<text  x="1151.64" y="2047.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (4 samples, 0.02%)</title><rect x="327.4" y="1989" width="0.2" height="15.0" fill="rgb(208,60,32)" rx="2" ry="2" />
<text  x="330.36" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (66 samples, 0.36%)</title><rect x="160.0" y="1621" width="4.2" height="15.0" fill="rgb(248,190,16)" rx="2" ry="2" />
<text  x="162.95" y="1631.5" ></text>
</g>
<g >
<title>__asan_memcpy (2 samples, 0.01%)</title><rect x="138.5" y="1589" width="0.2" height="15.0" fill="rgb(237,211,8)" rx="2" ry="2" />
<text  x="141.54" y="1599.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::create&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt; const&amp;&gt; (3 samples, 0.02%)</title><rect x="505.2" y="1813" width="0.2" height="15.0" fill="rgb(254,99,50)" rx="2" ry="2" />
<text  x="508.24" y="1823.5" ></text>
</g>
<g >
<title>mem_cgroup_uncharge_list (2 samples, 0.01%)</title><rect x="1108.4" y="1845" width="0.2" height="15.0" fill="rgb(241,159,8)" rx="2" ry="2" />
<text  x="1111.44" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (449 samples, 2.43%)</title><rect x="186.5" y="1845" width="28.7" height="15.0" fill="rgb(252,209,38)" rx="2" ry="2" />
<text  x="189.54" y="1855.5" >st..</text>
</g>
<g >
<title>__handle_mm_fault (3 samples, 0.02%)</title><rect x="765.8" y="1813" width="0.2" height="15.0" fill="rgb(212,44,50)" rx="2" ry="2" />
<text  x="768.77" y="1823.5" ></text>
</g>
<g >
<title>__pthread_getspecific (6 samples, 0.03%)</title><rect x="648.2" y="1845" width="0.4" height="15.0" fill="rgb(240,71,10)" rx="2" ry="2" />
<text  x="651.23" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (5 samples, 0.03%)</title><rect x="185.2" y="1829" width="0.3" height="15.0" fill="rgb(211,1,16)" rx="2" ry="2" />
<text  x="188.20" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.04%)</title><rect x="1189.0" y="2037" width="0.6" height="15.0" fill="rgb(222,170,23)" rx="2" ry="2" />
<text  x="1192.04" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="216.6" y="1237" width="0.2" height="15.0" fill="rgb(245,183,10)" rx="2" ry="2" />
<text  x="219.58" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1188.4" y="1413" width="0.4" height="15.0" fill="rgb(230,146,6)" rx="2" ry="2" />
<text  x="1191.40" y="1423.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&gt;::MaybeReleaseToOS (2 samples, 0.01%)</title><rect x="1021.6" y="2053" width="0.1" height="15.0" fill="rgb(220,78,21)" rx="2" ry="2" />
<text  x="1024.57" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1189.1" y="1829" width="0.5" height="15.0" fill="rgb(217,42,30)" rx="2" ry="2" />
<text  x="1192.11" y="1839.5" ></text>
</g>
<g >
<title>__sanitizer::BlockingMutex::Lock (10 samples, 0.05%)</title><rect x="794.0" y="2037" width="0.6" height="15.0" fill="rgb(221,197,6)" rx="2" ry="2" />
<text  x="796.96" y="2047.5" ></text>
</g>
<g >
<title>mmap_region (12 samples, 0.07%)</title><rect x="803.4" y="1925" width="0.7" height="15.0" fill="rgb(216,219,0)" rx="2" ry="2" />
<text  x="806.36" y="1935.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int&gt; (7 samples, 0.04%)</title><rect x="503.4" y="1941" width="0.4" height="15.0" fill="rgb(239,10,21)" rx="2" ry="2" />
<text  x="506.39" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (891 samples, 4.83%)</title><rect x="819.6" y="2021" width="56.9" height="15.0" fill="rgb(238,119,8)" rx="2" ry="2" />
<text  x="822.59" y="2031.5" >[unkno..</text>
</g>
<g >
<title>__sanitizer::StackDepotPut (32 samples, 0.17%)</title><rect x="1104.8" y="2053" width="2.0" height="15.0" fill="rgb(234,79,37)" rx="2" ry="2" />
<text  x="1107.80" y="2063.5" ></text>
</g>
<g >
<title>__asan::AsanThread::stack_bottom (2 samples, 0.01%)</title><rect x="620.4" y="1877" width="0.1" height="15.0" fill="rgb(217,166,12)" rx="2" ry="2" />
<text  x="623.36" y="1887.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (58 samples, 0.31%)</title><rect x="210.4" y="1685" width="3.7" height="15.0" fill="rgb(226,177,31)" rx="2" ry="2" />
<text  x="213.38" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="216.5" y="1653" width="0.3" height="15.0" fill="rgb(237,228,20)" rx="2" ry="2" />
<text  x="219.52" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="185.8" y="1365" width="0.1" height="15.0" fill="rgb(214,198,24)" rx="2" ry="2" />
<text  x="188.78" y="1375.5" ></text>
</g>
<g >
<title>[unknown] (517 samples, 2.80%)</title><rect x="54.3" y="1829" width="33.0" height="15.0" fill="rgb(247,206,35)" rx="2" ry="2" />
<text  x="57.30" y="1839.5" >[u..</text>
</g>
<g >
<title>__vm_munmap (2 samples, 0.01%)</title><rect x="81.5" y="1413" width="0.2" height="15.0" fill="rgb(232,151,2)" rx="2" ry="2" />
<text  x="84.52" y="1423.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="462.1" y="1909" width="0.1" height="15.0" fill="rgb(234,95,50)" rx="2" ry="2" />
<text  x="465.10" y="1919.5" ></text>
</g>
<g >
<title>onmt::add_final_token&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (44 samples, 0.24%)</title><rect x="601.9" y="1893" width="2.9" height="15.0" fill="rgb(251,185,29)" rx="2" ry="2" />
<text  x="604.95" y="1903.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::set@plt (3 samples, 0.02%)</title><rect x="600.4" y="1909" width="0.1" height="15.0" fill="rgb(241,99,46)" rx="2" ry="2" />
<text  x="603.35" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="185.6" y="1893" width="0.3" height="15.0" fill="rgb(228,137,48)" rx="2" ry="2" />
<text  x="188.65" y="1903.5" ></text>
</g>
<g >
<title>__interceptor___strxfrm_l (112 samples, 0.61%)</title><rect x="1165.2" y="2037" width="7.2" height="15.0" fill="rgb(248,177,37)" rx="2" ry="2" />
<text  x="1168.20" y="2047.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (5 samples, 0.03%)</title><rect x="191.2" y="1557" width="0.3" height="15.0" fill="rgb(223,16,13)" rx="2" ry="2" />
<text  x="194.21" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1188.5" y="101" width="0.3" height="15.0" fill="rgb(209,166,16)" rx="2" ry="2" />
<text  x="1191.53" y="111.5" ></text>
</g>
<g >
<title>__sanitizer::internal_mmap (16 samples, 0.09%)</title><rect x="803.2" y="2037" width="1.1" height="15.0" fill="rgb(241,228,28)" rx="2" ry="2" />
<text  x="806.23" y="2047.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (2 samples, 0.01%)</title><rect x="162.8" y="1541" width="0.1" height="15.0" fill="rgb(245,198,26)" rx="2" ry="2" />
<text  x="165.77" y="1551.5" ></text>
</g>
<g >
<title>on_each_cpu_cond_mask (2 samples, 0.01%)</title><rect x="1107.2" y="1813" width="0.2" height="15.0" fill="rgb(250,137,15)" rx="2" ry="2" />
<text  x="1110.23" y="1823.5" ></text>
</g>
<g >
<title>do_page_fault (14 samples, 0.08%)</title><rect x="710.2" y="1829" width="0.9" height="15.0" fill="rgb(210,89,47)" rx="2" ry="2" />
<text  x="713.16" y="1839.5" ></text>
</g>
<g >
<title>__asan::AsanThread::stack_bottom (3 samples, 0.02%)</title><rect x="189.4" y="1557" width="0.1" height="15.0" fill="rgb(224,83,46)" rx="2" ry="2" />
<text  x="192.36" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.9" y="517" width="0.1" height="15.0" fill="rgb(229,183,38)" rx="2" ry="2" />
<text  x="1191.91" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (89 samples, 0.48%)</title><rect x="164.6" y="1637" width="5.6" height="15.0" fill="rgb(209,161,50)" rx="2" ry="2" />
<text  x="167.56" y="1647.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::reserve (26 samples, 0.14%)</title><rect x="879.5" y="2037" width="1.6" height="15.0" fill="rgb(211,26,45)" rx="2" ry="2" />
<text  x="882.48" y="2047.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="90.6" y="1957" width="0.1" height="15.0" fill="rgb(224,204,54)" rx="2" ry="2" />
<text  x="93.60" y="1967.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.01%)</title><rect x="316.9" y="1893" width="0.2" height="15.0" fill="rgb(218,37,13)" rx="2" ry="2" />
<text  x="319.94" y="1903.5" ></text>
</g>
<g >
<title>operator delete (9 samples, 0.05%)</title><rect x="477.3" y="1941" width="0.6" height="15.0" fill="rgb(242,170,9)" rx="2" ry="2" />
<text  x="480.31" y="1951.5" ></text>
</g>
<g >
<title>memcmp@plt (5 samples, 0.03%)</title><rect x="1108.6" y="2053" width="0.4" height="15.0" fill="rgb(254,140,16)" rx="2" ry="2" />
<text  x="1111.63" y="2063.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="81.5" y="1461" width="0.2" height="15.0" fill="rgb(214,68,6)" rx="2" ry="2" />
<text  x="84.52" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1188.4" y="1925" width="0.4" height="15.0" fill="rgb(225,126,16)" rx="2" ry="2" />
<text  x="1191.40" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="216.6" y="1221" width="0.2" height="15.0" fill="rgb(248,209,9)" rx="2" ry="2" />
<text  x="219.58" y="1231.5" ></text>
</g>
<g >
<title>[unknown] (39 samples, 0.21%)</title><rect x="815.9" y="2021" width="2.5" height="15.0" fill="rgb(219,213,16)" rx="2" ry="2" />
<text  x="818.88" y="2031.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::_M_transform (2 samples, 0.01%)</title><rect x="1149.2" y="2053" width="0.1" height="15.0" fill="rgb(218,62,38)" rx="2" ry="2" />
<text  x="1152.16" y="2063.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (5 samples, 0.03%)</title><rect x="710.7" y="1749" width="0.3" height="15.0" fill="rgb(247,166,4)" rx="2" ry="2" />
<text  x="713.67" y="1759.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (2 samples, 0.01%)</title><rect x="1107.4" y="1797" width="0.1" height="15.0" fill="rgb(223,65,41)" rx="2" ry="2" />
<text  x="1110.35" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (84 samples, 0.46%)</title><rect x="140.5" y="1653" width="5.4" height="15.0" fill="rgb(247,151,3)" rx="2" ry="2" />
<text  x="143.52" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (463 samples, 2.51%)</title><rect x="54.3" y="1605" width="29.6" height="15.0" fill="rgb(238,179,1)" rx="2" ry="2" />
<text  x="57.30" y="1615.5" >[u..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="185.6" y="1877" width="0.3" height="15.0" fill="rgb(227,68,17)" rx="2" ry="2" />
<text  x="188.65" y="1887.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.02%)</title><rect x="196.2" y="1589" width="0.2" height="15.0" fill="rgb(214,45,45)" rx="2" ry="2" />
<text  x="199.19" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1188.8" y="1861" width="0.2" height="15.0" fill="rgb(238,210,48)" rx="2" ry="2" />
<text  x="1191.85" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (85 samples, 0.46%)</title><rect x="140.5" y="1733" width="5.4" height="15.0" fill="rgb(252,6,23)" rx="2" ry="2" />
<text  x="143.46" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1188.4" y="325" width="0.4" height="15.0" fill="rgb(251,46,18)" rx="2" ry="2" />
<text  x="1191.40" y="335.5" ></text>
</g>
<g >
<title>[unknown] (330 samples, 1.79%)</title><rect x="54.3" y="965" width="21.1" height="15.0" fill="rgb(244,186,36)" rx="2" ry="2" />
<text  x="57.30" y="975.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (123 samples, 0.67%)</title><rect x="100.4" y="2037" width="7.8" height="15.0" fill="rgb(232,192,32)" rx="2" ry="2" />
<text  x="103.38" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1188.4" y="1765" width="0.4" height="15.0" fill="rgb(207,45,16)" rx="2" ry="2" />
<text  x="1191.40" y="1775.5" ></text>
</g>
<g >
<title>on_each_cpu_cond_mask (2 samples, 0.01%)</title><rect x="54.0" y="1845" width="0.2" height="15.0" fill="rgb(226,12,10)" rx="2" ry="2" />
<text  x="57.04" y="1855.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find (8 samples, 0.04%)</title><rect x="1148.6" y="2053" width="0.5" height="15.0" fill="rgb(229,175,33)" rx="2" ry="2" />
<text  x="1151.58" y="2063.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (5 samples, 0.03%)</title><rect x="42.1" y="2005" width="0.3" height="15.0" fill="rgb(214,126,17)" rx="2" ry="2" />
<text  x="45.09" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1188.4" y="613" width="0.4" height="15.0" fill="rgb(229,183,30)" rx="2" ry="2" />
<text  x="1191.40" y="623.5" ></text>
</g>
<g >
<title>fasttext::Matrix::size (11 samples, 0.06%)</title><rect x="306.9" y="1941" width="0.7" height="15.0" fill="rgb(224,27,41)" rx="2" ry="2" />
<text  x="309.90" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (319 samples, 1.73%)</title><rect x="54.3" y="485" width="20.4" height="15.0" fill="rgb(249,15,25)" rx="2" ry="2" />
<text  x="57.30" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.9" y="1637" width="0.1" height="15.0" fill="rgb(209,73,42)" rx="2" ry="2" />
<text  x="1191.91" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (83 samples, 0.45%)</title><rect x="192.7" y="1701" width="5.3" height="15.0" fill="rgb(206,112,29)" rx="2" ry="2" />
<text  x="195.68" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="216.6" y="1461" width="0.2" height="15.0" fill="rgb(240,208,37)" rx="2" ry="2" />
<text  x="219.58" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_BracketMatcher (2 samples, 0.01%)</title><rect x="130.6" y="1621" width="0.1" height="15.0" fill="rgb(227,109,42)" rx="2" ry="2" />
<text  x="133.61" y="1631.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (4 samples, 0.02%)</title><rect x="1120.8" y="2037" width="0.3" height="15.0" fill="rgb(249,161,6)" rx="2" ry="2" />
<text  x="1123.84" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.9" y="677" width="0.1" height="15.0" fill="rgb(213,226,37)" rx="2" ry="2" />
<text  x="1191.91" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (4 samples, 0.02%)</title><rect x="157.8" y="1781" width="0.2" height="15.0" fill="rgb(244,69,47)" rx="2" ry="2" />
<text  x="160.78" y="1791.5" ></text>
</g>
<g >
<title>__asan_memset@plt (2 samples, 0.01%)</title><rect x="606.7" y="1893" width="0.2" height="15.0" fill="rgb(217,165,17)" rx="2" ry="2" />
<text  x="609.74" y="1903.5" ></text>
</g>
<g >
<title>onmt::unicode::is_letter (206 samples, 1.12%)</title><rect x="650.0" y="1877" width="13.2" height="15.0" fill="rgb(213,10,46)" rx="2" ry="2" />
<text  x="653.02" y="1887.5" ></text>
</g>
<g >
<title>do_page_fault (25 samples, 0.14%)</title><rect x="486.9" y="1909" width="1.6" height="15.0" fill="rgb(230,169,53)" rx="2" ry="2" />
<text  x="489.90" y="1919.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="77.2" y="1221" width="0.1" height="15.0" fill="rgb(228,43,35)" rx="2" ry="2" />
<text  x="80.18" y="1231.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (4 samples, 0.02%)</title><rect x="804.3" y="1861" width="0.3" height="15.0" fill="rgb(234,11,11)" rx="2" ry="2" />
<text  x="807.32" y="1871.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="84.4" y="1605" width="0.1" height="15.0" fill="rgb(227,100,54)" rx="2" ry="2" />
<text  x="87.40" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="216.6" y="1205" width="0.2" height="15.0" fill="rgb(220,195,34)" rx="2" ry="2" />
<text  x="219.58" y="1215.5" ></text>
</g>
<g >
<title>[unknown] (340 samples, 1.84%)</title><rect x="54.3" y="1141" width="21.7" height="15.0" fill="rgb(248,182,3)" rx="2" ry="2" />
<text  x="57.30" y="1151.5" >[..</text>
</g>
<g >
<title>Eigen::internal::general_matrix_matrix_product&lt;long, float, 0, false, float, 1, false, 0, 1&gt;::run (130 samples, 0.70%)</title><rect x="488.5" y="1925" width="8.3" height="15.0" fill="rgb(205,192,18)" rx="2" ry="2" />
<text  x="491.49" y="1935.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (2 samples, 0.01%)</title><rect x="498.6" y="1845" width="0.1" height="15.0" fill="rgb(215,15,33)" rx="2" ry="2" />
<text  x="501.59" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (2 samples, 0.01%)</title><rect x="158.8" y="1797" width="0.1" height="15.0" fill="rgb(238,216,49)" rx="2" ry="2" />
<text  x="161.80" y="1807.5" ></text>
</g>
<g >
<title>unmap_region (2 samples, 0.01%)</title><rect x="90.6" y="1893" width="0.1" height="15.0" fill="rgb(234,172,28)" rx="2" ry="2" />
<text  x="93.60" y="1903.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (50 samples, 0.27%)</title><rect x="132.3" y="1573" width="3.2" height="15.0" fill="rgb(241,47,54)" rx="2" ry="2" />
<text  x="135.34" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (316 samples, 1.71%)</title><rect x="54.3" y="149" width="20.2" height="15.0" fill="rgb(219,10,16)" rx="2" ry="2" />
<text  x="57.30" y="159.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (4 samples, 0.02%)</title><rect x="648.6" y="1845" width="0.3" height="15.0" fill="rgb(219,151,22)" rx="2" ry="2" />
<text  x="651.61" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (343 samples, 1.86%)</title><rect x="54.3" y="1157" width="21.9" height="15.0" fill="rgb(254,117,51)" rx="2" ry="2" />
<text  x="57.30" y="1167.5" >[..</text>
</g>
<g >
<title>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::dump_escaped (2 samples, 0.01%)</title><rect x="504.5" y="1909" width="0.1" height="15.0" fill="rgb(213,101,2)" rx="2" ry="2" />
<text  x="507.47" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (67 samples, 0.36%)</title><rect x="136.0" y="1669" width="4.3" height="15.0" fill="rgb(244,99,30)" rx="2" ry="2" />
<text  x="138.98" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (82 samples, 0.44%)</title><rect x="130.7" y="1653" width="5.3" height="15.0" fill="rgb(218,90,38)" rx="2" ry="2" />
<text  x="133.74" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.9" y="1669" width="0.1" height="15.0" fill="rgb(215,222,34)" rx="2" ry="2" />
<text  x="1191.91" y="1679.5" ></text>
</g>
<g >
<title>free_unref_page_list (3 samples, 0.02%)</title><rect x="804.4" y="1829" width="0.2" height="15.0" fill="rgb(251,90,49)" rx="2" ry="2" />
<text  x="807.38" y="1839.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int&gt; (20 samples, 0.11%)</title><rect x="878.1" y="2037" width="1.3" height="15.0" fill="rgb(239,59,19)" rx="2" ry="2" />
<text  x="881.14" y="2047.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (18 samples, 0.10%)</title><rect x="773.0" y="1893" width="1.1" height="15.0" fill="rgb(212,153,4)" rx="2" ry="2" />
<text  x="776.00" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.3" y="2021" width="0.1" height="15.0" fill="rgb(241,52,14)" rx="2" ry="2" />
<text  x="1191.27" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (63 samples, 0.34%)</title><rect x="160.0" y="1589" width="4.0" height="15.0" fill="rgb(224,145,35)" rx="2" ry="2" />
<text  x="163.02" y="1599.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2 samples, 0.01%)</title><rect x="497.1" y="1877" width="0.2" height="15.0" fill="rgb(205,7,35)" rx="2" ry="2" />
<text  x="500.12" y="1887.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotPut (2 samples, 0.01%)</title><rect x="173.7" y="1589" width="0.1" height="15.0" fill="rgb(232,203,27)" rx="2" ry="2" />
<text  x="176.70" y="1599.5" ></text>
</g>
<g >
<title>page_fault (114 samples, 0.62%)</title><rect x="936.8" y="2037" width="7.2" height="15.0" fill="rgb(227,199,5)" rx="2" ry="2" />
<text  x="939.75" y="2047.5" ></text>
</g>
<g >
<title>__sanitizer::RunFreeHooks (18 samples, 0.10%)</title><rect x="1019.0" y="2053" width="1.1" height="15.0" fill="rgb(217,84,25)" rx="2" ry="2" />
<text  x="1021.95" y="2063.5" ></text>
</g>
<g >
<title>__sanitizer_weak_hook_strcmp (2 samples, 0.01%)</title><rect x="41.3" y="2021" width="0.1" height="15.0" fill="rgb(245,216,33)" rx="2" ry="2" />
<text  x="44.26" y="2031.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::Unwind (2 samples, 0.01%)</title><rect x="190.3" y="1557" width="0.1" height="15.0" fill="rgb(223,201,49)" rx="2" ry="2" />
<text  x="193.31" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1189.2" y="1173" width="0.4" height="15.0" fill="rgb(242,2,33)" rx="2" ry="2" />
<text  x="1192.17" y="1183.5" ></text>
</g>
<g >
<title>[unknown] (317 samples, 1.72%)</title><rect x="54.3" y="389" width="20.3" height="15.0" fill="rgb(242,74,38)" rx="2" ry="2" />
<text  x="57.30" y="399.5" ></text>
</g>
<g >
<title>[unknown] (319 samples, 1.73%)</title><rect x="54.3" y="517" width="20.4" height="15.0" fill="rgb(221,124,45)" rx="2" ry="2" />
<text  x="57.30" y="527.5" ></text>
</g>
<g >
<title>__dynamic_cast (4 samples, 0.02%)</title><rect x="187.6" y="1589" width="0.2" height="15.0" fill="rgb(209,149,14)" rx="2" ry="2" />
<text  x="190.57" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1188.4" y="1909" width="0.4" height="15.0" fill="rgb(232,15,16)" rx="2" ry="2" />
<text  x="1191.40" y="1919.5" ></text>
</g>
<g >
<title>__x64_sys_futex (13 samples, 0.07%)</title><rect x="28.2" y="1957" width="0.8" height="15.0" fill="rgb(237,101,12)" rx="2" ry="2" />
<text  x="31.22" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (316 samples, 1.71%)</title><rect x="54.3" y="229" width="20.2" height="15.0" fill="rgb(225,182,15)" rx="2" ry="2" />
<text  x="57.30" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1188.4" y="1509" width="0.4" height="15.0" fill="rgb(242,144,0)" rx="2" ry="2" />
<text  x="1191.40" y="1519.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (35 samples, 0.19%)</title><rect x="708.8" y="1861" width="2.3" height="15.0" fill="rgb(240,82,17)" rx="2" ry="2" />
<text  x="711.82" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (316 samples, 1.71%)</title><rect x="54.3" y="181" width="20.2" height="15.0" fill="rgb(241,107,48)" rx="2" ry="2" />
<text  x="57.30" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="216.5" y="1509" width="0.3" height="15.0" fill="rgb(205,128,15)" rx="2" ry="2" />
<text  x="219.52" y="1519.5" ></text>
</g>
<g >
<title>__asan::AsanChunk::UsedSize (56 samples, 0.30%)</title><rect x="108.2" y="2037" width="3.6" height="15.0" fill="rgb(221,193,11)" rx="2" ry="2" />
<text  x="111.24" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1189.2" y="1669" width="0.4" height="15.0" fill="rgb(250,209,13)" rx="2" ry="2" />
<text  x="1192.17" y="1679.5" ></text>
</g>
<g >
<title>std::__future_base::_Task_state&lt;std::_Bind&lt;Annotate (16 samples, 0.09%)</title><rect x="28.1" y="2021" width="1.0" height="15.0" fill="rgb(210,152,32)" rx="2" ry="2" />
<text  x="31.09" y="2031.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (156 samples, 0.85%)</title><rect x="1128.5" y="2037" width="10.0" height="15.0" fill="rgb(218,110,49)" rx="2" ry="2" />
<text  x="1131.51" y="2047.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::create&lt;std::vector&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::allocator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::vector&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::allocator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; const&amp;&gt; (2 samples, 0.01%)</title><rect x="505.1" y="1909" width="0.1" height="15.0" fill="rgb(226,100,54)" rx="2" ry="2" />
<text  x="508.11" y="1919.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (3 samples, 0.02%)</title><rect x="83.5" y="1589" width="0.2" height="15.0" fill="rgb(225,13,34)" rx="2" ry="2" />
<text  x="86.51" y="1599.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (3 samples, 0.02%)</title><rect x="172.8" y="1589" width="0.2" height="15.0" fill="rgb(221,177,28)" rx="2" ry="2" />
<text  x="175.80" y="1599.5" ></text>
</g>
<g >
<title>onmt::Tokenizer::tokenize_text (1,654 samples, 8.96%)</title><rect x="665.1" y="1893" width="105.7" height="15.0" fill="rgb(216,6,54)" rx="2" ry="2" />
<text  x="668.10" y="1903.5" >onmt::Tokeni..</text>
</g>
<g >
<title>get_unmapped_area (4 samples, 0.02%)</title><rect x="1107.0" y="1941" width="0.2" height="15.0" fill="rgb(212,41,31)" rx="2" ry="2" />
<text  x="1109.97" y="1951.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="84.5" y="1637" width="0.2" height="15.0" fill="rgb(219,94,21)" rx="2" ry="2" />
<text  x="87.53" y="1647.5" ></text>
</g>
<g >
<title>vm_area_dup (2 samples, 0.01%)</title><rect x="803.5" y="1877" width="0.1" height="15.0" fill="rgb(240,82,41)" rx="2" ry="2" />
<text  x="806.48" y="1887.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::create&lt;std::vector&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::allocator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::vector&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::allocator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; const&amp;&gt; (3 samples, 0.02%)</title><rect x="505.2" y="1877" width="0.2" height="15.0" fill="rgb(234,14,27)" rx="2" ry="2" />
<text  x="508.24" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1189.2" y="1381" width="0.4" height="15.0" fill="rgb(228,152,53)" rx="2" ry="2" />
<text  x="1192.17" y="1391.5" ></text>
</g>
<g >
<title>do_page_fault (19 samples, 0.10%)</title><rect x="52.3" y="2005" width="1.2" height="15.0" fill="rgb(245,113,36)" rx="2" ry="2" />
<text  x="55.25" y="2015.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (6 samples, 0.03%)</title><rect x="811.9" y="2005" width="0.3" height="15.0" fill="rgb(236,126,5)" rx="2" ry="2" />
<text  x="814.86" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (496 samples, 2.69%)</title><rect x="54.3" y="1733" width="31.7" height="15.0" fill="rgb(231,111,44)" rx="2" ry="2" />
<text  x="57.30" y="1743.5" >[u..</text>
</g>
<g >
<title>[libc-2.27.so] (2 samples, 0.01%)</title><rect x="465.8" y="1925" width="0.1" height="15.0" fill="rgb(222,130,7)" rx="2" ry="2" />
<text  x="468.80" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="185.7" y="1845" width="0.2" height="15.0" fill="rgb(205,58,44)" rx="2" ry="2" />
<text  x="188.71" y="1855.5" ></text>
</g>
<g >
<title>__pthread_once_slow (4,397 samples, 23.82%)</title><rect x="512.9" y="2037" width="281.1" height="15.0" fill="rgb(218,139,49)" rx="2" ry="2" />
<text  x="515.91" y="2047.5" >__pthread_once_slow</text>
</g>
<g >
<title>main (6,048 samples, 32.76%)</title><rect x="119.8" y="2021" width="386.6" height="15.0" fill="rgb(229,35,43)" rx="2" ry="2" />
<text  x="122.81" y="2031.5" >main</text>
</g>
<g >
<title>[unknown] (322 samples, 1.74%)</title><rect x="54.3" y="741" width="20.6" height="15.0" fill="rgb(237,55,2)" rx="2" ry="2" />
<text  x="57.30" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (73 samples, 0.40%)</title><rect x="198.1" y="1765" width="4.7" height="15.0" fill="rgb(216,25,49)" rx="2" ry="2" />
<text  x="201.11" y="1775.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (5 samples, 0.03%)</title><rect x="138.1" y="1589" width="0.3" height="15.0" fill="rgb(205,33,43)" rx="2" ry="2" />
<text  x="141.09" y="1599.5" ></text>
</g>
<g >
<title>__vm_munmap (2 samples, 0.01%)</title><rect x="84.4" y="1557" width="0.1" height="15.0" fill="rgb(245,29,24)" rx="2" ry="2" />
<text  x="87.40" y="1567.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (2 samples, 0.01%)</title><rect x="84.4" y="1445" width="0.1" height="15.0" fill="rgb(226,86,24)" rx="2" ry="2" />
<text  x="87.40" y="1455.5" ></text>
</g>
<g >
<title>lru_add_drain_cpu (2 samples, 0.01%)</title><rect x="803.7" y="1861" width="0.1" height="15.0" fill="rgb(252,66,15)" rx="2" ry="2" />
<text  x="806.68" y="1871.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (2 samples, 0.01%)</title><rect x="145.6" y="1637" width="0.2" height="15.0" fill="rgb(213,15,4)" rx="2" ry="2" />
<text  x="148.64" y="1647.5" ></text>
</g>
<g >
<title>memcpy@plt (3 samples, 0.02%)</title><rect x="1109.0" y="2053" width="0.1" height="15.0" fill="rgb(252,13,30)" rx="2" ry="2" />
<text  x="1111.95" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.9" y="1109" width="0.1" height="15.0" fill="rgb(228,24,7)" rx="2" ry="2" />
<text  x="1191.91" y="1119.5" ></text>
</g>
<g >
<title>tlb_flush_mmu_free (2 samples, 0.01%)</title><rect x="1107.4" y="1845" width="0.1" height="15.0" fill="rgb(223,59,21)" rx="2" ry="2" />
<text  x="1110.35" y="1855.5" ></text>
</g>
<g >
<title>__x64_sys_madvise (2 samples, 0.01%)</title><rect x="82.2" y="1461" width="0.2" height="15.0" fill="rgb(243,132,35)" rx="2" ry="2" />
<text  x="85.23" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1188.5" y="69" width="0.3" height="15.0" fill="rgb(224,126,34)" rx="2" ry="2" />
<text  x="1191.53" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (73 samples, 0.40%)</title><rect x="198.1" y="1749" width="4.7" height="15.0" fill="rgb(215,146,6)" rx="2" ry="2" />
<text  x="201.11" y="1759.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (28 samples, 0.15%)</title><rect x="1126.7" y="2037" width="1.8" height="15.0" fill="rgb(226,118,19)" rx="2" ry="2" />
<text  x="1129.72" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (321 samples, 1.74%)</title><rect x="54.3" y="597" width="20.5" height="15.0" fill="rgb(221,111,1)" rx="2" ry="2" />
<text  x="57.30" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="216.6" y="965" width="0.2" height="15.0" fill="rgb(220,0,46)" rx="2" ry="2" />
<text  x="219.65" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (430 samples, 2.33%)</title><rect x="130.2" y="1829" width="27.5" height="15.0" fill="rgb(227,147,41)" rx="2" ry="2" />
<text  x="133.23" y="1839.5" >s..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (436 samples, 2.36%)</title><rect x="130.2" y="1845" width="27.9" height="15.0" fill="rgb(206,133,33)" rx="2" ry="2" />
<text  x="133.23" y="1855.5" >s..</text>
</g>
<g >
<title>tlb_finish_mmu (2 samples, 0.01%)</title><rect x="79.4" y="1221" width="0.1" height="15.0" fill="rgb(236,159,54)" rx="2" ry="2" />
<text  x="82.42" y="1231.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; const*, std::vector&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::allocator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;*&gt; (2 samples, 0.01%)</title><rect x="505.1" y="1877" width="0.1" height="15.0" fill="rgb(244,212,30)" rx="2" ry="2" />
<text  x="508.11" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1189.2" y="1333" width="0.4" height="15.0" fill="rgb(241,68,15)" rx="2" ry="2" />
<text  x="1192.17" y="1343.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2 samples, 0.01%)</title><rect x="502.5" y="1861" width="0.1" height="15.0" fill="rgb(214,151,14)" rx="2" ry="2" />
<text  x="505.49" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 0.03%)</title><rect x="804.6" y="2021" width="0.4" height="15.0" fill="rgb(249,134,44)" rx="2" ry="2" />
<text  x="807.64" y="2031.5" ></text>
</g>
<g >
<title>alloc_pages_vma (9 samples, 0.05%)</title><rect x="727.0" y="1765" width="0.5" height="15.0" fill="rgb(245,9,8)" rx="2" ry="2" />
<text  x="729.97" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (414 samples, 2.24%)</title><rect x="54.3" y="1429" width="26.5" height="15.0" fill="rgb(231,42,20)" rx="2" ry="2" />
<text  x="57.30" y="1439.5" >[..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (343 samples, 1.86%)</title><rect x="130.2" y="1797" width="22.0" height="15.0" fill="rgb(220,131,47)" rx="2" ry="2" />
<text  x="133.23" y="1807.5" >s..</text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (6 samples, 0.03%)</title><rect x="151.3" y="1637" width="0.3" height="15.0" fill="rgb(251,2,48)" rx="2" ry="2" />
<text  x="154.26" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (27 samples, 0.15%)</title><rect x="810.1" y="2021" width="1.7" height="15.0" fill="rgb(206,152,18)" rx="2" ry="2" />
<text  x="813.07" y="2031.5" ></text>
</g>
<g >
<title>fasttext::ProductQuantizer::addcode (2 samples, 0.01%)</title><rect x="565.8" y="1909" width="0.1" height="15.0" fill="rgb(236,104,37)" rx="2" ry="2" />
<text  x="568.77" y="1919.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::do_tolower (3 samples, 0.02%)</title><rect x="214.2" y="1685" width="0.2" height="15.0" fill="rgb(243,211,3)" rx="2" ry="2" />
<text  x="217.22" y="1695.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (3 samples, 0.02%)</title><rect x="168.1" y="1573" width="0.2" height="15.0" fill="rgb(245,180,2)" rx="2" ry="2" />
<text  x="171.07" y="1583.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (2 samples, 0.01%)</title><rect x="87.5" y="1781" width="0.2" height="15.0" fill="rgb(221,84,35)" rx="2" ry="2" />
<text  x="90.53" y="1791.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (5 samples, 0.03%)</title><rect x="710.7" y="1765" width="0.3" height="15.0" fill="rgb(213,103,42)" rx="2" ry="2" />
<text  x="713.67" y="1775.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (2 samples, 0.01%)</title><rect x="503.5" y="1829" width="0.1" height="15.0" fill="rgb(232,192,6)" rx="2" ry="2" />
<text  x="506.51" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1188.4" y="565" width="0.4" height="15.0" fill="rgb(251,122,18)" rx="2" ry="2" />
<text  x="1191.40" y="575.5" ></text>
</g>
<g >
<title>__do_munmap (5 samples, 0.03%)</title><rect x="804.3" y="1957" width="0.3" height="15.0" fill="rgb(220,215,3)" rx="2" ry="2" />
<text  x="807.25" y="1967.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (5 samples, 0.03%)</title><rect x="133.5" y="1557" width="0.3" height="15.0" fill="rgb(228,154,46)" rx="2" ry="2" />
<text  x="136.49" y="1567.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (4 samples, 0.02%)</title><rect x="502.5" y="1957" width="0.2" height="15.0" fill="rgb(245,151,38)" rx="2" ry="2" />
<text  x="505.49" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="216.6" y="1141" width="0.2" height="15.0" fill="rgb(228,44,53)" rx="2" ry="2" />
<text  x="219.65" y="1151.5" ></text>
</g>
<g >
<title>__handle_mm_fault (8 samples, 0.04%)</title><rect x="53.8" y="1941" width="0.5" height="15.0" fill="rgb(212,161,49)" rx="2" ry="2" />
<text  x="56.78" y="1951.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::Unwind (5 samples, 0.03%)</title><rect x="150.0" y="1637" width="0.3" height="15.0" fill="rgb(234,154,6)" rx="2" ry="2" />
<text  x="152.98" y="1647.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (42 samples, 0.23%)</title><rect x="172.0" y="1605" width="2.7" height="15.0" fill="rgb(239,209,51)" rx="2" ry="2" />
<text  x="175.03" y="1615.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (3 samples, 0.02%)</title><rect x="327.6" y="1989" width="0.2" height="15.0" fill="rgb(245,152,33)" rx="2" ry="2" />
<text  x="330.61" y="1999.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;fasttext::Dictionary&gt;::construct&lt;fasttext::Dictionary, std::shared_ptr&lt;fasttext::Args&gt;&amp;, std::istream&amp;&gt; (32 samples, 0.17%)</title><rect x="500.4" y="1973" width="2.1" height="15.0" fill="rgb(225,45,42)" rx="2" ry="2" />
<text  x="503.45" y="1983.5" ></text>
</g>
<g >
<title>__lsan::LsanMetadata::allocated (5 samples, 0.03%)</title><rect x="507.7" y="2037" width="0.3" height="15.0" fill="rgb(207,80,13)" rx="2" ry="2" />
<text  x="510.67" y="2047.5" ></text>
</g>
<g >
<title>__pthread_getspecific (3 samples, 0.02%)</title><rect x="178.0" y="1621" width="0.2" height="15.0" fill="rgb(228,229,14)" rx="2" ry="2" />
<text  x="180.98" y="1631.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::Recycle (5 samples, 0.03%)</title><rect x="795.0" y="2037" width="0.4" height="15.0" fill="rgb(209,177,49)" rx="2" ry="2" />
<text  x="798.05" y="2047.5" ></text>
</g>
<g >
<title>__asan_memcpy (4 samples, 0.02%)</title><rect x="167.6" y="1573" width="0.2" height="15.0" fill="rgb(221,16,27)" rx="2" ry="2" />
<text  x="170.56" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (83 samples, 0.45%)</title><rect x="192.7" y="1669" width="5.3" height="15.0" fill="rgb(228,52,49)" rx="2" ry="2" />
<text  x="195.68" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.9" y="149" width="0.1" height="15.0" fill="rgb(248,90,49)" rx="2" ry="2" />
<text  x="1191.91" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (3 samples, 0.02%)</title><rect x="185.3" y="1781" width="0.2" height="15.0" fill="rgb(237,20,1)" rx="2" ry="2" />
<text  x="188.33" y="1791.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::readWord (79 samples, 0.43%)</title><rect x="528.1" y="1909" width="5.1" height="15.0" fill="rgb(234,143,25)" rx="2" ry="2" />
<text  x="531.12" y="1919.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::dump (4 samples, 0.02%)</title><rect x="504.4" y="2005" width="0.3" height="15.0" fill="rgb(215,124,10)" rx="2" ry="2" />
<text  x="507.41" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (322 samples, 1.74%)</title><rect x="54.3" y="693" width="20.6" height="15.0" fill="rgb(252,120,0)" rx="2" ry="2" />
<text  x="57.30" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="216.6" y="1477" width="0.2" height="15.0" fill="rgb(239,51,5)" rx="2" ry="2" />
<text  x="219.58" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (160 samples, 0.87%)</title><rect x="130.2" y="1765" width="10.3" height="15.0" fill="rgb(253,140,10)" rx="2" ry="2" />
<text  x="133.23" y="1775.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (13 samples, 0.07%)</title><rect x="1107.0" y="1973" width="0.8" height="15.0" fill="rgb(217,137,40)" rx="2" ry="2" />
<text  x="1109.97" y="1983.5" ></text>
</g>
<g >
<title>__do_page_fault (34 samples, 0.18%)</title><rect x="496.8" y="1925" width="2.2" height="15.0" fill="rgb(233,101,16)" rx="2" ry="2" />
<text  x="499.80" y="1935.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;std::__detail::_State&lt;char&gt; const*, std::__detail::_State&lt;char&gt;*&gt; (5 samples, 0.03%)</title><rect x="159.6" y="1637" width="0.4" height="15.0" fill="rgb(206,197,2)" rx="2" ry="2" />
<text  x="162.63" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="42.5" y="2021" width="0.1" height="15.0" fill="rgb(236,113,1)" rx="2" ry="2" />
<text  x="45.47" y="2031.5" ></text>
</g>
<g >
<title>fasttext::FastText::loadModel (53 samples, 0.29%)</title><rect x="500.4" y="1989" width="3.4" height="15.0" fill="rgb(240,134,8)" rx="2" ry="2" />
<text  x="503.45" y="1999.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (3 samples, 0.02%)</title><rect x="204.5" y="1637" width="0.2" height="15.0" fill="rgb(244,128,50)" rx="2" ry="2" />
<text  x="207.50" y="1647.5" ></text>
</g>
<g >
<title>fasttext::Vector::addRow (39 samples, 0.21%)</title><rect x="473.0" y="1941" width="2.5" height="15.0" fill="rgb(206,68,25)" rx="2" ry="2" />
<text  x="476.03" y="1951.5" ></text>
</g>
<g >
<title>nlohmann::detail::parser&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::sax_parse_internal&lt;nlohmann::detail::json_sax_dom_parser&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; (128 samples, 0.69%)</title><rect x="121.1" y="1957" width="8.2" height="15.0" fill="rgb(231,23,22)" rx="2" ry="2" />
<text  x="124.09" y="1967.5" ></text>
</g>
<g >
<title>release_pages (2 samples, 0.01%)</title><rect x="84.4" y="1429" width="0.1" height="15.0" fill="rgb(205,196,34)" rx="2" ry="2" />
<text  x="87.40" y="1439.5" ></text>
</g>
<g >
<title>page_fault (6 samples, 0.03%)</title><rect x="1018.6" y="2037" width="0.4" height="15.0" fill="rgb(214,92,12)" rx="2" ry="2" />
<text  x="1021.57" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1188.4" y="213" width="0.4" height="15.0" fill="rgb(220,116,43)" rx="2" ry="2" />
<text  x="1191.40" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (98 samples, 0.53%)</title><rect x="145.9" y="1781" width="6.3" height="15.0" fill="rgb(246,191,50)" rx="2" ry="2" />
<text  x="148.89" y="1791.5" ></text>
</g>
<g >
<title>__do_page_fault (89 samples, 0.48%)</title><rect x="21.7" y="2005" width="5.7" height="15.0" fill="rgb(233,148,3)" rx="2" ry="2" />
<text  x="24.70" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (12 samples, 0.07%)</title><rect x="158.3" y="1861" width="0.8" height="15.0" fill="rgb(228,78,26)" rx="2" ry="2" />
<text  x="161.29" y="1871.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.02%)</title><rect x="1122.4" y="2037" width="0.2" height="15.0" fill="rgb(231,151,30)" rx="2" ry="2" />
<text  x="1125.37" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="159.2" y="1749" width="0.1" height="15.0" fill="rgb(226,174,3)" rx="2" ry="2" />
<text  x="162.19" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1188.8" y="1781" width="0.2" height="15.0" fill="rgb(240,213,39)" rx="2" ry="2" />
<text  x="1191.85" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1189.2" y="1093" width="0.4" height="15.0" fill="rgb(225,168,35)" rx="2" ry="2" />
<text  x="1192.17" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.9" y="1237" width="0.1" height="15.0" fill="rgb(224,7,40)" rx="2" ry="2" />
<text  x="1191.91" y="1247.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (14 samples, 0.08%)</title><rect x="803.4" y="2021" width="0.9" height="15.0" fill="rgb(230,52,2)" rx="2" ry="2" />
<text  x="806.36" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1188.4" y="1525" width="0.4" height="15.0" fill="rgb(219,86,43)" rx="2" ry="2" />
<text  x="1191.40" y="1535.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (17 samples, 0.09%)</title><rect x="680.9" y="1877" width="1.1" height="15.0" fill="rgb(220,216,11)" rx="2" ry="2" />
<text  x="683.89" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1189.2" y="885" width="0.4" height="15.0" fill="rgb(251,11,29)" rx="2" ry="2" />
<text  x="1192.17" y="895.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (3 samples, 0.02%)</title><rect x="200.3" y="1605" width="0.2" height="15.0" fill="rgb(215,55,7)" rx="2" ry="2" />
<text  x="203.29" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (85 samples, 0.46%)</title><rect x="140.5" y="1717" width="5.4" height="15.0" fill="rgb(249,110,33)" rx="2" ry="2" />
<text  x="143.46" y="1727.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (5 samples, 0.03%)</title><rect x="1121.2" y="2037" width="0.3" height="15.0" fill="rgb(208,198,21)" rx="2" ry="2" />
<text  x="1124.22" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="216.9" y="1653" width="0.2" height="15.0" fill="rgb(246,201,40)" rx="2" ry="2" />
<text  x="219.90" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.3" y="2005" width="0.1" height="15.0" fill="rgb(247,65,5)" rx="2" ry="2" />
<text  x="1191.27" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (85 samples, 0.46%)</title><rect x="164.7" y="1621" width="5.4" height="15.0" fill="rgb(211,163,21)" rx="2" ry="2" />
<text  x="167.68" y="1631.5" ></text>
</g>
<g >
<title>try_charge (3 samples, 0.02%)</title><rect x="727.7" y="1733" width="0.2" height="15.0" fill="rgb(226,91,34)" rx="2" ry="2" />
<text  x="730.74" y="1743.5" ></text>
</g>
<g >
<title>__asan_memcpy (5 samples, 0.03%)</title><rect x="606.1" y="1893" width="0.3" height="15.0" fill="rgb(234,214,29)" rx="2" ry="2" />
<text  x="609.10" y="1903.5" ></text>
</g>
<g >
<title>Rank (883 samples, 4.78%)</title><rect x="129.8" y="2005" width="56.4" height="15.0" fill="rgb(222,38,3)" rx="2" ry="2" />
<text  x="132.78" y="2015.5" >Rank</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (398 samples, 2.16%)</title><rect x="159.6" y="1877" width="25.4" height="15.0" fill="rgb(248,144,3)" rx="2" ry="2" />
<text  x="162.57" y="1887.5" >s..</text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt;,  (5 samples, 0.03%)</title><rect x="185.6" y="1941" width="0.3" height="15.0" fill="rgb(223,30,44)" rx="2" ry="2" />
<text  x="188.58" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1189.2" y="645" width="0.4" height="15.0" fill="rgb(219,145,42)" rx="2" ry="2" />
<text  x="1192.17" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (91 samples, 0.49%)</title><rect x="164.5" y="1701" width="5.8" height="15.0" fill="rgb(235,96,0)" rx="2" ry="2" />
<text  x="167.49" y="1711.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::getSubwords (9 samples, 0.05%)</title><rect x="805.1" y="2037" width="0.6" height="15.0" fill="rgb(241,73,30)" rx="2" ry="2" />
<text  x="808.15" y="2047.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (2 samples, 0.01%)</title><rect x="210.8" y="1669" width="0.2" height="15.0" fill="rgb(224,219,43)" rx="2" ry="2" />
<text  x="213.83" y="1679.5" ></text>
</g>
<g >
<title>fasttext::Matrix::size (12 samples, 0.07%)</title><rect x="462.2" y="1925" width="0.8" height="15.0" fill="rgb(225,179,44)" rx="2" ry="2" />
<text  x="465.22" y="1935.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (2 samples, 0.01%)</title><rect x="88.6" y="1893" width="0.1" height="15.0" fill="rgb(224,52,41)" rx="2" ry="2" />
<text  x="91.62" y="1903.5" ></text>
</g>
<g >
<title>operator delete[] (57 samples, 0.31%)</title><rect x="1180.7" y="2037" width="3.6" height="15.0" fill="rgb(239,63,34)" rx="2" ry="2" />
<text  x="1183.67" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3 samples, 0.02%)</title><rect x="185.0" y="1829" width="0.2" height="15.0" fill="rgb(232,52,32)" rx="2" ry="2" />
<text  x="188.01" y="1839.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::_M_set_result (2 samples, 0.01%)</title><rect x="28.1" y="2005" width="0.1" height="15.0" fill="rgb(250,81,22)" rx="2" ry="2" />
<text  x="31.09" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1188.9" y="1605" width="0.1" height="15.0" fill="rgb(210,133,49)" rx="2" ry="2" />
<text  x="1191.91" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1188.4" y="1109" width="0.4" height="15.0" fill="rgb(219,24,44)" rx="2" ry="2" />
<text  x="1191.40" y="1119.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.03%)</title><rect x="881.1" y="2021" width="0.4" height="15.0" fill="rgb(249,19,24)" rx="2" ry="2" />
<text  x="884.15" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (440 samples, 2.38%)</title><rect x="54.3" y="1541" width="28.1" height="15.0" fill="rgb(245,119,42)" rx="2" ry="2" />
<text  x="57.30" y="1551.5" >[..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1188.4" y="309" width="0.4" height="15.0" fill="rgb(236,188,16)" rx="2" ry="2" />
<text  x="1191.40" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1188.4" y="933" width="0.4" height="15.0" fill="rgb(241,130,37)" rx="2" ry="2" />
<text  x="1191.40" y="943.5" ></text>
</g>
<g >
<title>page_add_new_anon_rmap (2 samples, 0.01%)</title><rect x="941.5" y="1925" width="0.2" height="15.0" fill="rgb(243,15,39)" rx="2" ry="2" />
<text  x="944.55" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1189.2" y="213" width="0.4" height="15.0" fill="rgb(213,119,0)" rx="2" ry="2" />
<text  x="1192.17" y="223.5" ></text>
</g>
<g >
<title>[unknown] (319 samples, 1.73%)</title><rect x="54.3" y="549" width="20.4" height="15.0" fill="rgb(250,25,4)" rx="2" ry="2" />
<text  x="57.30" y="559.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (4 samples, 0.02%)</title><rect x="1108.3" y="1877" width="0.3" height="15.0" fill="rgb(221,177,44)" rx="2" ry="2" />
<text  x="1111.31" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1189.2" y="1125" width="0.4" height="15.0" fill="rgb(245,6,24)" rx="2" ry="2" />
<text  x="1192.17" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1188.8" y="1829" width="0.2" height="15.0" fill="rgb(223,58,25)" rx="2" ry="2" />
<text  x="1191.85" y="1839.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (7 samples, 0.04%)</title><rect x="791.0" y="1893" width="0.5" height="15.0" fill="rgb(230,72,1)" rx="2" ry="2" />
<text  x="794.02" y="1903.5" ></text>
</g>
<g >
<title>std::__numpunct_cache&lt;char&gt;::~__numpunct_cache (2 samples, 0.01%)</title><rect x="877.2" y="2037" width="0.2" height="15.0" fill="rgb(232,160,35)" rx="2" ry="2" />
<text  x="880.25" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="876.5" y="2021" width="0.2" height="15.0" fill="rgb(216,59,47)" rx="2" ry="2" />
<text  x="879.54" y="2031.5" ></text>
</g>
<g >
<title>__asan_memcpy (3 samples, 0.02%)</title><rect x="162.2" y="1541" width="0.2" height="15.0" fill="rgb(219,115,20)" rx="2" ry="2" />
<text  x="165.19" y="1551.5" ></text>
</g>
<g >
<title>__dynamic_cast (4 samples, 0.02%)</title><rect x="170.9" y="1621" width="0.3" height="15.0" fill="rgb(231,96,30)" rx="2" ry="2" />
<text  x="173.95" y="1631.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.02%)</title><rect x="190.6" y="1557" width="0.2" height="15.0" fill="rgb(214,160,16)" rx="2" ry="2" />
<text  x="193.57" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="159.2" y="1829" width="0.1" height="15.0" fill="rgb(244,125,41)" rx="2" ry="2" />
<text  x="162.19" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (389 samples, 2.11%)</title><rect x="54.3" y="1333" width="24.9" height="15.0" fill="rgb(223,63,4)" rx="2" ry="2" />
<text  x="57.30" y="1343.5" >[..</text>
</g>
<g >
<title>ksys_read (3 samples, 0.02%)</title><rect x="1109.6" y="1973" width="0.2" height="15.0" fill="rgb(211,88,37)" rx="2" ry="2" />
<text  x="1112.59" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (241 samples, 1.31%)</title><rect x="159.6" y="1765" width="15.4" height="15.0" fill="rgb(220,22,25)" rx="2" ry="2" />
<text  x="162.63" y="1775.5" ></text>
</g>
<g >
<title>handle_mm_fault (20 samples, 0.11%)</title><rect x="487.2" y="1877" width="1.3" height="15.0" fill="rgb(215,171,8)" rx="2" ry="2" />
<text  x="490.22" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.9" y="1253" width="0.1" height="15.0" fill="rgb(213,88,14)" rx="2" ry="2" />
<text  x="1191.91" y="1263.5" ></text>
</g>
<g >
<title>__interceptor_memcmp (3 samples, 0.02%)</title><rect x="568.6" y="1909" width="0.2" height="15.0" fill="rgb(243,18,44)" rx="2" ry="2" />
<text  x="571.58" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_Compiler (468 samples, 2.54%)</title><rect x="186.5" y="1941" width="30.0" height="15.0" fill="rgb(220,19,52)" rx="2" ry="2" />
<text  x="189.54" y="1951.5" >st..</text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt; &gt;::_M_manager (6 samples, 0.03%)</title><rect x="811.9" y="2037" width="0.3" height="15.0" fill="rgb(236,109,28)" rx="2" ry="2" />
<text  x="814.86" y="2047.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (4 samples, 0.02%)</title><rect x="635.4" y="1861" width="0.3" height="15.0" fill="rgb(252,224,5)" rx="2" ry="2" />
<text  x="638.44" y="1871.5" ></text>
</g>
<g >
<title>fasttext::Vector::norm (20 samples, 0.11%)</title><rect x="482.2" y="1957" width="1.3" height="15.0" fill="rgb(224,86,6)" rx="2" ry="2" />
<text  x="485.23" y="1967.5" ></text>
</g>
<g >
<title>do_syscall_64 (17 samples, 0.09%)</title><rect x="508.9" y="2005" width="1.1" height="15.0" fill="rgb(215,34,12)" rx="2" ry="2" />
<text  x="511.88" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.9" y="1301" width="0.1" height="15.0" fill="rgb(244,72,34)" rx="2" ry="2" />
<text  x="1191.91" y="1311.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (3 samples, 0.02%)</title><rect x="727.7" y="1749" width="0.2" height="15.0" fill="rgb(212,89,6)" rx="2" ry="2" />
<text  x="730.74" y="1759.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (15 samples, 0.08%)</title><rect x="1106.9" y="2037" width="1.0" height="15.0" fill="rgb(237,213,13)" rx="2" ry="2" />
<text  x="1109.91" y="2047.5" ></text>
</g>
<g >
<title>handle_mm_fault (18 samples, 0.10%)</title><rect x="726.8" y="1797" width="1.1" height="15.0" fill="rgb(228,171,18)" rx="2" ry="2" />
<text  x="729.78" y="1807.5" ></text>
</g>
<g >
<title>__asan::Allocator::GetAsanChunkByAddrFastLocked (82 samples, 0.44%)</title><rect x="95.1" y="2037" width="5.3" height="15.0" fill="rgb(238,127,28)" rx="2" ry="2" />
<text  x="98.14" y="2047.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (3 samples, 0.02%)</title><rect x="77.6" y="1237" width="0.2" height="15.0" fill="rgb(216,131,6)" rx="2" ry="2" />
<text  x="80.63" y="1247.5" ></text>
</g>
<g >
<title>release_pages (2 samples, 0.01%)</title><rect x="90.6" y="1797" width="0.1" height="15.0" fill="rgb(251,120,30)" rx="2" ry="2" />
<text  x="93.60" y="1807.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt; &gt;::_M_manager (2 samples, 0.01%)</title><rect x="186.8" y="1637" width="0.1" height="15.0" fill="rgb(229,79,29)" rx="2" ry="2" />
<text  x="189.80" y="1647.5" ></text>
</g>
<g >
<title>__pthread_getspecific (2 samples, 0.01%)</title><rect x="212.4" y="1669" width="0.1" height="15.0" fill="rgb(250,32,32)" rx="2" ry="2" />
<text  x="215.37" y="1679.5" ></text>
</g>
<g >
<title>__asan_memcpy (15 samples, 0.08%)</title><rect x="683.3" y="1877" width="1.0" height="15.0" fill="rgb(220,178,44)" rx="2" ry="2" />
<text  x="686.32" y="1887.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (14 samples, 0.08%)</title><rect x="803.4" y="1957" width="0.9" height="15.0" fill="rgb(234,23,15)" rx="2" ry="2" />
<text  x="806.36" y="1967.5" ></text>
</g>
<g >
<title>__lsan::ResetTagsCb (2 samples, 0.01%)</title><rect x="508.7" y="2037" width="0.1" height="15.0" fill="rgb(244,182,5)" rx="2" ry="2" />
<text  x="511.69" y="2047.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append@plt (2 samples, 0.01%)</title><rect x="774.1" y="1893" width="0.2" height="15.0" fill="rgb(234,209,36)" rx="2" ry="2" />
<text  x="777.15" y="1903.5" ></text>
</g>
<g >
<title>clear_page_erms (7 samples, 0.04%)</title><rect x="487.6" y="1813" width="0.4" height="15.0" fill="rgb(226,206,6)" rx="2" ry="2" />
<text  x="490.60" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (6 samples, 0.03%)</title><rect x="152.2" y="1781" width="0.4" height="15.0" fill="rgb(244,199,12)" rx="2" ry="2" />
<text  x="155.22" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1188.4" y="1221" width="0.4" height="15.0" fill="rgb(211,52,23)" rx="2" ry="2" />
<text  x="1191.40" y="1231.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::pushHash (14 samples, 0.08%)</title><rect x="471.6" y="1909" width="0.9" height="15.0" fill="rgb(241,114,35)" rx="2" ry="2" />
<text  x="474.62" y="1919.5" ></text>
</g>
<g >
<title>up_read (2 samples, 0.01%)</title><rect x="943.9" y="1989" width="0.1" height="15.0" fill="rgb(207,77,0)" rx="2" ry="2" />
<text  x="946.91" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="216.6" y="1381" width="0.2" height="15.0" fill="rgb(241,73,37)" rx="2" ry="2" />
<text  x="219.58" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.02%)</title><rect x="216.6" y="1397" width="0.2" height="15.0" fill="rgb(254,43,1)" rx="2" ry="2" />
<text  x="219.58" y="1407.5" ></text>
</g>
<g >
<title>__asan_memset (8 samples, 0.04%)</title><rect x="684.3" y="1877" width="0.5" height="15.0" fill="rgb(208,73,47)" rx="2" ry="2" />
<text  x="687.28" y="1887.5" ></text>
</g>
<g >
<title>copy_page_to_iter (3 samples, 0.02%)</title><rect x="1109.6" y="1877" width="0.2" height="15.0" fill="rgb(211,162,2)" rx="2" ry="2" />
<text  x="1112.59" y="1887.5" ></text>
</g>
<g >
<title>do_page_fault (5 samples, 0.03%)</title><rect x="100.1" y="2005" width="0.3" height="15.0" fill="rgb(247,165,25)" rx="2" ry="2" />
<text  x="103.06" y="2015.5" ></text>
</g>
<g >
<title>__do_page_fault (27 samples, 0.15%)</title><rect x="726.2" y="1813" width="1.7" height="15.0" fill="rgb(235,110,44)" rx="2" ry="2" />
<text  x="729.21" y="1823.5" ></text>
</g>
<g >
<title>__do_page_fault (10 samples, 0.05%)</title><rect x="685.4" y="1829" width="0.6" height="15.0" fill="rgb(206,44,17)" rx="2" ry="2" />
<text  x="688.36" y="1839.5" ></text>
</g>
<g >
<title>__sanitizer::internal_memmove (24 samples, 0.13%)</title><rect x="312.4" y="1941" width="1.5" height="15.0" fill="rgb(253,181,27)" rx="2" ry="2" />
<text  x="315.40" y="1951.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (6 samples, 0.03%)</title><rect x="163.3" y="1541" width="0.4" height="15.0" fill="rgb(211,134,14)" rx="2" ry="2" />
<text  x="166.34" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1188.4" y="2021" width="0.4" height="15.0" fill="rgb(230,18,7)" rx="2" ry="2" />
<text  x="1191.40" y="2031.5" ></text>
</g>
<g >
<title>fasttext::Vector::addVector (36 samples, 0.20%)</title><rect x="322.2" y="1973" width="2.3" height="15.0" fill="rgb(206,49,31)" rx="2" ry="2" />
<text  x="325.18" y="1983.5" ></text>
</g>
<g >
<title>try_charge (3 samples, 0.02%)</title><rect x="941.4" y="1893" width="0.1" height="15.0" fill="rgb(221,147,39)" rx="2" ry="2" />
<text  x="944.36" y="1903.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (6 samples, 0.03%)</title><rect x="186.5" y="1669" width="0.4" height="15.0" fill="rgb(236,86,21)" rx="2" ry="2" />
<text  x="189.54" y="1679.5" ></text>
</g>
<g >
<title>unmap_page_range (2 samples, 0.01%)</title><rect x="1107.5" y="1861" width="0.1" height="15.0" fill="rgb(216,211,0)" rx="2" ry="2" />
<text  x="1110.48" y="1871.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (26 samples, 0.14%)</title><rect x="879.5" y="2005" width="1.6" height="15.0" fill="rgb(223,54,37)" rx="2" ry="2" />
<text  x="882.48" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1188.4" y="901" width="0.4" height="15.0" fill="rgb(225,76,10)" rx="2" ry="2" />
<text  x="1191.40" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (5 samples, 0.03%)</title><rect x="184.6" y="1813" width="0.3" height="15.0" fill="rgb(210,59,22)" rx="2" ry="2" />
<text  x="187.63" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1188.4" y="1189" width="0.4" height="15.0" fill="rgb(211,169,22)" rx="2" ry="2" />
<text  x="1191.40" y="1199.5" ></text>
</g>
<g >
<title>native_send_call_func_single_ipi (2 samples, 0.01%)</title><rect x="54.0" y="1765" width="0.2" height="15.0" fill="rgb(217,50,9)" rx="2" ry="2" />
<text  x="57.04" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1189.2" y="1237" width="0.4" height="15.0" fill="rgb(228,37,48)" rx="2" ry="2" />
<text  x="1192.17" y="1247.5" ></text>
</g>
<g >
<title>GetHost (483 samples, 2.62%)</title><rect x="186.4" y="1973" width="30.9" height="15.0" fill="rgb(250,216,39)" rx="2" ry="2" />
<text  x="189.42" y="1983.5" >Ge..</text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64LocalCache&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&gt; &gt;::Deallocate (2 samples, 0.01%)</title><rect x="82.8" y="1541" width="0.1" height="15.0" fill="rgb(254,131,48)" rx="2" ry="2" />
<text  x="85.80" y="1551.5" ></text>
</g>
<g >
<title>do_page_fault (89 samples, 0.48%)</title><rect x="21.7" y="2021" width="5.7" height="15.0" fill="rgb(214,121,9)" rx="2" ry="2" />
<text  x="24.70" y="2031.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="90.2" y="1973" width="0.1" height="15.0" fill="rgb(233,129,11)" rx="2" ry="2" />
<text  x="93.15" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_Compiler (409 samples, 2.22%)</title><rect x="159.4" y="1925" width="26.2" height="15.0" fill="rgb(239,150,26)" rx="2" ry="2" />
<text  x="162.44" y="1935.5" >s..</text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.01%)</title><rect x="462.1" y="1877" width="0.1" height="15.0" fill="rgb(245,40,16)" rx="2" ry="2" />
<text  x="465.10" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1188.4" y="245" width="0.4" height="15.0" fill="rgb(205,129,11)" rx="2" ry="2" />
<text  x="1191.40" y="255.5" ></text>
</g>
<g >
<title>page_fault (13 samples, 0.07%)</title><rect x="681.1" y="1861" width="0.9" height="15.0" fill="rgb(206,5,11)" rx="2" ry="2" />
<text  x="684.14" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.9" y="757" width="0.1" height="15.0" fill="rgb(211,115,45)" rx="2" ry="2" />
<text  x="1191.91" y="767.5" ></text>
</g>
<g >
<title>TFastTextEmbedder::GetSentenceEmbedding (1,702 samples, 9.22%)</title><rect x="217.5" y="1989" width="108.8" height="15.0" fill="rgb(229,118,24)" rx="2" ry="2" />
<text  x="220.48" y="1999.5" >TFastTextEmbe..</text>
</g>
<g >
<title>__do_munmap (6 samples, 0.03%)</title><rect x="1107.2" y="1925" width="0.4" height="15.0" fill="rgb(219,69,2)" rx="2" ry="2" />
<text  x="1110.23" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_BracketMatcher (5 samples, 0.03%)</title><rect x="159.6" y="1605" width="0.4" height="15.0" fill="rgb(227,107,8)" rx="2" ry="2" />
<text  x="162.63" y="1615.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (2 samples, 0.01%)</title><rect x="87.1" y="1813" width="0.2" height="15.0" fill="rgb(249,166,5)" rx="2" ry="2" />
<text  x="90.15" y="1823.5" ></text>
</g>
<g >
<title>onmt::unicode::is_letter (230 samples, 1.25%)</title><rect x="731.4" y="1861" width="14.7" height="15.0" fill="rgb(221,116,36)" rx="2" ry="2" />
<text  x="734.45" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1188.4" y="1477" width="0.4" height="15.0" fill="rgb(237,144,27)" rx="2" ry="2" />
<text  x="1191.40" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1189.1" y="1749" width="0.5" height="15.0" fill="rgb(231,146,0)" rx="2" ry="2" />
<text  x="1192.11" y="1759.5" ></text>
</g>
<g >
<title>__pthread_getspecific (2 samples, 0.01%)</title><rect x="155.5" y="1669" width="0.2" height="15.0" fill="rgb(249,129,54)" rx="2" ry="2" />
<text  x="158.54" y="1679.5" ></text>
</g>
<g >
<title>wp_page_copy (4 samples, 0.02%)</title><rect x="53.9" y="1909" width="0.3" height="15.0" fill="rgb(220,171,43)" rx="2" ry="2" />
<text  x="56.91" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.02%)</title><rect x="216.6" y="1349" width="0.2" height="15.0" fill="rgb(234,61,4)" rx="2" ry="2" />
<text  x="219.58" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (12 samples, 0.07%)</title><rect x="1188.3" y="2053" width="0.7" height="15.0" fill="rgb(238,4,43)" rx="2" ry="2" />
<text  x="1191.27" y="2063.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::basic_regex&lt;char const*&gt; (469 samples, 2.54%)</title><rect x="186.5" y="1957" width="30.0" height="15.0" fill="rgb(230,214,42)" rx="2" ry="2" />
<text  x="189.48" y="1967.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1188.4" y="1589" width="0.4" height="15.0" fill="rgb(246,116,6)" rx="2" ry="2" />
<text  x="1191.40" y="1599.5" ></text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.02%)</title><rect x="189.9" y="1557" width="0.2" height="15.0" fill="rgb(249,95,41)" rx="2" ry="2" />
<text  x="192.93" y="1567.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (3 samples, 0.02%)</title><rect x="76.8" y="1205" width="0.2" height="15.0" fill="rgb(249,196,6)" rx="2" ry="2" />
<text  x="79.79" y="1215.5" ></text>
</g>
<g >
<title>page_fault (19 samples, 0.10%)</title><rect x="52.3" y="2021" width="1.2" height="15.0" fill="rgb(213,65,45)" rx="2" ry="2" />
<text  x="55.25" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1189.2" y="85" width="0.4" height="15.0" fill="rgb(249,13,52)" rx="2" ry="2" />
<text  x="1192.23" y="95.5" ></text>
</g>
<g >
<title>__interceptor_strlen (81 samples, 0.44%)</title><rect x="785.6" y="1877" width="5.2" height="15.0" fill="rgb(243,71,35)" rx="2" ry="2" />
<text  x="788.59" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1188.4" y="1829" width="0.4" height="15.0" fill="rgb(250,210,16)" rx="2" ry="2" />
<text  x="1191.40" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1189.2" y="1045" width="0.4" height="15.0" fill="rgb(225,37,31)" rx="2" ry="2" />
<text  x="1192.17" y="1055.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (6 samples, 0.03%)</title><rect x="804.6" y="2005" width="0.4" height="15.0" fill="rgb(235,46,52)" rx="2" ry="2" />
<text  x="807.64" y="2015.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (5 samples, 0.03%)</title><rect x="321.5" y="1941" width="0.3" height="15.0" fill="rgb(239,78,54)" rx="2" ry="2" />
<text  x="324.48" y="1951.5" ></text>
</g>
<g >
<title>__asan::asan_memalign (2 samples, 0.01%)</title><rect x="162.1" y="1541" width="0.1" height="15.0" fill="rgb(224,211,37)" rx="2" ry="2" />
<text  x="165.06" y="1551.5" ></text>
</g>
<g >
<title>__interceptor_memcpy (30 samples, 0.16%)</title><rect x="1116.0" y="2037" width="2.0" height="15.0" fill="rgb(221,86,8)" rx="2" ry="2" />
<text  x="1119.05" y="2047.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;std::__detail::_State&lt;char&gt; const*, std::__detail::_State&lt;char&gt;*&gt; (5 samples, 0.03%)</title><rect x="186.6" y="1653" width="0.3" height="15.0" fill="rgb(235,166,9)" rx="2" ry="2" />
<text  x="189.61" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1189.2" y="1077" width="0.4" height="15.0" fill="rgb(219,145,19)" rx="2" ry="2" />
<text  x="1192.17" y="1087.5" ></text>
</g>
<g >
<title>Eigen::internal::product_evaluator&lt;Eigen::Product&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt;, 0&gt;, 8, Eigen::DenseShape, Eigen::DenseShape, float, float&gt;::product_evaluator (166 samples, 0.90%)</title><rect x="486.2" y="1957" width="10.6" height="15.0" fill="rgb(235,138,24)" rx="2" ry="2" />
<text  x="489.19" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1188.9" y="837" width="0.1" height="15.0" fill="rgb(214,156,4)" rx="2" ry="2" />
<text  x="1191.91" y="847.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (12 samples, 0.07%)</title><rect x="1158.0" y="2037" width="0.7" height="15.0" fill="rgb(250,159,40)" rx="2" ry="2" />
<text  x="1160.98" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (2 samples, 0.01%)</title><rect x="215.9" y="1813" width="0.1" height="15.0" fill="rgb(249,129,37)" rx="2" ry="2" />
<text  x="218.88" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.9" y="853" width="0.1" height="15.0" fill="rgb(238,71,29)" rx="2" ry="2" />
<text  x="1191.91" y="863.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::reserve (47 samples, 0.25%)</title><rect x="646.7" y="1861" width="3.0" height="15.0" fill="rgb(207,111,37)" rx="2" ry="2" />
<text  x="649.69" y="1871.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::Unwind (2 samples, 0.01%)</title><rect x="205.5" y="1637" width="0.1" height="15.0" fill="rgb(216,128,52)" rx="2" ry="2" />
<text  x="208.46" y="1647.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (4 samples, 0.02%)</title><rect x="800.9" y="1941" width="0.2" height="15.0" fill="rgb(243,51,28)" rx="2" ry="2" />
<text  x="803.86" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_quantifier (2 samples, 0.01%)</title><rect x="207.4" y="1733" width="0.1" height="15.0" fill="rgb(209,93,18)" rx="2" ry="2" />
<text  x="210.38" y="1743.5" ></text>
</g>
<g >
<title>__do_munmap (3 samples, 0.02%)</title><rect x="79.4" y="1253" width="0.2" height="15.0" fill="rgb(239,54,39)" rx="2" ry="2" />
<text  x="82.42" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1188.4" y="1845" width="0.4" height="15.0" fill="rgb(237,14,10)" rx="2" ry="2" />
<text  x="1191.40" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1188.9" y="789" width="0.1" height="15.0" fill="rgb(220,68,20)" rx="2" ry="2" />
<text  x="1191.91" y="799.5" ></text>
</g>
<g >
<title>clear_page_erms (3 samples, 0.02%)</title><rect x="939.6" y="1893" width="0.2" height="15.0" fill="rgb(240,29,50)" rx="2" ry="2" />
<text  x="942.57" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1188.4" y="1813" width="0.4" height="15.0" fill="rgb(228,134,49)" rx="2" ry="2" />
<text  x="1191.40" y="1823.5" ></text>
</g>
<g >
<title>__sanitizer::BlockingMutex::Unlock (7 samples, 0.04%)</title><rect x="69.4" y="37" width="0.4" height="15.0" fill="rgb(238,15,3)" rx="2" ry="2" />
<text  x="72.38" y="47.5" ></text>
</g>
<g >
<title>fasttext::Vector::mul (21 samples, 0.11%)</title><rect x="480.9" y="1957" width="1.3" height="15.0" fill="rgb(228,100,37)" rx="2" ry="2" />
<text  x="483.89" y="1967.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (5 samples, 0.03%)</title><rect x="78.3" y="1285" width="0.3" height="15.0" fill="rgb(252,209,13)" rx="2" ry="2" />
<text  x="81.33" y="1295.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.02%)</title><rect x="1109.6" y="2021" width="0.2" height="15.0" fill="rgb(234,228,19)" rx="2" ry="2" />
<text  x="1112.59" y="2031.5" ></text>
</g>
<g >
<title>GetHost (415 samples, 2.25%)</title><rect x="159.4" y="1957" width="26.5" height="15.0" fill="rgb(229,186,53)" rx="2" ry="2" />
<text  x="162.38" y="1967.5" >G..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (67 samples, 0.36%)</title><rect x="136.0" y="1685" width="4.3" height="15.0" fill="rgb(209,119,2)" rx="2" ry="2" />
<text  x="138.98" y="1695.5" ></text>
</g>
<g >
<title>native_send_call_func_single_ipi (17 samples, 0.09%)</title><rect x="942.6" y="1797" width="1.1" height="15.0" fill="rgb(231,79,27)" rx="2" ry="2" />
<text  x="945.57" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1189.2" y="373" width="0.4" height="15.0" fill="rgb(234,95,20)" rx="2" ry="2" />
<text  x="1192.17" y="383.5" ></text>
</g>
<g >
<title>all (18,461 samples, 100%)</title><rect x="10.0" y="2085" width="1180.0" height="15.0" fill="rgb(239,79,18)" rx="2" ry="2" />
<text  x="13.00" y="2095.5" ></text>
</g>
<g >
<title>release_pages (2 samples, 0.01%)</title><rect x="1107.4" y="1813" width="0.1" height="15.0" fill="rgb(250,88,44)" rx="2" ry="2" />
<text  x="1110.35" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.9" y="805" width="0.1" height="15.0" fill="rgb(206,17,40)" rx="2" ry="2" />
<text  x="1191.91" y="815.5" ></text>
</g>
<g >
<title>__handle_mm_fault (10 samples, 0.05%)</title><rect x="710.4" y="1781" width="0.6" height="15.0" fill="rgb(214,123,24)" rx="2" ry="2" />
<text  x="713.36" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.9" y="1157" width="0.1" height="15.0" fill="rgb(228,9,51)" rx="2" ry="2" />
<text  x="1191.91" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (85 samples, 0.46%)</title><rect x="140.5" y="1701" width="5.4" height="15.0" fill="rgb(226,125,27)" rx="2" ry="2" />
<text  x="143.46" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1189.2" y="1717" width="0.4" height="15.0" fill="rgb(253,176,50)" rx="2" ry="2" />
<text  x="1192.17" y="1727.5" ></text>
</g>
<g >
<title>__asan::asan_memalign (2 samples, 0.01%)</title><rect x="1121.1" y="2037" width="0.1" height="15.0" fill="rgb(212,27,10)" rx="2" ry="2" />
<text  x="1124.10" y="2047.5" ></text>
</g>
<g >
<title>onmt::ITokenizer::tokenize (3,016 samples, 16.34%)</title><rect x="600.0" y="1941" width="192.7" height="15.0" fill="rgb(235,134,4)" rx="2" ry="2" />
<text  x="602.97" y="1951.5" >onmt::ITokenizer::tokenize</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (2 samples, 0.01%)</title><rect x="164.3" y="1685" width="0.1" height="15.0" fill="rgb(253,160,52)" rx="2" ry="2" />
<text  x="167.30" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="877.2" y="2021" width="0.2" height="15.0" fill="rgb(251,104,18)" rx="2" ry="2" />
<text  x="880.25" y="2031.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::computeSubwords (16 samples, 0.09%)</title><rect x="500.8" y="1909" width="1.1" height="15.0" fill="rgb(208,44,33)" rx="2" ry="2" />
<text  x="503.83" y="1919.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="86.4" y="1765" width="0.2" height="15.0" fill="rgb(213,99,16)" rx="2" ry="2" />
<text  x="89.45" y="1775.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (2 samples, 0.01%)</title><rect x="84.4" y="1477" width="0.1" height="15.0" fill="rgb(208,201,21)" rx="2" ry="2" />
<text  x="87.40" y="1487.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (6 samples, 0.03%)</title><rect x="589.2" y="1893" width="0.3" height="15.0" fill="rgb(211,220,23)" rx="2" ry="2" />
<text  x="592.17" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="216.6" y="869" width="0.2" height="15.0" fill="rgb(234,23,43)" rx="2" ry="2" />
<text  x="219.65" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (70 samples, 0.38%)</title><rect x="180.1" y="1781" width="4.5" height="15.0" fill="rgb(220,68,16)" rx="2" ry="2" />
<text  x="183.09" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (384 samples, 2.08%)</title><rect x="54.3" y="1317" width="24.5" height="15.0" fill="rgb(209,21,35)" rx="2" ry="2" />
<text  x="57.30" y="1327.5" >[..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (76 samples, 0.41%)</title><rect x="159.6" y="1717" width="4.9" height="15.0" fill="rgb(246,49,29)" rx="2" ry="2" />
<text  x="162.63" y="1727.5" ></text>
</g>
<g >
<title>Eigen::internal::gemv_dense_selector&lt;2, 1, true&gt;::run&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; &gt; (307 samples, 1.66%)</title><rect x="224.0" y="1957" width="19.6" height="15.0" fill="rgb(250,220,9)" rx="2" ry="2" />
<text  x="227.00" y="1967.5" ></text>
</g>
<g >
<title>tlb_flush_mmu_free (4 samples, 0.02%)</title><rect x="804.3" y="1877" width="0.3" height="15.0" fill="rgb(243,221,15)" rx="2" ry="2" />
<text  x="807.32" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.9" y="821" width="0.1" height="15.0" fill="rgb(244,166,27)" rx="2" ry="2" />
<text  x="1191.91" y="831.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;TDocument, std::allocator&lt;TDocument&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;TDocument, std::allocator&lt;TDocument&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;TDocument, std::allocator&lt;TDocument&gt; &gt; &gt; &gt; &gt;::_M_erase (2 samples, 0.01%)</title><rect x="505.6" y="2005" width="0.2" height="15.0" fill="rgb(230,152,45)" rx="2" ry="2" />
<text  x="508.62" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.05%)</title><rect x="216.5" y="1893" width="0.7" height="15.0" fill="rgb(232,169,15)" rx="2" ry="2" />
<text  x="219.52" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.9" y="373" width="0.1" height="15.0" fill="rgb(212,183,46)" rx="2" ry="2" />
<text  x="1191.91" y="383.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.01%)</title><rect x="792.7" y="1941" width="0.2" height="15.0" fill="rgb(220,213,35)" rx="2" ry="2" />
<text  x="795.75" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (2 samples, 0.01%)</title><rect x="215.9" y="1797" width="0.1" height="15.0" fill="rgb(235,218,50)" rx="2" ry="2" />
<text  x="218.88" y="1807.5" ></text>
</g>
<g >
<title>tlb_flush_mmu_free (9 samples, 0.05%)</title><rect x="509.2" y="1909" width="0.6" height="15.0" fill="rgb(242,154,7)" rx="2" ry="2" />
<text  x="512.20" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (7 samples, 0.04%)</title><rect x="158.3" y="1829" width="0.4" height="15.0" fill="rgb(241,93,46)" rx="2" ry="2" />
<text  x="161.29" y="1839.5" ></text>
</g>
<g >
<title>__asan::Allocator::Deallocate (5 samples, 0.03%)</title><rect x="132.9" y="1557" width="0.3" height="15.0" fill="rgb(219,113,46)" rx="2" ry="2" />
<text  x="135.85" y="1567.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (8 samples, 0.04%)</title><rect x="609.7" y="1877" width="0.6" height="15.0" fill="rgb(227,63,51)" rx="2" ry="2" />
<text  x="612.75" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (75 samples, 0.41%)</title><rect x="175.0" y="1733" width="4.8" height="15.0" fill="rgb(228,221,5)" rx="2" ry="2" />
<text  x="178.04" y="1743.5" ></text>
</g>
<g >
<title>native_send_call_func_single_ipi (2 samples, 0.01%)</title><rect x="1107.2" y="1733" width="0.2" height="15.0" fill="rgb(249,176,9)" rx="2" ry="2" />
<text  x="1110.23" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1188.4" y="693" width="0.4" height="15.0" fill="rgb(241,182,27)" rx="2" ry="2" />
<text  x="1191.40" y="703.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (45 samples, 0.24%)</title><rect x="188.8" y="1573" width="2.9" height="15.0" fill="rgb(226,81,50)" rx="2" ry="2" />
<text  x="191.78" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (316 samples, 1.71%)</title><rect x="54.3" y="197" width="20.2" height="15.0" fill="rgb(247,153,42)" rx="2" ry="2" />
<text  x="57.30" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.9" y="37" width="0.1" height="15.0" fill="rgb(239,151,11)" rx="2" ry="2" />
<text  x="1191.91" y="47.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (72 samples, 0.39%)</title><rect x="141.0" y="1637" width="4.6" height="15.0" fill="rgb(205,103,6)" rx="2" ry="2" />
<text  x="143.97" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1189.2" y="869" width="0.4" height="15.0" fill="rgb(215,187,38)" rx="2" ry="2" />
<text  x="1192.17" y="879.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (2 samples, 0.01%)</title><rect x="79.4" y="1189" width="0.1" height="15.0" fill="rgb(216,140,54)" rx="2" ry="2" />
<text  x="82.42" y="1199.5" ></text>
</g>
<g >
<title>wp_page_copy (14 samples, 0.08%)</title><rect x="52.6" y="1925" width="0.9" height="15.0" fill="rgb(251,102,4)" rx="2" ry="2" />
<text  x="55.57" y="1935.5" ></text>
</g>
<g >
<title>flush_tlb_mm_range (2 samples, 0.01%)</title><rect x="54.0" y="1877" width="0.2" height="15.0" fill="rgb(247,194,54)" rx="2" ry="2" />
<text  x="57.04" y="1887.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (2 samples, 0.01%)</title><rect x="1120.6" y="2037" width="0.1" height="15.0" fill="rgb(206,213,3)" rx="2" ry="2" />
<text  x="1123.58" y="2047.5" ></text>
</g>
<g >
<title>arch_tlb_finish_mmu (13 samples, 0.07%)</title><rect x="508.9" y="1941" width="0.9" height="15.0" fill="rgb(250,183,18)" rx="2" ry="2" />
<text  x="511.95" y="1951.5" ></text>
</g>
<g >
<title>__pthread_getspecific (3 samples, 0.02%)</title><rect x="195.8" y="1589" width="0.2" height="15.0" fill="rgb(207,82,7)" rx="2" ry="2" />
<text  x="198.81" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (2 samples, 0.01%)</title><rect x="185.1" y="1781" width="0.1" height="15.0" fill="rgb(226,125,52)" rx="2" ry="2" />
<text  x="188.07" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (344 samples, 1.86%)</title><rect x="54.3" y="1173" width="22.0" height="15.0" fill="rgb(228,174,26)" rx="2" ry="2" />
<text  x="57.30" y="1183.5" >[..</text>
</g>
<g >
<title>[unknown] (536 samples, 2.90%)</title><rect x="54.3" y="1893" width="34.3" height="15.0" fill="rgb(210,84,8)" rx="2" ry="2" />
<text  x="57.30" y="1903.5" >[u..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.05%)</title><rect x="216.5" y="1797" width="0.7" height="15.0" fill="rgb(240,108,5)" rx="2" ry="2" />
<text  x="219.52" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (449 samples, 2.43%)</title><rect x="186.5" y="1877" width="28.7" height="15.0" fill="rgb(215,78,44)" rx="2" ry="2" />
<text  x="189.54" y="1887.5" >st..</text>
</g>
<g >
<title>Eigen::internal::general_matrix_vector_product&lt;long, float, Eigen::internal::const_blas_data_mapper&lt;float, long, 1&gt;, 1, false, float, Eigen::internal::const_blas_data_mapper&lt;float, long, 0&gt;, false, 0&gt;::run (335 samples, 1.81%)</title><rect x="374.1" y="1925" width="21.5" height="15.0" fill="rgb(223,124,42)" rx="2" ry="2" />
<text  x="377.14" y="1935.5" >E..</text>
</g>
<g >
<title>nlohmann::operator&gt;&gt; (128 samples, 0.69%)</title><rect x="121.1" y="1989" width="8.2" height="15.0" fill="rgb(243,201,41)" rx="2" ry="2" />
<text  x="124.09" y="1999.5" ></text>
</g>
<g >
<title>Eigen::DenseCoeffsBase&lt;Eigen::Transpose&lt;Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_sum_op&lt;float, float&gt;, Eigen::Product&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0&gt; const, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const&gt;, 0&gt;::coeff (320 samples, 1.73%)</title><rect x="223.4" y="1973" width="20.4" height="15.0" fill="rgb(205,54,52)" rx="2" ry="2" />
<text  x="226.36" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (316 samples, 1.71%)</title><rect x="54.3" y="277" width="20.2" height="15.0" fill="rgb(209,87,8)" rx="2" ry="2" />
<text  x="57.30" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1188.4" y="821" width="0.4" height="15.0" fill="rgb(224,122,42)" rx="2" ry="2" />
<text  x="1191.40" y="831.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (82 samples, 0.44%)</title><rect x="1159.2" y="2037" width="5.2" height="15.0" fill="rgb(211,109,24)" rx="2" ry="2" />
<text  x="1162.19" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (2 samples, 0.01%)</title><rect x="216.0" y="1845" width="0.1" height="15.0" fill="rgb(235,68,22)" rx="2" ry="2" />
<text  x="219.01" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (2 samples, 0.01%)</title><rect x="185.1" y="1813" width="0.1" height="15.0" fill="rgb(207,132,36)" rx="2" ry="2" />
<text  x="188.07" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1188.5" y="197" width="0.3" height="15.0" fill="rgb(244,111,1)" rx="2" ry="2" />
<text  x="1191.47" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (13 samples, 0.07%)</title><rect x="158.3" y="1893" width="0.8" height="15.0" fill="rgb(223,144,32)" rx="2" ry="2" />
<text  x="161.29" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="216.9" y="1685" width="0.2" height="15.0" fill="rgb(230,96,4)" rx="2" ry="2" />
<text  x="219.90" y="1695.5" ></text>
</g>
<g >
<title>fasttext::HierarchicalSoftmaxLoss::predict (5 samples, 0.03%)</title><rect x="590.8" y="1909" width="0.3" height="15.0" fill="rgb(241,190,31)" rx="2" ry="2" />
<text  x="593.83" y="1919.5" ></text>
</g>
<g >
<title>memcpy (2 samples, 0.01%)</title><rect x="646.6" y="1845" width="0.1" height="15.0" fill="rgb(246,0,35)" rx="2" ry="2" />
<text  x="649.56" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (2 samples, 0.01%)</title><rect x="184.7" y="1733" width="0.1" height="15.0" fill="rgb(210,150,7)" rx="2" ry="2" />
<text  x="187.69" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="216.6" y="1061" width="0.2" height="15.0" fill="rgb(213,155,24)" rx="2" ry="2" />
<text  x="219.65" y="1071.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (5 samples, 0.03%)</title><rect x="804.3" y="1989" width="0.3" height="15.0" fill="rgb(225,217,2)" rx="2" ry="2" />
<text  x="807.25" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="185.8" y="1461" width="0.1" height="15.0" fill="rgb(224,219,49)" rx="2" ry="2" />
<text  x="188.78" y="1471.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (20 samples, 0.11%)</title><rect x="878.1" y="2005" width="1.3" height="15.0" fill="rgb(214,182,5)" rx="2" ry="2" />
<text  x="881.14" y="2015.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (2 samples, 0.01%)</title><rect x="812.9" y="2005" width="0.1" height="15.0" fill="rgb(243,16,28)" rx="2" ry="2" />
<text  x="815.88" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="216.6" y="1269" width="0.2" height="15.0" fill="rgb(227,207,21)" rx="2" ry="2" />
<text  x="219.58" y="1279.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (4 samples, 0.02%)</title><rect x="92.3" y="2021" width="0.2" height="15.0" fill="rgb(228,140,29)" rx="2" ry="2" />
<text  x="95.26" y="2031.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (35 samples, 0.19%)</title><rect x="1122.6" y="2053" width="2.3" height="15.0" fill="rgb(213,121,22)" rx="2" ry="2" />
<text  x="1125.63" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (91 samples, 0.49%)</title><rect x="164.5" y="1717" width="5.8" height="15.0" fill="rgb(209,211,50)" rx="2" ry="2" />
<text  x="167.49" y="1727.5" ></text>
</g>
<g >
<title>handle_mm_fault (2 samples, 0.01%)</title><rect x="1104.5" y="1989" width="0.2" height="15.0" fill="rgb(243,138,23)" rx="2" ry="2" />
<text  x="1107.54" y="1999.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="79.2" y="1333" width="0.1" height="15.0" fill="rgb(221,119,34)" rx="2" ry="2" />
<text  x="82.16" y="1343.5" ></text>
</g>
<g >
<title>__pthread_getspecific (32 samples, 0.17%)</title><rect x="1174.3" y="2037" width="2.0" height="15.0" fill="rgb(240,127,30)" rx="2" ry="2" />
<text  x="1177.28" y="2047.5" ></text>
</g>
<g >
<title>flush_tlb_mm_range (2 samples, 0.01%)</title><rect x="1107.2" y="1845" width="0.2" height="15.0" fill="rgb(215,141,23)" rx="2" ry="2" />
<text  x="1110.23" y="1855.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (49 samples, 0.27%)</title><rect x="806.8" y="2005" width="3.1" height="15.0" fill="rgb(254,200,49)" rx="2" ry="2" />
<text  x="809.81" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="216.6" y="805" width="0.2" height="15.0" fill="rgb(250,210,8)" rx="2" ry="2" />
<text  x="219.65" y="815.5" ></text>
</g>
<g >
<title>[unknown] (321 samples, 1.74%)</title><rect x="54.3" y="645" width="20.5" height="15.0" fill="rgb(249,121,3)" rx="2" ry="2" />
<text  x="57.30" y="655.5" ></text>
</g>
<g >
<title>__sanitizer::internal_munmap (2 samples, 0.01%)</title><rect x="87.5" y="1829" width="0.2" height="15.0" fill="rgb(220,93,25)" rx="2" ry="2" />
<text  x="90.53" y="1839.5" ></text>
</g>
<g >
<title>__asan::GetMallocContextSize (3 samples, 0.02%)</title><rect x="620.9" y="1877" width="0.2" height="15.0" fill="rgb(237,167,36)" rx="2" ry="2" />
<text  x="623.87" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (74 samples, 0.40%)</title><rect x="175.0" y="1669" width="4.8" height="15.0" fill="rgb(247,10,25)" rx="2" ry="2" />
<text  x="178.04" y="1679.5" ></text>
</g>
<g >
<title>__interceptor_memcpy (9 samples, 0.05%)</title><rect x="1124.1" y="2037" width="0.6" height="15.0" fill="rgb(217,114,17)" rx="2" ry="2" />
<text  x="1127.10" y="2047.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.01%)</title><rect x="472.5" y="1925" width="0.1" height="15.0" fill="rgb(227,38,52)" rx="2" ry="2" />
<text  x="475.51" y="1935.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::readWord (15 samples, 0.08%)</title><rect x="589.8" y="1909" width="1.0" height="15.0" fill="rgb(219,146,51)" rx="2" ry="2" />
<text  x="592.80" y="1919.5" ></text>
</g>
<g >
<title>__asan_memcpy (17 samples, 0.09%)</title><rect x="724.9" y="1845" width="1.1" height="15.0" fill="rgb(244,65,11)" rx="2" ry="2" />
<text  x="727.93" y="1855.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (20 samples, 0.11%)</title><rect x="112.4" y="2037" width="1.3" height="15.0" fill="rgb(239,135,8)" rx="2" ry="2" />
<text  x="115.40" y="2047.5" ></text>
</g>
<g >
<title>fasttext::Vector::zero (7 samples, 0.04%)</title><rect x="476.9" y="1941" width="0.4" height="15.0" fill="rgb(232,12,9)" rx="2" ry="2" />
<text  x="479.86" y="1951.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::_Bind&lt;Annotate (4,393 samples, 23.80%)</title><rect x="513.2" y="1989" width="280.8" height="15.0" fill="rgb(217,219,42)" rx="2" ry="2" />
<text  x="516.17" y="1999.5" >std::__invoke&lt;std::_Bind&lt;Annotate</text>
</g>
<g >
<title>std::vector&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::allocator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;::vector (3 samples, 0.02%)</title><rect x="505.2" y="1861" width="0.2" height="15.0" fill="rgb(246,176,38)" rx="2" ry="2" />
<text  x="508.24" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (4 samples, 0.02%)</title><rect x="184.6" y="1781" width="0.3" height="15.0" fill="rgb(210,30,10)" rx="2" ry="2" />
<text  x="187.63" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (64 samples, 0.35%)</title><rect x="203.1" y="1669" width="4.1" height="15.0" fill="rgb(205,216,32)" rx="2" ry="2" />
<text  x="206.10" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (67 samples, 0.36%)</title><rect x="153.4" y="1701" width="4.3" height="15.0" fill="rgb(230,169,26)" rx="2" ry="2" />
<text  x="156.37" y="1711.5" ></text>
</g>
<g >
<title>page_fault (3 samples, 0.02%)</title><rect x="1022.9" y="2037" width="0.2" height="15.0" fill="rgb(219,69,38)" rx="2" ry="2" />
<text  x="1025.92" y="2047.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::json_value::destroy (2 samples, 0.01%)</title><rect x="120.9" y="1989" width="0.1" height="15.0" fill="rgb(216,218,31)" rx="2" ry="2" />
<text  x="123.90" y="1999.5" ></text>
</g>
<g >
<title>__dynamic_cast (4 samples, 0.02%)</title><rect x="146.2" y="1669" width="0.3" height="15.0" fill="rgb(244,133,37)" rx="2" ry="2" />
<text  x="149.21" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (485 samples, 2.63%)</title><rect x="54.3" y="1685" width="31.0" height="15.0" fill="rgb(244,11,15)" rx="2" ry="2" />
<text  x="57.30" y="1695.5" >[u..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1189.2" y="581" width="0.4" height="15.0" fill="rgb(213,216,19)" rx="2" ry="2" />
<text  x="1192.17" y="591.5" ></text>
</g>
<g >
<title>__asan::asan_memalign (3 samples, 0.02%)</title><rect x="648.0" y="1845" width="0.2" height="15.0" fill="rgb(224,148,11)" rx="2" ry="2" />
<text  x="651.03" y="1855.5" ></text>
</g>
<g >
<title>__dynamic_cast (8 samples, 0.04%)</title><rect x="208.7" y="1701" width="0.5" height="15.0" fill="rgb(252,202,21)" rx="2" ry="2" />
<text  x="211.72" y="1711.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="80.1" y="1381" width="0.1" height="15.0" fill="rgb(238,66,15)" rx="2" ry="2" />
<text  x="83.05" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1188.4" y="437" width="0.4" height="15.0" fill="rgb(252,48,28)" rx="2" ry="2" />
<text  x="1191.40" y="447.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (7 samples, 0.04%)</title><rect x="169.7" y="1605" width="0.4" height="15.0" fill="rgb(205,68,8)" rx="2" ry="2" />
<text  x="172.67" y="1615.5" ></text>
</g>
<g >
<title>__asan::PoisonShadow (49 samples, 0.27%)</title><rect x="115.9" y="2037" width="3.1" height="15.0" fill="rgb(223,177,5)" rx="2" ry="2" />
<text  x="118.91" y="2047.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64LocalCache&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&gt; &gt;::Deallocate (50 samples, 0.27%)</title><rect x="71.2" y="37" width="3.2" height="15.0" fill="rgb(211,112,6)" rx="2" ry="2" />
<text  x="74.17" y="47.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (4 samples, 0.02%)</title><rect x="201.9" y="1605" width="0.3" height="15.0" fill="rgb(214,96,45)" rx="2" ry="2" />
<text  x="204.95" y="1615.5" ></text>
</g>
<g >
<title>uncharge_page (2 samples, 0.01%)</title><rect x="1108.4" y="1829" width="0.2" height="15.0" fill="rgb(219,160,0)" rx="2" ry="2" />
<text  x="1111.44" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1188.4" y="1349" width="0.4" height="15.0" fill="rgb(215,19,48)" rx="2" ry="2" />
<text  x="1191.40" y="1359.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::basic_json (3 samples, 0.02%)</title><rect x="505.2" y="1829" width="0.2" height="15.0" fill="rgb(228,123,26)" rx="2" ry="2" />
<text  x="508.24" y="1839.5" ></text>
</g>
<g >
<title>onmt::unicode::get_case (9 samples, 0.05%)</title><rect x="771.1" y="1893" width="0.6" height="15.0" fill="rgb(211,14,26)" rx="2" ry="2" />
<text  x="774.08" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1188.4" y="1637" width="0.4" height="15.0" fill="rgb(233,194,10)" rx="2" ry="2" />
<text  x="1191.40" y="1647.5" ></text>
</g>
<g >
<title>unmap_page_range (2 samples, 0.01%)</title><rect x="509.8" y="1941" width="0.1" height="15.0" fill="rgb(244,51,47)" rx="2" ry="2" />
<text  x="512.78" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1189.2" y="1445" width="0.4" height="15.0" fill="rgb(238,219,15)" rx="2" ry="2" />
<text  x="1192.17" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (83 samples, 0.45%)</title><rect x="187.2" y="1605" width="5.3" height="15.0" fill="rgb(210,175,48)" rx="2" ry="2" />
<text  x="190.18" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.9" y="565" width="0.1" height="15.0" fill="rgb(212,42,38)" rx="2" ry="2" />
<text  x="1191.91" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (2 samples, 0.01%)</title><rect x="140.3" y="1717" width="0.1" height="15.0" fill="rgb(233,67,47)" rx="2" ry="2" />
<text  x="143.27" y="1727.5" ></text>
</g>
<g >
<title>handle_mm_fault (10 samples, 0.05%)</title><rect x="710.4" y="1797" width="0.6" height="15.0" fill="rgb(205,102,27)" rx="2" ry="2" />
<text  x="713.36" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1188.9" y="405" width="0.1" height="15.0" fill="rgb(252,186,46)" rx="2" ry="2" />
<text  x="1191.91" y="415.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (5 samples, 0.03%)</title><rect x="488.1" y="1829" width="0.3" height="15.0" fill="rgb(247,62,12)" rx="2" ry="2" />
<text  x="491.11" y="1839.5" ></text>
</g>
<g >
<title>__vfs_read (3 samples, 0.02%)</title><rect x="1109.6" y="1941" width="0.2" height="15.0" fill="rgb(221,144,42)" rx="2" ry="2" />
<text  x="1112.59" y="1951.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (55 samples, 0.30%)</title><rect x="176.1" y="1637" width="3.5" height="15.0" fill="rgb(227,54,20)" rx="2" ry="2" />
<text  x="179.12" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (2 samples, 0.01%)</title><rect x="158.8" y="1813" width="0.1" height="15.0" fill="rgb(251,59,47)" rx="2" ry="2" />
<text  x="161.80" y="1823.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (2 samples, 0.01%)</title><rect x="151.1" y="1637" width="0.2" height="15.0" fill="rgb(222,123,50)" rx="2" ry="2" />
<text  x="154.13" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (407 samples, 2.20%)</title><rect x="54.3" y="1397" width="26.0" height="15.0" fill="rgb(237,59,17)" rx="2" ry="2" />
<text  x="57.30" y="1407.5" >[..</text>
</g>
<g >
<title>arch_tlb_finish_mmu (2 samples, 0.01%)</title><rect x="79.4" y="1205" width="0.1" height="15.0" fill="rgb(216,19,47)" rx="2" ry="2" />
<text  x="82.42" y="1215.5" ></text>
</g>
<g >
<title>__do_page_fault (3 samples, 0.02%)</title><rect x="1022.9" y="2005" width="0.2" height="15.0" fill="rgb(222,134,41)" rx="2" ry="2" />
<text  x="1025.92" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (333 samples, 1.80%)</title><rect x="186.5" y="1813" width="21.3" height="15.0" fill="rgb(245,73,3)" rx="2" ry="2" />
<text  x="189.54" y="1823.5" >s..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (4 samples, 0.02%)</title><rect x="207.6" y="1781" width="0.2" height="15.0" fill="rgb(246,42,24)" rx="2" ry="2" />
<text  x="210.57" y="1791.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (2 samples, 0.01%)</title><rect x="626.4" y="1861" width="0.2" height="15.0" fill="rgb(231,113,30)" rx="2" ry="2" />
<text  x="629.43" y="1871.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::create&lt;std::vector&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::allocator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, nlohmann::detail::json_ref&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; const*, nlohmann::detail::json_ref&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; const*&gt; (2 samples, 0.01%)</title><rect x="503.9" y="1989" width="0.1" height="15.0" fill="rgb(226,24,28)" rx="2" ry="2" />
<text  x="506.90" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.9" y="421" width="0.1" height="15.0" fill="rgb(239,117,41)" rx="2" ry="2" />
<text  x="1191.91" y="431.5" ></text>
</g>
<g >
<title>tlb_flush_mmu_free (2 samples, 0.01%)</title><rect x="84.4" y="1461" width="0.1" height="15.0" fill="rgb(219,143,16)" rx="2" ry="2" />
<text  x="87.40" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (398 samples, 2.16%)</title><rect x="159.6" y="1845" width="25.4" height="15.0" fill="rgb(237,98,48)" rx="2" ry="2" />
<text  x="162.57" y="1855.5" >s..</text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (2 samples, 0.01%)</title><rect x="812.2" y="2005" width="0.2" height="15.0" fill="rgb(232,141,22)" rx="2" ry="2" />
<text  x="815.24" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1189.2" y="1317" width="0.4" height="15.0" fill="rgb(206,128,52)" rx="2" ry="2" />
<text  x="1192.17" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.04%)</title><rect x="1189.0" y="1941" width="0.6" height="15.0" fill="rgb(219,81,20)" rx="2" ry="2" />
<text  x="1192.04" y="1951.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::Unwind (13 samples, 0.07%)</title><rect x="624.4" y="1877" width="0.8" height="15.0" fill="rgb(250,21,23)" rx="2" ry="2" />
<text  x="627.38" y="1887.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (2 samples, 0.01%)</title><rect x="90.6" y="1941" width="0.1" height="15.0" fill="rgb(234,113,49)" rx="2" ry="2" />
<text  x="93.60" y="1951.5" ></text>
</g>
<g >
<title>__pthread_getspecific (3 samples, 0.02%)</title><rect x="149.7" y="1637" width="0.2" height="15.0" fill="rgb(252,165,45)" rx="2" ry="2" />
<text  x="152.66" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (75 samples, 0.41%)</title><rect x="175.0" y="1749" width="4.8" height="15.0" fill="rgb(215,158,22)" rx="2" ry="2" />
<text  x="178.04" y="1759.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.01%)</title><rect x="203.0" y="1669" width="0.1" height="15.0" fill="rgb(244,45,16)" rx="2" ry="2" />
<text  x="205.97" y="1679.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (3 samples, 0.02%)</title><rect x="477.1" y="1925" width="0.1" height="15.0" fill="rgb(222,6,41)" rx="2" ry="2" />
<text  x="480.05" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1188.4" y="1205" width="0.4" height="15.0" fill="rgb(231,43,49)" rx="2" ry="2" />
<text  x="1191.40" y="1215.5" ></text>
</g>
<g >
<title>memcpy (3 samples, 0.02%)</title><rect x="625.9" y="1877" width="0.2" height="15.0" fill="rgb(232,6,1)" rx="2" ry="2" />
<text  x="628.92" y="1887.5" ></text>
</g>
<g >
<title>unmap_region (3 samples, 0.02%)</title><rect x="79.4" y="1237" width="0.2" height="15.0" fill="rgb(209,156,11)" rx="2" ry="2" />
<text  x="82.42" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1188.4" y="1285" width="0.4" height="15.0" fill="rgb(254,197,20)" rx="2" ry="2" />
<text  x="1191.40" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="185.8" y="1541" width="0.1" height="15.0" fill="rgb(247,179,0)" rx="2" ry="2" />
<text  x="188.78" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="159.2" y="1765" width="0.1" height="15.0" fill="rgb(215,116,16)" rx="2" ry="2" />
<text  x="162.19" y="1775.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (53 samples, 0.29%)</title><rect x="194.1" y="1605" width="3.4" height="15.0" fill="rgb(232,70,34)" rx="2" ry="2" />
<text  x="197.15" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (73 samples, 0.40%)</title><rect x="198.1" y="1701" width="4.7" height="15.0" fill="rgb(217,119,42)" rx="2" ry="2" />
<text  x="201.11" y="1711.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (2 samples, 0.01%)</title><rect x="197.3" y="1589" width="0.1" height="15.0" fill="rgb(213,188,28)" rx="2" ry="2" />
<text  x="200.28" y="1599.5" ></text>
</g>
<g >
<title>alloc_pages_vma (6 samples, 0.03%)</title><rect x="681.5" y="1781" width="0.3" height="15.0" fill="rgb(228,214,32)" rx="2" ry="2" />
<text  x="684.46" y="1791.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (2 samples, 0.01%)</title><rect x="800.7" y="1925" width="0.1" height="15.0" fill="rgb(233,89,39)" rx="2" ry="2" />
<text  x="803.67" y="1935.5" ></text>
</g>
<g >
<title>__asan::AsanThread::stack_bottom (3 samples, 0.02%)</title><rect x="647.8" y="1845" width="0.2" height="15.0" fill="rgb(218,171,37)" rx="2" ry="2" />
<text  x="650.84" y="1855.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2 samples, 0.01%)</title><rect x="24.0" y="1957" width="0.1" height="15.0" fill="rgb(245,195,1)" rx="2" ry="2" />
<text  x="27.00" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (6 samples, 0.03%)</title><rect x="215.5" y="1829" width="0.4" height="15.0" fill="rgb(207,143,51)" rx="2" ry="2" />
<text  x="218.50" y="1839.5" ></text>
</g>
<g >
<title>do_page_fault (114 samples, 0.62%)</title><rect x="936.8" y="2021" width="7.2" height="15.0" fill="rgb(219,120,33)" rx="2" ry="2" />
<text  x="939.75" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (96 samples, 0.52%)</title><rect x="186.5" y="1733" width="6.2" height="15.0" fill="rgb(238,128,16)" rx="2" ry="2" />
<text  x="189.54" y="1743.5" ></text>
</g>
<g >
<title>unmap_region (2 samples, 0.01%)</title><rect x="84.4" y="1525" width="0.1" height="15.0" fill="rgb(251,5,17)" rx="2" ry="2" />
<text  x="87.40" y="1535.5" ></text>
</g>
<g >
<title>__pthread_getspecific (4 samples, 0.02%)</title><rect x="143.7" y="1605" width="0.2" height="15.0" fill="rgb(206,12,9)" rx="2" ry="2" />
<text  x="146.65" y="1615.5" ></text>
</g>
<g >
<title>Eigen::PlainObjectBase&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; &gt;::resize (5 samples, 0.03%)</title><rect x="42.1" y="2037" width="0.3" height="15.0" fill="rgb(220,87,18)" rx="2" ry="2" />
<text  x="45.09" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.03%)</title><rect x="42.1" y="2021" width="0.3" height="15.0" fill="rgb(240,3,31)" rx="2" ry="2" />
<text  x="45.09" y="2031.5" ></text>
</g>
<g >
<title>onmt::is_alphabet (52 samples, 0.28%)</title><rect x="686.9" y="1877" width="3.3" height="15.0" fill="rgb(230,58,41)" rx="2" ry="2" />
<text  x="689.90" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (83 samples, 0.45%)</title><rect x="192.7" y="1653" width="5.3" height="15.0" fill="rgb(205,6,33)" rx="2" ry="2" />
<text  x="195.68" y="1663.5" ></text>
</g>
<g >
<title>handle_mm_fault (59 samples, 0.32%)</title><rect x="23.6" y="1989" width="3.8" height="15.0" fill="rgb(232,127,52)" rx="2" ry="2" />
<text  x="26.61" y="1999.5" ></text>
</g>
<g >
<title>__dynamic_cast (5 samples, 0.03%)</title><rect x="200.8" y="1605" width="0.3" height="15.0" fill="rgb(249,11,54)" rx="2" ry="2" />
<text  x="203.80" y="1615.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (50 samples, 0.27%)</title><rect x="154.3" y="1685" width="3.2" height="15.0" fill="rgb(214,1,2)" rx="2" ry="2" />
<text  x="157.26" y="1695.5" ></text>
</g>
<g >
<title>onmt::CaseModifier::extract_case_type (851 samples, 4.61%)</title><rect x="610.7" y="1893" width="54.4" height="15.0" fill="rgb(209,13,15)" rx="2" ry="2" />
<text  x="613.71" y="1903.5" >onmt:..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.04%)</title><rect x="1189.0" y="2021" width="0.6" height="15.0" fill="rgb(235,38,47)" rx="2" ry="2" />
<text  x="1192.04" y="2031.5" ></text>
</g>
<g >
<title>fasttext::FastText::getDimension (5 samples, 0.03%)</title><rect x="499.2" y="1973" width="0.3" height="15.0" fill="rgb(213,202,34)" rx="2" ry="2" />
<text  x="502.17" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.9" y="1045" width="0.1" height="15.0" fill="rgb(239,75,31)" rx="2" ry="2" />
<text  x="1191.91" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (2 samples, 0.01%)</title><rect x="170.1" y="1621" width="0.1" height="15.0" fill="rgb(223,225,22)" rx="2" ry="2" />
<text  x="173.12" y="1631.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.02%)</title><rect x="134.8" y="1557" width="0.3" height="15.0" fill="rgb(213,2,20)" rx="2" ry="2" />
<text  x="137.83" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (473 samples, 2.56%)</title><rect x="54.3" y="1637" width="30.2" height="15.0" fill="rgb(253,181,14)" rx="2" ry="2" />
<text  x="57.30" y="1647.5" >[u..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (97 samples, 0.53%)</title><rect x="146.0" y="1749" width="6.2" height="15.0" fill="rgb(249,218,18)" rx="2" ry="2" />
<text  x="148.95" y="1759.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (43 samples, 0.23%)</title><rect x="161.0" y="1557" width="2.8" height="15.0" fill="rgb(251,117,35)" rx="2" ry="2" />
<text  x="164.04" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="216.6" y="981" width="0.2" height="15.0" fill="rgb(253,97,5)" rx="2" ry="2" />
<text  x="219.65" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.9" y="1717" width="0.1" height="15.0" fill="rgb(205,69,46)" rx="2" ry="2" />
<text  x="1191.91" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="216.5" y="1573" width="0.3" height="15.0" fill="rgb(248,214,27)" rx="2" ry="2" />
<text  x="219.52" y="1583.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.02%)</title><rect x="212.7" y="1669" width="0.2" height="15.0" fill="rgb(237,185,25)" rx="2" ry="2" />
<text  x="215.69" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (82 samples, 0.44%)</title><rect x="130.7" y="1621" width="5.3" height="15.0" fill="rgb(231,29,43)" rx="2" ry="2" />
<text  x="133.74" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (4 samples, 0.02%)</title><rect x="179.8" y="1749" width="0.3" height="15.0" fill="rgb(210,19,1)" rx="2" ry="2" />
<text  x="182.83" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.9" y="181" width="0.1" height="15.0" fill="rgb(224,124,19)" rx="2" ry="2" />
<text  x="1191.91" y="191.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (2 samples, 0.01%)</title><rect x="588.5" y="1845" width="0.1" height="15.0" fill="rgb(241,65,14)" rx="2" ry="2" />
<text  x="591.46" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1188.4" y="853" width="0.4" height="15.0" fill="rgb(220,16,11)" rx="2" ry="2" />
<text  x="1191.40" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1189.2" y="1301" width="0.4" height="15.0" fill="rgb(216,160,3)" rx="2" ry="2" />
<text  x="1192.17" y="1311.5" ></text>
</g>
<g >
<title>TDocument::TDocument (11 samples, 0.06%)</title><rect x="120.1" y="1989" width="0.7" height="15.0" fill="rgb(219,215,42)" rx="2" ry="2" />
<text  x="123.13" y="1999.5" ></text>
</g>
<g >
<title>__interceptor_strcmp (10 samples, 0.05%)</title><rect x="41.4" y="2037" width="0.6" height="15.0" fill="rgb(214,227,40)" rx="2" ry="2" />
<text  x="44.38" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1188.4" y="1749" width="0.4" height="15.0" fill="rgb(232,67,51)" rx="2" ry="2" />
<text  x="1191.40" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="216.5" y="1525" width="0.3" height="15.0" fill="rgb(217,205,1)" rx="2" ry="2" />
<text  x="219.52" y="1535.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (3 samples, 0.02%)</title><rect x="192.3" y="1589" width="0.2" height="15.0" fill="rgb(248,0,9)" rx="2" ry="2" />
<text  x="195.30" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (322 samples, 1.74%)</title><rect x="54.3" y="757" width="20.6" height="15.0" fill="rgb(246,126,43)" rx="2" ry="2" />
<text  x="57.30" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="216.6" y="1429" width="0.2" height="15.0" fill="rgb(246,154,4)" rx="2" ry="2" />
<text  x="219.58" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (110 samples, 0.60%)</title><rect x="208.0" y="1717" width="7.0" height="15.0" fill="rgb(207,153,54)" rx="2" ry="2" />
<text  x="210.96" y="1727.5" ></text>
</g>
<g >
<title>__asan_memcpy (5 samples, 0.03%)</title><rect x="622.2" y="1877" width="0.3" height="15.0" fill="rgb(205,191,7)" rx="2" ry="2" />
<text  x="625.21" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (510 samples, 2.76%)</title><rect x="54.3" y="1797" width="32.6" height="15.0" fill="rgb(240,138,48)" rx="2" ry="2" />
<text  x="57.30" y="1807.5" >[u..</text>
</g>
<g >
<title>__asan::Allocator::Allocate (978 samples, 5.30%)</title><rect x="881.5" y="2053" width="62.5" height="15.0" fill="rgb(236,194,2)" rx="2" ry="2" />
<text  x="884.53" y="2063.5" >__asan..</text>
</g>
<g >
<title>onmt::AnnotatedToken::str[abi:cxx11] (2 samples, 0.01%)</title><rect x="600.6" y="1909" width="0.1" height="15.0" fill="rgb(234,135,26)" rx="2" ry="2" />
<text  x="603.61" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1189.2" y="789" width="0.4" height="15.0" fill="rgb(206,48,36)" rx="2" ry="2" />
<text  x="1192.17" y="799.5" ></text>
</g>
<g >
<title>__madvise (2 samples, 0.01%)</title><rect x="82.2" y="1509" width="0.2" height="15.0" fill="rgb(244,91,23)" rx="2" ry="2" />
<text  x="85.23" y="1519.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (80 samples, 0.43%)</title><rect x="780.5" y="1877" width="5.1" height="15.0" fill="rgb(245,62,25)" rx="2" ry="2" />
<text  x="783.47" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (78 samples, 0.42%)</title><rect x="130.9" y="1605" width="5.0" height="15.0" fill="rgb(240,124,10)" rx="2" ry="2" />
<text  x="133.87" y="1615.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_Alloc_node&gt; (2 samples, 0.01%)</title><rect x="505.1" y="1957" width="0.1" height="15.0" fill="rgb(232,174,52)" rx="2" ry="2" />
<text  x="508.11" y="1967.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (17 samples, 0.09%)</title><rect x="508.9" y="2021" width="1.1" height="15.0" fill="rgb(229,98,18)" rx="2" ry="2" />
<text  x="511.88" y="2031.5" ></text>
</g>
<g >
<title>__asan::Allocator::Deallocate (3 samples, 0.02%)</title><rect x="137.4" y="1589" width="0.2" height="15.0" fill="rgb(206,148,46)" rx="2" ry="2" />
<text  x="140.39" y="1599.5" ></text>
</g>
<g >
<title>page_fault (27 samples, 0.15%)</title><rect x="726.2" y="1845" width="1.7" height="15.0" fill="rgb(250,46,49)" rx="2" ry="2" />
<text  x="729.21" y="1855.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_Alloc_node&gt; (3 samples, 0.02%)</title><rect x="505.2" y="1941" width="0.2" height="15.0" fill="rgb(235,167,50)" rx="2" ry="2" />
<text  x="508.24" y="1951.5" ></text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::scan_string (112 samples, 0.61%)</title><rect x="121.9" y="1941" width="7.1" height="15.0" fill="rgb(221,113,44)" rx="2" ry="2" />
<text  x="124.86" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (5 samples, 0.03%)</title><rect x="158.4" y="1797" width="0.3" height="15.0" fill="rgb(240,200,11)" rx="2" ry="2" />
<text  x="161.42" y="1807.5" ></text>
</g>
<g >
<title>__asan::AsanThread::stack_top (2 samples, 0.01%)</title><rect x="172.5" y="1589" width="0.2" height="15.0" fill="rgb(229,218,48)" rx="2" ry="2" />
<text  x="175.54" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="216.6" y="1189" width="0.2" height="15.0" fill="rgb(221,153,19)" rx="2" ry="2" />
<text  x="219.58" y="1199.5" ></text>
</g>
<g >
<title>generic_file_read_iter (2 samples, 0.01%)</title><rect x="119.7" y="1893" width="0.1" height="15.0" fill="rgb(215,32,53)" rx="2" ry="2" />
<text  x="122.68" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (56 samples, 0.30%)</title><rect x="160.3" y="1573" width="3.6" height="15.0" fill="rgb(215,82,3)" rx="2" ry="2" />
<text  x="163.34" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (392 samples, 2.12%)</title><rect x="159.6" y="1813" width="25.0" height="15.0" fill="rgb(219,74,34)" rx="2" ry="2" />
<text  x="162.57" y="1823.5" >s..</text>
</g>
<g >
<title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (5 samples, 0.03%)</title><rect x="625.2" y="1877" width="0.3" height="15.0" fill="rgb(227,74,25)" rx="2" ry="2" />
<text  x="628.22" y="1887.5" ></text>
</g>
<g >
<title>clear_page_erms (2 samples, 0.01%)</title><rect x="52.7" y="1877" width="0.1" height="15.0" fill="rgb(217,190,36)" rx="2" ry="2" />
<text  x="55.70" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (455 samples, 2.46%)</title><rect x="54.3" y="1573" width="29.1" height="15.0" fill="rgb(243,192,6)" rx="2" ry="2" />
<text  x="57.30" y="1583.5" >[u..</text>
</g>
<g >
<title>[unknown] (331 samples, 1.79%)</title><rect x="54.3" y="1013" width="21.2" height="15.0" fill="rgb(240,103,46)" rx="2" ry="2" />
<text  x="57.30" y="1023.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (13 samples, 0.07%)</title><rect x="508.9" y="1925" width="0.9" height="15.0" fill="rgb(231,189,26)" rx="2" ry="2" />
<text  x="511.95" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1189.1" y="1845" width="0.5" height="15.0" fill="rgb(245,67,35)" rx="2" ry="2" />
<text  x="1192.11" y="1855.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (13 samples, 0.07%)</title><rect x="1107.0" y="2005" width="0.8" height="15.0" fill="rgb(234,68,32)" rx="2" ry="2" />
<text  x="1109.97" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (11 samples, 0.06%)</title><rect x="215.4" y="1877" width="0.7" height="15.0" fill="rgb(223,73,29)" rx="2" ry="2" />
<text  x="218.43" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (74 samples, 0.40%)</title><rect x="175.0" y="1685" width="4.8" height="15.0" fill="rgb(205,63,39)" rx="2" ry="2" />
<text  x="178.04" y="1695.5" ></text>
</g>
<g >
<title>do_syscall_64 (6 samples, 0.03%)</title><rect x="1108.2" y="2037" width="0.4" height="15.0" fill="rgb(249,86,49)" rx="2" ry="2" />
<text  x="1111.18" y="2047.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (74 samples, 0.40%)</title><rect x="766.0" y="1877" width="4.7" height="15.0" fill="rgb(252,119,52)" rx="2" ry="2" />
<text  x="768.96" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1188.4" y="805" width="0.4" height="15.0" fill="rgb(230,83,18)" rx="2" ry="2" />
<text  x="1191.40" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.9" y="581" width="0.1" height="15.0" fill="rgb(223,183,5)" rx="2" ry="2" />
<text  x="1191.91" y="591.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (2 samples, 0.01%)</title><rect x="81.5" y="1429" width="0.2" height="15.0" fill="rgb(240,36,46)" rx="2" ry="2" />
<text  x="84.52" y="1439.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (2 samples, 0.01%)</title><rect x="82.7" y="1541" width="0.1" height="15.0" fill="rgb(208,22,31)" rx="2" ry="2" />
<text  x="85.68" y="1551.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (2 samples, 0.01%)</title><rect x="200.2" y="1605" width="0.1" height="15.0" fill="rgb(247,144,12)" rx="2" ry="2" />
<text  x="203.16" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (70 samples, 0.38%)</title><rect x="170.5" y="1701" width="4.5" height="15.0" fill="rgb(252,188,48)" rx="2" ry="2" />
<text  x="173.50" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1188.4" y="981" width="0.4" height="15.0" fill="rgb(254,26,6)" rx="2" ry="2" />
<text  x="1191.40" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.9" y="293" width="0.1" height="15.0" fill="rgb(243,93,8)" rx="2" ry="2" />
<text  x="1191.91" y="303.5" ></text>
</g>
<g >
<title>[unknown] (522 samples, 2.83%)</title><rect x="54.3" y="1845" width="33.4" height="15.0" fill="rgb(211,92,20)" rx="2" ry="2" />
<text  x="57.30" y="1855.5" >[u..</text>
</g>
<g >
<title>[unknown] (323 samples, 1.75%)</title><rect x="54.3" y="773" width="20.6" height="15.0" fill="rgb(239,216,30)" rx="2" ry="2" />
<text  x="57.30" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.05%)</title><rect x="216.5" y="1877" width="0.7" height="15.0" fill="rgb(214,6,47)" rx="2" ry="2" />
<text  x="219.52" y="1887.5" ></text>
</g>
<g >
<title>onmt::unicode::is_number (12 samples, 0.07%)</title><rect x="759.2" y="1877" width="0.8" height="15.0" fill="rgb(235,55,4)" rx="2" ry="2" />
<text  x="762.19" y="1887.5" ></text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.02%)</title><rect x="142.1" y="1621" width="0.1" height="15.0" fill="rgb(222,206,7)" rx="2" ry="2" />
<text  x="145.06" y="1631.5" ></text>
</g>
<g >
<title>std::__stable_sort_adaptive&lt;__gnu_cxx::__normal_iterator&lt;TDocument*, std::vector&lt;TDocument, std::allocator&lt;TDocument&gt; &gt; &gt;, TDocument*, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;main::$_1&gt; &gt; (6 samples, 0.03%)</title><rect x="505.9" y="2005" width="0.4" height="15.0" fill="rgb(213,74,23)" rx="2" ry="2" />
<text  x="508.88" y="2015.5" ></text>
</g>
<g >
<title>__dynamic_cast (5 samples, 0.03%)</title><rect x="212.0" y="1669" width="0.4" height="15.0" fill="rgb(232,212,37)" rx="2" ry="2" />
<text  x="215.05" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.9" y="229" width="0.1" height="15.0" fill="rgb(207,16,32)" rx="2" ry="2" />
<text  x="1191.91" y="239.5" ></text>
</g>
<g >
<title>[unknown] (324 samples, 1.76%)</title><rect x="54.3" y="837" width="20.7" height="15.0" fill="rgb(248,122,2)" rx="2" ry="2" />
<text  x="57.30" y="847.5" ></text>
</g>
<g >
<title>fasttext::FastText::predict (512 samples, 2.77%)</title><rect x="533.3" y="1925" width="32.7" height="15.0" fill="rgb(246,161,51)" rx="2" ry="2" />
<text  x="536.30" y="1935.5" >fa..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1188.8" y="2037" width="0.2" height="15.0" fill="rgb(250,213,6)" rx="2" ry="2" />
<text  x="1191.85" y="2047.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (2 samples, 0.01%)</title><rect x="53.1" y="1909" width="0.1" height="15.0" fill="rgb(225,229,35)" rx="2" ry="2" />
<text  x="56.08" y="1919.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (2 samples, 0.01%)</title><rect x="803.7" y="1845" width="0.1" height="15.0" fill="rgb(249,149,47)" rx="2" ry="2" />
<text  x="806.68" y="1855.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.04%)</title><rect x="156.2" y="1669" width="0.4" height="15.0" fill="rgb(215,84,2)" rx="2" ry="2" />
<text  x="159.18" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (73 samples, 0.40%)</title><rect x="198.1" y="1653" width="4.7" height="15.0" fill="rgb(242,168,52)" rx="2" ry="2" />
<text  x="201.11" y="1663.5" ></text>
</g>
<g >
<title>__dynamic_cast (5 samples, 0.03%)</title><rect x="164.9" y="1605" width="0.4" height="15.0" fill="rgb(250,28,8)" rx="2" ry="2" />
<text  x="167.94" y="1615.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.02%)</title><rect x="150.6" y="1637" width="0.2" height="15.0" fill="rgb(247,153,48)" rx="2" ry="2" />
<text  x="153.62" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (329 samples, 1.78%)</title><rect x="186.5" y="1797" width="21.1" height="15.0" fill="rgb(221,141,15)" rx="2" ry="2" />
<text  x="189.54" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.03%)</title><rect x="802.9" y="2005" width="0.3" height="15.0" fill="rgb(249,159,23)" rx="2" ry="2" />
<text  x="805.91" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1188.9" y="885" width="0.1" height="15.0" fill="rgb(218,191,13)" rx="2" ry="2" />
<text  x="1191.91" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1189.2" y="1509" width="0.4" height="15.0" fill="rgb(237,173,10)" rx="2" ry="2" />
<text  x="1192.17" y="1519.5" ></text>
</g>
<g >
<title>do_page_fault (10 samples, 0.05%)</title><rect x="685.4" y="1845" width="0.6" height="15.0" fill="rgb(211,90,51)" rx="2" ry="2" />
<text  x="688.36" y="1855.5" ></text>
</g>
<g >
<title>__interceptor___strxfrm_l (4 samples, 0.02%)</title><rect x="1000.9" y="2053" width="0.3" height="15.0" fill="rgb(242,86,30)" rx="2" ry="2" />
<text  x="1003.93" y="2063.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (8 samples, 0.04%)</title><rect x="183.4" y="1653" width="0.5" height="15.0" fill="rgb(227,49,39)" rx="2" ry="2" />
<text  x="186.41" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (67 samples, 0.36%)</title><rect x="136.0" y="1637" width="4.3" height="15.0" fill="rgb(252,50,2)" rx="2" ry="2" />
<text  x="138.98" y="1647.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (9 samples, 0.05%)</title><rect x="805.1" y="2005" width="0.6" height="15.0" fill="rgb(225,72,40)" rx="2" ry="2" />
<text  x="808.15" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (420 samples, 2.28%)</title><rect x="54.3" y="1461" width="26.8" height="15.0" fill="rgb(221,154,48)" rx="2" ry="2" />
<text  x="57.30" y="1471.5" >[..</text>
</g>
<g >
<title>__lsan::DisabledInThisThread (14 samples, 0.08%)</title><rect x="1002.9" y="2053" width="0.9" height="15.0" fill="rgb(234,208,8)" rx="2" ry="2" />
<text  x="1005.91" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1188.4" y="469" width="0.4" height="15.0" fill="rgb(215,162,21)" rx="2" ry="2" />
<text  x="1191.40" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="185.7" y="1829" width="0.2" height="15.0" fill="rgb(253,161,18)" rx="2" ry="2" />
<text  x="188.71" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="216.6" y="1413" width="0.2" height="15.0" fill="rgb(227,194,34)" rx="2" ry="2" />
<text  x="219.58" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="159.2" y="1893" width="0.1" height="15.0" fill="rgb(230,41,52)" rx="2" ry="2" />
<text  x="162.19" y="1903.5" ></text>
</g>
<g >
<title>__sanitizer::internal_memmove (2 samples, 0.01%)</title><rect x="525.4" y="1909" width="0.2" height="15.0" fill="rgb(247,116,37)" rx="2" ry="2" />
<text  x="528.44" y="1919.5" ></text>
</g>
<g >
<title>unmap_vmas (2 samples, 0.01%)</title><rect x="1107.5" y="1893" width="0.1" height="15.0" fill="rgb(230,9,7)" rx="2" ry="2" />
<text  x="1110.48" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1189.2" y="597" width="0.4" height="15.0" fill="rgb(222,138,13)" rx="2" ry="2" />
<text  x="1192.17" y="607.5" ></text>
</g>
<g >
<title>[unknown] (323 samples, 1.75%)</title><rect x="54.3" y="789" width="20.6" height="15.0" fill="rgb(224,184,37)" rx="2" ry="2" />
<text  x="57.30" y="799.5" ></text>
</g>
<g >
<title>[unknown] (314 samples, 1.70%)</title><rect x="54.3" y="53" width="20.1" height="15.0" fill="rgb(231,214,31)" rx="2" ry="2" />
<text  x="57.30" y="63.5" ></text>
</g>
<g >
<title>[unknown] (319 samples, 1.73%)</title><rect x="54.3" y="533" width="20.4" height="15.0" fill="rgb(217,127,31)" rx="2" ry="2" />
<text  x="57.30" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1189.2" y="1253" width="0.4" height="15.0" fill="rgb(212,188,26)" rx="2" ry="2" />
<text  x="1192.17" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (111 samples, 0.60%)</title><rect x="207.9" y="1765" width="7.1" height="15.0" fill="rgb(234,7,9)" rx="2" ry="2" />
<text  x="210.89" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.9" y="1093" width="0.1" height="15.0" fill="rgb(220,13,53)" rx="2" ry="2" />
<text  x="1191.91" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="216.9" y="1701" width="0.2" height="15.0" fill="rgb(233,3,4)" rx="2" ry="2" />
<text  x="219.90" y="1711.5" ></text>
</g>
<g >
<title>page_fault (10 samples, 0.05%)</title><rect x="800.5" y="2021" width="0.7" height="15.0" fill="rgb(234,156,8)" rx="2" ry="2" />
<text  x="803.54" y="2031.5" ></text>
</g>
<g >
<title>__lsan::LsanMetadata::LsanMetadata (3 samples, 0.02%)</title><rect x="507.5" y="2037" width="0.2" height="15.0" fill="rgb(210,208,34)" rx="2" ry="2" />
<text  x="510.48" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (111 samples, 0.60%)</title><rect x="207.9" y="1749" width="7.1" height="15.0" fill="rgb(231,144,8)" rx="2" ry="2" />
<text  x="210.89" y="1759.5" ></text>
</g>
<g >
<title>std::future&lt;boost::optional&lt;TDocument&gt; &gt;::get (3 samples, 0.02%)</title><rect x="129.4" y="1989" width="0.2" height="15.0" fill="rgb(254,144,32)" rx="2" ry="2" />
<text  x="132.40" y="1999.5" ></text>
</g>
<g >
<title>TDocument::TDocument (2 samples, 0.01%)</title><rect x="506.3" y="1989" width="0.1" height="15.0" fill="rgb(232,165,4)" rx="2" ry="2" />
<text  x="509.26" y="1999.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="81.5" y="1445" width="0.2" height="15.0" fill="rgb(214,104,23)" rx="2" ry="2" />
<text  x="84.52" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1189.2" y="485" width="0.4" height="15.0" fill="rgb(239,127,50)" rx="2" ry="2" />
<text  x="1192.17" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1189.2" y="805" width="0.4" height="15.0" fill="rgb(236,121,26)" rx="2" ry="2" />
<text  x="1192.17" y="815.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (8 samples, 0.04%)</title><rect x="310.7" y="1941" width="0.5" height="15.0" fill="rgb(219,82,4)" rx="2" ry="2" />
<text  x="313.74" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1189.1" y="1909" width="0.5" height="15.0" fill="rgb(207,121,18)" rx="2" ry="2" />
<text  x="1192.11" y="1919.5" ></text>
</g>
<g >
<title>Eigen::PlainObjectBase&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; &gt;::resize (5 samples, 0.03%)</title><rect x="223.7" y="1957" width="0.3" height="15.0" fill="rgb(240,192,27)" rx="2" ry="2" />
<text  x="226.68" y="1967.5" ></text>
</g>
<g >
<title>__handle_mm_fault (17 samples, 0.09%)</title><rect x="726.8" y="1781" width="1.1" height="15.0" fill="rgb(230,108,21)" rx="2" ry="2" />
<text  x="729.85" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (437 samples, 2.37%)</title><rect x="130.2" y="1861" width="28.0" height="15.0" fill="rgb(209,227,35)" rx="2" ry="2" />
<text  x="133.23" y="1871.5" >s..</text>
</g>
<g >
<title>tlb_flush_mmu (2 samples, 0.01%)</title><rect x="87.5" y="1685" width="0.2" height="15.0" fill="rgb(206,65,18)" rx="2" ry="2" />
<text  x="90.53" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (326 samples, 1.77%)</title><rect x="54.3" y="901" width="20.8" height="15.0" fill="rgb(241,189,32)" rx="2" ry="2" />
<text  x="57.30" y="911.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (2 samples, 0.01%)</title><rect x="170.1" y="1605" width="0.1" height="15.0" fill="rgb(243,26,14)" rx="2" ry="2" />
<text  x="173.12" y="1615.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::load (30 samples, 0.16%)</title><rect x="500.4" y="1941" width="2.0" height="15.0" fill="rgb(223,7,7)" rx="2" ry="2" />
<text  x="503.45" y="1951.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (39 samples, 0.21%)</title><rect x="815.9" y="2005" width="2.5" height="15.0" fill="rgb(206,1,3)" rx="2" ry="2" />
<text  x="818.88" y="2015.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (4 samples, 0.02%)</title><rect x="211.3" y="1669" width="0.3" height="15.0" fill="rgb(238,44,47)" rx="2" ry="2" />
<text  x="214.34" y="1679.5" ></text>
</g>
<g >
<title>unmap_single_vma (2 samples, 0.01%)</title><rect x="1107.5" y="1877" width="0.1" height="15.0" fill="rgb(254,125,26)" rx="2" ry="2" />
<text  x="1110.48" y="1887.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (2 samples, 0.01%)</title><rect x="86.3" y="1749" width="0.1" height="15.0" fill="rgb(223,206,41)" rx="2" ry="2" />
<text  x="89.32" y="1759.5" ></text>
</g>
<g >
<title>Eigen::DenseBase&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt;::setConstant (36 samples, 0.20%)</title><rect x="486.2" y="1941" width="2.3" height="15.0" fill="rgb(211,0,3)" rx="2" ry="2" />
<text  x="489.19" y="1951.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (12 samples, 0.07%)</title><rect x="523.1" y="1909" width="0.7" height="15.0" fill="rgb(229,164,32)" rx="2" ry="2" />
<text  x="526.07" y="1919.5" ></text>
</g>
<g >
<title>operator new (9 samples, 0.05%)</title><rect x="649.1" y="1845" width="0.6" height="15.0" fill="rgb(232,201,12)" rx="2" ry="2" />
<text  x="652.12" y="1855.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="83.4" y="1573" width="0.1" height="15.0" fill="rgb(209,88,20)" rx="2" ry="2" />
<text  x="86.38" y="1583.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (36 samples, 0.20%)</title><rect x="1150.8" y="2037" width="2.3" height="15.0" fill="rgb(209,134,33)" rx="2" ry="2" />
<text  x="1153.82" y="2047.5" ></text>
</g>
<g >
<title>fasttext::SoftmaxLoss::computeOutput (8 samples, 0.04%)</title><rect x="533.5" y="1893" width="0.5" height="15.0" fill="rgb(238,149,47)" rx="2" ry="2" />
<text  x="536.49" y="1903.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_stringbuf (19 samples, 0.10%)</title><rect x="813.4" y="2037" width="1.2" height="15.0" fill="rgb(212,79,9)" rx="2" ry="2" />
<text  x="816.39" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1188.4" y="1733" width="0.4" height="15.0" fill="rgb(205,145,49)" rx="2" ry="2" />
<text  x="1191.40" y="1743.5" ></text>
</g>
<g >
<title>new_sync_read (2 samples, 0.01%)</title><rect x="119.7" y="1925" width="0.1" height="15.0" fill="rgb(208,41,15)" rx="2" ry="2" />
<text  x="122.68" y="1935.5" ></text>
</g>
<g >
<title>do_futex (13 samples, 0.07%)</title><rect x="28.2" y="1941" width="0.8" height="15.0" fill="rgb(242,29,34)" rx="2" ry="2" />
<text  x="31.22" y="1951.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (16 samples, 0.09%)</title><rect x="644.8" y="1845" width="1.0" height="15.0" fill="rgb(245,24,41)" rx="2" ry="2" />
<text  x="647.77" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (449 samples, 2.43%)</title><rect x="186.5" y="1861" width="28.7" height="15.0" fill="rgb(213,53,10)" rx="2" ry="2" />
<text  x="189.54" y="1871.5" >st..</text>
</g>
<g >
<title>try_charge (2 samples, 0.01%)</title><rect x="498.7" y="1845" width="0.1" height="15.0" fill="rgb(228,222,21)" rx="2" ry="2" />
<text  x="501.72" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (2 samples, 0.01%)</title><rect x="215.1" y="1749" width="0.1" height="15.0" fill="rgb(225,32,4)" rx="2" ry="2" />
<text  x="218.11" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.05%)</title><rect x="216.5" y="1845" width="0.7" height="15.0" fill="rgb(233,90,46)" rx="2" ry="2" />
<text  x="219.52" y="1855.5" ></text>
</g>
<g >
<title>do_exit (6 samples, 0.03%)</title><rect x="1108.2" y="1989" width="0.4" height="15.0" fill="rgb(239,93,8)" rx="2" ry="2" />
<text  x="1111.18" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.9" y="901" width="0.1" height="15.0" fill="rgb(217,109,16)" rx="2" ry="2" />
<text  x="1191.91" y="911.5" ></text>
</g>
<g >
<title>smp_call_function_single (2 samples, 0.01%)</title><rect x="54.0" y="1797" width="0.2" height="15.0" fill="rgb(217,93,19)" rx="2" ry="2" />
<text  x="57.04" y="1807.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (2 samples, 0.01%)</title><rect x="685.9" y="1765" width="0.1" height="15.0" fill="rgb(252,125,29)" rx="2" ry="2" />
<text  x="688.87" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="216.5" y="1669" width="0.3" height="15.0" fill="rgb(235,53,23)" rx="2" ry="2" />
<text  x="219.52" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (329 samples, 1.78%)</title><rect x="54.3" y="933" width="21.0" height="15.0" fill="rgb(232,8,5)" rx="2" ry="2" />
<text  x="57.30" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1188.8" y="1941" width="0.2" height="15.0" fill="rgb(250,115,24)" rx="2" ry="2" />
<text  x="1191.85" y="1951.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (3 samples, 0.02%)</title><rect x="201.2" y="1605" width="0.2" height="15.0" fill="rgb(222,51,24)" rx="2" ry="2" />
<text  x="204.24" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.3" y="1973" width="0.1" height="15.0" fill="rgb(209,211,54)" rx="2" ry="2" />
<text  x="1191.27" y="1983.5" ></text>
</g>
<g >
<title>__asan::GetMallocContextSize (2 samples, 0.01%)</title><rect x="1120.7" y="2037" width="0.1" height="15.0" fill="rgb(254,56,0)" rx="2" ry="2" />
<text  x="1123.71" y="2047.5" ></text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::get (9 samples, 0.05%)</title><rect x="128.4" y="1909" width="0.6" height="15.0" fill="rgb(238,129,39)" rx="2" ry="2" />
<text  x="131.44" y="1919.5" ></text>
</g>
<g >
<title>__asan::Allocator::Deallocate (8 samples, 0.04%)</title><rect x="1153.1" y="2037" width="0.5" height="15.0" fill="rgb(237,229,29)" rx="2" ry="2" />
<text  x="1156.12" y="2047.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find (6 samples, 0.03%)</title><rect x="792.2" y="1909" width="0.4" height="15.0" fill="rgb(223,39,51)" rx="2" ry="2" />
<text  x="795.17" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (321 samples, 1.74%)</title><rect x="54.3" y="661" width="20.5" height="15.0" fill="rgb(243,31,4)" rx="2" ry="2" />
<text  x="57.30" y="671.5" ></text>
</g>
<g >
<title>unmap_single_vma (4 samples, 0.02%)</title><rect x="804.3" y="1909" width="0.3" height="15.0" fill="rgb(254,63,13)" rx="2" ry="2" />
<text  x="807.32" y="1919.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.02%)</title><rect x="317.1" y="1941" width="0.2" height="15.0" fill="rgb(228,74,33)" rx="2" ry="2" />
<text  x="320.06" y="1951.5" ></text>
</g>
<g >
<title>find_vma (4 samples, 0.02%)</title><rect x="23.4" y="1989" width="0.2" height="15.0" fill="rgb(219,123,7)" rx="2" ry="2" />
<text  x="26.36" y="1999.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (51 samples, 0.28%)</title><rect x="166.2" y="1589" width="3.3" height="15.0" fill="rgb(228,173,45)" rx="2" ry="2" />
<text  x="169.22" y="1599.5" ></text>
</g>
<g >
<title>on_each_cpu_mask (22 samples, 0.12%)</title><rect x="942.3" y="1861" width="1.4" height="15.0" fill="rgb(224,99,48)" rx="2" ry="2" />
<text  x="945.32" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1188.5" y="117" width="0.3" height="15.0" fill="rgb(220,152,4)" rx="2" ry="2" />
<text  x="1191.47" y="127.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::addSubwords (40 samples, 0.22%)</title><rect x="525.6" y="1909" width="2.5" height="15.0" fill="rgb(209,86,51)" rx="2" ry="2" />
<text  x="528.57" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1188.9" y="1029" width="0.1" height="15.0" fill="rgb(237,210,18)" rx="2" ry="2" />
<text  x="1191.91" y="1039.5" ></text>
</g>
<g >
<title>__vm_munmap (2 samples, 0.01%)</title><rect x="77.5" y="1157" width="0.1" height="15.0" fill="rgb(253,64,26)" rx="2" ry="2" />
<text  x="80.50" y="1167.5" ></text>
</g>
<g >
<title>release_pages (4 samples, 0.02%)</title><rect x="1108.3" y="1861" width="0.3" height="15.0" fill="rgb(210,144,44)" rx="2" ry="2" />
<text  x="1111.31" y="1871.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (21 samples, 0.11%)</title><rect x="682.0" y="1877" width="1.3" height="15.0" fill="rgb(246,127,51)" rx="2" ry="2" />
<text  x="684.98" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="216.5" y="1685" width="0.3" height="15.0" fill="rgb(219,65,19)" rx="2" ry="2" />
<text  x="219.52" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="216.6" y="901" width="0.2" height="15.0" fill="rgb(212,149,13)" rx="2" ry="2" />
<text  x="219.65" y="911.5" ></text>
</g>
<g >
<title>on_each_cpu_cond_mask (25 samples, 0.14%)</title><rect x="942.2" y="1877" width="1.6" height="15.0" fill="rgb(227,126,41)" rx="2" ry="2" />
<text  x="945.19" y="1887.5" ></text>
</g>
<g >
<title>handle_mm_fault (3 samples, 0.02%)</title><rect x="765.8" y="1829" width="0.2" height="15.0" fill="rgb(220,37,8)" rx="2" ry="2" />
<text  x="768.77" y="1839.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.01%)</title><rect x="462.1" y="1893" width="0.1" height="15.0" fill="rgb(240,134,9)" rx="2" ry="2" />
<text  x="465.10" y="1903.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.02%)</title><rect x="139.3" y="1589" width="0.2" height="15.0" fill="rgb(230,146,4)" rx="2" ry="2" />
<text  x="142.31" y="1599.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (2 samples, 0.01%)</title><rect x="53.1" y="1893" width="0.1" height="15.0" fill="rgb(212,129,22)" rx="2" ry="2" />
<text  x="56.08" y="1903.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::addSubwords (6 samples, 0.03%)</title><rect x="804.6" y="2037" width="0.4" height="15.0" fill="rgb(250,225,29)" rx="2" ry="2" />
<text  x="807.64" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.05%)</title><rect x="216.5" y="1861" width="0.7" height="15.0" fill="rgb(234,48,30)" rx="2" ry="2" />
<text  x="219.52" y="1871.5" ></text>
</g>
<g >
<title>__sanitizer::BlockingMutex::Unlock (4 samples, 0.02%)</title><rect x="794.6" y="2037" width="0.3" height="15.0" fill="rgb(239,206,42)" rx="2" ry="2" />
<text  x="797.60" y="2047.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (6 samples, 0.03%)</title><rect x="82.9" y="1557" width="0.4" height="15.0" fill="rgb(239,38,27)" rx="2" ry="2" />
<text  x="85.93" y="1567.5" ></text>
</g>
<g >
<title>clear_page_erms (3 samples, 0.02%)</title><rect x="710.4" y="1733" width="0.1" height="15.0" fill="rgb(210,67,44)" rx="2" ry="2" />
<text  x="713.36" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1188.9" y="981" width="0.1" height="15.0" fill="rgb(243,202,53)" rx="2" ry="2" />
<text  x="1191.91" y="991.5" ></text>
</g>
<g >
<title>[unknown] (316 samples, 1.71%)</title><rect x="54.3" y="117" width="20.2" height="15.0" fill="rgb(247,218,20)" rx="2" ry="2" />
<text  x="57.30" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1188.4" y="581" width="0.4" height="15.0" fill="rgb(207,139,28)" rx="2" ry="2" />
<text  x="1191.40" y="591.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (2 samples, 0.01%)</title><rect x="148.5" y="1637" width="0.1" height="15.0" fill="rgb(224,108,49)" rx="2" ry="2" />
<text  x="151.51" y="1647.5" ></text>
</g>
<g >
<title>__pthread_mutex_lock (2 samples, 0.01%)</title><rect x="27.4" y="2037" width="0.1" height="15.0" fill="rgb(206,112,40)" rx="2" ry="2" />
<text  x="30.39" y="2047.5" ></text>
</g>
<g >
<title>page_fault (25 samples, 0.14%)</title><rect x="486.9" y="1925" width="1.6" height="15.0" fill="rgb(239,30,3)" rx="2" ry="2" />
<text  x="489.90" y="1935.5" ></text>
</g>
<g >
<title>__interceptor_strlen (6 samples, 0.03%)</title><rect x="599.6" y="1925" width="0.4" height="15.0" fill="rgb(210,59,19)" rx="2" ry="2" />
<text  x="602.58" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1189.2" y="773" width="0.4" height="15.0" fill="rgb(215,19,9)" rx="2" ry="2" />
<text  x="1192.17" y="783.5" ></text>
</g>
<g >
<title>native_flush_tlb_others (2 samples, 0.01%)</title><rect x="1107.2" y="1829" width="0.2" height="15.0" fill="rgb(245,229,13)" rx="2" ry="2" />
<text  x="1110.23" y="1839.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int const&amp;&gt; (5 samples, 0.03%)</title><rect x="527.8" y="1893" width="0.3" height="15.0" fill="rgb(214,194,9)" rx="2" ry="2" />
<text  x="530.80" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="216.6" y="949" width="0.2" height="15.0" fill="rgb(235,54,20)" rx="2" ry="2" />
<text  x="219.65" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1188.4" y="1333" width="0.4" height="15.0" fill="rgb(251,91,38)" rx="2" ry="2" />
<text  x="1191.40" y="1343.5" ></text>
</g>
<g >
<title>[unknown] (420 samples, 2.28%)</title><rect x="54.3" y="1445" width="26.8" height="15.0" fill="rgb(251,127,33)" rx="2" ry="2" />
<text  x="57.30" y="1455.5" >[..</text>
</g>
<g >
<title>__asan::GetCurrentThread (3 samples, 0.02%)</title><rect x="194.9" y="1589" width="0.1" height="15.0" fill="rgb(206,198,7)" rx="2" ry="2" />
<text  x="197.85" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1188.4" y="1381" width="0.4" height="15.0" fill="rgb(205,152,46)" rx="2" ry="2" />
<text  x="1191.40" y="1391.5" ></text>
</g>
<g >
<title>smp_call_function_many (21 samples, 0.11%)</title><rect x="942.4" y="1845" width="1.3" height="15.0" fill="rgb(224,210,20)" rx="2" ry="2" />
<text  x="945.38" y="1855.5" ></text>
</g>
<g >
<title>mem_cgroup_commit_charge (3 samples, 0.02%)</title><rect x="940.3" y="1925" width="0.2" height="15.0" fill="rgb(238,225,8)" rx="2" ry="2" />
<text  x="943.27" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (75 samples, 0.41%)</title><rect x="175.0" y="1765" width="4.8" height="15.0" fill="rgb(248,171,30)" rx="2" ry="2" />
<text  x="178.04" y="1775.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::basic_json (2 samples, 0.01%)</title><rect x="505.1" y="1925" width="0.1" height="15.0" fill="rgb(223,127,0)" rx="2" ry="2" />
<text  x="508.11" y="1935.5" ></text>
</g>
<g >
<title>try_charge (4 samples, 0.02%)</title><rect x="27.0" y="1925" width="0.3" height="15.0" fill="rgb(250,71,47)" rx="2" ry="2" />
<text  x="30.00" y="1935.5" ></text>
</g>
<g >
<title>boost::algorithm::join&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, char [2]&gt; (15 samples, 0.08%)</title><rect x="599.0" y="1941" width="1.0" height="15.0" fill="rgb(241,42,0)" rx="2" ry="2" />
<text  x="602.01" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1188.8" y="2021" width="0.2" height="15.0" fill="rgb(214,111,30)" rx="2" ry="2" />
<text  x="1191.85" y="2031.5" ></text>
</g>
<g >
<title>__asan::Allocator::GetAsanChunkByAddrFastLocked (9 samples, 0.05%)</title><rect x="91.7" y="2021" width="0.6" height="15.0" fill="rgb(209,59,50)" rx="2" ry="2" />
<text  x="94.69" y="2031.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (8 samples, 0.04%)</title><rect x="130.2" y="1669" width="0.5" height="15.0" fill="rgb(219,178,13)" rx="2" ry="2" />
<text  x="133.23" y="1679.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (2 samples, 0.01%)</title><rect x="134.2" y="1557" width="0.1" height="15.0" fill="rgb(225,225,28)" rx="2" ry="2" />
<text  x="137.19" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (20 samples, 0.11%)</title><rect x="878.1" y="2021" width="1.3" height="15.0" fill="rgb(237,226,10)" rx="2" ry="2" />
<text  x="881.14" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="216.6" y="725" width="0.2" height="15.0" fill="rgb(247,26,23)" rx="2" ry="2" />
<text  x="219.65" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (91 samples, 0.49%)</title><rect x="164.5" y="1685" width="5.8" height="15.0" fill="rgb(239,153,40)" rx="2" ry="2" />
<text  x="167.49" y="1695.5" ></text>
</g>
<g >
<title>__asan::asan_delete (3 samples, 0.02%)</title><rect x="1164.4" y="2037" width="0.2" height="15.0" fill="rgb(220,26,32)" rx="2" ry="2" />
<text  x="1167.43" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="216.6" y="645" width="0.2" height="15.0" fill="rgb(233,159,22)" rx="2" ry="2" />
<text  x="219.65" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1188.4" y="1653" width="0.4" height="15.0" fill="rgb(252,181,15)" rx="2" ry="2" />
<text  x="1191.40" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.05%)</title><rect x="216.5" y="1925" width="0.7" height="15.0" fill="rgb(254,198,3)" rx="2" ry="2" />
<text  x="219.52" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1188.4" y="741" width="0.4" height="15.0" fill="rgb(237,7,17)" rx="2" ry="2" />
<text  x="1191.40" y="751.5" ></text>
</g>
<g >
<title>onmt::is_alphabet (2 samples, 0.01%)</title><rect x="770.8" y="1893" width="0.2" height="15.0" fill="rgb(252,156,47)" rx="2" ry="2" />
<text  x="773.82" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (322 samples, 1.74%)</title><rect x="54.3" y="677" width="20.6" height="15.0" fill="rgb(243,108,45)" rx="2" ry="2" />
<text  x="57.30" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1188.9" y="549" width="0.1" height="15.0" fill="rgb(209,24,25)" rx="2" ry="2" />
<text  x="1191.91" y="559.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.01%)</title><rect x="92.7" y="2021" width="0.1" height="15.0" fill="rgb(244,184,15)" rx="2" ry="2" />
<text  x="95.71" y="2031.5" ></text>
</g>
<g >
<title>__pthread_getspecific (2 samples, 0.01%)</title><rect x="205.3" y="1637" width="0.1" height="15.0" fill="rgb(205,153,37)" rx="2" ry="2" />
<text  x="208.27" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (467 samples, 2.53%)</title><rect x="54.3" y="1621" width="29.8" height="15.0" fill="rgb(240,154,44)" rx="2" ry="2" />
<text  x="57.30" y="1631.5" >[u..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (4 samples, 0.02%)</title><rect x="184.6" y="1797" width="0.3" height="15.0" fill="rgb(227,50,42)" rx="2" ry="2" />
<text  x="187.63" y="1807.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (2 samples, 0.01%)</title><rect x="566.7" y="1925" width="0.1" height="15.0" fill="rgb(214,188,4)" rx="2" ry="2" />
<text  x="569.67" y="1935.5" ></text>
</g>
<g >
<title>arch_tlb_finish_mmu (2 samples, 0.01%)</title><rect x="84.4" y="1493" width="0.1" height="15.0" fill="rgb(229,163,27)" rx="2" ry="2" />
<text  x="87.40" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.05%)</title><rect x="216.5" y="1781" width="0.7" height="15.0" fill="rgb(247,129,8)" rx="2" ry="2" />
<text  x="219.52" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1188.4" y="1237" width="0.4" height="15.0" fill="rgb(229,93,53)" rx="2" ry="2" />
<text  x="1191.40" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1188.4" y="1029" width="0.4" height="15.0" fill="rgb(243,223,22)" rx="2" ry="2" />
<text  x="1191.40" y="1039.5" ></text>
</g>
<g >
<title>[unknown] (434 samples, 2.35%)</title><rect x="54.3" y="1509" width="27.7" height="15.0" fill="rgb(224,73,4)" rx="2" ry="2" />
<text  x="57.30" y="1519.5" >[..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (52 samples, 0.28%)</title><rect x="1119.2" y="2053" width="3.4" height="15.0" fill="rgb(217,36,16)" rx="2" ry="2" />
<text  x="1122.24" y="2063.5" ></text>
</g>
<g >
<title>unmap_single_vma (2 samples, 0.01%)</title><rect x="509.8" y="1957" width="0.1" height="15.0" fill="rgb(226,5,52)" rx="2" ry="2" />
<text  x="512.78" y="1967.5" ></text>
</g>
<g >
<title>__asan::Allocator::Deallocate (2 samples, 0.01%)</title><rect x="194.7" y="1589" width="0.1" height="15.0" fill="rgb(245,12,23)" rx="2" ry="2" />
<text  x="197.66" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.9" y="85" width="0.1" height="15.0" fill="rgb(217,44,39)" rx="2" ry="2" />
<text  x="1191.91" y="95.5" ></text>
</g>
<g >
<title>__asan::Allocator::Deallocate (2 samples, 0.01%)</title><rect x="166.4" y="1573" width="0.1" height="15.0" fill="rgb(216,110,1)" rx="2" ry="2" />
<text  x="169.41" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (316 samples, 1.71%)</title><rect x="54.3" y="165" width="20.2" height="15.0" fill="rgb(247,189,52)" rx="2" ry="2" />
<text  x="57.30" y="175.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (14 samples, 0.08%)</title><rect x="28.2" y="1989" width="0.9" height="15.0" fill="rgb(245,228,7)" rx="2" ry="2" />
<text  x="31.22" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.9" y="613" width="0.1" height="15.0" fill="rgb(205,108,31)" rx="2" ry="2" />
<text  x="1191.91" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1189.2" y="757" width="0.4" height="15.0" fill="rgb(206,223,10)" rx="2" ry="2" />
<text  x="1192.17" y="767.5" ></text>
</g>
<g >
<title>fasttext::QuantMatrix::addRowToVector (21 samples, 0.11%)</title><rect x="563.5" y="1893" width="1.3" height="15.0" fill="rgb(217,58,26)" rx="2" ry="2" />
<text  x="566.47" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="185.7" y="1813" width="0.2" height="15.0" fill="rgb(233,198,36)" rx="2" ry="2" />
<text  x="188.71" y="1823.5" ></text>
</g>
<g >
<title>onmt::unicode::get_case (282 samples, 1.53%)</title><rect x="728.1" y="1877" width="18.0" height="15.0" fill="rgb(241,95,36)" rx="2" ry="2" />
<text  x="731.12" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="185.7" y="1733" width="0.2" height="15.0" fill="rgb(207,45,6)" rx="2" ry="2" />
<text  x="188.71" y="1743.5" ></text>
</g>
<g >
<title>__asan::AsanTSDGet (19 samples, 0.10%)</title><rect x="1155.3" y="2037" width="1.2" height="15.0" fill="rgb(219,119,43)" rx="2" ry="2" />
<text  x="1158.29" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1188.4" y="357" width="0.4" height="15.0" fill="rgb(205,87,43)" rx="2" ry="2" />
<text  x="1191.40" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1188.4" y="1989" width="0.4" height="15.0" fill="rgb(234,188,14)" rx="2" ry="2" />
<text  x="1191.40" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (56 samples, 0.30%)</title><rect x="171.2" y="1621" width="3.6" height="15.0" fill="rgb(211,42,13)" rx="2" ry="2" />
<text  x="174.20" y="1631.5" ></text>
</g>
<g >
<title>call_rwsem_down_write_failed_killable (2 samples, 0.01%)</title><rect x="804.1" y="1925" width="0.2" height="15.0" fill="rgb(229,82,26)" rx="2" ry="2" />
<text  x="807.12" y="1935.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (2 samples, 0.01%)</title><rect x="54.2" y="1909" width="0.1" height="15.0" fill="rgb(218,161,27)" rx="2" ry="2" />
<text  x="57.17" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="159.2" y="1813" width="0.1" height="15.0" fill="rgb(229,208,13)" rx="2" ry="2" />
<text  x="162.19" y="1823.5" ></text>
</g>
<g >
<title>__dynamic_cast (4 samples, 0.02%)</title><rect x="160.8" y="1557" width="0.2" height="15.0" fill="rgb(252,176,15)" rx="2" ry="2" />
<text  x="163.78" y="1567.5" ></text>
</g>
<g >
<title>__sanitizer::QuarantineCache&lt;__asan::QuarantineCallback&gt;::Enqueue (91 samples, 0.49%)</title><rect x="795.4" y="2037" width="5.8" height="15.0" fill="rgb(230,153,19)" rx="2" ry="2" />
<text  x="798.37" y="2047.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.01%)</title><rect x="154.1" y="1685" width="0.1" height="15.0" fill="rgb(227,16,47)" rx="2" ry="2" />
<text  x="157.07" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (347 samples, 1.88%)</title><rect x="54.3" y="1189" width="22.2" height="15.0" fill="rgb(208,11,9)" rx="2" ry="2" />
<text  x="57.30" y="1199.5" >[..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="185.8" y="1589" width="0.1" height="15.0" fill="rgb(250,91,32)" rx="2" ry="2" />
<text  x="188.78" y="1599.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (6 samples, 0.03%)</title><rect x="1123.7" y="2037" width="0.4" height="15.0" fill="rgb(206,168,5)" rx="2" ry="2" />
<text  x="1126.72" y="2047.5" ></text>
</g>
<g >
<title>alloc_pages_vma (8 samples, 0.04%)</title><rect x="487.5" y="1845" width="0.5" height="15.0" fill="rgb(237,227,41)" rx="2" ry="2" />
<text  x="490.54" y="1855.5" ></text>
</g>
<g >
<title>__pthread_getspecific (4 samples, 0.02%)</title><rect x="316.6" y="1893" width="0.2" height="15.0" fill="rgb(217,147,48)" rx="2" ry="2" />
<text  x="319.55" y="1903.5" ></text>
</g>
<g >
<title>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::dump (4 samples, 0.02%)</title><rect x="504.4" y="1957" width="0.3" height="15.0" fill="rgb(206,212,53)" rx="2" ry="2" />
<text  x="507.41" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1188.8" y="2005" width="0.2" height="15.0" fill="rgb(252,188,31)" rx="2" ry="2" />
<text  x="1191.85" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (314 samples, 1.70%)</title><rect x="54.3" y="69" width="20.1" height="15.0" fill="rgb(236,68,34)" rx="2" ry="2" />
<text  x="57.30" y="79.5" ></text>
</g>
<g >
<title>TAgencyRating::ScoreUrl (417 samples, 2.26%)</title><rect x="159.3" y="1973" width="26.7" height="15.0" fill="rgb(226,13,18)" rx="2" ry="2" />
<text  x="162.31" y="1983.5" >T..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.9" y="469" width="0.1" height="15.0" fill="rgb(223,74,42)" rx="2" ry="2" />
<text  x="1191.91" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="216.6" y="1253" width="0.2" height="15.0" fill="rgb(245,1,23)" rx="2" ry="2" />
<text  x="219.58" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.9" y="1621" width="0.1" height="15.0" fill="rgb(248,164,0)" rx="2" ry="2" />
<text  x="1191.91" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1188.4" y="661" width="0.4" height="15.0" fill="rgb(206,172,54)" rx="2" ry="2" />
<text  x="1191.40" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (2 samples, 0.01%)</title><rect x="215.8" y="1797" width="0.1" height="15.0" fill="rgb(241,65,6)" rx="2" ry="2" />
<text  x="218.75" y="1807.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::basic_regex&lt;char const*&gt; (457 samples, 2.48%)</title><rect x="130.0" y="1957" width="29.2" height="15.0" fill="rgb(230,84,2)" rx="2" ry="2" />
<text  x="132.98" y="1967.5" >st..</text>
</g>
<g >
<title>fasttext::Dictionary::Dictionary (32 samples, 0.17%)</title><rect x="500.4" y="1957" width="2.1" height="15.0" fill="rgb(251,32,29)" rx="2" ry="2" />
<text  x="503.45" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1189.2" y="309" width="0.4" height="15.0" fill="rgb(242,89,42)" rx="2" ry="2" />
<text  x="1192.17" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.9" y="1349" width="0.1" height="15.0" fill="rgb(205,118,14)" rx="2" ry="2" />
<text  x="1191.91" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.04%)</title><rect x="1189.0" y="1989" width="0.6" height="15.0" fill="rgb(233,100,42)" rx="2" ry="2" />
<text  x="1192.04" y="1999.5" ></text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.02%)</title><rect x="182.5" y="1653" width="0.2" height="15.0" fill="rgb(209,209,41)" rx="2" ry="2" />
<text  x="185.52" y="1663.5" ></text>
</g>
<g >
<title>fasttext::Vector::addRow (7 samples, 0.04%)</title><rect x="597.7" y="1893" width="0.4" height="15.0" fill="rgb(243,17,21)" rx="2" ry="2" />
<text  x="600.67" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1188.4" y="949" width="0.4" height="15.0" fill="rgb(219,104,14)" rx="2" ry="2" />
<text  x="1191.40" y="959.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (3 samples, 0.02%)</title><rect x="1109.6" y="1909" width="0.2" height="15.0" fill="rgb(233,9,44)" rx="2" ry="2" />
<text  x="1112.59" y="1919.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_Alloc_node&gt; (3 samples, 0.02%)</title><rect x="505.2" y="1925" width="0.2" height="15.0" fill="rgb(232,8,49)" rx="2" ry="2" />
<text  x="508.24" y="1935.5" ></text>
</g>
<g >
<title>__do_page_fault (4 samples, 0.02%)</title><rect x="502.5" y="1909" width="0.2" height="15.0" fill="rgb(211,74,13)" rx="2" ry="2" />
<text  x="505.49" y="1919.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (2 samples, 0.01%)</title><rect x="498.4" y="1877" width="0.1" height="15.0" fill="rgb(250,139,40)" rx="2" ry="2" />
<text  x="501.40" y="1887.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="82.2" y="1493" width="0.2" height="15.0" fill="rgb(235,22,17)" rx="2" ry="2" />
<text  x="85.23" y="1503.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="82.2" y="1477" width="0.2" height="15.0" fill="rgb(223,186,8)" rx="2" ry="2" />
<text  x="85.23" y="1487.5" ></text>
</g>
<g >
<title>fasttext::Matrix::size (3 samples, 0.02%)</title><rect x="565.5" y="1877" width="0.1" height="15.0" fill="rgb(208,3,49)" rx="2" ry="2" />
<text  x="568.45" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (570 samples, 3.09%)</title><rect x="54.3" y="2005" width="36.4" height="15.0" fill="rgb(251,192,44)" rx="2" ry="2" />
<text  x="57.30" y="2015.5" >[un..</text>
</g>
<g >
<title>do_group_exit (6 samples, 0.03%)</title><rect x="1108.2" y="2005" width="0.4" height="15.0" fill="rgb(245,182,20)" rx="2" ry="2" />
<text  x="1111.18" y="2015.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotPut (3 samples, 0.02%)</title><rect x="168.5" y="1573" width="0.2" height="15.0" fill="rgb(215,136,3)" rx="2" ry="2" />
<text  x="171.52" y="1583.5" ></text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.02%)</title><rect x="210.2" y="1685" width="0.2" height="15.0" fill="rgb(236,206,34)" rx="2" ry="2" />
<text  x="213.19" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="216.5" y="1621" width="0.3" height="15.0" fill="rgb(243,98,16)" rx="2" ry="2" />
<text  x="219.52" y="1631.5" ></text>
</g>
<g >
<title>__asan_memset (10 samples, 0.05%)</title><rect x="622.5" y="1877" width="0.7" height="15.0" fill="rgb(233,34,34)" rx="2" ry="2" />
<text  x="625.53" y="1887.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (7 samples, 0.04%)</title><rect x="179.2" y="1621" width="0.4" height="15.0" fill="rgb(243,55,36)" rx="2" ry="2" />
<text  x="182.19" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.05%)</title><rect x="216.5" y="1829" width="0.7" height="15.0" fill="rgb(227,183,14)" rx="2" ry="2" />
<text  x="219.52" y="1839.5" ></text>
</g>
<g >
<title>__interceptor_free (2 samples, 0.01%)</title><rect x="395.7" y="1941" width="0.2" height="15.0" fill="rgb(249,110,6)" rx="2" ry="2" />
<text  x="398.75" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="812.9" y="2021" width="0.1" height="15.0" fill="rgb(246,178,24)" rx="2" ry="2" />
<text  x="815.88" y="2031.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (5 samples, 0.03%)</title><rect x="91.0" y="2005" width="0.3" height="15.0" fill="rgb(221,75,22)" rx="2" ry="2" />
<text  x="93.98" y="2015.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (258 samples, 1.40%)</title><rect x="774.3" y="1893" width="16.5" height="15.0" fill="rgb(213,32,51)" rx="2" ry="2" />
<text  x="777.27" y="1903.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (4 samples, 0.02%)</title><rect x="1107.2" y="1861" width="0.3" height="15.0" fill="rgb(210,99,27)" rx="2" ry="2" />
<text  x="1110.23" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1188.9" y="1653" width="0.1" height="15.0" fill="rgb(209,186,1)" rx="2" ry="2" />
<text  x="1191.91" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (78 samples, 0.42%)</title><rect x="152.7" y="1797" width="5.0" height="15.0" fill="rgb(231,112,34)" rx="2" ry="2" />
<text  x="155.73" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (74 samples, 0.40%)</title><rect x="202.8" y="1765" width="4.7" height="15.0" fill="rgb(229,2,33)" rx="2" ry="2" />
<text  x="205.78" y="1775.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (9 samples, 0.05%)</title><rect x="939.5" y="1909" width="0.6" height="15.0" fill="rgb(219,106,15)" rx="2" ry="2" />
<text  x="942.50" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="216.6" y="1093" width="0.2" height="15.0" fill="rgb(251,148,2)" rx="2" ry="2" />
<text  x="219.65" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (82 samples, 0.44%)</title><rect x="130.7" y="1701" width="5.3" height="15.0" fill="rgb(252,196,30)" rx="2" ry="2" />
<text  x="133.74" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1188.9" y="1413" width="0.1" height="15.0" fill="rgb(242,74,46)" rx="2" ry="2" />
<text  x="1191.91" y="1423.5" ></text>
</g>
<g >
<title>__x64_sys_read (3 samples, 0.02%)</title><rect x="1109.6" y="1989" width="0.2" height="15.0" fill="rgb(241,64,11)" rx="2" ry="2" />
<text  x="1112.59" y="1999.5" ></text>
</g>
<g >
<title>unmap_page_range (4 samples, 0.02%)</title><rect x="804.3" y="1893" width="0.3" height="15.0" fill="rgb(240,160,2)" rx="2" ry="2" />
<text  x="807.32" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1188.4" y="725" width="0.4" height="15.0" fill="rgb(214,132,14)" rx="2" ry="2" />
<text  x="1191.40" y="735.5" ></text>
</g>
<g >
<title>__lsan::MarkInvalidPCCb (6 samples, 0.03%)</title><rect x="508.3" y="2037" width="0.4" height="15.0" fill="rgb(209,153,16)" rx="2" ry="2" />
<text  x="511.31" y="2047.5" ></text>
</g>
<g >
<title>Annotate (150 samples, 0.81%)</title><rect x="120.1" y="2005" width="9.6" height="15.0" fill="rgb(206,0,29)" rx="2" ry="2" />
<text  x="123.13" y="2015.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (48 samples, 0.26%)</title><rect x="967.1" y="2053" width="3.1" height="15.0" fill="rgb(207,22,46)" rx="2" ry="2" />
<text  x="970.12" y="2063.5" ></text>
</g>
<g >
<title>__sanitizer::internal_munmap (2 samples, 0.01%)</title><rect x="84.4" y="1621" width="0.1" height="15.0" fill="rgb(206,67,46)" rx="2" ry="2" />
<text  x="87.40" y="1631.5" ></text>
</g>
<g >
<title>page_fault (3 samples, 0.02%)</title><rect x="1104.5" y="2037" width="0.2" height="15.0" fill="rgb(223,169,3)" rx="2" ry="2" />
<text  x="1107.48" y="2047.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (59 samples, 0.32%)</title><rect x="814.6" y="2037" width="3.8" height="15.0" fill="rgb(217,1,41)" rx="2" ry="2" />
<text  x="817.61" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.9" y="1525" width="0.1" height="15.0" fill="rgb(226,136,50)" rx="2" ry="2" />
<text  x="1191.91" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1188.4" y="677" width="0.4" height="15.0" fill="rgb(237,162,52)" rx="2" ry="2" />
<text  x="1191.40" y="687.5" ></text>
</g>
<g >
<title>unmap_single_vma (6 samples, 0.03%)</title><rect x="1108.2" y="1925" width="0.4" height="15.0" fill="rgb(231,104,20)" rx="2" ry="2" />
<text  x="1111.18" y="1935.5" ></text>
</g>
<g >
<title>TSlinkClustering::ClusterBatch (2,699 samples, 14.62%)</title><rect x="327.9" y="1989" width="172.5" height="15.0" fill="rgb(238,45,40)" rx="2" ry="2" />
<text  x="330.87" y="1999.5" >TSlinkClustering::Clus..</text>
</g>
<g >
<title>[unknown] (8 samples, 0.04%)</title><rect x="876.7" y="2021" width="0.5" height="15.0" fill="rgb(224,12,27)" rx="2" ry="2" />
<text  x="879.67" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (112 samples, 0.61%)</title><rect x="207.8" y="1813" width="7.2" height="15.0" fill="rgb(243,124,31)" rx="2" ry="2" />
<text  x="210.83" y="1823.5" ></text>
</g>
<g >
<title>__handle_mm_fault (7 samples, 0.04%)</title><rect x="800.7" y="1957" width="0.4" height="15.0" fill="rgb(250,157,8)" rx="2" ry="2" />
<text  x="803.67" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (529 samples, 2.87%)</title><rect x="54.3" y="1877" width="33.8" height="15.0" fill="rgb(224,227,35)" rx="2" ry="2" />
<text  x="57.30" y="1887.5" >[u..</text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::basic_json (7 samples, 0.04%)</title><rect x="503.8" y="2005" width="0.5" height="15.0" fill="rgb(215,201,23)" rx="2" ry="2" />
<text  x="506.83" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (67 samples, 0.36%)</title><rect x="180.3" y="1701" width="4.3" height="15.0" fill="rgb(223,226,0)" rx="2" ry="2" />
<text  x="183.28" y="1711.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::emplace_back&lt;char const*&amp;, unsigned int&amp;&gt; (5 samples, 0.03%)</title><rect x="664.7" y="1877" width="0.3" height="15.0" fill="rgb(211,221,46)" rx="2" ry="2" />
<text  x="667.65" y="1887.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (3 samples, 0.02%)</title><rect x="82.0" y="1509" width="0.2" height="15.0" fill="rgb(254,134,15)" rx="2" ry="2" />
<text  x="85.04" y="1519.5" ></text>
</g>
<g >
<title>[unknown] (382 samples, 2.07%)</title><rect x="54.3" y="1301" width="24.4" height="15.0" fill="rgb(247,222,16)" rx="2" ry="2" />
<text  x="57.30" y="1311.5" >[..</text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (4 samples, 0.02%)</title><rect x="154.9" y="1669" width="0.3" height="15.0" fill="rgb(254,35,3)" rx="2" ry="2" />
<text  x="157.90" y="1679.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (2 samples, 0.01%)</title><rect x="149.9" y="1637" width="0.1" height="15.0" fill="rgb(209,194,11)" rx="2" ry="2" />
<text  x="152.85" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (157 samples, 0.85%)</title><rect x="130.2" y="1749" width="10.1" height="15.0" fill="rgb(239,217,11)" rx="2" ry="2" />
<text  x="133.23" y="1759.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::create&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt; const&amp;&gt; (2 samples, 0.01%)</title><rect x="505.1" y="1973" width="0.1" height="15.0" fill="rgb(218,141,54)" rx="2" ry="2" />
<text  x="508.11" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1189.2" y="1525" width="0.4" height="15.0" fill="rgb(248,103,30)" rx="2" ry="2" />
<text  x="1192.17" y="1535.5" ></text>
</g>
<g >
<title>[unknown] (396 samples, 2.15%)</title><rect x="54.3" y="1349" width="25.3" height="15.0" fill="rgb(217,166,3)" rx="2" ry="2" />
<text  x="57.30" y="1359.5" >[..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1189.2" y="709" width="0.4" height="15.0" fill="rgb(214,127,42)" rx="2" ry="2" />
<text  x="1192.17" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1188.9" y="693" width="0.1" height="15.0" fill="rgb(230,76,16)" rx="2" ry="2" />
<text  x="1191.91" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1188.4" y="1781" width="0.4" height="15.0" fill="rgb(238,108,11)" rx="2" ry="2" />
<text  x="1191.40" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_Compiler (456 samples, 2.47%)</title><rect x="130.0" y="1941" width="29.2" height="15.0" fill="rgb(245,214,37)" rx="2" ry="2" />
<text  x="133.04" y="1951.5" >st..</text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.02%)</title><rect x="166.0" y="1589" width="0.2" height="15.0" fill="rgb(254,99,21)" rx="2" ry="2" />
<text  x="168.96" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (2 samples, 0.01%)</title><rect x="185.1" y="1797" width="0.1" height="15.0" fill="rgb(214,115,50)" rx="2" ry="2" />
<text  x="188.07" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1188.4" y="1093" width="0.4" height="15.0" fill="rgb(254,171,1)" rx="2" ry="2" />
<text  x="1191.40" y="1103.5" ></text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::get (55 samples, 0.30%)</title><rect x="123.6" y="1925" width="3.6" height="15.0" fill="rgb(227,159,39)" rx="2" ry="2" />
<text  x="126.65" y="1935.5" ></text>
</g>
<g >
<title>onmt::unicode::cp_to_utf8[abi:cxx11] (9 samples, 0.05%)</title><rect x="626.1" y="1877" width="0.6" height="15.0" fill="rgb(249,128,46)" rx="2" ry="2" />
<text  x="629.11" y="1887.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::emplace_back&lt;char const*&amp;, unsigned int&amp;&gt; (122 samples, 0.66%)</title><rect x="638.9" y="1861" width="7.8" height="15.0" fill="rgb(241,155,40)" rx="2" ry="2" />
<text  x="641.89" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (4 samples, 0.02%)</title><rect x="215.0" y="1765" width="0.2" height="15.0" fill="rgb(239,150,12)" rx="2" ry="2" />
<text  x="217.99" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (89 samples, 0.48%)</title><rect x="164.6" y="1653" width="5.6" height="15.0" fill="rgb(218,182,50)" rx="2" ry="2" />
<text  x="167.56" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (83 samples, 0.45%)</title><rect x="192.7" y="1717" width="5.3" height="15.0" fill="rgb(238,195,41)" rx="2" ry="2" />
<text  x="195.68" y="1727.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (192 samples, 1.04%)</title><rect x="29.1" y="2037" width="12.3" height="15.0" fill="rgb(214,190,36)" rx="2" ry="2" />
<text  x="32.11" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="185.7" y="1765" width="0.2" height="15.0" fill="rgb(207,126,24)" rx="2" ry="2" />
<text  x="188.71" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (12 samples, 0.07%)</title><rect x="215.4" y="1893" width="0.7" height="15.0" fill="rgb(251,141,11)" rx="2" ry="2" />
<text  x="218.37" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (66 samples, 0.36%)</title><rect x="187.8" y="1589" width="4.2" height="15.0" fill="rgb(235,101,38)" rx="2" ry="2" />
<text  x="190.82" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (85 samples, 0.46%)</title><rect x="140.5" y="1669" width="5.4" height="15.0" fill="rgb(223,57,31)" rx="2" ry="2" />
<text  x="143.46" y="1679.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (5 samples, 0.03%)</title><rect x="881.1" y="2037" width="0.4" height="15.0" fill="rgb(228,17,2)" rx="2" ry="2" />
<text  x="884.15" y="2047.5" ></text>
</g>
<g >
<title>__pthread_getspecific (11 samples, 0.06%)</title><rect x="623.2" y="1877" width="0.7" height="15.0" fill="rgb(246,120,12)" rx="2" ry="2" />
<text  x="626.23" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1188.9" y="165" width="0.1" height="15.0" fill="rgb(232,103,37)" rx="2" ry="2" />
<text  x="1191.91" y="175.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::at (3 samples, 0.02%)</title><rect x="120.3" y="1941" width="0.2" height="15.0" fill="rgb(207,27,49)" rx="2" ry="2" />
<text  x="123.26" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (487 samples, 2.64%)</title><rect x="54.3" y="1701" width="31.1" height="15.0" fill="rgb(226,35,42)" rx="2" ry="2" />
<text  x="57.30" y="1711.5" >[u..</text>
</g>
<g >
<title>[libc-2.27.so] (7 samples, 0.04%)</title><rect x="1119.9" y="2037" width="0.5" height="15.0" fill="rgb(222,40,40)" rx="2" ry="2" />
<text  x="1122.95" y="2047.5" ></text>
</g>
<g >
<title>[[vdso]] (6 samples, 0.03%)</title><rect x="119.2" y="2021" width="0.4" height="15.0" fill="rgb(213,70,37)" rx="2" ry="2" />
<text  x="122.24" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (6 samples, 0.03%)</title><rect x="186.5" y="1701" width="0.4" height="15.0" fill="rgb(216,197,48)" rx="2" ry="2" />
<text  x="189.54" y="1711.5" ></text>
</g>
<g >
<title>clear_page_erms (2 samples, 0.01%)</title><rect x="685.7" y="1749" width="0.1" height="15.0" fill="rgb(231,114,17)" rx="2" ry="2" />
<text  x="688.68" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (19 samples, 0.10%)</title><rect x="818.4" y="2021" width="1.2" height="15.0" fill="rgb(213,21,24)" rx="2" ry="2" />
<text  x="821.38" y="2031.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (15 samples, 0.08%)</title><rect x="497.3" y="1861" width="0.9" height="15.0" fill="rgb(211,219,13)" rx="2" ry="2" />
<text  x="500.25" y="1871.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.01%)</title><rect x="140.8" y="1637" width="0.2" height="15.0" fill="rgb(234,46,24)" rx="2" ry="2" />
<text  x="143.84" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1189.2" y="101" width="0.4" height="15.0" fill="rgb(242,74,50)" rx="2" ry="2" />
<text  x="1192.23" y="111.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.01%)</title><rect x="155.4" y="1669" width="0.1" height="15.0" fill="rgb(246,55,46)" rx="2" ry="2" />
<text  x="158.41" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.9" y="917" width="0.1" height="15.0" fill="rgb(245,70,42)" rx="2" ry="2" />
<text  x="1191.91" y="927.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (3 samples, 0.02%)</title><rect x="79.4" y="1285" width="0.2" height="15.0" fill="rgb(206,117,36)" rx="2" ry="2" />
<text  x="82.42" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.9" y="1333" width="0.1" height="15.0" fill="rgb(237,53,15)" rx="2" ry="2" />
<text  x="1191.91" y="1343.5" ></text>
</g>
<g >
<title>alloc_pages_vma (2 samples, 0.01%)</title><rect x="53.8" y="1925" width="0.1" height="15.0" fill="rgb(207,29,5)" rx="2" ry="2" />
<text  x="56.78" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1188.4" y="293" width="0.4" height="15.0" fill="rgb(252,90,33)" rx="2" ry="2" />
<text  x="1191.40" y="303.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (27 samples, 0.15%)</title><rect x="810.1" y="2005" width="1.7" height="15.0" fill="rgb(253,7,27)" rx="2" ry="2" />
<text  x="813.07" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (19 samples, 0.10%)</title><rect x="813.4" y="2021" width="1.2" height="15.0" fill="rgb(213,166,29)" rx="2" ry="2" />
<text  x="816.39" y="2031.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (53 samples, 0.29%)</title><rect x="777.1" y="1877" width="3.4" height="15.0" fill="rgb(217,184,18)" rx="2" ry="2" />
<text  x="780.09" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (95 samples, 0.51%)</title><rect x="186.5" y="1717" width="6.1" height="15.0" fill="rgb(252,67,22)" rx="2" ry="2" />
<text  x="189.54" y="1727.5" ></text>
</g>
<g >
<title>do_page_fault (27 samples, 0.15%)</title><rect x="726.2" y="1829" width="1.7" height="15.0" fill="rgb(207,214,31)" rx="2" ry="2" />
<text  x="729.21" y="1839.5" ></text>
</g>
<g >
<title>Eigen::DenseCoeffsBase&lt;Eigen::Transpose&lt;Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_sum_op&lt;float, float&gt;, Eigen::Product&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0&gt; const, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const&gt;, 0&gt;::coeff (353 samples, 1.91%)</title><rect x="373.4" y="1957" width="22.5" height="15.0" fill="rgb(208,75,21)" rx="2" ry="2" />
<text  x="376.38" y="1967.5" >E..</text>
</g>
<g >
<title>__sanitizer::internal_munmap (2 samples, 0.01%)</title><rect x="77.5" y="1221" width="0.1" height="15.0" fill="rgb(206,220,2)" rx="2" ry="2" />
<text  x="80.50" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (67 samples, 0.36%)</title><rect x="136.0" y="1653" width="4.3" height="15.0" fill="rgb(227,15,30)" rx="2" ry="2" />
<text  x="138.98" y="1663.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.25] (27 samples, 0.15%)</title><rect x="27.4" y="2053" width="1.7" height="15.0" fill="rgb(205,15,27)" rx="2" ry="2" />
<text  x="30.39" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1188.9" y="309" width="0.1" height="15.0" fill="rgb(212,214,30)" rx="2" ry="2" />
<text  x="1191.91" y="319.5" ></text>
</g>
<g >
<title>__handle_mm_fault (5 samples, 0.03%)</title><rect x="685.7" y="1797" width="0.3" height="15.0" fill="rgb(221,42,32)" rx="2" ry="2" />
<text  x="688.68" y="1807.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (2 samples, 0.01%)</title><rect x="130.4" y="1637" width="0.2" height="15.0" fill="rgb(228,146,37)" rx="2" ry="2" />
<text  x="133.42" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1189.2" y="1285" width="0.4" height="15.0" fill="rgb(231,89,35)" rx="2" ry="2" />
<text  x="1192.17" y="1295.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (9 samples, 0.05%)</title><rect x="174.1" y="1589" width="0.6" height="15.0" fill="rgb(246,138,46)" rx="2" ry="2" />
<text  x="177.14" y="1599.5" ></text>
</g>
<g >
<title>memcpy (17 samples, 0.09%)</title><rect x="684.9" y="1877" width="1.1" height="15.0" fill="rgb(220,28,29)" rx="2" ry="2" />
<text  x="687.92" y="1887.5" ></text>
</g>
<g >
<title>vfs_read (3 samples, 0.02%)</title><rect x="1109.6" y="1957" width="0.2" height="15.0" fill="rgb(219,44,3)" rx="2" ry="2" />
<text  x="1112.59" y="1967.5" ></text>
</g>
<g >
<title>fasttext::Model::predict (496 samples, 2.69%)</title><rect x="534.1" y="1909" width="31.7" height="15.0" fill="rgb(250,152,22)" rx="2" ry="2" />
<text  x="537.07" y="1919.5" >fa..</text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (38 samples, 0.21%)</title><rect x="1113.6" y="2037" width="2.4" height="15.0" fill="rgb(215,41,34)" rx="2" ry="2" />
<text  x="1116.62" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (75 samples, 0.41%)</title><rect x="175.0" y="1717" width="4.8" height="15.0" fill="rgb(211,33,13)" rx="2" ry="2" />
<text  x="178.04" y="1727.5" ></text>
</g>
<g >
<title>std::has_facet&lt;std::ctype&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="93.9" y="2021" width="0.1" height="15.0" fill="rgb(229,97,26)" rx="2" ry="2" />
<text  x="96.86" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.9" y="661" width="0.1" height="15.0" fill="rgb(243,214,22)" rx="2" ry="2" />
<text  x="1191.91" y="671.5" ></text>
</g>
<g >
<title>hugepage_vma_check (2 samples, 0.01%)</title><rect x="804.0" y="1893" width="0.1" height="15.0" fill="rgb(218,9,21)" rx="2" ry="2" />
<text  x="807.00" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (319 samples, 1.73%)</title><rect x="54.3" y="581" width="20.4" height="15.0" fill="rgb(208,104,1)" rx="2" ry="2" />
<text  x="57.30" y="591.5" ></text>
</g>
<g >
<title>__sanitizer::internal_munmap (2 samples, 0.01%)</title><rect x="90.6" y="1989" width="0.1" height="15.0" fill="rgb(220,113,46)" rx="2" ry="2" />
<text  x="93.60" y="1999.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (891 samples, 4.83%)</title><rect x="819.6" y="2005" width="56.9" height="15.0" fill="rgb(242,129,39)" rx="2" ry="2" />
<text  x="822.59" y="2015.5" >__sani..</text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="119.0" y="2037" width="0.2" height="15.0" fill="rgb(238,108,37)" rx="2" ry="2" />
<text  x="122.05" y="2047.5" ></text>
</g>
<g >
<title>__lru_cache_add (2 samples, 0.01%)</title><rect x="53.0" y="1893" width="0.1" height="15.0" fill="rgb(246,30,30)" rx="2" ry="2" />
<text  x="55.95" y="1903.5" ></text>
</g>
<g >
<title>__asan::GetMallocContextSize (3 samples, 0.02%)</title><rect x="161.6" y="1541" width="0.1" height="15.0" fill="rgb(242,51,52)" rx="2" ry="2" />
<text  x="164.55" y="1551.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.02%)</title><rect x="174.0" y="1589" width="0.1" height="15.0" fill="rgb(209,137,38)" rx="2" ry="2" />
<text  x="176.95" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (316 samples, 1.71%)</title><rect x="54.3" y="133" width="20.2" height="15.0" fill="rgb(207,205,54)" rx="2" ry="2" />
<text  x="57.30" y="143.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="119.7" y="2021" width="0.1" height="15.0" fill="rgb(236,154,42)" rx="2" ry="2" />
<text  x="122.68" y="2031.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::json_value::destroy (7 samples, 0.04%)</title><rect x="504.7" y="2005" width="0.4" height="15.0" fill="rgb(237,2,32)" rx="2" ry="2" />
<text  x="507.67" y="2015.5" ></text>
</g>
<g >
<title>Eigen::DenseBase&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; &gt;::setConstant (2 samples, 0.01%)</title><rect x="373.6" y="1941" width="0.1" height="15.0" fill="rgb(253,114,32)" rx="2" ry="2" />
<text  x="376.57" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1189.2" y="389" width="0.4" height="15.0" fill="rgb(246,4,50)" rx="2" ry="2" />
<text  x="1192.17" y="399.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.03%)</title><rect x="178.3" y="1621" width="0.3" height="15.0" fill="rgb(234,163,26)" rx="2" ry="2" />
<text  x="181.30" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="185.8" y="1381" width="0.1" height="15.0" fill="rgb(225,191,54)" rx="2" ry="2" />
<text  x="188.78" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (70 samples, 0.38%)</title><rect x="170.5" y="1669" width="4.5" height="15.0" fill="rgb(234,16,6)" rx="2" ry="2" />
<text  x="173.50" y="1679.5" ></text>
</g>
<g >
<title>handle_mm_fault (5 samples, 0.03%)</title><rect x="1018.6" y="1989" width="0.4" height="15.0" fill="rgb(245,89,14)" rx="2" ry="2" />
<text  x="1021.63" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (316 samples, 1.71%)</title><rect x="54.3" y="245" width="20.2" height="15.0" fill="rgb(227,55,10)" rx="2" ry="2" />
<text  x="57.30" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="216.6" y="709" width="0.2" height="15.0" fill="rgb(216,137,10)" rx="2" ry="2" />
<text  x="219.65" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="185.8" y="1637" width="0.1" height="15.0" fill="rgb(214,152,3)" rx="2" ry="2" />
<text  x="188.78" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1188.9" y="69" width="0.1" height="15.0" fill="rgb(230,44,0)" rx="2" ry="2" />
<text  x="1191.91" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1188.8" y="1845" width="0.2" height="15.0" fill="rgb(234,105,39)" rx="2" ry="2" />
<text  x="1191.85" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="159.2" y="1861" width="0.1" height="15.0" fill="rgb(219,183,24)" rx="2" ry="2" />
<text  x="162.19" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (8 samples, 0.04%)</title><rect x="130.2" y="1701" width="0.5" height="15.0" fill="rgb(233,211,49)" rx="2" ry="2" />
<text  x="133.23" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (451 samples, 2.44%)</title><rect x="186.5" y="1893" width="28.9" height="15.0" fill="rgb(227,157,54)" rx="2" ry="2" />
<text  x="189.54" y="1903.5" >st..</text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&gt;::ReleaseFreeMemoryToOS&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&gt;::MemoryMapper&gt; (13 samples, 0.07%)</title><rect x="1021.8" y="2053" width="0.8" height="15.0" fill="rgb(238,95,51)" rx="2" ry="2" />
<text  x="1024.77" y="2063.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (4 samples, 0.02%)</title><rect x="813.4" y="2005" width="0.2" height="15.0" fill="rgb(237,6,7)" rx="2" ry="2" />
<text  x="816.39" y="2015.5" ></text>
</g>
<g >
<title>fasttext::FastText::getWordVector (1,188 samples, 6.44%)</title><rect x="246.1" y="1973" width="75.9" height="15.0" fill="rgb(251,7,2)" rx="2" ry="2" />
<text  x="249.05" y="1983.5" >fasttext..</text>
</g>
<g >
<title>fasttext::QuantMatrix::addRowToVector (21 samples, 0.11%)</title><rect x="596.3" y="1893" width="1.4" height="15.0" fill="rgb(242,120,16)" rx="2" ry="2" />
<text  x="599.32" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1189.2" y="197" width="0.4" height="15.0" fill="rgb(206,19,48)" rx="2" ry="2" />
<text  x="1192.17" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1189.2" y="165" width="0.4" height="15.0" fill="rgb(228,74,7)" rx="2" ry="2" />
<text  x="1192.17" y="175.5" ></text>
</g>
<g >
<title>smp_call_function_single (21 samples, 0.11%)</title><rect x="942.4" y="1829" width="1.3" height="15.0" fill="rgb(233,132,37)" rx="2" ry="2" />
<text  x="945.38" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (332 samples, 1.80%)</title><rect x="54.3" y="1045" width="21.2" height="15.0" fill="rgb(210,65,54)" rx="2" ry="2" />
<text  x="57.30" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (66 samples, 0.36%)</title><rect x="160.0" y="1653" width="4.2" height="15.0" fill="rgb(211,26,8)" rx="2" ry="2" />
<text  x="162.95" y="1663.5" ></text>
</g>
<g >
<title>__handle_mm_fault (4 samples, 0.02%)</title><rect x="502.5" y="1877" width="0.2" height="15.0" fill="rgb(206,48,50)" rx="2" ry="2" />
<text  x="505.49" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.9" y="1285" width="0.1" height="15.0" fill="rgb(228,62,2)" rx="2" ry="2" />
<text  x="1191.91" y="1295.5" ></text>
</g>
<g >
<title>wp_page_copy (73 samples, 0.40%)</title><rect x="939.1" y="1941" width="4.7" height="15.0" fill="rgb(238,94,0)" rx="2" ry="2" />
<text  x="942.12" y="1951.5" ></text>
</g>
<g >
<title>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::dump (4 samples, 0.02%)</title><rect x="504.4" y="1941" width="0.3" height="15.0" fill="rgb(246,135,43)" rx="2" ry="2" />
<text  x="507.41" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="185.8" y="1573" width="0.1" height="15.0" fill="rgb(246,197,22)" rx="2" ry="2" />
<text  x="188.78" y="1583.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (9 samples, 0.05%)</title><rect x="805.8" y="2005" width="0.6" height="15.0" fill="rgb(221,42,25)" rx="2" ry="2" />
<text  x="808.79" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (438 samples, 2.37%)</title><rect x="130.2" y="1877" width="28.0" height="15.0" fill="rgb(246,176,34)" rx="2" ry="2" />
<text  x="133.23" y="1887.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1188.4" y="1605" width="0.4" height="15.0" fill="rgb(230,43,46)" rx="2" ry="2" />
<text  x="1191.40" y="1615.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.03%)</title><rect x="201.4" y="1605" width="0.4" height="15.0" fill="rgb(249,0,20)" rx="2" ry="2" />
<text  x="204.44" y="1615.5" ></text>
</g>
<g >
<title>fasttext::DenseMatrix::load (4 samples, 0.02%)</title><rect x="502.5" y="1973" width="0.2" height="15.0" fill="rgb(212,122,5)" rx="2" ry="2" />
<text  x="505.49" y="1983.5" ></text>
</g>
<g >
<title>flush_tlb_mm_range (3 samples, 0.02%)</title><rect x="509.0" y="1909" width="0.2" height="15.0" fill="rgb(223,119,0)" rx="2" ry="2" />
<text  x="512.01" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (318 samples, 1.72%)</title><rect x="54.3" y="437" width="20.3" height="15.0" fill="rgb(232,58,52)" rx="2" ry="2" />
<text  x="57.30" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="216.6" y="1157" width="0.2" height="15.0" fill="rgb(212,211,43)" rx="2" ry="2" />
<text  x="219.65" y="1167.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (4 samples, 0.02%)</title><rect x="1107.2" y="1893" width="0.3" height="15.0" fill="rgb(209,126,28)" rx="2" ry="2" />
<text  x="1110.23" y="1903.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (12 samples, 0.07%)</title><rect x="26.5" y="1941" width="0.8" height="15.0" fill="rgb(208,42,33)" rx="2" ry="2" />
<text  x="29.49" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (318 samples, 1.72%)</title><rect x="54.3" y="453" width="20.3" height="15.0" fill="rgb(244,176,37)" rx="2" ry="2" />
<text  x="57.30" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.02%)</title><rect x="216.6" y="1445" width="0.2" height="15.0" fill="rgb(235,13,10)" rx="2" ry="2" />
<text  x="219.58" y="1455.5" ></text>
</g>
<g >
<title>[unknown] (331 samples, 1.79%)</title><rect x="54.3" y="997" width="21.2" height="15.0" fill="rgb(217,80,41)" rx="2" ry="2" />
<text  x="57.30" y="1007.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (3 samples, 0.02%)</title><rect x="84.7" y="1637" width="0.1" height="15.0" fill="rgb(248,216,20)" rx="2" ry="2" />
<text  x="87.66" y="1647.5" ></text>
</g>
<g >
<title>ComputeClusterWeight (881 samples, 4.77%)</title><rect x="129.8" y="1989" width="56.3" height="15.0" fill="rgb(249,29,0)" rx="2" ry="2" />
<text  x="132.78" y="1999.5" >Compu..</text>
</g>
<g >
<title>operator new (2 samples, 0.01%)</title><rect x="163.2" y="1541" width="0.1" height="15.0" fill="rgb(223,209,3)" rx="2" ry="2" />
<text  x="166.21" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (6 samples, 0.03%)</title><rect x="186.5" y="1685" width="0.4" height="15.0" fill="rgb(241,131,7)" rx="2" ry="2" />
<text  x="189.54" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="185.6" y="1909" width="0.3" height="15.0" fill="rgb(224,16,46)" rx="2" ry="2" />
<text  x="188.65" y="1919.5" ></text>
</g>
<g >
<title>__dynamic_cast (5 samples, 0.03%)</title><rect x="205.0" y="1637" width="0.3" height="15.0" fill="rgb(250,65,33)" rx="2" ry="2" />
<text  x="207.95" y="1647.5" ></text>
</g>
<g >
<title>on_each_cpu_mask (2 samples, 0.01%)</title><rect x="54.0" y="1829" width="0.2" height="15.0" fill="rgb(209,120,7)" rx="2" ry="2" />
<text  x="57.04" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (2 samples, 0.01%)</title><rect x="215.2" y="1861" width="0.2" height="15.0" fill="rgb(226,120,25)" rx="2" ry="2" />
<text  x="218.24" y="1871.5" ></text>
</g>
<g >
<title>TFastTextEmbedder::GetSentenceEmbedding (2 samples, 0.01%)</title><rect x="42.6" y="2037" width="0.1" height="15.0" fill="rgb(252,69,50)" rx="2" ry="2" />
<text  x="45.60" y="2047.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::vector (2 samples, 0.01%)</title><rect x="159.8" y="1589" width="0.2" height="15.0" fill="rgb(228,76,48)" rx="2" ry="2" />
<text  x="162.83" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1188.9" y="1269" width="0.1" height="15.0" fill="rgb(205,76,9)" rx="2" ry="2" />
<text  x="1191.91" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (85 samples, 0.46%)</title><rect x="146.5" y="1669" width="5.4" height="15.0" fill="rgb(235,223,34)" rx="2" ry="2" />
<text  x="149.47" y="1679.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (2 samples, 0.01%)</title><rect x="77.5" y="1173" width="0.1" height="15.0" fill="rgb(238,100,14)" rx="2" ry="2" />
<text  x="80.50" y="1183.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (2 samples, 0.01%)</title><rect x="90.6" y="1877" width="0.1" height="15.0" fill="rgb(223,107,8)" rx="2" ry="2" />
<text  x="93.60" y="1887.5" ></text>
</g>
<g >
<title>std::operator&gt;&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (3 samples, 0.02%)</title><rect x="327.0" y="1989" width="0.2" height="15.0" fill="rgb(243,205,1)" rx="2" ry="2" />
<text  x="330.04" y="1999.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.01%)</title><rect x="198.9" y="1621" width="0.2" height="15.0" fill="rgb(236,21,45)" rx="2" ry="2" />
<text  x="201.94" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (324 samples, 1.76%)</title><rect x="54.3" y="805" width="20.7" height="15.0" fill="rgb(238,49,20)" rx="2" ry="2" />
<text  x="57.30" y="815.5" ></text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.02%)</title><rect x="162.4" y="1541" width="0.2" height="15.0" fill="rgb(239,228,9)" rx="2" ry="2" />
<text  x="165.38" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (324 samples, 1.76%)</title><rect x="54.3" y="821" width="20.7" height="15.0" fill="rgb(241,93,6)" rx="2" ry="2" />
<text  x="57.30" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="216.9" y="1733" width="0.2" height="15.0" fill="rgb(208,75,23)" rx="2" ry="2" />
<text  x="219.90" y="1743.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (5 samples, 0.03%)</title><rect x="150.3" y="1637" width="0.3" height="15.0" fill="rgb(244,152,37)" rx="2" ry="2" />
<text  x="153.30" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1189.2" y="1413" width="0.4" height="15.0" fill="rgb(234,14,38)" rx="2" ry="2" />
<text  x="1192.17" y="1423.5" ></text>
</g>
<g >
<title>do_page_fault (34 samples, 0.18%)</title><rect x="496.8" y="1941" width="2.2" height="15.0" fill="rgb(219,33,18)" rx="2" ry="2" />
<text  x="499.80" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1189.1" y="1781" width="0.5" height="15.0" fill="rgb(226,58,47)" rx="2" ry="2" />
<text  x="1192.11" y="1791.5" ></text>
</g>
<g >
<title>mem_cgroup_throttle_swaprate (2 samples, 0.01%)</title><rect x="727.6" y="1749" width="0.1" height="15.0" fill="rgb(234,103,16)" rx="2" ry="2" />
<text  x="730.61" y="1759.5" ></text>
</g>
<g >
<title>__vfs_read (2 samples, 0.01%)</title><rect x="119.7" y="1941" width="0.1" height="15.0" fill="rgb(217,1,50)" rx="2" ry="2" />
<text  x="122.68" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.9" y="1189" width="0.1" height="15.0" fill="rgb(250,65,25)" rx="2" ry="2" />
<text  x="1191.91" y="1199.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (16 samples, 0.09%)</title><rect x="940.5" y="1925" width="1.0" height="15.0" fill="rgb(205,13,19)" rx="2" ry="2" />
<text  x="943.53" y="1935.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (5 samples, 0.03%)</title><rect x="619.3" y="1877" width="0.3" height="15.0" fill="rgb(227,130,7)" rx="2" ry="2" />
<text  x="622.27" y="1887.5" ></text>
</g>
<g >
<title>RunFasttextClf (827 samples, 4.48%)</title><rect x="513.3" y="1957" width="52.9" height="15.0" fill="rgb(230,153,36)" rx="2" ry="2" />
<text  x="516.29" y="1967.5" >RunFa..</text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (26 samples, 0.14%)</title><rect x="1153.6" y="2037" width="1.7" height="15.0" fill="rgb(248,6,27)" rx="2" ry="2" />
<text  x="1156.63" y="2047.5" ></text>
</g>
<g >
<title>down_write_killable (2 samples, 0.01%)</title><rect x="804.1" y="1941" width="0.2" height="15.0" fill="rgb(234,129,6)" rx="2" ry="2" />
<text  x="807.12" y="1951.5" ></text>
</g>
<g >
<title>alloc_pages_vma (29 samples, 0.16%)</title><rect x="24.1" y="1957" width="1.9" height="15.0" fill="rgb(233,66,15)" rx="2" ry="2" />
<text  x="27.13" y="1967.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.01%)</title><rect x="138.7" y="1589" width="0.1" height="15.0" fill="rgb(213,17,53)" rx="2" ry="2" />
<text  x="141.67" y="1599.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (2 samples, 0.01%)</title><rect x="133.2" y="1557" width="0.1" height="15.0" fill="rgb(233,1,1)" rx="2" ry="2" />
<text  x="136.17" y="1567.5" ></text>
</g>
<g >
<title>arch_tlb_finish_mmu (4 samples, 0.02%)</title><rect x="1107.2" y="1877" width="0.3" height="15.0" fill="rgb(239,101,54)" rx="2" ry="2" />
<text  x="1110.23" y="1887.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (2 samples, 0.01%)</title><rect x="1104.7" y="2005" width="0.1" height="15.0" fill="rgb(252,91,6)" rx="2" ry="2" />
<text  x="1107.67" y="2015.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (3 samples, 0.02%)</title><rect x="142.8" y="1605" width="0.2" height="15.0" fill="rgb(223,10,23)" rx="2" ry="2" />
<text  x="145.76" y="1615.5" ></text>
</g>
<g >
<title>arch_tlb_finish_mmu (2 samples, 0.01%)</title><rect x="90.6" y="1861" width="0.1" height="15.0" fill="rgb(227,201,15)" rx="2" ry="2" />
<text  x="93.60" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (245 samples, 1.33%)</title><rect x="130.2" y="1781" width="15.7" height="15.0" fill="rgb(230,149,39)" rx="2" ry="2" />
<text  x="133.23" y="1791.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (133 samples, 0.72%)</title><rect x="1109.8" y="2053" width="8.5" height="15.0" fill="rgb(235,114,38)" rx="2" ry="2" />
<text  x="1112.78" y="2063.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (6 samples, 0.03%)</title><rect x="681.5" y="1765" width="0.3" height="15.0" fill="rgb(245,84,26)" rx="2" ry="2" />
<text  x="684.46" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (503 samples, 2.72%)</title><rect x="54.3" y="1765" width="32.1" height="15.0" fill="rgb(229,223,50)" rx="2" ry="2" />
<text  x="57.30" y="1775.5" >[u..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (5 samples, 0.03%)</title><rect x="157.8" y="1813" width="0.3" height="15.0" fill="rgb(246,132,21)" rx="2" ry="2" />
<text  x="160.78" y="1823.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThreadStats (35 samples, 0.19%)</title><rect x="113.7" y="2037" width="2.2" height="15.0" fill="rgb(211,184,23)" rx="2" ry="2" />
<text  x="116.68" y="2047.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (8 samples, 0.04%)</title><rect x="177.1" y="1621" width="0.5" height="15.0" fill="rgb(224,149,26)" rx="2" ry="2" />
<text  x="180.08" y="1631.5" ></text>
</g>
<g >
<title>tlb_flush_mmu_free (4 samples, 0.02%)</title><rect x="1108.3" y="1893" width="0.3" height="15.0" fill="rgb(233,90,48)" rx="2" ry="2" />
<text  x="1111.31" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="216.5" y="1541" width="0.3" height="15.0" fill="rgb(232,85,6)" rx="2" ry="2" />
<text  x="219.52" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="159.2" y="1925" width="0.1" height="15.0" fill="rgb(247,105,5)" rx="2" ry="2" />
<text  x="162.19" y="1935.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="77.5" y="1205" width="0.1" height="15.0" fill="rgb(247,55,14)" rx="2" ry="2" />
<text  x="80.50" y="1215.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::at (3 samples, 0.02%)</title><rect x="120.3" y="1957" width="0.2" height="15.0" fill="rgb(242,29,51)" rx="2" ry="2" />
<text  x="123.26" y="1967.5" ></text>
</g>
<g >
<title>do_syscall_64 (14 samples, 0.08%)</title><rect x="803.4" y="2005" width="0.9" height="15.0" fill="rgb(238,179,0)" rx="2" ry="2" />
<text  x="806.36" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (561 samples, 3.04%)</title><rect x="54.3" y="1973" width="35.9" height="15.0" fill="rgb(220,45,54)" rx="2" ry="2" />
<text  x="57.30" y="1983.5" >[un..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="185.8" y="1653" width="0.1" height="15.0" fill="rgb(212,176,32)" rx="2" ry="2" />
<text  x="188.78" y="1663.5" ></text>
</g>
<g >
<title>fasttext::Matrix::size (9 samples, 0.05%)</title><rect x="317.3" y="1957" width="0.5" height="15.0" fill="rgb(235,151,5)" rx="2" ry="2" />
<text  x="320.26" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1189.2" y="1397" width="0.4" height="15.0" fill="rgb(225,98,32)" rx="2" ry="2" />
<text  x="1192.17" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (69 samples, 0.37%)</title><rect x="175.4" y="1653" width="4.4" height="15.0" fill="rgb(237,158,48)" rx="2" ry="2" />
<text  x="178.36" y="1663.5" ></text>
</g>
<g >
<title>page_fault (5 samples, 0.03%)</title><rect x="765.6" y="1877" width="0.4" height="15.0" fill="rgb(208,5,34)" rx="2" ry="2" />
<text  x="768.64" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="185.7" y="1749" width="0.2" height="15.0" fill="rgb(220,37,46)" rx="2" ry="2" />
<text  x="188.71" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.9" y="1381" width="0.1" height="15.0" fill="rgb(231,201,47)" rx="2" ry="2" />
<text  x="1191.91" y="1391.5" ></text>
</g>
<g >
<title>[unknown] (316 samples, 1.71%)</title><rect x="54.3" y="85" width="20.2" height="15.0" fill="rgb(225,79,3)" rx="2" ry="2" />
<text  x="57.30" y="95.5" ></text>
</g>
<g >
<title>__clock_gettime (7 samples, 0.04%)</title><rect x="119.2" y="2037" width="0.4" height="15.0" fill="rgb(231,167,44)" rx="2" ry="2" />
<text  x="122.17" y="2047.5" ></text>
</g>
<g >
<title>__handle_mm_fault (57 samples, 0.31%)</title><rect x="23.6" y="1973" width="3.7" height="15.0" fill="rgb(250,98,54)" rx="2" ry="2" />
<text  x="26.61" y="1983.5" ></text>
</g>
<g >
<title>__asan_memcpy (2 samples, 0.01%)</title><rect x="204.8" y="1637" width="0.2" height="15.0" fill="rgb(247,58,14)" rx="2" ry="2" />
<text  x="207.82" y="1647.5" ></text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.02%)</title><rect x="143.5" y="1605" width="0.2" height="15.0" fill="rgb(239,63,1)" rx="2" ry="2" />
<text  x="146.46" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1189.2" y="261" width="0.4" height="15.0" fill="rgb(231,133,51)" rx="2" ry="2" />
<text  x="1192.17" y="271.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="140.1" y="1605" width="0.1" height="15.0" fill="rgb(219,177,18)" rx="2" ry="2" />
<text  x="143.07" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (70 samples, 0.38%)</title><rect x="180.1" y="1749" width="4.5" height="15.0" fill="rgb(205,176,37)" rx="2" ry="2" />
<text  x="183.09" y="1759.5" ></text>
</g>
<g >
<title>mmap_region (9 samples, 0.05%)</title><rect x="1107.2" y="1941" width="0.6" height="15.0" fill="rgb(248,6,27)" rx="2" ry="2" />
<text  x="1110.23" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1189.1" y="1861" width="0.5" height="15.0" fill="rgb(211,229,27)" rx="2" ry="2" />
<text  x="1192.11" y="1871.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&gt;::GetFromAllocator (14 samples, 0.08%)</title><rect x="801.8" y="2037" width="0.9" height="15.0" fill="rgb(220,175,48)" rx="2" ry="2" />
<text  x="804.76" y="2047.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (7 samples, 0.04%)</title><rect x="623.9" y="1877" width="0.5" height="15.0" fill="rgb(205,96,5)" rx="2" ry="2" />
<text  x="626.94" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1189.2" y="517" width="0.4" height="15.0" fill="rgb(221,55,40)" rx="2" ry="2" />
<text  x="1192.17" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Scanner&lt;char&gt;::_M_scan_normal (2 samples, 0.01%)</title><rect x="215.0" y="1701" width="0.1" height="15.0" fill="rgb(220,144,42)" rx="2" ry="2" />
<text  x="217.99" y="1711.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (9 samples, 0.05%)</title><rect x="213.5" y="1669" width="0.5" height="15.0" fill="rgb(240,147,29)" rx="2" ry="2" />
<text  x="216.45" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="159.2" y="1909" width="0.1" height="15.0" fill="rgb(217,157,41)" rx="2" ry="2" />
<text  x="162.19" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1188.4" y="1461" width="0.4" height="15.0" fill="rgb(254,45,30)" rx="2" ry="2" />
<text  x="1191.40" y="1471.5" ></text>
</g>
<g >
<title>[unknown] (352 samples, 1.91%)</title><rect x="54.3" y="1205" width="22.5" height="15.0" fill="rgb(223,157,3)" rx="2" ry="2" />
<text  x="57.30" y="1215.5" >[..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1188.9" y="1461" width="0.1" height="15.0" fill="rgb(237,79,0)" rx="2" ry="2" />
<text  x="1191.91" y="1471.5" ></text>
</g>
<g >
<title>Eigen::internal::gemv_dense_selector&lt;2, 1, true&gt;::run&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; &gt; (339 samples, 1.84%)</title><rect x="373.9" y="1941" width="21.7" height="15.0" fill="rgb(208,150,43)" rx="2" ry="2" />
<text  x="376.89" y="1951.5" >E..</text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;nlohmann::detail::json_ref&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; const*, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;*&gt; (2 samples, 0.01%)</title><rect x="503.9" y="1973" width="0.1" height="15.0" fill="rgb(228,5,30)" rx="2" ry="2" />
<text  x="506.90" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.9" y="1429" width="0.1" height="15.0" fill="rgb(249,64,38)" rx="2" ry="2" />
<text  x="1191.91" y="1439.5" ></text>
</g>
<g >
<title>__pthread_getspecific (2 samples, 0.01%)</title><rect x="167.9" y="1573" width="0.2" height="15.0" fill="rgb(211,17,13)" rx="2" ry="2" />
<text  x="170.94" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="185.8" y="1557" width="0.1" height="15.0" fill="rgb(227,150,9)" rx="2" ry="2" />
<text  x="188.78" y="1567.5" ></text>
</g>
<g >
<title>__do_page_fault (5 samples, 0.03%)</title><rect x="765.6" y="1845" width="0.4" height="15.0" fill="rgb(240,8,21)" rx="2" ry="2" />
<text  x="768.64" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (74 samples, 0.40%)</title><rect x="202.8" y="1749" width="4.7" height="15.0" fill="rgb(240,24,18)" rx="2" ry="2" />
<text  x="205.78" y="1759.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (3 samples, 0.02%)</title><rect x="189.7" y="1557" width="0.2" height="15.0" fill="rgb(231,86,45)" rx="2" ry="2" />
<text  x="192.67" y="1567.5" ></text>
</g>
<g >
<title>__lsan::CollectLeaksCb (3 samples, 0.02%)</title><rect x="92.8" y="2021" width="0.2" height="15.0" fill="rgb(252,60,24)" rx="2" ry="2" />
<text  x="95.84" y="2031.5" ></text>
</g>
<g >
<title>__pthread_getspecific (3 samples, 0.02%)</title><rect x="190.1" y="1557" width="0.2" height="15.0" fill="rgb(236,206,10)" rx="2" ry="2" />
<text  x="193.12" y="1567.5" ></text>
</g>
<g >
<title>do_wp_page (2 samples, 0.01%)</title><rect x="1104.5" y="1957" width="0.2" height="15.0" fill="rgb(244,37,3)" rx="2" ry="2" />
<text  x="1107.54" y="1967.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (2 samples, 0.01%)</title><rect x="84.4" y="1509" width="0.1" height="15.0" fill="rgb(221,6,45)" rx="2" ry="2" />
<text  x="87.40" y="1519.5" ></text>
</g>
<g >
<title>nlohmann::detail::parser&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::parse (128 samples, 0.69%)</title><rect x="121.1" y="1973" width="8.2" height="15.0" fill="rgb(208,228,15)" rx="2" ry="2" />
<text  x="124.09" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1189.1" y="1893" width="0.5" height="15.0" fill="rgb(221,122,23)" rx="2" ry="2" />
<text  x="1192.11" y="1903.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64LocalCache&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&gt; &gt;::Deallocate (2 samples, 0.01%)</title><rect x="88.4" y="1877" width="0.1" height="15.0" fill="rgb(219,82,8)" rx="2" ry="2" />
<text  x="91.36" y="1887.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (2 samples, 0.01%)</title><rect x="90.6" y="1813" width="0.1" height="15.0" fill="rgb(224,126,33)" rx="2" ry="2" />
<text  x="93.60" y="1823.5" ></text>
</g>
<g >
<title>clear_page_erms (14 samples, 0.08%)</title><rect x="497.3" y="1845" width="0.8" height="15.0" fill="rgb(248,160,35)" rx="2" ry="2" />
<text  x="500.25" y="1855.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;fasttext::FastText, std::default_delete&lt;fasttext::FastText&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;fasttext::FastText, std::default_delete&lt;fasttext::FastText&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (2 samples, 0.01%)</title><rect x="505.5" y="2005" width="0.1" height="15.0" fill="rgb(229,9,18)" rx="2" ry="2" />
<text  x="508.50" y="2015.5" ></text>
</g>
<g >
<title>Eigen::PlainObjectBase&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; &gt;::resize (3 samples, 0.02%)</title><rect x="373.7" y="1941" width="0.2" height="15.0" fill="rgb(226,125,32)" rx="2" ry="2" />
<text  x="376.70" y="1951.5" ></text>
</g>
<g >
<title>handle_mm_fault (2 samples, 0.01%)</title><rect x="1023.0" y="1989" width="0.1" height="15.0" fill="rgb(254,52,7)" rx="2" ry="2" />
<text  x="1025.98" y="1999.5" ></text>
</g>
<g >
<title>smp_call_function_single (2 samples, 0.01%)</title><rect x="1107.2" y="1765" width="0.2" height="15.0" fill="rgb(233,200,21)" rx="2" ry="2" />
<text  x="1110.23" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1189.2" y="133" width="0.4" height="15.0" fill="rgb(207,116,36)" rx="2" ry="2" />
<text  x="1192.23" y="143.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append@plt (5 samples, 0.03%)</title><rect x="1118.3" y="2053" width="0.3" height="15.0" fill="rgb(246,162,0)" rx="2" ry="2" />
<text  x="1121.28" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1189.1" y="1765" width="0.5" height="15.0" fill="rgb(205,151,19)" rx="2" ry="2" />
<text  x="1192.11" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.05%)</title><rect x="216.5" y="1941" width="0.7" height="15.0" fill="rgb(214,3,9)" rx="2" ry="2" />
<text  x="219.52" y="1951.5" ></text>
</g>
<g >
<title>__asan::Allocator::Deallocate (6 samples, 0.03%)</title><rect x="619.6" y="1877" width="0.4" height="15.0" fill="rgb(217,153,54)" rx="2" ry="2" />
<text  x="622.59" y="1887.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (2 samples, 0.01%)</title><rect x="503.5" y="1813" width="0.1" height="15.0" fill="rgb(235,163,15)" rx="2" ry="2" />
<text  x="506.51" y="1823.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (4 samples, 0.02%)</title><rect x="710.4" y="1749" width="0.2" height="15.0" fill="rgb(244,51,5)" rx="2" ry="2" />
<text  x="713.36" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1188.9" y="1365" width="0.1" height="15.0" fill="rgb(225,119,17)" rx="2" ry="2" />
<text  x="1191.91" y="1375.5" ></text>
</g>
<g >
<title>fasttext::Vector::addRow (13 samples, 0.07%)</title><rect x="564.8" y="1893" width="0.8" height="15.0" fill="rgb(226,208,50)" rx="2" ry="2" />
<text  x="567.81" y="1903.5" ></text>
</g>
<g >
<title>__libc_start_main (6,048 samples, 32.76%)</title><rect x="119.8" y="2037" width="386.6" height="15.0" fill="rgb(237,146,27)" rx="2" ry="2" />
<text  x="122.81" y="2047.5" >__libc_start_main</text>
</g>
<g >
<title>__handle_mm_fault (4 samples, 0.02%)</title><rect x="1018.7" y="1973" width="0.3" height="15.0" fill="rgb(208,79,51)" rx="2" ry="2" />
<text  x="1021.70" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (439 samples, 2.38%)</title><rect x="130.2" y="1893" width="28.1" height="15.0" fill="rgb(233,17,43)" rx="2" ry="2" />
<text  x="133.23" y="1903.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1189.2" y="853" width="0.4" height="15.0" fill="rgb(238,103,47)" rx="2" ry="2" />
<text  x="1192.17" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="185.8" y="1397" width="0.1" height="15.0" fill="rgb(252,85,11)" rx="2" ry="2" />
<text  x="188.78" y="1407.5" ></text>
</g>
<g >
<title>[unknown] (316 samples, 1.71%)</title><rect x="54.3" y="309" width="20.2" height="15.0" fill="rgb(227,128,54)" rx="2" ry="2" />
<text  x="57.30" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1189.2" y="901" width="0.4" height="15.0" fill="rgb(214,13,37)" rx="2" ry="2" />
<text  x="1192.17" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1189.2" y="1141" width="0.4" height="15.0" fill="rgb(213,110,21)" rx="2" ry="2" />
<text  x="1192.17" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (452 samples, 2.45%)</title><rect x="130.2" y="1909" width="28.9" height="15.0" fill="rgb(254,195,42)" rx="2" ry="2" />
<text  x="133.23" y="1919.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="216.6" y="1109" width="0.2" height="15.0" fill="rgb(222,28,40)" rx="2" ry="2" />
<text  x="219.65" y="1119.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::initNgrams (19 samples, 0.10%)</title><rect x="500.8" y="1925" width="1.2" height="15.0" fill="rgb(221,81,23)" rx="2" ry="2" />
<text  x="503.83" y="1935.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (4 samples, 0.02%)</title><rect x="806.5" y="2005" width="0.2" height="15.0" fill="rgb(232,1,54)" rx="2" ry="2" />
<text  x="809.49" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (350 samples, 1.90%)</title><rect x="130.2" y="1813" width="22.4" height="15.0" fill="rgb(245,114,27)" rx="2" ry="2" />
<text  x="133.23" y="1823.5" >s..</text>
</g>
<g >
<title>[unknown] (439 samples, 2.38%)</title><rect x="54.3" y="1525" width="28.1" height="15.0" fill="rgb(245,216,45)" rx="2" ry="2" />
<text  x="57.30" y="1535.5" >[..</text>
</g>
<g >
<title>get_page_from_freelist (5 samples, 0.03%)</title><rect x="939.8" y="1893" width="0.3" height="15.0" fill="rgb(214,134,40)" rx="2" ry="2" />
<text  x="942.76" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (372 samples, 2.02%)</title><rect x="54.3" y="1269" width="23.8" height="15.0" fill="rgb(206,197,50)" rx="2" ry="2" />
<text  x="57.30" y="1279.5" >[..</text>
</g>
<g >
<title>onmt::unicode::explode_utf8 (360 samples, 1.95%)</title><rect x="626.7" y="1877" width="23.0" height="15.0" fill="rgb(227,65,31)" rx="2" ry="2" />
<text  x="629.69" y="1887.5" >o..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (66 samples, 0.36%)</title><rect x="160.0" y="1669" width="4.2" height="15.0" fill="rgb(244,35,0)" rx="2" ry="2" />
<text  x="162.95" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1189.2" y="1477" width="0.4" height="15.0" fill="rgb(226,189,42)" rx="2" ry="2" />
<text  x="1192.17" y="1487.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (11 samples, 0.06%)</title><rect x="53.6" y="2021" width="0.7" height="15.0" fill="rgb(230,34,39)" rx="2" ry="2" />
<text  x="56.59" y="2031.5" ></text>
</g>
<g >
<title>kfree (2 samples, 0.01%)</title><rect x="942.2" y="1845" width="0.1" height="15.0" fill="rgb(240,42,4)" rx="2" ry="2" />
<text  x="945.19" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1189.2" y="533" width="0.4" height="15.0" fill="rgb(225,220,21)" rx="2" ry="2" />
<text  x="1192.17" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (254 samples, 1.38%)</title><rect x="186.5" y="1781" width="16.3" height="15.0" fill="rgb(244,185,10)" rx="2" ry="2" />
<text  x="189.54" y="1791.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.03%)</title><rect x="150.8" y="1637" width="0.3" height="15.0" fill="rgb(228,51,0)" rx="2" ry="2" />
<text  x="153.81" y="1647.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::create&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt; const&amp;&gt; (3 samples, 0.02%)</title><rect x="505.2" y="1957" width="0.2" height="15.0" fill="rgb(208,89,10)" rx="2" ry="2" />
<text  x="508.24" y="1967.5" ></text>
</g>
<g >
<title>get_page_from_freelist (2 samples, 0.01%)</title><rect x="52.8" y="1877" width="0.2" height="15.0" fill="rgb(212,34,16)" rx="2" ry="2" />
<text  x="55.83" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (181 samples, 0.98%)</title><rect x="186.5" y="1765" width="11.6" height="15.0" fill="rgb(240,85,40)" rx="2" ry="2" />
<text  x="189.54" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.9" y="965" width="0.1" height="15.0" fill="rgb(238,205,29)" rx="2" ry="2" />
<text  x="1191.91" y="975.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (6 samples, 0.03%)</title><rect x="196.9" y="1589" width="0.4" height="15.0" fill="rgb(215,96,1)" rx="2" ry="2" />
<text  x="199.90" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (9 samples, 0.05%)</title><rect x="805.8" y="2021" width="0.6" height="15.0" fill="rgb(208,26,51)" rx="2" ry="2" />
<text  x="808.79" y="2031.5" ></text>
</g>
<g >
<title>alloc_pages_vma (4 samples, 0.02%)</title><rect x="710.4" y="1765" width="0.2" height="15.0" fill="rgb(254,97,44)" rx="2" ry="2" />
<text  x="713.36" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.9" y="1013" width="0.1" height="15.0" fill="rgb(241,141,29)" rx="2" ry="2" />
<text  x="1191.91" y="1023.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (4 samples, 0.02%)</title><rect x="135.1" y="1557" width="0.2" height="15.0" fill="rgb(239,63,32)" rx="2" ry="2" />
<text  x="138.09" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1188.4" y="645" width="0.4" height="15.0" fill="rgb(206,203,29)" rx="2" ry="2" />
<text  x="1191.40" y="655.5" ></text>
</g>
<g >
<title>[unknown] (499 samples, 2.70%)</title><rect x="54.3" y="1749" width="31.9" height="15.0" fill="rgb(246,225,14)" rx="2" ry="2" />
<text  x="57.30" y="1759.5" >[u..</text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (2 samples, 0.01%)</title><rect x="215.8" y="1781" width="0.1" height="15.0" fill="rgb(247,38,8)" rx="2" ry="2" />
<text  x="218.75" y="1791.5" ></text>
</g>
<g >
<title>fasttext::Vector::addRow (2 samples, 0.01%)</title><rect x="477.9" y="1957" width="0.2" height="15.0" fill="rgb(237,132,33)" rx="2" ry="2" />
<text  x="480.95" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1188.4" y="485" width="0.4" height="15.0" fill="rgb(232,0,16)" rx="2" ry="2" />
<text  x="1191.40" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1188.4" y="2005" width="0.4" height="15.0" fill="rgb(215,29,27)" rx="2" ry="2" />
<text  x="1191.40" y="2015.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (608 samples, 3.29%)</title><rect x="1149.4" y="2053" width="38.9" height="15.0" fill="rgb(237,227,15)" rx="2" ry="2" />
<text  x="1152.41" y="2063.5" >std..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (70 samples, 0.38%)</title><rect x="180.1" y="1717" width="4.5" height="15.0" fill="rgb(229,66,20)" rx="2" ry="2" />
<text  x="183.09" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (397 samples, 2.15%)</title><rect x="159.6" y="1829" width="25.3" height="15.0" fill="rgb(221,195,43)" rx="2" ry="2" />
<text  x="162.57" y="1839.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1189.2" y="981" width="0.4" height="15.0" fill="rgb(225,53,33)" rx="2" ry="2" />
<text  x="1192.17" y="991.5" ></text>
</g>
<g >
<title>std::packaged_task&lt;boost::optional&lt;TDocument&gt;  (2 samples, 0.01%)</title><rect x="27.8" y="2005" width="0.2" height="15.0" fill="rgb(214,117,48)" rx="2" ry="2" />
<text  x="30.83" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (8 samples, 0.04%)</title><rect x="185.0" y="1861" width="0.5" height="15.0" fill="rgb(220,86,50)" rx="2" ry="2" />
<text  x="188.01" y="1871.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (271 samples, 1.47%)</title><rect x="10.1" y="2053" width="17.3" height="15.0" fill="rgb(222,30,29)" rx="2" ry="2" />
<text  x="13.06" y="2063.5" ></text>
</g>
<g >
<title>release_pages (7 samples, 0.04%)</title><rect x="509.3" y="1877" width="0.5" height="15.0" fill="rgb(211,60,0)" rx="2" ry="2" />
<text  x="512.33" y="1887.5" ></text>
</g>
<g >
<title>__asan::Allocator::Deallocate (2 samples, 0.01%)</title><rect x="176.6" y="1621" width="0.2" height="15.0" fill="rgb(253,7,26)" rx="2" ry="2" />
<text  x="179.64" y="1631.5" ></text>
</g>
<g >
<title>onmt::Tokenizer::tokenize (2,931 samples, 15.88%)</title><rect x="604.8" y="1909" width="187.3" height="15.0" fill="rgb(223,139,13)" rx="2" ry="2" />
<text  x="607.76" y="1919.5" >onmt::Tokenizer::tokenize</text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (236 samples, 1.28%)</title><rect x="54.3" y="37" width="15.1" height="15.0" fill="rgb(247,46,1)" rx="2" ry="2" />
<text  x="57.30" y="47.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int&gt; (5 samples, 0.03%)</title><rect x="588.5" y="1861" width="0.3" height="15.0" fill="rgb(226,125,20)" rx="2" ry="2" />
<text  x="591.46" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (59 samples, 0.32%)</title><rect x="136.4" y="1621" width="3.8" height="15.0" fill="rgb(252,153,48)" rx="2" ry="2" />
<text  x="139.43" y="1631.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (11 samples, 0.06%)</title><rect x="156.7" y="1669" width="0.7" height="15.0" fill="rgb(240,156,11)" rx="2" ry="2" />
<text  x="159.69" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (8 samples, 0.04%)</title><rect x="185.0" y="1845" width="0.5" height="15.0" fill="rgb(211,88,2)" rx="2" ry="2" />
<text  x="188.01" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (554 samples, 3.00%)</title><rect x="54.3" y="1957" width="35.4" height="15.0" fill="rgb(245,47,44)" rx="2" ry="2" />
<text  x="57.30" y="1967.5" >[un..</text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (45 samples, 0.24%)</title><rect x="995.1" y="2053" width="2.9" height="15.0" fill="rgb(247,147,33)" rx="2" ry="2" />
<text  x="998.11" y="2063.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (13 samples, 0.07%)</title><rect x="28.2" y="1877" width="0.8" height="15.0" fill="rgb(230,0,24)" rx="2" ry="2" />
<text  x="31.22" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (67 samples, 0.36%)</title><rect x="136.0" y="1701" width="4.3" height="15.0" fill="rgb(225,175,29)" rx="2" ry="2" />
<text  x="138.98" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1188.9" y="261" width="0.1" height="15.0" fill="rgb(229,19,50)" rx="2" ry="2" />
<text  x="1191.91" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1188.4" y="261" width="0.4" height="15.0" fill="rgb(231,119,49)" rx="2" ry="2" />
<text  x="1191.40" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (398 samples, 2.16%)</title><rect x="159.6" y="1861" width="25.4" height="15.0" fill="rgb(230,30,26)" rx="2" ry="2" />
<text  x="162.57" y="1871.5" >s..</text>
</g>
<g >
<title>__alloc_pages_nodemask (3 samples, 0.02%)</title><rect x="685.7" y="1765" width="0.2" height="15.0" fill="rgb(253,44,0)" rx="2" ry="2" />
<text  x="688.68" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1188.4" y="1541" width="0.4" height="15.0" fill="rgb(239,140,12)" rx="2" ry="2" />
<text  x="1191.40" y="1551.5" ></text>
</g>
<g >
<title>try_charge (3 samples, 0.02%)</title><rect x="488.2" y="1813" width="0.2" height="15.0" fill="rgb(212,207,17)" rx="2" ry="2" />
<text  x="491.24" y="1823.5" ></text>
</g>
<g >
<title>operator new (8 samples, 0.04%)</title><rect x="196.4" y="1589" width="0.5" height="15.0" fill="rgb(238,185,40)" rx="2" ry="2" />
<text  x="199.39" y="1599.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.01%)</title><rect x="176.0" y="1637" width="0.1" height="15.0" fill="rgb(225,173,53)" rx="2" ry="2" />
<text  x="179.00" y="1647.5" ></text>
</g>
<g >
<title>__asan::asan_memalign (27 samples, 0.15%)</title><rect x="992.7" y="2053" width="1.7" height="15.0" fill="rgb(206,77,31)" rx="2" ry="2" />
<text  x="995.68" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.9" y="1141" width="0.1" height="15.0" fill="rgb(252,59,32)" rx="2" ry="2" />
<text  x="1191.91" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (89 samples, 0.48%)</title><rect x="186.9" y="1701" width="5.7" height="15.0" fill="rgb(245,218,54)" rx="2" ry="2" />
<text  x="189.93" y="1711.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="197.4" y="1589" width="0.1" height="15.0" fill="rgb(237,122,34)" rx="2" ry="2" />
<text  x="200.41" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="185.8" y="1413" width="0.1" height="15.0" fill="rgb(212,5,40)" rx="2" ry="2" />
<text  x="188.78" y="1423.5" ></text>
</g>
<g >
<title>[unknown] (316 samples, 1.71%)</title><rect x="54.3" y="261" width="20.2" height="15.0" fill="rgb(210,22,20)" rx="2" ry="2" />
<text  x="57.30" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1188.4" y="1669" width="0.4" height="15.0" fill="rgb(205,46,38)" rx="2" ry="2" />
<text  x="1191.40" y="1679.5" ></text>
</g>
<g >
<title>do_wp_page (4 samples, 0.02%)</title><rect x="53.9" y="1925" width="0.3" height="15.0" fill="rgb(207,227,32)" rx="2" ry="2" />
<text  x="56.91" y="1935.5" ></text>
</g>
<g >
<title>__do_page_fault (14 samples, 0.08%)</title><rect x="710.2" y="1813" width="0.9" height="15.0" fill="rgb(228,13,10)" rx="2" ry="2" />
<text  x="713.16" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="216.6" y="1029" width="0.2" height="15.0" fill="rgb(226,23,9)" rx="2" ry="2" />
<text  x="219.65" y="1039.5" ></text>
</g>
<g >
<title>__libc_read (3 samples, 0.02%)</title><rect x="119.6" y="2037" width="0.2" height="15.0" fill="rgb(225,114,15)" rx="2" ry="2" />
<text  x="122.62" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (8 samples, 0.04%)</title><rect x="877.6" y="2021" width="0.5" height="15.0" fill="rgb(216,52,13)" rx="2" ry="2" />
<text  x="880.57" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1188.4" y="1061" width="0.4" height="15.0" fill="rgb(232,159,44)" rx="2" ry="2" />
<text  x="1191.40" y="1071.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="84.9" y="1653" width="0.1" height="15.0" fill="rgb(246,71,17)" rx="2" ry="2" />
<text  x="87.91" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1188.9" y="645" width="0.1" height="15.0" fill="rgb(208,128,40)" rx="2" ry="2" />
<text  x="1191.91" y="655.5" ></text>
</g>
<g >
<title>tlb_flush_mmu_free (2 samples, 0.01%)</title><rect x="90.6" y="1829" width="0.1" height="15.0" fill="rgb(208,166,19)" rx="2" ry="2" />
<text  x="93.60" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (87 samples, 0.47%)</title><rect x="187.0" y="1653" width="5.6" height="15.0" fill="rgb(254,132,27)" rx="2" ry="2" />
<text  x="189.99" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1188.4" y="517" width="0.4" height="15.0" fill="rgb(244,95,33)" rx="2" ry="2" />
<text  x="1191.40" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1188.5" y="165" width="0.3" height="15.0" fill="rgb(206,69,54)" rx="2" ry="2" />
<text  x="1191.47" y="175.5" ></text>
</g>
<g >
<title>__interceptor_strlen (30 samples, 0.16%)</title><rect x="1172.4" y="2037" width="1.9" height="15.0" fill="rgb(254,130,21)" rx="2" ry="2" />
<text  x="1175.36" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (490 samples, 2.65%)</title><rect x="54.3" y="1717" width="31.3" height="15.0" fill="rgb(221,183,34)" rx="2" ry="2" />
<text  x="57.30" y="1727.5" >[u..</text>
</g>
<g >
<title>[unknown] (316 samples, 1.71%)</title><rect x="54.3" y="101" width="20.2" height="15.0" fill="rgb(226,169,49)" rx="2" ry="2" />
<text  x="57.30" y="111.5" ></text>
</g>
<g >
<title>fasttext::FastText::getDimension (35 samples, 0.19%)</title><rect x="396.1" y="1957" width="2.2" height="15.0" fill="rgb(224,106,51)" rx="2" ry="2" />
<text  x="399.07" y="1967.5" ></text>
</g>
<g >
<title>generic_file_read_iter (3 samples, 0.02%)</title><rect x="1109.6" y="1893" width="0.2" height="15.0" fill="rgb(222,173,53)" rx="2" ry="2" />
<text  x="1112.59" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (82 samples, 0.44%)</title><rect x="130.7" y="1637" width="5.3" height="15.0" fill="rgb(238,55,10)" rx="2" ry="2" />
<text  x="133.74" y="1647.5" ></text>
</g>
<g >
<title>__dynamic_cast (46 samples, 0.25%)</title><rect x="998.0" y="2053" width="2.9" height="15.0" fill="rgb(241,63,36)" rx="2" ry="2" />
<text  x="1000.99" y="2063.5" ></text>
</g>
<g >
<title>__vm_munmap (3 samples, 0.02%)</title><rect x="79.4" y="1269" width="0.2" height="15.0" fill="rgb(241,9,47)" rx="2" ry="2" />
<text  x="82.42" y="1279.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (2 samples, 0.01%)</title><rect x="135.3" y="1557" width="0.2" height="15.0" fill="rgb(240,43,36)" rx="2" ry="2" />
<text  x="138.34" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="185.8" y="1445" width="0.1" height="15.0" fill="rgb(217,219,12)" rx="2" ry="2" />
<text  x="188.78" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1188.4" y="1557" width="0.4" height="15.0" fill="rgb(210,165,17)" rx="2" ry="2" />
<text  x="1191.40" y="1567.5" ></text>
</g>
<g >
<title>alloc_pages_vma (3 samples, 0.02%)</title><rect x="1018.8" y="1957" width="0.2" height="15.0" fill="rgb(211,31,31)" rx="2" ry="2" />
<text  x="1021.76" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1189.2" y="549" width="0.4" height="15.0" fill="rgb(248,49,36)" rx="2" ry="2" />
<text  x="1192.17" y="559.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (4 samples, 0.02%)</title><rect x="166.5" y="1573" width="0.3" height="15.0" fill="rgb(216,81,15)" rx="2" ry="2" />
<text  x="169.54" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="185.8" y="1429" width="0.1" height="15.0" fill="rgb(213,24,28)" rx="2" ry="2" />
<text  x="188.78" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (2 samples, 0.01%)</title><rect x="135.9" y="1605" width="0.1" height="15.0" fill="rgb(228,224,40)" rx="2" ry="2" />
<text  x="138.86" y="1615.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::Unwind (2 samples, 0.01%)</title><rect x="138.8" y="1589" width="0.1" height="15.0" fill="rgb(254,205,32)" rx="2" ry="2" />
<text  x="141.80" y="1599.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.01%)</title><rect x="193.0" y="1621" width="0.1" height="15.0" fill="rgb(213,89,38)" rx="2" ry="2" />
<text  x="196.00" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (319 samples, 1.73%)</title><rect x="54.3" y="565" width="20.4" height="15.0" fill="rgb(237,41,32)" rx="2" ry="2" />
<text  x="57.30" y="575.5" ></text>
</g>
<g >
<title>Eigen::internal::general_matrix_vector_product&lt;long, float, Eigen::internal::const_blas_data_mapper&lt;float, long, 1&gt;, 1, false, float, Eigen::internal::const_blas_data_mapper&lt;float, long, 0&gt;, false, 0&gt;::run (299 samples, 1.62%)</title><rect x="224.5" y="1941" width="19.1" height="15.0" fill="rgb(249,166,49)" rx="2" ry="2" />
<text  x="227.51" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.9" y="1573" width="0.1" height="15.0" fill="rgb(210,128,34)" rx="2" ry="2" />
<text  x="1191.91" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (97 samples, 0.53%)</title><rect x="146.0" y="1701" width="6.2" height="15.0" fill="rgb(247,214,13)" rx="2" ry="2" />
<text  x="148.95" y="1711.5" ></text>
</g>
<g >
<title>__do_page_fault (9 samples, 0.05%)</title><rect x="53.7" y="1973" width="0.6" height="15.0" fill="rgb(210,35,18)" rx="2" ry="2" />
<text  x="56.72" y="1983.5" ></text>
</g>
<g >
<title>smp_call_function_many (2 samples, 0.01%)</title><rect x="54.0" y="1813" width="0.2" height="15.0" fill="rgb(223,153,48)" rx="2" ry="2" />
<text  x="57.04" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (321 samples, 1.74%)</title><rect x="54.3" y="613" width="20.5" height="15.0" fill="rgb(236,149,17)" rx="2" ry="2" />
<text  x="57.30" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1188.4" y="757" width="0.4" height="15.0" fill="rgb(210,225,7)" rx="2" ry="2" />
<text  x="1191.40" y="767.5" ></text>
</g>
<g >
<title>__do_page_fault (5 samples, 0.03%)</title><rect x="503.4" y="1877" width="0.3" height="15.0" fill="rgb(245,187,47)" rx="2" ry="2" />
<text  x="506.39" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="216.5" y="1733" width="0.4" height="15.0" fill="rgb(215,146,9)" rx="2" ry="2" />
<text  x="219.52" y="1743.5" ></text>
</g>
<g >
<title>unmap_region (5 samples, 0.03%)</title><rect x="804.3" y="1941" width="0.3" height="15.0" fill="rgb(219,60,15)" rx="2" ry="2" />
<text  x="807.25" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1189.2" y="1701" width="0.4" height="15.0" fill="rgb(254,63,53)" rx="2" ry="2" />
<text  x="1192.17" y="1711.5" ></text>
</g>
<g >
<title>onmt::unicode::explode_utf8 (27 samples, 0.15%)</title><rect x="810.1" y="2037" width="1.7" height="15.0" fill="rgb(209,219,45)" rx="2" ry="2" />
<text  x="813.07" y="2047.5" ></text>
</g>
<g >
<title>__sanitizer::mem_is_zero (3 samples, 0.02%)</title><rect x="470.0" y="1925" width="0.2" height="15.0" fill="rgb(218,118,25)" rx="2" ry="2" />
<text  x="473.02" y="1935.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; const&amp;&gt; (3 samples, 0.02%)</title><rect x="505.2" y="1909" width="0.2" height="15.0" fill="rgb(247,27,38)" rx="2" ry="2" />
<text  x="508.24" y="1919.5" ></text>
</g>
<g >
<title>__sanitizer::StackTrace::GetCurrentPc (2 samples, 0.01%)</title><rect x="1180.2" y="2037" width="0.1" height="15.0" fill="rgb(229,30,39)" rx="2" ry="2" />
<text  x="1183.22" y="2047.5" ></text>
</g>
<g >
<title>nlohmann::detail::input_stream_adapter::get_character (3 samples, 0.02%)</title><rect x="123.5" y="1925" width="0.1" height="15.0" fill="rgb(225,12,41)" rx="2" ry="2" />
<text  x="126.46" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.02%)</title><rect x="877.4" y="2021" width="0.2" height="15.0" fill="rgb(234,128,51)" rx="2" ry="2" />
<text  x="880.37" y="2031.5" ></text>
</g>
<g >
<title>onmt::unicode::explode_utf8_with_marks (593 samples, 3.21%)</title><rect x="690.2" y="1877" width="37.9" height="15.0" fill="rgb(212,85,38)" rx="2" ry="2" />
<text  x="693.22" y="1887.5" >onm..</text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="78.1" y="1269" width="0.1" height="15.0" fill="rgb(229,140,34)" rx="2" ry="2" />
<text  x="81.07" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (2 samples, 0.01%)</title><rect x="157.8" y="1765" width="0.1" height="15.0" fill="rgb(225,43,16)" rx="2" ry="2" />
<text  x="160.78" y="1775.5" ></text>
</g>
<g >
<title>std::istream::sentry::sentry (2 samples, 0.01%)</title><rect x="1189.8" y="2053" width="0.1" height="15.0" fill="rgb(229,169,24)" rx="2" ry="2" />
<text  x="1192.81" y="2063.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.03%)</title><rect x="804.3" y="2021" width="0.3" height="15.0" fill="rgb(213,0,11)" rx="2" ry="2" />
<text  x="807.25" y="2031.5" ></text>
</g>
<g >
<title>try_charge (4 samples, 0.02%)</title><rect x="710.7" y="1733" width="0.3" height="15.0" fill="rgb(248,89,12)" rx="2" ry="2" />
<text  x="713.74" y="1743.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (3 samples, 0.02%)</title><rect x="82.4" y="1541" width="0.2" height="15.0" fill="rgb(233,101,36)" rx="2" ry="2" />
<text  x="85.42" y="1551.5" ></text>
</g>
<g >
<title>__do_page_fault (10 samples, 0.05%)</title><rect x="800.5" y="1989" width="0.7" height="15.0" fill="rgb(232,36,26)" rx="2" ry="2" />
<text  x="803.54" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1188.4" y="1717" width="0.4" height="15.0" fill="rgb(212,138,52)" rx="2" ry="2" />
<text  x="1191.40" y="1727.5" ></text>
</g>
<g >
<title>__interceptor_memcmp (152 samples, 0.82%)</title><rect x="1138.5" y="2037" width="9.7" height="15.0" fill="rgb(220,210,6)" rx="2" ry="2" />
<text  x="1141.48" y="2047.5" ></text>
</g>
<g >
<title>nlohmann::detail::input_stream_adapter::get_character (15 samples, 0.08%)</title><rect x="126.2" y="1909" width="1.0" height="15.0" fill="rgb(249,128,42)" rx="2" ry="2" />
<text  x="129.20" y="1919.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (44 samples, 0.24%)</title><rect x="137.1" y="1605" width="2.8" height="15.0" fill="rgb(206,167,36)" rx="2" ry="2" />
<text  x="140.13" y="1615.5" ></text>
</g>
<g >
<title>std::istream::sentry::sentry (2 samples, 0.01%)</title><rect x="499.6" y="1973" width="0.1" height="15.0" fill="rgb(230,36,0)" rx="2" ry="2" />
<text  x="502.55" y="1983.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (5 samples, 0.03%)</title><rect x="78.8" y="1317" width="0.4" height="15.0" fill="rgb(206,162,39)" rx="2" ry="2" />
<text  x="81.84" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (4 samples, 0.02%)</title><rect x="215.0" y="1829" width="0.2" height="15.0" fill="rgb(216,157,9)" rx="2" ry="2" />
<text  x="217.99" y="1839.5" ></text>
</g>
<g >
<title>__dynamic_cast (7 samples, 0.04%)</title><rect x="152.9" y="1701" width="0.5" height="15.0" fill="rgb(217,148,54)" rx="2" ry="2" />
<text  x="155.92" y="1711.5" ></text>
</g>
<g >
<title>do_mmap (12 samples, 0.07%)</title><rect x="803.4" y="1941" width="0.7" height="15.0" fill="rgb(213,116,26)" rx="2" ry="2" />
<text  x="806.36" y="1951.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (13 samples, 0.07%)</title><rect x="508.9" y="1957" width="0.9" height="15.0" fill="rgb(222,82,22)" rx="2" ry="2" />
<text  x="511.95" y="1967.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::future&lt;std::result_of&lt;Annotate (5 samples, 0.03%)</title><rect x="27.6" y="2021" width="0.4" height="15.0" fill="rgb(243,115,37)" rx="2" ry="2" />
<text  x="30.64" y="2031.5" ></text>
</g>
<g >
<title>TDocument::TDocument (7 samples, 0.04%)</title><rect x="793.3" y="1973" width="0.5" height="15.0" fill="rgb(245,136,12)" rx="2" ry="2" />
<text  x="796.32" y="1983.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="84.1" y="1621" width="0.2" height="15.0" fill="rgb(207,166,22)" rx="2" ry="2" />
<text  x="87.15" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="217.0" y="1637" width="0.1" height="15.0" fill="rgb(210,95,0)" rx="2" ry="2" />
<text  x="219.97" y="1647.5" ></text>
</g>
<g >
<title>__do_page_fault (13 samples, 0.07%)</title><rect x="681.1" y="1829" width="0.9" height="15.0" fill="rgb(220,24,53)" rx="2" ry="2" />
<text  x="684.14" y="1839.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (14 samples, 0.08%)</title><rect x="803.4" y="1989" width="0.9" height="15.0" fill="rgb(223,100,3)" rx="2" ry="2" />
<text  x="806.36" y="1999.5" ></text>
</g>
<g >
<title>__asan::AsanThread::stack_bottom (2 samples, 0.01%)</title><rect x="161.2" y="1541" width="0.2" height="15.0" fill="rgb(230,99,32)" rx="2" ry="2" />
<text  x="164.23" y="1551.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (43 samples, 0.23%)</title><rect x="181.3" y="1669" width="2.8" height="15.0" fill="rgb(229,225,46)" rx="2" ry="2" />
<text  x="184.30" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1189.2" y="1189" width="0.4" height="15.0" fill="rgb(213,174,10)" rx="2" ry="2" />
<text  x="1192.17" y="1199.5" ></text>
</g>
<g >
<title>smp_call_function_many (2 samples, 0.01%)</title><rect x="1107.2" y="1781" width="0.2" height="15.0" fill="rgb(238,129,39)" rx="2" ry="2" />
<text  x="1110.23" y="1791.5" ></text>
</g>
<g >
<title>unmap_vmas (6 samples, 0.03%)</title><rect x="1108.2" y="1941" width="0.4" height="15.0" fill="rgb(212,138,9)" rx="2" ry="2" />
<text  x="1111.18" y="1951.5" ></text>
</g>
<g >
<title>__pthread_getspecific (3 samples, 0.02%)</title><rect x="248.4" y="1957" width="0.1" height="15.0" fill="rgb(224,0,10)" rx="2" ry="2" />
<text  x="251.35" y="1967.5" ></text>
</g>
<g >
<title>TSlinkClustering::FillDistanceMatrix (239 samples, 1.29%)</title><rect x="483.7" y="1973" width="15.3" height="15.0" fill="rgb(235,203,7)" rx="2" ry="2" />
<text  x="486.70" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1188.9" y="741" width="0.1" height="15.0" fill="rgb(230,224,49)" rx="2" ry="2" />
<text  x="1191.91" y="751.5" ></text>
</g>
<g >
<title>operator new@plt (2 samples, 0.01%)</title><rect x="664.5" y="1877" width="0.2" height="15.0" fill="rgb(225,37,41)" rx="2" ry="2" />
<text  x="667.53" y="1887.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.02%)</title><rect x="155.9" y="1669" width="0.3" height="15.0" fill="rgb(228,166,0)" rx="2" ry="2" />
<text  x="158.93" y="1679.5" ></text>
</g>
<g >
<title>__sanitizer::RunMallocHooks (22 samples, 0.12%)</title><rect x="1020.1" y="2053" width="1.4" height="15.0" fill="rgb(248,202,53)" rx="2" ry="2" />
<text  x="1023.10" y="2063.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (8 samples, 0.04%)</title><rect x="1113.1" y="2037" width="0.5" height="15.0" fill="rgb(217,144,3)" rx="2" ry="2" />
<text  x="1116.11" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (2 samples, 0.01%)</title><rect x="140.3" y="1749" width="0.1" height="15.0" fill="rgb(227,104,1)" rx="2" ry="2" />
<text  x="143.27" y="1759.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (10 samples, 0.05%)</title><rect x="206.2" y="1637" width="0.6" height="15.0" fill="rgb(234,78,35)" rx="2" ry="2" />
<text  x="209.17" y="1647.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (6 samples, 0.03%)</title><rect x="1108.2" y="2021" width="0.4" height="15.0" fill="rgb(240,196,30)" rx="2" ry="2" />
<text  x="1111.18" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1189.2" y="1205" width="0.4" height="15.0" fill="rgb(250,131,29)" rx="2" ry="2" />
<text  x="1192.17" y="1215.5" ></text>
</g>
<g >
<title>__sanitizer::internal_mmap (16 samples, 0.09%)</title><rect x="1106.8" y="2053" width="1.1" height="15.0" fill="rgb(250,175,42)" rx="2" ry="2" />
<text  x="1109.84" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="42.6" y="2021" width="0.1" height="15.0" fill="rgb(219,43,37)" rx="2" ry="2" />
<text  x="45.60" y="2031.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::_M_do_set (4,397 samples, 23.82%)</title><rect x="512.9" y="2021" width="281.1" height="15.0" fill="rgb(244,0,51)" rx="2" ry="2" />
<text  x="515.91" y="2031.5" >std::__future_base::_State_baseV2::_M..</text>
</g>
<g >
<title>page_fault (5 samples, 0.03%)</title><rect x="100.1" y="2021" width="0.3" height="15.0" fill="rgb(227,52,14)" rx="2" ry="2" />
<text  x="103.06" y="2031.5" ></text>
</g>
<g >
<title>new_sync_read (3 samples, 0.02%)</title><rect x="1109.6" y="1925" width="0.2" height="15.0" fill="rgb(215,175,45)" rx="2" ry="2" />
<text  x="1112.59" y="1935.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsgetn (3 samples, 0.02%)</title><rect x="1189.6" y="2053" width="0.2" height="15.0" fill="rgb(223,30,43)" rx="2" ry="2" />
<text  x="1192.62" y="2063.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::getSubwords (152 samples, 0.82%)</title><rect x="463.0" y="1941" width="9.7" height="15.0" fill="rgb(213,39,45)" rx="2" ry="2" />
<text  x="465.99" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (72 samples, 0.39%)</title><rect x="202.8" y="1733" width="4.6" height="15.0" fill="rgb(239,136,22)" rx="2" ry="2" />
<text  x="205.78" y="1743.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.02%)</title><rect x="134.6" y="1557" width="0.2" height="15.0" fill="rgb(212,182,36)" rx="2" ry="2" />
<text  x="137.58" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.03%)</title><rect x="802.9" y="2021" width="0.3" height="15.0" fill="rgb(230,65,10)" rx="2" ry="2" />
<text  x="805.91" y="2031.5" ></text>
</g>
<g >
<title>__asan::RZSize2Log (75 samples, 0.41%)</title><rect x="987.9" y="2053" width="4.8" height="15.0" fill="rgb(239,19,42)" rx="2" ry="2" />
<text  x="990.89" y="2063.5" ></text>
</g>
<g >
<title>fasttext::FastText::getDimension (35 samples, 0.19%)</title><rect x="243.8" y="1973" width="2.3" height="15.0" fill="rgb(246,69,19)" rx="2" ry="2" />
<text  x="246.81" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (71 samples, 0.38%)</title><rect x="180.1" y="1797" width="4.5" height="15.0" fill="rgb(206,211,41)" rx="2" ry="2" />
<text  x="183.09" y="1807.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_range_insert&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (4 samples, 0.02%)</title><rect x="589.5" y="1893" width="0.3" height="15.0" fill="rgb(253,225,12)" rx="2" ry="2" />
<text  x="592.55" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1189.2" y="693" width="0.4" height="15.0" fill="rgb(224,124,9)" rx="2" ry="2" />
<text  x="1192.17" y="703.5" ></text>
</g>
<g >
<title>get_page_from_freelist (8 samples, 0.04%)</title><rect x="25.4" y="1925" width="0.5" height="15.0" fill="rgb(227,191,53)" rx="2" ry="2" />
<text  x="28.40" y="1935.5" ></text>
</g>
<g >
<title>__asan_memset (2 samples, 0.01%)</title><rect x="311.3" y="1941" width="0.1" height="15.0" fill="rgb(247,32,24)" rx="2" ry="2" />
<text  x="314.31" y="1951.5" ></text>
</g>
<g >
<title>Eigen::internal::generic_product_impl&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt;, Eigen::DenseShape, Eigen::DenseShape, 8&gt;::scaleAndAddTo&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt; (130 samples, 0.70%)</title><rect x="488.5" y="1941" width="8.3" height="15.0" fill="rgb(230,79,13)" rx="2" ry="2" />
<text  x="491.49" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (3 samples, 0.02%)</title><rect x="179.9" y="1733" width="0.2" height="15.0" fill="rgb(246,22,43)" rx="2" ry="2" />
<text  x="182.90" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (445 samples, 2.41%)</title><rect x="186.5" y="1829" width="28.5" height="15.0" fill="rgb(235,1,15)" rx="2" ry="2" />
<text  x="189.54" y="1839.5" >st..</text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (2 samples, 0.01%)</title><rect x="180.1" y="1701" width="0.1" height="15.0" fill="rgb(246,4,9)" rx="2" ry="2" />
<text  x="183.09" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.02%)</title><rect x="806.5" y="2021" width="0.2" height="15.0" fill="rgb(244,6,12)" rx="2" ry="2" />
<text  x="809.49" y="2031.5" ></text>
</g>
<g >
<title>__sanitizer::internal_munmap (3 samples, 0.02%)</title><rect x="79.4" y="1333" width="0.2" height="15.0" fill="rgb(245,33,4)" rx="2" ry="2" />
<text  x="82.42" y="1343.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (3 samples, 0.02%)</title><rect x="509.3" y="1861" width="0.2" height="15.0" fill="rgb(213,5,18)" rx="2" ry="2" />
<text  x="512.33" y="1871.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (3 samples, 0.02%)</title><rect x="1109.6" y="1861" width="0.2" height="15.0" fill="rgb(253,164,12)" rx="2" ry="2" />
<text  x="1112.59" y="1871.5" ></text>
</g>
<g >
<title>__do_page_fault (6 samples, 0.03%)</title><rect x="1018.6" y="2005" width="0.4" height="15.0" fill="rgb(218,71,11)" rx="2" ry="2" />
<text  x="1021.57" y="2015.5" ></text>
</g>
<g >
<title>unmap_region (2 samples, 0.01%)</title><rect x="87.5" y="1733" width="0.2" height="15.0" fill="rgb(240,98,51)" rx="2" ry="2" />
<text  x="90.53" y="1743.5" ></text>
</g>
<g >
<title>fasttext::HierarchicalSoftmaxLoss::dfs (3 samples, 0.02%)</title><rect x="591.0" y="1877" width="0.1" height="15.0" fill="rgb(222,164,39)" rx="2" ry="2" />
<text  x="593.96" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1188.5" y="53" width="0.3" height="15.0" fill="rgb(241,209,30)" rx="2" ry="2" />
<text  x="1191.53" y="63.5" ></text>
</g>
<g >
<title>__dynamic_cast (4 samples, 0.02%)</title><rect x="147.2" y="1653" width="0.3" height="15.0" fill="rgb(212,173,6)" rx="2" ry="2" />
<text  x="150.23" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (337 samples, 1.83%)</title><rect x="54.3" y="1125" width="21.5" height="15.0" fill="rgb(213,172,53)" rx="2" ry="2" />
<text  x="57.30" y="1135.5" >[..</text>
</g>
<g >
<title>operator new[] (62 samples, 0.34%)</title><rect x="1184.3" y="2037" width="4.0" height="15.0" fill="rgb(207,171,4)" rx="2" ry="2" />
<text  x="1187.31" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="185.8" y="1509" width="0.1" height="15.0" fill="rgb(249,195,0)" rx="2" ry="2" />
<text  x="188.78" y="1519.5" ></text>
</g>
<g >
<title>[unknown] (403 samples, 2.18%)</title><rect x="54.3" y="1381" width="25.8" height="15.0" fill="rgb(205,15,18)" rx="2" ry="2" />
<text  x="57.30" y="1391.5" >[..</text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="527.7" y="1893" width="0.1" height="15.0" fill="rgb(216,216,39)" rx="2" ry="2" />
<text  x="530.68" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="185.6" y="1925" width="0.3" height="15.0" fill="rgb(238,127,37)" rx="2" ry="2" />
<text  x="188.65" y="1935.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.01%)</title><rect x="1104.7" y="2037" width="0.1" height="15.0" fill="rgb(229,67,17)" rx="2" ry="2" />
<text  x="1107.67" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1189.2" y="117" width="0.4" height="15.0" fill="rgb(205,57,7)" rx="2" ry="2" />
<text  x="1192.23" y="127.5" ></text>
</g>
<g >
<title>std::locale::~locale (4 samples, 0.02%)</title><rect x="499.7" y="1973" width="0.3" height="15.0" fill="rgb(209,195,52)" rx="2" ry="2" />
<text  x="502.74" y="1983.5" ></text>
</g>
<g >
<title>generic_exec_single (2 samples, 0.01%)</title><rect x="54.0" y="1781" width="0.2" height="15.0" fill="rgb(219,145,6)" rx="2" ry="2" />
<text  x="57.04" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1188.4" y="1397" width="0.4" height="15.0" fill="rgb(244,160,10)" rx="2" ry="2" />
<text  x="1191.40" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.9" y="1397" width="0.1" height="15.0" fill="rgb(231,79,20)" rx="2" ry="2" />
<text  x="1191.91" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (2 samples, 0.01%)</title><rect x="184.7" y="1717" width="0.1" height="15.0" fill="rgb(243,209,51)" rx="2" ry="2" />
<text  x="187.69" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (549 samples, 2.97%)</title><rect x="54.3" y="1941" width="35.1" height="15.0" fill="rgb(221,150,22)" rx="2" ry="2" />
<text  x="57.30" y="1951.5" >[u..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (90 samples, 0.49%)</title><rect x="130.2" y="1717" width="5.8" height="15.0" fill="rgb(243,184,7)" rx="2" ry="2" />
<text  x="133.23" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (316 samples, 1.71%)</title><rect x="54.3" y="357" width="20.2" height="15.0" fill="rgb(254,56,34)" rx="2" ry="2" />
<text  x="57.30" y="367.5" ></text>
</g>
<g >
<title>fasttext::Vector::addVector (44 samples, 0.24%)</title><rect x="478.1" y="1957" width="2.8" height="15.0" fill="rgb(230,213,6)" rx="2" ry="2" />
<text  x="481.08" y="1967.5" ></text>
</g>
<g >
<title>fasttext::Vector::mul (11 samples, 0.06%)</title><rect x="324.5" y="1973" width="0.7" height="15.0" fill="rgb(219,205,6)" rx="2" ry="2" />
<text  x="327.48" y="1983.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&gt;::ReturnToAllocator (8 samples, 0.04%)</title><rect x="1022.6" y="2053" width="0.5" height="15.0" fill="rgb(231,195,29)" rx="2" ry="2" />
<text  x="1025.60" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1188.4" y="869" width="0.4" height="15.0" fill="rgb(245,44,8)" rx="2" ry="2" />
<text  x="1191.40" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="216.6" y="837" width="0.2" height="15.0" fill="rgb(231,32,14)" rx="2" ry="2" />
<text  x="219.65" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1189.2" y="1157" width="0.4" height="15.0" fill="rgb(249,169,41)" rx="2" ry="2" />
<text  x="1192.17" y="1167.5" ></text>
</g>
<g >
<title>get_page_from_freelist (2 samples, 0.01%)</title><rect x="1018.8" y="1925" width="0.2" height="15.0" fill="rgb(209,191,38)" rx="2" ry="2" />
<text  x="1021.83" y="1935.5" ></text>
</g>
<g >
<title>__vm_munmap (2 samples, 0.01%)</title><rect x="87.5" y="1765" width="0.2" height="15.0" fill="rgb(215,223,46)" rx="2" ry="2" />
<text  x="90.53" y="1775.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="202.5" y="1621" width="0.1" height="15.0" fill="rgb(217,81,29)" rx="2" ry="2" />
<text  x="205.46" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1188.9" y="597" width="0.1" height="15.0" fill="rgb(214,118,6)" rx="2" ry="2" />
<text  x="1191.91" y="607.5" ></text>
</g>
<g >
<title>do_page_fault (10 samples, 0.05%)</title><rect x="800.5" y="2005" width="0.7" height="15.0" fill="rgb(245,92,47)" rx="2" ry="2" />
<text  x="803.54" y="2015.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (21 samples, 0.11%)</title><rect x="69.8" y="37" width="1.4" height="15.0" fill="rgb(250,146,19)" rx="2" ry="2" />
<text  x="72.83" y="47.5" ></text>
</g>
<g >
<title>handle_mm_fault (8 samples, 0.04%)</title><rect x="53.8" y="1957" width="0.5" height="15.0" fill="rgb(225,67,33)" rx="2" ry="2" />
<text  x="56.78" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1188.4" y="1685" width="0.4" height="15.0" fill="rgb(208,50,25)" rx="2" ry="2" />
<text  x="1191.40" y="1695.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="163.9" y="1573" width="0.1" height="15.0" fill="rgb(238,94,34)" rx="2" ry="2" />
<text  x="166.92" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 0.03%)</title><rect x="811.9" y="2021" width="0.3" height="15.0" fill="rgb(247,33,35)" rx="2" ry="2" />
<text  x="814.86" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="216.6" y="1333" width="0.2" height="15.0" fill="rgb(209,110,23)" rx="2" ry="2" />
<text  x="219.58" y="1343.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::computeSubwords (36 samples, 0.20%)</title><rect x="470.2" y="1925" width="2.3" height="15.0" fill="rgb(215,29,45)" rx="2" ry="2" />
<text  x="473.21" y="1935.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (891 samples, 4.83%)</title><rect x="819.6" y="2037" width="56.9" height="15.0" fill="rgb(234,2,48)" rx="2" ry="2" />
<text  x="822.59" y="2047.5" >std::_..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1188.4" y="1893" width="0.4" height="15.0" fill="rgb(221,185,41)" rx="2" ry="2" />
<text  x="1191.40" y="1903.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (2 samples, 0.01%)</title><rect x="157.5" y="1685" width="0.1" height="15.0" fill="rgb(251,112,27)" rx="2" ry="2" />
<text  x="160.46" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (97 samples, 0.53%)</title><rect x="146.0" y="1765" width="6.2" height="15.0" fill="rgb(206,34,3)" rx="2" ry="2" />
<text  x="148.95" y="1775.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.03%)</title><rect x="144.4" y="1605" width="0.3" height="15.0" fill="rgb(212,142,0)" rx="2" ry="2" />
<text  x="147.42" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.9" y="1493" width="0.1" height="15.0" fill="rgb(228,64,37)" rx="2" ry="2" />
<text  x="1191.91" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1189.2" y="1589" width="0.4" height="15.0" fill="rgb(248,206,14)" rx="2" ry="2" />
<text  x="1192.17" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (10 samples, 0.05%)</title><rect x="158.3" y="1845" width="0.6" height="15.0" fill="rgb(252,182,1)" rx="2" ry="2" />
<text  x="161.29" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (4 samples, 0.02%)</title><rect x="215.0" y="1813" width="0.2" height="15.0" fill="rgb(225,204,47)" rx="2" ry="2" />
<text  x="217.99" y="1823.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (2 samples, 0.01%)</title><rect x="483.5" y="1941" width="0.1" height="15.0" fill="rgb(212,152,45)" rx="2" ry="2" />
<text  x="486.51" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1189.2" y="357" width="0.4" height="15.0" fill="rgb(250,197,32)" rx="2" ry="2" />
<text  x="1192.17" y="367.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.02%)</title><rect x="201.8" y="1605" width="0.1" height="15.0" fill="rgb(208,104,39)" rx="2" ry="2" />
<text  x="204.76" y="1615.5" ></text>
</g>
<g >
<title>fasttext::FastText::getWordVector (1,245 samples, 6.74%)</title><rect x="398.3" y="1957" width="79.6" height="15.0" fill="rgb(225,31,5)" rx="2" ry="2" />
<text  x="401.31" y="1967.5" >fasttext:..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1189.2" y="421" width="0.4" height="15.0" fill="rgb(233,2,18)" rx="2" ry="2" />
<text  x="1192.17" y="431.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (5 samples, 0.03%)</title><rect x="498.5" y="1877" width="0.3" height="15.0" fill="rgb(205,202,3)" rx="2" ry="2" />
<text  x="501.53" y="1887.5" ></text>
</g>
<g >
<title>__do_page_fault (114 samples, 0.62%)</title><rect x="936.8" y="2005" width="7.2" height="15.0" fill="rgb(227,34,41)" rx="2" ry="2" />
<text  x="939.75" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1189.2" y="1541" width="0.4" height="15.0" fill="rgb(213,117,4)" rx="2" ry="2" />
<text  x="1192.17" y="1551.5" ></text>
</g>
<g >
<title>operator new (8 samples, 0.04%)</title><rect x="178.6" y="1621" width="0.5" height="15.0" fill="rgb(209,84,35)" rx="2" ry="2" />
<text  x="181.62" y="1631.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="84.4" y="1589" width="0.1" height="15.0" fill="rgb(233,174,9)" rx="2" ry="2" />
<text  x="87.40" y="1599.5" ></text>
</g>
<g >
<title>TSlinkClustering::Cluster (2,699 samples, 14.62%)</title><rect x="327.9" y="2005" width="172.5" height="15.0" fill="rgb(214,227,29)" rx="2" ry="2" />
<text  x="330.87" y="2015.5" >TSlinkClustering::Clus..</text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (17 samples, 0.09%)</title><rect x="621.1" y="1877" width="1.0" height="15.0" fill="rgb(226,13,13)" rx="2" ry="2" />
<text  x="624.06" y="1887.5" ></text>
</g>
<g >
<title>page_fault (10 samples, 0.05%)</title><rect x="685.4" y="1861" width="0.6" height="15.0" fill="rgb(217,49,4)" rx="2" ry="2" />
<text  x="688.36" y="1871.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::pushHash (4 samples, 0.02%)</title><rect x="501.6" y="1893" width="0.3" height="15.0" fill="rgb(242,59,13)" rx="2" ry="2" />
<text  x="504.60" y="1903.5" ></text>
</g>
<g >
<title>__asan::asan_memalign (2 samples, 0.01%)</title><rect x="204.7" y="1637" width="0.1" height="15.0" fill="rgb(206,65,45)" rx="2" ry="2" />
<text  x="207.70" y="1647.5" ></text>
</g>
<g >
<title>do_wp_page (76 samples, 0.41%)</title><rect x="938.9" y="1957" width="4.9" height="15.0" fill="rgb(245,145,11)" rx="2" ry="2" />
<text  x="941.93" y="1967.5" ></text>
</g>
<g >
<title>__handle_mm_fault (9 samples, 0.05%)</title><rect x="681.3" y="1797" width="0.6" height="15.0" fill="rgb(245,51,17)" rx="2" ry="2" />
<text  x="684.34" y="1807.5" ></text>
</g>
<g >
<title>handle_mm_fault (2 samples, 0.01%)</title><rect x="503.5" y="1861" width="0.1" height="15.0" fill="rgb(213,197,20)" rx="2" ry="2" />
<text  x="506.51" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1188.9" y="213" width="0.1" height="15.0" fill="rgb(206,129,9)" rx="2" ry="2" />
<text  x="1191.91" y="223.5" ></text>
</g>
<g >
<title>__handle_mm_fault (2 samples, 0.01%)</title><rect x="1023.0" y="1973" width="0.1" height="15.0" fill="rgb(214,151,41)" rx="2" ry="2" />
<text  x="1025.98" y="1983.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.01%)</title><rect x="205.9" y="1637" width="0.1" height="15.0" fill="rgb(250,61,44)" rx="2" ry="2" />
<text  x="208.91" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1188.4" y="229" width="0.4" height="15.0" fill="rgb(206,11,20)" rx="2" ry="2" />
<text  x="1191.40" y="239.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt; &gt;::_M_manager (5 samples, 0.03%)</title><rect x="159.6" y="1621" width="0.4" height="15.0" fill="rgb(214,153,37)" rx="2" ry="2" />
<text  x="162.63" y="1631.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (67 samples, 0.36%)</title><rect x="147.5" y="1653" width="4.3" height="15.0" fill="rgb(207,89,53)" rx="2" ry="2" />
<text  x="150.49" y="1663.5" ></text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::get (5 samples, 0.03%)</title><rect x="121.5" y="1925" width="0.3" height="15.0" fill="rgb(234,104,35)" rx="2" ry="2" />
<text  x="124.47" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (9 samples, 0.05%)</title><rect x="818.4" y="2005" width="0.6" height="15.0" fill="rgb(240,77,35)" rx="2" ry="2" />
<text  x="821.38" y="2015.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (4 samples, 0.02%)</title><rect x="137.6" y="1589" width="0.2" height="15.0" fill="rgb(254,201,36)" rx="2" ry="2" />
<text  x="140.58" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (330 samples, 1.79%)</title><rect x="54.3" y="949" width="21.1" height="15.0" fill="rgb(227,185,53)" rx="2" ry="2" />
<text  x="57.30" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="185.8" y="1717" width="0.1" height="15.0" fill="rgb(228,50,14)" rx="2" ry="2" />
<text  x="188.78" y="1727.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::append@plt (2 samples, 0.01%)</title><rect x="608.5" y="1893" width="0.1" height="15.0" fill="rgb(248,63,28)" rx="2" ry="2" />
<text  x="611.47" y="1903.5" ></text>
</g>
<g >
<title>unmap_region (2 samples, 0.01%)</title><rect x="803.7" y="1893" width="0.1" height="15.0" fill="rgb(249,228,9)" rx="2" ry="2" />
<text  x="806.68" y="1903.5" ></text>
</g>
<g >
<title>alloc_pages_vma (10 samples, 0.05%)</title><rect x="939.5" y="1925" width="0.6" height="15.0" fill="rgb(251,161,14)" rx="2" ry="2" />
<text  x="942.50" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (541 samples, 2.93%)</title><rect x="54.3" y="1909" width="34.6" height="15.0" fill="rgb(207,192,26)" rx="2" ry="2" />
<text  x="57.30" y="1919.5" >[u..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.9" y="1589" width="0.1" height="15.0" fill="rgb(209,182,32)" rx="2" ry="2" />
<text  x="1191.91" y="1599.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (2 samples, 0.01%)</title><rect x="148.2" y="1637" width="0.1" height="15.0" fill="rgb(206,152,14)" rx="2" ry="2" />
<text  x="151.19" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="216.6" y="917" width="0.2" height="15.0" fill="rgb(209,156,39)" rx="2" ry="2" />
<text  x="219.65" y="927.5" ></text>
</g>
<g >
<title>ptep_clear_flush (2 samples, 0.01%)</title><rect x="54.0" y="1893" width="0.2" height="15.0" fill="rgb(253,72,28)" rx="2" ry="2" />
<text  x="57.04" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (318 samples, 1.72%)</title><rect x="54.3" y="421" width="20.3" height="15.0" fill="rgb(208,119,33)" rx="2" ry="2" />
<text  x="57.30" y="431.5" ></text>
</g>
<g >
<title>alloc_pages_vma (6 samples, 0.03%)</title><rect x="52.6" y="1909" width="0.4" height="15.0" fill="rgb(220,129,15)" rx="2" ry="2" />
<text  x="55.57" y="1919.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotPut (3 samples, 0.02%)</title><rect x="134.4" y="1557" width="0.2" height="15.0" fill="rgb(210,135,13)" rx="2" ry="2" />
<text  x="137.39" y="1567.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (6 samples, 0.03%)</title><rect x="792.9" y="1941" width="0.4" height="15.0" fill="rgb(252,14,52)" rx="2" ry="2" />
<text  x="795.87" y="1951.5" ></text>
</g>
<g >
<title>fasttext::Matrix::size (17 samples, 0.09%)</title><rect x="319.5" y="1941" width="1.1" height="15.0" fill="rgb(215,120,45)" rx="2" ry="2" />
<text  x="322.49" y="1951.5" ></text>
</g>
<g >
<title>TDocument::~TDocument (2 samples, 0.01%)</title><rect x="42.5" y="2037" width="0.1" height="15.0" fill="rgb(251,182,12)" rx="2" ry="2" />
<text  x="45.47" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="216.6" y="1365" width="0.2" height="15.0" fill="rgb(233,201,44)" rx="2" ry="2" />
<text  x="219.58" y="1375.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (8 samples, 0.04%)</title><rect x="876.7" y="2005" width="0.5" height="15.0" fill="rgb(235,213,51)" rx="2" ry="2" />
<text  x="879.67" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1189.2" y="69" width="0.4" height="15.0" fill="rgb(210,146,28)" rx="2" ry="2" />
<text  x="1192.23" y="79.5" ></text>
</g>
<g >
<title>page_fault (6 samples, 0.03%)</title><rect x="503.4" y="1909" width="0.4" height="15.0" fill="rgb(211,203,28)" rx="2" ry="2" />
<text  x="506.39" y="1919.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="180.0" y="1717" width="0.1" height="15.0" fill="rgb(242,15,6)" rx="2" ry="2" />
<text  x="182.96" y="1727.5" ></text>
</g>
<g >
<title>__asan_memcpy (3 samples, 0.02%)</title><rect x="177.6" y="1621" width="0.2" height="15.0" fill="rgb(253,98,0)" rx="2" ry="2" />
<text  x="180.59" y="1631.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (12 samples, 0.07%)</title><rect x="1176.3" y="2037" width="0.8" height="15.0" fill="rgb(218,8,3)" rx="2" ry="2" />
<text  x="1179.32" y="2047.5" ></text>
</g>
<g >
<title>fasttext::Matrix::size (13 samples, 0.07%)</title><rect x="474.7" y="1925" width="0.8" height="15.0" fill="rgb(247,37,46)" rx="2" ry="2" />
<text  x="477.69" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1188.4" y="1445" width="0.4" height="15.0" fill="rgb(247,106,49)" rx="2" ry="2" />
<text  x="1191.40" y="1455.5" ></text>
</g>
<g >
<title>__sanitizer::mem_is_zero (5 samples, 0.03%)</title><rect x="1107.9" y="2053" width="0.3" height="15.0" fill="rgb(239,184,48)" rx="2" ry="2" />
<text  x="1110.86" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1188.8" y="1765" width="0.2" height="15.0" fill="rgb(240,54,44)" rx="2" ry="2" />
<text  x="1191.85" y="1775.5" ></text>
</g>
<g >
<title>zap_page_range (2 samples, 0.01%)</title><rect x="82.2" y="1445" width="0.2" height="15.0" fill="rgb(248,177,49)" rx="2" ry="2" />
<text  x="85.23" y="1455.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (6 samples, 0.03%)</title><rect x="813.0" y="2037" width="0.4" height="15.0" fill="rgb(226,13,14)" rx="2" ry="2" />
<text  x="816.01" y="2047.5" ></text>
</g>
<g >
<title>clear_page_erms (5 samples, 0.03%)</title><rect x="727.0" y="1733" width="0.4" height="15.0" fill="rgb(237,114,10)" rx="2" ry="2" />
<text  x="730.04" y="1743.5" ></text>
</g>
<g >
<title>__split_vma (3 samples, 0.02%)</title><rect x="803.4" y="1893" width="0.2" height="15.0" fill="rgb(239,156,14)" rx="2" ry="2" />
<text  x="806.42" y="1903.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="191.5" y="1557" width="0.2" height="15.0" fill="rgb(245,61,6)" rx="2" ry="2" />
<text  x="194.53" y="1567.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::append (8 samples, 0.04%)</title><rect x="686.0" y="1877" width="0.5" height="15.0" fill="rgb(239,77,45)" rx="2" ry="2" />
<text  x="689.00" y="1887.5" ></text>
</g>
<g >
<title>operator delete[] (4 samples, 0.02%)</title><rect x="1109.1" y="2053" width="0.3" height="15.0" fill="rgb(233,98,45)" rx="2" ry="2" />
<text  x="1112.14" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1188.4" y="1701" width="0.4" height="15.0" fill="rgb(221,86,37)" rx="2" ry="2" />
<text  x="1191.40" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (70 samples, 0.38%)</title><rect x="170.5" y="1685" width="4.5" height="15.0" fill="rgb(243,199,50)" rx="2" ry="2" />
<text  x="173.50" y="1695.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (2 samples, 0.01%)</title><rect x="77.0" y="1205" width="0.1" height="15.0" fill="rgb(221,43,30)" rx="2" ry="2" />
<text  x="79.99" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="216.6" y="1125" width="0.2" height="15.0" fill="rgb(225,117,48)" rx="2" ry="2" />
<text  x="219.65" y="1135.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::push_back (8 samples, 0.04%)</title><rect x="877.6" y="2037" width="0.5" height="15.0" fill="rgb(251,121,26)" rx="2" ry="2" />
<text  x="880.57" y="2047.5" ></text>
</g>
<g >
<title>__sanitizer::internal_memmove (2 samples, 0.01%)</title><rect x="316.8" y="1893" width="0.1" height="15.0" fill="rgb(227,41,22)" rx="2" ry="2" />
<text  x="319.81" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1189.2" y="1605" width="0.4" height="15.0" fill="rgb(229,32,27)" rx="2" ry="2" />
<text  x="1192.17" y="1615.5" ></text>
</g>
<g >
<title>__sanitizer::internal_memmove (26 samples, 0.14%)</title><rect x="468.4" y="1925" width="1.6" height="15.0" fill="rgb(234,54,1)" rx="2" ry="2" />
<text  x="471.36" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1188.8" y="1909" width="0.2" height="15.0" fill="rgb(221,205,24)" rx="2" ry="2" />
<text  x="1191.85" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (8 samples, 0.04%)</title><rect x="1189.0" y="2005" width="0.6" height="15.0" fill="rgb(210,194,21)" rx="2" ry="2" />
<text  x="1192.04" y="2015.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::json_value::destroy (3 samples, 0.02%)</title><rect x="504.8" y="1989" width="0.2" height="15.0" fill="rgb(251,160,17)" rx="2" ry="2" />
<text  x="507.79" y="1999.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (7 samples, 0.04%)</title><rect x="812.4" y="2037" width="0.5" height="15.0" fill="rgb(226,50,3)" rx="2" ry="2" />
<text  x="815.43" y="2047.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (2 samples, 0.01%)</title><rect x="54.2" y="1925" width="0.1" height="15.0" fill="rgb(251,98,9)" rx="2" ry="2" />
<text  x="57.17" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="185.7" y="1861" width="0.2" height="15.0" fill="rgb(230,95,42)" rx="2" ry="2" />
<text  x="188.71" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1189.2" y="37" width="0.4" height="15.0" fill="rgb(239,73,17)" rx="2" ry="2" />
<text  x="1192.23" y="47.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1189.2" y="1349" width="0.4" height="15.0" fill="rgb(251,104,52)" rx="2" ry="2" />
<text  x="1192.17" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (4 samples, 0.02%)</title><rect x="207.6" y="1797" width="0.2" height="15.0" fill="rgb(210,160,17)" rx="2" ry="2" />
<text  x="210.57" y="1807.5" ></text>
</g>
<g >
<title>onmt::CaseModifier::extract_case_type (2 samples, 0.01%)</title><rect x="600.7" y="1909" width="0.2" height="15.0" fill="rgb(221,218,26)" rx="2" ry="2" />
<text  x="603.74" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="216.6" y="1173" width="0.2" height="15.0" fill="rgb(209,79,45)" rx="2" ry="2" />
<text  x="219.58" y="1183.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (2 samples, 0.01%)</title><rect x="876.5" y="2005" width="0.2" height="15.0" fill="rgb(208,92,50)" rx="2" ry="2" />
<text  x="879.54" y="2015.5" ></text>
</g>
<g >
<title>__interceptor_strlen (18 samples, 0.10%)</title><rect x="606.9" y="1893" width="1.1" height="15.0" fill="rgb(235,102,5)" rx="2" ry="2" />
<text  x="609.87" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.9" y="1445" width="0.1" height="15.0" fill="rgb(207,141,29)" rx="2" ry="2" />
<text  x="1191.91" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (87 samples, 0.47%)</title><rect x="187.0" y="1637" width="5.6" height="15.0" fill="rgb(227,23,51)" rx="2" ry="2" />
<text  x="189.99" y="1647.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::_M_transform@plt (2 samples, 0.01%)</title><rect x="1149.3" y="2053" width="0.1" height="15.0" fill="rgb(228,150,0)" rx="2" ry="2" />
<text  x="1152.28" y="2063.5" ></text>
</g>
<g >
<title>do_syscall_64 (3 samples, 0.02%)</title><rect x="79.4" y="1301" width="0.2" height="15.0" fill="rgb(223,51,22)" rx="2" ry="2" />
<text  x="82.42" y="1311.5" ></text>
</g>
<g >
<title>tgnews (18,461 samples, 100.00%)</title><rect x="10.0" y="2069" width="1180.0" height="15.0" fill="rgb(214,77,8)" rx="2" ry="2" />
<text  x="13.00" y="2079.5" >tgnews</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (72 samples, 0.39%)</title><rect x="202.8" y="1717" width="4.6" height="15.0" fill="rgb(235,54,53)" rx="2" ry="2" />
<text  x="205.78" y="1727.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (2 samples, 0.01%)</title><rect x="214.1" y="1685" width="0.1" height="15.0" fill="rgb(212,72,32)" rx="2" ry="2" />
<text  x="217.09" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (97 samples, 0.53%)</title><rect x="146.0" y="1717" width="6.2" height="15.0" fill="rgb(234,141,40)" rx="2" ry="2" />
<text  x="148.95" y="1727.5" ></text>
</g>
<g >
<title>DetectLanguage[abi:cxx11] (506 samples, 2.74%)</title><rect x="566.3" y="1973" width="32.3" height="15.0" fill="rgb(228,120,33)" rx="2" ry="2" />
<text  x="569.28" y="1983.5" >De..</text>
</g>
<g >
<title>[unknown] (565 samples, 3.06%)</title><rect x="54.3" y="1989" width="36.1" height="15.0" fill="rgb(206,26,4)" rx="2" ry="2" />
<text  x="57.30" y="1999.5" >[un..</text>
</g>
<g >
<title>onmt::AnnotatedToken::append (7 samples, 0.04%)</title><rect x="608.0" y="1893" width="0.5" height="15.0" fill="rgb(250,36,18)" rx="2" ry="2" />
<text  x="611.02" y="1903.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (2 samples, 0.01%)</title><rect x="214.5" y="1701" width="0.1" height="15.0" fill="rgb(249,15,7)" rx="2" ry="2" />
<text  x="217.48" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1188.9" y="1317" width="0.1" height="15.0" fill="rgb(245,3,2)" rx="2" ry="2" />
<text  x="1191.91" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt;,  (2 samples, 0.01%)</title><rect x="159.2" y="1957" width="0.1" height="15.0" fill="rgb(207,87,48)" rx="2" ry="2" />
<text  x="162.19" y="1967.5" ></text>
</g>
<g >
<title>__asan::AsanThread::stack_bottom (2 samples, 0.01%)</title><rect x="166.9" y="1573" width="0.1" height="15.0" fill="rgb(251,23,34)" rx="2" ry="2" />
<text  x="169.86" y="1583.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (1,277 samples, 6.92%)</title><rect x="1023.2" y="2053" width="81.6" height="15.0" fill="rgb(206,29,39)" rx="2" ry="2" />
<text  x="1026.17" y="2063.5" >__sanitiz..</text>
</g>
<g >
<title>[unknown] (457 samples, 2.48%)</title><rect x="54.3" y="1589" width="29.2" height="15.0" fill="rgb(215,178,18)" rx="2" ry="2" />
<text  x="57.30" y="1599.5" >[u..</text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_BracketMatcher (2 samples, 0.01%)</title><rect x="186.8" y="1621" width="0.1" height="15.0" fill="rgb(227,192,8)" rx="2" ry="2" />
<text  x="189.80" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3 samples, 0.02%)</title><rect x="184.6" y="1765" width="0.2" height="15.0" fill="rgb(231,229,39)" rx="2" ry="2" />
<text  x="187.63" y="1775.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::future&lt;std::result_of&lt;Annotate (2 samples, 0.01%)</title><rect x="27.5" y="2037" width="0.1" height="15.0" fill="rgb(243,154,18)" rx="2" ry="2" />
<text  x="30.51" y="2047.5" ></text>
</g>
<g >
<title>onmt::Tokenizer::finalize_tokens (61 samples, 0.33%)</title><rect x="600.9" y="1909" width="3.9" height="15.0" fill="rgb(230,125,47)" rx="2" ry="2" />
<text  x="603.86" y="1919.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::pushHash (18 samples, 0.10%)</title><rect x="315.9" y="1925" width="1.2" height="15.0" fill="rgb(207,77,14)" rx="2" ry="2" />
<text  x="318.91" y="1935.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="77.5" y="1189" width="0.1" height="15.0" fill="rgb(223,80,11)" rx="2" ry="2" />
<text  x="80.50" y="1199.5" ></text>
</g>
<g >
<title>clear_page_erms (19 samples, 0.10%)</title><rect x="24.2" y="1925" width="1.2" height="15.0" fill="rgb(226,185,20)" rx="2" ry="2" />
<text  x="27.19" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1188.4" y="885" width="0.4" height="15.0" fill="rgb(205,60,21)" rx="2" ry="2" />
<text  x="1191.40" y="895.5" ></text>
</g>
<g >
<title>generic_exec_single (2 samples, 0.01%)</title><rect x="1107.2" y="1749" width="0.2" height="15.0" fill="rgb(228,118,13)" rx="2" ry="2" />
<text  x="1110.23" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1189.2" y="1061" width="0.4" height="15.0" fill="rgb(230,85,10)" rx="2" ry="2" />
<text  x="1192.17" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1189.2" y="949" width="0.4" height="15.0" fill="rgb(238,154,51)" rx="2" ry="2" />
<text  x="1192.17" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="216.6" y="757" width="0.2" height="15.0" fill="rgb(206,158,21)" rx="2" ry="2" />
<text  x="219.65" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (67 samples, 0.36%)</title><rect x="136.0" y="1717" width="4.3" height="15.0" fill="rgb(253,178,26)" rx="2" ry="2" />
<text  x="138.98" y="1727.5" ></text>
</g>
<g >
<title>page_fault (89 samples, 0.48%)</title><rect x="21.7" y="2037" width="5.7" height="15.0" fill="rgb(249,218,33)" rx="2" ry="2" />
<text  x="24.70" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (167 samples, 0.90%)</title><rect x="159.6" y="1733" width="10.7" height="15.0" fill="rgb(247,159,26)" rx="2" ry="2" />
<text  x="162.63" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (5 samples, 0.03%)</title><rect x="159.6" y="1685" width="0.4" height="15.0" fill="rgb(212,161,0)" rx="2" ry="2" />
<text  x="162.63" y="1695.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (6 samples, 0.03%)</title><rect x="148.6" y="1637" width="0.4" height="15.0" fill="rgb(224,30,48)" rx="2" ry="2" />
<text  x="151.64" y="1647.5" ></text>
</g>
<g >
<title>fasttext::Vector::mul (6 samples, 0.03%)</title><rect x="533.6" y="1877" width="0.4" height="15.0" fill="rgb(215,66,21)" rx="2" ry="2" />
<text  x="536.62" y="1887.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (371 samples, 2.01%)</title><rect x="1124.9" y="2053" width="23.7" height="15.0" fill="rgb(216,58,43)" rx="2" ry="2" />
<text  x="1127.87" y="2063.5" >s..</text>
</g>
<g >
<title>[unknown] (331 samples, 1.79%)</title><rect x="54.3" y="1029" width="21.2" height="15.0" fill="rgb(229,58,44)" rx="2" ry="2" />
<text  x="57.30" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (6 samples, 0.03%)</title><rect x="152.2" y="1749" width="0.4" height="15.0" fill="rgb(229,103,11)" rx="2" ry="2" />
<text  x="155.22" y="1759.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (3 samples, 0.02%)</title><rect x="85.8" y="1717" width="0.2" height="15.0" fill="rgb(228,188,16)" rx="2" ry="2" />
<text  x="88.81" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (13,133 samples, 71.14%)</title><rect x="42.1" y="2053" width="839.4" height="15.0" fill="rgb(221,102,28)" rx="2" ry="2" />
<text  x="45.09" y="2063.5" >[unknown]</text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (3 samples, 0.02%)</title><rect x="85.6" y="1717" width="0.2" height="15.0" fill="rgb(241,165,14)" rx="2" ry="2" />
<text  x="88.62" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.9" y="709" width="0.1" height="15.0" fill="rgb(236,184,13)" rx="2" ry="2" />
<text  x="1191.91" y="719.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (2 samples, 0.01%)</title><rect x="180.0" y="1685" width="0.1" height="15.0" fill="rgb(211,122,45)" rx="2" ry="2" />
<text  x="182.96" y="1695.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (14 samples, 0.08%)</title><rect x="26.4" y="1957" width="0.9" height="15.0" fill="rgb(219,157,20)" rx="2" ry="2" />
<text  x="29.36" y="1967.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.01%)</title><rect x="194.0" y="1605" width="0.1" height="15.0" fill="rgb(227,37,54)" rx="2" ry="2" />
<text  x="197.02" y="1615.5" ></text>
</g>
<g >
<title>Eigen::internal::gebp_kernel&lt;float, float, long, Eigen::internal::blas_data_mapper&lt;float, long, 0, 0, 1&gt;, 8, 4, false, false&gt;::operator (130 samples, 0.70%)</title><rect x="488.5" y="1909" width="8.3" height="15.0" fill="rgb(208,65,32)" rx="2" ry="2" />
<text  x="491.49" y="1919.5" ></text>
</g>
<g >
<title>std::operator&gt;&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (6 samples, 0.03%)</title><rect x="500.0" y="1973" width="0.4" height="15.0" fill="rgb(244,33,31)" rx="2" ry="2" />
<text  x="503.00" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1188.4" y="1173" width="0.4" height="15.0" fill="rgb(241,7,43)" rx="2" ry="2" />
<text  x="1191.40" y="1183.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="89.1" y="1925" width="0.1" height="15.0" fill="rgb(250,129,22)" rx="2" ry="2" />
<text  x="92.07" y="1935.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="158.6" y="1749" width="0.1" height="15.0" fill="rgb(249,111,12)" rx="2" ry="2" />
<text  x="161.61" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (322 samples, 1.74%)</title><rect x="54.3" y="709" width="20.6" height="15.0" fill="rgb(248,214,27)" rx="2" ry="2" />
<text  x="57.30" y="719.5" ></text>
</g>
<g >
<title>__asan::Allocator::Allocate (17 samples, 0.09%)</title><rect x="94.1" y="2037" width="1.0" height="15.0" fill="rgb(231,150,6)" rx="2" ry="2" />
<text  x="97.05" y="2047.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::getSubwords (151 samples, 0.82%)</title><rect x="307.6" y="1957" width="9.7" height="15.0" fill="rgb(252,94,18)" rx="2" ry="2" />
<text  x="310.60" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="216.5" y="1701" width="0.3" height="15.0" fill="rgb(238,66,11)" rx="2" ry="2" />
<text  x="219.52" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (326 samples, 1.77%)</title><rect x="54.3" y="885" width="20.8" height="15.0" fill="rgb(215,96,39)" rx="2" ry="2" />
<text  x="57.30" y="895.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::basic_json (3 samples, 0.02%)</title><rect x="505.2" y="1973" width="0.2" height="15.0" fill="rgb(250,221,14)" rx="2" ry="2" />
<text  x="508.24" y="1983.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.02%)</title><rect x="190.8" y="1557" width="0.3" height="15.0" fill="rgb(212,182,16)" rx="2" ry="2" />
<text  x="193.83" y="1567.5" ></text>
</g>
<g >
<title>native_flush_tlb_others (26 samples, 0.14%)</title><rect x="942.1" y="1893" width="1.7" height="15.0" fill="rgb(233,218,30)" rx="2" ry="2" />
<text  x="945.12" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (5 samples, 0.03%)</title><rect x="157.8" y="1797" width="0.3" height="15.0" fill="rgb(254,166,6)" rx="2" ry="2" />
<text  x="160.78" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (82 samples, 0.44%)</title><rect x="130.7" y="1669" width="5.3" height="15.0" fill="rgb(248,1,0)" rx="2" ry="2" />
<text  x="133.74" y="1679.5" ></text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.02%)</title><rect x="177.8" y="1621" width="0.2" height="15.0" fill="rgb(245,17,24)" rx="2" ry="2" />
<text  x="180.79" y="1631.5" ></text>
</g>
<g >
<title>fasttext::FastText::createLoss (17 samples, 0.09%)</title><rect x="502.7" y="1973" width="1.1" height="15.0" fill="rgb(213,119,2)" rx="2" ry="2" />
<text  x="505.75" y="1983.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;, std::tuple&lt;&gt; &gt; (2 samples, 0.01%)</title><rect x="129.1" y="1925" width="0.1" height="15.0" fill="rgb(219,173,13)" rx="2" ry="2" />
<text  x="132.08" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="216.6" y="997" width="0.2" height="15.0" fill="rgb(233,50,6)" rx="2" ry="2" />
<text  x="219.65" y="1007.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (3 samples, 0.02%)</title><rect x="26.0" y="1925" width="0.2" height="15.0" fill="rgb(215,173,2)" rx="2" ry="2" />
<text  x="29.04" y="1935.5" ></text>
</g>
<g >
<title>do_page_fault (3 samples, 0.02%)</title><rect x="1104.5" y="2021" width="0.2" height="15.0" fill="rgb(214,16,32)" rx="2" ry="2" />
<text  x="1107.48" y="2031.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.02%)</title><rect x="79.4" y="1317" width="0.2" height="15.0" fill="rgb(243,144,15)" rx="2" ry="2" />
<text  x="82.42" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.9" y="949" width="0.1" height="15.0" fill="rgb(225,182,30)" rx="2" ry="2" />
<text  x="1191.91" y="959.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="139.8" y="1589" width="0.1" height="15.0" fill="rgb(231,0,11)" rx="2" ry="2" />
<text  x="142.82" y="1599.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (3 samples, 0.02%)</title><rect x="205.6" y="1637" width="0.2" height="15.0" fill="rgb(225,224,25)" rx="2" ry="2" />
<text  x="208.59" y="1647.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.02%)</title><rect x="139.1" y="1589" width="0.2" height="15.0" fill="rgb(237,208,29)" rx="2" ry="2" />
<text  x="142.05" y="1599.5" ></text>
</g>
<g >
<title>__lsan::MarkIndirectlyLeakedCb (5 samples, 0.03%)</title><rect x="508.0" y="2037" width="0.3" height="15.0" fill="rgb(241,116,43)" rx="2" ry="2" />
<text  x="510.99" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="216.5" y="1589" width="0.3" height="15.0" fill="rgb(211,169,14)" rx="2" ry="2" />
<text  x="219.52" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (585 samples, 3.17%)</title><rect x="54.3" y="2021" width="37.4" height="15.0" fill="rgb(215,215,9)" rx="2" ry="2" />
<text  x="57.30" y="2031.5" >[un..</text>
</g>
<g >
<title>std::locale::id::_M_id (3 samples, 0.02%)</title><rect x="192.1" y="1589" width="0.2" height="15.0" fill="rgb(211,98,50)" rx="2" ry="2" />
<text  x="195.10" y="1599.5" ></text>
</g>
<g >
<title>__asan::AsanTSDGet (2 samples, 0.01%)</title><rect x="247.8" y="1957" width="0.1" height="15.0" fill="rgb(221,76,37)" rx="2" ry="2" />
<text  x="250.78" y="1967.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (69 samples, 0.37%)</title><rect x="31.9" y="2021" width="4.4" height="15.0" fill="rgb(212,165,38)" rx="2" ry="2" />
<text  x="34.86" y="2031.5" ></text>
</g>
<g >
<title>__asan_memcpy (6 samples, 0.03%)</title><rect x="610.3" y="1877" width="0.3" height="15.0" fill="rgb(247,36,7)" rx="2" ry="2" />
<text  x="613.26" y="1887.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (9 samples, 0.05%)</title><rect x="818.4" y="1973" width="0.6" height="15.0" fill="rgb(218,180,49)" rx="2" ry="2" />
<text  x="821.38" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (5 samples, 0.03%)</title><rect x="158.4" y="1781" width="0.3" height="15.0" fill="rgb(242,112,19)" rx="2" ry="2" />
<text  x="161.42" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (316 samples, 1.71%)</title><rect x="54.3" y="213" width="20.2" height="15.0" fill="rgb(215,142,22)" rx="2" ry="2" />
<text  x="57.30" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1188.8" y="1813" width="0.2" height="15.0" fill="rgb(244,163,36)" rx="2" ry="2" />
<text  x="1191.85" y="1823.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::operator= (2 samples, 0.01%)</title><rect x="217.2" y="1941" width="0.1" height="15.0" fill="rgb(217,167,10)" rx="2" ry="2" />
<text  x="220.16" y="1951.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (2 samples, 0.01%)</title><rect x="462.1" y="1925" width="0.1" height="15.0" fill="rgb(254,107,49)" rx="2" ry="2" />
<text  x="465.10" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (82 samples, 0.44%)</title><rect x="209.2" y="1701" width="5.3" height="15.0" fill="rgb(239,120,40)" rx="2" ry="2" />
<text  x="212.23" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.9" y="773" width="0.1" height="15.0" fill="rgb(229,17,6)" rx="2" ry="2" />
<text  x="1191.91" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1189.2" y="53" width="0.4" height="15.0" fill="rgb(240,50,53)" rx="2" ry="2" />
<text  x="1192.23" y="63.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="202.7" y="1637" width="0.1" height="15.0" fill="rgb(207,5,28)" rx="2" ry="2" />
<text  x="205.65" y="1647.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (168 samples, 0.91%)</title><rect x="42.7" y="2037" width="10.8" height="15.0" fill="rgb(241,189,11)" rx="2" ry="2" />
<text  x="45.73" y="2047.5" ></text>
</g>
<g >
<title>ptep_clear_flush (4 samples, 0.02%)</title><rect x="53.2" y="1909" width="0.3" height="15.0" fill="rgb(244,71,50)" rx="2" ry="2" />
<text  x="56.21" y="1919.5" ></text>
</g>
<g >
<title>TDocument::operator= (3 samples, 0.02%)</title><rect x="506.1" y="1957" width="0.2" height="15.0" fill="rgb(234,226,46)" rx="2" ry="2" />
<text  x="509.07" y="1967.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (2 samples, 0.01%)</title><rect x="1104.7" y="2021" width="0.1" height="15.0" fill="rgb(243,170,16)" rx="2" ry="2" />
<text  x="1107.67" y="2031.5" ></text>
</g>
<g >
<title>onmt::unicode::is_letter (9 samples, 0.05%)</title><rect x="771.7" y="1893" width="0.5" height="15.0" fill="rgb(243,41,54)" rx="2" ry="2" />
<text  x="774.65" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt;,  (13 samples, 0.07%)</title><rect x="216.5" y="1957" width="0.8" height="15.0" fill="rgb(251,182,46)" rx="2" ry="2" />
<text  x="219.46" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (49 samples, 0.27%)</title><rect x="806.8" y="2021" width="3.1" height="15.0" fill="rgb(242,108,12)" rx="2" ry="2" />
<text  x="809.81" y="2031.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (5 samples, 0.03%)</title><rect x="881.1" y="2005" width="0.4" height="15.0" fill="rgb(214,57,16)" rx="2" ry="2" />
<text  x="884.15" y="2015.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotPut (8 samples, 0.04%)</title><rect x="1179.7" y="2037" width="0.5" height="15.0" fill="rgb(220,199,9)" rx="2" ry="2" />
<text  x="1182.71" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1189.2" y="997" width="0.4" height="15.0" fill="rgb(242,133,16)" rx="2" ry="2" />
<text  x="1192.17" y="1007.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int&gt; (11 samples, 0.06%)</title><rect x="316.4" y="1909" width="0.7" height="15.0" fill="rgb(206,10,15)" rx="2" ry="2" />
<text  x="319.36" y="1919.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.01%)</title><rect x="133.9" y="1557" width="0.1" height="15.0" fill="rgb(253,167,15)" rx="2" ry="2" />
<text  x="136.87" y="1567.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (3 samples, 0.02%)</title><rect x="88.1" y="1877" width="0.2" height="15.0" fill="rgb(234,171,2)" rx="2" ry="2" />
<text  x="91.11" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1188.8" y="1925" width="0.2" height="15.0" fill="rgb(215,52,3)" rx="2" ry="2" />
<text  x="1191.85" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (70 samples, 0.38%)</title><rect x="170.5" y="1733" width="4.5" height="15.0" fill="rgb(217,31,18)" rx="2" ry="2" />
<text  x="173.50" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (333 samples, 1.80%)</title><rect x="54.3" y="1061" width="21.3" height="15.0" fill="rgb(244,208,23)" rx="2" ry="2" />
<text  x="57.30" y="1071.5" >[..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1188.5" y="181" width="0.3" height="15.0" fill="rgb(228,95,14)" rx="2" ry="2" />
<text  x="1191.47" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.9" y="1205" width="0.1" height="15.0" fill="rgb(249,76,15)" rx="2" ry="2" />
<text  x="1191.91" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.05%)</title><rect x="216.5" y="1765" width="0.7" height="15.0" fill="rgb(219,197,31)" rx="2" ry="2" />
<text  x="219.52" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (78 samples, 0.42%)</title><rect x="152.7" y="1781" width="5.0" height="15.0" fill="rgb(250,40,20)" rx="2" ry="2" />
<text  x="155.73" y="1791.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (8 samples, 0.04%)</title><rect x="727.0" y="1749" width="0.5" height="15.0" fill="rgb(238,58,48)" rx="2" ry="2" />
<text  x="730.04" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (8 samples, 0.04%)</title><rect x="1189.0" y="1957" width="0.6" height="15.0" fill="rgb(253,109,36)" rx="2" ry="2" />
<text  x="1192.04" y="1967.5" ></text>
</g>
<g >
<title>onmt::unicode::is_letter (202 samples, 1.09%)</title><rect x="746.1" y="1877" width="13.0" height="15.0" fill="rgb(226,196,48)" rx="2" ry="2" />
<text  x="749.15" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (65 samples, 0.35%)</title><rect x="160.0" y="1605" width="4.2" height="15.0" fill="rgb(209,202,10)" rx="2" ry="2" />
<text  x="163.02" y="1615.5" ></text>
</g>
<g >
<title>__asan::asan_memalign (3 samples, 0.02%)</title><rect x="200.5" y="1605" width="0.2" height="15.0" fill="rgb(251,37,43)" rx="2" ry="2" />
<text  x="203.54" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="216.5" y="1605" width="0.3" height="15.0" fill="rgb(235,164,18)" rx="2" ry="2" />
<text  x="219.52" y="1615.5" ></text>
</g>
<g >
<title>onmt::get_alphabet_id (5 samples, 0.03%)</title><rect x="686.6" y="1877" width="0.3" height="15.0" fill="rgb(252,111,1)" rx="2" ry="2" />
<text  x="689.58" y="1887.5" ></text>
</g>
<g >
<title>__do_munmap (2 samples, 0.01%)</title><rect x="81.5" y="1397" width="0.2" height="15.0" fill="rgb(232,28,22)" rx="2" ry="2" />
<text  x="84.52" y="1407.5" ></text>
</g>
<g >
<title>zap_page_range (16 samples, 0.09%)</title><rect x="508.9" y="1973" width="1.0" height="15.0" fill="rgb(227,176,41)" rx="2" ry="2" />
<text  x="511.88" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (2 samples, 0.01%)</title><rect x="140.3" y="1733" width="0.1" height="15.0" fill="rgb(253,11,23)" rx="2" ry="2" />
<text  x="143.27" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1188.4" y="789" width="0.4" height="15.0" fill="rgb(205,165,27)" rx="2" ry="2" />
<text  x="1191.40" y="799.5" ></text>
</g>
<g >
<title>do_page_fault (3 samples, 0.02%)</title><rect x="1022.9" y="2021" width="0.2" height="15.0" fill="rgb(217,102,45)" rx="2" ry="2" />
<text  x="1025.92" y="2031.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (2 samples, 0.01%)</title><rect x="599.5" y="1925" width="0.1" height="15.0" fill="rgb(221,210,28)" rx="2" ry="2" />
<text  x="602.46" y="1935.5" ></text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::scan (6 samples, 0.03%)</title><rect x="121.4" y="1941" width="0.4" height="15.0" fill="rgb(237,84,13)" rx="2" ry="2" />
<text  x="124.41" y="1951.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (2 samples, 0.01%)</title><rect x="793.5" y="1957" width="0.1" height="15.0" fill="rgb(232,42,11)" rx="2" ry="2" />
<text  x="796.51" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (6 samples, 0.03%)</title><rect x="152.2" y="1765" width="0.4" height="15.0" fill="rgb(223,115,42)" rx="2" ry="2" />
<text  x="155.22" y="1775.5" ></text>
</g>
<g >
<title>fasttext::Vector::Vector (2 samples, 0.01%)</title><rect x="322.0" y="1973" width="0.1" height="15.0" fill="rgb(211,36,4)" rx="2" ry="2" />
<text  x="324.99" y="1983.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int&gt; (2 samples, 0.01%)</title><rect x="501.7" y="1877" width="0.2" height="15.0" fill="rgb(212,119,22)" rx="2" ry="2" />
<text  x="504.73" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="216.5" y="1493" width="0.3" height="15.0" fill="rgb(230,52,48)" rx="2" ry="2" />
<text  x="219.52" y="1503.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (4 samples, 0.02%)</title><rect x="172.2" y="1589" width="0.3" height="15.0" fill="rgb(250,64,26)" rx="2" ry="2" />
<text  x="175.23" y="1599.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (3 samples, 0.02%)</title><rect x="800.9" y="1925" width="0.2" height="15.0" fill="rgb(239,100,25)" rx="2" ry="2" />
<text  x="803.93" y="1935.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (6 samples, 0.03%)</title><rect x="52.6" y="1893" width="0.4" height="15.0" fill="rgb(240,113,39)" rx="2" ry="2" />
<text  x="55.57" y="1903.5" ></text>
</g>
<g >
<title>do_wp_page (14 samples, 0.08%)</title><rect x="52.6" y="1941" width="0.9" height="15.0" fill="rgb(234,206,12)" rx="2" ry="2" />
<text  x="55.57" y="1951.5" ></text>
</g>
<g >
<title>__interceptor_strlen (2 samples, 0.01%)</title><rect x="1002.8" y="2053" width="0.1" height="15.0" fill="rgb(226,15,11)" rx="2" ry="2" />
<text  x="1005.78" y="2063.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::json_value::destroy (3 samples, 0.02%)</title><rect x="504.0" y="1989" width="0.2" height="15.0" fill="rgb(224,112,47)" rx="2" ry="2" />
<text  x="507.03" y="1999.5" ></text>
</g>
<g >
<title>ptep_clear_flush (33 samples, 0.18%)</title><rect x="941.7" y="1925" width="2.1" height="15.0" fill="rgb(228,102,15)" rx="2" ry="2" />
<text  x="944.68" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1189.2" y="1685" width="0.4" height="15.0" fill="rgb(211,39,47)" rx="2" ry="2" />
<text  x="1192.17" y="1695.5" ></text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::next_byte_in_range (29 samples, 0.16%)</title><rect x="127.2" y="1925" width="1.8" height="15.0" fill="rgb(238,167,43)" rx="2" ry="2" />
<text  x="130.16" y="1935.5" ></text>
</g>
<g >
<title>__sanitizer::internal_munmap (5 samples, 0.03%)</title><rect x="804.3" y="2037" width="0.3" height="15.0" fill="rgb(253,100,36)" rx="2" ry="2" />
<text  x="807.25" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (87 samples, 0.47%)</title><rect x="187.0" y="1621" width="5.6" height="15.0" fill="rgb(218,76,2)" rx="2" ry="2" />
<text  x="189.99" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (7 samples, 0.04%)</title><rect x="152.2" y="1797" width="0.4" height="15.0" fill="rgb(227,55,26)" rx="2" ry="2" />
<text  x="155.15" y="1807.5" ></text>
</g>
<g >
<title>__pthread_once (2 samples, 0.01%)</title><rect x="877.4" y="2005" width="0.1" height="15.0" fill="rgb(219,7,52)" rx="2" ry="2" />
<text  x="880.37" y="2015.5" ></text>
</g>
<g >
<title>__asan::GetMallocContextSize (3 samples, 0.02%)</title><rect x="248.1" y="1957" width="0.2" height="15.0" fill="rgb(233,91,41)" rx="2" ry="2" />
<text  x="251.10" y="1967.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (8 samples, 0.04%)</title><rect x="1118.6" y="2053" width="0.5" height="15.0" fill="rgb(229,33,24)" rx="2" ry="2" />
<text  x="1121.60" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="185.8" y="1605" width="0.1" height="15.0" fill="rgb(214,31,32)" rx="2" ry="2" />
<text  x="188.78" y="1615.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.01%)</title><rect x="504.1" y="1973" width="0.1" height="15.0" fill="rgb(250,72,14)" rx="2" ry="2" />
<text  x="507.09" y="1983.5" ></text>
</g>
<g >
<title>__pthread_getspecific (3 samples, 0.02%)</title><rect x="162.6" y="1541" width="0.2" height="15.0" fill="rgb(228,197,35)" rx="2" ry="2" />
<text  x="165.57" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (73 samples, 0.40%)</title><rect x="198.1" y="1717" width="4.7" height="15.0" fill="rgb(235,140,20)" rx="2" ry="2" />
<text  x="201.11" y="1727.5" ></text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (4 samples, 0.02%)</title><rect x="26.0" y="1957" width="0.2" height="15.0" fill="rgb(231,28,50)" rx="2" ry="2" />
<text  x="28.98" y="1967.5" ></text>
</g>
<g >
<title>fasttext::ProductQuantizer::addcode (78 samples, 0.42%)</title><rect x="591.3" y="1893" width="5.0" height="15.0" fill="rgb(245,179,24)" rx="2" ry="2" />
<text  x="594.34" y="1903.5" ></text>
</g>
<g >
<title>__asan::AsanTSDGet (2 samples, 0.01%)</title><rect x="200.0" y="1605" width="0.1" height="15.0" fill="rgb(247,7,51)" rx="2" ry="2" />
<text  x="202.97" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (66 samples, 0.36%)</title><rect x="198.4" y="1637" width="4.2" height="15.0" fill="rgb(228,139,1)" rx="2" ry="2" />
<text  x="201.37" y="1647.5" ></text>
</g>
<g >
<title>__do_page_fault (25 samples, 0.14%)</title><rect x="486.9" y="1893" width="1.6" height="15.0" fill="rgb(241,224,15)" rx="2" ry="2" />
<text  x="489.90" y="1903.5" ></text>
</g>
<g >
<title>__asan::CanPoisonMemory (12 samples, 0.07%)</title><rect x="966.3" y="2053" width="0.8" height="15.0" fill="rgb(233,185,37)" rx="2" ry="2" />
<text  x="969.35" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="216.6" y="933" width="0.2" height="15.0" fill="rgb(235,29,19)" rx="2" ry="2" />
<text  x="219.65" y="943.5" ></text>
</g>
<g >
<title>fasttext::DenseMatrix::dotRow (6 samples, 0.03%)</title><rect x="533.6" y="1861" width="0.4" height="15.0" fill="rgb(245,93,22)" rx="2" ry="2" />
<text  x="536.62" y="1871.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (6 samples, 0.03%)</title><rect x="488.0" y="1845" width="0.4" height="15.0" fill="rgb(213,170,9)" rx="2" ry="2" />
<text  x="491.05" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (2 samples, 0.01%)</title><rect x="215.8" y="1765" width="0.1" height="15.0" fill="rgb(222,148,12)" rx="2" ry="2" />
<text  x="218.75" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="185.8" y="1685" width="0.1" height="15.0" fill="rgb(248,90,25)" rx="2" ry="2" />
<text  x="188.78" y="1695.5" ></text>
</g>
<g >
<title>__interceptor_memcmp (6 samples, 0.03%)</title><rect x="525.1" y="1909" width="0.3" height="15.0" fill="rgb(210,224,0)" rx="2" ry="2" />
<text  x="528.06" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (2 samples, 0.01%)</title><rect x="216.0" y="1829" width="0.1" height="15.0" fill="rgb(209,220,5)" rx="2" ry="2" />
<text  x="219.01" y="1839.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (3 samples, 0.02%)</title><rect x="182.3" y="1653" width="0.2" height="15.0" fill="rgb(218,164,54)" rx="2" ry="2" />
<text  x="185.26" y="1663.5" ></text>
</g>
<g >
<title>futex_wake (13 samples, 0.07%)</title><rect x="28.2" y="1925" width="0.8" height="15.0" fill="rgb(236,134,26)" rx="2" ry="2" />
<text  x="31.22" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.9" y="389" width="0.1" height="15.0" fill="rgb(239,77,45)" rx="2" ry="2" />
<text  x="1191.91" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (69 samples, 0.37%)</title><rect x="170.5" y="1637" width="4.4" height="15.0" fill="rgb(225,28,27)" rx="2" ry="2" />
<text  x="173.50" y="1647.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::Unwind (6 samples, 0.03%)</title><rect x="635.7" y="1861" width="0.4" height="15.0" fill="rgb(229,160,4)" rx="2" ry="2" />
<text  x="638.70" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (410 samples, 2.22%)</title><rect x="54.3" y="1413" width="26.2" height="15.0" fill="rgb(210,169,31)" rx="2" ry="2" />
<text  x="57.30" y="1423.5" >[..</text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (5 samples, 0.03%)</title><rect x="81.7" y="1493" width="0.3" height="15.0" fill="rgb(223,62,30)" rx="2" ry="2" />
<text  x="84.65" y="1503.5" ></text>
</g>
<g >
<title>wake_up_q (13 samples, 0.07%)</title><rect x="28.2" y="1909" width="0.8" height="15.0" fill="rgb(208,102,16)" rx="2" ry="2" />
<text  x="31.22" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1188.9" y="117" width="0.1" height="15.0" fill="rgb(231,50,45)" rx="2" ry="2" />
<text  x="1191.91" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1188.9" y="1125" width="0.1" height="15.0" fill="rgb(207,98,53)" rx="2" ry="2" />
<text  x="1191.91" y="1135.5" ></text>
</g>
<g >
<title>do_syscall_64 (3 samples, 0.02%)</title><rect x="1109.6" y="2005" width="0.2" height="15.0" fill="rgb(207,69,8)" rx="2" ry="2" />
<text  x="1112.59" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1189.2" y="341" width="0.4" height="15.0" fill="rgb(219,36,23)" rx="2" ry="2" />
<text  x="1192.17" y="351.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="78.7" y="1301" width="0.1" height="15.0" fill="rgb(229,216,49)" rx="2" ry="2" />
<text  x="81.71" y="1311.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (2 samples, 0.01%)</title><rect x="181.8" y="1653" width="0.1" height="15.0" fill="rgb(206,140,7)" rx="2" ry="2" />
<text  x="184.81" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="216.6" y="661" width="0.2" height="15.0" fill="rgb(214,114,47)" rx="2" ry="2" />
<text  x="219.65" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (463 samples, 2.51%)</title><rect x="186.5" y="1909" width="29.6" height="15.0" fill="rgb(232,49,10)" rx="2" ry="2" />
<text  x="189.54" y="1919.5" >st..</text>
</g>
<g >
<title>__asan::AsanThread::stack_top (2 samples, 0.01%)</title><rect x="620.5" y="1877" width="0.1" height="15.0" fill="rgb(240,20,27)" rx="2" ry="2" />
<text  x="623.49" y="1887.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;std::__detail::_State&lt;char&gt; const*, std::__detail::_State&lt;char&gt;*&gt; (3 samples, 0.02%)</title><rect x="152.4" y="1717" width="0.2" height="15.0" fill="rgb(243,160,40)" rx="2" ry="2" />
<text  x="155.41" y="1727.5" ></text>
</g>
<g >
<title>page_fault (9 samples, 0.05%)</title><rect x="53.7" y="2005" width="0.6" height="15.0" fill="rgb(239,219,29)" rx="2" ry="2" />
<text  x="56.72" y="2015.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::operator[] (4 samples, 0.02%)</title><rect x="129.0" y="1941" width="0.3" height="15.0" fill="rgb(245,133,30)" rx="2" ry="2" />
<text  x="132.02" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="185.8" y="1701" width="0.1" height="15.0" fill="rgb(233,67,18)" rx="2" ry="2" />
<text  x="188.78" y="1711.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (33 samples, 0.18%)</title><rect x="711.1" y="1861" width="2.1" height="15.0" fill="rgb(230,167,45)" rx="2" ry="2" />
<text  x="714.06" y="1871.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; const&amp;&gt; (2 samples, 0.01%)</title><rect x="505.1" y="1941" width="0.1" height="15.0" fill="rgb(240,3,2)" rx="2" ry="2" />
<text  x="508.11" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1188.4" y="917" width="0.4" height="15.0" fill="rgb(219,224,19)" rx="2" ry="2" />
<text  x="1191.40" y="927.5" ></text>
</g>
<g >
<title>fasttext::Loss::predict (9 samples, 0.05%)</title><rect x="533.4" y="1909" width="0.6" height="15.0" fill="rgb(254,54,7)" rx="2" ry="2" />
<text  x="536.43" y="1919.5" ></text>
</g>
<g >
<title>__asan::GetMallocContextSize (7 samples, 0.04%)</title><rect x="1158.7" y="2037" width="0.5" height="15.0" fill="rgb(235,188,22)" rx="2" ry="2" />
<text  x="1161.74" y="2047.5" ></text>
</g>
<g >
<title>native_flush_tlb_others (2 samples, 0.01%)</title><rect x="54.0" y="1861" width="0.2" height="15.0" fill="rgb(243,166,24)" rx="2" ry="2" />
<text  x="57.04" y="1871.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="75.8" y="1125" width="0.2" height="15.0" fill="rgb(242,108,14)" rx="2" ry="2" />
<text  x="78.84" y="1135.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt;@plt (2 samples, 0.01%)</title><rect x="791.5" y="1893" width="0.1" height="15.0" fill="rgb(240,13,26)" rx="2" ry="2" />
<text  x="794.47" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1188.4" y="373" width="0.4" height="15.0" fill="rgb(225,78,30)" rx="2" ry="2" />
<text  x="1191.40" y="383.5" ></text>
</g>
<g >
<title>__asan::AsanTSDGet (9 samples, 0.05%)</title><rect x="111.8" y="2037" width="0.6" height="15.0" fill="rgb(245,222,18)" rx="2" ry="2" />
<text  x="114.82" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1189.2" y="405" width="0.4" height="15.0" fill="rgb(230,41,10)" rx="2" ry="2" />
<text  x="1192.17" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="185.8" y="1493" width="0.1" height="15.0" fill="rgb(250,3,17)" rx="2" ry="2" />
<text  x="188.78" y="1503.5" ></text>
</g>
<g >
<title>unmap_region (6 samples, 0.03%)</title><rect x="1107.2" y="1909" width="0.4" height="15.0" fill="rgb(213,208,17)" rx="2" ry="2" />
<text  x="1110.23" y="1919.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::do_tolower (2 samples, 0.01%)</title><rect x="145.4" y="1621" width="0.1" height="15.0" fill="rgb(239,170,16)" rx="2" ry="2" />
<text  x="148.38" y="1631.5" ></text>
</g>
<g >
<title>__do_munmap (6 samples, 0.03%)</title><rect x="803.4" y="1909" width="0.4" height="15.0" fill="rgb(246,102,50)" rx="2" ry="2" />
<text  x="806.42" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (406 samples, 2.20%)</title><rect x="159.6" y="1909" width="25.9" height="15.0" fill="rgb(209,139,32)" rx="2" ry="2" />
<text  x="162.57" y="1919.5" >s..</text>
</g>
<g >
<title>fasttext::Matrix::size (5 samples, 0.03%)</title><rect x="472.7" y="1941" width="0.3" height="15.0" fill="rgb(215,51,5)" rx="2" ry="2" />
<text  x="475.71" y="1951.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (12 samples, 0.07%)</title><rect x="311.4" y="1941" width="0.8" height="15.0" fill="rgb(239,160,10)" rx="2" ry="2" />
<text  x="314.44" y="1951.5" ></text>
</g>
<g >
<title>fasttext::ProductQuantizer::get_centroids (4 samples, 0.02%)</title><rect x="597.4" y="1877" width="0.3" height="15.0" fill="rgb(225,149,7)" rx="2" ry="2" />
<text  x="600.41" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (12 samples, 0.07%)</title><rect x="158.3" y="1877" width="0.8" height="15.0" fill="rgb(206,87,54)" rx="2" ry="2" />
<text  x="161.29" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1188.4" y="1301" width="0.4" height="15.0" fill="rgb(243,176,6)" rx="2" ry="2" />
<text  x="1191.40" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (74 samples, 0.40%)</title><rect x="175.0" y="1701" width="4.8" height="15.0" fill="rgb(243,222,6)" rx="2" ry="2" />
<text  x="178.04" y="1711.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (2 samples, 0.01%)</title><rect x="223.8" y="1941" width="0.1" height="15.0" fill="rgb(229,1,22)" rx="2" ry="2" />
<text  x="226.81" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.9" y="485" width="0.1" height="15.0" fill="rgb(252,15,17)" rx="2" ry="2" />
<text  x="1191.91" y="495.5" ></text>
</g>
<g >
<title>fasttext::FastText::getWordVector (9 samples, 0.05%)</title><rect x="805.8" y="2037" width="0.6" height="15.0" fill="rgb(207,96,14)" rx="2" ry="2" />
<text  x="808.79" y="2047.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;std::unique_ptr&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;  (4,396 samples, 23.81%)</title><rect x="513.0" y="2005" width="281.0" height="15.0" fill="rgb(237,105,17)" rx="2" ry="2" />
<text  x="515.97" y="2015.5" >std::_Function_handler&lt;std::unique_pt..</text>
</g>
<g >
<title>vfs_read (2 samples, 0.01%)</title><rect x="119.7" y="1957" width="0.1" height="15.0" fill="rgb(221,107,19)" rx="2" ry="2" />
<text  x="122.68" y="1967.5" ></text>
</g>
<g >
<title>unmapped_area_topdown (3 samples, 0.02%)</title><rect x="1107.0" y="1909" width="0.2" height="15.0" fill="rgb(226,108,46)" rx="2" ry="2" />
<text  x="1109.97" y="1919.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;, std::tuple&lt;&gt; &gt; (2 samples, 0.01%)</title><rect x="812.2" y="2037" width="0.2" height="15.0" fill="rgb(246,229,13)" rx="2" ry="2" />
<text  x="815.24" y="2047.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.03%)</title><rect x="1108.2" y="2053" width="0.4" height="15.0" fill="rgb(214,210,17)" rx="2" ry="2" />
<text  x="1111.18" y="2063.5" ></text>
</g>
<g >
<title>__interceptor_strlen (2 samples, 0.01%)</title><rect x="626.6" y="1861" width="0.1" height="15.0" fill="rgb(227,74,4)" rx="2" ry="2" />
<text  x="629.56" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (97 samples, 0.53%)</title><rect x="146.0" y="1733" width="6.2" height="15.0" fill="rgb(254,8,44)" rx="2" ry="2" />
<text  x="148.95" y="1743.5" ></text>
</g>
<g >
<title>arch_tlb_finish_mmu (2 samples, 0.01%)</title><rect x="87.5" y="1701" width="0.2" height="15.0" fill="rgb(246,16,39)" rx="2" ry="2" />
<text  x="90.53" y="1711.5" ></text>
</g>
<g >
<title>do_page_fault (6 samples, 0.03%)</title><rect x="503.4" y="1893" width="0.4" height="15.0" fill="rgb(210,72,54)" rx="2" ry="2" />
<text  x="506.39" y="1903.5" ></text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.02%)</title><rect x="173.0" y="1589" width="0.2" height="15.0" fill="rgb(224,13,14)" rx="2" ry="2" />
<text  x="175.99" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1188.4" y="773" width="0.4" height="15.0" fill="rgb(220,20,11)" rx="2" ry="2" />
<text  x="1191.40" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (4 samples, 0.02%)</title><rect x="207.6" y="1765" width="0.2" height="15.0" fill="rgb(252,204,21)" rx="2" ry="2" />
<text  x="210.57" y="1775.5" ></text>
</g>
<g >
<title>std::locale::locale (2 samples, 0.01%)</title><rect x="326.8" y="1989" width="0.1" height="15.0" fill="rgb(229,148,40)" rx="2" ry="2" />
<text  x="329.78" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (2 samples, 0.01%)</title><rect x="158.3" y="1813" width="0.1" height="15.0" fill="rgb(227,68,5)" rx="2" ry="2" />
<text  x="161.29" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1188.4" y="1125" width="0.4" height="15.0" fill="rgb(232,20,2)" rx="2" ry="2" />
<text  x="1191.40" y="1135.5" ></text>
</g>
<g >
<title>release_pages (4 samples, 0.02%)</title><rect x="804.3" y="1845" width="0.3" height="15.0" fill="rgb(218,108,51)" rx="2" ry="2" />
<text  x="807.32" y="1855.5" ></text>
</g>
<g >
<title>fasttext::ProductQuantizer::addcode (455 samples, 2.46%)</title><rect x="534.4" y="1893" width="29.1" height="15.0" fill="rgb(238,211,2)" rx="2" ry="2" />
<text  x="537.39" y="1903.5" >fa..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="216.9" y="1717" width="0.2" height="15.0" fill="rgb(249,134,34)" rx="2" ry="2" />
<text  x="219.90" y="1727.5" ></text>
</g>
<g >
<title>generic_exec_single (17 samples, 0.09%)</title><rect x="942.6" y="1813" width="1.1" height="15.0" fill="rgb(244,226,7)" rx="2" ry="2" />
<text  x="945.57" y="1823.5" ></text>
</g>
<g >
<title>__handle_mm_fault (18 samples, 0.10%)</title><rect x="487.3" y="1861" width="1.2" height="15.0" fill="rgb(233,13,49)" rx="2" ry="2" />
<text  x="490.34" y="1871.5" ></text>
</g>
<g >
<title>strlen@plt (8 samples, 0.04%)</title><rect x="791.6" y="1893" width="0.5" height="15.0" fill="rgb(253,65,34)" rx="2" ry="2" />
<text  x="794.60" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.9" y="997" width="0.1" height="15.0" fill="rgb(241,135,53)" rx="2" ry="2" />
<text  x="1191.91" y="1007.5" ></text>
</g>
<g >
<title>__madvise (18 samples, 0.10%)</title><rect x="508.8" y="2037" width="1.2" height="15.0" fill="rgb(240,35,53)" rx="2" ry="2" />
<text  x="511.82" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (5 samples, 0.03%)</title><rect x="185.2" y="1813" width="0.3" height="15.0" fill="rgb(218,35,7)" rx="2" ry="2" />
<text  x="188.20" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (318 samples, 1.72%)</title><rect x="54.3" y="469" width="20.3" height="15.0" fill="rgb(226,195,20)" rx="2" ry="2" />
<text  x="57.30" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (72 samples, 0.39%)</title><rect x="193.1" y="1621" width="4.6" height="15.0" fill="rgb(226,91,43)" rx="2" ry="2" />
<text  x="196.13" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (111 samples, 0.60%)</title><rect x="207.9" y="1797" width="7.1" height="15.0" fill="rgb(232,134,23)" rx="2" ry="2" />
<text  x="210.89" y="1807.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (2 samples, 0.01%)</title><rect x="685.9" y="1781" width="0.1" height="15.0" fill="rgb(244,149,48)" rx="2" ry="2" />
<text  x="688.87" y="1791.5" ></text>
</g>
<g >
<title>fasttext::Vector::mul (13 samples, 0.07%)</title><rect x="320.6" y="1957" width="0.8" height="15.0" fill="rgb(206,9,28)" rx="2" ry="2" />
<text  x="323.58" y="1967.5" ></text>
</g>
<g >
<title>__handle_mm_fault (83 samples, 0.45%)</title><rect x="938.5" y="1973" width="5.3" height="15.0" fill="rgb(220,29,40)" rx="2" ry="2" />
<text  x="941.48" y="1983.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::create&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (4 samples, 0.02%)</title><rect x="806.5" y="2037" width="0.2" height="15.0" fill="rgb(216,123,9)" rx="2" ry="2" />
<text  x="809.49" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (524 samples, 2.84%)</title><rect x="54.3" y="1861" width="33.5" height="15.0" fill="rgb(248,116,37)" rx="2" ry="2" />
<text  x="57.30" y="1871.5" >[u..</text>
</g>
<g >
<title>fasttext::FastText::predictLine (495 samples, 2.68%)</title><rect x="566.6" y="1941" width="31.6" height="15.0" fill="rgb(241,115,32)" rx="2" ry="2" />
<text  x="569.60" y="1951.5" >fa..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.9" y="1685" width="0.1" height="15.0" fill="rgb(249,158,4)" rx="2" ry="2" />
<text  x="1191.91" y="1695.5" ></text>
</g>
<g >
<title>std::__merge_sort_with_buffer&lt;__gnu_cxx::__normal_iterator&lt;TDocument*, std::vector&lt;TDocument, std::allocator&lt;TDocument&gt; &gt; &gt;, TDocument*, __gnu_cxx::__ops::_Iter_comp_iter&lt;main::$_1&gt; &gt; (5 samples, 0.03%)</title><rect x="505.9" y="1989" width="0.4" height="15.0" fill="rgb(244,73,46)" rx="2" ry="2" />
<text  x="508.94" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1189.2" y="1429" width="0.4" height="15.0" fill="rgb(242,223,34)" rx="2" ry="2" />
<text  x="1192.17" y="1439.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::set (31 samples, 0.17%)</title><rect x="608.7" y="1893" width="1.9" height="15.0" fill="rgb(206,155,13)" rx="2" ry="2" />
<text  x="611.66" y="1903.5" ></text>
</g>
<g >
<title>__pthread_getspecific (101 samples, 0.55%)</title><rect x="1003.9" y="2053" width="6.4" height="15.0" fill="rgb(250,161,38)" rx="2" ry="2" />
<text  x="1006.87" y="2063.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (11 samples, 0.06%)</title><rect x="466.0" y="1925" width="0.7" height="15.0" fill="rgb(244,118,39)" rx="2" ry="2" />
<text  x="468.99" y="1935.5" ></text>
</g>
<g >
<title>do_mmap (13 samples, 0.07%)</title><rect x="1107.0" y="1957" width="0.8" height="15.0" fill="rgb(226,156,24)" rx="2" ry="2" />
<text  x="1109.97" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (2 samples, 0.01%)</title><rect x="185.1" y="1765" width="0.1" height="15.0" fill="rgb(239,207,40)" rx="2" ry="2" />
<text  x="188.07" y="1775.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (11 samples, 0.06%)</title><rect x="994.4" y="2053" width="0.7" height="15.0" fill="rgb(238,61,7)" rx="2" ry="2" />
<text  x="997.41" y="2063.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (4 samples, 0.02%)</title><rect x="207.6" y="1733" width="0.2" height="15.0" fill="rgb(223,73,20)" rx="2" ry="2" />
<text  x="210.57" y="1743.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (2 samples, 0.01%)</title><rect x="137.9" y="1589" width="0.1" height="15.0" fill="rgb(245,229,25)" rx="2" ry="2" />
<text  x="140.90" y="1599.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (2 samples, 0.01%)</title><rect x="80.4" y="1397" width="0.1" height="15.0" fill="rgb(213,144,48)" rx="2" ry="2" />
<text  x="83.37" y="1407.5" ></text>
</g>
<g >
<title>__do_page_fault (3 samples, 0.02%)</title><rect x="1104.5" y="2005" width="0.2" height="15.0" fill="rgb(253,38,5)" rx="2" ry="2" />
<text  x="1107.48" y="2015.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (4 samples, 0.02%)</title><rect x="310.4" y="1941" width="0.3" height="15.0" fill="rgb(225,31,11)" rx="2" ry="2" />
<text  x="313.42" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_try_char (2 samples, 0.01%)</title><rect x="215.0" y="1717" width="0.1" height="15.0" fill="rgb(208,212,33)" rx="2" ry="2" />
<text  x="217.99" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1189.2" y="821" width="0.4" height="15.0" fill="rgb(250,122,21)" rx="2" ry="2" />
<text  x="1192.17" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.9" y="1541" width="0.1" height="15.0" fill="rgb(244,9,54)" rx="2" ry="2" />
<text  x="1191.91" y="1551.5" ></text>
</g>
<g >
<title>std::vector&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::allocator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;::vector (2 samples, 0.01%)</title><rect x="505.1" y="1893" width="0.1" height="15.0" fill="rgb(234,136,54)" rx="2" ry="2" />
<text  x="508.11" y="1903.5" ></text>
</g>
<g >
<title>handle_mm_fault (9 samples, 0.05%)</title><rect x="681.3" y="1813" width="0.6" height="15.0" fill="rgb(225,165,15)" rx="2" ry="2" />
<text  x="684.34" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1189.2" y="661" width="0.4" height="15.0" fill="rgb(232,62,50)" rx="2" ry="2" />
<text  x="1192.17" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (50 samples, 0.27%)</title><rect x="203.7" y="1653" width="3.2" height="15.0" fill="rgb(207,22,39)" rx="2" ry="2" />
<text  x="206.67" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1188.4" y="997" width="0.4" height="15.0" fill="rgb(209,202,11)" rx="2" ry="2" />
<text  x="1191.40" y="1007.5" ></text>
</g>
<g >
<title>[unknown] (448 samples, 2.43%)</title><rect x="54.3" y="1557" width="28.6" height="15.0" fill="rgb(238,112,45)" rx="2" ry="2" />
<text  x="57.30" y="1567.5" >[u..</text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (2 samples, 0.01%)</title><rect x="26.0" y="1909" width="0.2" height="15.0" fill="rgb(239,41,29)" rx="2" ry="2" />
<text  x="29.04" y="1919.5" ></text>
</g>
<g >
<title>__asan_memset (2 samples, 0.01%)</title><rect x="476.9" y="1925" width="0.2" height="15.0" fill="rgb(250,157,41)" rx="2" ry="2" />
<text  x="479.92" y="1935.5" ></text>
</g>
<g >
<title>__dynamic_cast (9 samples, 0.05%)</title><rect x="131.0" y="1589" width="0.6" height="15.0" fill="rgb(216,132,4)" rx="2" ry="2" />
<text  x="134.00" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1189.2" y="149" width="0.4" height="15.0" fill="rgb(212,194,13)" rx="2" ry="2" />
<text  x="1192.17" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1189.2" y="501" width="0.4" height="15.0" fill="rgb(254,147,38)" rx="2" ry="2" />
<text  x="1192.17" y="511.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (2 samples, 0.01%)</title><rect x="53.8" y="1909" width="0.1" height="15.0" fill="rgb(252,200,52)" rx="2" ry="2" />
<text  x="56.78" y="1919.5" ></text>
</g>
<g >
<title>Preprocess (3,046 samples, 16.50%)</title><rect x="598.6" y="1957" width="194.7" height="15.0" fill="rgb(208,146,29)" rx="2" ry="2" />
<text  x="601.63" y="1967.5" >Preprocess</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="159.2" y="1845" width="0.1" height="15.0" fill="rgb(245,59,50)" rx="2" ry="2" />
<text  x="162.19" y="1855.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (2 samples, 0.01%)</title><rect x="167.0" y="1573" width="0.2" height="15.0" fill="rgb(221,192,14)" rx="2" ry="2" />
<text  x="170.05" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="216.6" y="677" width="0.2" height="15.0" fill="rgb(226,193,38)" rx="2" ry="2" />
<text  x="219.65" y="687.5" ></text>
</g>
<g >
<title>native_write_msr (2 samples, 0.01%)</title><rect x="54.0" y="1733" width="0.2" height="15.0" fill="rgb(236,8,30)" rx="2" ry="2" />
<text  x="57.04" y="1743.5" ></text>
</g>
<g >
<title>std::istream::sentry::sentry (6 samples, 0.03%)</title><rect x="813.6" y="2005" width="0.4" height="15.0" fill="rgb(209,100,7)" rx="2" ry="2" />
<text  x="816.65" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.05%)</title><rect x="1188.3" y="2037" width="0.5" height="15.0" fill="rgb(207,107,36)" rx="2" ry="2" />
<text  x="1191.27" y="2047.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;std::__detail::_State&lt;char&gt; const*, std::__detail::_State&lt;char&gt;*&gt; (2 samples, 0.01%)</title><rect x="180.0" y="1701" width="0.1" height="15.0" fill="rgb(251,134,40)" rx="2" ry="2" />
<text  x="182.96" y="1711.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (2 samples, 0.01%)</title><rect x="1107.4" y="1829" width="0.1" height="15.0" fill="rgb(227,46,0)" rx="2" ry="2" />
<text  x="1110.35" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.9" y="725" width="0.1" height="15.0" fill="rgb(221,210,44)" rx="2" ry="2" />
<text  x="1191.91" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1189.2" y="965" width="0.4" height="15.0" fill="rgb(237,36,50)" rx="2" ry="2" />
<text  x="1192.17" y="975.5" ></text>
</g>
<g >
<title>__handle_mm_fault (14 samples, 0.08%)</title><rect x="52.6" y="1957" width="0.9" height="15.0" fill="rgb(223,62,26)" rx="2" ry="2" />
<text  x="55.57" y="1967.5" ></text>
</g>
<g >
<title>__x64_sys_madvise (16 samples, 0.09%)</title><rect x="508.9" y="1989" width="1.0" height="15.0" fill="rgb(250,11,30)" rx="2" ry="2" />
<text  x="511.88" y="1999.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::basic_json (3 samples, 0.02%)</title><rect x="505.2" y="1893" width="0.2" height="15.0" fill="rgb(249,57,12)" rx="2" ry="2" />
<text  x="508.24" y="1903.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::readWord (2 samples, 0.01%)</title><rect x="533.2" y="1925" width="0.1" height="15.0" fill="rgb(210,202,20)" rx="2" ry="2" />
<text  x="536.17" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (68 samples, 0.37%)</title><rect x="202.9" y="1685" width="4.4" height="15.0" fill="rgb(252,140,11)" rx="2" ry="2" />
<text  x="205.91" y="1695.5" ></text>
</g>
<g >
<title>__asan::AsanThread::stack_top (2 samples, 0.01%)</title><rect x="400.8" y="1941" width="0.1" height="15.0" fill="rgb(253,81,43)" rx="2" ry="2" />
<text  x="403.80" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1188.4" y="1317" width="0.4" height="15.0" fill="rgb(215,65,52)" rx="2" ry="2" />
<text  x="1191.40" y="1327.5" ></text>
</g>
<g >
<title>__interceptor_memcpy (8 samples, 0.04%)</title><rect x="1121.5" y="2037" width="0.6" height="15.0" fill="rgb(221,85,39)" rx="2" ry="2" />
<text  x="1124.54" y="2047.5" ></text>
</g>
<g >
<title>fasttext::entry::entry (3 samples, 0.02%)</title><rect x="502.0" y="1925" width="0.2" height="15.0" fill="rgb(244,111,40)" rx="2" ry="2" />
<text  x="505.04" y="1935.5" ></text>
</g>
<g >
<title>__asan_memcpy (5 samples, 0.03%)</title><rect x="211.7" y="1669" width="0.3" height="15.0" fill="rgb(247,212,41)" rx="2" ry="2" />
<text  x="214.73" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (3 samples, 0.02%)</title><rect x="158.5" y="1765" width="0.2" height="15.0" fill="rgb(233,86,15)" rx="2" ry="2" />
<text  x="161.55" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="216.6" y="821" width="0.2" height="15.0" fill="rgb(205,211,10)" rx="2" ry="2" />
<text  x="219.65" y="831.5" ></text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::get (2 samples, 0.01%)</title><rect x="121.3" y="1941" width="0.1" height="15.0" fill="rgb(217,46,53)" rx="2" ry="2" />
<text  x="124.28" y="1951.5" ></text>
</g>
<g >
<title>__interceptor_memcmp (3 samples, 0.02%)</title><rect x="513.9" y="1925" width="0.2" height="15.0" fill="rgb(207,69,16)" rx="2" ry="2" />
<text  x="516.87" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (2 samples, 0.01%)</title><rect x="215.9" y="1829" width="0.1" height="15.0" fill="rgb(227,176,42)" rx="2" ry="2" />
<text  x="218.88" y="1839.5" ></text>
</g>
<g >
<title>do_page_fault (9 samples, 0.05%)</title><rect x="53.7" y="1989" width="0.6" height="15.0" fill="rgb(206,104,54)" rx="2" ry="2" />
<text  x="56.72" y="1999.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (2 samples, 0.01%)</title><rect x="505.8" y="2005" width="0.1" height="15.0" fill="rgb(215,140,10)" rx="2" ry="2" />
<text  x="508.75" y="2015.5" ></text>
</g>
<g >
<title>__asan_memmove (2 samples, 0.01%)</title><rect x="466.8" y="1925" width="0.1" height="15.0" fill="rgb(236,115,0)" rx="2" ry="2" />
<text  x="469.76" y="1935.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (2 samples, 0.01%)</title><rect x="793.6" y="1957" width="0.2" height="15.0" fill="rgb(224,159,47)" rx="2" ry="2" />
<text  x="796.64" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1188.8" y="1877" width="0.2" height="15.0" fill="rgb(212,1,3)" rx="2" ry="2" />
<text  x="1191.85" y="1887.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (2 samples, 0.01%)</title><rect x="42.5" y="2005" width="0.1" height="15.0" fill="rgb(222,19,32)" rx="2" ry="2" />
<text  x="45.47" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="216.5" y="1557" width="0.3" height="15.0" fill="rgb(225,216,17)" rx="2" ry="2" />
<text  x="219.52" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.9" y="133" width="0.1" height="15.0" fill="rgb(220,44,24)" rx="2" ry="2" />
<text  x="1191.91" y="143.5" ></text>
</g>
<g >
<title>__vm_munmap (5 samples, 0.03%)</title><rect x="804.3" y="1973" width="0.3" height="15.0" fill="rgb(228,67,30)" rx="2" ry="2" />
<text  x="807.25" y="1983.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::Unwind (3 samples, 0.02%)</title><rect x="648.9" y="1845" width="0.2" height="15.0" fill="rgb(224,99,22)" rx="2" ry="2" />
<text  x="651.87" y="1855.5" ></text>
</g>
<g >
<title>__sanitizer::internal_memmove (6 samples, 0.03%)</title><rect x="503.4" y="1925" width="0.4" height="15.0" fill="rgb(233,76,2)" rx="2" ry="2" />
<text  x="506.39" y="1935.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (3 samples, 0.02%)</title><rect x="87.3" y="1829" width="0.2" height="15.0" fill="rgb(207,16,25)" rx="2" ry="2" />
<text  x="90.34" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1188.9" y="1221" width="0.1" height="15.0" fill="rgb(231,181,53)" rx="2" ry="2" />
<text  x="1191.91" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1188.4" y="1077" width="0.4" height="15.0" fill="rgb(228,194,46)" rx="2" ry="2" />
<text  x="1191.40" y="1087.5" ></text>
</g>
<g >
<title>__asan_memcpy (3 samples, 0.02%)</title><rect x="155.2" y="1669" width="0.2" height="15.0" fill="rgb(229,40,44)" rx="2" ry="2" />
<text  x="158.22" y="1679.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.03%)</title><rect x="182.9" y="1653" width="0.3" height="15.0" fill="rgb(245,125,0)" rx="2" ry="2" />
<text  x="185.90" y="1663.5" ></text>
</g>
<g >
<title>fasttext::Vector::mul (21 samples, 0.11%)</title><rect x="475.5" y="1941" width="1.4" height="15.0" fill="rgb(230,168,3)" rx="2" ry="2" />
<text  x="478.52" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="159.2" y="1877" width="0.1" height="15.0" fill="rgb(228,55,30)" rx="2" ry="2" />
<text  x="162.19" y="1887.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::addSubwords (328 samples, 1.78%)</title><rect x="568.8" y="1909" width="21.0" height="15.0" fill="rgb(247,199,11)" rx="2" ry="2" />
<text  x="571.84" y="1919.5" ></text>
</g>
<g >
<title>mmput (6 samples, 0.03%)</title><rect x="1108.2" y="1973" width="0.4" height="15.0" fill="rgb(215,199,36)" rx="2" ry="2" />
<text  x="1111.18" y="1983.5" ></text>
</g>
<g >
<title>__raw_callee_save___pv_queued_spin_unlock (2 samples, 0.01%)</title><rect x="939.3" y="1925" width="0.1" height="15.0" fill="rgb(240,16,3)" rx="2" ry="2" />
<text  x="942.31" y="1935.5" ></text>
</g>
<g >
<title>operator new (8 samples, 0.04%)</title><rect x="212.9" y="1669" width="0.6" height="15.0" fill="rgb(228,130,46)" rx="2" ry="2" />
<text  x="215.94" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1188.4" y="405" width="0.4" height="15.0" fill="rgb(219,12,12)" rx="2" ry="2" />
<text  x="1191.40" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1188.4" y="1957" width="0.4" height="15.0" fill="rgb(206,13,27)" rx="2" ry="2" />
<text  x="1191.40" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1188.4" y="1493" width="0.4" height="15.0" fill="rgb(238,221,1)" rx="2" ry="2" />
<text  x="1191.40" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (67 samples, 0.36%)</title><rect x="136.0" y="1733" width="4.3" height="15.0" fill="rgb(251,40,21)" rx="2" ry="2" />
<text  x="138.98" y="1743.5" ></text>
</g>
<g >
<title>handle_mm_fault (7 samples, 0.04%)</title><rect x="685.6" y="1813" width="0.4" height="15.0" fill="rgb(206,156,32)" rx="2" ry="2" />
<text  x="688.55" y="1823.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.03%)</title><rect x="144.1" y="1605" width="0.3" height="15.0" fill="rgb(250,107,53)" rx="2" ry="2" />
<text  x="147.10" y="1615.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="207.1" y="1653" width="0.1" height="15.0" fill="rgb(246,111,37)" rx="2" ry="2" />
<text  x="210.06" y="1663.5" ></text>
</g>
<g >
<title>find_vma (3 samples, 0.02%)</title><rect x="938.0" y="1989" width="0.2" height="15.0" fill="rgb(225,60,10)" rx="2" ry="2" />
<text  x="941.03" y="1999.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (8 samples, 0.04%)</title><rect x="941.0" y="1909" width="0.5" height="15.0" fill="rgb(249,55,19)" rx="2" ry="2" />
<text  x="944.04" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="185.8" y="1525" width="0.1" height="15.0" fill="rgb(241,216,51)" rx="2" ry="2" />
<text  x="188.78" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1189.2" y="1013" width="0.4" height="15.0" fill="rgb(209,43,5)" rx="2" ry="2" />
<text  x="1192.17" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="216.5" y="1717" width="0.4" height="15.0" fill="rgb(242,187,40)" rx="2" ry="2" />
<text  x="219.52" y="1727.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="152.0" y="1669" width="0.1" height="15.0" fill="rgb(221,76,35)" rx="2" ry="2" />
<text  x="154.96" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (10 samples, 0.05%)</title><rect x="215.5" y="1861" width="0.6" height="15.0" fill="rgb(242,186,22)" rx="2" ry="2" />
<text  x="218.50" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (90 samples, 0.49%)</title><rect x="130.2" y="1733" width="5.8" height="15.0" fill="rgb(231,11,45)" rx="2" ry="2" />
<text  x="133.23" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (544 samples, 2.95%)</title><rect x="54.3" y="1925" width="34.8" height="15.0" fill="rgb(241,128,43)" rx="2" ry="2" />
<text  x="57.30" y="1935.5" >[u..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1189.2" y="1365" width="0.4" height="15.0" fill="rgb(245,186,51)" rx="2" ry="2" />
<text  x="1192.17" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (89 samples, 0.48%)</title><rect x="186.9" y="1685" width="5.7" height="15.0" fill="rgb(225,183,11)" rx="2" ry="2" />
<text  x="189.93" y="1695.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="87.5" y="1813" width="0.2" height="15.0" fill="rgb(230,115,4)" rx="2" ry="2" />
<text  x="90.53" y="1823.5" ></text>
</g>
<g >
<title>alloc_pages_vma (16 samples, 0.09%)</title><rect x="497.3" y="1877" width="1.0" height="15.0" fill="rgb(217,8,40)" rx="2" ry="2" />
<text  x="500.25" y="1887.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="197.6" y="1605" width="0.1" height="15.0" fill="rgb(229,81,12)" rx="2" ry="2" />
<text  x="200.60" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1188.4" y="549" width="0.4" height="15.0" fill="rgb(244,183,2)" rx="2" ry="2" />
<text  x="1191.40" y="559.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (6 samples, 0.03%)</title><rect x="620.0" y="1877" width="0.4" height="15.0" fill="rgb(247,69,10)" rx="2" ry="2" />
<text  x="622.97" y="1887.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.02%)</title><rect x="163.0" y="1541" width="0.2" height="15.0" fill="rgb(209,30,26)" rx="2" ry="2" />
<text  x="166.02" y="1551.5" ></text>
</g>
</g>
</svg>
