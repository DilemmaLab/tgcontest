<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="2134" onload="init(evt)" viewBox="0 0 1200 2134" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="2134.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="2117" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="2117" > </text>
<g id="frames">
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (95 samples, 0.48%)</title><rect x="144.3" y="1701" width="5.7" height="15.0" fill="rgb(231,222,20)" rx="2" ry="2" />
<text  x="147.29" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (455 samples, 2.31%)</title><rect x="55.3" y="1429" width="27.2" height="15.0" fill="rgb(241,175,6)" rx="2" ry="2" />
<text  x="58.28" y="1439.5" >[..</text>
</g>
<g >
<title>operator delete (5 samples, 0.03%)</title><rect x="204.7" y="1605" width="0.3" height="15.0" fill="rgb(231,74,18)" rx="2" ry="2" />
<text  x="207.70" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (85 samples, 0.43%)</title><rect x="206.7" y="1749" width="5.1" height="15.0" fill="rgb(228,5,23)" rx="2" ry="2" />
<text  x="209.68" y="1759.5" ></text>
</g>
<g >
<title>find_vma (3 samples, 0.02%)</title><rect x="943.7" y="1989" width="0.2" height="15.0" fill="rgb(228,11,45)" rx="2" ry="2" />
<text  x="946.68" y="1999.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (300 samples, 1.52%)</title><rect x="10.0" y="2053" width="17.9" height="15.0" fill="rgb(226,101,54)" rx="2" ry="2" />
<text  x="13.00" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (72 samples, 0.36%)</title><rect x="164.0" y="1621" width="4.3" height="15.0" fill="rgb(205,193,51)" rx="2" ry="2" />
<text  x="167.03" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.6" y="1013" width="0.4" height="15.0" fill="rgb(216,183,15)" rx="2" ry="2" />
<text  x="1190.61" y="1023.5" ></text>
</g>
<g >
<title>[unknown] (563 samples, 2.85%)</title><rect x="55.3" y="1877" width="33.7" height="15.0" fill="rgb(252,179,3)" rx="2" ry="2" />
<text  x="58.28" y="1887.5" >[u..</text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="139.1" y="1573" width="0.1" height="15.0" fill="rgb(236,61,14)" rx="2" ry="2" />
<text  x="142.08" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.4" y="213" width="0.1" height="15.0" fill="rgb(243,188,39)" rx="2" ry="2" />
<text  x="1190.43" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1187.6" y="757" width="0.4" height="15.0" fill="rgb(223,86,34)" rx="2" ry="2" />
<text  x="1190.61" y="767.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (10 samples, 0.05%)</title><rect x="1124.4" y="2037" width="0.6" height="15.0" fill="rgb(229,21,12)" rx="2" ry="2" />
<text  x="1127.38" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (8 samples, 0.04%)</title><rect x="1186.9" y="1925" width="0.5" height="15.0" fill="rgb(213,169,52)" rx="2" ry="2" />
<text  x="1189.89" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.05%)</title><rect x="162.2" y="1845" width="0.6" height="15.0" fill="rgb(253,17,7)" rx="2" ry="2" />
<text  x="165.23" y="1855.5" ></text>
</g>
<g >
<title>__interceptor_strlen (2 samples, 0.01%)</title><rect x="599.0" y="1861" width="0.1" height="15.0" fill="rgb(237,156,17)" rx="2" ry="2" />
<text  x="601.95" y="1871.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (2 samples, 0.01%)</title><rect x="160.1" y="1669" width="0.2" height="15.0" fill="rgb(252,139,29)" rx="2" ry="2" />
<text  x="163.14" y="1679.5" ></text>
</g>
<g >
<title>__do_page_fault (6 samples, 0.03%)</title><rect x="1034.0" y="2005" width="0.4" height="15.0" fill="rgb(251,9,8)" rx="2" ry="2" />
<text  x="1037.00" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="1187.7" y="149" width="0.3" height="15.0" fill="rgb(211,209,21)" rx="2" ry="2" />
<text  x="1190.73" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="218.2" y="1845" width="0.3" height="15.0" fill="rgb(236,93,7)" rx="2" ry="2" />
<text  x="221.22" y="1855.5" ></text>
</g>
<g >
<title>fasttext::DenseMatrix::load (6 samples, 0.03%)</title><rect x="1105.5" y="2053" width="0.3" height="15.0" fill="rgb(228,62,23)" rx="2" ry="2" />
<text  x="1108.48" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="162.3" y="1525" width="0.2" height="15.0" fill="rgb(224,166,39)" rx="2" ry="2" />
<text  x="165.29" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1186.9" y="629" width="0.5" height="15.0" fill="rgb(214,44,3)" rx="2" ry="2" />
<text  x="1189.95" y="639.5" ></text>
</g>
<g >
<title>[unknown] (9 samples, 0.05%)</title><rect x="821.3" y="1989" width="0.5" height="15.0" fill="rgb(243,167,9)" rx="2" ry="2" />
<text  x="824.29" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.4" y="1621" width="0.1" height="15.0" fill="rgb(248,89,30)" rx="2" ry="2" />
<text  x="1190.37" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1186.9" y="1397" width="0.5" height="15.0" fill="rgb(216,204,17)" rx="2" ry="2" />
<text  x="1189.95" y="1407.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (4 samples, 0.02%)</title><rect x="764.6" y="1925" width="0.3" height="15.0" fill="rgb(236,83,19)" rx="2" ry="2" />
<text  x="767.64" y="1935.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (3 samples, 0.02%)</title><rect x="78.3" y="1189" width="0.1" height="15.0" fill="rgb(242,58,25)" rx="2" ry="2" />
<text  x="81.25" y="1199.5" ></text>
</g>
<g >
<title>arch_tlb_finish_mmu (2 samples, 0.01%)</title><rect x="85.8" y="1557" width="0.2" height="15.0" fill="rgb(248,194,39)" rx="2" ry="2" />
<text  x="88.85" y="1567.5" ></text>
</g>
<g >
<title>__do_munmap (2 samples, 0.01%)</title><rect x="88.6" y="1765" width="0.1" height="15.0" fill="rgb(232,36,22)" rx="2" ry="2" />
<text  x="91.60" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.5" y="1829" width="0.5" height="15.0" fill="rgb(241,112,41)" rx="2" ry="2" />
<text  x="1190.55" y="1839.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (5 samples, 0.03%)</title><rect x="698.1" y="1749" width="0.3" height="15.0" fill="rgb(207,57,22)" rx="2" ry="2" />
<text  x="701.13" y="1759.5" ></text>
</g>
<g >
<title>__asan::PoisonShadow (45 samples, 0.23%)</title><rect x="121.0" y="2037" width="2.7" height="15.0" fill="rgb(254,150,36)" rx="2" ry="2" />
<text  x="123.96" y="2047.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (2 samples, 0.01%)</title><rect x="85.8" y="1573" width="0.2" height="15.0" fill="rgb(207,138,23)" rx="2" ry="2" />
<text  x="88.85" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (20 samples, 0.10%)</title><rect x="816.8" y="2021" width="1.2" height="15.0" fill="rgb(241,87,25)" rx="2" ry="2" />
<text  x="819.80" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (82 samples, 0.42%)</title><rect x="134.5" y="1733" width="4.9" height="15.0" fill="rgb(229,55,22)" rx="2" ry="2" />
<text  x="137.54" y="1743.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;, std::tuple&lt;&gt; &gt; (2 samples, 0.01%)</title><rect x="133.3" y="1925" width="0.1" height="15.0" fill="rgb(248,176,30)" rx="2" ry="2" />
<text  x="136.28" y="1935.5" ></text>
</g>
<g >
<title>unmap_region (9 samples, 0.05%)</title><rect x="1103.6" y="1909" width="0.6" height="15.0" fill="rgb(205,32,19)" rx="2" ry="2" />
<text  x="1106.62" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1186.9" y="1429" width="0.5" height="15.0" fill="rgb(236,173,49)" rx="2" ry="2" />
<text  x="1189.95" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_BracketMatcher (3 samples, 0.02%)</title><rect x="163.8" y="1605" width="0.2" height="15.0" fill="rgb(223,88,42)" rx="2" ry="2" />
<text  x="166.85" y="1615.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.02%)</title><rect x="1189.6" y="2037" width="0.3" height="15.0" fill="rgb(245,207,5)" rx="2" ry="2" />
<text  x="1192.64" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.4" y="245" width="0.1" height="15.0" fill="rgb(248,200,18)" rx="2" ry="2" />
<text  x="1190.43" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (73 samples, 0.37%)</title><rect x="182.9" y="1685" width="4.4" height="15.0" fill="rgb(240,158,52)" rx="2" ry="2" />
<text  x="185.93" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.02%)</title><rect x="1187.7" y="181" width="0.3" height="15.0" fill="rgb(211,92,17)" rx="2" ry="2" />
<text  x="1190.73" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (86 samples, 0.44%)</title><rect x="195.2" y="1733" width="5.1" height="15.0" fill="rgb(210,3,17)" rx="2" ry="2" />
<text  x="198.19" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (434 samples, 2.20%)</title><rect x="55.3" y="1365" width="25.9" height="15.0" fill="rgb(252,11,11)" rx="2" ry="2" />
<text  x="58.28" y="1375.5" >[..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.02%)</title><rect x="162.5" y="1557" width="0.3" height="15.0" fill="rgb(215,80,1)" rx="2" ry="2" />
<text  x="165.53" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.6" y="1205" width="0.4" height="15.0" fill="rgb(250,82,26)" rx="2" ry="2" />
<text  x="1190.61" y="1215.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="83.4" y="1493" width="0.1" height="15.0" fill="rgb(233,81,53)" rx="2" ry="2" />
<text  x="86.39" y="1503.5" ></text>
</g>
<g >
<title>[unknown] (492 samples, 2.49%)</title><rect x="55.3" y="1621" width="29.4" height="15.0" fill="rgb(246,115,49)" rx="2" ry="2" />
<text  x="58.28" y="1631.5" >[u..</text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::Unwind (2 samples, 0.01%)</title><rect x="194.0" y="1557" width="0.1" height="15.0" fill="rgb(232,20,20)" rx="2" ry="2" />
<text  x="197.00" y="1567.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::getLine (3 samples, 0.02%)</title><rect x="769.2" y="2037" width="0.2" height="15.0" fill="rgb(217,207,30)" rx="2" ry="2" />
<text  x="772.19" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1187.6" y="565" width="0.4" height="15.0" fill="rgb(213,213,35)" rx="2" ry="2" />
<text  x="1190.61" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.4" y="357" width="0.1" height="15.0" fill="rgb(247,185,8)" rx="2" ry="2" />
<text  x="1190.43" y="367.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (4 samples, 0.02%)</title><rect x="199.8" y="1605" width="0.2" height="15.0" fill="rgb(222,151,5)" rx="2" ry="2" />
<text  x="202.80" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (72 samples, 0.36%)</title><rect x="156.6" y="1701" width="4.3" height="15.0" fill="rgb(242,73,47)" rx="2" ry="2" />
<text  x="159.55" y="1711.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (76 samples, 0.39%)</title><rect x="33.2" y="2021" width="4.6" height="15.0" fill="rgb(242,194,17)" rx="2" ry="2" />
<text  x="36.21" y="2031.5" ></text>
</g>
<g >
<title>__asan::AsanThread::stack_top (2 samples, 0.01%)</title><rect x="607.8" y="1861" width="0.1" height="15.0" fill="rgb(244,138,31)" rx="2" ry="2" />
<text  x="610.81" y="1871.5" ></text>
</g>
<g >
<title>__interceptor_strlen (75 samples, 0.38%)</title><rect x="750.0" y="1877" width="4.5" height="15.0" fill="rgb(252,169,14)" rx="2" ry="2" />
<text  x="752.99" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="809.9" y="2021" width="0.1" height="15.0" fill="rgb(225,155,41)" rx="2" ry="2" />
<text  x="812.87" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (343 samples, 1.74%)</title><rect x="55.3" y="213" width="20.5" height="15.0" fill="rgb(234,42,46)" rx="2" ry="2" />
<text  x="58.28" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="218.2" y="1557" width="0.3" height="15.0" fill="rgb(210,26,46)" rx="2" ry="2" />
<text  x="221.22" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3 samples, 0.02%)</title><rect x="187.4" y="1765" width="0.2" height="15.0" fill="rgb(211,142,19)" rx="2" ry="2" />
<text  x="190.42" y="1775.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="160.7" y="1685" width="0.2" height="15.0" fill="rgb(209,194,21)" rx="2" ry="2" />
<text  x="163.74" y="1695.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (2 samples, 0.01%)</title><rect x="335.1" y="1957" width="0.1" height="15.0" fill="rgb(205,39,22)" rx="2" ry="2" />
<text  x="338.10" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="188.9" y="1557" width="0.1" height="15.0" fill="rgb(241,139,17)" rx="2" ry="2" />
<text  x="191.91" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (547 samples, 2.77%)</title><rect x="55.3" y="1829" width="32.7" height="15.0" fill="rgb(224,179,19)" rx="2" ry="2" />
<text  x="58.28" y="1839.5" >[u..</text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (5 samples, 0.03%)</title><rect x="880.5" y="2005" width="0.3" height="15.0" fill="rgb(211,11,40)" rx="2" ry="2" />
<text  x="883.51" y="2015.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (3 samples, 0.02%)</title><rect x="585.1" y="1877" width="0.2" height="15.0" fill="rgb(240,51,23)" rx="2" ry="2" />
<text  x="588.08" y="1887.5" ></text>
</g>
<g >
<title>__do_page_fault (155 samples, 0.79%)</title><rect x="941.6" y="2005" width="9.3" height="15.0" fill="rgb(236,5,44)" rx="2" ry="2" />
<text  x="944.64" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (10 samples, 0.05%)</title><rect x="161.3" y="1877" width="0.6" height="15.0" fill="rgb(249,1,21)" rx="2" ry="2" />
<text  x="164.28" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.4" y="1237" width="0.1" height="15.0" fill="rgb(228,115,44)" rx="2" ry="2" />
<text  x="1190.43" y="1247.5" ></text>
</g>
<g >
<title>__handle_mm_fault (3 samples, 0.02%)</title><rect x="1189.4" y="1957" width="0.2" height="15.0" fill="rgb(234,93,34)" rx="2" ry="2" />
<text  x="1192.40" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.4" y="677" width="0.1" height="15.0" fill="rgb(220,155,15)" rx="2" ry="2" />
<text  x="1190.43" y="687.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.02%)</title><rect x="769.2" y="2021" width="0.2" height="15.0" fill="rgb(244,182,20)" rx="2" ry="2" />
<text  x="772.19" y="2031.5" ></text>
</g>
<g >
<title>tlb_flush_mmu_free (5 samples, 0.03%)</title><rect x="525.1" y="1909" width="0.3" height="15.0" fill="rgb(230,217,34)" rx="2" ry="2" />
<text  x="528.14" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (3 samples, 0.02%)</title><rect x="217.2" y="1765" width="0.2" height="15.0" fill="rgb(252,223,47)" rx="2" ry="2" />
<text  x="220.20" y="1775.5" ></text>
</g>
<g >
<title>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::dump (5 samples, 0.03%)</title><rect x="520.8" y="1989" width="0.3" height="15.0" fill="rgb(239,50,7)" rx="2" ry="2" />
<text  x="523.77" y="1999.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (3 samples, 0.02%)</title><rect x="87.0" y="1717" width="0.2" height="15.0" fill="rgb(240,27,18)" rx="2" ry="2" />
<text  x="89.98" y="1727.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.01%)</title><rect x="169.8" y="1589" width="0.1" height="15.0" fill="rgb(206,195,25)" rx="2" ry="2" />
<text  x="172.83" y="1599.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (3 samples, 0.02%)</title><rect x="598.8" y="1861" width="0.2" height="15.0" fill="rgb(207,206,34)" rx="2" ry="2" />
<text  x="601.77" y="1871.5" ></text>
</g>
<g >
<title>__asan::Allocator::Allocate (1,169 samples, 5.93%)</title><rect x="881.0" y="2053" width="69.9" height="15.0" fill="rgb(219,71,41)" rx="2" ry="2" />
<text  x="883.99" y="2063.5" >__asan:..</text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (24 samples, 0.12%)</title><rect x="323.6" y="1941" width="1.5" height="15.0" fill="rgb(235,193,54)" rx="2" ry="2" />
<text  x="326.62" y="1951.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (3 samples, 0.02%)</title><rect x="170.8" y="1573" width="0.2" height="15.0" fill="rgb(245,39,23)" rx="2" ry="2" />
<text  x="173.79" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt;,  (14 samples, 0.07%)</title><rect x="162.1" y="1957" width="0.8" height="15.0" fill="rgb(253,119,0)" rx="2" ry="2" />
<text  x="165.05" y="1967.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (6 samples, 0.03%)</title><rect x="514.3" y="1861" width="0.3" height="15.0" fill="rgb(213,47,34)" rx="2" ry="2" />
<text  x="517.25" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (604 samples, 3.06%)</title><rect x="55.3" y="1989" width="36.1" height="15.0" fill="rgb(228,92,40)" rx="2" ry="2" />
<text  x="58.28" y="1999.5" >[un..</text>
</g>
<g >
<title>operator delete (6 samples, 0.03%)</title><rect x="737.4" y="1893" width="0.4" height="15.0" fill="rgb(209,65,15)" rx="2" ry="2" />
<text  x="740.43" y="1903.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::Unwind (2 samples, 0.01%)</title><rect x="319.1" y="1957" width="0.1" height="15.0" fill="rgb(233,17,12)" rx="2" ry="2" />
<text  x="322.07" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.6" y="53" width="0.1" height="15.0" fill="rgb(210,205,9)" rx="2" ry="2" />
<text  x="1190.61" y="63.5" ></text>
</g>
<g >
<title>[unknown] (360 samples, 1.82%)</title><rect x="55.3" y="805" width="21.5" height="15.0" fill="rgb(236,173,54)" rx="2" ry="2" />
<text  x="58.28" y="815.5" >[..</text>
</g>
<g >
<title>do_syscall_64 (3 samples, 0.02%)</title><rect x="87.0" y="1733" width="0.2" height="15.0" fill="rgb(246,23,1)" rx="2" ry="2" />
<text  x="89.98" y="1743.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (2 samples, 0.01%)</title><rect x="621.1" y="1845" width="0.2" height="15.0" fill="rgb(247,162,24)" rx="2" ry="2" />
<text  x="624.15" y="1855.5" ></text>
</g>
<g >
<title>__interceptor_memcpy (4 samples, 0.02%)</title><rect x="1128.1" y="2037" width="0.3" height="15.0" fill="rgb(244,203,54)" rx="2" ry="2" />
<text  x="1131.15" y="2047.5" ></text>
</g>
<g >
<title>main (6,665 samples, 33.79%)</title><rect x="124.2" y="2021" width="398.7" height="15.0" fill="rgb(209,125,54)" rx="2" ry="2" />
<text  x="127.25" y="2031.5" >main</text>
</g>
<g >
<title>fasttext::Dictionary::readWord (67 samples, 0.34%)</title><rect x="94.6" y="2021" width="4.0" height="15.0" fill="rgb(210,166,20)" rx="2" ry="2" />
<text  x="97.58" y="2031.5" ></text>
</g>
<g >
<title>fasttext::FastText::getWordVector (203 samples, 1.03%)</title><rect x="482.5" y="1957" width="12.1" height="15.0" fill="rgb(242,204,12)" rx="2" ry="2" />
<text  x="485.49" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.4" y="1221" width="0.1" height="15.0" fill="rgb(251,111,26)" rx="2" ry="2" />
<text  x="1190.43" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.6" y="389" width="0.4" height="15.0" fill="rgb(205,111,14)" rx="2" ry="2" />
<text  x="1190.61" y="399.5" ></text>
</g>
<g >
<title>__asan::AsanThread::stack_top (2 samples, 0.01%)</title><rect x="203.4" y="1605" width="0.2" height="15.0" fill="rgb(241,99,28)" rx="2" ry="2" />
<text  x="206.45" y="1615.5" ></text>
</g>
<g >
<title>__handle_mm_fault (4 samples, 0.02%)</title><rect x="652.1" y="1797" width="0.3" height="15.0" fill="rgb(225,196,0)" rx="2" ry="2" />
<text  x="655.13" y="1807.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::Dictionary (18 samples, 0.09%)</title><rect x="876.9" y="2005" width="1.1" height="15.0" fill="rgb(216,204,21)" rx="2" ry="2" />
<text  x="879.92" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (345 samples, 1.75%)</title><rect x="55.3" y="229" width="20.6" height="15.0" fill="rgb(232,81,8)" rx="2" ry="2" />
<text  x="58.28" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.4" y="901" width="0.1" height="15.0" fill="rgb(231,206,10)" rx="2" ry="2" />
<text  x="1190.43" y="911.5" ></text>
</g>
<g >
<title>[unknown] (358 samples, 1.81%)</title><rect x="55.3" y="629" width="21.4" height="15.0" fill="rgb(221,154,50)" rx="2" ry="2" />
<text  x="58.28" y="639.5" >[..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1186.9" y="1445" width="0.5" height="15.0" fill="rgb(246,12,49)" rx="2" ry="2" />
<text  x="1189.95" y="1455.5" ></text>
</g>
<g >
<title>boost::algorithm::join&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, char [2]&gt; (19 samples, 0.10%)</title><rect x="573.2" y="1941" width="1.1" height="15.0" fill="rgb(215,18,16)" rx="2" ry="2" />
<text  x="576.17" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1186.9" y="597" width="0.5" height="15.0" fill="rgb(238,59,8)" rx="2" ry="2" />
<text  x="1189.95" y="607.5" ></text>
</g>
<g >
<title>__asan::AsanTSDGet (2 samples, 0.01%)</title><rect x="607.7" y="1861" width="0.1" height="15.0" fill="rgb(237,157,4)" rx="2" ry="2" />
<text  x="610.69" y="1871.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (2 samples, 0.01%)</title><rect x="876.3" y="2005" width="0.1" height="15.0" fill="rgb(252,132,3)" rx="2" ry="2" />
<text  x="879.26" y="2015.5" ></text>
</g>
<g >
<title>__sanitizer::RunFreeHooks (13 samples, 0.07%)</title><rect x="1030.5" y="2053" width="0.8" height="15.0" fill="rgb(229,144,30)" rx="2" ry="2" />
<text  x="1033.53" y="2063.5" ></text>
</g>
<g >
<title>vma_merge (3 samples, 0.02%)</title><rect x="1104.3" y="1925" width="0.2" height="15.0" fill="rgb(216,56,54)" rx="2" ry="2" />
<text  x="1107.34" y="1935.5" ></text>
</g>
<g >
<title>__pthread_getspecific (3 samples, 0.02%)</title><rect x="137.3" y="1557" width="0.2" height="15.0" fill="rgb(235,40,2)" rx="2" ry="2" />
<text  x="140.29" y="1567.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (3 samples, 0.02%)</title><rect x="80.0" y="1301" width="0.2" height="15.0" fill="rgb(230,74,48)" rx="2" ry="2" />
<text  x="83.05" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (364 samples, 1.85%)</title><rect x="190.4" y="1813" width="21.8" height="15.0" fill="rgb(230,33,3)" rx="2" ry="2" />
<text  x="193.41" y="1823.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="188.9" y="1493" width="0.1" height="15.0" fill="rgb(246,184,8)" rx="2" ry="2" />
<text  x="191.91" y="1503.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (7 samples, 0.04%)</title><rect x="1105.1" y="2021" width="0.4" height="15.0" fill="rgb(253,33,6)" rx="2" ry="2" />
<text  x="1108.06" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (392 samples, 1.99%)</title><rect x="55.3" y="1221" width="23.4" height="15.0" fill="rgb(223,170,32)" rx="2" ry="2" />
<text  x="58.28" y="1231.5" >[..</text>
</g>
<g >
<title>__asan::AsanThread::stack_top (11 samples, 0.06%)</title><rect x="1157.8" y="2037" width="0.7" height="15.0" fill="rgb(248,3,5)" rx="2" ry="2" />
<text  x="1160.82" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (76 samples, 0.39%)</title><rect x="212.3" y="1717" width="4.5" height="15.0" fill="rgb(244,223,4)" rx="2" ry="2" />
<text  x="215.30" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (490 samples, 2.48%)</title><rect x="55.3" y="1605" width="29.3" height="15.0" fill="rgb(211,8,4)" rx="2" ry="2" />
<text  x="58.28" y="1615.5" >[u..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.4" y="325" width="0.1" height="15.0" fill="rgb(214,80,43)" rx="2" ry="2" />
<text  x="1190.43" y="335.5" ></text>
</g>
<g >
<title>__interceptor_memcmp (4 samples, 0.02%)</title><rect x="326.4" y="1941" width="0.3" height="15.0" fill="rgb(237,43,45)" rx="2" ry="2" />
<text  x="329.43" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1187.6" y="1093" width="0.4" height="15.0" fill="rgb(228,72,1)" rx="2" ry="2" />
<text  x="1190.61" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="162.5" y="1701" width="0.3" height="15.0" fill="rgb(216,12,52)" rx="2" ry="2" />
<text  x="165.47" y="1711.5" ></text>
</g>
<g >
<title>@plt (2 samples, 0.01%)</title><rect x="1168.2" y="2021" width="0.1" height="15.0" fill="rgb(239,150,18)" rx="2" ry="2" />
<text  x="1171.23" y="2031.5" ></text>
</g>
<g >
<title>std::locale::~locale (4 samples, 0.02%)</title><rect x="339.5" y="1989" width="0.2" height="15.0" fill="rgb(223,146,45)" rx="2" ry="2" />
<text  x="342.47" y="1999.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (2 samples, 0.01%)</title><rect x="1013.4" y="1941" width="0.1" height="15.0" fill="rgb(244,139,49)" rx="2" ry="2" />
<text  x="1016.42" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="162.4" y="1477" width="0.1" height="15.0" fill="rgb(223,80,20)" rx="2" ry="2" />
<text  x="165.35" y="1487.5" ></text>
</g>
<g >
<title>[unknown] (357 samples, 1.81%)</title><rect x="55.3" y="565" width="21.3" height="15.0" fill="rgb(205,19,10)" rx="2" ry="2" />
<text  x="58.28" y="575.5" >[..</text>
</g>
<g >
<title>[libc-2.27.so] (2 samples, 0.01%)</title><rect x="499.1" y="1941" width="0.1" height="15.0" fill="rgb(214,104,44)" rx="2" ry="2" />
<text  x="502.12" y="1951.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_emplace_unique&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; (2 samples, 0.01%)</title><rect x="520.5" y="1989" width="0.1" height="15.0" fill="rgb(221,127,32)" rx="2" ry="2" />
<text  x="523.47" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="162.5" y="1653" width="0.3" height="15.0" fill="rgb(228,152,45)" rx="2" ry="2" />
<text  x="165.47" y="1663.5" ></text>
</g>
<g >
<title>onmt::Tokenizer::tokenize_text (1,656 samples, 8.39%)</title><rect x="636.9" y="1893" width="99.1" height="15.0" fill="rgb(224,122,21)" rx="2" ry="2" />
<text  x="639.94" y="1903.5" >onmt::Token..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.6" y="1269" width="0.4" height="15.0" fill="rgb(214,7,37)" rx="2" ry="2" />
<text  x="1190.61" y="1279.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (6 samples, 0.03%)</title><rect x="136.3" y="1557" width="0.3" height="15.0" fill="rgb(245,168,11)" rx="2" ry="2" />
<text  x="139.27" y="1567.5" ></text>
</g>
<g >
<title>__x64_sys_read (2 samples, 0.01%)</title><rect x="1113.7" y="1989" width="0.2" height="15.0" fill="rgb(232,206,10)" rx="2" ry="2" />
<text  x="1116.73" y="1999.5" ></text>
</g>
<g >
<title>arch_tlb_finish_mmu (2 samples, 0.01%)</title><rect x="1013.4" y="1957" width="0.1" height="15.0" fill="rgb(234,115,26)" rx="2" ry="2" />
<text  x="1016.42" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (401 samples, 2.03%)</title><rect x="55.3" y="1253" width="24.0" height="15.0" fill="rgb(209,109,6)" rx="2" ry="2" />
<text  x="58.28" y="1263.5" >[..</text>
</g>
<g >
<title>__interceptor_memcpy (26 samples, 0.13%)</title><rect x="1120.0" y="2037" width="1.5" height="15.0" fill="rgb(236,225,48)" rx="2" ry="2" />
<text  x="1122.95" y="2047.5" ></text>
</g>
<g >
<title>do_page_fault (11 samples, 0.06%)</title><rect x="764.5" y="2005" width="0.6" height="15.0" fill="rgb(227,192,44)" rx="2" ry="2" />
<text  x="767.47" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.6" y="597" width="0.4" height="15.0" fill="rgb(236,46,50)" rx="2" ry="2" />
<text  x="1190.61" y="607.5" ></text>
</g>
<g >
<title>release_pages (2 samples, 0.01%)</title><rect x="91.3" y="1781" width="0.1" height="15.0" fill="rgb(236,140,38)" rx="2" ry="2" />
<text  x="94.29" y="1791.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (2 samples, 0.01%)</title><rect x="89.7" y="1861" width="0.2" height="15.0" fill="rgb(230,13,20)" rx="2" ry="2" />
<text  x="92.74" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="162.3" y="1669" width="0.2" height="15.0" fill="rgb(220,98,43)" rx="2" ry="2" />
<text  x="165.29" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (388 samples, 1.97%)</title><rect x="55.3" y="1205" width="23.2" height="15.0" fill="rgb(205,214,16)" rx="2" ry="2" />
<text  x="58.28" y="1215.5" >[..</text>
</g>
<g >
<title>page_fault (21 samples, 0.11%)</title><rect x="682.3" y="1845" width="1.2" height="15.0" fill="rgb(250,135,16)" rx="2" ry="2" />
<text  x="685.28" y="1855.5" ></text>
</g>
<g >
<title>__asan::asan_memalign (2 samples, 0.01%)</title><rect x="197.6" y="1589" width="0.1" height="15.0" fill="rgb(243,115,53)" rx="2" ry="2" />
<text  x="200.58" y="1599.5" ></text>
</g>
<g >
<title>rwsem_down_read_failed (2 samples, 0.01%)</title><rect x="697.0" y="1765" width="0.1" height="15.0" fill="rgb(235,42,28)" rx="2" ry="2" />
<text  x="699.99" y="1775.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (8 samples, 0.04%)</title><rect x="138.5" y="1557" width="0.5" height="15.0" fill="rgb(248,93,34)" rx="2" ry="2" />
<text  x="141.55" y="1567.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="78.7" y="1221" width="0.1" height="15.0" fill="rgb(251,135,2)" rx="2" ry="2" />
<text  x="81.73" y="1231.5" ></text>
</g>
<g >
<title>[unknown] (513 samples, 2.60%)</title><rect x="55.3" y="1701" width="30.7" height="15.0" fill="rgb(236,199,37)" rx="2" ry="2" />
<text  x="58.28" y="1711.5" >[u..</text>
</g>
<g >
<title>find_vma (2 samples, 0.01%)</title><rect x="24.1" y="1989" width="0.1" height="15.0" fill="rgb(254,189,24)" rx="2" ry="2" />
<text  x="27.06" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.4" y="725" width="0.1" height="15.0" fill="rgb(218,221,53)" rx="2" ry="2" />
<text  x="1190.43" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="218.2" y="1797" width="0.3" height="15.0" fill="rgb(206,55,22)" rx="2" ry="2" />
<text  x="221.22" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (460 samples, 2.33%)</title><rect x="134.5" y="1909" width="27.5" height="15.0" fill="rgb(224,209,48)" rx="2" ry="2" />
<text  x="137.48" y="1919.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.5" y="2021" width="0.5" height="15.0" fill="rgb(248,122,27)" rx="2" ry="2" />
<text  x="1190.55" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="188.7" y="1925" width="0.4" height="15.0" fill="rgb(245,24,40)" rx="2" ry="2" />
<text  x="191.73" y="1935.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::Unwind (12 samples, 0.06%)</title><rect x="597.2" y="1877" width="0.7" height="15.0" fill="rgb(227,226,6)" rx="2" ry="2" />
<text  x="600.22" y="1887.5" ></text>
</g>
<g >
<title>page_fault (6 samples, 0.03%)</title><rect x="1034.0" y="2037" width="0.4" height="15.0" fill="rgb(211,66,42)" rx="2" ry="2" />
<text  x="1037.00" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (86 samples, 0.44%)</title><rect x="156.0" y="1765" width="5.1" height="15.0" fill="rgb(206,25,8)" rx="2" ry="2" />
<text  x="158.95" y="1775.5" ></text>
</g>
<g >
<title>std::locale::locale (2 samples, 0.01%)</title><rect x="518.9" y="1973" width="0.1" height="15.0" fill="rgb(248,95,54)" rx="2" ry="2" />
<text  x="521.86" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="188.9" y="1829" width="0.2" height="15.0" fill="rgb(236,213,34)" rx="2" ry="2" />
<text  x="191.91" y="1839.5" ></text>
</g>
<g >
<title>__libc_start_main (6,665 samples, 33.79%)</title><rect x="124.2" y="2037" width="398.7" height="15.0" fill="rgb(205,154,39)" rx="2" ry="2" />
<text  x="127.25" y="2047.5" >__libc_start_main</text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (78 samples, 0.40%)</title><rect x="150.9" y="1669" width="4.6" height="15.0" fill="rgb(225,21,18)" rx="2" ry="2" />
<text  x="153.87" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1187.5" y="1525" width="0.5" height="15.0" fill="rgb(219,217,46)" rx="2" ry="2" />
<text  x="1190.55" y="1535.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::append (15 samples, 0.08%)</title><rect x="655.8" y="1877" width="0.9" height="15.0" fill="rgb(222,193,53)" rx="2" ry="2" />
<text  x="658.78" y="1887.5" ></text>
</g>
<g >
<title>fasttext::ProductQuantizer::addcode (556 samples, 2.82%)</title><rect x="772.1" y="2037" width="33.2" height="15.0" fill="rgb(211,49,15)" rx="2" ry="2" />
<text  x="775.06" y="2047.5" >fa..</text>
</g>
<g >
<title>handle_mm_fault (117 samples, 0.59%)</title><rect x="943.9" y="1989" width="7.0" height="15.0" fill="rgb(240,53,22)" rx="2" ry="2" />
<text  x="946.86" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3 samples, 0.02%)</title><rect x="217.0" y="1765" width="0.2" height="15.0" fill="rgb(211,191,19)" rx="2" ry="2" />
<text  x="220.02" y="1775.5" ></text>
</g>
<g >
<title>do_page_fault (3 samples, 0.02%)</title><rect x="1030.2" y="2021" width="0.2" height="15.0" fill="rgb(249,23,13)" rx="2" ry="2" />
<text  x="1033.23" y="2031.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="187.0" y="1653" width="0.1" height="15.0" fill="rgb(209,139,7)" rx="2" ry="2" />
<text  x="190.00" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (464 samples, 2.35%)</title><rect x="55.3" y="1493" width="27.7" height="15.0" fill="rgb(251,81,46)" rx="2" ry="2" />
<text  x="58.28" y="1503.5" >[..</text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt;,  (8 samples, 0.04%)</title><rect x="188.6" y="1941" width="0.5" height="15.0" fill="rgb(221,24,34)" rx="2" ry="2" />
<text  x="191.61" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="162.5" y="1445" width="0.3" height="15.0" fill="rgb(230,117,38)" rx="2" ry="2" />
<text  x="165.53" y="1455.5" ></text>
</g>
<g >
<title>fasttext::FastText::getWordVector (5 samples, 0.03%)</title><rect x="770.7" y="2037" width="0.3" height="15.0" fill="rgb(239,187,51)" rx="2" ry="2" />
<text  x="773.75" y="2047.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="88.2" y="1797" width="0.2" height="15.0" fill="rgb(207,27,5)" rx="2" ry="2" />
<text  x="91.24" y="1807.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="216.7" y="1701" width="0.1" height="15.0" fill="rgb(213,62,3)" rx="2" ry="2" />
<text  x="219.73" y="1711.5" ></text>
</g>
<g >
<title>nlohmann::operator&gt;&gt; (135 samples, 0.68%)</title><rect x="125.3" y="1989" width="8.1" height="15.0" fill="rgb(218,51,47)" rx="2" ry="2" />
<text  x="128.33" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.6" y="741" width="0.4" height="15.0" fill="rgb(207,53,47)" rx="2" ry="2" />
<text  x="1190.61" y="751.5" ></text>
</g>
<g >
<title>nlohmann::detail::input_stream_adapter::get_character (7 samples, 0.04%)</title><rect x="130.4" y="1909" width="0.4" height="15.0" fill="rgb(207,221,4)" rx="2" ry="2" />
<text  x="133.35" y="1919.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (5 samples, 0.03%)</title><rect x="816.4" y="2037" width="0.3" height="15.0" fill="rgb(228,208,37)" rx="2" ry="2" />
<text  x="819.39" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (358 samples, 1.81%)</title><rect x="55.3" y="581" width="21.4" height="15.0" fill="rgb(222,79,12)" rx="2" ry="2" />
<text  x="58.28" y="591.5" >[..</text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (93 samples, 0.47%)</title><rect x="144.3" y="1653" width="5.6" height="15.0" fill="rgb(225,178,12)" rx="2" ry="2" />
<text  x="147.35" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (80 samples, 0.41%)</title><rect x="182.5" y="1717" width="4.8" height="15.0" fill="rgb(212,183,51)" rx="2" ry="2" />
<text  x="185.51" y="1727.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (131 samples, 0.66%)</title><rect x="105.8" y="2037" width="7.8" height="15.0" fill="rgb(230,65,7)" rx="2" ry="2" />
<text  x="108.77" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.4" y="1573" width="0.1" height="15.0" fill="rgb(228,182,5)" rx="2" ry="2" />
<text  x="1190.43" y="1583.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.03%)</title><rect x="137.9" y="1557" width="0.3" height="15.0" fill="rgb(232,41,23)" rx="2" ry="2" />
<text  x="140.89" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.4" y="1349" width="0.1" height="15.0" fill="rgb(217,18,0)" rx="2" ry="2" />
<text  x="1190.43" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1186.9" y="229" width="0.5" height="15.0" fill="rgb(252,151,18)" rx="2" ry="2" />
<text  x="1189.95" y="239.5" ></text>
</g>
<g >
<title>Eigen::internal::gemv_dense_selector&lt;2, 1, true&gt;::run&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; &gt; (288 samples, 1.46%)</title><rect x="224.9" y="1957" width="17.2" height="15.0" fill="rgb(235,144,42)" rx="2" ry="2" />
<text  x="227.92" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (95 samples, 0.48%)</title><rect x="144.3" y="1669" width="5.7" height="15.0" fill="rgb(209,4,54)" rx="2" ry="2" />
<text  x="147.29" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1186.9" y="293" width="0.5" height="15.0" fill="rgb(239,132,51)" rx="2" ry="2" />
<text  x="1189.95" y="303.5" ></text>
</g>
<g >
<title>flush_tlb_mm_range (2 samples, 0.01%)</title><rect x="1103.6" y="1845" width="0.1" height="15.0" fill="rgb(215,119,23)" rx="2" ry="2" />
<text  x="1106.62" y="1855.5" ></text>
</g>
<g >
<title>__sanitizer::mem_is_zero (3 samples, 0.02%)</title><rect x="334.9" y="1957" width="0.2" height="15.0" fill="rgb(234,175,3)" rx="2" ry="2" />
<text  x="337.92" y="1967.5" ></text>
</g>
<g >
<title>do_page_fault (6 samples, 0.03%)</title><rect x="1034.0" y="2021" width="0.4" height="15.0" fill="rgb(221,201,22)" rx="2" ry="2" />
<text  x="1037.00" y="2031.5" ></text>
</g>
<g >
<title>page_fault (27 samples, 0.14%)</title><rect x="503.0" y="1925" width="1.6" height="15.0" fill="rgb(230,71,19)" rx="2" ry="2" />
<text  x="506.01" y="1935.5" ></text>
</g>
<g >
<title>TDocument::TDocument (10 samples, 0.05%)</title><rect x="757.2" y="1973" width="0.6" height="15.0" fill="rgb(218,128,31)" rx="2" ry="2" />
<text  x="760.23" y="1983.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (8 samples, 0.04%)</title><rect x="694.0" y="1845" width="0.5" height="15.0" fill="rgb(235,50,21)" rx="2" ry="2" />
<text  x="697.00" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1186.9" y="1733" width="0.5" height="15.0" fill="rgb(215,163,43)" rx="2" ry="2" />
<text  x="1189.95" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="218.2" y="1925" width="0.3" height="15.0" fill="rgb(208,187,23)" rx="2" ry="2" />
<text  x="221.22" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1186.9" y="997" width="0.5" height="15.0" fill="rgb(216,152,6)" rx="2" ry="2" />
<text  x="1189.95" y="1007.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (45 samples, 0.23%)</title><rect x="140.7" y="1605" width="2.7" height="15.0" fill="rgb(211,92,15)" rx="2" ry="2" />
<text  x="143.70" y="1615.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="1113.7" y="2005" width="0.2" height="15.0" fill="rgb(237,39,54)" rx="2" ry="2" />
<text  x="1116.73" y="2015.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (4 samples, 0.02%)</title><rect x="214.6" y="1669" width="0.3" height="15.0" fill="rgb(227,222,10)" rx="2" ry="2" />
<text  x="217.63" y="1679.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (5 samples, 0.03%)</title><rect x="160.3" y="1669" width="0.3" height="15.0" fill="rgb(205,200,19)" rx="2" ry="2" />
<text  x="163.26" y="1679.5" ></text>
</g>
<g >
<title>fasttext::Model::predict (6 samples, 0.03%)</title><rect x="771.7" y="2037" width="0.4" height="15.0" fill="rgb(246,150,25)" rx="2" ry="2" />
<text  x="774.70" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="810.0" y="2021" width="0.2" height="15.0" fill="rgb(206,134,25)" rx="2" ry="2" />
<text  x="813.05" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (2 samples, 0.01%)</title><rect x="187.7" y="1861" width="0.1" height="15.0" fill="rgb(254,129,45)" rx="2" ry="2" />
<text  x="190.65" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1186.9" y="1525" width="0.5" height="15.0" fill="rgb(253,33,9)" rx="2" ry="2" />
<text  x="1189.95" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (84 samples, 0.43%)</title><rect x="144.6" y="1637" width="5.1" height="15.0" fill="rgb(226,58,26)" rx="2" ry="2" />
<text  x="147.65" y="1647.5" ></text>
</g>
<g >
<title>strlen@plt (2 samples, 0.01%)</title><rect x="1189.9" y="2053" width="0.1" height="15.0" fill="rgb(254,220,46)" rx="2" ry="2" />
<text  x="1192.88" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (361 samples, 1.83%)</title><rect x="55.3" y="949" width="21.6" height="15.0" fill="rgb(248,128,36)" rx="2" ry="2" />
<text  x="58.28" y="959.5" >[..</text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (2 samples, 0.01%)</title><rect x="758.9" y="2037" width="0.1" height="15.0" fill="rgb(209,4,24)" rx="2" ry="2" />
<text  x="761.90" y="2047.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.03%)</title><rect x="768.4" y="2021" width="0.3" height="15.0" fill="rgb(208,13,4)" rx="2" ry="2" />
<text  x="771.35" y="2031.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::initNgrams (9 samples, 0.05%)</title><rect x="877.3" y="1973" width="0.6" height="15.0" fill="rgb(205,65,22)" rx="2" ry="2" />
<text  x="880.34" y="1983.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.01%)</title><rect x="207.1" y="1669" width="0.1" height="15.0" fill="rgb(215,75,28)" rx="2" ry="2" />
<text  x="210.10" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (88 samples, 0.45%)</title><rect x="155.8" y="1813" width="5.3" height="15.0" fill="rgb(219,133,53)" rx="2" ry="2" />
<text  x="158.83" y="1823.5" ></text>
</g>
<g >
<title>__do_page_fault (3 samples, 0.02%)</title><rect x="1030.2" y="2005" width="0.2" height="15.0" fill="rgb(214,80,27)" rx="2" ry="2" />
<text  x="1033.23" y="2015.5" ></text>
</g>
<g >
<title>__interceptor___strxfrm_l (135 samples, 0.68%)</title><rect x="1165.5" y="2037" width="8.1" height="15.0" fill="rgb(215,225,23)" rx="2" ry="2" />
<text  x="1168.54" y="2047.5" ></text>
</g>
<g >
<title>nlohmann::detail::parser&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::sax_parse_internal&lt;nlohmann::detail::json_sax_dom_parser&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; (135 samples, 0.68%)</title><rect x="125.3" y="1957" width="8.1" height="15.0" fill="rgb(207,75,45)" rx="2" ry="2" />
<text  x="128.33" y="1967.5" ></text>
</g>
<g >
<title>syscall (17 samples, 0.09%)</title><rect x="29.0" y="2005" width="1.0" height="15.0" fill="rgb(236,199,15)" rx="2" ry="2" />
<text  x="31.96" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.4" y="981" width="0.1" height="15.0" fill="rgb(250,115,10)" rx="2" ry="2" />
<text  x="1190.43" y="991.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (13 samples, 0.07%)</title><rect x="489.3" y="1925" width="0.8" height="15.0" fill="rgb(231,115,42)" rx="2" ry="2" />
<text  x="492.31" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="162.3" y="1541" width="0.2" height="15.0" fill="rgb(253,76,32)" rx="2" ry="2" />
<text  x="165.29" y="1551.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::create&lt;std::vector&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::allocator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::vector&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::allocator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; const&amp;&gt; (4 samples, 0.02%)</title><rect x="521.8" y="1877" width="0.3" height="15.0" fill="rgb(249,172,53)" rx="2" ry="2" />
<text  x="524.85" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (4 samples, 0.02%)</title><rect x="144.0" y="1749" width="0.2" height="15.0" fill="rgb(227,80,13)" rx="2" ry="2" />
<text  x="146.99" y="1759.5" ></text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.02%)</title><rect x="197.8" y="1589" width="0.2" height="15.0" fill="rgb(253,38,18)" rx="2" ry="2" />
<text  x="200.82" y="1599.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (7 samples, 0.04%)</title><rect x="514.2" y="1877" width="0.4" height="15.0" fill="rgb(231,100,11)" rx="2" ry="2" />
<text  x="517.19" y="1887.5" ></text>
</g>
<g >
<title>__do_page_fault (3 samples, 0.02%)</title><rect x="520.0" y="1909" width="0.2" height="15.0" fill="rgb(210,16,41)" rx="2" ry="2" />
<text  x="523.00" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="218.3" y="1221" width="0.2" height="15.0" fill="rgb(225,206,3)" rx="2" ry="2" />
<text  x="221.34" y="1231.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::create&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt; const&amp;&gt; (4 samples, 0.02%)</title><rect x="521.8" y="1957" width="0.3" height="15.0" fill="rgb(248,216,49)" rx="2" ry="2" />
<text  x="524.85" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (350 samples, 1.77%)</title><rect x="55.3" y="453" width="20.9" height="15.0" fill="rgb(253,22,31)" rx="2" ry="2" />
<text  x="58.28" y="463.5" ></text>
</g>
<g >
<title>page_fault (6 samples, 0.03%)</title><rect x="652.1" y="1861" width="0.3" height="15.0" fill="rgb(237,142,6)" rx="2" ry="2" />
<text  x="655.07" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (420 samples, 2.13%)</title><rect x="163.2" y="1909" width="25.1" height="15.0" fill="rgb(223,181,11)" rx="2" ry="2" />
<text  x="166.19" y="1919.5" >s..</text>
</g>
<g >
<title>[unknown] (338 samples, 1.71%)</title><rect x="55.3" y="69" width="20.2" height="15.0" fill="rgb(243,151,18)" rx="2" ry="2" />
<text  x="58.28" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.4" y="565" width="0.1" height="15.0" fill="rgb(232,141,33)" rx="2" ry="2" />
<text  x="1190.43" y="575.5" ></text>
</g>
<g >
<title>TFastTextEmbedder::GetSentenceEmbedding (2,015 samples, 10.21%)</title><rect x="379.3" y="1973" width="120.5" height="15.0" fill="rgb(231,53,33)" rx="2" ry="2" />
<text  x="382.31" y="1983.5" >TFastTextEmbedd..</text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int&gt; (8 samples, 0.04%)</title><rect x="878.6" y="2037" width="0.5" height="15.0" fill="rgb(218,179,43)" rx="2" ry="2" />
<text  x="881.60" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (158 samples, 0.80%)</title><rect x="134.5" y="1749" width="9.5" height="15.0" fill="rgb(247,198,28)" rx="2" ry="2" />
<text  x="137.54" y="1759.5" ></text>
</g>
<g >
<title>Eigen::PlainObjectBase&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; &gt;::resize (4 samples, 0.02%)</title><rect x="385.4" y="1941" width="0.2" height="15.0" fill="rgb(252,188,31)" rx="2" ry="2" />
<text  x="388.41" y="1951.5" ></text>
</g>
<g >
<title>__libc_read (2 samples, 0.01%)</title><rect x="1113.7" y="2037" width="0.2" height="15.0" fill="rgb(210,6,27)" rx="2" ry="2" />
<text  x="1116.73" y="2047.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (21 samples, 0.11%)</title><rect x="1153.2" y="2037" width="1.3" height="15.0" fill="rgb(208,17,47)" rx="2" ry="2" />
<text  x="1156.21" y="2047.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (45 samples, 0.23%)</title><rect x="157.9" y="1685" width="2.7" height="15.0" fill="rgb(252,100,43)" rx="2" ry="2" />
<text  x="160.93" y="1695.5" ></text>
</g>
<g >
<title>onmt::unicode::is_number (17 samples, 0.09%)</title><rect x="725.5" y="1877" width="1.0" height="15.0" fill="rgb(205,72,23)" rx="2" ry="2" />
<text  x="728.52" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.6" y="213" width="0.4" height="15.0" fill="rgb(245,60,8)" rx="2" ry="2" />
<text  x="1190.61" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1186.9" y="1333" width="0.5" height="15.0" fill="rgb(238,172,10)" rx="2" ry="2" />
<text  x="1189.95" y="1343.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (4 samples, 0.02%)</title><rect x="158.5" y="1669" width="0.3" height="15.0" fill="rgb(252,3,49)" rx="2" ry="2" />
<text  x="161.52" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (352 samples, 1.78%)</title><rect x="55.3" y="517" width="21.0" height="15.0" fill="rgb(219,152,42)" rx="2" ry="2" />
<text  x="58.28" y="527.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (3 samples, 0.02%)</title><rect x="79.3" y="1253" width="0.1" height="15.0" fill="rgb(208,113,41)" rx="2" ry="2" />
<text  x="82.27" y="1263.5" ></text>
</g>
<g >
<title>__asan_memset@plt (3 samples, 0.02%)</title><rect x="581.9" y="1893" width="0.2" height="15.0" fill="rgb(240,43,24)" rx="2" ry="2" />
<text  x="584.91" y="1903.5" ></text>
</g>
<g >
<title>__lru_cache_add (2 samples, 0.01%)</title><rect x="55.0" y="1925" width="0.1" height="15.0" fill="rgb(253,13,23)" rx="2" ry="2" />
<text  x="57.98" y="1935.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.03%)</title><rect x="138.2" y="1557" width="0.3" height="15.0" fill="rgb(254,42,24)" rx="2" ry="2" />
<text  x="141.19" y="1567.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (2 samples, 0.01%)</title><rect x="514.0" y="1845" width="0.1" height="15.0" fill="rgb(231,126,44)" rx="2" ry="2" />
<text  x="517.01" y="1855.5" ></text>
</g>
<g >
<title>__asan::AsanChunk::UsedSize (55 samples, 0.28%)</title><rect x="113.6" y="2037" width="3.3" height="15.0" fill="rgb(214,106,43)" rx="2" ry="2" />
<text  x="116.60" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (360 samples, 1.82%)</title><rect x="55.3" y="821" width="21.5" height="15.0" fill="rgb(206,22,53)" rx="2" ry="2" />
<text  x="58.28" y="831.5" >[..</text>
</g>
<g >
<title>operator new (5 samples, 0.03%)</title><rect x="148.5" y="1605" width="0.3" height="15.0" fill="rgb(211,100,25)" rx="2" ry="2" />
<text  x="151.48" y="1615.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (4 samples, 0.02%)</title><rect x="84.8" y="1637" width="0.3" height="15.0" fill="rgb(223,207,40)" rx="2" ry="2" />
<text  x="87.83" y="1647.5" ></text>
</g>
<g >
<title>onmt::CaseModifier::extract_case_type (862 samples, 4.37%)</title><rect x="585.4" y="1893" width="51.5" height="15.0" fill="rgb(209,142,9)" rx="2" ry="2" />
<text  x="588.37" y="1903.5" >onmt:..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.4" y="805" width="0.1" height="15.0" fill="rgb(240,92,24)" rx="2" ry="2" />
<text  x="1190.43" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.4" y="1381" width="0.1" height="15.0" fill="rgb(222,47,32)" rx="2" ry="2" />
<text  x="1190.43" y="1391.5" ></text>
</g>
<g >
<title>__sanitizer::BlockingMutex::Lock (3 samples, 0.02%)</title><rect x="1021.6" y="2053" width="0.1" height="15.0" fill="rgb(208,80,41)" rx="2" ry="2" />
<text  x="1024.56" y="2063.5" ></text>
</g>
<g >
<title>zap_page_range (2 samples, 0.01%)</title><rect x="1013.4" y="1989" width="0.1" height="15.0" fill="rgb(243,115,33)" rx="2" ry="2" />
<text  x="1016.42" y="1999.5" ></text>
</g>
<g >
<title>__asan::GetMallocContextSize (2 samples, 0.01%)</title><rect x="165.8" y="1541" width="0.1" height="15.0" fill="rgb(225,155,31)" rx="2" ry="2" />
<text  x="168.82" y="1551.5" ></text>
</g>
<g >
<title>futex_wake (17 samples, 0.09%)</title><rect x="29.0" y="1925" width="1.0" height="15.0" fill="rgb(226,26,18)" rx="2" ry="2" />
<text  x="31.96" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_subexpr_begin (4 samples, 0.02%)</title><rect x="188.3" y="1909" width="0.3" height="15.0" fill="rgb(246,186,32)" rx="2" ry="2" />
<text  x="191.31" y="1919.5" ></text>
</g>
<g >
<title>__sanitizer::ThreadContextBase::OnJoined (7 samples, 0.04%)</title><rect x="767.2" y="2037" width="0.4" height="15.0" fill="rgb(220,48,36)" rx="2" ry="2" />
<text  x="770.16" y="2047.5" ></text>
</g>
<g >
<title>do_page_fault (2 samples, 0.01%)</title><rect x="653.1" y="1845" width="0.2" height="15.0" fill="rgb(221,145,12)" rx="2" ry="2" />
<text  x="656.15" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1187.6" y="277" width="0.4" height="15.0" fill="rgb(206,19,41)" rx="2" ry="2" />
<text  x="1190.61" y="287.5" ></text>
</g>
<g >
<title>__asan::asan_delete (2 samples, 0.01%)</title><rect x="153.4" y="1637" width="0.2" height="15.0" fill="rgb(234,17,14)" rx="2" ry="2" />
<text  x="156.44" y="1647.5" ></text>
</g>
<g >
<title>do_syscall_64 (17 samples, 0.09%)</title><rect x="29.0" y="1973" width="1.0" height="15.0" fill="rgb(244,112,51)" rx="2" ry="2" />
<text  x="31.96" y="1983.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (2 samples, 0.01%)</title><rect x="91.3" y="1829" width="0.1" height="15.0" fill="rgb(250,98,47)" rx="2" ry="2" />
<text  x="94.29" y="1839.5" ></text>
</g>
<g >
<title>__lsan::GetUserBegin (9 samples, 0.05%)</title><rect x="523.6" y="2037" width="0.6" height="15.0" fill="rgb(229,66,0)" rx="2" ry="2" />
<text  x="526.64" y="2047.5" ></text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (2 samples, 0.01%)</title><rect x="55.0" y="1941" width="0.1" height="15.0" fill="rgb(219,162,11)" rx="2" ry="2" />
<text  x="57.98" y="1951.5" ></text>
</g>
<g >
<title>get_unmapped_area (2 samples, 0.01%)</title><rect x="1103.3" y="1941" width="0.1" height="15.0" fill="rgb(235,30,42)" rx="2" ry="2" />
<text  x="1106.27" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.6" y="453" width="0.4" height="15.0" fill="rgb(216,152,20)" rx="2" ry="2" />
<text  x="1190.61" y="463.5" ></text>
</g>
<g >
<title>flush_tlb_mm_range (2 samples, 0.01%)</title><rect x="768.4" y="1877" width="0.1" height="15.0" fill="rgb(245,114,15)" rx="2" ry="2" />
<text  x="771.35" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.4" y="2021" width="0.1" height="15.0" fill="rgb(233,84,23)" rx="2" ry="2" />
<text  x="1190.37" y="2031.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2 samples, 0.01%)</title><rect x="653.1" y="1781" width="0.2" height="15.0" fill="rgb(228,34,27)" rx="2" ry="2" />
<text  x="656.15" y="1791.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (53 samples, 0.27%)</title><rect x="207.9" y="1653" width="3.1" height="15.0" fill="rgb(253,39,2)" rx="2" ry="2" />
<text  x="210.87" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (348 samples, 1.76%)</title><rect x="55.3" y="405" width="20.8" height="15.0" fill="rgb(232,88,21)" rx="2" ry="2" />
<text  x="58.28" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (80 samples, 0.41%)</title><rect x="212.2" y="1797" width="4.8" height="15.0" fill="rgb(254,161,12)" rx="2" ry="2" />
<text  x="215.18" y="1807.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (2 samples, 0.01%)</title><rect x="81.1" y="1301" width="0.1" height="15.0" fill="rgb(229,55,4)" rx="2" ry="2" />
<text  x="84.12" y="1311.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="83.5" y="1525" width="0.1" height="15.0" fill="rgb(208,83,27)" rx="2" ry="2" />
<text  x="86.51" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (72 samples, 0.36%)</title><rect x="164.0" y="1605" width="4.3" height="15.0" fill="rgb(254,107,42)" rx="2" ry="2" />
<text  x="167.03" y="1615.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (32 samples, 0.16%)</title><rect x="813.5" y="2005" width="1.9" height="15.0" fill="rgb(215,17,15)" rx="2" ry="2" />
<text  x="816.51" y="2015.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotPut (6 samples, 0.03%)</title><rect x="1180.9" y="2037" width="0.4" height="15.0" fill="rgb(246,0,43)" rx="2" ry="2" />
<text  x="1183.91" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (359 samples, 1.82%)</title><rect x="55.3" y="693" width="21.5" height="15.0" fill="rgb(253,151,21)" rx="2" ry="2" />
<text  x="58.28" y="703.5" >[..</text>
</g>
<g >
<title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (15 samples, 0.08%)</title><rect x="1180.0" y="2037" width="0.9" height="15.0" fill="rgb(251,57,39)" rx="2" ry="2" />
<text  x="1183.01" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="162.5" y="1381" width="0.3" height="15.0" fill="rgb(209,171,32)" rx="2" ry="2" />
<text  x="165.53" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (164 samples, 0.83%)</title><rect x="134.5" y="1765" width="9.8" height="15.0" fill="rgb(206,145,4)" rx="2" ry="2" />
<text  x="137.48" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (40 samples, 0.20%)</title><rect x="818.9" y="2021" width="2.4" height="15.0" fill="rgb(238,131,43)" rx="2" ry="2" />
<text  x="821.90" y="2031.5" ></text>
</g>
<g >
<title>__sanitizer::internal_munmap (2 samples, 0.01%)</title><rect x="83.4" y="1509" width="0.1" height="15.0" fill="rgb(239,122,2)" rx="2" ry="2" />
<text  x="86.39" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="162.7" y="1237" width="0.1" height="15.0" fill="rgb(239,198,46)" rx="2" ry="2" />
<text  x="165.65" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1186.9" y="949" width="0.5" height="15.0" fill="rgb(235,167,13)" rx="2" ry="2" />
<text  x="1189.95" y="959.5" ></text>
</g>
<g >
<title>__sanitizer::StackTrace::GetCurrentPc (2 samples, 0.01%)</title><rect x="598.5" y="1877" width="0.1" height="15.0" fill="rgb(233,109,30)" rx="2" ry="2" />
<text  x="601.47" y="1887.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::Unwind (2 samples, 0.01%)</title><rect x="215.4" y="1669" width="0.1" height="15.0" fill="rgb(215,11,38)" rx="2" ry="2" />
<text  x="218.35" y="1679.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (3 samples, 0.02%)</title><rect x="176.9" y="1589" width="0.2" height="15.0" fill="rgb(232,12,48)" rx="2" ry="2" />
<text  x="179.89" y="1599.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (3 samples, 0.02%)</title><rect x="616.8" y="1845" width="0.2" height="15.0" fill="rgb(219,36,9)" rx="2" ry="2" />
<text  x="619.78" y="1855.5" ></text>
</g>
<g >
<title>__sanitizer::CombinedAllocator&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&gt;, __sanitizer::SizeClassAllocatorLocalCache&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&gt; &gt;, __sanitizer::LargeMmapAllocator&lt;__asan::AsanMapUnmapCallback, __sanitizer::LargeMmapAllocatorPtrArrayDynamic&gt; &gt;::Allocate (135 samples, 0.68%)</title><rect x="1021.8" y="2053" width="8.1" height="15.0" fill="rgb(247,138,4)" rx="2" ry="2" />
<text  x="1024.80" y="2063.5" ></text>
</g>
<g >
<title>__interceptor_strlen (8 samples, 0.04%)</title><rect x="573.8" y="1925" width="0.5" height="15.0" fill="rgb(205,122,49)" rx="2" ry="2" />
<text  x="576.83" y="1935.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (2 samples, 0.01%)</title><rect x="215.2" y="1669" width="0.2" height="15.0" fill="rgb(223,95,19)" rx="2" ry="2" />
<text  x="218.23" y="1679.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::basic_regex&lt;char const*&gt; (463 samples, 2.35%)</title><rect x="190.3" y="1957" width="27.7" height="15.0" fill="rgb(237,15,3)" rx="2" ry="2" />
<text  x="193.35" y="1967.5" >s..</text>
</g>
<g >
<title>fasttext::ProductQuantizer::get_centroids (2 samples, 0.01%)</title><rect x="1106.4" y="2053" width="0.1" height="15.0" fill="rgb(233,130,39)" rx="2" ry="2" />
<text  x="1109.38" y="2063.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (2 samples, 0.01%)</title><rect x="768.4" y="1893" width="0.1" height="15.0" fill="rgb(245,139,25)" rx="2" ry="2" />
<text  x="771.35" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.4" y="1925" width="0.1" height="15.0" fill="rgb(249,16,16)" rx="2" ry="2" />
<text  x="1190.37" y="1935.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (2 samples, 0.01%)</title><rect x="810.0" y="2005" width="0.2" height="15.0" fill="rgb(251,21,14)" rx="2" ry="2" />
<text  x="813.05" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1186.9" y="1189" width="0.5" height="15.0" fill="rgb(211,88,39)" rx="2" ry="2" />
<text  x="1189.95" y="1199.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::create&lt;std::vector&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::allocator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, nlohmann::detail::json_ref&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; const*, nlohmann::detail::json_ref&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; const*&gt; (2 samples, 0.01%)</title><rect x="810.0" y="2037" width="0.2" height="15.0" fill="rgb(222,155,0)" rx="2" ry="2" />
<text  x="813.05" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="162.3" y="1557" width="0.2" height="15.0" fill="rgb(207,20,25)" rx="2" ry="2" />
<text  x="165.29" y="1567.5" ></text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.02%)</title><rect x="185.5" y="1653" width="0.2" height="15.0" fill="rgb(249,93,50)" rx="2" ry="2" />
<text  x="188.50" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.6" y="1029" width="0.4" height="15.0" fill="rgb(246,197,47)" rx="2" ry="2" />
<text  x="1190.61" y="1039.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (2 samples, 0.01%)</title><rect x="91.3" y="1861" width="0.1" height="15.0" fill="rgb(222,6,44)" rx="2" ry="2" />
<text  x="94.29" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.04%)</title><rect x="1186.9" y="1941" width="0.5" height="15.0" fill="rgb(216,15,6)" rx="2" ry="2" />
<text  x="1189.89" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (3 samples, 0.02%)</title><rect x="155.7" y="1781" width="0.1" height="15.0" fill="rgb(242,33,32)" rx="2" ry="2" />
<text  x="158.65" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (451 samples, 2.29%)</title><rect x="55.3" y="1413" width="27.0" height="15.0" fill="rgb(206,189,36)" rx="2" ry="2" />
<text  x="58.28" y="1423.5" >[..</text>
</g>
<g >
<title>__asan::GetCurrentThread (19 samples, 0.10%)</title><rect x="118.0" y="2037" width="1.2" height="15.0" fill="rgb(212,25,17)" rx="2" ry="2" />
<text  x="121.03" y="2047.5" ></text>
</g>
<g >
<title>page_fault (3 samples, 0.02%)</title><rect x="520.0" y="1941" width="0.2" height="15.0" fill="rgb(218,82,25)" rx="2" ry="2" />
<text  x="523.00" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (75 samples, 0.38%)</title><rect x="190.6" y="1685" width="4.5" height="15.0" fill="rgb(237,19,46)" rx="2" ry="2" />
<text  x="193.65" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (76 samples, 0.39%)</title><rect x="177.9" y="1685" width="4.6" height="15.0" fill="rgb(223,124,40)" rx="2" ry="2" />
<text  x="180.90" y="1695.5" ></text>
</g>
<g >
<title>RunFasttextClf (232 samples, 1.18%)</title><rect x="528.6" y="1957" width="13.9" height="15.0" fill="rgb(233,44,16)" rx="2" ry="2" />
<text  x="531.61" y="1967.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (8 samples, 0.04%)</title><rect x="215.9" y="1669" width="0.5" height="15.0" fill="rgb(252,94,50)" rx="2" ry="2" />
<text  x="218.95" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.6" y="885" width="0.4" height="15.0" fill="rgb(235,60,54)" rx="2" ry="2" />
<text  x="1190.61" y="895.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::computeSubwords (27 samples, 0.14%)</title><rect x="492.3" y="1925" width="1.6" height="15.0" fill="rgb(237,214,40)" rx="2" ry="2" />
<text  x="495.30" y="1935.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (3 samples, 0.02%)</title><rect x="27.5" y="1925" width="0.2" height="15.0" fill="rgb(239,118,0)" rx="2" ry="2" />
<text  x="30.53" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (365 samples, 1.85%)</title><rect x="55.3" y="1061" width="21.8" height="15.0" fill="rgb(215,51,52)" rx="2" ry="2" />
<text  x="58.28" y="1071.5" >[..</text>
</g>
<g >
<title>fasttext::SoftmaxLoss::computeOutput (2 samples, 0.01%)</title><rect x="1106.3" y="2037" width="0.1" height="15.0" fill="rgb(213,119,13)" rx="2" ry="2" />
<text  x="1109.26" y="2047.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (42 samples, 0.21%)</title><rect x="165.3" y="1557" width="2.5" height="15.0" fill="rgb(246,0,30)" rx="2" ry="2" />
<text  x="168.28" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.6" y="1157" width="0.4" height="15.0" fill="rgb(216,161,35)" rx="2" ry="2" />
<text  x="1190.61" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.5" y="1557" width="0.5" height="15.0" fill="rgb(224,82,26)" rx="2" ry="2" />
<text  x="1190.55" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.5" y="1701" width="0.5" height="15.0" fill="rgb(253,157,37)" rx="2" ry="2" />
<text  x="1190.55" y="1711.5" ></text>
</g>
<g >
<title>__do_page_fault (21 samples, 0.11%)</title><rect x="682.3" y="1813" width="1.2" height="15.0" fill="rgb(216,131,0)" rx="2" ry="2" />
<text  x="685.28" y="1823.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (899 samples, 4.56%)</title><rect x="822.5" y="2005" width="53.8" height="15.0" fill="rgb(236,54,8)" rx="2" ry="2" />
<text  x="825.49" y="2015.5" >__san..</text>
</g>
<g >
<title>new_sync_read (2 samples, 0.01%)</title><rect x="124.1" y="1925" width="0.1" height="15.0" fill="rgb(239,176,45)" rx="2" ry="2" />
<text  x="127.13" y="1935.5" ></text>
</g>
<g >
<title>unmap_region (2 samples, 0.01%)</title><rect x="85.8" y="1589" width="0.2" height="15.0" fill="rgb(212,51,13)" rx="2" ry="2" />
<text  x="88.85" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (420 samples, 2.13%)</title><rect x="163.2" y="1893" width="25.1" height="15.0" fill="rgb(244,51,53)" rx="2" ry="2" />
<text  x="166.19" y="1903.5" >s..</text>
</g>
<g >
<title>memcpy (13 samples, 0.07%)</title><rect x="655.0" y="1877" width="0.8" height="15.0" fill="rgb(219,44,45)" rx="2" ry="2" />
<text  x="658.00" y="1887.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (2 samples, 0.01%)</title><rect x="152.1" y="1637" width="0.1" height="15.0" fill="rgb(244,112,33)" rx="2" ry="2" />
<text  x="155.12" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (86 samples, 0.44%)</title><rect x="168.4" y="1717" width="5.1" height="15.0" fill="rgb(224,206,36)" rx="2" ry="2" />
<text  x="171.39" y="1727.5" ></text>
</g>
<g >
<title>__asan_memcpy (4 samples, 0.02%)</title><rect x="166.1" y="1541" width="0.3" height="15.0" fill="rgb(254,48,10)" rx="2" ry="2" />
<text  x="169.12" y="1551.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (24 samples, 0.12%)</title><rect x="879.1" y="2005" width="1.4" height="15.0" fill="rgb(252,50,30)" rx="2" ry="2" />
<text  x="882.07" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (100 samples, 0.51%)</title><rect x="200.6" y="1717" width="6.0" height="15.0" fill="rgb(222,192,24)" rx="2" ry="2" />
<text  x="203.58" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.02%)</title><rect x="218.2" y="1493" width="0.3" height="15.0" fill="rgb(240,141,44)" rx="2" ry="2" />
<text  x="221.22" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (4 samples, 0.02%)</title><rect x="187.8" y="1829" width="0.3" height="15.0" fill="rgb(218,160,18)" rx="2" ry="2" />
<text  x="190.83" y="1839.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (18 samples, 0.09%)</title><rect x="1003.1" y="2053" width="1.1" height="15.0" fill="rgb(210,59,38)" rx="2" ry="2" />
<text  x="1006.13" y="2063.5" ></text>
</g>
<g >
<title>Eigen::DenseCoeffsBase&lt;Eigen::Transpose&lt;Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_sum_op&lt;float, float&gt;, Eigen::Product&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0&gt; const, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const&gt;, 0&gt;::coeff (349 samples, 1.77%)</title><rect x="385.3" y="1957" width="20.9" height="15.0" fill="rgb(242,194,23)" rx="2" ry="2" />
<text  x="388.29" y="1967.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (25 samples, 0.13%)</title><rect x="1103.1" y="2037" width="1.5" height="15.0" fill="rgb(212,7,51)" rx="2" ry="2" />
<text  x="1106.09" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1186.9" y="821" width="0.5" height="15.0" fill="rgb(243,19,9)" rx="2" ry="2" />
<text  x="1189.95" y="831.5" ></text>
</g>
<g >
<title>[unknown] (442 samples, 2.24%)</title><rect x="55.3" y="1381" width="26.4" height="15.0" fill="rgb(253,89,3)" rx="2" ry="2" />
<text  x="58.28" y="1391.5" >[..</text>
</g>
<g >
<title>TDocument::operator= (3 samples, 0.02%)</title><rect x="522.7" y="1957" width="0.2" height="15.0" fill="rgb(239,7,39)" rx="2" ry="2" />
<text  x="525.69" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="218.3" y="1301" width="0.2" height="15.0" fill="rgb(230,143,43)" rx="2" ry="2" />
<text  x="221.34" y="1311.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::~collate (20 samples, 0.10%)</title><rect x="821.3" y="2037" width="1.2" height="15.0" fill="rgb(215,62,16)" rx="2" ry="2" />
<text  x="824.29" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (345 samples, 1.75%)</title><rect x="55.3" y="245" width="20.6" height="15.0" fill="rgb(242,10,10)" rx="2" ry="2" />
<text  x="58.28" y="255.5" ></text>
</g>
<g >
<title>free_unref_page_list (2 samples, 0.01%)</title><rect x="1103.9" y="1797" width="0.1" height="15.0" fill="rgb(244,44,45)" rx="2" ry="2" />
<text  x="1106.86" y="1807.5" ></text>
</g>
<g >
<title>std::ios_base::~ios_base (2 samples, 0.01%)</title><rect x="878.1" y="2037" width="0.1" height="15.0" fill="rgb(249,95,26)" rx="2" ry="2" />
<text  x="881.06" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="162.3" y="1701" width="0.2" height="15.0" fill="rgb(207,110,8)" rx="2" ry="2" />
<text  x="165.29" y="1711.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (2 samples, 0.01%)</title><rect x="184.8" y="1653" width="0.2" height="15.0" fill="rgb(224,81,41)" rx="2" ry="2" />
<text  x="187.84" y="1663.5" ></text>
</g>
<g >
<title>__sanitizer::internal_munmap (2 samples, 0.01%)</title><rect x="85.8" y="1685" width="0.2" height="15.0" fill="rgb(244,61,17)" rx="2" ry="2" />
<text  x="88.85" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (522 samples, 2.65%)</title><rect x="55.3" y="1749" width="31.2" height="15.0" fill="rgb(250,171,46)" rx="2" ry="2" />
<text  x="58.28" y="1759.5" >[u..</text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (3 samples, 0.02%)</title><rect x="85.4" y="1669" width="0.1" height="15.0" fill="rgb(216,64,19)" rx="2" ry="2" />
<text  x="88.37" y="1679.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (8 samples, 0.04%)</title><rect x="1122.0" y="2053" width="0.5" height="15.0" fill="rgb(224,74,1)" rx="2" ry="2" />
<text  x="1124.99" y="2063.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&gt;::ReturnToAllocator (12 samples, 0.06%)</title><rect x="1033.6" y="2053" width="0.8" height="15.0" fill="rgb(214,36,5)" rx="2" ry="2" />
<text  x="1036.64" y="2063.5" ></text>
</g>
<g >
<title>operator new[] (42 samples, 0.21%)</title><rect x="1184.3" y="2037" width="2.5" height="15.0" fill="rgb(207,188,44)" rx="2" ry="2" />
<text  x="1187.32" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (75 samples, 0.38%)</title><rect x="134.9" y="1669" width="4.5" height="15.0" fill="rgb(218,85,3)" rx="2" ry="2" />
<text  x="137.90" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1186.9" y="517" width="0.5" height="15.0" fill="rgb(249,41,9)" rx="2" ry="2" />
<text  x="1189.95" y="527.5" ></text>
</g>
<g >
<title>[unknown] (484 samples, 2.45%)</title><rect x="55.3" y="1573" width="28.9" height="15.0" fill="rgb(250,118,0)" rx="2" ry="2" />
<text  x="58.28" y="1583.5" >[u..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1186.9" y="1141" width="0.5" height="15.0" fill="rgb(249,44,28)" rx="2" ry="2" />
<text  x="1189.95" y="1151.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.02%)</title><rect x="194.2" y="1557" width="0.2" height="15.0" fill="rgb(254,127,23)" rx="2" ry="2" />
<text  x="197.23" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.04%)</title><rect x="1186.9" y="1909" width="0.5" height="15.0" fill="rgb(208,29,20)" rx="2" ry="2" />
<text  x="1189.89" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.6" y="37" width="0.1" height="15.0" fill="rgb(244,84,0)" rx="2" ry="2" />
<text  x="1190.61" y="47.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (2 samples, 0.01%)</title><rect x="217.1" y="1733" width="0.1" height="15.0" fill="rgb(246,21,36)" rx="2" ry="2" />
<text  x="220.08" y="1743.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::addSubwords (3 samples, 0.02%)</title><rect x="769.0" y="2037" width="0.2" height="15.0" fill="rgb(215,191,43)" rx="2" ry="2" />
<text  x="772.01" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (97 samples, 0.49%)</title><rect x="144.3" y="1749" width="5.8" height="15.0" fill="rgb(251,119,50)" rx="2" ry="2" />
<text  x="147.29" y="1759.5" ></text>
</g>
<g >
<title>Eigen::PlainObjectBase&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; &gt;::resize (5 samples, 0.03%)</title><rect x="224.6" y="1957" width="0.3" height="15.0" fill="rgb(249,133,14)" rx="2" ry="2" />
<text  x="227.62" y="1967.5" ></text>
</g>
<g >
<title>clear_page_erms (13 samples, 0.07%)</title><rect x="945.4" y="1893" width="0.8" height="15.0" fill="rgb(232,128,49)" rx="2" ry="2" />
<text  x="948.41" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (84 samples, 0.43%)</title><rect x="206.7" y="1733" width="5.1" height="15.0" fill="rgb(223,49,13)" rx="2" ry="2" />
<text  x="209.74" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.0" y="117" width="0.4" height="15.0" fill="rgb(242,45,49)" rx="2" ry="2" />
<text  x="1190.01" y="127.5" ></text>
</g>
<g >
<title>__interceptor_memcmp (2 samples, 0.01%)</title><rect x="491.0" y="1925" width="0.1" height="15.0" fill="rgb(252,70,19)" rx="2" ry="2" />
<text  x="493.98" y="1935.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (11 samples, 0.06%)</title><rect x="592.0" y="1877" width="0.7" height="15.0" fill="rgb(227,119,3)" rx="2" ry="2" />
<text  x="595.01" y="1887.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (3 samples, 0.02%)</title><rect x="163.5" y="1621" width="0.2" height="15.0" fill="rgb(208,174,22)" rx="2" ry="2" />
<text  x="166.55" y="1631.5" ></text>
</g>
<g >
<title>tlb_flush_mmu_free (5 samples, 0.03%)</title><rect x="1103.7" y="1845" width="0.3" height="15.0" fill="rgb(232,167,17)" rx="2" ry="2" />
<text  x="1106.74" y="1855.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (12 samples, 0.06%)</title><rect x="163.3" y="1653" width="0.7" height="15.0" fill="rgb(241,75,35)" rx="2" ry="2" />
<text  x="166.31" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (59 samples, 0.30%)</title><rect x="164.4" y="1573" width="3.6" height="15.0" fill="rgb(205,33,11)" rx="2" ry="2" />
<text  x="167.45" y="1583.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (3 samples, 0.02%)</title><rect x="86.8" y="1765" width="0.2" height="15.0" fill="rgb(227,81,12)" rx="2" ry="2" />
<text  x="89.80" y="1775.5" ></text>
</g>
<g >
<title>mem_cgroup_throttle_swaprate (2 samples, 0.01%)</title><rect x="764.9" y="1925" width="0.1" height="15.0" fill="rgb(230,44,17)" rx="2" ry="2" />
<text  x="767.88" y="1935.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;TDocument, std::allocator&lt;TDocument&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;TDocument, std::allocator&lt;TDocument&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;TDocument, std::allocator&lt;TDocument&gt; &gt; &gt; &gt; &gt;::_M_erase (2 samples, 0.01%)</title><rect x="522.2" y="2005" width="0.1" height="15.0" fill="rgb(253,42,4)" rx="2" ry="2" />
<text  x="525.21" y="2015.5" ></text>
</g>
<g >
<title>onmt::Tokenizer::tokenize (2,938 samples, 14.89%)</title><rect x="580.3" y="1909" width="175.7" height="15.0" fill="rgb(225,90,28)" rx="2" ry="2" />
<text  x="583.29" y="1919.5" >onmt::Tokenizer::token..</text>
</g>
<g >
<title>[unknown] (422 samples, 2.14%)</title><rect x="55.3" y="1333" width="25.2" height="15.0" fill="rgb(234,65,1)" rx="2" ry="2" />
<text  x="58.28" y="1343.5" >[..</text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="91.1" y="1973" width="0.1" height="15.0" fill="rgb(222,166,36)" rx="2" ry="2" />
<text  x="94.05" y="1983.5" ></text>
</g>
<g >
<title>onmt::ITokenizer::tokenize (3,053 samples, 15.48%)</title><rect x="574.3" y="1941" width="182.6" height="15.0" fill="rgb(228,49,13)" rx="2" ry="2" />
<text  x="577.31" y="1951.5" >onmt::ITokenizer::token..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.06%)</title><rect x="162.1" y="1909" width="0.7" height="15.0" fill="rgb(228,214,22)" rx="2" ry="2" />
<text  x="165.11" y="1919.5" ></text>
</g>
<g >
<title>x2apic_send_IPI (22 samples, 0.11%)</title><rect x="949.4" y="1781" width="1.3" height="15.0" fill="rgb(232,138,13)" rx="2" ry="2" />
<text  x="952.36" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="218.2" y="1781" width="0.3" height="15.0" fill="rgb(247,61,43)" rx="2" ry="2" />
<text  x="221.22" y="1791.5" ></text>
</g>
<g >
<title>handle_mm_fault (9 samples, 0.05%)</title><rect x="764.6" y="1973" width="0.5" height="15.0" fill="rgb(223,182,31)" rx="2" ry="2" />
<text  x="767.59" y="1983.5" ></text>
</g>
<g >
<title>__dynamic_cast (4 samples, 0.02%)</title><rect x="157.6" y="1685" width="0.3" height="15.0" fill="rgb(239,228,35)" rx="2" ry="2" />
<text  x="160.63" y="1695.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::Unwind (2 samples, 0.01%)</title><rect x="166.9" y="1541" width="0.1" height="15.0" fill="rgb(240,37,35)" rx="2" ry="2" />
<text  x="169.90" y="1551.5" ></text>
</g>
<g >
<title>__dynamic_cast (9 samples, 0.05%)</title><rect x="209.0" y="1637" width="0.5" height="15.0" fill="rgb(253,218,29)" rx="2" ry="2" />
<text  x="212.01" y="1647.5" ></text>
</g>
<g >
<title>syscall (9 samples, 0.05%)</title><rect x="133.8" y="1973" width="0.6" height="15.0" fill="rgb(212,155,12)" rx="2" ry="2" />
<text  x="136.82" y="1983.5" ></text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (2 samples, 0.01%)</title><rect x="946.7" y="1925" width="0.1" height="15.0" fill="rgb(249,179,18)" rx="2" ry="2" />
<text  x="949.73" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.4" y="709" width="0.1" height="15.0" fill="rgb(236,91,1)" rx="2" ry="2" />
<text  x="1190.43" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.04%)</title><rect x="1186.9" y="1957" width="0.5" height="15.0" fill="rgb(208,157,10)" rx="2" ry="2" />
<text  x="1189.89" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (271 samples, 1.37%)</title><rect x="190.4" y="1781" width="16.2" height="15.0" fill="rgb(244,68,53)" rx="2" ry="2" />
<text  x="193.41" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (77 samples, 0.39%)</title><rect x="212.3" y="1749" width="4.6" height="15.0" fill="rgb(248,6,11)" rx="2" ry="2" />
<text  x="215.30" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (394 samples, 2.00%)</title><rect x="55.3" y="1237" width="23.5" height="15.0" fill="rgb(215,194,40)" rx="2" ry="2" />
<text  x="58.28" y="1247.5" >[..</text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (6 samples, 0.03%)</title><rect x="172.6" y="1573" width="0.4" height="15.0" fill="rgb(228,81,17)" rx="2" ry="2" />
<text  x="175.64" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1187.6" y="325" width="0.4" height="15.0" fill="rgb(252,143,10)" rx="2" ry="2" />
<text  x="1190.61" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.6" y="1077" width="0.4" height="15.0" fill="rgb(217,57,51)" rx="2" ry="2" />
<text  x="1190.61" y="1087.5" ></text>
</g>
<g >
<title>__sanitizer::StackTrace::GetCurrentPc (6 samples, 0.03%)</title><rect x="1181.3" y="2037" width="0.3" height="15.0" fill="rgb(241,119,53)" rx="2" ry="2" />
<text  x="1184.27" y="2047.5" ></text>
</g>
<g >
<title>__sanitizer::mem_is_zero (6 samples, 0.03%)</title><rect x="1104.6" y="2053" width="0.4" height="15.0" fill="rgb(241,78,5)" rx="2" ry="2" />
<text  x="1107.64" y="2063.5" ></text>
</g>
<g >
<title>strcmp@plt (4 samples, 0.02%)</title><rect x="43.9" y="2037" width="0.2" height="15.0" fill="rgb(249,107,47)" rx="2" ry="2" />
<text  x="46.86" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1187.6" y="1045" width="0.4" height="15.0" fill="rgb(221,86,18)" rx="2" ry="2" />
<text  x="1190.61" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (62 samples, 0.31%)</title><rect x="173.7" y="1637" width="3.7" height="15.0" fill="rgb(222,137,42)" rx="2" ry="2" />
<text  x="176.72" y="1647.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::_M_default_append (2 samples, 0.01%)</title><rect x="162.8" y="1941" width="0.1" height="15.0" fill="rgb(207,124,53)" rx="2" ry="2" />
<text  x="165.77" y="1951.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.04%)</title><rect x="133.9" y="1957" width="0.5" height="15.0" fill="rgb(252,34,23)" rx="2" ry="2" />
<text  x="136.88" y="1967.5" ></text>
</g>
<g >
<title>do_page_fault (4 samples, 0.02%)</title><rect x="1189.3" y="2005" width="0.3" height="15.0" fill="rgb(207,6,18)" rx="2" ry="2" />
<text  x="1192.34" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (7 samples, 0.04%)</title><rect x="767.2" y="2021" width="0.4" height="15.0" fill="rgb(220,181,43)" rx="2" ry="2" />
<text  x="770.16" y="2031.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::push_back (5 samples, 0.03%)</title><rect x="521.8" y="2005" width="0.3" height="15.0" fill="rgb(220,92,41)" rx="2" ry="2" />
<text  x="524.79" y="2015.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (2 samples, 0.01%)</title><rect x="177.1" y="1605" width="0.1" height="15.0" fill="rgb(246,75,19)" rx="2" ry="2" />
<text  x="180.13" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1186.9" y="1125" width="0.5" height="15.0" fill="rgb(205,183,36)" rx="2" ry="2" />
<text  x="1189.95" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1186.9" y="1349" width="0.5" height="15.0" fill="rgb(240,36,43)" rx="2" ry="2" />
<text  x="1189.95" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (72 samples, 0.36%)</title><rect x="139.6" y="1637" width="4.3" height="15.0" fill="rgb(207,10,29)" rx="2" ry="2" />
<text  x="142.56" y="1647.5" ></text>
</g>
<g >
<title>release_pages (6 samples, 0.03%)</title><rect x="1105.1" y="1861" width="0.4" height="15.0" fill="rgb(241,89,39)" rx="2" ry="2" />
<text  x="1108.12" y="1871.5" ></text>
</g>
<g >
<title>handle_mm_fault (5 samples, 0.03%)</title><rect x="652.1" y="1813" width="0.3" height="15.0" fill="rgb(217,113,11)" rx="2" ry="2" />
<text  x="655.07" y="1823.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (5 samples, 0.03%)</title><rect x="757.3" y="1957" width="0.3" height="15.0" fill="rgb(206,86,11)" rx="2" ry="2" />
<text  x="760.35" y="1967.5" ></text>
</g>
<g >
<title>__pthread_getspecific (2 samples, 0.01%)</title><rect x="654.8" y="1877" width="0.1" height="15.0" fill="rgb(233,14,36)" rx="2" ry="2" />
<text  x="657.76" y="1887.5" ></text>
</g>
<g >
<title>TAgencyRating::ScoreUrl (475 samples, 2.41%)</title><rect x="190.2" y="1989" width="28.4" height="15.0" fill="rgb(216,177,44)" rx="2" ry="2" />
<text  x="193.23" y="1999.5" >TA..</text>
</g>
<g >
<title>ptep_clear_flush (41 samples, 0.21%)</title><rect x="948.3" y="1925" width="2.5" height="15.0" fill="rgb(234,203,2)" rx="2" ry="2" />
<text  x="951.34" y="1935.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::reserve (24 samples, 0.12%)</title><rect x="879.1" y="2037" width="1.4" height="15.0" fill="rgb(254,157,41)" rx="2" ry="2" />
<text  x="882.07" y="2047.5" ></text>
</g>
<g >
<title>__do_munmap (2 samples, 0.01%)</title><rect x="85.8" y="1605" width="0.2" height="15.0" fill="rgb(235,91,26)" rx="2" ry="2" />
<text  x="88.85" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (358 samples, 1.81%)</title><rect x="55.3" y="661" width="21.4" height="15.0" fill="rgb(231,145,47)" rx="2" ry="2" />
<text  x="58.28" y="671.5" >[..</text>
</g>
<g >
<title>fasttext::HierarchicalSoftmaxLoss::dfs (4 samples, 0.02%)</title><rect x="572.1" y="1909" width="0.2" height="15.0" fill="rgb(218,172,5)" rx="2" ry="2" />
<text  x="575.10" y="1919.5" ></text>
</g>
<g >
<title>exit_mmap (7 samples, 0.04%)</title><rect x="1105.1" y="1957" width="0.4" height="15.0" fill="rgb(239,37,43)" rx="2" ry="2" />
<text  x="1108.06" y="1967.5" ></text>
</g>
<g >
<title>__interceptor_memcmp (128 samples, 0.65%)</title><rect x="1141.4" y="2037" width="7.6" height="15.0" fill="rgb(207,41,31)" rx="2" ry="2" />
<text  x="1144.37" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="162.4" y="1509" width="0.1" height="15.0" fill="rgb(248,77,20)" rx="2" ry="2" />
<text  x="165.35" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1186.9" y="1701" width="0.5" height="15.0" fill="rgb(205,86,28)" rx="2" ry="2" />
<text  x="1189.95" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.4" y="1093" width="0.1" height="15.0" fill="rgb(237,146,34)" rx="2" ry="2" />
<text  x="1190.43" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="162.3" y="1589" width="0.2" height="15.0" fill="rgb(243,221,50)" rx="2" ry="2" />
<text  x="165.29" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (86 samples, 0.44%)</title><rect x="206.6" y="1781" width="5.2" height="15.0" fill="rgb(232,155,14)" rx="2" ry="2" />
<text  x="209.62" y="1791.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (2 samples, 0.01%)</title><rect x="160.6" y="1685" width="0.1" height="15.0" fill="rgb(223,175,48)" rx="2" ry="2" />
<text  x="163.62" y="1695.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; const&amp;&gt; (3 samples, 0.02%)</title><rect x="521.9" y="1781" width="0.2" height="15.0" fill="rgb(213,179,4)" rx="2" ry="2" />
<text  x="524.91" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.6" y="693" width="0.4" height="15.0" fill="rgb(252,141,53)" rx="2" ry="2" />
<text  x="1190.61" y="703.5" ></text>
</g>
<g >
<title>do_mmap (21 samples, 0.11%)</title><rect x="1103.3" y="1957" width="1.2" height="15.0" fill="rgb(216,51,53)" rx="2" ry="2" />
<text  x="1106.27" y="1967.5" ></text>
</g>
<g >
<title>onmt::unicode::is_letter (209 samples, 1.06%)</title><rect x="622.8" y="1877" width="12.5" height="15.0" fill="rgb(249,104,28)" rx="2" ry="2" />
<text  x="625.82" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.4" y="517" width="0.1" height="15.0" fill="rgb(250,39,8)" rx="2" ry="2" />
<text  x="1190.43" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="218.2" y="1477" width="0.3" height="15.0" fill="rgb(253,146,2)" rx="2" ry="2" />
<text  x="221.22" y="1487.5" ></text>
</g>
<g >
<title>[libOpenNMTTokenizer.so] (2 samples, 0.01%)</title><rect x="591.9" y="1877" width="0.1" height="15.0" fill="rgb(244,185,35)" rx="2" ry="2" />
<text  x="594.89" y="1887.5" ></text>
</g>
<g >
<title>__asan_memset (34 samples, 0.17%)</title><rect x="685.3" y="1861" width="2.0" height="15.0" fill="rgb(221,215,31)" rx="2" ry="2" />
<text  x="688.27" y="1871.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (6 samples, 0.03%)</title><rect x="134.5" y="1669" width="0.4" height="15.0" fill="rgb(231,157,52)" rx="2" ry="2" />
<text  x="137.54" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (348 samples, 1.76%)</title><rect x="55.3" y="389" width="20.8" height="15.0" fill="rgb(208,124,35)" rx="2" ry="2" />
<text  x="58.28" y="399.5" ></text>
</g>
<g >
<title>__pthread_getspecific (6 samples, 0.03%)</title><rect x="608.1" y="1861" width="0.4" height="15.0" fill="rgb(228,75,12)" rx="2" ry="2" />
<text  x="611.11" y="1871.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="88.6" y="1813" width="0.1" height="15.0" fill="rgb(214,120,19)" rx="2" ry="2" />
<text  x="91.60" y="1823.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (4 samples, 0.02%)</title><rect x="189.3" y="1989" width="0.2" height="15.0" fill="rgb(254,41,14)" rx="2" ry="2" />
<text  x="192.27" y="1999.5" ></text>
</g>
<g >
<title>__asan::RZSize2Log (65 samples, 0.33%)</title><rect x="997.3" y="2053" width="3.9" height="15.0" fill="rgb(221,42,13)" rx="2" ry="2" />
<text  x="1000.27" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (460 samples, 2.33%)</title><rect x="134.5" y="1925" width="27.5" height="15.0" fill="rgb(253,1,13)" rx="2" ry="2" />
<text  x="137.48" y="1935.5" >s..</text>
</g>
<g >
<title>[unknown] (350 samples, 1.77%)</title><rect x="55.3" y="437" width="20.9" height="15.0" fill="rgb(251,224,10)" rx="2" ry="2" />
<text  x="58.28" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (75 samples, 0.38%)</title><rect x="134.9" y="1605" width="4.5" height="15.0" fill="rgb(228,129,29)" rx="2" ry="2" />
<text  x="137.90" y="1615.5" ></text>
</g>
<g >
<title>__interceptor_memcmp (2 samples, 0.01%)</title><rect x="529.2" y="1925" width="0.1" height="15.0" fill="rgb(223,75,50)" rx="2" ry="2" />
<text  x="532.21" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1186.9" y="565" width="0.5" height="15.0" fill="rgb(253,53,25)" rx="2" ry="2" />
<text  x="1189.95" y="575.5" ></text>
</g>
<g >
<title>__do_munmap (12 samples, 0.06%)</title><rect x="1103.4" y="1925" width="0.8" height="15.0" fill="rgb(248,53,26)" rx="2" ry="2" />
<text  x="1106.45" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (84 samples, 0.43%)</title><rect x="195.3" y="1653" width="5.0" height="15.0" fill="rgb(229,166,21)" rx="2" ry="2" />
<text  x="198.31" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1187.6" y="1429" width="0.4" height="15.0" fill="rgb(220,145,21)" rx="2" ry="2" />
<text  x="1190.61" y="1439.5" ></text>
</g>
<g >
<title>release_pages (5 samples, 0.03%)</title><rect x="1103.7" y="1813" width="0.3" height="15.0" fill="rgb(231,66,40)" rx="2" ry="2" />
<text  x="1106.74" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="218.2" y="1877" width="0.3" height="15.0" fill="rgb(237,33,9)" rx="2" ry="2" />
<text  x="221.22" y="1887.5" ></text>
</g>
<g >
<title>__pthread_getspecific (4 samples, 0.02%)</title><rect x="166.6" y="1541" width="0.2" height="15.0" fill="rgb(251,138,7)" rx="2" ry="2" />
<text  x="169.60" y="1551.5" ></text>
</g>
<g >
<title>__lru_cache_add (7 samples, 0.04%)</title><rect x="26.3" y="1941" width="0.4" height="15.0" fill="rgb(215,110,39)" rx="2" ry="2" />
<text  x="29.27" y="1951.5" ></text>
</g>
<g >
<title>__do_page_fault (6 samples, 0.03%)</title><rect x="652.1" y="1829" width="0.3" height="15.0" fill="rgb(209,219,36)" rx="2" ry="2" />
<text  x="655.07" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.4" y="1445" width="0.1" height="15.0" fill="rgb(217,108,40)" rx="2" ry="2" />
<text  x="1190.43" y="1455.5" ></text>
</g>
<g >
<title>__clock_gettime (4 samples, 0.02%)</title><rect x="123.8" y="2037" width="0.3" height="15.0" fill="rgb(214,209,47)" rx="2" ry="2" />
<text  x="126.83" y="2047.5" ></text>
</g>
<g >
<title>__handle_mm_fault (4 samples, 0.02%)</title><rect x="1034.1" y="1973" width="0.3" height="15.0" fill="rgb(229,58,39)" rx="2" ry="2" />
<text  x="1037.12" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (7 samples, 0.04%)</title><rect x="211.8" y="1797" width="0.4" height="15.0" fill="rgb(252,162,22)" rx="2" ry="2" />
<text  x="214.76" y="1807.5" ></text>
</g>
<g >
<title>native_write_msr (22 samples, 0.11%)</title><rect x="949.4" y="1765" width="1.3" height="15.0" fill="rgb(242,175,49)" rx="2" ry="2" />
<text  x="952.36" y="1775.5" ></text>
</g>
<g >
<title>__asan::asan_memalign (2 samples, 0.01%)</title><rect x="1125.0" y="2037" width="0.1" height="15.0" fill="rgb(228,220,42)" rx="2" ry="2" />
<text  x="1127.98" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (81 samples, 0.41%)</title><rect x="134.5" y="1717" width="4.9" height="15.0" fill="rgb(252,2,0)" rx="2" ry="2" />
<text  x="137.54" y="1727.5" ></text>
</g>
<g >
<title>__x64_sys_madvise (2 samples, 0.01%)</title><rect x="88.4" y="1797" width="0.1" height="15.0" fill="rgb(238,132,35)" rx="2" ry="2" />
<text  x="91.42" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (68 samples, 0.34%)</title><rect x="212.7" y="1701" width="4.0" height="15.0" fill="rgb(231,64,36)" rx="2" ry="2" />
<text  x="215.66" y="1711.5" ></text>
</g>
<g >
<title>page_fault (2 samples, 0.01%)</title><rect x="653.1" y="1861" width="0.2" height="15.0" fill="rgb(229,116,14)" rx="2" ry="2" />
<text  x="656.15" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (13 samples, 0.07%)</title><rect x="163.2" y="1685" width="0.8" height="15.0" fill="rgb(244,145,31)" rx="2" ry="2" />
<text  x="166.25" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (357 samples, 1.81%)</title><rect x="134.5" y="1813" width="21.3" height="15.0" fill="rgb(223,225,51)" rx="2" ry="2" />
<text  x="137.48" y="1823.5" >s..</text>
</g>
<g >
<title>[unknown] (359 samples, 1.82%)</title><rect x="55.3" y="741" width="21.5" height="15.0" fill="rgb(238,209,15)" rx="2" ry="2" />
<text  x="58.28" y="751.5" >[..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="162.5" y="1733" width="0.3" height="15.0" fill="rgb(246,135,5)" rx="2" ry="2" />
<text  x="165.47" y="1743.5" ></text>
</g>
<g >
<title>arch_tlb_finish_mmu (7 samples, 0.04%)</title><rect x="525.0" y="1941" width="0.4" height="15.0" fill="rgb(213,188,12)" rx="2" ry="2" />
<text  x="528.02" y="1951.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.01%)</title><rect x="191.1" y="1589" width="0.1" height="15.0" fill="rgb(213,219,36)" rx="2" ry="2" />
<text  x="194.12" y="1599.5" ></text>
</g>
<g >
<title>release_pages (2 samples, 0.01%)</title><rect x="768.6" y="1845" width="0.1" height="15.0" fill="rgb(238,80,21)" rx="2" ry="2" />
<text  x="771.59" y="1855.5" ></text>
</g>
<g >
<title>__dynamic_cast (4 samples, 0.02%)</title><rect x="196.6" y="1605" width="0.2" height="15.0" fill="rgb(247,127,19)" rx="2" ry="2" />
<text  x="199.57" y="1615.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="89.7" y="1893" width="0.2" height="15.0" fill="rgb(245,17,10)" rx="2" ry="2" />
<text  x="92.74" y="1903.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (2 samples, 0.01%)</title><rect x="87.0" y="1653" width="0.2" height="15.0" fill="rgb(228,118,14)" rx="2" ry="2" />
<text  x="90.04" y="1663.5" ></text>
</g>
<g >
<title>clear_page_erms (6 samples, 0.03%)</title><rect x="697.4" y="1733" width="0.3" height="15.0" fill="rgb(235,194,32)" rx="2" ry="2" />
<text  x="700.35" y="1743.5" ></text>
</g>
<g >
<title>do_exit (7 samples, 0.04%)</title><rect x="1105.1" y="1989" width="0.4" height="15.0" fill="rgb(242,27,11)" rx="2" ry="2" />
<text  x="1108.06" y="1999.5" ></text>
</g>
<g >
<title>__interceptor_memcmp (23 samples, 0.12%)</title><rect x="1010.0" y="2053" width="1.4" height="15.0" fill="rgb(220,3,44)" rx="2" ry="2" />
<text  x="1013.01" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (359 samples, 1.82%)</title><rect x="55.3" y="677" width="21.5" height="15.0" fill="rgb(251,51,41)" rx="2" ry="2" />
<text  x="58.28" y="687.5" >[..</text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (6 samples, 0.03%)</title><rect x="90.6" y="1957" width="0.3" height="15.0" fill="rgb(238,25,37)" rx="2" ry="2" />
<text  x="93.57" y="1967.5" ></text>
</g>
<g >
<title>arch_get_unmapped_area_topdown (2 samples, 0.01%)</title><rect x="1103.3" y="1925" width="0.1" height="15.0" fill="rgb(233,69,51)" rx="2" ry="2" />
<text  x="1106.27" y="1935.5" ></text>
</g>
<g >
<title>fasttext::DenseMatrix::addRowToVector (1,249 samples, 6.33%)</title><rect x="242.4" y="1973" width="74.7" height="15.0" fill="rgb(215,187,28)" rx="2" ry="2" />
<text  x="245.39" y="1983.5" >fasttext..</text>
</g>
<g >
<title>__handle_mm_fault (2 samples, 0.01%)</title><rect x="520.1" y="1877" width="0.1" height="15.0" fill="rgb(223,39,53)" rx="2" ry="2" />
<text  x="523.06" y="1887.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (11 samples, 0.06%)</title><rect x="538.6" y="1909" width="0.7" height="15.0" fill="rgb(214,224,51)" rx="2" ry="2" />
<text  x="541.60" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1186.9" y="1493" width="0.5" height="15.0" fill="rgb(205,4,39)" rx="2" ry="2" />
<text  x="1189.95" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (86 samples, 0.44%)</title><rect x="156.0" y="1781" width="5.1" height="15.0" fill="rgb(248,188,33)" rx="2" ry="2" />
<text  x="158.95" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="218.2" y="1893" width="0.3" height="15.0" fill="rgb(205,9,14)" rx="2" ry="2" />
<text  x="221.22" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.04%)</title><rect x="162.3" y="1813" width="0.5" height="15.0" fill="rgb(227,2,50)" rx="2" ry="2" />
<text  x="165.29" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1186.9" y="1093" width="0.5" height="15.0" fill="rgb(246,67,31)" rx="2" ry="2" />
<text  x="1189.95" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.4" y="229" width="0.1" height="15.0" fill="rgb(210,166,10)" rx="2" ry="2" />
<text  x="1190.43" y="239.5" ></text>
</g>
<g >
<title>__interceptor_strlen (13 samples, 0.07%)</title><rect x="1173.6" y="2037" width="0.8" height="15.0" fill="rgb(226,41,12)" rx="2" ry="2" />
<text  x="1176.61" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="188.9" y="1349" width="0.1" height="15.0" fill="rgb(210,92,40)" rx="2" ry="2" />
<text  x="191.91" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.6" y="1317" width="0.4" height="15.0" fill="rgb(222,84,3)" rx="2" ry="2" />
<text  x="1190.61" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1186.9" y="1621" width="0.5" height="15.0" fill="rgb(214,86,46)" rx="2" ry="2" />
<text  x="1189.95" y="1631.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (19 samples, 0.10%)</title><rect x="593.9" y="1877" width="1.2" height="15.0" fill="rgb(217,64,31)" rx="2" ry="2" />
<text  x="596.93" y="1887.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (4 samples, 0.02%)</title><rect x="80.5" y="1333" width="0.3" height="15.0" fill="rgb(224,195,40)" rx="2" ry="2" />
<text  x="83.52" y="1343.5" ></text>
</g>
<g >
<title>tlb_flush_mmu_free (7 samples, 0.04%)</title><rect x="1105.1" y="1893" width="0.4" height="15.0" fill="rgb(219,46,35)" rx="2" ry="2" />
<text  x="1108.06" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1187.6" y="1285" width="0.4" height="15.0" fill="rgb(225,228,30)" rx="2" ry="2" />
<text  x="1190.61" y="1295.5" ></text>
</g>
<g >
<title>page_fault (2 samples, 0.01%)</title><rect x="93.1" y="2005" width="0.1" height="15.0" fill="rgb(238,83,2)" rx="2" ry="2" />
<text  x="96.09" y="2015.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (78 samples, 0.40%)</title><rect x="745.3" y="1877" width="4.7" height="15.0" fill="rgb(229,121,27)" rx="2" ry="2" />
<text  x="748.32" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (2 samples, 0.01%)</title><rect x="217.7" y="1845" width="0.1" height="15.0" fill="rgb(215,215,54)" rx="2" ry="2" />
<text  x="220.68" y="1855.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (3 samples, 0.02%)</title><rect x="878.7" y="2005" width="0.1" height="15.0" fill="rgb(230,0,41)" rx="2" ry="2" />
<text  x="881.66" y="2015.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="182.1" y="1621" width="0.1" height="15.0" fill="rgb(217,46,54)" rx="2" ry="2" />
<text  x="185.09" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.02%)</title><rect x="162.5" y="1461" width="0.3" height="15.0" fill="rgb(229,134,34)" rx="2" ry="2" />
<text  x="165.53" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1186.9" y="341" width="0.5" height="15.0" fill="rgb(233,79,7)" rx="2" ry="2" />
<text  x="1189.95" y="351.5" ></text>
</g>
<g >
<title>perf_iterate_sb (2 samples, 0.01%)</title><rect x="1104.2" y="1909" width="0.1" height="15.0" fill="rgb(211,185,22)" rx="2" ry="2" />
<text  x="1107.22" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (346 samples, 1.75%)</title><rect x="55.3" y="261" width="20.7" height="15.0" fill="rgb(223,12,4)" rx="2" ry="2" />
<text  x="58.28" y="271.5" ></text>
</g>
<g >
<title>TSlinkClustering::Cluster (2,994 samples, 15.18%)</title><rect x="340.4" y="2005" width="179.1" height="15.0" fill="rgb(206,61,27)" rx="2" ry="2" />
<text  x="343.37" y="2015.5" >TSlinkClustering::Cluster</text>
</g>
<g >
<title>free_pages_and_swap_cache (2 samples, 0.01%)</title><rect x="768.6" y="1861" width="0.1" height="15.0" fill="rgb(249,1,35)" rx="2" ry="2" />
<text  x="771.59" y="1871.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="88.2" y="1813" width="0.2" height="15.0" fill="rgb(229,133,6)" rx="2" ry="2" />
<text  x="91.24" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.4" y="1317" width="0.1" height="15.0" fill="rgb(228,44,3)" rx="2" ry="2" />
<text  x="1190.43" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="162.3" y="1685" width="0.2" height="15.0" fill="rgb(228,36,24)" rx="2" ry="2" />
<text  x="165.29" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1186.9" y="789" width="0.5" height="15.0" fill="rgb(212,22,32)" rx="2" ry="2" />
<text  x="1189.95" y="799.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (5 samples, 0.03%)</title><rect x="525.1" y="1893" width="0.3" height="15.0" fill="rgb(252,51,33)" rx="2" ry="2" />
<text  x="528.14" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (10 samples, 0.05%)</title><rect x="161.3" y="1861" width="0.6" height="15.0" fill="rgb(238,229,53)" rx="2" ry="2" />
<text  x="164.28" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.4" y="789" width="0.1" height="15.0" fill="rgb(224,187,13)" rx="2" ry="2" />
<text  x="1190.43" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (76 samples, 0.39%)</title><rect x="139.4" y="1733" width="4.6" height="15.0" fill="rgb(222,85,29)" rx="2" ry="2" />
<text  x="142.44" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (368 samples, 1.87%)</title><rect x="55.3" y="1109" width="22.0" height="15.0" fill="rgb(229,71,15)" rx="2" ry="2" />
<text  x="58.28" y="1119.5" >[..</text>
</g>
<g >
<title>native_send_call_func_single_ipi (22 samples, 0.11%)</title><rect x="949.4" y="1797" width="1.3" height="15.0" fill="rgb(215,145,20)" rx="2" ry="2" />
<text  x="952.36" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.4" y="1605" width="0.1" height="15.0" fill="rgb(207,128,33)" rx="2" ry="2" />
<text  x="1190.43" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="218.3" y="1205" width="0.2" height="15.0" fill="rgb(241,121,43)" rx="2" ry="2" />
<text  x="221.34" y="1215.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (6 samples, 0.03%)</title><rect x="54.4" y="1893" width="0.3" height="15.0" fill="rgb(248,123,53)" rx="2" ry="2" />
<text  x="57.38" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1186.9" y="405" width="0.5" height="15.0" fill="rgb(243,10,37)" rx="2" ry="2" />
<text  x="1189.95" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1186.9" y="613" width="0.5" height="15.0" fill="rgb(236,206,52)" rx="2" ry="2" />
<text  x="1189.95" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1186.9" y="1781" width="0.5" height="15.0" fill="rgb(233,108,53)" rx="2" ry="2" />
<text  x="1189.95" y="1791.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append@plt (4 samples, 0.02%)</title><rect x="1121.7" y="2053" width="0.3" height="15.0" fill="rgb(228,177,18)" rx="2" ry="2" />
<text  x="1124.75" y="2063.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (7 samples, 0.04%)</title><rect x="767.2" y="1989" width="0.4" height="15.0" fill="rgb(212,133,12)" rx="2" ry="2" />
<text  x="770.16" y="1999.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_range_insert&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (2 samples, 0.01%)</title><rect x="1188.3" y="2053" width="0.1" height="15.0" fill="rgb(212,43,15)" rx="2" ry="2" />
<text  x="1191.27" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1187.1" y="37" width="0.3" height="15.0" fill="rgb(217,120,38)" rx="2" ry="2" />
<text  x="1190.07" y="47.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1187.5" y="1477" width="0.5" height="15.0" fill="rgb(251,10,28)" rx="2" ry="2" />
<text  x="1190.55" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="1187.7" y="165" width="0.3" height="15.0" fill="rgb(254,108,32)" rx="2" ry="2" />
<text  x="1190.73" y="175.5" ></text>
</g>
<g >
<title>pmd_page_vaddr (2 samples, 0.01%)</title><rect x="27.8" y="1973" width="0.1" height="15.0" fill="rgb(252,185,35)" rx="2" ry="2" />
<text  x="30.83" y="1983.5" ></text>
</g>
<g >
<title>do_page_fault (35 samples, 0.18%)</title><rect x="512.6" y="1941" width="2.1" height="15.0" fill="rgb(232,45,48)" rx="2" ry="2" />
<text  x="515.58" y="1951.5" ></text>
</g>
<g >
<title>__asan_memmove (2 samples, 0.01%)</title><rect x="325.1" y="1941" width="0.1" height="15.0" fill="rgb(237,27,28)" rx="2" ry="2" />
<text  x="328.11" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.4" y="1141" width="0.1" height="15.0" fill="rgb(236,196,28)" rx="2" ry="2" />
<text  x="1190.43" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1187.6" y="1333" width="0.4" height="15.0" fill="rgb(221,74,50)" rx="2" ry="2" />
<text  x="1190.61" y="1343.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="88.6" y="1829" width="0.1" height="15.0" fill="rgb(230,122,54)" rx="2" ry="2" />
<text  x="91.60" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (72 samples, 0.36%)</title><rect x="164.0" y="1637" width="4.3" height="15.0" fill="rgb(225,131,20)" rx="2" ry="2" />
<text  x="167.03" y="1647.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="124.1" y="2005" width="0.1" height="15.0" fill="rgb(254,90,13)" rx="2" ry="2" />
<text  x="127.13" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (76 samples, 0.39%)</title><rect x="139.4" y="1717" width="4.6" height="15.0" fill="rgb(219,100,9)" rx="2" ry="2" />
<text  x="142.44" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (81 samples, 0.41%)</title><rect x="195.5" y="1637" width="4.8" height="15.0" fill="rgb(226,45,15)" rx="2" ry="2" />
<text  x="198.49" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (448 samples, 2.27%)</title><rect x="134.5" y="1861" width="26.8" height="15.0" fill="rgb(218,104,8)" rx="2" ry="2" />
<text  x="137.48" y="1871.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.02%)</title><rect x="162.5" y="1605" width="0.3" height="15.0" fill="rgb(247,58,31)" rx="2" ry="2" />
<text  x="165.53" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_quantifier (2 samples, 0.01%)</title><rect x="200.5" y="1749" width="0.1" height="15.0" fill="rgb(215,61,25)" rx="2" ry="2" />
<text  x="203.46" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (67 samples, 0.34%)</title><rect x="135.2" y="1589" width="4.0" height="15.0" fill="rgb(250,131,37)" rx="2" ry="2" />
<text  x="138.20" y="1599.5" ></text>
</g>
<g >
<title>page_fault (21 samples, 0.11%)</title><rect x="54.0" y="2021" width="1.2" height="15.0" fill="rgb(225,33,37)" rx="2" ry="2" />
<text  x="56.97" y="2031.5" ></text>
</g>
<g >
<title>try_charge (4 samples, 0.02%)</title><rect x="514.4" y="1845" width="0.2" height="15.0" fill="rgb(251,32,4)" rx="2" ry="2" />
<text  x="517.37" y="1855.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (4 samples, 0.02%)</title><rect x="1122.1" y="2037" width="0.2" height="15.0" fill="rgb(223,184,2)" rx="2" ry="2" />
<text  x="1125.11" y="2047.5" ></text>
</g>
<g >
<title>std::packaged_task&lt;boost::optional&lt;TDocument&gt;  (3 samples, 0.02%)</title><rect x="28.7" y="2005" width="0.2" height="15.0" fill="rgb(247,183,42)" rx="2" ry="2" />
<text  x="31.72" y="2015.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.01%)</title><rect x="195.9" y="1621" width="0.1" height="15.0" fill="rgb(249,163,53)" rx="2" ry="2" />
<text  x="198.91" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.4" y="341" width="0.1" height="15.0" fill="rgb(220,152,49)" rx="2" ry="2" />
<text  x="1190.43" y="351.5" ></text>
</g>
<g >
<title>__asan::AsanThread::stack_top (2 samples, 0.01%)</title><rect x="214.5" y="1669" width="0.1" height="15.0" fill="rgb(244,90,33)" rx="2" ry="2" />
<text  x="217.45" y="1679.5" ></text>
</g>
<g >
<title>nlohmann::detail::external_constructor&lt; (2 samples, 0.01%)</title><rect x="542.5" y="1941" width="0.2" height="15.0" fill="rgb(223,177,12)" rx="2" ry="2" />
<text  x="545.55" y="1951.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (2 samples, 0.01%)</title><rect x="768.4" y="1925" width="0.1" height="15.0" fill="rgb(233,64,16)" rx="2" ry="2" />
<text  x="771.35" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="188.9" y="1813" width="0.2" height="15.0" fill="rgb(252,21,16)" rx="2" ry="2" />
<text  x="191.91" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (75 samples, 0.38%)</title><rect x="190.6" y="1669" width="4.5" height="15.0" fill="rgb(242,98,32)" rx="2" ry="2" />
<text  x="193.65" y="1679.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="83.0" y="1493" width="0.2" height="15.0" fill="rgb(223,114,22)" rx="2" ry="2" />
<text  x="86.04" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (4 samples, 0.02%)</title><rect x="187.8" y="1813" width="0.3" height="15.0" fill="rgb(228,227,5)" rx="2" ry="2" />
<text  x="190.83" y="1823.5" ></text>
</g>
<g >
<title>do_page_fault (89 samples, 0.45%)</title><rect x="22.6" y="2021" width="5.3" height="15.0" fill="rgb(222,84,5)" rx="2" ry="2" />
<text  x="25.62" y="2031.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (3 samples, 0.02%)</title><rect x="1124.1" y="2037" width="0.2" height="15.0" fill="rgb(235,8,28)" rx="2" ry="2" />
<text  x="1127.08" y="2047.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::set (23 samples, 0.12%)</title><rect x="584.0" y="1893" width="1.4" height="15.0" fill="rgb(246,217,3)" rx="2" ry="2" />
<text  x="587.00" y="1903.5" ></text>
</g>
<g >
<title>release_pages (5 samples, 0.03%)</title><rect x="525.1" y="1877" width="0.3" height="15.0" fill="rgb(223,138,1)" rx="2" ry="2" />
<text  x="528.14" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="218.2" y="1573" width="0.3" height="15.0" fill="rgb(205,42,24)" rx="2" ry="2" />
<text  x="221.22" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (338 samples, 1.71%)</title><rect x="55.3" y="101" width="20.2" height="15.0" fill="rgb(217,38,9)" rx="2" ry="2" />
<text  x="58.28" y="111.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (4 samples, 0.02%)</title><rect x="764.9" y="1941" width="0.2" height="15.0" fill="rgb(210,31,0)" rx="2" ry="2" />
<text  x="767.88" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.4" y="1045" width="0.1" height="15.0" fill="rgb(245,38,36)" rx="2" ry="2" />
<text  x="1190.43" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.4" y="1589" width="0.1" height="15.0" fill="rgb(242,212,36)" rx="2" ry="2" />
<text  x="1190.43" y="1599.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct (5 samples, 0.03%)</title><rect x="1122.5" y="2053" width="0.3" height="15.0" fill="rgb(219,177,2)" rx="2" ry="2" />
<text  x="1125.47" y="2063.5" ></text>
</g>
<g >
<title>__asan::AsanTSDGet (2 samples, 0.01%)</title><rect x="203.3" y="1605" width="0.1" height="15.0" fill="rgb(235,210,50)" rx="2" ry="2" />
<text  x="206.33" y="1615.5" ></text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::next_byte_in_range (2 samples, 0.01%)</title><rect x="125.7" y="1941" width="0.1" height="15.0" fill="rgb(220,20,17)" rx="2" ry="2" />
<text  x="128.69" y="1951.5" ></text>
</g>
<g >
<title>free_pgtables (2 samples, 0.01%)</title><rect x="768.0" y="1877" width="0.1" height="15.0" fill="rgb(220,6,22)" rx="2" ry="2" />
<text  x="770.99" y="1887.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (54 samples, 0.27%)</title><rect x="135.8" y="1573" width="3.2" height="15.0" fill="rgb(233,204,20)" rx="2" ry="2" />
<text  x="138.79" y="1583.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="78.5" y="1205" width="0.1" height="15.0" fill="rgb(218,58,25)" rx="2" ry="2" />
<text  x="81.49" y="1215.5" ></text>
</g>
<g >
<title>__lsan::ResetTagsCb (4 samples, 0.02%)</title><rect x="524.5" y="2037" width="0.3" height="15.0" fill="rgb(246,101,4)" rx="2" ry="2" />
<text  x="527.54" y="2047.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (2 samples, 0.01%)</title><rect x="1122.3" y="2037" width="0.2" height="15.0" fill="rgb(208,157,36)" rx="2" ry="2" />
<text  x="1125.35" y="2047.5" ></text>
</g>
<g >
<title>zap_page_range (10 samples, 0.05%)</title><rect x="525.0" y="1973" width="0.6" height="15.0" fill="rgb(208,51,16)" rx="2" ry="2" />
<text  x="528.02" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="218.2" y="1621" width="0.3" height="15.0" fill="rgb(210,75,15)" rx="2" ry="2" />
<text  x="221.22" y="1631.5" ></text>
</g>
<g >
<title>fasttext::entry::entry (2 samples, 0.01%)</title><rect x="877.9" y="1973" width="0.1" height="15.0" fill="rgb(254,17,41)" rx="2" ry="2" />
<text  x="880.88" y="1983.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.02%)</title><rect x="87.0" y="1749" width="0.2" height="15.0" fill="rgb(225,130,18)" rx="2" ry="2" />
<text  x="89.98" y="1759.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (3 samples, 0.02%)</title><rect x="170.5" y="1573" width="0.2" height="15.0" fill="rgb(214,118,17)" rx="2" ry="2" />
<text  x="173.49" y="1583.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (17 samples, 0.09%)</title><rect x="29.0" y="1989" width="1.0" height="15.0" fill="rgb(227,8,47)" rx="2" ry="2" />
<text  x="31.96" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (84 samples, 0.43%)</title><rect x="195.3" y="1685" width="5.0" height="15.0" fill="rgb(251,210,50)" rx="2" ry="2" />
<text  x="198.31" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (486 samples, 2.46%)</title><rect x="55.3" y="1589" width="29.1" height="15.0" fill="rgb(205,102,52)" rx="2" ry="2" />
<text  x="58.28" y="1599.5" >[u..</text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (27 samples, 0.14%)</title><rect x="683.5" y="1861" width="1.6" height="15.0" fill="rgb(234,43,26)" rx="2" ry="2" />
<text  x="686.53" y="1871.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="83.8" y="1541" width="0.1" height="15.0" fill="rgb(233,117,10)" rx="2" ry="2" />
<text  x="86.81" y="1551.5" ></text>
</g>
<g >
<title>tlb_flush_mmu_free (2 samples, 0.01%)</title><rect x="91.3" y="1813" width="0.1" height="15.0" fill="rgb(250,208,29)" rx="2" ry="2" />
<text  x="94.29" y="1823.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (2 samples, 0.01%)</title><rect x="85.2" y="1653" width="0.1" height="15.0" fill="rgb(236,18,17)" rx="2" ry="2" />
<text  x="88.19" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.4" y="1029" width="0.1" height="15.0" fill="rgb(244,184,39)" rx="2" ry="2" />
<text  x="1190.43" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (73 samples, 0.37%)</title><rect x="164.0" y="1653" width="4.4" height="15.0" fill="rgb(248,76,50)" rx="2" ry="2" />
<text  x="167.03" y="1663.5" ></text>
</g>
<g >
<title>boost::optional_detail::optional_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::assign (2 samples, 0.01%)</title><rect x="522.7" y="1941" width="0.2" height="15.0" fill="rgb(235,146,38)" rx="2" ry="2" />
<text  x="525.75" y="1951.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (2 samples, 0.01%)</title><rect x="91.3" y="1797" width="0.1" height="15.0" fill="rgb(236,95,6)" rx="2" ry="2" />
<text  x="94.29" y="1807.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (2 samples, 0.01%)</title><rect x="86.6" y="1749" width="0.1" height="15.0" fill="rgb(221,73,39)" rx="2" ry="2" />
<text  x="89.57" y="1759.5" ></text>
</g>
<g >
<title>GetHost (477 samples, 2.42%)</title><rect x="134.4" y="1973" width="28.5" height="15.0" fill="rgb(207,159,10)" rx="2" ry="2" />
<text  x="137.36" y="1983.5" >Ge..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1186.9" y="757" width="0.5" height="15.0" fill="rgb(230,134,43)" rx="2" ry="2" />
<text  x="1189.95" y="767.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="83.2" y="1509" width="0.1" height="15.0" fill="rgb(243,102,42)" rx="2" ry="2" />
<text  x="86.16" y="1519.5" ></text>
</g>
<g >
<title>unmap_region (2 samples, 0.01%)</title><rect x="86.4" y="1637" width="0.1" height="15.0" fill="rgb(237,24,22)" rx="2" ry="2" />
<text  x="89.39" y="1647.5" ></text>
</g>
<g >
<title>__pthread_getspecific (5 samples, 0.03%)</title><rect x="214.9" y="1669" width="0.3" height="15.0" fill="rgb(216,179,54)" rx="2" ry="2" />
<text  x="217.93" y="1679.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (75 samples, 0.38%)</title><rect x="1160.2" y="2037" width="4.4" height="15.0" fill="rgb(207,62,8)" rx="2" ry="2" />
<text  x="1163.15" y="2047.5" ></text>
</g>
<g >
<title>__asan_memset@plt (2 samples, 0.01%)</title><rect x="654.6" y="1877" width="0.2" height="15.0" fill="rgb(209,99,31)" rx="2" ry="2" />
<text  x="657.64" y="1887.5" ></text>
</g>
<g >
<title>std::__future_base::_Task_state&lt;std::_Bind&lt;Annotate (18 samples, 0.09%)</title><rect x="28.9" y="2021" width="1.1" height="15.0" fill="rgb(253,33,8)" rx="2" ry="2" />
<text  x="31.90" y="2031.5" ></text>
</g>
<g >
<title>__vm_munmap (2 samples, 0.01%)</title><rect x="85.8" y="1621" width="0.2" height="15.0" fill="rgb(211,87,47)" rx="2" ry="2" />
<text  x="88.85" y="1631.5" ></text>
</g>
<g >
<title>__handle_mm_fault (3 samples, 0.02%)</title><rect x="1105.6" y="1957" width="0.2" height="15.0" fill="rgb(226,216,23)" rx="2" ry="2" />
<text  x="1108.60" y="1967.5" ></text>
</g>
<g >
<title>__asan::Allocator::Deallocate (3 samples, 0.02%)</title><rect x="165.5" y="1541" width="0.1" height="15.0" fill="rgb(244,177,42)" rx="2" ry="2" />
<text  x="168.46" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="218.2" y="1829" width="0.3" height="15.0" fill="rgb(234,82,24)" rx="2" ry="2" />
<text  x="221.22" y="1839.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::reserve (2 samples, 0.01%)</title><rect x="636.8" y="1877" width="0.1" height="15.0" fill="rgb(213,209,9)" rx="2" ry="2" />
<text  x="639.82" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (448 samples, 2.27%)</title><rect x="134.5" y="1893" width="26.8" height="15.0" fill="rgb(213,93,32)" rx="2" ry="2" />
<text  x="137.48" y="1903.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.4" y="277" width="0.1" height="15.0" fill="rgb(233,45,25)" rx="2" ry="2" />
<text  x="1190.43" y="287.5" ></text>
</g>
<g >
<title>__x64_sys_futex (8 samples, 0.04%)</title><rect x="133.9" y="1925" width="0.5" height="15.0" fill="rgb(206,185,14)" rx="2" ry="2" />
<text  x="136.88" y="1935.5" ></text>
</g>
<g >
<title>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::dump (4 samples, 0.02%)</title><rect x="520.8" y="1925" width="0.2" height="15.0" fill="rgb(216,44,23)" rx="2" ry="2" />
<text  x="523.77" y="1935.5" ></text>
</g>
<g >
<title>unmap_page_range (2 samples, 0.01%)</title><rect x="525.5" y="1941" width="0.1" height="15.0" fill="rgb(210,157,34)" rx="2" ry="2" />
<text  x="528.50" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="813.3" y="2021" width="0.2" height="15.0" fill="rgb(249,166,41)" rx="2" ry="2" />
<text  x="816.34" y="2031.5" ></text>
</g>
<g >
<title>fasttext::Matrix::size (45 samples, 0.23%)</title><rect x="494.6" y="1957" width="2.7" height="15.0" fill="rgb(223,56,9)" rx="2" ry="2" />
<text  x="497.63" y="1967.5" ></text>
</g>
<g >
<title>__asan::AsanThread::stack_top (2 samples, 0.01%)</title><rect x="175.3" y="1589" width="0.2" height="15.0" fill="rgb(227,64,11)" rx="2" ry="2" />
<text  x="178.33" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.4" y="853" width="0.1" height="15.0" fill="rgb(213,165,0)" rx="2" ry="2" />
<text  x="1190.43" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.02%)</title><rect x="218.2" y="1541" width="0.3" height="15.0" fill="rgb(241,44,18)" rx="2" ry="2" />
<text  x="221.22" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1186.9" y="693" width="0.5" height="15.0" fill="rgb(225,6,11)" rx="2" ry="2" />
<text  x="1189.95" y="703.5" ></text>
</g>
<g >
<title>do_syscall_64 (8 samples, 0.04%)</title><rect x="133.9" y="1941" width="0.5" height="15.0" fill="rgb(234,125,10)" rx="2" ry="2" />
<text  x="136.88" y="1951.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (2 samples, 0.01%)</title><rect x="816.7" y="2037" width="0.1" height="15.0" fill="rgb(240,73,24)" rx="2" ry="2" />
<text  x="819.69" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1186.9" y="901" width="0.5" height="15.0" fill="rgb(241,50,24)" rx="2" ry="2" />
<text  x="1189.95" y="911.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (50 samples, 0.25%)</title><rect x="196.8" y="1605" width="3.0" height="15.0" fill="rgb(248,82,14)" rx="2" ry="2" />
<text  x="199.81" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="162.4" y="1493" width="0.1" height="15.0" fill="rgb(251,44,13)" rx="2" ry="2" />
<text  x="165.35" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="162.3" y="1621" width="0.2" height="15.0" fill="rgb(241,87,24)" rx="2" ry="2" />
<text  x="165.29" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="188.9" y="1621" width="0.1" height="15.0" fill="rgb(235,12,8)" rx="2" ry="2" />
<text  x="191.91" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (2 samples, 0.01%)</title><rect x="217.8" y="1845" width="0.1" height="15.0" fill="rgb(215,172,54)" rx="2" ry="2" />
<text  x="220.80" y="1855.5" ></text>
</g>
<g >
<title>clear_page_erms (17 samples, 0.09%)</title><rect x="513.0" y="1845" width="1.0" height="15.0" fill="rgb(205,172,21)" rx="2" ry="2" />
<text  x="516.00" y="1855.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;std::__detail::_State&lt;char&gt; const*, std::__detail::_State&lt;char&gt;*&gt; (11 samples, 0.06%)</title><rect x="163.4" y="1637" width="0.6" height="15.0" fill="rgb(240,55,45)" rx="2" ry="2" />
<text  x="166.37" y="1647.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (4 samples, 0.02%)</title><rect x="335.1" y="1973" width="0.2" height="15.0" fill="rgb(227,156,26)" rx="2" ry="2" />
<text  x="338.10" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1187.5" y="1573" width="0.5" height="15.0" fill="rgb(235,219,9)" rx="2" ry="2" />
<text  x="1190.55" y="1583.5" ></text>
</g>
<g >
<title>__do_munmap (2 samples, 0.01%)</title><rect x="91.3" y="1893" width="0.1" height="15.0" fill="rgb(250,117,42)" rx="2" ry="2" />
<text  x="94.29" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="188.9" y="1445" width="0.1" height="15.0" fill="rgb(227,200,30)" rx="2" ry="2" />
<text  x="191.91" y="1455.5" ></text>
</g>
<g >
<title>[unknown] (370 samples, 1.88%)</title><rect x="55.3" y="1141" width="22.1" height="15.0" fill="rgb(219,32,24)" rx="2" ry="2" />
<text  x="58.28" y="1151.5" >[..</text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (7 samples, 0.04%)</title><rect x="211.8" y="1765" width="0.4" height="15.0" fill="rgb(252,155,5)" rx="2" ry="2" />
<text  x="214.76" y="1775.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (6 samples, 0.03%)</title><rect x="133.9" y="1877" width="0.3" height="15.0" fill="rgb(233,2,27)" rx="2" ry="2" />
<text  x="136.88" y="1887.5" ></text>
</g>
<g >
<title>__sanitizer::QuarantineCache&lt;__asan::QuarantineCallback&gt;::Enqueue (100 samples, 0.51%)</title><rect x="759.1" y="2037" width="6.0" height="15.0" fill="rgb(220,74,23)" rx="2" ry="2" />
<text  x="762.14" y="2047.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::computeSubwords (9 samples, 0.05%)</title><rect x="541.3" y="1893" width="0.5" height="15.0" fill="rgb(213,105,44)" rx="2" ry="2" />
<text  x="544.29" y="1903.5" ></text>
</g>
<g >
<title>Eigen::PlainObjectBase&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; &gt;::resize (3 samples, 0.02%)</title><rect x="44.2" y="2037" width="0.2" height="15.0" fill="rgb(245,152,23)" rx="2" ry="2" />
<text  x="47.22" y="2047.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.03%)</title><rect x="494.3" y="1941" width="0.3" height="15.0" fill="rgb(215,47,5)" rx="2" ry="2" />
<text  x="497.33" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.04%)</title><rect x="162.3" y="1829" width="0.5" height="15.0" fill="rgb(228,205,47)" rx="2" ry="2" />
<text  x="165.29" y="1839.5" ></text>
</g>
<g >
<title>__asan::asan_memalign (32 samples, 0.16%)</title><rect x="1001.2" y="2053" width="1.9" height="15.0" fill="rgb(247,107,3)" rx="2" ry="2" />
<text  x="1004.16" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.5" y="1637" width="0.5" height="15.0" fill="rgb(212,193,34)" rx="2" ry="2" />
<text  x="1190.55" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (2 samples, 0.01%)</title><rect x="217.1" y="1749" width="0.1" height="15.0" fill="rgb(244,121,48)" rx="2" ry="2" />
<text  x="220.08" y="1759.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (593 samples, 3.01%)</title><rect x="1151.4" y="2053" width="35.4" height="15.0" fill="rgb(216,27,39)" rx="2" ry="2" />
<text  x="1154.36" y="2063.5" >std..</text>
</g>
<g >
<title>std::vector&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::allocator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;::_M_realloc_insert&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; const&amp;&gt; (4 samples, 0.02%)</title><rect x="521.8" y="1989" width="0.3" height="15.0" fill="rgb(234,188,46)" rx="2" ry="2" />
<text  x="524.85" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1186.9" y="965" width="0.5" height="15.0" fill="rgb(228,41,21)" rx="2" ry="2" />
<text  x="1189.95" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3 samples, 0.02%)</title><rect x="161.3" y="1813" width="0.2" height="15.0" fill="rgb(239,207,3)" rx="2" ry="2" />
<text  x="164.28" y="1823.5" ></text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.02%)</title><rect x="193.5" y="1557" width="0.1" height="15.0" fill="rgb(210,60,48)" rx="2" ry="2" />
<text  x="196.46" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.6" y="101" width="0.1" height="15.0" fill="rgb(219,58,31)" rx="2" ry="2" />
<text  x="1190.61" y="111.5" ></text>
</g>
<g >
<title>__do_munmap (3 samples, 0.02%)</title><rect x="87.0" y="1685" width="0.2" height="15.0" fill="rgb(232,55,31)" rx="2" ry="2" />
<text  x="89.98" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.04%)</title><rect x="162.3" y="1797" width="0.5" height="15.0" fill="rgb(210,133,35)" rx="2" ry="2" />
<text  x="165.29" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.6" y="581" width="0.4" height="15.0" fill="rgb(237,43,26)" rx="2" ry="2" />
<text  x="1190.61" y="591.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.01%)</title><rect x="756.9" y="1941" width="0.1" height="15.0" fill="rgb(250,101,26)" rx="2" ry="2" />
<text  x="759.93" y="1951.5" ></text>
</g>
<g >
<title>__handle_mm_fault (59 samples, 0.30%)</title><rect x="24.3" y="1973" width="3.5" height="15.0" fill="rgb(236,154,45)" rx="2" ry="2" />
<text  x="27.30" y="1983.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::getSubwords (20 samples, 0.10%)</title><rect x="769.4" y="2037" width="1.2" height="15.0" fill="rgb(253,135,45)" rx="2" ry="2" />
<text  x="772.37" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (2 samples, 0.01%)</title><rect x="187.8" y="1797" width="0.2" height="15.0" fill="rgb(219,175,42)" rx="2" ry="2" />
<text  x="190.83" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (360 samples, 1.82%)</title><rect x="55.3" y="901" width="21.5" height="15.0" fill="rgb(209,207,48)" rx="2" ry="2" />
<text  x="58.28" y="911.5" >[..</text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (6 samples, 0.03%)</title><rect x="180.2" y="1621" width="0.3" height="15.0" fill="rgb(210,50,7)" rx="2" ry="2" />
<text  x="183.18" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="162.3" y="1653" width="0.2" height="15.0" fill="rgb(243,192,45)" rx="2" ry="2" />
<text  x="165.29" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.4" y="741" width="0.1" height="15.0" fill="rgb(209,92,54)" rx="2" ry="2" />
<text  x="1190.43" y="751.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (2 samples, 0.01%)</title><rect x="1126.0" y="2037" width="0.1" height="15.0" fill="rgb(210,85,31)" rx="2" ry="2" />
<text  x="1129.00" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.4" y="469" width="0.1" height="15.0" fill="rgb(236,76,33)" rx="2" ry="2" />
<text  x="1190.43" y="479.5" ></text>
</g>
<g >
<title>[unknown] (376 samples, 1.91%)</title><rect x="55.3" y="1157" width="22.5" height="15.0" fill="rgb(242,195,27)" rx="2" ry="2" />
<text  x="58.28" y="1167.5" >[..</text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.02%)</title><rect x="158.8" y="1669" width="0.1" height="15.0" fill="rgb(212,90,49)" rx="2" ry="2" />
<text  x="161.76" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.4" y="1493" width="0.1" height="15.0" fill="rgb(240,134,13)" rx="2" ry="2" />
<text  x="1190.43" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (461 samples, 2.34%)</title><rect x="190.4" y="1925" width="27.6" height="15.0" fill="rgb(234,37,8)" rx="2" ry="2" />
<text  x="193.41" y="1935.5" >s..</text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="84.4" y="1589" width="0.1" height="15.0" fill="rgb(211,123,42)" rx="2" ry="2" />
<text  x="87.35" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="188.9" y="1365" width="0.1" height="15.0" fill="rgb(240,172,8)" rx="2" ry="2" />
<text  x="191.91" y="1375.5" ></text>
</g>
<g >
<title>[unknown] (586 samples, 2.97%)</title><rect x="55.3" y="1941" width="35.0" height="15.0" fill="rgb(246,43,42)" rx="2" ry="2" />
<text  x="58.28" y="1951.5" >[u..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.6" y="1109" width="0.4" height="15.0" fill="rgb(232,18,44)" rx="2" ry="2" />
<text  x="1190.61" y="1119.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.02%)</title><rect x="186.3" y="1653" width="0.2" height="15.0" fill="rgb(221,151,30)" rx="2" ry="2" />
<text  x="189.28" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="218.2" y="1717" width="0.3" height="15.0" fill="rgb(250,15,4)" rx="2" ry="2" />
<text  x="221.22" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_BracketMatcher (2 samples, 0.01%)</title><rect x="876.3" y="2037" width="0.1" height="15.0" fill="rgb(252,91,50)" rx="2" ry="2" />
<text  x="879.26" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.4" y="1637" width="0.1" height="15.0" fill="rgb(238,166,30)" rx="2" ry="2" />
<text  x="1190.37" y="1647.5" ></text>
</g>
<g >
<title>memcpy (2 samples, 0.01%)</title><rect x="579.9" y="1877" width="0.2" height="15.0" fill="rgb(225,56,19)" rx="2" ry="2" />
<text  x="582.93" y="1887.5" ></text>
</g>
<g >
<title>__pthread_getspecific (3 samples, 0.02%)</title><rect x="1125.5" y="2037" width="0.2" height="15.0" fill="rgb(249,19,51)" rx="2" ry="2" />
<text  x="1128.52" y="2047.5" ></text>
</g>
<g >
<title>__schedule (6 samples, 0.03%)</title><rect x="133.9" y="1845" width="0.3" height="15.0" fill="rgb(218,24,38)" rx="2" ry="2" />
<text  x="136.88" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (74 samples, 0.38%)</title><rect x="139.6" y="1669" width="4.4" height="15.0" fill="rgb(216,220,50)" rx="2" ry="2" />
<text  x="142.56" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1186.9" y="1573" width="0.5" height="15.0" fill="rgb(234,147,17)" rx="2" ry="2" />
<text  x="1189.95" y="1583.5" ></text>
</g>
<g >
<title>__asan::GetMallocContextSize (2 samples, 0.01%)</title><rect x="1124.3" y="2037" width="0.1" height="15.0" fill="rgb(222,178,9)" rx="2" ry="2" />
<text  x="1127.26" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (67 samples, 0.34%)</title><rect x="178.3" y="1653" width="4.0" height="15.0" fill="rgb(254,91,6)" rx="2" ry="2" />
<text  x="181.32" y="1663.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.02%)</title><rect x="330.5" y="1957" width="0.2" height="15.0" fill="rgb(236,135,40)" rx="2" ry="2" />
<text  x="333.50" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.4" y="117" width="0.1" height="15.0" fill="rgb(224,211,9)" rx="2" ry="2" />
<text  x="1190.43" y="127.5" ></text>
</g>
<g >
<title>on_each_cpu_mask (26 samples, 0.13%)</title><rect x="949.2" y="1861" width="1.5" height="15.0" fill="rgb(249,90,51)" rx="2" ry="2" />
<text  x="952.18" y="1871.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (3 samples, 0.02%)</title><rect x="76.3" y="517" width="0.2" height="15.0" fill="rgb(206,0,22)" rx="2" ry="2" />
<text  x="79.34" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (75 samples, 0.38%)</title><rect x="134.9" y="1685" width="4.5" height="15.0" fill="rgb(219,118,47)" rx="2" ry="2" />
<text  x="137.90" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.6" y="437" width="0.4" height="15.0" fill="rgb(212,17,53)" rx="2" ry="2" />
<text  x="1190.61" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.6" y="133" width="0.1" height="15.0" fill="rgb(222,36,9)" rx="2" ry="2" />
<text  x="1190.61" y="143.5" ></text>
</g>
<g >
<title>__do_munmap (2 samples, 0.01%)</title><rect x="89.7" y="1829" width="0.2" height="15.0" fill="rgb(224,14,32)" rx="2" ry="2" />
<text  x="92.74" y="1839.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (25 samples, 0.13%)</title><rect x="1103.1" y="2005" width="1.5" height="15.0" fill="rgb(225,73,9)" rx="2" ry="2" />
<text  x="1106.09" y="2015.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (2 samples, 0.01%)</title><rect x="82.9" y="1477" width="0.1" height="15.0" fill="rgb(233,195,8)" rx="2" ry="2" />
<text  x="85.86" y="1487.5" ></text>
</g>
<g >
<title>[unknown] (559 samples, 2.83%)</title><rect x="55.3" y="1861" width="33.4" height="15.0" fill="rgb(224,60,44)" rx="2" ry="2" />
<text  x="58.28" y="1871.5" >[u..</text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::get (46 samples, 0.23%)</title><rect x="128.0" y="1925" width="2.8" height="15.0" fill="rgb(211,85,46)" rx="2" ry="2" />
<text  x="131.02" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.4" y="1877" width="0.1" height="15.0" fill="rgb(218,167,44)" rx="2" ry="2" />
<text  x="1190.37" y="1887.5" ></text>
</g>
<g >
<title>__vm_munmap (3 samples, 0.02%)</title><rect x="87.0" y="1701" width="0.2" height="15.0" fill="rgb(232,84,41)" rx="2" ry="2" />
<text  x="89.98" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (80 samples, 0.41%)</title><rect x="212.2" y="1813" width="4.8" height="15.0" fill="rgb(238,197,25)" rx="2" ry="2" />
<text  x="215.18" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (75 samples, 0.38%)</title><rect x="177.9" y="1669" width="4.5" height="15.0" fill="rgb(230,12,1)" rx="2" ry="2" />
<text  x="180.90" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (472 samples, 2.39%)</title><rect x="55.3" y="1525" width="28.2" height="15.0" fill="rgb(218,146,43)" rx="2" ry="2" />
<text  x="58.28" y="1535.5" >[..</text>
</g>
<g >
<title>__handle_mm_fault (15 samples, 0.08%)</title><rect x="54.3" y="1957" width="0.9" height="15.0" fill="rgb(252,147,48)" rx="2" ry="2" />
<text  x="57.26" y="1967.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (2 samples, 0.01%)</title><rect x="167.8" y="1557" width="0.1" height="15.0" fill="rgb(233,28,25)" rx="2" ry="2" />
<text  x="170.80" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="28.4" y="2037" width="0.1" height="15.0" fill="rgb(206,148,19)" rx="2" ry="2" />
<text  x="31.42" y="2047.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (13 samples, 0.07%)</title><rect x="1177.4" y="2037" width="0.8" height="15.0" fill="rgb(248,173,26)" rx="2" ry="2" />
<text  x="1180.44" y="2047.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (6 samples, 0.03%)</title><rect x="1105.5" y="2037" width="0.3" height="15.0" fill="rgb(239,220,37)" rx="2" ry="2" />
<text  x="1108.48" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.6" y="1221" width="0.4" height="15.0" fill="rgb(243,121,52)" rx="2" ry="2" />
<text  x="1190.61" y="1231.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (3 samples, 0.02%)</title><rect x="79.8" y="1285" width="0.2" height="15.0" fill="rgb(253,146,53)" rx="2" ry="2" />
<text  x="82.81" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (80 samples, 0.41%)</title><rect x="182.5" y="1733" width="4.8" height="15.0" fill="rgb(237,203,24)" rx="2" ry="2" />
<text  x="185.51" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (361 samples, 1.83%)</title><rect x="55.3" y="965" width="21.6" height="15.0" fill="rgb(250,13,12)" rx="2" ry="2" />
<text  x="58.28" y="975.5" >[..</text>
</g>
<g >
<title>do_syscall_64 (3 samples, 0.02%)</title><rect x="1013.4" y="2021" width="0.1" height="15.0" fill="rgb(227,56,28)" rx="2" ry="2" />
<text  x="1016.36" y="2031.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare@plt (4 samples, 0.02%)</title><rect x="754.5" y="1893" width="0.2" height="15.0" fill="rgb(219,129,6)" rx="2" ry="2" />
<text  x="757.48" y="1903.5" ></text>
</g>
<g >
<title>__sanitizer::RunMallocHooks (14 samples, 0.07%)</title><rect x="1031.3" y="2053" width="0.8" height="15.0" fill="rgb(218,35,52)" rx="2" ry="2" />
<text  x="1034.31" y="2063.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (2 samples, 0.01%)</title><rect x="1122.8" y="2053" width="0.1" height="15.0" fill="rgb(246,150,11)" rx="2" ry="2" />
<text  x="1125.77" y="2063.5" ></text>
</g>
<g >
<title>irq_exit (3 samples, 0.02%)</title><rect x="876.1" y="1957" width="0.2" height="15.0" fill="rgb(228,3,53)" rx="2" ry="2" />
<text  x="879.08" y="1967.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="86.4" y="1717" width="0.1" height="15.0" fill="rgb(251,179,50)" rx="2" ry="2" />
<text  x="89.39" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (12 samples, 0.06%)</title><rect x="162.1" y="1941" width="0.7" height="15.0" fill="rgb(208,58,21)" rx="2" ry="2" />
<text  x="165.05" y="1951.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.03%)</title><rect x="167.1" y="1541" width="0.3" height="15.0" fill="rgb(217,175,14)" rx="2" ry="2" />
<text  x="170.08" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.6" y="533" width="0.4" height="15.0" fill="rgb(214,150,2)" rx="2" ry="2" />
<text  x="1190.61" y="543.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&gt;::ReleaseFreeMemoryToOS&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&gt;::MemoryMapper&gt; (2 samples, 0.01%)</title><rect x="767.0" y="2037" width="0.1" height="15.0" fill="rgb(235,208,34)" rx="2" ry="2" />
<text  x="769.98" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.03%)</title><rect x="770.7" y="2021" width="0.3" height="15.0" fill="rgb(225,137,34)" rx="2" ry="2" />
<text  x="773.75" y="2031.5" ></text>
</g>
<g >
<title>unmap_single_vma (3 samples, 0.02%)</title><rect x="525.4" y="1957" width="0.2" height="15.0" fill="rgb(235,61,54)" rx="2" ry="2" />
<text  x="528.44" y="1967.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (2 samples, 0.01%)</title><rect x="87.0" y="1621" width="0.2" height="15.0" fill="rgb(206,74,47)" rx="2" ry="2" />
<text  x="90.04" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (578 samples, 2.93%)</title><rect x="55.3" y="1925" width="34.6" height="15.0" fill="rgb(206,81,21)" rx="2" ry="2" />
<text  x="58.28" y="1935.5" >[u..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (92 samples, 0.47%)</title><rect x="150.2" y="1765" width="5.5" height="15.0" fill="rgb(237,142,48)" rx="2" ry="2" />
<text  x="153.15" y="1775.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="81.4" y="1349" width="0.1" height="15.0" fill="rgb(223,67,3)" rx="2" ry="2" />
<text  x="84.42" y="1359.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (6 samples, 0.03%)</title><rect x="698.1" y="1765" width="0.3" height="15.0" fill="rgb(222,55,31)" rx="2" ry="2" />
<text  x="701.07" y="1775.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (12 samples, 0.06%)</title><rect x="767.6" y="1973" width="0.8" height="15.0" fill="rgb(238,83,27)" rx="2" ry="2" />
<text  x="770.64" y="1983.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (2 samples, 0.01%)</title><rect x="1034.2" y="1941" width="0.1" height="15.0" fill="rgb(251,158,34)" rx="2" ry="2" />
<text  x="1037.18" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (553 samples, 2.80%)</title><rect x="55.3" y="1845" width="33.1" height="15.0" fill="rgb(227,63,51)" rx="2" ry="2" />
<text  x="58.28" y="1855.5" >[u..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.6" y="85" width="0.1" height="15.0" fill="rgb(253,14,32)" rx="2" ry="2" />
<text  x="1190.61" y="95.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt;,  (9 samples, 0.05%)</title><rect x="218.0" y="1957" width="0.6" height="15.0" fill="rgb(230,202,48)" rx="2" ry="2" />
<text  x="221.04" y="1967.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (5 samples, 0.03%)</title><rect x="770.7" y="2005" width="0.3" height="15.0" fill="rgb(251,138,43)" rx="2" ry="2" />
<text  x="773.75" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.5" y="2037" width="0.5" height="15.0" fill="rgb(209,140,11)" rx="2" ry="2" />
<text  x="1190.55" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1186.9" y="501" width="0.5" height="15.0" fill="rgb(211,190,4)" rx="2" ry="2" />
<text  x="1189.95" y="511.5" ></text>
</g>
<g >
<title>arch_tlb_finish_mmu (2 samples, 0.01%)</title><rect x="87.0" y="1637" width="0.2" height="15.0" fill="rgb(235,228,10)" rx="2" ry="2" />
<text  x="90.04" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.6" y="197" width="0.4" height="15.0" fill="rgb(211,148,15)" rx="2" ry="2" />
<text  x="1190.61" y="207.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::Unwind (3 samples, 0.02%)</title><rect x="137.6" y="1557" width="0.2" height="15.0" fill="rgb(250,164,28)" rx="2" ry="2" />
<text  x="140.59" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_subexpr_begin (2 samples, 0.01%)</title><rect x="161.9" y="1877" width="0.1" height="15.0" fill="rgb(205,117,51)" rx="2" ry="2" />
<text  x="164.87" y="1887.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (17 samples, 0.09%)</title><rect x="513.0" y="1861" width="1.0" height="15.0" fill="rgb(223,202,44)" rx="2" ry="2" />
<text  x="516.00" y="1871.5" ></text>
</g>
<g >
<title>alloc_pages_vma (23 samples, 0.12%)</title><rect x="24.9" y="1957" width="1.4" height="15.0" fill="rgb(236,165,5)" rx="2" ry="2" />
<text  x="27.89" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (261 samples, 1.32%)</title><rect x="134.5" y="1781" width="15.6" height="15.0" fill="rgb(229,106,53)" rx="2" ry="2" />
<text  x="137.48" y="1791.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="76.9" y="1013" width="0.2" height="15.0" fill="rgb(248,91,2)" rx="2" ry="2" />
<text  x="79.93" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.6" y="837" width="0.4" height="15.0" fill="rgb(247,122,25)" rx="2" ry="2" />
<text  x="1190.61" y="847.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (7 samples, 0.04%)</title><rect x="1105.1" y="1877" width="0.4" height="15.0" fill="rgb(235,22,2)" rx="2" ry="2" />
<text  x="1108.06" y="1887.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.01%)</title><rect x="330.4" y="1941" width="0.1" height="15.0" fill="rgb(208,229,1)" rx="2" ry="2" />
<text  x="333.38" y="1951.5" ></text>
</g>
<g >
<title>tlb_flush_mmu_free (2 samples, 0.01%)</title><rect x="1013.4" y="1925" width="0.1" height="15.0" fill="rgb(238,222,29)" rx="2" ry="2" />
<text  x="1016.42" y="1935.5" ></text>
</g>
<g >
<title>onmt::unicode::is_letter@plt (4 samples, 0.02%)</title><rect x="737.0" y="1893" width="0.2" height="15.0" fill="rgb(238,5,13)" rx="2" ry="2" />
<text  x="740.01" y="1903.5" ></text>
</g>
<g >
<title>__do_munmap (6 samples, 0.03%)</title><rect x="768.4" y="1957" width="0.3" height="15.0" fill="rgb(225,46,19)" rx="2" ry="2" />
<text  x="771.35" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.02%)</title><rect x="218.2" y="1589" width="0.3" height="15.0" fill="rgb(217,133,12)" rx="2" ry="2" />
<text  x="221.22" y="1599.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (2 samples, 0.01%)</title><rect x="89.6" y="1909" width="0.1" height="15.0" fill="rgb(209,197,49)" rx="2" ry="2" />
<text  x="92.56" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.6" y="789" width="0.4" height="15.0" fill="rgb(220,144,30)" rx="2" ry="2" />
<text  x="1190.61" y="799.5" ></text>
</g>
<g >
<title>unmap_region (4 samples, 0.02%)</title><rect x="768.0" y="1893" width="0.2" height="15.0" fill="rgb(206,126,37)" rx="2" ry="2" />
<text  x="770.99" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (78 samples, 0.40%)</title><rect x="177.8" y="1765" width="4.7" height="15.0" fill="rgb(206,154,3)" rx="2" ry="2" />
<text  x="180.79" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.4" y="165" width="0.1" height="15.0" fill="rgb(247,21,46)" rx="2" ry="2" />
<text  x="1190.43" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.4" y="1973" width="0.1" height="15.0" fill="rgb(220,4,22)" rx="2" ry="2" />
<text  x="1190.37" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_Compiler (463 samples, 2.35%)</title><rect x="134.4" y="1941" width="27.7" height="15.0" fill="rgb(207,30,43)" rx="2" ry="2" />
<text  x="137.36" y="1951.5" >s..</text>
</g>
<g >
<title>__vm_munmap (6 samples, 0.03%)</title><rect x="768.4" y="1973" width="0.3" height="15.0" fill="rgb(206,39,20)" rx="2" ry="2" />
<text  x="771.35" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.02%)</title><rect x="878.7" y="2021" width="0.1" height="15.0" fill="rgb(243,92,41)" rx="2" ry="2" />
<text  x="881.66" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1187.4" y="1941" width="0.1" height="15.0" fill="rgb(244,7,51)" rx="2" ry="2" />
<text  x="1190.37" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="188.9" y="1477" width="0.1" height="15.0" fill="rgb(231,53,22)" rx="2" ry="2" />
<text  x="191.91" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.4" y="1861" width="0.1" height="15.0" fill="rgb(239,42,50)" rx="2" ry="2" />
<text  x="1190.37" y="1871.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (2 samples, 0.01%)</title><rect x="1013.4" y="1973" width="0.1" height="15.0" fill="rgb(243,156,19)" rx="2" ry="2" />
<text  x="1016.42" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (350 samples, 1.77%)</title><rect x="55.3" y="469" width="20.9" height="15.0" fill="rgb(210,156,17)" rx="2" ry="2" />
<text  x="58.28" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int const&amp;&gt; (3 samples, 0.02%)</title><rect x="1188.4" y="2053" width="0.2" height="15.0" fill="rgb(252,77,19)" rx="2" ry="2" />
<text  x="1191.38" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="162.6" y="1349" width="0.2" height="15.0" fill="rgb(225,188,32)" rx="2" ry="2" />
<text  x="165.59" y="1359.5" ></text>
</g>
<g >
<title>__lsan::ForEachChunk (9 samples, 0.05%)</title><rect x="523.1" y="2037" width="0.5" height="15.0" fill="rgb(247,31,46)" rx="2" ry="2" />
<text  x="526.11" y="2047.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (12 samples, 0.06%)</title><rect x="490.3" y="1925" width="0.7" height="15.0" fill="rgb(245,187,27)" rx="2" ry="2" />
<text  x="493.27" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.6" y="1413" width="0.4" height="15.0" fill="rgb(233,104,33)" rx="2" ry="2" />
<text  x="1190.61" y="1423.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.01%)</title><rect x="1113.5" y="2053" width="0.1" height="15.0" fill="rgb(232,164,22)" rx="2" ry="2" />
<text  x="1116.49" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1187.6" y="805" width="0.4" height="15.0" fill="rgb(219,204,30)" rx="2" ry="2" />
<text  x="1190.61" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1187.5" y="2053" width="0.5" height="15.0" fill="rgb(214,90,39)" rx="2" ry="2" />
<text  x="1190.55" y="2063.5" ></text>
</g>
<g >
<title>native_flush_tlb_others (2 samples, 0.01%)</title><rect x="85.8" y="1509" width="0.2" height="15.0" fill="rgb(240,108,3)" rx="2" ry="2" />
<text  x="88.85" y="1519.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::get_case (2 samples, 0.01%)</title><rect x="576.6" y="1893" width="0.2" height="15.0" fill="rgb(216,211,43)" rx="2" ry="2" />
<text  x="579.64" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="188.9" y="1333" width="0.1" height="15.0" fill="rgb(251,223,17)" rx="2" ry="2" />
<text  x="191.91" y="1343.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (3 samples, 0.02%)</title><rect x="876.1" y="1989" width="0.2" height="15.0" fill="rgb(221,183,32)" rx="2" ry="2" />
<text  x="879.08" y="1999.5" ></text>
</g>
<g >
<title>page_fault (4 samples, 0.02%)</title><rect x="1189.3" y="2021" width="0.3" height="15.0" fill="rgb(248,153,28)" rx="2" ry="2" />
<text  x="1192.34" y="2031.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (2 samples, 0.01%)</title><rect x="81.5" y="1365" width="0.2" height="15.0" fill="rgb(220,7,41)" rx="2" ry="2" />
<text  x="84.54" y="1375.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (9 samples, 0.05%)</title><rect x="1149.7" y="2037" width="0.6" height="15.0" fill="rgb(210,62,9)" rx="2" ry="2" />
<text  x="1152.74" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1186.9" y="325" width="0.5" height="15.0" fill="rgb(209,209,49)" rx="2" ry="2" />
<text  x="1189.95" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find_last_of (2 samples, 0.01%)</title><rect x="522.4" y="2005" width="0.1" height="15.0" fill="rgb(249,76,29)" rx="2" ry="2" />
<text  x="525.39" y="2015.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="94.3" y="2005" width="0.1" height="15.0" fill="rgb(237,23,34)" rx="2" ry="2" />
<text  x="97.28" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.5" y="1973" width="0.5" height="15.0" fill="rgb(220,125,27)" rx="2" ry="2" />
<text  x="1190.55" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (76 samples, 0.39%)</title><rect x="139.4" y="1701" width="4.6" height="15.0" fill="rgb(214,150,10)" rx="2" ry="2" />
<text  x="142.44" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (4 samples, 0.02%)</title><rect x="161.6" y="1813" width="0.3" height="15.0" fill="rgb(236,163,7)" rx="2" ry="2" />
<text  x="164.63" y="1823.5" ></text>
</g>
<g >
<title>__asan_memset (11 samples, 0.06%)</title><rect x="654.0" y="1877" width="0.6" height="15.0" fill="rgb(216,182,2)" rx="2" ry="2" />
<text  x="656.98" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1187.4" y="1893" width="0.1" height="15.0" fill="rgb(223,148,46)" rx="2" ry="2" />
<text  x="1190.37" y="1903.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (2 samples, 0.01%)</title><rect x="580.1" y="1781" width="0.1" height="15.0" fill="rgb(227,103,16)" rx="2" ry="2" />
<text  x="583.05" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (77 samples, 0.39%)</title><rect x="177.8" y="1733" width="4.7" height="15.0" fill="rgb(206,111,26)" rx="2" ry="2" />
<text  x="180.85" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (84 samples, 0.43%)</title><rect x="195.3" y="1701" width="5.0" height="15.0" fill="rgb(228,197,12)" rx="2" ry="2" />
<text  x="198.31" y="1711.5" ></text>
</g>
<g >
<title>__lsan::CollectLeaksCb (2 samples, 0.01%)</title><rect x="523.0" y="2037" width="0.1" height="15.0" fill="rgb(251,200,33)" rx="2" ry="2" />
<text  x="525.99" y="2047.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.01%)</title><rect x="514.7" y="1941" width="0.2" height="15.0" fill="rgb(231,99,35)" rx="2" ry="2" />
<text  x="517.73" y="1951.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (265 samples, 1.34%)</title><rect x="738.6" y="1893" width="15.9" height="15.0" fill="rgb(219,188,40)" rx="2" ry="2" />
<text  x="741.62" y="1903.5" ></text>
</g>
<g >
<title>onmt::get_alphabet_id (3 samples, 0.02%)</title><rect x="736.0" y="1893" width="0.2" height="15.0" fill="rgb(242,113,44)" rx="2" ry="2" />
<text  x="738.99" y="1903.5" ></text>
</g>
<g >
<title>unmap_page_range (7 samples, 0.04%)</title><rect x="1105.1" y="1909" width="0.4" height="15.0" fill="rgb(242,198,20)" rx="2" ry="2" />
<text  x="1108.06" y="1919.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (2 samples, 0.01%)</title><rect x="771.0" y="2005" width="0.2" height="15.0" fill="rgb(219,211,11)" rx="2" ry="2" />
<text  x="774.05" y="2015.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_Alloc_node&gt; (4 samples, 0.02%)</title><rect x="521.8" y="1941" width="0.3" height="15.0" fill="rgb(230,186,35)" rx="2" ry="2" />
<text  x="524.85" y="1951.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::basic_regex&lt;char const*&gt; (463 samples, 2.35%)</title><rect x="134.4" y="1957" width="27.7" height="15.0" fill="rgb(248,137,28)" rx="2" ry="2" />
<text  x="137.36" y="1967.5" >s..</text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="85.1" y="1653" width="0.1" height="15.0" fill="rgb(227,147,46)" rx="2" ry="2" />
<text  x="88.07" y="1663.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.25] (31 samples, 0.16%)</title><rect x="28.2" y="2053" width="1.8" height="15.0" fill="rgb(224,148,27)" rx="2" ry="2" />
<text  x="31.18" y="2063.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::_M_do_set (3,842 samples, 19.48%)</title><rect x="528.3" y="2021" width="229.8" height="15.0" fill="rgb(228,25,40)" rx="2" ry="2" />
<text  x="531.31" y="2031.5" >std::__future_base::_State_bas..</text>
</g>
<g >
<title>__asan::PoisonShadow (149 samples, 0.76%)</title><rect x="981.7" y="2053" width="8.9" height="15.0" fill="rgb(211,55,9)" rx="2" ry="2" />
<text  x="984.72" y="2063.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_erase (2 samples, 0.01%)</title><rect x="521.7" y="1989" width="0.1" height="15.0" fill="rgb(216,144,10)" rx="2" ry="2" />
<text  x="524.67" y="1999.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (2 samples, 0.01%)</title><rect x="208.2" y="1637" width="0.2" height="15.0" fill="rgb(221,69,36)" rx="2" ry="2" />
<text  x="211.23" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1186.9" y="1749" width="0.5" height="15.0" fill="rgb(240,132,53)" rx="2" ry="2" />
<text  x="1189.95" y="1759.5" ></text>
</g>
<g >
<title>__sanitizer::mem_is_zero (2 samples, 0.01%)</title><rect x="499.6" y="1941" width="0.1" height="15.0" fill="rgb(225,178,4)" rx="2" ry="2" />
<text  x="502.60" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.4" y="1077" width="0.1" height="15.0" fill="rgb(247,73,25)" rx="2" ry="2" />
<text  x="1190.43" y="1087.5" ></text>
</g>
<g >
<title>[unknown] (20 samples, 0.10%)</title><rect x="769.4" y="2021" width="1.2" height="15.0" fill="rgb(238,141,17)" rx="2" ry="2" />
<text  x="772.37" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.4" y="693" width="0.1" height="15.0" fill="rgb(251,93,8)" rx="2" ry="2" />
<text  x="1190.43" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.4" y="1461" width="0.1" height="15.0" fill="rgb(216,45,36)" rx="2" ry="2" />
<text  x="1190.43" y="1471.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::json_value::destroy (8 samples, 0.04%)</title><rect x="521.2" y="1989" width="0.5" height="15.0" fill="rgb(218,206,22)" rx="2" ry="2" />
<text  x="524.19" y="1999.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::computeSubwords (34 samples, 0.17%)</title><rect x="328.3" y="1941" width="2.1" height="15.0" fill="rgb(238,54,26)" rx="2" ry="2" />
<text  x="331.34" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_Compiler (427 samples, 2.16%)</title><rect x="163.1" y="1925" width="25.5" height="15.0" fill="rgb(208,0,20)" rx="2" ry="2" />
<text  x="166.07" y="1935.5" >s..</text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&gt;::MaybeReleaseToOS (2 samples, 0.01%)</title><rect x="1032.2" y="2053" width="0.1" height="15.0" fill="rgb(233,91,12)" rx="2" ry="2" />
<text  x="1035.20" y="2063.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (20 samples, 0.10%)</title><rect x="769.4" y="2005" width="1.2" height="15.0" fill="rgb(223,14,17)" rx="2" ry="2" />
<text  x="772.37" y="2015.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (12 samples, 0.06%)</title><rect x="815.6" y="2005" width="0.7" height="15.0" fill="rgb(216,84,16)" rx="2" ry="2" />
<text  x="818.61" y="2015.5" ></text>
</g>
<g >
<title>free_unref_page_list (3 samples, 0.02%)</title><rect x="525.2" y="1861" width="0.2" height="15.0" fill="rgb(221,38,20)" rx="2" ry="2" />
<text  x="528.20" y="1871.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;std::__detail::_State&lt;char&gt; const*, std::__detail::_State&lt;char&gt;*&gt; (6 samples, 0.03%)</title><rect x="211.8" y="1717" width="0.4" height="15.0" fill="rgb(212,1,0)" rx="2" ry="2" />
<text  x="214.82" y="1727.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (33 samples, 0.17%)</title><rect x="70.9" y="37" width="2.0" height="15.0" fill="rgb(249,210,23)" rx="2" ry="2" />
<text  x="73.89" y="47.5" ></text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::get (2 samples, 0.01%)</title><rect x="125.6" y="1941" width="0.1" height="15.0" fill="rgb(225,96,47)" rx="2" ry="2" />
<text  x="128.57" y="1951.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (12 samples, 0.06%)</title><rect x="29.3" y="1877" width="0.7" height="15.0" fill="rgb(245,73,10)" rx="2" ry="2" />
<text  x="32.26" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1187.5" y="1909" width="0.5" height="15.0" fill="rgb(234,99,37)" rx="2" ry="2" />
<text  x="1190.55" y="1919.5" ></text>
</g>
<g >
<title>do_futex (7 samples, 0.04%)</title><rect x="133.9" y="1909" width="0.4" height="15.0" fill="rgb(252,204,9)" rx="2" ry="2" />
<text  x="136.88" y="1919.5" ></text>
</g>
<g >
<title>page_fault (31 samples, 0.16%)</title><rect x="696.6" y="1845" width="1.8" height="15.0" fill="rgb(246,9,20)" rx="2" ry="2" />
<text  x="699.57" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.4" y="1829" width="0.1" height="15.0" fill="rgb(218,120,6)" rx="2" ry="2" />
<text  x="1190.37" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_try_char (2 samples, 0.01%)</title><rect x="144.1" y="1733" width="0.1" height="15.0" fill="rgb(226,222,2)" rx="2" ry="2" />
<text  x="147.11" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.5" y="1605" width="0.5" height="15.0" fill="rgb(242,199,21)" rx="2" ry="2" />
<text  x="1190.55" y="1615.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="210.9" y="1637" width="0.1" height="15.0" fill="rgb(239,87,24)" rx="2" ry="2" />
<text  x="213.92" y="1647.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.01%)</title><rect x="154.8" y="1637" width="0.1" height="15.0" fill="rgb(212,153,15)" rx="2" ry="2" />
<text  x="157.82" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.4" y="1781" width="0.1" height="15.0" fill="rgb(209,209,36)" rx="2" ry="2" />
<text  x="1190.37" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (338 samples, 1.71%)</title><rect x="55.3" y="53" width="20.2" height="15.0" fill="rgb(242,9,4)" rx="2" ry="2" />
<text  x="58.28" y="63.5" ></text>
</g>
<g >
<title>__asan_memcpy (12 samples, 0.06%)</title><rect x="653.3" y="1877" width="0.7" height="15.0" fill="rgb(246,123,7)" rx="2" ry="2" />
<text  x="656.27" y="1887.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (7 samples, 0.04%)</title><rect x="1103.6" y="1861" width="0.4" height="15.0" fill="rgb(219,57,15)" rx="2" ry="2" />
<text  x="1106.62" y="1871.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.01%)</title><rect x="164.3" y="1573" width="0.1" height="15.0" fill="rgb(223,208,42)" rx="2" ry="2" />
<text  x="167.33" y="1583.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (6 samples, 0.03%)</title><rect x="579.3" y="1877" width="0.4" height="15.0" fill="rgb(215,4,8)" rx="2" ry="2" />
<text  x="582.33" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (97 samples, 0.49%)</title><rect x="144.3" y="1717" width="5.8" height="15.0" fill="rgb(232,28,10)" rx="2" ry="2" />
<text  x="147.29" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (355 samples, 1.80%)</title><rect x="55.3" y="533" width="21.2" height="15.0" fill="rgb(242,221,5)" rx="2" ry="2" />
<text  x="58.28" y="543.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (5 samples, 0.03%)</title><rect x="683.2" y="1765" width="0.3" height="15.0" fill="rgb(222,93,9)" rx="2" ry="2" />
<text  x="686.17" y="1775.5" ></text>
</g>
<g >
<title>__x64_sys_read (2 samples, 0.01%)</title><rect x="124.1" y="1989" width="0.1" height="15.0" fill="rgb(211,73,45)" rx="2" ry="2" />
<text  x="127.13" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (2 samples, 0.01%)</title><rect x="187.4" y="1749" width="0.1" height="15.0" fill="rgb(254,34,4)" rx="2" ry="2" />
<text  x="190.42" y="1759.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (2 samples, 0.01%)</title><rect x="878.4" y="2021" width="0.1" height="15.0" fill="rgb(239,131,11)" rx="2" ry="2" />
<text  x="881.42" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (322 samples, 1.63%)</title><rect x="163.2" y="1781" width="19.3" height="15.0" fill="rgb(212,170,51)" rx="2" ry="2" />
<text  x="166.19" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1186.9" y="1109" width="0.5" height="15.0" fill="rgb(238,122,22)" rx="2" ry="2" />
<text  x="1189.95" y="1119.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (2 samples, 0.01%)</title><rect x="124.1" y="1909" width="0.1" height="15.0" fill="rgb(244,64,22)" rx="2" ry="2" />
<text  x="127.13" y="1919.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (2 samples, 0.01%)</title><rect x="948.0" y="1893" width="0.1" height="15.0" fill="rgb(239,76,44)" rx="2" ry="2" />
<text  x="950.98" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="188.9" y="1413" width="0.1" height="15.0" fill="rgb(208,130,52)" rx="2" ry="2" />
<text  x="191.91" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.4" y="1253" width="0.1" height="15.0" fill="rgb(225,209,14)" rx="2" ry="2" />
<text  x="1190.43" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1186.9" y="437" width="0.5" height="15.0" fill="rgb(231,163,24)" rx="2" ry="2" />
<text  x="1189.95" y="447.5" ></text>
</g>
<g >
<title>__vma_adjust (3 samples, 0.02%)</title><rect x="1104.3" y="1909" width="0.2" height="15.0" fill="rgb(251,127,27)" rx="2" ry="2" />
<text  x="1107.34" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1186.9" y="1637" width="0.5" height="15.0" fill="rgb(243,168,37)" rx="2" ry="2" />
<text  x="1189.95" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.5" y="1893" width="0.5" height="15.0" fill="rgb(224,137,12)" rx="2" ry="2" />
<text  x="1190.55" y="1903.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;std::__detail::_State&lt;char&gt; const*, std::__detail::_State&lt;char&gt;*&gt; (2 samples, 0.01%)</title><rect x="190.5" y="1653" width="0.1" height="15.0" fill="rgb(219,74,45)" rx="2" ry="2" />
<text  x="193.53" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1186.9" y="1685" width="0.5" height="15.0" fill="rgb(250,82,41)" rx="2" ry="2" />
<text  x="1189.95" y="1695.5" ></text>
</g>
<g >
<title>page_fault (3 samples, 0.02%)</title><rect x="1030.2" y="2037" width="0.2" height="15.0" fill="rgb(221,1,21)" rx="2" ry="2" />
<text  x="1033.23" y="2047.5" ></text>
</g>
<g >
<title>do_page_fault (31 samples, 0.16%)</title><rect x="696.6" y="1829" width="1.8" height="15.0" fill="rgb(222,187,29)" rx="2" ry="2" />
<text  x="699.57" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (590 samples, 2.99%)</title><rect x="55.3" y="1957" width="35.3" height="15.0" fill="rgb(220,227,54)" rx="2" ry="2" />
<text  x="58.28" y="1967.5" >[u..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.4" y="309" width="0.1" height="15.0" fill="rgb(247,192,46)" rx="2" ry="2" />
<text  x="1190.43" y="319.5" ></text>
</g>
<g >
<title>[libm-2.27.so] (4 samples, 0.02%)</title><rect x="27.9" y="2053" width="0.3" height="15.0" fill="rgb(253,224,24)" rx="2" ry="2" />
<text  x="30.94" y="2063.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (2 samples, 0.01%)</title><rect x="149.3" y="1621" width="0.1" height="15.0" fill="rgb(214,30,2)" rx="2" ry="2" />
<text  x="152.31" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1186.9" y="1877" width="0.5" height="15.0" fill="rgb(234,229,47)" rx="2" ry="2" />
<text  x="1189.95" y="1887.5" ></text>
</g>
<g >
<title>__do_page_fault (27 samples, 0.14%)</title><rect x="503.0" y="1893" width="1.6" height="15.0" fill="rgb(248,175,14)" rx="2" ry="2" />
<text  x="506.01" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.04%)</title><rect x="162.3" y="1765" width="0.5" height="15.0" fill="rgb(209,92,22)" rx="2" ry="2" />
<text  x="165.29" y="1775.5" ></text>
</g>
<g >
<title>generic_file_read_iter (2 samples, 0.01%)</title><rect x="124.1" y="1893" width="0.1" height="15.0" fill="rgb(234,208,46)" rx="2" ry="2" />
<text  x="127.13" y="1903.5" ></text>
</g>
<g >
<title>native_flush_tlb_others (30 samples, 0.15%)</title><rect x="949.0" y="1893" width="1.8" height="15.0" fill="rgb(252,53,20)" rx="2" ry="2" />
<text  x="952.00" y="1903.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::pushHash (3 samples, 0.02%)</title><rect x="330.2" y="1925" width="0.2" height="15.0" fill="rgb(228,51,8)" rx="2" ry="2" />
<text  x="333.20" y="1935.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (3 samples, 0.02%)</title><rect x="484.0" y="1941" width="0.2" height="15.0" fill="rgb(219,123,33)" rx="2" ry="2" />
<text  x="487.05" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.4" y="293" width="0.1" height="15.0" fill="rgb(229,75,14)" rx="2" ry="2" />
<text  x="1190.43" y="303.5" ></text>
</g>
<g >
<title>strlen@plt (9 samples, 0.05%)</title><rect x="755.5" y="1893" width="0.5" height="15.0" fill="rgb(226,20,14)" rx="2" ry="2" />
<text  x="758.49" y="1903.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::emplace_back&lt;char const*&amp;, unsigned int&amp;&gt; (7 samples, 0.04%)</title><rect x="636.4" y="1877" width="0.4" height="15.0" fill="rgb(243,184,41)" rx="2" ry="2" />
<text  x="639.40" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (362 samples, 1.84%)</title><rect x="55.3" y="981" width="21.6" height="15.0" fill="rgb(205,15,44)" rx="2" ry="2" />
<text  x="58.28" y="991.5" >[..</text>
</g>
<g >
<title>__asan::AsanChunk::UsedSize (37 samples, 0.19%)</title><rect x="970.6" y="2053" width="2.2" height="15.0" fill="rgb(240,170,11)" rx="2" ry="2" />
<text  x="973.59" y="2063.5" ></text>
</g>
<g >
<title>__asan::GetMallocContextSize (3 samples, 0.02%)</title><rect x="593.7" y="1877" width="0.2" height="15.0" fill="rgb(206,209,16)" rx="2" ry="2" />
<text  x="596.75" y="1887.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (63 samples, 0.32%)</title><rect x="1168.3" y="2021" width="3.8" height="15.0" fill="rgb(250,129,28)" rx="2" ry="2" />
<text  x="1171.35" y="2031.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (11 samples, 0.06%)</title><rect x="947.6" y="1909" width="0.7" height="15.0" fill="rgb(205,194,4)" rx="2" ry="2" />
<text  x="950.62" y="1919.5" ></text>
</g>
<g >
<title>futex_wait (7 samples, 0.04%)</title><rect x="133.9" y="1893" width="0.4" height="15.0" fill="rgb(245,60,22)" rx="2" ry="2" />
<text  x="136.88" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (84 samples, 0.43%)</title><rect x="156.1" y="1717" width="5.0" height="15.0" fill="rgb(241,84,37)" rx="2" ry="2" />
<text  x="159.07" y="1727.5" ></text>
</g>
<g >
<title>page_fault (2 samples, 0.01%)</title><rect x="580.1" y="1877" width="0.1" height="15.0" fill="rgb(226,209,27)" rx="2" ry="2" />
<text  x="583.05" y="1887.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (4 samples, 0.02%)</title><rect x="203.7" y="1605" width="0.2" height="15.0" fill="rgb(216,114,41)" rx="2" ry="2" />
<text  x="206.69" y="1615.5" ></text>
</g>
<g >
<title>__asan_memset (9 samples, 0.05%)</title><rect x="595.8" y="1877" width="0.6" height="15.0" fill="rgb(217,174,8)" rx="2" ry="2" />
<text  x="598.84" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (2 samples, 0.01%)</title><rect x="217.1" y="1701" width="0.1" height="15.0" fill="rgb(242,42,33)" rx="2" ry="2" />
<text  x="220.08" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (77 samples, 0.39%)</title><rect x="190.5" y="1717" width="4.6" height="15.0" fill="rgb(215,32,18)" rx="2" ry="2" />
<text  x="193.53" y="1727.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (3 samples, 0.02%)</title><rect x="82.1" y="1397" width="0.2" height="15.0" fill="rgb(232,93,33)" rx="2" ry="2" />
<text  x="85.08" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="188.9" y="1637" width="0.1" height="15.0" fill="rgb(226,65,18)" rx="2" ry="2" />
<text  x="191.91" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (378 samples, 1.92%)</title><rect x="55.3" y="1173" width="22.6" height="15.0" fill="rgb(232,205,46)" rx="2" ry="2" />
<text  x="58.28" y="1183.5" >[..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1186.9" y="1477" width="0.5" height="15.0" fill="rgb(238,166,42)" rx="2" ry="2" />
<text  x="1189.95" y="1487.5" ></text>
</g>
<g >
<title>handle_mm_fault (3 samples, 0.02%)</title><rect x="1105.6" y="1973" width="0.2" height="15.0" fill="rgb(213,113,45)" rx="2" ry="2" />
<text  x="1108.60" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1186.9" y="741" width="0.5" height="15.0" fill="rgb(229,177,16)" rx="2" ry="2" />
<text  x="1189.95" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.0" y="133" width="0.4" height="15.0" fill="rgb(245,4,3)" rx="2" ry="2" />
<text  x="1190.01" y="143.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (2 samples, 0.01%)</title><rect x="489.2" y="1925" width="0.1" height="15.0" fill="rgb(218,140,37)" rx="2" ry="2" />
<text  x="492.19" y="1935.5" ></text>
</g>
<g >
<title>__handle_mm_fault (2 samples, 0.01%)</title><rect x="653.1" y="1797" width="0.2" height="15.0" fill="rgb(219,197,51)" rx="2" ry="2" />
<text  x="656.15" y="1807.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (2 samples, 0.01%)</title><rect x="809.9" y="2005" width="0.1" height="15.0" fill="rgb(214,81,23)" rx="2" ry="2" />
<text  x="812.87" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (13 samples, 0.07%)</title><rect x="163.2" y="1669" width="0.8" height="15.0" fill="rgb(207,139,4)" rx="2" ry="2" />
<text  x="166.25" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (405 samples, 2.05%)</title><rect x="55.3" y="1269" width="24.2" height="15.0" fill="rgb(225,193,42)" rx="2" ry="2" />
<text  x="58.28" y="1279.5" >[..</text>
</g>
<g >
<title>operator new (4 samples, 0.02%)</title><rect x="199.0" y="1589" width="0.3" height="15.0" fill="rgb(220,65,35)" rx="2" ry="2" />
<text  x="202.02" y="1599.5" ></text>
</g>
<g >
<title>page_fault (6 samples, 0.03%)</title><rect x="1105.5" y="2021" width="0.3" height="15.0" fill="rgb(235,185,37)" rx="2" ry="2" />
<text  x="1108.48" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="1187.7" y="101" width="0.3" height="15.0" fill="rgb(229,85,52)" rx="2" ry="2" />
<text  x="1190.73" y="111.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (2 samples, 0.01%)</title><rect x="217.3" y="1749" width="0.1" height="15.0" fill="rgb(215,31,47)" rx="2" ry="2" />
<text  x="220.26" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.4" y="1669" width="0.1" height="15.0" fill="rgb(219,133,13)" rx="2" ry="2" />
<text  x="1190.37" y="1679.5" ></text>
</g>
<g >
<title>unmap_page_range (4 samples, 0.02%)</title><rect x="768.5" y="1893" width="0.2" height="15.0" fill="rgb(243,67,22)" rx="2" ry="2" />
<text  x="771.47" y="1903.5" ></text>
</g>
<g >
<title>operator delete[] (44 samples, 0.22%)</title><rect x="1181.7" y="2037" width="2.6" height="15.0" fill="rgb(223,153,53)" rx="2" ry="2" />
<text  x="1184.69" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (71 samples, 0.36%)</title><rect x="164.1" y="1589" width="4.2" height="15.0" fill="rgb(241,53,52)" rx="2" ry="2" />
<text  x="167.09" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (75 samples, 0.38%)</title><rect x="190.6" y="1637" width="4.5" height="15.0" fill="rgb(253,228,50)" rx="2" ry="2" />
<text  x="193.65" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.04%)</title><rect x="1186.9" y="1893" width="0.5" height="15.0" fill="rgb(237,223,45)" rx="2" ry="2" />
<text  x="1189.89" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.4" y="453" width="0.1" height="15.0" fill="rgb(207,129,29)" rx="2" ry="2" />
<text  x="1190.43" y="463.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (2 samples, 0.01%)</title><rect x="210.0" y="1637" width="0.1" height="15.0" fill="rgb(224,60,53)" rx="2" ry="2" />
<text  x="213.03" y="1647.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (68 samples, 0.34%)</title><rect x="741.3" y="1877" width="4.0" height="15.0" fill="rgb(252,145,30)" rx="2" ry="2" />
<text  x="744.26" y="1887.5" ></text>
</g>
<g >
<title>do_page_fault (3 samples, 0.02%)</title><rect x="730.9" y="1861" width="0.2" height="15.0" fill="rgb(230,212,38)" rx="2" ry="2" />
<text  x="733.91" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="218.2" y="1605" width="0.3" height="15.0" fill="rgb(230,28,25)" rx="2" ry="2" />
<text  x="221.22" y="1615.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::basic_json (4 samples, 0.02%)</title><rect x="521.8" y="1893" width="0.3" height="15.0" fill="rgb(254,62,38)" rx="2" ry="2" />
<text  x="524.85" y="1903.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::_Bind&lt;Annotate (3,838 samples, 19.46%)</title><rect x="528.5" y="1989" width="229.6" height="15.0" fill="rgb(213,58,22)" rx="2" ry="2" />
<text  x="531.55" y="1999.5" >std::__invoke&lt;std::_Bind&lt;Annot..</text>
</g>
<g >
<title>__alloc_pages_nodemask (10 samples, 0.05%)</title><rect x="503.7" y="1829" width="0.6" height="15.0" fill="rgb(235,145,16)" rx="2" ry="2" />
<text  x="506.73" y="1839.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (3 samples, 0.02%)</title><rect x="180.0" y="1621" width="0.2" height="15.0" fill="rgb(218,155,39)" rx="2" ry="2" />
<text  x="183.00" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1186.9" y="1285" width="0.5" height="15.0" fill="rgb(208,158,15)" rx="2" ry="2" />
<text  x="1189.95" y="1295.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (6 samples, 0.03%)</title><rect x="91.4" y="1989" width="0.4" height="15.0" fill="rgb(240,161,20)" rx="2" ry="2" />
<text  x="94.41" y="1999.5" ></text>
</g>
<g >
<title>fasttext::NegativeSamplingLoss::NegativeSamplingLoss (11 samples, 0.06%)</title><rect x="519.5" y="1957" width="0.7" height="15.0" fill="rgb(231,46,31)" rx="2" ry="2" />
<text  x="522.52" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (85 samples, 0.43%)</title><rect x="206.7" y="1765" width="5.1" height="15.0" fill="rgb(242,220,36)" rx="2" ry="2" />
<text  x="209.68" y="1775.5" ></text>
</g>
<g >
<title>memcpy (4 samples, 0.02%)</title><rect x="1121.5" y="2037" width="0.2" height="15.0" fill="rgb(242,214,13)" rx="2" ry="2" />
<text  x="1124.51" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (74 samples, 0.38%)</title><rect x="139.6" y="1685" width="4.4" height="15.0" fill="rgb(209,84,23)" rx="2" ry="2" />
<text  x="142.56" y="1695.5" ></text>
</g>
<g >
<title>__lru_cache_add (2 samples, 0.01%)</title><rect x="946.7" y="1909" width="0.1" height="15.0" fill="rgb(225,66,24)" rx="2" ry="2" />
<text  x="949.73" y="1919.5" ></text>
</g>
<g >
<title>__handle_mm_fault (32 samples, 0.16%)</title><rect x="512.8" y="1893" width="1.9" height="15.0" fill="rgb(251,137,50)" rx="2" ry="2" />
<text  x="515.76" y="1903.5" ></text>
</g>
<g >
<title>handle_mm_fault (4 samples, 0.02%)</title><rect x="1034.1" y="1989" width="0.3" height="15.0" fill="rgb(252,146,36)" rx="2" ry="2" />
<text  x="1037.12" y="1999.5" ></text>
</g>
<g >
<title>unmap_single_vma (7 samples, 0.04%)</title><rect x="1105.1" y="1925" width="0.4" height="15.0" fill="rgb(222,227,47)" rx="2" ry="2" />
<text  x="1108.06" y="1935.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (3 samples, 0.02%)</title><rect x="769.0" y="2005" width="0.2" height="15.0" fill="rgb(205,11,41)" rx="2" ry="2" />
<text  x="772.01" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (32 samples, 0.16%)</title><rect x="813.5" y="2021" width="1.9" height="15.0" fill="rgb(207,229,23)" rx="2" ry="2" />
<text  x="816.51" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.6" y="149" width="0.1" height="15.0" fill="rgb(209,173,30)" rx="2" ry="2" />
<text  x="1190.61" y="159.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (41 samples, 0.21%)</title><rect x="214.1" y="1685" width="2.4" height="15.0" fill="rgb(251,130,34)" rx="2" ry="2" />
<text  x="217.09" y="1695.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::do_tolower (2 samples, 0.01%)</title><rect x="205.9" y="1621" width="0.1" height="15.0" fill="rgb(207,103,8)" rx="2" ry="2" />
<text  x="208.90" y="1631.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find (15 samples, 0.08%)</title><rect x="1149.7" y="2053" width="0.9" height="15.0" fill="rgb(219,63,38)" rx="2" ry="2" />
<text  x="1152.74" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1186.9" y="1221" width="0.5" height="15.0" fill="rgb(241,85,10)" rx="2" ry="2" />
<text  x="1189.95" y="1231.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::set (3 samples, 0.02%)</title><rect x="574.9" y="1909" width="0.2" height="15.0" fill="rgb(205,127,1)" rx="2" ry="2" />
<text  x="577.91" y="1919.5" ></text>
</g>
<g >
<title>fasttext::DenseMatrix::dotRow (4 samples, 0.02%)</title><rect x="768.8" y="2037" width="0.2" height="15.0" fill="rgb(207,225,51)" rx="2" ry="2" />
<text  x="771.77" y="2047.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (3 samples, 0.02%)</title><rect x="188.3" y="1877" width="0.2" height="15.0" fill="rgb(221,204,20)" rx="2" ry="2" />
<text  x="191.31" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1187.0" y="53" width="0.4" height="15.0" fill="rgb(233,120,0)" rx="2" ry="2" />
<text  x="1190.01" y="63.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.4" y="613" width="0.1" height="15.0" fill="rgb(223,45,3)" rx="2" ry="2" />
<text  x="1190.43" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (7 samples, 0.04%)</title><rect x="211.8" y="1749" width="0.4" height="15.0" fill="rgb(250,112,29)" rx="2" ry="2" />
<text  x="214.76" y="1759.5" ></text>
</g>
<g >
<title>smp_call_function_single (2 samples, 0.01%)</title><rect x="85.8" y="1445" width="0.2" height="15.0" fill="rgb(229,168,38)" rx="2" ry="2" />
<text  x="88.85" y="1455.5" ></text>
</g>
<g >
<title>flush_tlb_mm_range (2 samples, 0.01%)</title><rect x="85.8" y="1525" width="0.2" height="15.0" fill="rgb(217,174,10)" rx="2" ry="2" />
<text  x="88.85" y="1535.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="83.4" y="1477" width="0.1" height="15.0" fill="rgb(254,144,1)" rx="2" ry="2" />
<text  x="86.39" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (452 samples, 2.29%)</title><rect x="190.4" y="1861" width="27.0" height="15.0" fill="rgb(218,169,30)" rx="2" ry="2" />
<text  x="193.41" y="1871.5" >s..</text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;TThreadPool::TThreadPool (23 samples, 0.12%)</title><rect x="28.7" y="2037" width="1.3" height="15.0" fill="rgb(225,188,31)" rx="2" ry="2" />
<text  x="31.66" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="188.9" y="1781" width="0.2" height="15.0" fill="rgb(210,164,19)" rx="2" ry="2" />
<text  x="191.91" y="1791.5" ></text>
</g>
<g >
<title>__lsan::LsanMetadata::allocated (2 samples, 0.01%)</title><rect x="524.4" y="2037" width="0.1" height="15.0" fill="rgb(220,126,4)" rx="2" ry="2" />
<text  x="527.36" y="2047.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::addSubwords (2 samples, 0.01%)</title><rect x="529.3" y="1925" width="0.1" height="15.0" fill="rgb(232,181,51)" rx="2" ry="2" />
<text  x="532.33" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.4" y="1525" width="0.1" height="15.0" fill="rgb(232,130,41)" rx="2" ry="2" />
<text  x="1190.43" y="1535.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="94.3" y="1989" width="0.1" height="15.0" fill="rgb(252,127,19)" rx="2" ry="2" />
<text  x="97.28" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (61 samples, 0.31%)</title><rect x="191.2" y="1589" width="3.7" height="15.0" fill="rgb(254,133,20)" rx="2" ry="2" />
<text  x="194.24" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.6" y="117" width="0.1" height="15.0" fill="rgb(217,15,8)" rx="2" ry="2" />
<text  x="1190.61" y="127.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (5 samples, 0.03%)</title><rect x="597.9" y="1877" width="0.3" height="15.0" fill="rgb(209,155,25)" rx="2" ry="2" />
<text  x="600.94" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (4 samples, 0.02%)</title><rect x="161.6" y="1829" width="0.3" height="15.0" fill="rgb(236,23,22)" rx="2" ry="2" />
<text  x="164.63" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="218.3" y="1269" width="0.2" height="15.0" fill="rgb(242,210,18)" rx="2" ry="2" />
<text  x="221.34" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="162.6" y="1333" width="0.2" height="15.0" fill="rgb(221,116,20)" rx="2" ry="2" />
<text  x="165.59" y="1343.5" ></text>
</g>
<g >
<title>[unknown] (358 samples, 1.81%)</title><rect x="55.3" y="597" width="21.4" height="15.0" fill="rgb(212,167,19)" rx="2" ry="2" />
<text  x="58.28" y="607.5" >[..</text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (6 samples, 0.03%)</title><rect x="78.8" y="1237" width="0.4" height="15.0" fill="rgb(245,88,43)" rx="2" ry="2" />
<text  x="81.85" y="1247.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt; &gt;::_M_manager (2 samples, 0.01%)</title><rect x="134.6" y="1653" width="0.1" height="15.0" fill="rgb(226,225,9)" rx="2" ry="2" />
<text  x="137.60" y="1663.5" ></text>
</g>
<g >
<title>__asan::AsanTSDGet (53 samples, 0.27%)</title><rect x="972.8" y="2053" width="3.2" height="15.0" fill="rgb(221,27,47)" rx="2" ry="2" />
<text  x="975.81" y="2063.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.01%)</title><rect x="879.0" y="2021" width="0.1" height="15.0" fill="rgb(236,217,52)" rx="2" ry="2" />
<text  x="881.95" y="2031.5" ></text>
</g>
<g >
<title>std::basic_ifstream&lt;char, std::char_traits&lt;char&gt; &gt;::~basic_ifstream (18 samples, 0.09%)</title><rect x="876.9" y="2037" width="1.1" height="15.0" fill="rgb(244,174,8)" rx="2" ry="2" />
<text  x="879.92" y="2047.5" ></text>
</g>
<g >
<title>GetHost (438 samples, 2.22%)</title><rect x="162.9" y="1957" width="26.2" height="15.0" fill="rgb(223,35,0)" rx="2" ry="2" />
<text  x="165.89" y="1967.5" >G..</text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (3 samples, 0.02%)</title><rect x="770.6" y="2005" width="0.1" height="15.0" fill="rgb(231,36,6)" rx="2" ry="2" />
<text  x="773.57" y="2015.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::future&lt;std::result_of&lt;Annotate (3 samples, 0.02%)</title><rect x="28.7" y="2021" width="0.2" height="15.0" fill="rgb(215,182,6)" rx="2" ry="2" />
<text  x="31.72" y="2031.5" ></text>
</g>
<g >
<title>__handle_mm_fault (18 samples, 0.09%)</title><rect x="503.5" y="1861" width="1.1" height="15.0" fill="rgb(243,40,14)" rx="2" ry="2" />
<text  x="506.49" y="1871.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (9 samples, 0.05%)</title><rect x="821.3" y="1973" width="0.5" height="15.0" fill="rgb(225,7,50)" rx="2" ry="2" />
<text  x="824.29" y="1983.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::getLine (207 samples, 1.05%)</title><rect x="529.5" y="1925" width="12.4" height="15.0" fill="rgb(208,113,1)" rx="2" ry="2" />
<text  x="532.51" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="218.3" y="1349" width="0.2" height="15.0" fill="rgb(232,205,45)" rx="2" ry="2" />
<text  x="221.28" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (73 samples, 0.37%)</title><rect x="164.0" y="1685" width="4.4" height="15.0" fill="rgb(242,43,17)" rx="2" ry="2" />
<text  x="167.03" y="1695.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="571.8" y="1893" width="0.1" height="15.0" fill="rgb(213,117,22)" rx="2" ry="2" />
<text  x="574.80" y="1903.5" ></text>
</g>
<g >
<title>__handle_mm_fault (4 samples, 0.02%)</title><rect x="655.5" y="1797" width="0.2" height="15.0" fill="rgb(234,154,54)" rx="2" ry="2" />
<text  x="658.48" y="1807.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (7 samples, 0.04%)</title><rect x="211.8" y="1733" width="0.4" height="15.0" fill="rgb(205,52,53)" rx="2" ry="2" />
<text  x="214.76" y="1743.5" ></text>
</g>
<g >
<title>release_pages (2 samples, 0.01%)</title><rect x="1013.4" y="1893" width="0.1" height="15.0" fill="rgb(219,218,32)" rx="2" ry="2" />
<text  x="1016.42" y="1903.5" ></text>
</g>
<g >
<title>onmt::unicode::explode_utf8 (32 samples, 0.16%)</title><rect x="813.5" y="2037" width="1.9" height="15.0" fill="rgb(212,22,49)" rx="2" ry="2" />
<text  x="816.51" y="2047.5" ></text>
</g>
<g >
<title>__asan_memcpy (9 samples, 0.05%)</title><rect x="185.0" y="1653" width="0.5" height="15.0" fill="rgb(214,155,28)" rx="2" ry="2" />
<text  x="187.96" y="1663.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (2 samples, 0.01%)</title><rect x="87.9" y="1765" width="0.1" height="15.0" fill="rgb(225,78,27)" rx="2" ry="2" />
<text  x="90.88" y="1775.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="81.1" y="1333" width="0.1" height="15.0" fill="rgb(250,0,49)" rx="2" ry="2" />
<text  x="84.12" y="1343.5" ></text>
</g>
<g >
<title>__interceptor_strcmp (7 samples, 0.04%)</title><rect x="43.4" y="2037" width="0.5" height="15.0" fill="rgb(219,186,49)" rx="2" ry="2" />
<text  x="46.44" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1186.9" y="1269" width="0.5" height="15.0" fill="rgb(212,172,34)" rx="2" ry="2" />
<text  x="1189.95" y="1279.5" ></text>
</g>
<g >
<title>__vfs_read (2 samples, 0.01%)</title><rect x="124.1" y="1941" width="0.1" height="15.0" fill="rgb(218,160,42)" rx="2" ry="2" />
<text  x="127.13" y="1951.5" ></text>
</g>
<g >
<title>__handle_mm_fault (22 samples, 0.11%)</title><rect x="697.1" y="1781" width="1.3" height="15.0" fill="rgb(211,135,22)" rx="2" ry="2" />
<text  x="700.11" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (81 samples, 0.41%)</title><rect x="182.5" y="1765" width="4.9" height="15.0" fill="rgb(226,134,34)" rx="2" ry="2" />
<text  x="185.51" y="1775.5" ></text>
</g>
<g >
<title>std::operator&gt;&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (12 samples, 0.06%)</title><rect x="817.3" y="2005" width="0.7" height="15.0" fill="rgb(246,125,5)" rx="2" ry="2" />
<text  x="820.28" y="2015.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt; &gt;::_M_manager (12 samples, 0.06%)</title><rect x="815.6" y="2037" width="0.7" height="15.0" fill="rgb(221,179,17)" rx="2" ry="2" />
<text  x="818.61" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (354 samples, 1.79%)</title><rect x="134.5" y="1797" width="21.2" height="15.0" fill="rgb(209,201,48)" rx="2" ry="2" />
<text  x="137.48" y="1807.5" ></text>
</g>
<g >
<title>std::__move_merge&lt;__gnu_cxx::__normal_iterator&lt;TDocument*, std::vector&lt;TDocument, std::allocator&lt;TDocument&gt; &gt; &gt;, TDocument*, __gnu_cxx::__ops::_Iter_comp_iter&lt;main::$_1&gt; &gt; (3 samples, 0.02%)</title><rect x="522.7" y="1973" width="0.2" height="15.0" fill="rgb(214,96,12)" rx="2" ry="2" />
<text  x="525.69" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1187.6" y="517" width="0.4" height="15.0" fill="rgb(239,100,20)" rx="2" ry="2" />
<text  x="1190.61" y="527.5" ></text>
</g>
<g >
<title>clear_page_erms (2 samples, 0.01%)</title><rect x="124.7" y="1845" width="0.1" height="15.0" fill="rgb(216,224,3)" rx="2" ry="2" />
<text  x="127.67" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1187.6" y="229" width="0.4" height="15.0" fill="rgb(227,88,50)" rx="2" ry="2" />
<text  x="1190.61" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (170 samples, 0.86%)</title><rect x="190.4" y="1765" width="10.2" height="15.0" fill="rgb(235,127,9)" rx="2" ry="2" />
<text  x="193.41" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.05%)</title><rect x="162.2" y="1877" width="0.6" height="15.0" fill="rgb(237,204,47)" rx="2" ry="2" />
<text  x="165.23" y="1887.5" ></text>
</g>
<g >
<title>onmt::unicode::is_letter (5 samples, 0.03%)</title><rect x="736.7" y="1893" width="0.3" height="15.0" fill="rgb(206,121,25)" rx="2" ry="2" />
<text  x="739.71" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (516 samples, 2.62%)</title><rect x="55.3" y="1717" width="30.8" height="15.0" fill="rgb(231,96,30)" rx="2" ry="2" />
<text  x="58.28" y="1727.5" >[u..</text>
</g>
<g >
<title>__do_page_fault (3 samples, 0.02%)</title><rect x="730.9" y="1845" width="0.2" height="15.0" fill="rgb(209,61,54)" rx="2" ry="2" />
<text  x="733.91" y="1855.5" ></text>
</g>
<g >
<title>page_fault (2 samples, 0.01%)</title><rect x="124.7" y="1957" width="0.1" height="15.0" fill="rgb(237,78,41)" rx="2" ry="2" />
<text  x="127.67" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (75 samples, 0.38%)</title><rect x="190.6" y="1701" width="4.5" height="15.0" fill="rgb(244,169,44)" rx="2" ry="2" />
<text  x="193.65" y="1711.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotPut (3 samples, 0.02%)</title><rect x="171.7" y="1573" width="0.2" height="15.0" fill="rgb(229,171,2)" rx="2" ry="2" />
<text  x="174.74" y="1583.5" ></text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.02%)</title><rect x="141.7" y="1589" width="0.1" height="15.0" fill="rgb(230,152,12)" rx="2" ry="2" />
<text  x="144.66" y="1599.5" ></text>
</g>
<g >
<title>[[vdso]] (2 samples, 0.01%)</title><rect x="124.0" y="2021" width="0.1" height="15.0" fill="rgb(248,21,30)" rx="2" ry="2" />
<text  x="126.95" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1187.6" y="373" width="0.4" height="15.0" fill="rgb(214,55,47)" rx="2" ry="2" />
<text  x="1190.61" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (3 samples, 0.02%)</title><rect x="155.7" y="1749" width="0.1" height="15.0" fill="rgb(250,140,1)" rx="2" ry="2" />
<text  x="158.65" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (342 samples, 1.73%)</title><rect x="55.3" y="197" width="20.4" height="15.0" fill="rgb(218,71,4)" rx="2" ry="2" />
<text  x="58.28" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.4" y="1429" width="0.1" height="15.0" fill="rgb(227,88,47)" rx="2" ry="2" />
<text  x="1190.43" y="1439.5" ></text>
</g>
<g >
<title>[unknown] (20 samples, 0.10%)</title><rect x="821.3" y="2021" width="1.2" height="15.0" fill="rgb(222,48,35)" rx="2" ry="2" />
<text  x="824.29" y="2031.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.06%)</title><rect x="767.6" y="2021" width="0.8" height="15.0" fill="rgb(240,131,21)" rx="2" ry="2" />
<text  x="770.64" y="2031.5" ></text>
</g>
<g >
<title>__pthread_getspecific (2 samples, 0.01%)</title><rect x="545.4" y="1909" width="0.1" height="15.0" fill="rgb(247,189,31)" rx="2" ry="2" />
<text  x="548.36" y="1919.5" ></text>
</g>
<g >
<title>__madvise (2 samples, 0.01%)</title><rect x="90.0" y="1925" width="0.2" height="15.0" fill="rgb(251,11,47)" rx="2" ry="2" />
<text  x="93.03" y="1935.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (2 samples, 0.01%)</title><rect x="147.9" y="1605" width="0.2" height="15.0" fill="rgb(216,72,37)" rx="2" ry="2" />
<text  x="150.94" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (420 samples, 2.13%)</title><rect x="55.3" y="1317" width="25.1" height="15.0" fill="rgb(209,74,11)" rx="2" ry="2" />
<text  x="58.28" y="1327.5" >[..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (8 samples, 0.04%)</title><rect x="754.7" y="1893" width="0.5" height="15.0" fill="rgb(215,80,21)" rx="2" ry="2" />
<text  x="757.72" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.5" y="1493" width="0.5" height="15.0" fill="rgb(222,4,23)" rx="2" ry="2" />
<text  x="1190.55" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (83 samples, 0.42%)</title><rect x="168.5" y="1621" width="4.9" height="15.0" fill="rgb(237,144,22)" rx="2" ry="2" />
<text  x="171.45" y="1631.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::~Dictionary (3 samples, 0.02%)</title><rect x="770.6" y="2037" width="0.1" height="15.0" fill="rgb(211,67,25)" rx="2" ry="2" />
<text  x="773.57" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (244 samples, 1.24%)</title><rect x="163.2" y="1765" width="14.6" height="15.0" fill="rgb(224,218,16)" rx="2" ry="2" />
<text  x="166.19" y="1775.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (5 samples, 0.03%)</title><rect x="1103.7" y="1829" width="0.3" height="15.0" fill="rgb(236,194,9)" rx="2" ry="2" />
<text  x="1106.74" y="1839.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (3 samples, 0.02%)</title><rect x="504.4" y="1829" width="0.2" height="15.0" fill="rgb(244,79,51)" rx="2" ry="2" />
<text  x="507.38" y="1839.5" ></text>
</g>
<g >
<title>__sanitizer::StackTrace::GetCurrentPc (2 samples, 0.01%)</title><rect x="1189.2" y="2037" width="0.1" height="15.0" fill="rgb(239,127,15)" rx="2" ry="2" />
<text  x="1192.16" y="2047.5" ></text>
</g>
<g >
<title>on_each_cpu_cond_mask (2 samples, 0.01%)</title><rect x="85.8" y="1493" width="0.2" height="15.0" fill="rgb(250,192,25)" rx="2" ry="2" />
<text  x="88.85" y="1503.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (2 samples, 0.01%)</title><rect x="143.4" y="1605" width="0.1" height="15.0" fill="rgb(249,178,7)" rx="2" ry="2" />
<text  x="146.39" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1186.9" y="1045" width="0.5" height="15.0" fill="rgb(253,37,25)" rx="2" ry="2" />
<text  x="1189.95" y="1055.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (3 samples, 0.02%)</title><rect x="167.5" y="1541" width="0.2" height="15.0" fill="rgb(224,171,19)" rx="2" ry="2" />
<text  x="170.50" y="1551.5" ></text>
</g>
<g >
<title>__x64_sys_madvise (2 samples, 0.01%)</title><rect x="90.0" y="1877" width="0.2" height="15.0" fill="rgb(212,129,54)" rx="2" ry="2" />
<text  x="93.03" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_BracketMatcher (3 samples, 0.02%)</title><rect x="212.0" y="1685" width="0.2" height="15.0" fill="rgb(232,28,32)" rx="2" ry="2" />
<text  x="215.00" y="1695.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="124.1" y="2021" width="0.1" height="15.0" fill="rgb(210,86,32)" rx="2" ry="2" />
<text  x="127.13" y="2031.5" ></text>
</g>
<g >
<title>arch_tlb_finish_mmu (2 samples, 0.01%)</title><rect x="91.3" y="1845" width="0.1" height="15.0" fill="rgb(216,134,45)" rx="2" ry="2" />
<text  x="94.29" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (92 samples, 0.47%)</title><rect x="150.2" y="1749" width="5.5" height="15.0" fill="rgb(236,166,37)" rx="2" ry="2" />
<text  x="153.15" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (2 samples, 0.01%)</title><rect x="161.5" y="1813" width="0.1" height="15.0" fill="rgb(241,78,9)" rx="2" ry="2" />
<text  x="164.46" y="1823.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (6 samples, 0.03%)</title><rect x="768.4" y="1989" width="0.3" height="15.0" fill="rgb(237,78,54)" rx="2" ry="2" />
<text  x="771.35" y="1999.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (2 samples, 0.01%)</title><rect x="83.4" y="1461" width="0.1" height="15.0" fill="rgb(226,73,54)" rx="2" ry="2" />
<text  x="86.39" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.4" y="1333" width="0.1" height="15.0" fill="rgb(216,163,37)" rx="2" ry="2" />
<text  x="1190.43" y="1343.5" ></text>
</g>
<g >
<title>__do_page_fault (89 samples, 0.45%)</title><rect x="22.6" y="2005" width="5.3" height="15.0" fill="rgb(209,26,14)" rx="2" ry="2" />
<text  x="25.62" y="2015.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (23 samples, 0.12%)</title><rect x="24.9" y="1941" width="1.4" height="15.0" fill="rgb(249,111,18)" rx="2" ry="2" />
<text  x="27.89" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1186.9" y="1461" width="0.5" height="15.0" fill="rgb(243,121,1)" rx="2" ry="2" />
<text  x="1189.95" y="1471.5" ></text>
</g>
<g >
<title>[unknown] (358 samples, 1.81%)</title><rect x="55.3" y="613" width="21.4" height="15.0" fill="rgb(211,122,10)" rx="2" ry="2" />
<text  x="58.28" y="623.5" >[..</text>
</g>
<g >
<title>alloc_pages_vma (4 samples, 0.02%)</title><rect x="764.6" y="1941" width="0.3" height="15.0" fill="rgb(247,200,0)" rx="2" ry="2" />
<text  x="767.64" y="1951.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (8 samples, 0.04%)</title><rect x="199.3" y="1589" width="0.4" height="15.0" fill="rgb(233,184,45)" rx="2" ry="2" />
<text  x="202.26" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (364 samples, 1.85%)</title><rect x="55.3" y="1029" width="21.8" height="15.0" fill="rgb(247,21,17)" rx="2" ry="2" />
<text  x="58.28" y="1039.5" >[..</text>
</g>
<g >
<title>[libc-2.27.so] (9 samples, 0.05%)</title><rect x="651.9" y="1877" width="0.5" height="15.0" fill="rgb(236,173,47)" rx="2" ry="2" />
<text  x="654.89" y="1887.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (13 samples, 0.07%)</title><rect x="652.5" y="1877" width="0.8" height="15.0" fill="rgb(210,196,16)" rx="2" ry="2" />
<text  x="655.49" y="1887.5" ></text>
</g>
<g >
<title>__sanitizer::mem_is_zero (3 samples, 0.02%)</title><rect x="98.6" y="2005" width="0.2" height="15.0" fill="rgb(226,190,53)" rx="2" ry="2" />
<text  x="101.59" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.6" y="917" width="0.4" height="15.0" fill="rgb(228,33,14)" rx="2" ry="2" />
<text  x="1190.61" y="927.5" ></text>
</g>
<g >
<title>clear_page_erms (2 samples, 0.01%)</title><rect x="54.3" y="1909" width="0.1" height="15.0" fill="rgb(239,27,46)" rx="2" ry="2" />
<text  x="57.26" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="188.9" y="1397" width="0.1" height="15.0" fill="rgb(208,229,12)" rx="2" ry="2" />
<text  x="191.91" y="1407.5" ></text>
</g>
<g >
<title>__asan_memcpy (19 samples, 0.10%)</title><rect x="695.4" y="1845" width="1.2" height="15.0" fill="rgb(227,162,25)" rx="2" ry="2" />
<text  x="698.44" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.02%)</title><rect x="769.0" y="2021" width="0.2" height="15.0" fill="rgb(213,173,5)" rx="2" ry="2" />
<text  x="772.01" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.04%)</title><rect x="1186.9" y="2005" width="0.5" height="15.0" fill="rgb(242,224,11)" rx="2" ry="2" />
<text  x="1189.89" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (408 samples, 2.07%)</title><rect x="163.2" y="1829" width="24.4" height="15.0" fill="rgb(209,204,27)" rx="2" ry="2" />
<text  x="166.19" y="1839.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1186.9" y="1557" width="0.5" height="15.0" fill="rgb(236,119,28)" rx="2" ry="2" />
<text  x="1189.95" y="1567.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (3 samples, 0.02%)</title><rect x="184.4" y="1653" width="0.1" height="15.0" fill="rgb(216,210,48)" rx="2" ry="2" />
<text  x="187.37" y="1663.5" ></text>
</g>
<g >
<title>__lru_cache_add (2 samples, 0.01%)</title><rect x="514.0" y="1861" width="0.1" height="15.0" fill="rgb(211,106,22)" rx="2" ry="2" />
<text  x="517.01" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.6" y="357" width="0.4" height="15.0" fill="rgb(224,175,50)" rx="2" ry="2" />
<text  x="1190.61" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (81 samples, 0.41%)</title><rect x="182.5" y="1781" width="4.9" height="15.0" fill="rgb(214,59,22)" rx="2" ry="2" />
<text  x="185.51" y="1791.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.01%)</title><rect x="137.2" y="1557" width="0.1" height="15.0" fill="rgb(207,74,47)" rx="2" ry="2" />
<text  x="140.17" y="1567.5" ></text>
</g>
<g >
<title>fasttext::FastText::predictLine (2 samples, 0.01%)</title><rect x="771.0" y="2037" width="0.2" height="15.0" fill="rgb(218,157,53)" rx="2" ry="2" />
<text  x="774.05" y="2047.5" ></text>
</g>
<g >
<title>wp_page_copy (101 samples, 0.51%)</title><rect x="944.8" y="1941" width="6.0" height="15.0" fill="rgb(217,131,6)" rx="2" ry="2" />
<text  x="947.75" y="1951.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::getSubwords (162 samples, 0.82%)</title><rect x="484.6" y="1941" width="9.7" height="15.0" fill="rgb(224,70,52)" rx="2" ry="2" />
<text  x="487.64" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.5" y="1589" width="0.5" height="15.0" fill="rgb(248,216,12)" rx="2" ry="2" />
<text  x="1190.55" y="1599.5" ></text>
</g>
<g >
<title>clear_page_erms (5 samples, 0.03%)</title><rect x="54.4" y="1877" width="0.3" height="15.0" fill="rgb(253,130,27)" rx="2" ry="2" />
<text  x="57.44" y="1887.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; const*, std::vector&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::allocator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;*&gt; (4 samples, 0.02%)</title><rect x="521.8" y="1845" width="0.3" height="15.0" fill="rgb(226,55,46)" rx="2" ry="2" />
<text  x="524.85" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.4" y="101" width="0.1" height="15.0" fill="rgb(231,75,49)" rx="2" ry="2" />
<text  x="1190.43" y="111.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (2 samples, 0.01%)</title><rect x="514.7" y="1973" width="0.2" height="15.0" fill="rgb(208,185,27)" rx="2" ry="2" />
<text  x="517.73" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1187.6" y="1237" width="0.4" height="15.0" fill="rgb(215,151,12)" rx="2" ry="2" />
<text  x="1190.61" y="1247.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (4 samples, 0.02%)</title><rect x="141.2" y="1589" width="0.3" height="15.0" fill="rgb(218,66,20)" rx="2" ry="2" />
<text  x="144.24" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.5" y="1941" width="0.5" height="15.0" fill="rgb(216,112,1)" rx="2" ry="2" />
<text  x="1190.55" y="1951.5" ></text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (3 samples, 0.02%)</title><rect x="697.8" y="1765" width="0.2" height="15.0" fill="rgb(213,20,40)" rx="2" ry="2" />
<text  x="700.83" y="1775.5" ></text>
</g>
<g >
<title>handle_mm_fault (6 samples, 0.03%)</title><rect x="655.4" y="1813" width="0.4" height="15.0" fill="rgb(206,75,18)" rx="2" ry="2" />
<text  x="658.42" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (347 samples, 1.76%)</title><rect x="55.3" y="309" width="20.7" height="15.0" fill="rgb(250,110,50)" rx="2" ry="2" />
<text  x="58.28" y="319.5" ></text>
</g>
<g >
<title>all (19,727 samples, 100%)</title><rect x="10.0" y="2085" width="1180.0" height="15.0" fill="rgb(212,142,54)" rx="2" ry="2" />
<text  x="13.00" y="2095.5" ></text>
</g>
<g >
<title>[unknown] (338 samples, 1.71%)</title><rect x="55.3" y="85" width="20.2" height="15.0" fill="rgb(217,5,4)" rx="2" ry="2" />
<text  x="58.28" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="218.2" y="1749" width="0.3" height="15.0" fill="rgb(209,26,6)" rx="2" ry="2" />
<text  x="221.22" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (86 samples, 0.44%)</title><rect x="168.4" y="1685" width="5.1" height="15.0" fill="rgb(244,78,50)" rx="2" ry="2" />
<text  x="171.39" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (466 samples, 2.36%)</title><rect x="55.3" y="1509" width="27.9" height="15.0" fill="rgb(253,73,32)" rx="2" ry="2" />
<text  x="58.28" y="1519.5" >[..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.6" y="1397" width="0.4" height="15.0" fill="rgb(228,79,0)" rx="2" ry="2" />
<text  x="1190.61" y="1407.5" ></text>
</g>
<g >
<title>TFastTextEmbedder::GetSentenceEmbedding (1,951 samples, 9.89%)</title><rect x="218.6" y="1989" width="116.7" height="15.0" fill="rgb(253,137,24)" rx="2" ry="2" />
<text  x="221.64" y="1999.5" >TFastTextEmbed..</text>
</g>
<g >
<title>__x64_sys_munmap (2 samples, 0.01%)</title><rect x="85.8" y="1637" width="0.2" height="15.0" fill="rgb(221,118,35)" rx="2" ry="2" />
<text  x="88.85" y="1647.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (2 samples, 0.01%)</title><rect x="90.4" y="1941" width="0.1" height="15.0" fill="rgb(221,107,47)" rx="2" ry="2" />
<text  x="93.39" y="1951.5" ></text>
</g>
<g >
<title>clear_page_erms (16 samples, 0.08%)</title><rect x="25.0" y="1925" width="0.9" height="15.0" fill="rgb(239,188,6)" rx="2" ry="2" />
<text  x="27.95" y="1935.5" ></text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.02%)</title><rect x="183.6" y="1669" width="0.2" height="15.0" fill="rgb(226,47,48)" rx="2" ry="2" />
<text  x="186.65" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1186.9" y="837" width="0.5" height="15.0" fill="rgb(223,150,30)" rx="2" ry="2" />
<text  x="1189.95" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1186.9" y="197" width="0.5" height="15.0" fill="rgb(206,185,39)" rx="2" ry="2" />
<text  x="1189.95" y="207.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="1113.7" y="2021" width="0.2" height="15.0" fill="rgb(211,59,49)" rx="2" ry="2" />
<text  x="1116.73" y="2031.5" ></text>
</g>
<g >
<title>clear_page_erms (4 samples, 0.02%)</title><rect x="682.8" y="1733" width="0.2" height="15.0" fill="rgb(242,8,17)" rx="2" ry="2" />
<text  x="685.76" y="1743.5" ></text>
</g>
<g >
<title>mmput (7 samples, 0.04%)</title><rect x="1105.1" y="1973" width="0.4" height="15.0" fill="rgb(235,136,30)" rx="2" ry="2" />
<text  x="1108.06" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (510 samples, 2.59%)</title><rect x="55.3" y="1685" width="30.5" height="15.0" fill="rgb(222,220,11)" rx="2" ry="2" />
<text  x="58.28" y="1695.5" >[u..</text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (2 samples, 0.01%)</title><rect x="217.8" y="1813" width="0.1" height="15.0" fill="rgb(248,6,13)" rx="2" ry="2" />
<text  x="220.80" y="1823.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int&gt; (22 samples, 0.11%)</title><rect x="1188.6" y="2053" width="1.3" height="15.0" fill="rgb(232,61,20)" rx="2" ry="2" />
<text  x="1191.56" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (347 samples, 1.76%)</title><rect x="55.3" y="293" width="20.7" height="15.0" fill="rgb(247,102,15)" rx="2" ry="2" />
<text  x="58.28" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.02%)</title><rect x="162.5" y="1509" width="0.3" height="15.0" fill="rgb(231,181,18)" rx="2" ry="2" />
<text  x="165.53" y="1519.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.03%)</title><rect x="494.0" y="1925" width="0.3" height="15.0" fill="rgb(212,148,10)" rx="2" ry="2" />
<text  x="496.98" y="1935.5" ></text>
</g>
<g >
<title>do_page_fault (2 samples, 0.01%)</title><rect x="124.7" y="1941" width="0.1" height="15.0" fill="rgb(253,123,49)" rx="2" ry="2" />
<text  x="127.67" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (86 samples, 0.44%)</title><rect x="168.4" y="1701" width="5.1" height="15.0" fill="rgb(213,19,24)" rx="2" ry="2" />
<text  x="171.39" y="1711.5" ></text>
</g>
<g >
<title>__pthread_getspecific (3 samples, 0.02%)</title><rect x="180.8" y="1621" width="0.2" height="15.0" fill="rgb(214,5,16)" rx="2" ry="2" />
<text  x="183.84" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.0" y="85" width="0.4" height="15.0" fill="rgb(229,102,13)" rx="2" ry="2" />
<text  x="1190.01" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.6" y="869" width="0.4" height="15.0" fill="rgb(225,75,21)" rx="2" ry="2" />
<text  x="1190.61" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (454 samples, 2.30%)</title><rect x="190.4" y="1893" width="27.2" height="15.0" fill="rgb(254,213,19)" rx="2" ry="2" />
<text  x="193.41" y="1903.5" >s..</text>
</g>
<g >
<title>fasttext::Vector::Vector (2 samples, 0.01%)</title><rect x="805.4" y="2037" width="0.2" height="15.0" fill="rgb(254,228,44)" rx="2" ry="2" />
<text  x="808.44" y="2047.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.01%)</title><rect x="815.5" y="2037" width="0.1" height="15.0" fill="rgb(236,174,10)" rx="2" ry="2" />
<text  x="818.49" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.4" y="389" width="0.1" height="15.0" fill="rgb(253,5,26)" rx="2" ry="2" />
<text  x="1190.43" y="399.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="85.8" y="1669" width="0.2" height="15.0" fill="rgb(207,143,46)" rx="2" ry="2" />
<text  x="88.85" y="1679.5" ></text>
</g>
<g >
<title>__madvise (2 samples, 0.01%)</title><rect x="81.4" y="1365" width="0.1" height="15.0" fill="rgb(225,185,23)" rx="2" ry="2" />
<text  x="84.42" y="1375.5" ></text>
</g>
<g >
<title>__asan_memset (2 samples, 0.01%)</title><rect x="325.2" y="1941" width="0.2" height="15.0" fill="rgb(239,27,31)" rx="2" ry="2" />
<text  x="328.23" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.5" y="1845" width="0.5" height="15.0" fill="rgb(223,83,31)" rx="2" ry="2" />
<text  x="1190.55" y="1855.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (2 samples, 0.01%)</title><rect x="198.5" y="1589" width="0.2" height="15.0" fill="rgb(227,75,18)" rx="2" ry="2" />
<text  x="201.54" y="1599.5" ></text>
</g>
<g >
<title>__interceptor_memchr (2 samples, 0.01%)</title><rect x="1009.9" y="2053" width="0.1" height="15.0" fill="rgb(249,13,11)" rx="2" ry="2" />
<text  x="1012.89" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="218.3" y="1333" width="0.2" height="15.0" fill="rgb(252,55,48)" rx="2" ry="2" />
<text  x="221.28" y="1343.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (37 samples, 0.19%)</title><rect x="174.9" y="1605" width="2.2" height="15.0" fill="rgb(205,52,25)" rx="2" ry="2" />
<text  x="177.91" y="1615.5" ></text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::get (17 samples, 0.09%)</title><rect x="132.1" y="1909" width="1.1" height="15.0" fill="rgb(205,142,10)" rx="2" ry="2" />
<text  x="135.15" y="1919.5" ></text>
</g>
<g >
<title>zap_page_range (2 samples, 0.01%)</title><rect x="94.3" y="1957" width="0.1" height="15.0" fill="rgb(242,196,38)" rx="2" ry="2" />
<text  x="97.28" y="1967.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (4 samples, 0.02%)</title><rect x="211.4" y="1669" width="0.2" height="15.0" fill="rgb(249,21,8)" rx="2" ry="2" />
<text  x="214.40" y="1679.5" ></text>
</g>
<g >
<title>__do_munmap (2 samples, 0.01%)</title><rect x="86.4" y="1653" width="0.1" height="15.0" fill="rgb(244,201,47)" rx="2" ry="2" />
<text  x="89.39" y="1663.5" ></text>
</g>
<g >
<title>onmt::get_alphabet_id (5 samples, 0.03%)</title><rect x="657.1" y="1877" width="0.3" height="15.0" fill="rgb(235,12,7)" rx="2" ry="2" />
<text  x="660.09" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (80 samples, 0.41%)</title><rect x="182.5" y="1701" width="4.8" height="15.0" fill="rgb(247,73,54)" rx="2" ry="2" />
<text  x="185.51" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1187.5" y="1861" width="0.5" height="15.0" fill="rgb(254,35,47)" rx="2" ry="2" />
<text  x="1190.55" y="1871.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (10 samples, 0.05%)</title><rect x="592.8" y="1877" width="0.6" height="15.0" fill="rgb(222,193,0)" rx="2" ry="2" />
<text  x="595.79" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (66 samples, 0.33%)</title><rect x="169.2" y="1605" width="3.9" height="15.0" fill="rgb(219,200,11)" rx="2" ry="2" />
<text  x="172.17" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (542 samples, 2.75%)</title><rect x="55.3" y="1813" width="32.4" height="15.0" fill="rgb(211,110,30)" rx="2" ry="2" />
<text  x="58.28" y="1823.5" >[u..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (357 samples, 1.81%)</title><rect x="190.4" y="1797" width="21.4" height="15.0" fill="rgb(208,182,12)" rx="2" ry="2" />
<text  x="193.41" y="1807.5" >s..</text>
</g>
<g >
<title>fasttext::Dictionary::getSubwords (188 samples, 0.95%)</title><rect x="319.3" y="1957" width="11.2" height="15.0" fill="rgb(243,195,12)" rx="2" ry="2" />
<text  x="322.25" y="1967.5" ></text>
</g>
<g >
<title>__do_munmap (2 samples, 0.01%)</title><rect x="83.4" y="1429" width="0.1" height="15.0" fill="rgb(251,103,2)" rx="2" ry="2" />
<text  x="86.39" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.4" y="1509" width="0.1" height="15.0" fill="rgb(231,191,53)" rx="2" ry="2" />
<text  x="1190.43" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.6" y="645" width="0.4" height="15.0" fill="rgb(220,127,43)" rx="2" ry="2" />
<text  x="1190.61" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="162.5" y="1429" width="0.3" height="15.0" fill="rgb(219,206,52)" rx="2" ry="2" />
<text  x="165.53" y="1439.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotPut (26 samples, 0.13%)</title><rect x="1101.5" y="2053" width="1.6" height="15.0" fill="rgb(247,5,34)" rx="2" ry="2" />
<text  x="1104.53" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (382 samples, 1.94%)</title><rect x="55.3" y="1189" width="22.8" height="15.0" fill="rgb(248,7,46)" rx="2" ry="2" />
<text  x="58.28" y="1199.5" >[..</text>
</g>
<g >
<title>__asan::AsanTSDGet (2 samples, 0.01%)</title><rect x="184.5" y="1653" width="0.2" height="15.0" fill="rgb(225,219,17)" rx="2" ry="2" />
<text  x="187.54" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.02%)</title><rect x="1187.7" y="133" width="0.3" height="15.0" fill="rgb(241,5,11)" rx="2" ry="2" />
<text  x="1190.73" y="143.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.01%)</title><rect x="212.5" y="1701" width="0.2" height="15.0" fill="rgb(250,107,17)" rx="2" ry="2" />
<text  x="215.54" y="1711.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.02%)</title><rect x="181.1" y="1621" width="0.3" height="15.0" fill="rgb(235,221,2)" rx="2" ry="2" />
<text  x="184.13" y="1631.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.03%)</title><rect x="198.7" y="1589" width="0.3" height="15.0" fill="rgb(244,176,54)" rx="2" ry="2" />
<text  x="201.72" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (90 samples, 0.46%)</title><rect x="150.2" y="1701" width="5.4" height="15.0" fill="rgb(223,169,37)" rx="2" ry="2" />
<text  x="153.21" y="1711.5" ></text>
</g>
<g >
<title>unmap_region (6 samples, 0.03%)</title><rect x="768.4" y="1941" width="0.3" height="15.0" fill="rgb(248,139,16)" rx="2" ry="2" />
<text  x="771.35" y="1951.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (2 samples, 0.01%)</title><rect x="171.6" y="1573" width="0.1" height="15.0" fill="rgb(240,213,24)" rx="2" ry="2" />
<text  x="174.62" y="1583.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (2 samples, 0.01%)</title><rect x="878.2" y="2005" width="0.2" height="15.0" fill="rgb(236,218,47)" rx="2" ry="2" />
<text  x="881.24" y="2015.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (3 samples, 0.02%)</title><rect x="80.2" y="1301" width="0.2" height="15.0" fill="rgb(243,143,20)" rx="2" ry="2" />
<text  x="83.22" y="1311.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::readWord (6 samples, 0.03%)</title><rect x="541.9" y="1925" width="0.3" height="15.0" fill="rgb(207,175,54)" rx="2" ry="2" />
<text  x="544.89" y="1935.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (10 samples, 0.05%)</title><rect x="142.7" y="1589" width="0.6" height="15.0" fill="rgb(224,178,20)" rx="2" ry="2" />
<text  x="145.67" y="1599.5" ></text>
</g>
<g >
<title>__asan::GetMallocContextSize (2 samples, 0.01%)</title><rect x="170.7" y="1573" width="0.1" height="15.0" fill="rgb(240,199,31)" rx="2" ry="2" />
<text  x="173.67" y="1583.5" ></text>
</g>
<g >
<title>__pthread_getspecific (2 samples, 0.01%)</title><rect x="573.0" y="1941" width="0.1" height="15.0" fill="rgb(240,227,11)" rx="2" ry="2" />
<text  x="575.99" y="1951.5" ></text>
</g>
<g >
<title>__dynamic_cast (5 samples, 0.03%)</title><rect x="140.4" y="1605" width="0.3" height="15.0" fill="rgb(215,221,2)" rx="2" ry="2" />
<text  x="143.40" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1186.9" y="725" width="0.5" height="15.0" fill="rgb(219,171,35)" rx="2" ry="2" />
<text  x="1189.95" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.6" y="1173" width="0.4" height="15.0" fill="rgb(222,32,33)" rx="2" ry="2" />
<text  x="1190.61" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1186.9" y="1253" width="0.5" height="15.0" fill="rgb(236,35,17)" rx="2" ry="2" />
<text  x="1189.95" y="1263.5" ></text>
</g>
<g >
<title>__pthread_getspecific (43 samples, 0.22%)</title><rect x="525.6" y="2037" width="2.6" height="15.0" fill="rgb(251,2,25)" rx="2" ry="2" />
<text  x="528.62" y="2047.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="143.3" y="1589" width="0.1" height="15.0" fill="rgb(212,125,45)" rx="2" ry="2" />
<text  x="146.27" y="1599.5" ></text>
</g>
<g >
<title>do_page_fault (3 samples, 0.02%)</title><rect x="520.0" y="1925" width="0.2" height="15.0" fill="rgb(248,91,23)" rx="2" ry="2" />
<text  x="523.00" y="1935.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (7 samples, 0.04%)</title><rect x="1103.6" y="1893" width="0.4" height="15.0" fill="rgb(250,63,20)" rx="2" ry="2" />
<text  x="1106.62" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.4" y="181" width="0.1" height="15.0" fill="rgb(230,146,50)" rx="2" ry="2" />
<text  x="1190.43" y="191.5" ></text>
</g>
<g >
<title>perf_event_mmap (2 samples, 0.01%)</title><rect x="1104.2" y="1925" width="0.1" height="15.0" fill="rgb(242,1,48)" rx="2" ry="2" />
<text  x="1107.22" y="1935.5" ></text>
</g>
<g >
<title>__asan::AsanTSDGet (19 samples, 0.10%)</title><rect x="116.9" y="2037" width="1.1" height="15.0" fill="rgb(240,150,12)" rx="2" ry="2" />
<text  x="119.89" y="2047.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (5 samples, 0.03%)</title><rect x="1150.3" y="2037" width="0.3" height="15.0" fill="rgb(232,187,26)" rx="2" ry="2" />
<text  x="1153.28" y="2047.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (3 samples, 0.02%)</title><rect x="198.2" y="1589" width="0.2" height="15.0" fill="rgb(247,166,52)" rx="2" ry="2" />
<text  x="201.18" y="1599.5" ></text>
</g>
<g >
<title>page_fault (8 samples, 0.04%)</title><rect x="655.3" y="1861" width="0.5" height="15.0" fill="rgb(218,171,39)" rx="2" ry="2" />
<text  x="658.30" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (5 samples, 0.03%)</title><rect x="161.3" y="1829" width="0.3" height="15.0" fill="rgb(227,118,5)" rx="2" ry="2" />
<text  x="164.28" y="1839.5" ></text>
</g>
<g >
<title>__asan::AsanThread::stack_bottom (2 samples, 0.01%)</title><rect x="146.7" y="1605" width="0.1" height="15.0" fill="rgb(222,25,20)" rx="2" ry="2" />
<text  x="149.68" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1187.6" y="469" width="0.4" height="15.0" fill="rgb(216,201,9)" rx="2" ry="2" />
<text  x="1190.61" y="479.5" ></text>
</g>
<g >
<title>__sanitizer::internal_mmap (25 samples, 0.13%)</title><rect x="1103.1" y="2053" width="1.5" height="15.0" fill="rgb(238,227,29)" rx="2" ry="2" />
<text  x="1106.09" y="2063.5" ></text>
</g>
<g >
<title>__asan_memcpy (2 samples, 0.01%)</title><rect x="153.6" y="1637" width="0.1" height="15.0" fill="rgb(228,162,23)" rx="2" ry="2" />
<text  x="156.56" y="1647.5" ></text>
</g>
<g >
<title>DetectCategory (238 samples, 1.21%)</title><rect x="528.6" y="1973" width="14.2" height="15.0" fill="rgb(241,57,32)" rx="2" ry="2" />
<text  x="531.61" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.4" y="1125" width="0.1" height="15.0" fill="rgb(238,192,21)" rx="2" ry="2" />
<text  x="1190.43" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (84 samples, 0.43%)</title><rect x="195.3" y="1669" width="5.0" height="15.0" fill="rgb(211,33,30)" rx="2" ry="2" />
<text  x="198.31" y="1679.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (3 samples, 0.02%)</title><rect x="89.3" y="1909" width="0.1" height="15.0" fill="rgb(225,104,28)" rx="2" ry="2" />
<text  x="92.26" y="1919.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_stringbuf (20 samples, 0.10%)</title><rect x="816.8" y="2037" width="1.2" height="15.0" fill="rgb(253,58,48)" rx="2" ry="2" />
<text  x="819.80" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.4" y="965" width="0.1" height="15.0" fill="rgb(223,165,18)" rx="2" ry="2" />
<text  x="1190.43" y="975.5" ></text>
</g>
<g >
<title>alloc_pages_vma (9 samples, 0.05%)</title><rect x="697.3" y="1765" width="0.5" height="15.0" fill="rgb(212,83,37)" rx="2" ry="2" />
<text  x="700.29" y="1775.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (2 samples, 0.01%)</title><rect x="83.9" y="1541" width="0.2" height="15.0" fill="rgb(236,93,49)" rx="2" ry="2" />
<text  x="86.93" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (340 samples, 1.72%)</title><rect x="55.3" y="165" width="20.3" height="15.0" fill="rgb(237,224,48)" rx="2" ry="2" />
<text  x="58.28" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (6 samples, 0.03%)</title><rect x="187.8" y="1845" width="0.3" height="15.0" fill="rgb(226,0,46)" rx="2" ry="2" />
<text  x="190.77" y="1855.5" ></text>
</g>
<g >
<title>handle_mm_fault (22 samples, 0.11%)</title><rect x="697.1" y="1797" width="1.3" height="15.0" fill="rgb(213,211,22)" rx="2" ry="2" />
<text  x="700.11" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1187.5" y="1717" width="0.5" height="15.0" fill="rgb(239,41,25)" rx="2" ry="2" />
<text  x="1190.55" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1186.9" y="805" width="0.5" height="15.0" fill="rgb(249,123,1)" rx="2" ry="2" />
<text  x="1189.95" y="815.5" ></text>
</g>
<g >
<title>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::dump (5 samples, 0.03%)</title><rect x="520.8" y="1941" width="0.3" height="15.0" fill="rgb(226,97,53)" rx="2" ry="2" />
<text  x="523.77" y="1951.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThreadStats (40 samples, 0.20%)</title><rect x="979.3" y="2053" width="2.4" height="15.0" fill="rgb(230,63,29)" rx="2" ry="2" />
<text  x="982.33" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.04%)</title><rect x="162.3" y="1749" width="0.5" height="15.0" fill="rgb(239,122,27)" rx="2" ry="2" />
<text  x="165.29" y="1759.5" ></text>
</g>
<g >
<title>mmap_region (18 samples, 0.09%)</title><rect x="1103.4" y="1941" width="1.1" height="15.0" fill="rgb(252,150,5)" rx="2" ry="2" />
<text  x="1106.45" y="1951.5" ></text>
</g>
<g >
<title>__asan::AsanTSDGet (7 samples, 0.04%)</title><rect x="152.2" y="1637" width="0.5" height="15.0" fill="rgb(251,13,20)" rx="2" ry="2" />
<text  x="155.24" y="1647.5" ></text>
</g>
<g >
<title>fasttext::Vector::mul (64 samples, 0.32%)</title><rect x="806.0" y="2037" width="3.9" height="15.0" fill="rgb(214,28,26)" rx="2" ry="2" />
<text  x="809.04" y="2047.5" ></text>
</g>
<g >
<title>__sanitizer::IncreaseTotalMmap (2 samples, 0.01%)</title><rect x="1029.9" y="2053" width="0.2" height="15.0" fill="rgb(247,152,19)" rx="2" ry="2" />
<text  x="1032.93" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1187.5" y="1765" width="0.5" height="15.0" fill="rgb(230,90,33)" rx="2" ry="2" />
<text  x="1190.55" y="1775.5" ></text>
</g>
<g >
<title>__handle_mm_fault (115 samples, 0.58%)</title><rect x="943.9" y="1973" width="6.9" height="15.0" fill="rgb(212,93,53)" rx="2" ry="2" />
<text  x="946.91" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (7 samples, 0.04%)</title><rect x="187.8" y="1861" width="0.4" height="15.0" fill="rgb(219,81,19)" rx="2" ry="2" />
<text  x="190.77" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.6" y="1253" width="0.4" height="15.0" fill="rgb(219,119,6)" rx="2" ry="2" />
<text  x="1190.61" y="1263.5" ></text>
</g>
<g >
<title>__asan::Allocator::GetAsanChunkByAddrFastLocked (12 samples, 0.06%)</title><rect x="92.5" y="2021" width="0.7" height="15.0" fill="rgb(222,167,11)" rx="2" ry="2" />
<text  x="95.49" y="2031.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="177.3" y="1621" width="0.1" height="15.0" fill="rgb(221,80,31)" rx="2" ry="2" />
<text  x="180.31" y="1631.5" ></text>
</g>
<g >
<title>__dynamic_cast (4 samples, 0.02%)</title><rect x="174.0" y="1621" width="0.3" height="15.0" fill="rgb(243,58,29)" rx="2" ry="2" />
<text  x="177.02" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (622 samples, 3.15%)</title><rect x="55.3" y="2021" width="37.2" height="15.0" fill="rgb(211,60,4)" rx="2" ry="2" />
<text  x="58.28" y="2031.5" >[un..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="188.9" y="1749" width="0.2" height="15.0" fill="rgb(240,190,26)" rx="2" ry="2" />
<text  x="191.91" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.04%)</title><rect x="1186.9" y="1989" width="0.5" height="15.0" fill="rgb(222,149,5)" rx="2" ry="2" />
<text  x="1189.89" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (364 samples, 1.85%)</title><rect x="55.3" y="1045" width="21.8" height="15.0" fill="rgb(222,204,5)" rx="2" ry="2" />
<text  x="58.28" y="1055.5" >[..</text>
</g>
<g >
<title>TDocument::PreprocessTextFields (3,088 samples, 15.65%)</title><rect x="572.5" y="1973" width="184.7" height="15.0" fill="rgb(251,105,41)" rx="2" ry="2" />
<text  x="575.51" y="1983.5" >TDocument::PreprocessTex..</text>
</g>
<g >
<title>try_charge (3 samples, 0.02%)</title><rect x="683.3" y="1733" width="0.2" height="15.0" fill="rgb(251,98,34)" rx="2" ry="2" />
<text  x="686.29" y="1743.5" ></text>
</g>
<g >
<title>flush_tlb_mm_range (39 samples, 0.20%)</title><rect x="948.5" y="1909" width="2.3" height="15.0" fill="rgb(246,61,49)" rx="2" ry="2" />
<text  x="951.46" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.6" y="965" width="0.4" height="15.0" fill="rgb(231,95,48)" rx="2" ry="2" />
<text  x="1190.61" y="975.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.01%)</title><rect x="142.4" y="1589" width="0.1" height="15.0" fill="rgb(222,27,0)" rx="2" ry="2" />
<text  x="145.37" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1186.9" y="165" width="0.5" height="15.0" fill="rgb(249,142,37)" rx="2" ry="2" />
<text  x="1189.95" y="175.5" ></text>
</g>
<g >
<title>[unknown] (7 samples, 0.04%)</title><rect x="876.4" y="2021" width="0.5" height="15.0" fill="rgb(227,31,4)" rx="2" ry="2" />
<text  x="879.44" y="2031.5" ></text>
</g>
<g >
<title>fasttext::FastText::predict (2 samples, 0.01%)</title><rect x="542.2" y="1925" width="0.2" height="15.0" fill="rgb(207,143,52)" rx="2" ry="2" />
<text  x="545.25" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (165 samples, 0.84%)</title><rect x="190.5" y="1749" width="9.8" height="15.0" fill="rgb(208,131,2)" rx="2" ry="2" />
<text  x="193.47" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1186.9" y="677" width="0.5" height="15.0" fill="rgb(246,45,35)" rx="2" ry="2" />
<text  x="1189.95" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.4" y="997" width="0.1" height="15.0" fill="rgb(254,77,6)" rx="2" ry="2" />
<text  x="1190.43" y="1007.5" ></text>
</g>
<g >
<title>__pthread_getspecific (5 samples, 0.03%)</title><rect x="193.6" y="1557" width="0.3" height="15.0" fill="rgb(208,8,15)" rx="2" ry="2" />
<text  x="196.64" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1186.9" y="453" width="0.5" height="15.0" fill="rgb(242,116,10)" rx="2" ry="2" />
<text  x="1189.95" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="190.5" y="1669" width="0.1" height="15.0" fill="rgb(233,111,53)" rx="2" ry="2" />
<text  x="193.53" y="1679.5" ></text>
</g>
<g >
<title>__madvise (14 samples, 0.07%)</title><rect x="524.8" y="2037" width="0.8" height="15.0" fill="rgb(230,82,0)" rx="2" ry="2" />
<text  x="527.78" y="2047.5" ></text>
</g>
<g >
<title>__sanitizer::BlockingMutex::Lock (9 samples, 0.05%)</title><rect x="758.1" y="2037" width="0.6" height="15.0" fill="rgb(209,123,12)" rx="2" ry="2" />
<text  x="761.12" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1187.6" y="661" width="0.4" height="15.0" fill="rgb(219,18,37)" rx="2" ry="2" />
<text  x="1190.61" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.5" y="1989" width="0.5" height="15.0" fill="rgb(224,176,53)" rx="2" ry="2" />
<text  x="1190.55" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (405 samples, 2.05%)</title><rect x="163.2" y="1813" width="24.2" height="15.0" fill="rgb(254,35,33)" rx="2" ry="2" />
<text  x="166.19" y="1823.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.6" y="341" width="0.4" height="15.0" fill="rgb(214,23,28)" rx="2" ry="2" />
<text  x="1190.61" y="351.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::append (6 samples, 0.03%)</title><rect x="583.6" y="1893" width="0.3" height="15.0" fill="rgb(219,87,6)" rx="2" ry="2" />
<text  x="586.58" y="1903.5" ></text>
</g>
<g >
<title>__do_page_fault (2 samples, 0.01%)</title><rect x="653.1" y="1829" width="0.2" height="15.0" fill="rgb(248,207,8)" rx="2" ry="2" />
<text  x="656.15" y="1839.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (3 samples, 0.02%)</title><rect x="93.8" y="2021" width="0.2" height="15.0" fill="rgb(212,187,1)" rx="2" ry="2" />
<text  x="96.80" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1186.9" y="389" width="0.5" height="15.0" fill="rgb(238,74,29)" rx="2" ry="2" />
<text  x="1189.95" y="399.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::Unwind (2 samples, 0.01%)</title><rect x="204.5" y="1605" width="0.1" height="15.0" fill="rgb(234,7,5)" rx="2" ry="2" />
<text  x="207.46" y="1615.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="1101.4" y="2021" width="0.1" height="15.0" fill="rgb(210,190,14)" rx="2" ry="2" />
<text  x="1104.41" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (3 samples, 0.02%)</title><rect x="155.7" y="1765" width="0.1" height="15.0" fill="rgb(246,182,40)" rx="2" ry="2" />
<text  x="158.65" y="1775.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (2 samples, 0.01%)</title><rect x="1189.0" y="2037" width="0.2" height="15.0" fill="rgb(242,118,44)" rx="2" ry="2" />
<text  x="1192.04" y="2047.5" ></text>
</g>
<g >
<title>__asan_memcpy (8 samples, 0.04%)</title><rect x="136.7" y="1557" width="0.5" height="15.0" fill="rgb(229,86,18)" rx="2" ry="2" />
<text  x="139.69" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.05%)</title><rect x="162.2" y="1861" width="0.6" height="15.0" fill="rgb(235,182,27)" rx="2" ry="2" />
<text  x="165.23" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.4" y="549" width="0.1" height="15.0" fill="rgb(252,99,11)" rx="2" ry="2" />
<text  x="1190.43" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.4" y="629" width="0.1" height="15.0" fill="rgb(218,100,24)" rx="2" ry="2" />
<text  x="1190.43" y="639.5" ></text>
</g>
<g >
<title>on_each_cpu_cond_mask (30 samples, 0.15%)</title><rect x="949.0" y="1877" width="1.8" height="15.0" fill="rgb(228,11,48)" rx="2" ry="2" />
<text  x="952.00" y="1887.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::operator[] (4 samples, 0.02%)</title><rect x="133.2" y="1941" width="0.2" height="15.0" fill="rgb(227,35,4)" rx="2" ry="2" />
<text  x="136.16" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (2 samples, 0.01%)</title><rect x="188.0" y="1797" width="0.1" height="15.0" fill="rgb(228,205,19)" rx="2" ry="2" />
<text  x="190.95" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.02%)</title><rect x="44.2" y="2021" width="0.2" height="15.0" fill="rgb(230,85,9)" rx="2" ry="2" />
<text  x="47.22" y="2031.5" ></text>
</g>
<g >
<title>unmap_vmas (2 samples, 0.01%)</title><rect x="1104.0" y="1893" width="0.2" height="15.0" fill="rgb(253,180,50)" rx="2" ry="2" />
<text  x="1107.04" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.4" y="1397" width="0.1" height="15.0" fill="rgb(248,215,17)" rx="2" ry="2" />
<text  x="1190.43" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="218.3" y="1397" width="0.2" height="15.0" fill="rgb(246,27,3)" rx="2" ry="2" />
<text  x="221.28" y="1407.5" ></text>
</g>
<g >
<title>__asan_memcpy (2 samples, 0.01%)</title><rect x="197.7" y="1589" width="0.1" height="15.0" fill="rgb(237,22,12)" rx="2" ry="2" />
<text  x="200.70" y="1599.5" ></text>
</g>
<g >
<title>DetectLanguage[abi:cxx11] (496 samples, 2.51%)</title><rect x="542.8" y="1973" width="29.7" height="15.0" fill="rgb(205,113,13)" rx="2" ry="2" />
<text  x="545.85" y="1983.5" >De..</text>
</g>
<g >
<title>__pthread_getspecific (2 samples, 0.01%)</title><rect x="147.8" y="1605" width="0.1" height="15.0" fill="rgb(214,86,27)" rx="2" ry="2" />
<text  x="150.82" y="1615.5" ></text>
</g>
<g >
<title>__interceptor_strlen (4 samples, 0.02%)</title><rect x="1012.5" y="2053" width="0.2" height="15.0" fill="rgb(237,63,18)" rx="2" ry="2" />
<text  x="1015.46" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.4" y="1301" width="0.1" height="15.0" fill="rgb(247,181,6)" rx="2" ry="2" />
<text  x="1190.43" y="1311.5" ></text>
</g>
<g >
<title>__asan::Allocator::Deallocate (3 samples, 0.02%)</title><rect x="197.0" y="1589" width="0.2" height="15.0" fill="rgb(252,202,0)" rx="2" ry="2" />
<text  x="200.05" y="1599.5" ></text>
</g>
<g >
<title>ksys_read (2 samples, 0.01%)</title><rect x="1113.7" y="1973" width="0.2" height="15.0" fill="rgb(251,52,36)" rx="2" ry="2" />
<text  x="1116.73" y="1983.5" ></text>
</g>
<g >
<title>__asan_memcpy (2 samples, 0.01%)</title><rect x="175.8" y="1589" width="0.1" height="15.0" fill="rgb(254,16,5)" rx="2" ry="2" />
<text  x="178.75" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="1187.7" y="69" width="0.3" height="15.0" fill="rgb(246,6,35)" rx="2" ry="2" />
<text  x="1190.73" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1186.9" y="853" width="0.5" height="15.0" fill="rgb(254,208,50)" rx="2" ry="2" />
<text  x="1189.95" y="863.5" ></text>
</g>
<g >
<title>__do_munmap (2 samples, 0.01%)</title><rect x="87.9" y="1733" width="0.1" height="15.0" fill="rgb(219,52,17)" rx="2" ry="2" />
<text  x="90.88" y="1743.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (3 samples, 0.02%)</title><rect x="124.8" y="1973" width="0.2" height="15.0" fill="rgb(254,229,11)" rx="2" ry="2" />
<text  x="127.79" y="1983.5" ></text>
</g>
<g >
<title>fasttext::Loss::predict (9 samples, 0.05%)</title><rect x="1105.8" y="2053" width="0.6" height="15.0" fill="rgb(240,57,50)" rx="2" ry="2" />
<text  x="1108.84" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (566 samples, 2.87%)</title><rect x="55.3" y="1893" width="33.8" height="15.0" fill="rgb(221,67,20)" rx="2" ry="2" />
<text  x="58.28" y="1903.5" >[u..</text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="91.3" y="1941" width="0.1" height="15.0" fill="rgb(247,38,33)" rx="2" ry="2" />
<text  x="94.29" y="1951.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (5 samples, 0.03%)</title><rect x="147.0" y="1605" width="0.3" height="15.0" fill="rgb(213,60,52)" rx="2" ry="2" />
<text  x="149.98" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1186.9" y="1765" width="0.5" height="15.0" fill="rgb(239,56,35)" rx="2" ry="2" />
<text  x="1189.95" y="1775.5" ></text>
</g>
<g >
<title>__do_page_fault (31 samples, 0.16%)</title><rect x="696.6" y="1813" width="1.8" height="15.0" fill="rgb(213,30,22)" rx="2" ry="2" />
<text  x="699.57" y="1823.5" ></text>
</g>
<g >
<title>TDocument::TDocument (8 samples, 0.04%)</title><rect x="339.8" y="2005" width="0.5" height="15.0" fill="rgb(229,39,43)" rx="2" ry="2" />
<text  x="342.83" y="2015.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (40 samples, 0.20%)</title><rect x="1117.5" y="2037" width="2.4" height="15.0" fill="rgb(216,197,1)" rx="2" ry="2" />
<text  x="1120.50" y="2047.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="143.6" y="1605" width="0.1" height="15.0" fill="rgb(252,118,44)" rx="2" ry="2" />
<text  x="146.63" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (3 samples, 0.02%)</title><rect x="217.2" y="1781" width="0.2" height="15.0" fill="rgb(226,190,16)" rx="2" ry="2" />
<text  x="220.20" y="1791.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::json_value::destroy (12 samples, 0.06%)</title><rect x="521.1" y="2005" width="0.7" height="15.0" fill="rgb(246,6,38)" rx="2" ry="2" />
<text  x="524.07" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (443 samples, 2.25%)</title><rect x="55.3" y="1397" width="26.5" height="15.0" fill="rgb(249,62,19)" rx="2" ry="2" />
<text  x="58.28" y="1407.5" >[..</text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (256 samples, 1.30%)</title><rect x="55.3" y="37" width="15.3" height="15.0" fill="rgb(237,6,52)" rx="2" ry="2" />
<text  x="58.28" y="47.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3 samples, 0.02%)</title><rect x="217.0" y="1781" width="0.2" height="15.0" fill="rgb(233,152,24)" rx="2" ry="2" />
<text  x="220.02" y="1791.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (49 samples, 0.25%)</title><rect x="680.6" y="1861" width="2.9" height="15.0" fill="rgb(219,117,40)" rx="2" ry="2" />
<text  x="683.60" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (359 samples, 1.82%)</title><rect x="55.3" y="789" width="21.5" height="15.0" fill="rgb(251,174,19)" rx="2" ry="2" />
<text  x="58.28" y="799.5" >[..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1186.9" y="1605" width="0.5" height="15.0" fill="rgb(234,155,13)" rx="2" ry="2" />
<text  x="1189.95" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.4" y="53" width="0.1" height="15.0" fill="rgb(236,102,5)" rx="2" ry="2" />
<text  x="1190.43" y="63.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (73 samples, 0.37%)</title><rect x="139.6" y="1653" width="4.3" height="15.0" fill="rgb(227,212,16)" rx="2" ry="2" />
<text  x="142.56" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1186.9" y="1013" width="0.5" height="15.0" fill="rgb(215,2,44)" rx="2" ry="2" />
<text  x="1189.95" y="1023.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.03%)</title><rect x="205.0" y="1605" width="0.3" height="15.0" fill="rgb(250,177,17)" rx="2" ry="2" />
<text  x="208.00" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1186.9" y="885" width="0.5" height="15.0" fill="rgb(217,81,4)" rx="2" ry="2" />
<text  x="1189.95" y="895.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::do_tolower (2 samples, 0.01%)</title><rect x="194.8" y="1573" width="0.1" height="15.0" fill="rgb(228,221,29)" rx="2" ry="2" />
<text  x="197.77" y="1583.5" ></text>
</g>
<g >
<title>operator delete (16 samples, 0.08%)</title><rect x="635.3" y="1877" width="1.0" height="15.0" fill="rgb(253,8,34)" rx="2" ry="2" />
<text  x="638.32" y="1887.5" ></text>
</g>
<g >
<title>__do_page_fault (2 samples, 0.01%)</title><rect x="124.7" y="1925" width="0.1" height="15.0" fill="rgb(232,21,40)" rx="2" ry="2" />
<text  x="127.67" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="188.9" y="1605" width="0.1" height="15.0" fill="rgb(240,160,15)" rx="2" ry="2" />
<text  x="191.91" y="1615.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (2 samples, 0.01%)</title><rect x="137.5" y="1557" width="0.1" height="15.0" fill="rgb(237,207,35)" rx="2" ry="2" />
<text  x="140.47" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1186.9" y="549" width="0.5" height="15.0" fill="rgb(237,213,34)" rx="2" ry="2" />
<text  x="1189.95" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (86 samples, 0.44%)</title><rect x="163.2" y="1717" width="5.2" height="15.0" fill="rgb(239,103,7)" rx="2" ry="2" />
<text  x="166.25" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1186.9" y="1381" width="0.5" height="15.0" fill="rgb(254,173,21)" rx="2" ry="2" />
<text  x="1189.95" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (85 samples, 0.43%)</title><rect x="168.4" y="1653" width="5.1" height="15.0" fill="rgb(232,119,6)" rx="2" ry="2" />
<text  x="171.39" y="1663.5" ></text>
</g>
<g >
<title>__asan::CanPoisonMemory (9 samples, 0.05%)</title><rect x="976.0" y="2053" width="0.5" height="15.0" fill="rgb(208,129,54)" rx="2" ry="2" />
<text  x="978.98" y="2063.5" ></text>
</g>
<g >
<title>__x64_sys_futex (17 samples, 0.09%)</title><rect x="29.0" y="1957" width="1.0" height="15.0" fill="rgb(242,185,3)" rx="2" ry="2" />
<text  x="31.96" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1186.9" y="645" width="0.5" height="15.0" fill="rgb(213,61,12)" rx="2" ry="2" />
<text  x="1189.95" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="162.3" y="1605" width="0.2" height="15.0" fill="rgb(236,153,6)" rx="2" ry="2" />
<text  x="165.29" y="1615.5" ></text>
</g>
<g >
<title>do_page_fault (8 samples, 0.04%)</title><rect x="655.3" y="1845" width="0.5" height="15.0" fill="rgb(248,29,38)" rx="2" ry="2" />
<text  x="658.30" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="162.5" y="1717" width="0.3" height="15.0" fill="rgb(237,46,20)" rx="2" ry="2" />
<text  x="165.47" y="1727.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (179 samples, 0.91%)</title><rect x="44.5" y="2037" width="10.7" height="15.0" fill="rgb(210,163,8)" rx="2" ry="2" />
<text  x="47.51" y="2047.5" ></text>
</g>
<g >
<title>__do_page_fault (4 samples, 0.02%)</title><rect x="1189.3" y="1989" width="0.3" height="15.0" fill="rgb(237,216,19)" rx="2" ry="2" />
<text  x="1192.34" y="1999.5" ></text>
</g>
<g >
<title>handle_mm_fault (2 samples, 0.01%)</title><rect x="124.7" y="1909" width="0.1" height="15.0" fill="rgb(213,141,48)" rx="2" ry="2" />
<text  x="127.67" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (67 samples, 0.34%)</title><rect x="173.7" y="1701" width="4.0" height="15.0" fill="rgb(248,76,8)" rx="2" ry="2" />
<text  x="176.66" y="1711.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (5 samples, 0.03%)</title><rect x="1127.4" y="2037" width="0.3" height="15.0" fill="rgb(233,144,25)" rx="2" ry="2" />
<text  x="1130.37" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="188.9" y="1589" width="0.1" height="15.0" fill="rgb(239,208,5)" rx="2" ry="2" />
<text  x="191.91" y="1599.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::has_features (6 samples, 0.03%)</title><rect x="576.8" y="1893" width="0.3" height="15.0" fill="rgb(219,99,21)" rx="2" ry="2" />
<text  x="579.76" y="1903.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="87.7" y="1813" width="0.1" height="15.0" fill="rgb(246,172,53)" rx="2" ry="2" />
<text  x="90.70" y="1823.5" ></text>
</g>
<g >
<title>new_sync_read (2 samples, 0.01%)</title><rect x="1113.7" y="1925" width="0.2" height="15.0" fill="rgb(249,15,43)" rx="2" ry="2" />
<text  x="1116.73" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="188.9" y="1717" width="0.1" height="15.0" fill="rgb(241,204,9)" rx="2" ry="2" />
<text  x="191.91" y="1727.5" ></text>
</g>
<g >
<title>__asan::Allocator::GetAsanChunkByAddrFastLocked (91 samples, 0.46%)</title><rect x="100.3" y="2037" width="5.5" height="15.0" fill="rgb(216,152,20)" rx="2" ry="2" />
<text  x="103.32" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (427 samples, 2.16%)</title><rect x="55.3" y="1349" width="25.5" height="15.0" fill="rgb(242,147,19)" rx="2" ry="2" />
<text  x="58.28" y="1359.5" >[..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (93 samples, 0.47%)</title><rect x="150.1" y="1781" width="5.6" height="15.0" fill="rgb(236,60,18)" rx="2" ry="2" />
<text  x="153.09" y="1791.5" ></text>
</g>
<g >
<title>onmt::unicode::explode_utf8_with_marks (639 samples, 3.24%)</title><rect x="660.3" y="1877" width="38.2" height="15.0" fill="rgb(232,147,24)" rx="2" ry="2" />
<text  x="663.32" y="1887.5" >onm..</text>
</g>
<g >
<title>std::ctype&lt;char&gt;::do_tolower (2 samples, 0.01%)</title><rect x="216.6" y="1685" width="0.1" height="15.0" fill="rgb(246,128,17)" rx="2" ry="2" />
<text  x="219.61" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.4" y="1269" width="0.1" height="15.0" fill="rgb(226,80,30)" rx="2" ry="2" />
<text  x="1190.43" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (76 samples, 0.39%)</title><rect x="177.9" y="1717" width="4.6" height="15.0" fill="rgb(227,124,24)" rx="2" ry="2" />
<text  x="180.90" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="162.6" y="1365" width="0.2" height="15.0" fill="rgb(242,167,5)" rx="2" ry="2" />
<text  x="165.59" y="1375.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.01%)</title><rect x="1101.4" y="2005" width="0.1" height="15.0" fill="rgb(244,182,9)" rx="2" ry="2" />
<text  x="1104.41" y="2015.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (20 samples, 0.10%)</title><rect x="1158.5" y="2037" width="1.2" height="15.0" fill="rgb(245,201,38)" rx="2" ry="2" />
<text  x="1161.48" y="2047.5" ></text>
</g>
<g >
<title>std::istream::sentry::sentry (6 samples, 0.03%)</title><rect x="816.9" y="2005" width="0.4" height="15.0" fill="rgb(212,45,35)" rx="2" ry="2" />
<text  x="819.92" y="2015.5" ></text>
</g>
<g >
<title>page_fault (3 samples, 0.02%)</title><rect x="730.9" y="1877" width="0.2" height="15.0" fill="rgb(246,217,8)" rx="2" ry="2" />
<text  x="733.91" y="1887.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (7 samples, 0.04%)</title><rect x="26.3" y="1925" width="0.4" height="15.0" fill="rgb(213,150,51)" rx="2" ry="2" />
<text  x="29.27" y="1935.5" ></text>
</g>
<g >
<title>__pthread_once_slow (3,844 samples, 19.49%)</title><rect x="528.2" y="2037" width="229.9" height="15.0" fill="rgb(233,75,52)" rx="2" ry="2" />
<text  x="531.19" y="2047.5" >__pthread_once_slow</text>
</g>
<g >
<title>__do_page_fault (35 samples, 0.18%)</title><rect x="512.6" y="1925" width="2.1" height="15.0" fill="rgb(236,16,3)" rx="2" ry="2" />
<text  x="515.58" y="1935.5" ></text>
</g>
<g >
<title>unmap_single_vma (2 samples, 0.01%)</title><rect x="1104.0" y="1877" width="0.2" height="15.0" fill="rgb(210,119,11)" rx="2" ry="2" />
<text  x="1107.04" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (9 samples, 0.05%)</title><rect x="187.8" y="1877" width="0.5" height="15.0" fill="rgb(227,39,7)" rx="2" ry="2" />
<text  x="190.77" y="1887.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt; &gt;::_M_manager (3 samples, 0.02%)</title><rect x="163.8" y="1621" width="0.2" height="15.0" fill="rgb(222,67,1)" rx="2" ry="2" />
<text  x="166.85" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.6" y="1125" width="0.4" height="15.0" fill="rgb(232,173,20)" rx="2" ry="2" />
<text  x="1190.61" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (80 samples, 0.41%)</title><rect x="212.2" y="1781" width="4.8" height="15.0" fill="rgb(206,92,44)" rx="2" ry="2" />
<text  x="215.18" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (3 samples, 0.02%)</title><rect x="161.7" y="1797" width="0.2" height="15.0" fill="rgb(247,11,30)" rx="2" ry="2" />
<text  x="164.69" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (87 samples, 0.44%)</title><rect x="155.9" y="1797" width="5.2" height="15.0" fill="rgb(211,105,22)" rx="2" ry="2" />
<text  x="158.89" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (91 samples, 0.46%)</title><rect x="150.2" y="1717" width="5.4" height="15.0" fill="rgb(219,219,11)" rx="2" ry="2" />
<text  x="153.15" y="1727.5" ></text>
</g>
<g >
<title>__sanitizer::QuarantineCache&lt;__asan::QuarantineCallback&gt;::MergeBatches (11 samples, 0.06%)</title><rect x="765.1" y="2037" width="0.7" height="15.0" fill="rgb(231,99,50)" rx="2" ry="2" />
<text  x="768.12" y="2047.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (54 samples, 0.27%)</title><rect x="183.9" y="1669" width="3.2" height="15.0" fill="rgb(241,195,8)" rx="2" ry="2" />
<text  x="186.89" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.4" y="1061" width="0.1" height="15.0" fill="rgb(210,177,23)" rx="2" ry="2" />
<text  x="1190.43" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.6" y="933" width="0.4" height="15.0" fill="rgb(211,2,49)" rx="2" ry="2" />
<text  x="1190.61" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1186.9" y="1717" width="0.5" height="15.0" fill="rgb(229,125,44)" rx="2" ry="2" />
<text  x="1189.95" y="1727.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (2 samples, 0.01%)</title><rect x="55.0" y="1893" width="0.1" height="15.0" fill="rgb(206,140,46)" rx="2" ry="2" />
<text  x="57.98" y="1903.5" ></text>
</g>
<g >
<title>handle_mm_fault (15 samples, 0.08%)</title><rect x="682.6" y="1797" width="0.9" height="15.0" fill="rgb(207,221,1)" rx="2" ry="2" />
<text  x="685.64" y="1807.5" ></text>
</g>
<g >
<title>__sanitizer::internal_munmap (2 samples, 0.01%)</title><rect x="88.2" y="1829" width="0.2" height="15.0" fill="rgb(214,94,22)" rx="2" ry="2" />
<text  x="91.24" y="1839.5" ></text>
</g>
<g >
<title>unmap_region (2 samples, 0.01%)</title><rect x="89.7" y="1813" width="0.2" height="15.0" fill="rgb(232,200,11)" rx="2" ry="2" />
<text  x="92.74" y="1823.5" ></text>
</g>
<g >
<title>__sanitizer::internal_memmove (18 samples, 0.09%)</title><rect x="491.1" y="1925" width="1.1" height="15.0" fill="rgb(235,89,9)" rx="2" ry="2" />
<text  x="494.10" y="1935.5" ></text>
</g>
<g >
<title>__sanitizer::internal_memmove (25 samples, 0.13%)</title><rect x="326.7" y="1941" width="1.5" height="15.0" fill="rgb(223,135,1)" rx="2" ry="2" />
<text  x="329.73" y="1951.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (4 samples, 0.02%)</title><rect x="504.3" y="1845" width="0.3" height="15.0" fill="rgb(209,53,35)" rx="2" ry="2" />
<text  x="507.32" y="1855.5" ></text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.02%)</title><rect x="171.2" y="1573" width="0.2" height="15.0" fill="rgb(251,229,37)" rx="2" ry="2" />
<text  x="174.21" y="1583.5" ></text>
</g>
<g >
<title>__sanitizer::internal_munmap (2 samples, 0.01%)</title><rect x="81.1" y="1349" width="0.1" height="15.0" fill="rgb(218,0,37)" rx="2" ry="2" />
<text  x="84.12" y="1359.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (49 samples, 0.25%)</title><rect x="1004.2" y="2053" width="2.9" height="15.0" fill="rgb(220,80,6)" rx="2" ry="2" />
<text  x="1007.21" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (97 samples, 0.49%)</title><rect x="144.3" y="1765" width="5.8" height="15.0" fill="rgb(235,22,5)" rx="2" ry="2" />
<text  x="147.29" y="1775.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (2 samples, 0.01%)</title><rect x="54.8" y="1909" width="0.1" height="15.0" fill="rgb(241,25,36)" rx="2" ry="2" />
<text  x="57.80" y="1919.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotPut (2 samples, 0.01%)</title><rect x="159.4" y="1669" width="0.1" height="15.0" fill="rgb(243,36,48)" rx="2" ry="2" />
<text  x="162.36" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (568 samples, 2.88%)</title><rect x="55.3" y="1909" width="34.0" height="15.0" fill="rgb(243,0,28)" rx="2" ry="2" />
<text  x="58.28" y="1919.5" >[u..</text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="87.9" y="1781" width="0.1" height="15.0" fill="rgb(236,60,23)" rx="2" ry="2" />
<text  x="90.88" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (3 samples, 0.02%)</title><rect x="187.4" y="1797" width="0.2" height="15.0" fill="rgb(222,163,12)" rx="2" ry="2" />
<text  x="190.42" y="1807.5" ></text>
</g>
<g >
<title>alloc_pages_vma (8 samples, 0.04%)</title><rect x="682.7" y="1765" width="0.5" height="15.0" fill="rgb(211,72,34)" rx="2" ry="2" />
<text  x="685.70" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.5" y="1877" width="0.5" height="15.0" fill="rgb(227,214,9)" rx="2" ry="2" />
<text  x="1190.55" y="1887.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::Unwind (4 samples, 0.02%)</title><rect x="621.3" y="1845" width="0.2" height="15.0" fill="rgb(225,81,18)" rx="2" ry="2" />
<text  x="624.26" y="1855.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (4 samples, 0.02%)</title><rect x="81.8" y="1397" width="0.2" height="15.0" fill="rgb(207,220,53)" rx="2" ry="2" />
<text  x="84.78" y="1407.5" ></text>
</g>
<g >
<title>[unknown] (410 samples, 2.08%)</title><rect x="55.3" y="1285" width="24.5" height="15.0" fill="rgb(233,164,48)" rx="2" ry="2" />
<text  x="58.28" y="1295.5" >[..</text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="75.8" y="213" width="0.1" height="15.0" fill="rgb(212,178,53)" rx="2" ry="2" />
<text  x="78.80" y="223.5" ></text>
</g>
<g >
<title>__vm_munmap (2 samples, 0.01%)</title><rect x="81.1" y="1285" width="0.1" height="15.0" fill="rgb(252,116,51)" rx="2" ry="2" />
<text  x="84.12" y="1295.5" ></text>
</g>
<g >
<title>__pthread_getspecific (4 samples, 0.02%)</title><rect x="158.9" y="1669" width="0.3" height="15.0" fill="rgb(227,191,46)" rx="2" ry="2" />
<text  x="161.94" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1187.4" y="1845" width="0.1" height="15.0" fill="rgb(209,168,33)" rx="2" ry="2" />
<text  x="1190.37" y="1855.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (2 samples, 0.01%)</title><rect x="1101.4" y="2037" width="0.1" height="15.0" fill="rgb(220,131,24)" rx="2" ry="2" />
<text  x="1104.41" y="2047.5" ></text>
</g>
<g >
<title>onmt::unicode::is_letter (210 samples, 1.06%)</title><rect x="701.0" y="1861" width="12.6" height="15.0" fill="rgb(253,183,46)" rx="2" ry="2" />
<text  x="704.00" y="1871.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (9 samples, 0.05%)</title><rect x="93.2" y="2021" width="0.5" height="15.0" fill="rgb(248,36,14)" rx="2" ry="2" />
<text  x="96.20" y="2031.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (2 samples, 0.01%)</title><rect x="1113.7" y="1909" width="0.2" height="15.0" fill="rgb(251,101,2)" rx="2" ry="2" />
<text  x="1116.73" y="1919.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (33 samples, 0.17%)</title><rect x="1126.5" y="2053" width="1.9" height="15.0" fill="rgb(212,209,37)" rx="2" ry="2" />
<text  x="1129.47" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="218.3" y="1189" width="0.2" height="15.0" fill="rgb(232,173,47)" rx="2" ry="2" />
<text  x="221.34" y="1199.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (51 samples, 0.26%)</title><rect x="170.0" y="1589" width="3.1" height="15.0" fill="rgb(252,19,6)" rx="2" ry="2" />
<text  x="173.01" y="1599.5" ></text>
</g>
<g >
<title>GetHost (474 samples, 2.40%)</title><rect x="190.2" y="1973" width="28.4" height="15.0" fill="rgb(239,123,3)" rx="2" ry="2" />
<text  x="193.23" y="1983.5" >Ge..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.4" y="581" width="0.1" height="15.0" fill="rgb(215,216,17)" rx="2" ry="2" />
<text  x="1190.43" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.4" y="933" width="0.1" height="15.0" fill="rgb(224,4,20)" rx="2" ry="2" />
<text  x="1190.43" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (86 samples, 0.44%)</title><rect x="163.2" y="1701" width="5.2" height="15.0" fill="rgb(223,144,47)" rx="2" ry="2" />
<text  x="166.25" y="1711.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (2 samples, 0.01%)</title><rect x="152.7" y="1637" width="0.1" height="15.0" fill="rgb(238,177,21)" rx="2" ry="2" />
<text  x="155.72" y="1647.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (2 samples, 0.01%)</title><rect x="142.3" y="1589" width="0.1" height="15.0" fill="rgb(236,107,41)" rx="2" ry="2" />
<text  x="145.25" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="188.9" y="1845" width="0.2" height="15.0" fill="rgb(222,178,49)" rx="2" ry="2" />
<text  x="191.91" y="1855.5" ></text>
</g>
<g >
<title>page_fault (11 samples, 0.06%)</title><rect x="764.5" y="2021" width="0.6" height="15.0" fill="rgb(252,100,0)" rx="2" ry="2" />
<text  x="767.47" y="2031.5" ></text>
</g>
<g >
<title>fasttext::HierarchicalSoftmaxLoss::predict (6 samples, 0.03%)</title><rect x="572.0" y="1925" width="0.3" height="15.0" fill="rgb(244,111,30)" rx="2" ry="2" />
<text  x="574.98" y="1935.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (3 samples, 0.02%)</title><rect x="334.7" y="1957" width="0.2" height="15.0" fill="rgb(227,140,31)" rx="2" ry="2" />
<text  x="337.74" y="1967.5" ></text>
</g>
<g >
<title>std::future&lt;boost::optional&lt;TDocument&gt; &gt;::get (14 samples, 0.07%)</title><rect x="133.5" y="1989" width="0.9" height="15.0" fill="rgb(232,15,49)" rx="2" ry="2" />
<text  x="136.52" y="1999.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt; &gt;::_M_manager (3 samples, 0.02%)</title><rect x="212.0" y="1701" width="0.2" height="15.0" fill="rgb(250,116,43)" rx="2" ry="2" />
<text  x="215.00" y="1711.5" ></text>
</g>
<g >
<title>Eigen::internal::product_evaluator&lt;Eigen::Product&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt;, 0&gt;, 8, Eigen::DenseShape, Eigen::DenseShape, float, float&gt;::product_evaluator (169 samples, 0.86%)</title><rect x="502.5" y="1957" width="10.1" height="15.0" fill="rgb(236,93,21)" rx="2" ry="2" />
<text  x="505.47" y="1967.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="87.2" y="1781" width="0.1" height="15.0" fill="rgb(249,179,12)" rx="2" ry="2" />
<text  x="90.16" y="1791.5" ></text>
</g>
<g >
<title>__do_munmap (7 samples, 0.04%)</title><rect x="767.8" y="1909" width="0.4" height="15.0" fill="rgb(219,21,41)" rx="2" ry="2" />
<text  x="770.82" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.4" y="1541" width="0.1" height="15.0" fill="rgb(247,169,10)" rx="2" ry="2" />
<text  x="1190.43" y="1551.5" ></text>
</g>
<g >
<title>__do_page_fault (21 samples, 0.11%)</title><rect x="54.0" y="1989" width="1.2" height="15.0" fill="rgb(211,108,48)" rx="2" ry="2" />
<text  x="56.97" y="1999.5" ></text>
</g>
<g >
<title>fasttext::Vector::Vector (2 samples, 0.01%)</title><rect x="517.1" y="1973" width="0.1" height="15.0" fill="rgb(211,5,30)" rx="2" ry="2" />
<text  x="520.12" y="1983.5" ></text>
</g>
<g >
<title>tgnews (19,727 samples, 100.00%)</title><rect x="10.0" y="2069" width="1180.0" height="15.0" fill="rgb(244,65,42)" rx="2" ry="2" />
<text  x="13.00" y="2079.5" >tgnews</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_Alloc_node&gt; (4 samples, 0.02%)</title><rect x="521.8" y="1925" width="0.3" height="15.0" fill="rgb(238,35,15)" rx="2" ry="2" />
<text  x="524.85" y="1935.5" ></text>
</g>
<g >
<title>generic_file_read_iter (2 samples, 0.01%)</title><rect x="1113.7" y="1893" width="0.2" height="15.0" fill="rgb(216,109,13)" rx="2" ry="2" />
<text  x="1116.73" y="1903.5" ></text>
</g>
<g >
<title>schedule (6 samples, 0.03%)</title><rect x="133.9" y="1861" width="0.3" height="15.0" fill="rgb(216,45,49)" rx="2" ry="2" />
<text  x="136.88" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (75 samples, 0.38%)</title><rect x="190.6" y="1653" width="4.5" height="15.0" fill="rgb(210,220,18)" rx="2" ry="2" />
<text  x="193.65" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="162.3" y="1637" width="0.2" height="15.0" fill="rgb(253,164,13)" rx="2" ry="2" />
<text  x="165.29" y="1647.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (3 samples, 0.02%)</title><rect x="89.9" y="1925" width="0.1" height="15.0" fill="rgb(205,187,37)" rx="2" ry="2" />
<text  x="92.86" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (7 samples, 0.04%)</title><rect x="767.2" y="2005" width="0.4" height="15.0" fill="rgb(229,161,0)" rx="2" ry="2" />
<text  x="770.16" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="188.8" y="1861" width="0.3" height="15.0" fill="rgb(254,8,42)" rx="2" ry="2" />
<text  x="191.79" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1187.4" y="1797" width="0.1" height="15.0" fill="rgb(229,151,25)" rx="2" ry="2" />
<text  x="1190.37" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (360 samples, 1.82%)</title><rect x="55.3" y="837" width="21.5" height="15.0" fill="rgb(221,67,33)" rx="2" ry="2" />
<text  x="58.28" y="847.5" >[..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (75 samples, 0.38%)</title><rect x="134.9" y="1701" width="4.5" height="15.0" fill="rgb(243,229,11)" rx="2" ry="2" />
<text  x="137.90" y="1711.5" ></text>
</g>
<g >
<title>__asan_memcpy (3 samples, 0.02%)</title><rect x="171.0" y="1573" width="0.2" height="15.0" fill="rgb(215,8,41)" rx="2" ry="2" />
<text  x="174.03" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (351 samples, 1.78%)</title><rect x="55.3" y="485" width="21.0" height="15.0" fill="rgb(215,62,5)" rx="2" ry="2" />
<text  x="58.28" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1186.9" y="1077" width="0.5" height="15.0" fill="rgb(207,129,12)" rx="2" ry="2" />
<text  x="1189.95" y="1087.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;std::unique_ptr&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;  (3,842 samples, 19.48%)</title><rect x="528.3" y="2005" width="229.8" height="15.0" fill="rgb(254,24,51)" rx="2" ry="2" />
<text  x="531.31" y="2015.5" >std::_Function_handler&lt;std::un..</text>
</g>
<g >
<title>down_read (2 samples, 0.01%)</title><rect x="697.0" y="1797" width="0.1" height="15.0" fill="rgb(209,166,26)" rx="2" ry="2" />
<text  x="699.99" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (6 samples, 0.03%)</title><rect x="161.3" y="1845" width="0.3" height="15.0" fill="rgb(237,79,54)" rx="2" ry="2" />
<text  x="164.28" y="1855.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (3 samples, 0.02%)</title><rect x="139.2" y="1589" width="0.2" height="15.0" fill="rgb(239,37,36)" rx="2" ry="2" />
<text  x="142.20" y="1599.5" ></text>
</g>
<g >
<title>sqrtf32 (3 samples, 0.02%)</title><rect x="339.1" y="1989" width="0.2" height="15.0" fill="rgb(220,43,38)" rx="2" ry="2" />
<text  x="342.11" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (85 samples, 0.43%)</title><rect x="156.0" y="1733" width="5.1" height="15.0" fill="rgb(227,189,16)" rx="2" ry="2" />
<text  x="159.01" y="1743.5" ></text>
</g>
<g >
<title>__asan_memcpy (2 samples, 0.01%)</title><rect x="163.7" y="1621" width="0.1" height="15.0" fill="rgb(222,83,19)" rx="2" ry="2" />
<text  x="166.73" y="1631.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.03%)</title><rect x="186.0" y="1653" width="0.3" height="15.0" fill="rgb(237,57,52)" rx="2" ry="2" />
<text  x="188.98" y="1663.5" ></text>
</g>
<g >
<title>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::dump (5 samples, 0.03%)</title><rect x="520.8" y="1957" width="0.3" height="15.0" fill="rgb(227,180,44)" rx="2" ry="2" />
<text  x="523.77" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (98 samples, 0.50%)</title><rect x="200.6" y="1653" width="5.9" height="15.0" fill="rgb(242,61,44)" rx="2" ry="2" />
<text  x="203.64" y="1663.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (2 samples, 0.01%)</title><rect x="94.4" y="2021" width="0.1" height="15.0" fill="rgb(229,215,44)" rx="2" ry="2" />
<text  x="97.40" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.4" y="837" width="0.1" height="15.0" fill="rgb(213,211,8)" rx="2" ry="2" />
<text  x="1190.43" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1187.6" y="1141" width="0.4" height="15.0" fill="rgb(234,143,13)" rx="2" ry="2" />
<text  x="1190.61" y="1151.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (6 samples, 0.03%)</title><rect x="26.3" y="1909" width="0.3" height="15.0" fill="rgb(237,39,38)" rx="2" ry="2" />
<text  x="29.27" y="1919.5" ></text>
</g>
<g >
<title>__dynamic_cast (10 samples, 0.05%)</title><rect x="201.1" y="1637" width="0.6" height="15.0" fill="rgb(253,17,34)" rx="2" ry="2" />
<text  x="204.05" y="1647.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (4 samples, 0.02%)</title><rect x="210.6" y="1637" width="0.3" height="15.0" fill="rgb(209,0,32)" rx="2" ry="2" />
<text  x="213.62" y="1647.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="90.0" y="1909" width="0.2" height="15.0" fill="rgb(217,208,0)" rx="2" ry="2" />
<text  x="93.03" y="1919.5" ></text>
</g>
<g >
<title>Eigen::internal::generic_product_impl&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt;, Eigen::DenseShape, Eigen::DenseShape, 8&gt;::scaleAndAddTo&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt; (133 samples, 0.67%)</title><rect x="504.6" y="1941" width="8.0" height="15.0" fill="rgb(225,25,53)" rx="2" ry="2" />
<text  x="507.62" y="1951.5" ></text>
</g>
<g >
<title>__handle_mm_fault (8 samples, 0.04%)</title><rect x="764.6" y="1957" width="0.5" height="15.0" fill="rgb(245,122,47)" rx="2" ry="2" />
<text  x="767.64" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (2 samples, 0.01%)</title><rect x="200.3" y="1749" width="0.2" height="15.0" fill="rgb(253,17,2)" rx="2" ry="2" />
<text  x="203.34" y="1759.5" ></text>
</g>
<g >
<title>__asan::AsanThread::stack_top (2 samples, 0.01%)</title><rect x="593.6" y="1877" width="0.1" height="15.0" fill="rgb(252,33,15)" rx="2" ry="2" />
<text  x="596.57" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (414 samples, 2.10%)</title><rect x="55.3" y="1301" width="24.7" height="15.0" fill="rgb(213,197,38)" rx="2" ry="2" />
<text  x="58.28" y="1311.5" >[..</text>
</g>
<g >
<title>__lsan::CollectLeaksCb (2 samples, 0.01%)</title><rect x="94.0" y="2021" width="0.2" height="15.0" fill="rgb(253,113,29)" rx="2" ry="2" />
<text  x="97.04" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.6" y="1365" width="0.4" height="15.0" fill="rgb(208,66,12)" rx="2" ry="2" />
<text  x="1190.61" y="1375.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::Unwind (2 samples, 0.01%)</title><rect x="209.9" y="1637" width="0.1" height="15.0" fill="rgb(253,142,33)" rx="2" ry="2" />
<text  x="212.91" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (367 samples, 1.86%)</title><rect x="55.3" y="1093" width="21.9" height="15.0" fill="rgb(212,137,38)" rx="2" ry="2" />
<text  x="58.28" y="1103.5" >[..</text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (90 samples, 0.46%)</title><rect x="150.2" y="1685" width="5.4" height="15.0" fill="rgb(234,102,37)" rx="2" ry="2" />
<text  x="153.21" y="1695.5" ></text>
</g>
<g >
<title>__sanitizer::internal_memmove (5 samples, 0.03%)</title><rect x="1189.3" y="2037" width="0.3" height="15.0" fill="rgb(239,48,42)" rx="2" ry="2" />
<text  x="1192.28" y="2047.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (355 samples, 1.80%)</title><rect x="1128.5" y="2053" width="21.2" height="15.0" fill="rgb(248,52,3)" rx="2" ry="2" />
<text  x="1131.51" y="2063.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (25 samples, 0.13%)</title><rect x="1103.1" y="1989" width="1.5" height="15.0" fill="rgb(240,95,4)" rx="2" ry="2" />
<text  x="1106.09" y="1999.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (7 samples, 0.04%)</title><rect x="1117.1" y="2037" width="0.4" height="15.0" fill="rgb(243,211,47)" rx="2" ry="2" />
<text  x="1120.08" y="2047.5" ></text>
</g>
<g >
<title>mem_cgroup_commit_charge (7 samples, 0.04%)</title><rect x="946.8" y="1925" width="0.5" height="15.0" fill="rgb(251,139,47)" rx="2" ry="2" />
<text  x="949.85" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (7 samples, 0.04%)</title><rect x="217.0" y="1813" width="0.4" height="15.0" fill="rgb(210,65,15)" rx="2" ry="2" />
<text  x="220.02" y="1823.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="88.7" y="1861" width="0.1" height="15.0" fill="rgb(213,43,24)" rx="2" ry="2" />
<text  x="91.72" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (360 samples, 1.82%)</title><rect x="55.3" y="869" width="21.5" height="15.0" fill="rgb(250,53,22)" rx="2" ry="2" />
<text  x="58.28" y="879.5" >[..</text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (2 samples, 0.01%)</title><rect x="187.7" y="1829" width="0.1" height="15.0" fill="rgb(241,167,47)" rx="2" ry="2" />
<text  x="190.65" y="1839.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (3 samples, 0.02%)</title><rect x="573.5" y="1925" width="0.2" height="15.0" fill="rgb(206,57,9)" rx="2" ry="2" />
<text  x="576.47" y="1935.5" ></text>
</g>
<g >
<title>alloc_pages_vma (2 samples, 0.01%)</title><rect x="54.3" y="1941" width="0.1" height="15.0" fill="rgb(250,193,9)" rx="2" ry="2" />
<text  x="57.26" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (459 samples, 2.33%)</title><rect x="55.3" y="1461" width="27.4" height="15.0" fill="rgb(215,182,35)" rx="2" ry="2" />
<text  x="58.28" y="1471.5" >[..</text>
</g>
<g >
<title>[unknown] (349 samples, 1.77%)</title><rect x="55.3" y="421" width="20.9" height="15.0" fill="rgb(214,37,45)" rx="2" ry="2" />
<text  x="58.28" y="431.5" ></text>
</g>
<g >
<title>[unknown] (357 samples, 1.81%)</title><rect x="55.3" y="549" width="21.3" height="15.0" fill="rgb(211,48,20)" rx="2" ry="2" />
<text  x="58.28" y="559.5" >[..</text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (4 samples, 0.02%)</title><rect x="608.5" y="1861" width="0.2" height="15.0" fill="rgb(211,206,35)" rx="2" ry="2" />
<text  x="611.46" y="1871.5" ></text>
</g>
<g >
<title>Eigen::DenseCoeffsBase&lt;Eigen::Transpose&lt;Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_sum_op&lt;float, float&gt;, Eigen::Product&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0&gt; const, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const&gt;, 0&gt;::coeff (304 samples, 1.54%)</title><rect x="224.2" y="1973" width="18.2" height="15.0" fill="rgb(211,150,44)" rx="2" ry="2" />
<text  x="227.20" y="1983.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (16 samples, 0.08%)</title><rect x="694.5" y="1845" width="0.9" height="15.0" fill="rgb(211,90,46)" rx="2" ry="2" />
<text  x="697.48" y="1855.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.01%)</title><rect x="194.4" y="1557" width="0.1" height="15.0" fill="rgb(232,79,29)" rx="2" ry="2" />
<text  x="197.41" y="1567.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (17 samples, 0.09%)</title><rect x="947.3" y="1925" width="1.0" height="15.0" fill="rgb(235,16,20)" rx="2" ry="2" />
<text  x="950.26" y="1935.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (47 samples, 0.24%)</title><rect x="976.5" y="2053" width="2.8" height="15.0" fill="rgb(227,52,35)" rx="2" ry="2" />
<text  x="979.51" y="2063.5" ></text>
</g>
<g >
<title>__sanitizer::MonotonicNanoTime (2 samples, 0.01%)</title><rect x="1030.4" y="2053" width="0.1" height="15.0" fill="rgb(250,24,32)" rx="2" ry="2" />
<text  x="1033.41" y="2063.5" ></text>
</g>
<g >
<title>__sanitizer_weak_hook_memcmp (12 samples, 0.06%)</title><rect x="1149.0" y="2037" width="0.7" height="15.0" fill="rgb(251,71,49)" rx="2" ry="2" />
<text  x="1152.03" y="2047.5" ></text>
</g>
<g >
<title>__do_page_fault (6 samples, 0.03%)</title><rect x="1105.5" y="1989" width="0.3" height="15.0" fill="rgb(250,189,29)" rx="2" ry="2" />
<text  x="1108.48" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="162.7" y="1253" width="0.1" height="15.0" fill="rgb(223,95,44)" rx="2" ry="2" />
<text  x="165.65" y="1263.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (3 samples, 0.02%)</title><rect x="160.9" y="1701" width="0.1" height="15.0" fill="rgb(228,5,36)" rx="2" ry="2" />
<text  x="163.86" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.6" y="485" width="0.4" height="15.0" fill="rgb(214,151,8)" rx="2" ry="2" />
<text  x="1190.61" y="495.5" ></text>
</g>
<g >
<title>std::__stable_sort_adaptive&lt;__gnu_cxx::__normal_iterator&lt;TDocument*, std::vector&lt;TDocument, std::allocator&lt;TDocument&gt; &gt; &gt;, TDocument*, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;main::$_1&gt; &gt; (6 samples, 0.03%)</title><rect x="522.5" y="2005" width="0.4" height="15.0" fill="rgb(212,131,17)" rx="2" ry="2" />
<text  x="525.51" y="2015.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="90.0" y="1893" width="0.2" height="15.0" fill="rgb(209,134,9)" rx="2" ry="2" />
<text  x="93.03" y="1903.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; const&amp;&gt; (4 samples, 0.02%)</title><rect x="521.8" y="1909" width="0.3" height="15.0" fill="rgb(206,223,49)" rx="2" ry="2" />
<text  x="524.85" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (4 samples, 0.02%)</title><rect x="161.6" y="1845" width="0.3" height="15.0" fill="rgb(222,202,45)" rx="2" ry="2" />
<text  x="164.63" y="1855.5" ></text>
</g>
<g >
<title>__pthread_getspecific (2 samples, 0.01%)</title><rect x="176.1" y="1589" width="0.1" height="15.0" fill="rgb(221,96,23)" rx="2" ry="2" />
<text  x="179.11" y="1599.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (52 samples, 0.26%)</title><rect x="810.2" y="2005" width="3.1" height="15.0" fill="rgb(211,140,6)" rx="2" ry="2" />
<text  x="813.23" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (7 samples, 0.04%)</title><rect x="876.4" y="2037" width="0.5" height="15.0" fill="rgb(232,63,33)" rx="2" ry="2" />
<text  x="879.44" y="2047.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.02%)</title><rect x="172.3" y="1573" width="0.3" height="15.0" fill="rgb(208,210,0)" rx="2" ry="2" />
<text  x="175.34" y="1583.5" ></text>
</g>
<g >
<title>try_charge (3 samples, 0.02%)</title><rect x="948.1" y="1893" width="0.2" height="15.0" fill="rgb(219,80,40)" rx="2" ry="2" />
<text  x="951.10" y="1903.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::getLine (483 samples, 2.45%)</title><rect x="543.1" y="1925" width="28.9" height="15.0" fill="rgb(251,162,35)" rx="2" ry="2" />
<text  x="546.08" y="1935.5" >fa..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (99 samples, 0.50%)</title><rect x="200.6" y="1685" width="5.9" height="15.0" fill="rgb(229,17,6)" rx="2" ry="2" />
<text  x="203.58" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1186.9" y="245" width="0.5" height="15.0" fill="rgb(248,132,17)" rx="2" ry="2" />
<text  x="1189.95" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="188.9" y="1573" width="0.1" height="15.0" fill="rgb(250,176,44)" rx="2" ry="2" />
<text  x="191.91" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.4" y="1205" width="0.1" height="15.0" fill="rgb(241,115,34)" rx="2" ry="2" />
<text  x="1190.43" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="188.7" y="1877" width="0.4" height="15.0" fill="rgb(231,26,52)" rx="2" ry="2" />
<text  x="191.73" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1186.9" y="1237" width="0.5" height="15.0" fill="rgb(245,25,13)" rx="2" ry="2" />
<text  x="1189.95" y="1247.5" ></text>
</g>
<g >
<title>[unknown] (340 samples, 1.72%)</title><rect x="55.3" y="149" width="20.3" height="15.0" fill="rgb(240,67,27)" rx="2" ry="2" />
<text  x="58.28" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (2 samples, 0.01%)</title><rect x="217.1" y="1717" width="0.1" height="15.0" fill="rgb(207,166,33)" rx="2" ry="2" />
<text  x="220.08" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (347 samples, 1.76%)</title><rect x="55.3" y="277" width="20.7" height="15.0" fill="rgb(247,3,42)" rx="2" ry="2" />
<text  x="58.28" y="287.5" ></text>
</g>
<g >
<title>do_page_fault (27 samples, 0.14%)</title><rect x="503.0" y="1909" width="1.6" height="15.0" fill="rgb(242,181,6)" rx="2" ry="2" />
<text  x="506.01" y="1919.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (4 samples, 0.02%)</title><rect x="1125.1" y="2037" width="0.2" height="15.0" fill="rgb(218,138,33)" rx="2" ry="2" />
<text  x="1128.10" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.6" y="261" width="0.4" height="15.0" fill="rgb(233,31,10)" rx="2" ry="2" />
<text  x="1190.61" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (85 samples, 0.43%)</title><rect x="156.0" y="1749" width="5.1" height="15.0" fill="rgb(240,65,51)" rx="2" ry="2" />
<text  x="159.01" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1186.9" y="373" width="0.5" height="15.0" fill="rgb(245,128,3)" rx="2" ry="2" />
<text  x="1189.95" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;fasttext::entry, std::allocator&lt;fasttext::entry&gt; &gt;::_M_realloc_insert&lt;fasttext::entry const&amp;&gt; (3 samples, 0.02%)</title><rect x="878.4" y="2037" width="0.1" height="15.0" fill="rgb(214,141,0)" rx="2" ry="2" />
<text  x="881.36" y="2047.5" ></text>
</g>
<g >
<title>TNewsCluster::SortByWeights (2 samples, 0.01%)</title><rect x="335.3" y="1989" width="0.2" height="15.0" fill="rgb(224,43,36)" rx="2" ry="2" />
<text  x="338.34" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1186.9" y="1205" width="0.5" height="15.0" fill="rgb(208,227,27)" rx="2" ry="2" />
<text  x="1189.95" y="1215.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::emplace_back&lt;char const*&amp;, unsigned int&amp;&gt; (184 samples, 0.93%)</title><rect x="687.4" y="1861" width="11.0" height="15.0" fill="rgb(248,134,53)" rx="2" ry="2" />
<text  x="690.42" y="1871.5" ></text>
</g>
<g >
<title>fasttext::Vector::zero (8 samples, 0.04%)</title><rect x="334.6" y="1973" width="0.5" height="15.0" fill="rgb(221,130,15)" rx="2" ry="2" />
<text  x="337.62" y="1983.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (2 samples, 0.01%)</title><rect x="88.2" y="1781" width="0.2" height="15.0" fill="rgb(205,148,39)" rx="2" ry="2" />
<text  x="91.24" y="1791.5" ></text>
</g>
<g >
<title>memcpy (3 samples, 0.02%)</title><rect x="618.5" y="1845" width="0.2" height="15.0" fill="rgb(219,86,18)" rx="2" ry="2" />
<text  x="621.51" y="1855.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::json_value::destroy (2 samples, 0.01%)</title><rect x="125.2" y="1989" width="0.1" height="15.0" fill="rgb(228,126,10)" rx="2" ry="2" />
<text  x="128.21" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (75 samples, 0.38%)</title><rect x="134.9" y="1621" width="4.5" height="15.0" fill="rgb(213,141,41)" rx="2" ry="2" />
<text  x="137.90" y="1631.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::dump (5 samples, 0.03%)</title><rect x="520.8" y="2005" width="0.3" height="15.0" fill="rgb(232,44,36)" rx="2" ry="2" />
<text  x="523.77" y="2015.5" ></text>
</g>
<g >
<title>__dynamic_cast (4 samples, 0.02%)</title><rect x="202.5" y="1621" width="0.3" height="15.0" fill="rgb(243,122,3)" rx="2" ry="2" />
<text  x="205.55" y="1631.5" ></text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (7 samples, 0.04%)</title><rect x="26.3" y="1957" width="0.4" height="15.0" fill="rgb(212,161,39)" rx="2" ry="2" />
<text  x="29.27" y="1967.5" ></text>
</g>
<g >
<title>__sanitizer::internal_munmap (2 samples, 0.01%)</title><rect x="87.9" y="1813" width="0.1" height="15.0" fill="rgb(234,120,25)" rx="2" ry="2" />
<text  x="90.88" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (3 samples, 0.02%)</title><rect x="187.4" y="1813" width="0.2" height="15.0" fill="rgb(211,137,10)" rx="2" ry="2" />
<text  x="190.42" y="1823.5" ></text>
</g>
<g >
<title>_raw_spin_lock (3 samples, 0.02%)</title><rect x="24.7" y="1957" width="0.2" height="15.0" fill="rgb(245,52,21)" rx="2" ry="2" />
<text  x="27.71" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="218.2" y="1669" width="0.3" height="15.0" fill="rgb(229,121,8)" rx="2" ry="2" />
<text  x="221.22" y="1679.5" ></text>
</g>
<g >
<title>fasttext::Vector::addVector (63 samples, 0.32%)</title><rect x="1108.9" y="2053" width="3.8" height="15.0" fill="rgb(248,190,21)" rx="2" ry="2" />
<text  x="1111.95" y="2063.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (80 samples, 0.41%)</title><rect x="731.1" y="1877" width="4.8" height="15.0" fill="rgb(223,189,11)" rx="2" ry="2" />
<text  x="734.09" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.6" y="309" width="0.4" height="15.0" fill="rgb(212,44,38)" rx="2" ry="2" />
<text  x="1190.61" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (72 samples, 0.36%)</title><rect x="190.8" y="1605" width="4.3" height="15.0" fill="rgb(250,55,50)" rx="2" ry="2" />
<text  x="193.77" y="1615.5" ></text>
</g>
<g >
<title>fasttext::FastText::getDimension (38 samples, 0.19%)</title><rect x="514.9" y="1973" width="2.2" height="15.0" fill="rgb(219,91,53)" rx="2" ry="2" />
<text  x="517.85" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (8 samples, 0.04%)</title><rect x="1186.9" y="2021" width="0.5" height="15.0" fill="rgb(242,212,8)" rx="2" ry="2" />
<text  x="1189.89" y="2031.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::_M_transform (7 samples, 0.04%)</title><rect x="1150.6" y="2053" width="0.5" height="15.0" fill="rgb(230,228,49)" rx="2" ry="2" />
<text  x="1153.64" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (13,991 samples, 70.92%)</title><rect x="44.1" y="2053" width="836.9" height="15.0" fill="rgb(215,183,0)" rx="2" ry="2" />
<text  x="47.10" y="2063.5" >[unknown]</text>
</g>
<g >
<title>[unknown] (359 samples, 1.82%)</title><rect x="55.3" y="709" width="21.5" height="15.0" fill="rgb(231,25,46)" rx="2" ry="2" />
<text  x="58.28" y="719.5" >[..</text>
</g>
<g >
<title>__do_page_fault (8 samples, 0.04%)</title><rect x="655.3" y="1829" width="0.5" height="15.0" fill="rgb(206,169,49)" rx="2" ry="2" />
<text  x="658.30" y="1839.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="91.3" y="1957" width="0.1" height="15.0" fill="rgb(245,27,41)" rx="2" ry="2" />
<text  x="94.29" y="1967.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (3 samples, 0.02%)</title><rect x="769.2" y="2005" width="0.2" height="15.0" fill="rgb(232,58,11)" rx="2" ry="2" />
<text  x="772.19" y="2015.5" ></text>
</g>
<g >
<title>fasttext::Vector::Vector (2 samples, 0.01%)</title><rect x="1108.8" y="2053" width="0.1" height="15.0" fill="rgb(231,89,30)" rx="2" ry="2" />
<text  x="1111.83" y="2063.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::basic_json (2 samples, 0.01%)</title><rect x="522.0" y="1765" width="0.1" height="15.0" fill="rgb(252,2,27)" rx="2" ry="2" />
<text  x="524.97" y="1775.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="80.8" y="1349" width="0.1" height="15.0" fill="rgb(252,218,28)" rx="2" ry="2" />
<text  x="83.82" y="1359.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::create&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (2 samples, 0.01%)</title><rect x="809.9" y="2037" width="0.1" height="15.0" fill="rgb(249,167,32)" rx="2" ry="2" />
<text  x="812.87" y="2047.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="86.0" y="1701" width="0.1" height="15.0" fill="rgb(237,193,44)" rx="2" ry="2" />
<text  x="88.97" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.4" y="533" width="0.1" height="15.0" fill="rgb(218,13,20)" rx="2" ry="2" />
<text  x="1190.43" y="543.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::computeSubwords (8 samples, 0.04%)</title><rect x="877.4" y="1957" width="0.5" height="15.0" fill="rgb(244,164,41)" rx="2" ry="2" />
<text  x="880.40" y="1967.5" ></text>
</g>
<g >
<title>get_page_from_freelist (3 samples, 0.02%)</title><rect x="683.0" y="1733" width="0.2" height="15.0" fill="rgb(247,162,9)" rx="2" ry="2" />
<text  x="686.00" y="1743.5" ></text>
</g>
<g >
<title>Eigen::internal::gemv_dense_selector&lt;2, 1, true&gt;::run&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; &gt; (336 samples, 1.70%)</title><rect x="385.6" y="1941" width="20.1" height="15.0" fill="rgb(254,198,18)" rx="2" ry="2" />
<text  x="388.65" y="1951.5" ></text>
</g>
<g >
<title>Eigen::internal::general_matrix_vector_product&lt;long, float, Eigen::internal::const_blas_data_mapper&lt;float, long, 1&gt;, 1, false, float, Eigen::internal::const_blas_data_mapper&lt;float, long, 0&gt;, false, 0&gt;::run (279 samples, 1.41%)</title><rect x="225.5" y="1941" width="16.6" height="15.0" fill="rgb(205,97,46)" rx="2" ry="2" />
<text  x="228.46" y="1951.5" ></text>
</g>
<g >
<title>do_syscall_64 (7 samples, 0.04%)</title><rect x="1105.1" y="2037" width="0.4" height="15.0" fill="rgb(231,6,5)" rx="2" ry="2" />
<text  x="1108.06" y="2047.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (2 samples, 0.01%)</title><rect x="1013.4" y="1909" width="0.1" height="15.0" fill="rgb(232,161,4)" rx="2" ry="2" />
<text  x="1016.42" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="188.7" y="1893" width="0.4" height="15.0" fill="rgb(242,199,53)" rx="2" ry="2" />
<text  x="191.73" y="1903.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (8 samples, 0.04%)</title><rect x="697.3" y="1749" width="0.5" height="15.0" fill="rgb(246,13,27)" rx="2" ry="2" />
<text  x="700.29" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1186.9" y="181" width="0.5" height="15.0" fill="rgb(231,124,47)" rx="2" ry="2" />
<text  x="1189.95" y="191.5" ></text>
</g>
<g >
<title>do_wp_page (106 samples, 0.54%)</title><rect x="944.5" y="1957" width="6.3" height="15.0" fill="rgb(241,13,3)" rx="2" ry="2" />
<text  x="947.45" y="1967.5" ></text>
</g>
<g >
<title>__asan_memcpy (3 samples, 0.02%)</title><rect x="581.4" y="1893" width="0.2" height="15.0" fill="rgb(217,157,0)" rx="2" ry="2" />
<text  x="584.43" y="1903.5" ></text>
</g>
<g >
<title>fasttext::FastText::getWordVector (228 samples, 1.16%)</title><rect x="317.1" y="1973" width="13.6" height="15.0" fill="rgb(221,146,44)" rx="2" ry="2" />
<text  x="320.10" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (4 samples, 0.02%)</title><rect x="217.7" y="1861" width="0.2" height="15.0" fill="rgb(232,68,43)" rx="2" ry="2" />
<text  x="220.68" y="1871.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (55 samples, 0.28%)</title><rect x="146.0" y="1621" width="3.3" height="15.0" fill="rgb(227,26,50)" rx="2" ry="2" />
<text  x="149.02" y="1631.5" ></text>
</g>
<g >
<title>get_page_from_freelist (5 samples, 0.03%)</title><rect x="25.9" y="1925" width="0.3" height="15.0" fill="rgb(217,133,11)" rx="2" ry="2" />
<text  x="28.91" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.4" y="133" width="0.1" height="15.0" fill="rgb(206,220,16)" rx="2" ry="2" />
<text  x="1190.43" y="143.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.01%)</title><rect x="571.7" y="1893" width="0.1" height="15.0" fill="rgb(241,57,20)" rx="2" ry="2" />
<text  x="574.68" y="1903.5" ></text>
</g>
<g >
<title>onmt::CaseModifier::type_to_char (2 samples, 0.01%)</title><rect x="577.1" y="1893" width="0.1" height="15.0" fill="rgb(213,48,4)" rx="2" ry="2" />
<text  x="580.12" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="188.9" y="1797" width="0.2" height="15.0" fill="rgb(237,229,41)" rx="2" ry="2" />
<text  x="191.91" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="218.3" y="1237" width="0.2" height="15.0" fill="rgb(235,94,27)" rx="2" ry="2" />
<text  x="221.34" y="1247.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (3 samples, 0.02%)</title><rect x="573.7" y="1925" width="0.1" height="15.0" fill="rgb(227,221,11)" rx="2" ry="2" />
<text  x="576.65" y="1935.5" ></text>
</g>
<g >
<title>ksys_read (2 samples, 0.01%)</title><rect x="124.1" y="1973" width="0.1" height="15.0" fill="rgb(234,66,5)" rx="2" ry="2" />
<text  x="127.13" y="1983.5" ></text>
</g>
<g >
<title>unmap_region (2 samples, 0.01%)</title><rect x="81.1" y="1253" width="0.1" height="15.0" fill="rgb(215,132,5)" rx="2" ry="2" />
<text  x="84.12" y="1263.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::pushHash (4 samples, 0.02%)</title><rect x="493.6" y="1909" width="0.3" height="15.0" fill="rgb(217,64,1)" rx="2" ry="2" />
<text  x="496.62" y="1919.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (5 samples, 0.03%)</title><rect x="173.1" y="1605" width="0.3" height="15.0" fill="rgb(243,167,51)" rx="2" ry="2" />
<text  x="176.12" y="1615.5" ></text>
</g>
<g >
<title>__lsan::DisabledInThisThread (11 samples, 0.06%)</title><rect x="1012.7" y="2053" width="0.7" height="15.0" fill="rgb(220,95,34)" rx="2" ry="2" />
<text  x="1015.70" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="218.3" y="1317" width="0.2" height="15.0" fill="rgb(238,218,53)" rx="2" ry="2" />
<text  x="221.28" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.4" y="149" width="0.1" height="15.0" fill="rgb(212,81,2)" rx="2" ry="2" />
<text  x="1190.43" y="159.5" ></text>
</g>
<g >
<title>page_fault (89 samples, 0.45%)</title><rect x="22.6" y="2037" width="5.3" height="15.0" fill="rgb(245,22,19)" rx="2" ry="2" />
<text  x="25.62" y="2047.5" ></text>
</g>
<g >
<title>__interceptor_strlen (22 samples, 0.11%)</title><rect x="582.1" y="1893" width="1.3" height="15.0" fill="rgb(216,80,35)" rx="2" ry="2" />
<text  x="585.08" y="1903.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="78.1" y="1189" width="0.2" height="15.0" fill="rgb(234,69,0)" rx="2" ry="2" />
<text  x="81.13" y="1199.5" ></text>
</g>
<g >
<title>fasttext::Vector::addRow (25 samples, 0.13%)</title><rect x="497.3" y="1957" width="1.5" height="15.0" fill="rgb(217,185,20)" rx="2" ry="2" />
<text  x="500.32" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1187.6" y="1381" width="0.4" height="15.0" fill="rgb(254,168,20)" rx="2" ry="2" />
<text  x="1190.61" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1186.9" y="1861" width="0.5" height="15.0" fill="rgb(240,137,1)" rx="2" ry="2" />
<text  x="1189.95" y="1871.5" ></text>
</g>
<g >
<title>__asan::PoisonShadow (80 samples, 0.41%)</title><rect x="49.2" y="2021" width="4.8" height="15.0" fill="rgb(253,14,37)" rx="2" ry="2" />
<text  x="52.18" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="218.3" y="1365" width="0.2" height="15.0" fill="rgb(227,1,46)" rx="2" ry="2" />
<text  x="221.28" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.4" y="197" width="0.1" height="15.0" fill="rgb(245,23,16)" rx="2" ry="2" />
<text  x="1190.43" y="207.5" ></text>
</g>
<g >
<title>__pthread_getspecific (2 samples, 0.01%)</title><rect x="484.5" y="1941" width="0.1" height="15.0" fill="rgb(246,202,51)" rx="2" ry="2" />
<text  x="487.46" y="1951.5" ></text>
</g>
<g >
<title>Summarize (2,509 samples, 12.72%)</title><rect x="189.7" y="2005" width="150.1" height="15.0" fill="rgb(211,8,51)" rx="2" ry="2" />
<text  x="192.75" y="2015.5" >Summarize</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_Compiler (462 samples, 2.34%)</title><rect x="190.4" y="1941" width="27.6" height="15.0" fill="rgb(246,166,47)" rx="2" ry="2" />
<text  x="193.41" y="1951.5" >s..</text>
</g>
<g >
<title>TAgencyRating::ScoreUrl (440 samples, 2.23%)</title><rect x="162.9" y="1973" width="26.3" height="15.0" fill="rgb(209,28,15)" rx="2" ry="2" />
<text  x="165.89" y="1983.5" >T..</text>
</g>
<g >
<title>__x64_sys_munmap (2 samples, 0.01%)</title><rect x="88.6" y="1797" width="0.1" height="15.0" fill="rgb(237,98,2)" rx="2" ry="2" />
<text  x="91.60" y="1807.5" ></text>
</g>
<g >
<title>__asan_memcpy (4 samples, 0.02%)</title><rect x="579.7" y="1877" width="0.2" height="15.0" fill="rgb(248,61,33)" rx="2" ry="2" />
<text  x="582.69" y="1887.5" ></text>
</g>
<g >
<title>handle_mm_fault (2 samples, 0.01%)</title><rect x="731.0" y="1829" width="0.1" height="15.0" fill="rgb(235,76,5)" rx="2" ry="2" />
<text  x="733.97" y="1839.5" ></text>
</g>
<g >
<title>onmt::unicode::get_case (252 samples, 1.28%)</title><rect x="698.5" y="1877" width="15.1" height="15.0" fill="rgb(235,16,48)" rx="2" ry="2" />
<text  x="701.55" y="1887.5" ></text>
</g>
<g >
<title>fasttext::HierarchicalSoftmaxLoss::dfs (4 samples, 0.02%)</title><rect x="572.1" y="1893" width="0.2" height="15.0" fill="rgb(222,137,45)" rx="2" ry="2" />
<text  x="575.10" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (444 samples, 2.25%)</title><rect x="190.4" y="1829" width="26.6" height="15.0" fill="rgb(246,81,31)" rx="2" ry="2" />
<text  x="193.41" y="1839.5" >s..</text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (4 samples, 0.02%)</title><rect x="206.3" y="1637" width="0.2" height="15.0" fill="rgb(208,33,16)" rx="2" ry="2" />
<text  x="209.26" y="1647.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.01%)</title><rect x="1101.4" y="1989" width="0.1" height="15.0" fill="rgb(218,67,9)" rx="2" ry="2" />
<text  x="1104.41" y="1999.5" ></text>
</g>
<g >
<title>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::dump (3 samples, 0.02%)</title><rect x="520.8" y="1909" width="0.2" height="15.0" fill="rgb(205,139,16)" rx="2" ry="2" />
<text  x="523.77" y="1919.5" ></text>
</g>
<g >
<title>TSlinkClustering::ClusterBatch (2,993 samples, 15.17%)</title><rect x="340.4" y="1989" width="179.0" height="15.0" fill="rgb(231,197,9)" rx="2" ry="2" />
<text  x="343.37" y="1999.5" >TSlinkClustering::Clust..</text>
</g>
<g >
<title>[unknown] (503 samples, 2.55%)</title><rect x="55.3" y="1669" width="30.1" height="15.0" fill="rgb(243,30,28)" rx="2" ry="2" />
<text  x="58.28" y="1679.5" >[u..</text>
</g>
<g >
<title>finish_task_switch (6 samples, 0.03%)</title><rect x="133.9" y="1829" width="0.3" height="15.0" fill="rgb(216,70,28)" rx="2" ry="2" />
<text  x="136.88" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1186.9" y="1061" width="0.5" height="15.0" fill="rgb(215,32,47)" rx="2" ry="2" />
<text  x="1189.95" y="1071.5" ></text>
</g>
<g >
<title>__dynamic_cast@plt (2 samples, 0.01%)</title><rect x="207.8" y="1653" width="0.1" height="15.0" fill="rgb(232,37,28)" rx="2" ry="2" />
<text  x="210.75" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1186.9" y="1829" width="0.5" height="15.0" fill="rgb(220,57,23)" rx="2" ry="2" />
<text  x="1189.95" y="1839.5" ></text>
</g>
<g >
<title>page_add_new_anon_rmap (2 samples, 0.01%)</title><rect x="944.6" y="1941" width="0.1" height="15.0" fill="rgb(213,171,25)" rx="2" ry="2" />
<text  x="947.57" y="1951.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (2 samples, 0.01%)</title><rect x="189.1" y="1957" width="0.1" height="15.0" fill="rgb(206,189,42)" rx="2" ry="2" />
<text  x="192.09" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1186.9" y="581" width="0.5" height="15.0" fill="rgb(217,205,43)" rx="2" ry="2" />
<text  x="1189.95" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (174 samples, 0.88%)</title><rect x="163.2" y="1749" width="10.5" height="15.0" fill="rgb(236,219,28)" rx="2" ry="2" />
<text  x="166.25" y="1759.5" ></text>
</g>
<g >
<title>__libc_read (2 samples, 0.01%)</title><rect x="124.1" y="2037" width="0.1" height="15.0" fill="rgb(208,207,5)" rx="2" ry="2" />
<text  x="127.13" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.4" y="1413" width="0.1" height="15.0" fill="rgb(253,168,1)" rx="2" ry="2" />
<text  x="1190.43" y="1423.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.03%)</title><rect x="210.3" y="1637" width="0.3" height="15.0" fill="rgb(220,51,30)" rx="2" ry="2" />
<text  x="213.33" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (445 samples, 2.26%)</title><rect x="134.5" y="1829" width="26.6" height="15.0" fill="rgb(217,129,53)" rx="2" ry="2" />
<text  x="137.48" y="1839.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.4" y="1685" width="0.1" height="15.0" fill="rgb(250,135,43)" rx="2" ry="2" />
<text  x="1190.37" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="162.5" y="1669" width="0.3" height="15.0" fill="rgb(253,62,52)" rx="2" ry="2" />
<text  x="165.47" y="1679.5" ></text>
</g>
<g >
<title>onmt::unicode::is_separator (73 samples, 0.37%)</title><rect x="726.5" y="1877" width="4.4" height="15.0" fill="rgb(211,138,30)" rx="2" ry="2" />
<text  x="729.54" y="1887.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (11 samples, 0.06%)</title><rect x="539.3" y="1909" width="0.6" height="15.0" fill="rgb(223,140,37)" rx="2" ry="2" />
<text  x="542.26" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.4" y="1189" width="0.1" height="15.0" fill="rgb(221,218,39)" rx="2" ry="2" />
<text  x="1190.43" y="1199.5" ></text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::scan_string (121 samples, 0.61%)</title><rect x="125.9" y="1941" width="7.3" height="15.0" fill="rgb(217,128,7)" rx="2" ry="2" />
<text  x="128.92" y="1951.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="79.5" y="1269" width="0.1" height="15.0" fill="rgb(229,180,27)" rx="2" ry="2" />
<text  x="82.51" y="1279.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (2 samples, 0.01%)</title><rect x="813.3" y="2005" width="0.2" height="15.0" fill="rgb(216,164,10)" rx="2" ry="2" />
<text  x="816.34" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.02%)</title><rect x="1187.7" y="37" width="0.3" height="15.0" fill="rgb(207,137,48)" rx="2" ry="2" />
<text  x="1190.73" y="47.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (8 samples, 0.04%)</title><rect x="682.7" y="1749" width="0.5" height="15.0" fill="rgb(216,173,42)" rx="2" ry="2" />
<text  x="685.70" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (5 samples, 0.03%)</title><rect x="217.6" y="1877" width="0.3" height="15.0" fill="rgb(206,164,14)" rx="2" ry="2" />
<text  x="220.62" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.6" y="821" width="0.4" height="15.0" fill="rgb(240,211,2)" rx="2" ry="2" />
<text  x="1190.61" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (75 samples, 0.38%)</title><rect x="134.9" y="1653" width="4.5" height="15.0" fill="rgb(220,185,19)" rx="2" ry="2" />
<text  x="137.90" y="1663.5" ></text>
</g>
<g >
<title>clear_page_erms (3 samples, 0.02%)</title><rect x="503.9" y="1813" width="0.2" height="15.0" fill="rgb(226,104,32)" rx="2" ry="2" />
<text  x="506.90" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="162.5" y="1525" width="0.3" height="15.0" fill="rgb(226,180,8)" rx="2" ry="2" />
<text  x="165.53" y="1535.5" ></text>
</g>
<g >
<title>__asan::AsanThread::stack_top (3 samples, 0.02%)</title><rect x="146.8" y="1605" width="0.2" height="15.0" fill="rgb(229,219,52)" rx="2" ry="2" />
<text  x="149.80" y="1615.5" ></text>
</g>
<g >
<title>handle_mm_fault (3 samples, 0.02%)</title><rect x="520.0" y="1893" width="0.2" height="15.0" fill="rgb(209,167,22)" rx="2" ry="2" />
<text  x="523.00" y="1903.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (3 samples, 0.02%)</title><rect x="82.3" y="1413" width="0.1" height="15.0" fill="rgb(243,199,43)" rx="2" ry="2" />
<text  x="85.26" y="1423.5" ></text>
</g>
<g >
<title>[unknown] (348 samples, 1.76%)</title><rect x="55.3" y="373" width="20.8" height="15.0" fill="rgb(207,143,48)" rx="2" ry="2" />
<text  x="58.28" y="383.5" ></text>
</g>
<g >
<title>operator new (12 samples, 0.06%)</title><rect x="621.5" y="1845" width="0.7" height="15.0" fill="rgb(224,150,34)" rx="2" ry="2" />
<text  x="624.50" y="1855.5" ></text>
</g>
<g >
<title>alloc_pages_vma (2 samples, 0.01%)</title><rect x="1034.2" y="1957" width="0.1" height="15.0" fill="rgb(225,23,51)" rx="2" ry="2" />
<text  x="1037.18" y="1967.5" ></text>
</g>
<g >
<title>TDocument::TDocument (14 samples, 0.07%)</title><rect x="124.2" y="1989" width="0.9" height="15.0" fill="rgb(217,198,33)" rx="2" ry="2" />
<text  x="127.25" y="1999.5" ></text>
</g>
<g >
<title>__asan::asan_delete (3 samples, 0.02%)</title><rect x="595.1" y="1877" width="0.1" height="15.0" fill="rgb(210,201,26)" rx="2" ry="2" />
<text  x="598.07" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.4" y="645" width="0.1" height="15.0" fill="rgb(244,50,25)" rx="2" ry="2" />
<text  x="1190.43" y="655.5" ></text>
</g>
<g >
<title>[unknown] (9 samples, 0.05%)</title><rect x="821.3" y="2005" width="0.5" height="15.0" fill="rgb(241,54,14)" rx="2" ry="2" />
<text  x="824.29" y="2015.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="86.4" y="1701" width="0.1" height="15.0" fill="rgb(232,87,40)" rx="2" ry="2" />
<text  x="89.39" y="1711.5" ></text>
</g>
<g >
<title>call_rwsem_down_read_failed (2 samples, 0.01%)</title><rect x="697.0" y="1781" width="0.1" height="15.0" fill="rgb(237,81,53)" rx="2" ry="2" />
<text  x="699.99" y="1791.5" ></text>
</g>
<g >
<title>page_fault (155 samples, 0.79%)</title><rect x="941.6" y="2037" width="9.3" height="15.0" fill="rgb(227,218,29)" rx="2" ry="2" />
<text  x="944.64" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1186.9" y="1509" width="0.5" height="15.0" fill="rgb(206,95,46)" rx="2" ry="2" />
<text  x="1189.95" y="1519.5" ></text>
</g>
<g >
<title>__sanitizer::BlockingMutex::Unlock (5 samples, 0.03%)</title><rect x="70.6" y="37" width="0.3" height="15.0" fill="rgb(206,219,18)" rx="2" ry="2" />
<text  x="73.59" y="47.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.6" y="69" width="0.1" height="15.0" fill="rgb(254,224,1)" rx="2" ry="2" />
<text  x="1190.61" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.6" y="1061" width="0.4" height="15.0" fill="rgb(213,16,30)" rx="2" ry="2" />
<text  x="1190.61" y="1071.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (2 samples, 0.01%)</title><rect x="54.3" y="1925" width="0.1" height="15.0" fill="rgb(227,71,19)" rx="2" ry="2" />
<text  x="57.26" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.5" y="1797" width="0.5" height="15.0" fill="rgb(234,69,5)" rx="2" ry="2" />
<text  x="1190.55" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1187.6" y="1189" width="0.4" height="15.0" fill="rgb(238,113,9)" rx="2" ry="2" />
<text  x="1190.61" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (172 samples, 0.87%)</title><rect x="163.2" y="1733" width="10.3" height="15.0" fill="rgb(221,41,50)" rx="2" ry="2" />
<text  x="166.25" y="1743.5" ></text>
</g>
<g >
<title>memcpy (4 samples, 0.02%)</title><rect x="1126.2" y="2037" width="0.2" height="15.0" fill="rgb(206,61,15)" rx="2" ry="2" />
<text  x="1129.18" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="188.9" y="1653" width="0.1" height="15.0" fill="rgb(207,56,51)" rx="2" ry="2" />
<text  x="191.91" y="1663.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (2 samples, 0.01%)</title><rect x="146.5" y="1605" width="0.1" height="15.0" fill="rgb(217,17,35)" rx="2" ry="2" />
<text  x="149.50" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (77 samples, 0.39%)</title><rect x="177.8" y="1749" width="4.7" height="15.0" fill="rgb(231,57,12)" rx="2" ry="2" />
<text  x="180.85" y="1759.5" ></text>
</g>
<g >
<title>__split_vma (2 samples, 0.01%)</title><rect x="1103.4" y="1909" width="0.2" height="15.0" fill="rgb(215,166,19)" rx="2" ry="2" />
<text  x="1106.45" y="1919.5" ></text>
</g>
<g >
<title>handle_mm_fault (3 samples, 0.02%)</title><rect x="1189.4" y="1973" width="0.2" height="15.0" fill="rgb(237,17,2)" rx="2" ry="2" />
<text  x="1192.40" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.4" y="885" width="0.1" height="15.0" fill="rgb(221,39,51)" rx="2" ry="2" />
<text  x="1190.43" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.4" y="1157" width="0.1" height="15.0" fill="rgb(246,151,33)" rx="2" ry="2" />
<text  x="1190.43" y="1167.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (3 samples, 0.02%)</title><rect x="1105.1" y="1845" width="0.2" height="15.0" fill="rgb(213,174,16)" rx="2" ry="2" />
<text  x="1108.12" y="1855.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::json_value::destroy (4 samples, 0.02%)</title><rect x="520.2" y="1989" width="0.3" height="15.0" fill="rgb(238,63,53)" rx="2" ry="2" />
<text  x="523.23" y="1999.5" ></text>
</g>
<g >
<title>vfs_read (2 samples, 0.01%)</title><rect x="1113.7" y="1957" width="0.2" height="15.0" fill="rgb(250,83,2)" rx="2" ry="2" />
<text  x="1116.73" y="1967.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::create&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (2 samples, 0.01%)</title><rect x="520.7" y="1973" width="0.1" height="15.0" fill="rgb(228,123,18)" rx="2" ry="2" />
<text  x="523.65" y="1983.5" ></text>
</g>
<g >
<title>__sanitizer::internal_munmap (2 samples, 0.01%)</title><rect x="89.7" y="1909" width="0.2" height="15.0" fill="rgb(230,78,0)" rx="2" ry="2" />
<text  x="92.74" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (359 samples, 1.82%)</title><rect x="55.3" y="725" width="21.5" height="15.0" fill="rgb(216,213,39)" rx="2" ry="2" />
<text  x="58.28" y="735.5" >[..</text>
</g>
<g >
<title>operator delete (6 samples, 0.03%)</title><rect x="154.5" y="1637" width="0.3" height="15.0" fill="rgb(217,48,33)" rx="2" ry="2" />
<text  x="157.46" y="1647.5" ></text>
</g>
<g >
<title>do_page_fault (155 samples, 0.79%)</title><rect x="941.6" y="2021" width="9.3" height="15.0" fill="rgb(205,149,18)" rx="2" ry="2" />
<text  x="944.64" y="2031.5" ></text>
</g>
<g >
<title>smp_call_function_many (25 samples, 0.13%)</title><rect x="949.2" y="1845" width="1.5" height="15.0" fill="rgb(233,55,12)" rx="2" ry="2" />
<text  x="952.24" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="188.9" y="1317" width="0.1" height="15.0" fill="rgb(238,130,33)" rx="2" ry="2" />
<text  x="191.91" y="1327.5" ></text>
</g>
<g >
<title>handle_mm_fault (63 samples, 0.32%)</title><rect x="24.2" y="1989" width="3.7" height="15.0" fill="rgb(234,113,45)" rx="2" ry="2" />
<text  x="27.18" y="1999.5" ></text>
</g>
<g >
<title>fasttext::FastText::predictLine (222 samples, 1.13%)</title><rect x="529.1" y="1941" width="13.3" height="15.0" fill="rgb(210,213,29)" rx="2" ry="2" />
<text  x="532.15" y="1951.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (3 samples, 0.02%)</title><rect x="200.1" y="1621" width="0.2" height="15.0" fill="rgb(220,52,54)" rx="2" ry="2" />
<text  x="203.10" y="1631.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (2 samples, 0.01%)</title><rect x="1103.7" y="1797" width="0.2" height="15.0" fill="rgb(240,94,38)" rx="2" ry="2" />
<text  x="1106.74" y="1807.5" ></text>
</g>
<g >
<title>__interceptor_memcpy (3 samples, 0.02%)</title><rect x="1125.3" y="2037" width="0.2" height="15.0" fill="rgb(245,113,34)" rx="2" ry="2" />
<text  x="1128.34" y="2047.5" ></text>
</g>
<g >
<title>flush_tlb_mm_range (2 samples, 0.01%)</title><rect x="525.0" y="1909" width="0.1" height="15.0" fill="rgb(246,82,13)" rx="2" ry="2" />
<text  x="528.02" y="1919.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.01%)</title><rect x="135.1" y="1589" width="0.1" height="15.0" fill="rgb(245,157,45)" rx="2" ry="2" />
<text  x="138.08" y="1599.5" ></text>
</g>
<g >
<title>onmt::Tokenizer::tokenize (3,051 samples, 15.47%)</title><rect x="574.4" y="1925" width="182.5" height="15.0" fill="rgb(219,91,2)" rx="2" ry="2" />
<text  x="577.43" y="1935.5" >onmt::Tokenizer::tokenize</text>
</g>
<g >
<title>operator new (2 samples, 0.01%)</title><rect x="142.5" y="1589" width="0.1" height="15.0" fill="rgb(223,81,16)" rx="2" ry="2" />
<text  x="145.49" y="1599.5" ></text>
</g>
<g >
<title>fasttext::Loss::findKBest (2 samples, 0.01%)</title><rect x="1106.1" y="2037" width="0.1" height="15.0" fill="rgb(207,161,5)" rx="2" ry="2" />
<text  x="1109.08" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.6" y="165" width="0.1" height="15.0" fill="rgb(215,219,2)" rx="2" ry="2" />
<text  x="1190.61" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="188.9" y="1301" width="0.1" height="15.0" fill="rgb(237,19,9)" rx="2" ry="2" />
<text  x="191.91" y="1311.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::Recycle (2 samples, 0.01%)</title><rect x="759.0" y="2037" width="0.1" height="15.0" fill="rgb(219,144,20)" rx="2" ry="2" />
<text  x="762.02" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="188.9" y="1701" width="0.1" height="15.0" fill="rgb(254,89,20)" rx="2" ry="2" />
<text  x="191.91" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (341 samples, 1.73%)</title><rect x="55.3" y="181" width="20.4" height="15.0" fill="rgb(205,196,18)" rx="2" ry="2" />
<text  x="58.28" y="191.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (2 samples, 0.01%)</title><rect x="124.7" y="1861" width="0.1" height="15.0" fill="rgb(205,182,40)" rx="2" ry="2" />
<text  x="127.67" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (2 samples, 0.01%)</title><rect x="195.4" y="1637" width="0.1" height="15.0" fill="rgb(220,59,48)" rx="2" ry="2" />
<text  x="198.37" y="1647.5" ></text>
</g>
<g >
<title>handle_mm_fault (32 samples, 0.16%)</title><rect x="512.8" y="1909" width="1.9" height="15.0" fill="rgb(206,202,12)" rx="2" ry="2" />
<text  x="515.76" y="1919.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="161.8" y="1781" width="0.1" height="15.0" fill="rgb(209,223,45)" rx="2" ry="2" />
<text  x="164.75" y="1791.5" ></text>
</g>
<g >
<title>__vm_munmap (2 samples, 0.01%)</title><rect x="83.4" y="1445" width="0.1" height="15.0" fill="rgb(215,91,11)" rx="2" ry="2" />
<text  x="86.39" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1187.6" y="997" width="0.4" height="15.0" fill="rgb(251,172,41)" rx="2" ry="2" />
<text  x="1190.61" y="1007.5" ></text>
</g>
<g >
<title>try_to_wake_up (12 samples, 0.06%)</title><rect x="29.3" y="1893" width="0.7" height="15.0" fill="rgb(227,214,44)" rx="2" ry="2" />
<text  x="32.26" y="1903.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (2 samples, 0.01%)</title><rect x="84.7" y="1621" width="0.1" height="15.0" fill="rgb(241,227,28)" rx="2" ry="2" />
<text  x="87.71" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (458 samples, 2.32%)</title><rect x="55.3" y="1445" width="27.4" height="15.0" fill="rgb(239,161,52)" rx="2" ry="2" />
<text  x="58.28" y="1455.5" >[..</text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (3 samples, 0.02%)</title><rect x="171.4" y="1573" width="0.2" height="15.0" fill="rgb(238,215,12)" rx="2" ry="2" />
<text  x="174.38" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.6" y="725" width="0.4" height="15.0" fill="rgb(229,227,47)" rx="2" ry="2" />
<text  x="1190.61" y="735.5" ></text>
</g>
<g >
<title>[unknown] (369 samples, 1.87%)</title><rect x="55.3" y="1125" width="22.1" height="15.0" fill="rgb(249,64,52)" rx="2" ry="2" />
<text  x="58.28" y="1135.5" >[..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (65 samples, 0.33%)</title><rect x="173.7" y="1669" width="3.9" height="15.0" fill="rgb(234,218,25)" rx="2" ry="2" />
<text  x="176.72" y="1679.5" ></text>
</g>
<g >
<title>fasttext::Matrix::size (9 samples, 0.05%)</title><rect x="771.2" y="2037" width="0.5" height="15.0" fill="rgb(211,69,21)" rx="2" ry="2" />
<text  x="774.16" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="878.2" y="2021" width="0.2" height="15.0" fill="rgb(220,136,32)" rx="2" ry="2" />
<text  x="881.24" y="2031.5" ></text>
</g>
<g >
<title>__sanitizer_weak_hook_strcmp (2 samples, 0.01%)</title><rect x="43.3" y="2021" width="0.1" height="15.0" fill="rgb(247,172,45)" rx="2" ry="2" />
<text  x="46.32" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1187.4" y="1749" width="0.1" height="15.0" fill="rgb(213,80,21)" rx="2" ry="2" />
<text  x="1190.37" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1186.9" y="485" width="0.5" height="15.0" fill="rgb(207,69,36)" rx="2" ry="2" />
<text  x="1189.95" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="162.3" y="1717" width="0.2" height="15.0" fill="rgb(214,115,5)" rx="2" ry="2" />
<text  x="165.29" y="1727.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&gt;::PopulateFreeArray (2 samples, 0.01%)</title><rect x="1032.3" y="2053" width="0.1" height="15.0" fill="rgb(253,78,51)" rx="2" ry="2" />
<text  x="1035.32" y="2063.5" ></text>
</g>
<g >
<title>nlohmann::detail::input_stream_adapter::get_character (5 samples, 0.03%)</title><rect x="132.9" y="1893" width="0.3" height="15.0" fill="rgb(253,144,43)" rx="2" ry="2" />
<text  x="135.86" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="218.2" y="1429" width="0.3" height="15.0" fill="rgb(234,95,13)" rx="2" ry="2" />
<text  x="221.22" y="1439.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::emplace_back&lt;char const*&amp;, unsigned int&amp;&gt; (125 samples, 0.63%)</title><rect x="611.2" y="1861" width="7.5" height="15.0" fill="rgb(238,16,38)" rx="2" ry="2" />
<text  x="614.22" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1187.0" y="149" width="0.4" height="15.0" fill="rgb(238,26,13)" rx="2" ry="2" />
<text  x="1190.01" y="159.5" ></text>
</g>
<g >
<title>alloc_pages_vma (18 samples, 0.09%)</title><rect x="512.9" y="1877" width="1.1" height="15.0" fill="rgb(225,102,36)" rx="2" ry="2" />
<text  x="515.94" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.6" y="405" width="0.4" height="15.0" fill="rgb(217,55,16)" rx="2" ry="2" />
<text  x="1190.61" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::basic_regex&lt;char const*&gt; (428 samples, 2.17%)</title><rect x="163.0" y="1941" width="25.6" height="15.0" fill="rgb(219,131,26)" rx="2" ry="2" />
<text  x="166.01" y="1951.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.05%)</title><rect x="1186.8" y="2037" width="0.6" height="15.0" fill="rgb(217,197,45)" rx="2" ry="2" />
<text  x="1189.83" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (24 samples, 0.12%)</title><rect x="879.1" y="2021" width="1.4" height="15.0" fill="rgb(205,97,36)" rx="2" ry="2" />
<text  x="882.07" y="2031.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::Unwind (3 samples, 0.02%)</title><rect x="198.4" y="1589" width="0.1" height="15.0" fill="rgb(243,70,36)" rx="2" ry="2" />
<text  x="201.36" y="1599.5" ></text>
</g>
<g >
<title>__vfs_read (2 samples, 0.01%)</title><rect x="1113.7" y="1941" width="0.2" height="15.0" fill="rgb(207,99,6)" rx="2" ry="2" />
<text  x="1116.73" y="1951.5" ></text>
</g>
<g >
<title>unmap_vmas (4 samples, 0.02%)</title><rect x="768.5" y="1925" width="0.2" height="15.0" fill="rgb(250,95,33)" rx="2" ry="2" />
<text  x="771.47" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.4" y="2005" width="0.1" height="15.0" fill="rgb(228,54,4)" rx="2" ry="2" />
<text  x="1190.37" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="162.5" y="1397" width="0.3" height="15.0" fill="rgb(218,70,11)" rx="2" ry="2" />
<text  x="165.53" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.4" y="869" width="0.1" height="15.0" fill="rgb(236,145,33)" rx="2" ry="2" />
<text  x="1190.43" y="879.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (4 samples, 0.02%)</title><rect x="88.0" y="1829" width="0.2" height="15.0" fill="rgb(221,77,5)" rx="2" ry="2" />
<text  x="91.00" y="1839.5" ></text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (2 samples, 0.01%)</title><rect x="514.0" y="1877" width="0.1" height="15.0" fill="rgb(211,44,9)" rx="2" ry="2" />
<text  x="517.01" y="1887.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (2 samples, 0.01%)</title><rect x="209.8" y="1637" width="0.1" height="15.0" fill="rgb(224,213,29)" rx="2" ry="2" />
<text  x="212.79" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (85 samples, 0.43%)</title><rect x="168.4" y="1669" width="5.1" height="15.0" fill="rgb(210,106,12)" rx="2" ry="2" />
<text  x="171.39" y="1679.5" ></text>
</g>
<g >
<title>free_unref_page_list (2 samples, 0.01%)</title><rect x="91.3" y="1765" width="0.1" height="15.0" fill="rgb(211,36,11)" rx="2" ry="2" />
<text  x="94.29" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1186.9" y="869" width="0.5" height="15.0" fill="rgb(239,55,42)" rx="2" ry="2" />
<text  x="1189.95" y="879.5" ></text>
</g>
<g >
<title>[unknown] (12 samples, 0.06%)</title><rect x="815.6" y="2021" width="0.7" height="15.0" fill="rgb(251,80,5)" rx="2" ry="2" />
<text  x="818.61" y="2031.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="514.7" y="1957" width="0.2" height="15.0" fill="rgb(214,136,34)" rx="2" ry="2" />
<text  x="517.73" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.4" y="1957" width="0.1" height="15.0" fill="rgb(214,97,49)" rx="2" ry="2" />
<text  x="1190.37" y="1967.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (2 samples, 0.01%)</title><rect x="185.7" y="1653" width="0.1" height="15.0" fill="rgb(228,35,50)" rx="2" ry="2" />
<text  x="188.68" y="1663.5" ></text>
</g>
<g >
<title>__x64_sys_madvise (2 samples, 0.01%)</title><rect x="94.3" y="1973" width="0.1" height="15.0" fill="rgb(236,192,40)" rx="2" ry="2" />
<text  x="97.28" y="1983.5" ></text>
</g>
<g >
<title>Eigen::internal::general_matrix_vector_product&lt;long, float, Eigen::internal::const_blas_data_mapper&lt;float, long, 1&gt;, 1, false, float, Eigen::internal::const_blas_data_mapper&lt;float, long, 0&gt;, false, 0&gt;::run (331 samples, 1.68%)</title><rect x="385.9" y="1925" width="19.8" height="15.0" fill="rgb(240,5,23)" rx="2" ry="2" />
<text  x="388.95" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1186.9" y="1413" width="0.5" height="15.0" fill="rgb(208,8,44)" rx="2" ry="2" />
<text  x="1189.95" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.4" y="773" width="0.1" height="15.0" fill="rgb(244,216,23)" rx="2" ry="2" />
<text  x="1190.43" y="783.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (2 samples, 0.01%)</title><rect x="77.6" y="1141" width="0.1" height="15.0" fill="rgb(242,180,44)" rx="2" ry="2" />
<text  x="80.59" y="1151.5" ></text>
</g>
<g >
<title>do_page_fault (21 samples, 0.11%)</title><rect x="54.0" y="2005" width="1.2" height="15.0" fill="rgb(240,199,48)" rx="2" ry="2" />
<text  x="56.97" y="2015.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (4 samples, 0.02%)</title><rect x="175.5" y="1589" width="0.3" height="15.0" fill="rgb(240,156,48)" rx="2" ry="2" />
<text  x="178.51" y="1599.5" ></text>
</g>
<g >
<title>__dynamic_cast (7 samples, 0.04%)</title><rect x="168.6" y="1605" width="0.5" height="15.0" fill="rgb(241,139,16)" rx="2" ry="2" />
<text  x="171.63" y="1615.5" ></text>
</g>
<g >
<title>sqrtf32 (3 samples, 0.02%)</title><rect x="518.6" y="1973" width="0.1" height="15.0" fill="rgb(249,218,18)" rx="2" ry="2" />
<text  x="521.56" y="1983.5" ></text>
</g>
<g >
<title>__asan_memcpy (10 samples, 0.05%)</title><rect x="595.2" y="1877" width="0.6" height="15.0" fill="rgb(242,165,26)" rx="2" ry="2" />
<text  x="598.24" y="1887.5" ></text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.02%)</title><rect x="145.8" y="1621" width="0.2" height="15.0" fill="rgb(249,131,32)" rx="2" ry="2" />
<text  x="148.78" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.4" y="1557" width="0.1" height="15.0" fill="rgb(231,186,23)" rx="2" ry="2" />
<text  x="1190.43" y="1567.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThreadStats (30 samples, 0.15%)</title><rect x="119.2" y="2037" width="1.8" height="15.0" fill="rgb(214,15,26)" rx="2" ry="2" />
<text  x="122.17" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (69 samples, 0.35%)</title><rect x="173.7" y="1749" width="4.1" height="15.0" fill="rgb(243,58,39)" rx="2" ry="2" />
<text  x="176.66" y="1759.5" ></text>
</g>
<g >
<title>__dynamic_cast (4 samples, 0.02%)</title><rect x="153.7" y="1637" width="0.2" height="15.0" fill="rgb(231,6,7)" rx="2" ry="2" />
<text  x="156.68" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.4" y="1173" width="0.1" height="15.0" fill="rgb(247,220,12)" rx="2" ry="2" />
<text  x="1190.43" y="1183.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::_M_transform@plt (5 samples, 0.03%)</title><rect x="1151.1" y="2053" width="0.3" height="15.0" fill="rgb(219,128,8)" rx="2" ry="2" />
<text  x="1154.06" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (97 samples, 0.49%)</title><rect x="144.3" y="1733" width="5.8" height="15.0" fill="rgb(217,29,36)" rx="2" ry="2" />
<text  x="147.29" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="218.2" y="1525" width="0.3" height="15.0" fill="rgb(239,14,38)" rx="2" ry="2" />
<text  x="221.22" y="1535.5" ></text>
</g>
<g >
<title>free_unref_page_list (3 samples, 0.02%)</title><rect x="1105.3" y="1845" width="0.2" height="15.0" fill="rgb(252,145,10)" rx="2" ry="2" />
<text  x="1108.30" y="1855.5" ></text>
</g>
<g >
<title>mem_cgroup_throttle_swaprate (8 samples, 0.04%)</title><rect x="26.8" y="1941" width="0.5" height="15.0" fill="rgb(237,184,8)" rx="2" ry="2" />
<text  x="29.81" y="1951.5" ></text>
</g>
<g >
<title>__asan::AsanTSDGet (3 samples, 0.02%)</title><rect x="593.4" y="1877" width="0.2" height="15.0" fill="rgb(241,21,33)" rx="2" ry="2" />
<text  x="596.39" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.4" y="661" width="0.1" height="15.0" fill="rgb(230,52,18)" rx="2" ry="2" />
<text  x="1190.43" y="671.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (4 samples, 0.02%)</title><rect x="683.2" y="1749" width="0.3" height="15.0" fill="rgb(228,29,22)" rx="2" ry="2" />
<text  x="686.23" y="1759.5" ></text>
</g>
<g >
<title>nlohmann::detail::parser&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::parse (135 samples, 0.68%)</title><rect x="125.3" y="1973" width="8.1" height="15.0" fill="rgb(212,147,49)" rx="2" ry="2" />
<text  x="128.33" y="1983.5" ></text>
</g>
<g >
<title>__madvise (3 samples, 0.02%)</title><rect x="1013.4" y="2053" width="0.1" height="15.0" fill="rgb(223,45,28)" rx="2" ry="2" />
<text  x="1016.36" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.02%)</title><rect x="1187.7" y="85" width="0.3" height="15.0" fill="rgb(212,186,9)" rx="2" ry="2" />
<text  x="1190.73" y="95.5" ></text>
</g>
<g >
<title>__vm_munmap (2 samples, 0.01%)</title><rect x="89.7" y="1845" width="0.2" height="15.0" fill="rgb(225,102,4)" rx="2" ry="2" />
<text  x="92.74" y="1855.5" ></text>
</g>
<g >
<title>mmap_region (11 samples, 0.06%)</title><rect x="767.7" y="1925" width="0.7" height="15.0" fill="rgb(254,146,14)" rx="2" ry="2" />
<text  x="770.70" y="1935.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (899 samples, 4.56%)</title><rect x="822.5" y="2037" width="53.8" height="15.0" fill="rgb(206,95,30)" rx="2" ry="2" />
<text  x="825.49" y="2047.5" >std::..</text>
</g>
<g >
<title>__x64_sys_madvise (11 samples, 0.06%)</title><rect x="525.0" y="1989" width="0.6" height="15.0" fill="rgb(253,161,51)" rx="2" ry="2" />
<text  x="527.96" y="1999.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::addSubwords (25 samples, 0.13%)</title><rect x="540.3" y="1909" width="1.5" height="15.0" fill="rgb(221,43,31)" rx="2" ry="2" />
<text  x="543.33" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="162.5" y="1589" width="0.3" height="15.0" fill="rgb(210,9,34)" rx="2" ry="2" />
<text  x="165.53" y="1599.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;std::__detail::_State&lt;char&gt; const*, std::__detail::_State&lt;char&gt;*&gt; (3 samples, 0.02%)</title><rect x="134.7" y="1653" width="0.2" height="15.0" fill="rgb(250,196,31)" rx="2" ry="2" />
<text  x="137.72" y="1663.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::push_back (2 samples, 0.01%)</title><rect x="878.2" y="2037" width="0.2" height="15.0" fill="rgb(253,99,30)" rx="2" ry="2" />
<text  x="881.24" y="2047.5" ></text>
</g>
<g >
<title>unmap_page_range (2 samples, 0.01%)</title><rect x="1104.0" y="1861" width="0.2" height="15.0" fill="rgb(237,21,16)" rx="2" ry="2" />
<text  x="1107.04" y="1871.5" ></text>
</g>
<g >
<title>__sanitizer::LargeMmapAllocator&lt;__asan::AsanMapUnmapCallback, __sanitizer::LargeMmapAllocatorPtrArrayDynamic&gt;::Allocate (6 samples, 0.03%)</title><rect x="1030.1" y="2053" width="0.3" height="15.0" fill="rgb(254,172,43)" rx="2" ry="2" />
<text  x="1033.05" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (3 samples, 0.02%)</title><rect x="188.3" y="1893" width="0.2" height="15.0" fill="rgb(249,208,48)" rx="2" ry="2" />
<text  x="191.31" y="1903.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (56 samples, 0.28%)</title><rect x="152.0" y="1653" width="3.4" height="15.0" fill="rgb(209,130,12)" rx="2" ry="2" />
<text  x="155.00" y="1663.5" ></text>
</g>
<g >
<title>__madvise (2 samples, 0.01%)</title><rect x="94.3" y="2021" width="0.1" height="15.0" fill="rgb(220,31,18)" rx="2" ry="2" />
<text  x="97.28" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (498 samples, 2.52%)</title><rect x="55.3" y="1653" width="29.8" height="15.0" fill="rgb(219,197,3)" rx="2" ry="2" />
<text  x="58.28" y="1663.5" >[u..</text>
</g>
<g >
<title>std::vector&lt;TWeightedNewsCluster, std::allocator&lt;TWeightedNewsCluster&gt; &gt;::push_back (2 samples, 0.01%)</title><rect x="189.6" y="1989" width="0.1" height="15.0" fill="rgb(206,216,48)" rx="2" ry="2" />
<text  x="192.63" y="1999.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (3 samples, 0.02%)</title><rect x="757.0" y="1941" width="0.2" height="15.0" fill="rgb(233,168,46)" rx="2" ry="2" />
<text  x="760.05" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (70 samples, 0.35%)</title><rect x="207.2" y="1669" width="4.2" height="15.0" fill="rgb(232,220,1)" rx="2" ry="2" />
<text  x="210.21" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (12 samples, 0.06%)</title><rect x="161.3" y="1893" width="0.7" height="15.0" fill="rgb(225,139,29)" rx="2" ry="2" />
<text  x="164.28" y="1903.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&gt;::GetFromAllocator (20 samples, 0.10%)</title><rect x="765.8" y="2037" width="1.2" height="15.0" fill="rgb(212,143,0)" rx="2" ry="2" />
<text  x="768.78" y="2047.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (3 samples, 0.02%)</title><rect x="192.7" y="1557" width="0.2" height="15.0" fill="rgb(211,56,0)" rx="2" ry="2" />
<text  x="195.68" y="1567.5" ></text>
</g>
<g >
<title>fasttext::FastText::createLoss (11 samples, 0.06%)</title><rect x="519.5" y="1973" width="0.7" height="15.0" fill="rgb(226,198,22)" rx="2" ry="2" />
<text  x="522.52" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (2 samples, 0.01%)</title><rect x="217.8" y="1829" width="0.1" height="15.0" fill="rgb(212,171,40)" rx="2" ry="2" />
<text  x="220.80" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="188.9" y="1765" width="0.2" height="15.0" fill="rgb(234,179,39)" rx="2" ry="2" />
<text  x="191.91" y="1775.5" ></text>
</g>
<g >
<title>__pthread_getspecific (2 samples, 0.01%)</title><rect x="521.5" y="1973" width="0.1" height="15.0" fill="rgb(220,197,6)" rx="2" ry="2" />
<text  x="524.49" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (411 samples, 2.08%)</title><rect x="163.2" y="1877" width="24.6" height="15.0" fill="rgb(228,89,22)" rx="2" ry="2" />
<text  x="166.19" y="1887.5" >s..</text>
</g>
<g >
<title>memcmp@plt (4 samples, 0.02%)</title><rect x="1113.0" y="2053" width="0.2" height="15.0" fill="rgb(211,30,19)" rx="2" ry="2" />
<text  x="1115.96" y="2063.5" ></text>
</g>
<g >
<title>do_group_exit (7 samples, 0.04%)</title><rect x="1105.1" y="2005" width="0.4" height="15.0" fill="rgb(235,2,24)" rx="2" ry="2" />
<text  x="1108.06" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1187.5" y="1957" width="0.5" height="15.0" fill="rgb(234,204,53)" rx="2" ry="2" />
<text  x="1190.55" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (348 samples, 1.76%)</title><rect x="55.3" y="341" width="20.8" height="15.0" fill="rgb(237,112,12)" rx="2" ry="2" />
<text  x="58.28" y="351.5" ></text>
</g>
<g >
<title>fasttext::FastText::loadModel (11 samples, 0.06%)</title><rect x="519.5" y="1989" width="0.7" height="15.0" fill="rgb(209,102,50)" rx="2" ry="2" />
<text  x="522.52" y="1999.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::computeSubwords (431 samples, 2.18%)</title><rect x="545.8" y="1893" width="25.8" height="15.0" fill="rgb(236,87,19)" rx="2" ry="2" />
<text  x="548.84" y="1903.5" >f..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1186.9" y="533" width="0.5" height="15.0" fill="rgb(243,148,26)" rx="2" ry="2" />
<text  x="1189.95" y="543.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&gt;::ReleaseFreeMemoryToOS&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&gt;::MemoryMapper&gt; (20 samples, 0.10%)</title><rect x="1032.4" y="2053" width="1.2" height="15.0" fill="rgb(213,3,11)" rx="2" ry="2" />
<text  x="1035.44" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="218.2" y="1861" width="0.3" height="15.0" fill="rgb(218,67,28)" rx="2" ry="2" />
<text  x="221.22" y="1871.5" ></text>
</g>
<g >
<title>unmap_region (2 samples, 0.01%)</title><rect x="91.3" y="1877" width="0.1" height="15.0" fill="rgb(238,160,3)" rx="2" ry="2" />
<text  x="94.29" y="1887.5" ></text>
</g>
<g >
<title>Eigen::internal::general_matrix_matrix_product&lt;long, float, 0, false, float, 1, false, 0, 1&gt;::run (133 samples, 0.67%)</title><rect x="504.6" y="1925" width="8.0" height="15.0" fill="rgb(248,186,29)" rx="2" ry="2" />
<text  x="507.62" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (3 samples, 0.02%)</title><rect x="155.7" y="1797" width="0.1" height="15.0" fill="rgb(245,130,45)" rx="2" ry="2" />
<text  x="158.65" y="1807.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (3 samples, 0.02%)</title><rect x="208.5" y="1637" width="0.2" height="15.0" fill="rgb(211,99,27)" rx="2" ry="2" />
<text  x="211.53" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.6" y="981" width="0.4" height="15.0" fill="rgb(231,40,15)" rx="2" ry="2" />
<text  x="1190.61" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (73 samples, 0.37%)</title><rect x="164.0" y="1669" width="4.4" height="15.0" fill="rgb(209,153,22)" rx="2" ry="2" />
<text  x="167.03" y="1679.5" ></text>
</g>
<g >
<title>arch_tlb_finish_mmu (2 samples, 0.01%)</title><rect x="768.4" y="1909" width="0.1" height="15.0" fill="rgb(228,56,16)" rx="2" ry="2" />
<text  x="771.35" y="1919.5" ></text>
</g>
<g >
<title>__do_page_fault (11 samples, 0.06%)</title><rect x="764.5" y="1989" width="0.6" height="15.0" fill="rgb(216,98,23)" rx="2" ry="2" />
<text  x="767.47" y="1999.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (2 samples, 0.01%)</title><rect x="137.8" y="1557" width="0.1" height="15.0" fill="rgb(207,190,31)" rx="2" ry="2" />
<text  x="140.77" y="1567.5" ></text>
</g>
<g >
<title>fasttext::DenseMatrix::addRowToVector (1,273 samples, 6.45%)</title><rect x="406.3" y="1957" width="76.1" height="15.0" fill="rgb(235,124,48)" rx="2" ry="2" />
<text  x="409.28" y="1967.5" >fasttext..</text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.02%)</title><rect x="166.4" y="1541" width="0.1" height="15.0" fill="rgb(222,11,34)" rx="2" ry="2" />
<text  x="169.36" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.6" y="629" width="0.4" height="15.0" fill="rgb(236,212,27)" rx="2" ry="2" />
<text  x="1190.61" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.6" y="677" width="0.4" height="15.0" fill="rgb(221,137,26)" rx="2" ry="2" />
<text  x="1190.61" y="687.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::load (18 samples, 0.09%)</title><rect x="876.9" y="1989" width="1.1" height="15.0" fill="rgb(205,35,13)" rx="2" ry="2" />
<text  x="879.92" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="218.3" y="1253" width="0.2" height="15.0" fill="rgb(232,46,50)" rx="2" ry="2" />
<text  x="221.34" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.4" y="261" width="0.1" height="15.0" fill="rgb(236,138,41)" rx="2" ry="2" />
<text  x="1190.43" y="271.5" ></text>
</g>
<g >
<title>[tgnews] (235 samples, 1.19%)</title><rect x="30.0" y="2053" width="14.1" height="15.0" fill="rgb(249,53,46)" rx="2" ry="2" />
<text  x="33.04" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.4" y="85" width="0.1" height="15.0" fill="rgb(205,72,27)" rx="2" ry="2" />
<text  x="1190.43" y="95.5" ></text>
</g>
<g >
<title>__dynamic_cast (43 samples, 0.22%)</title><rect x="1007.1" y="2053" width="2.6" height="15.0" fill="rgb(230,95,23)" rx="2" ry="2" />
<text  x="1010.14" y="2063.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (2 samples, 0.01%)</title><rect x="655.6" y="1781" width="0.1" height="15.0" fill="rgb(211,206,18)" rx="2" ry="2" />
<text  x="658.60" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (69 samples, 0.35%)</title><rect x="173.7" y="1717" width="4.1" height="15.0" fill="rgb(243,76,1)" rx="2" ry="2" />
<text  x="176.66" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.5" y="1749" width="0.5" height="15.0" fill="rgb(238,5,7)" rx="2" ry="2" />
<text  x="1190.55" y="1759.5" ></text>
</g>
<g >
<title>do_syscall_64 (12 samples, 0.06%)</title><rect x="767.6" y="2005" width="0.8" height="15.0" fill="rgb(225,140,54)" rx="2" ry="2" />
<text  x="770.64" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (526 samples, 2.67%)</title><rect x="55.3" y="1765" width="31.4" height="15.0" fill="rgb(241,78,10)" rx="2" ry="2" />
<text  x="58.28" y="1775.5" >[u..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="1187.7" y="117" width="0.3" height="15.0" fill="rgb(213,188,33)" rx="2" ry="2" />
<text  x="1190.73" y="127.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (60 samples, 0.30%)</title><rect x="1122.9" y="2053" width="3.6" height="15.0" fill="rgb(253,199,3)" rx="2" ry="2" />
<text  x="1125.89" y="2063.5" ></text>
</g>
<g >
<title>zap_page_range (2 samples, 0.01%)</title><rect x="88.4" y="1781" width="0.1" height="15.0" fill="rgb(206,176,54)" rx="2" ry="2" />
<text  x="91.42" y="1791.5" ></text>
</g>
<g >
<title>onmt::unicode::is_separator (2 samples, 0.01%)</title><rect x="737.2" y="1893" width="0.2" height="15.0" fill="rgb(252,90,10)" rx="2" ry="2" />
<text  x="740.25" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (52 samples, 0.26%)</title><rect x="810.2" y="2021" width="3.1" height="15.0" fill="rgb(220,55,16)" rx="2" ry="2" />
<text  x="813.23" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1186.9" y="1173" width="0.5" height="15.0" fill="rgb(213,66,37)" rx="2" ry="2" />
<text  x="1189.95" y="1183.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (7 samples, 0.04%)</title><rect x="876.4" y="2005" width="0.5" height="15.0" fill="rgb(246,48,18)" rx="2" ry="2" />
<text  x="879.44" y="2015.5" ></text>
</g>
<g >
<title>do_syscall_64 (25 samples, 0.13%)</title><rect x="1103.1" y="2021" width="1.5" height="15.0" fill="rgb(218,29,53)" rx="2" ry="2" />
<text  x="1106.09" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (65 samples, 0.33%)</title><rect x="173.7" y="1685" width="3.9" height="15.0" fill="rgb(206,155,34)" rx="2" ry="2" />
<text  x="176.72" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="162.5" y="1637" width="0.3" height="15.0" fill="rgb(227,208,35)" rx="2" ry="2" />
<text  x="165.53" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.4" y="917" width="0.1" height="15.0" fill="rgb(239,157,8)" rx="2" ry="2" />
<text  x="1190.43" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1187.5" y="2005" width="0.5" height="15.0" fill="rgb(225,95,51)" rx="2" ry="2" />
<text  x="1190.55" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (361 samples, 1.83%)</title><rect x="55.3" y="917" width="21.6" height="15.0" fill="rgb(224,29,52)" rx="2" ry="2" />
<text  x="58.28" y="927.5" >[..</text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (2 samples, 0.01%)</title><rect x="1188.3" y="2037" width="0.1" height="15.0" fill="rgb(252,148,2)" rx="2" ry="2" />
<text  x="1191.27" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (6 samples, 0.03%)</title><rect x="134.5" y="1685" width="0.4" height="15.0" fill="rgb(212,209,21)" rx="2" ry="2" />
<text  x="137.54" y="1695.5" ></text>
</g>
<g >
<title>__pthread_getspecific (2 samples, 0.01%)</title><rect x="204.3" y="1605" width="0.2" height="15.0" fill="rgb(229,9,50)" rx="2" ry="2" />
<text  x="207.34" y="1615.5" ></text>
</g>
<g >
<title>operator new (41 samples, 0.21%)</title><rect x="608.8" y="1861" width="2.4" height="15.0" fill="rgb(241,63,3)" rx="2" ry="2" />
<text  x="611.76" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (460 samples, 2.33%)</title><rect x="55.3" y="1477" width="27.5" height="15.0" fill="rgb(206,42,24)" rx="2" ry="2" />
<text  x="58.28" y="1487.5" >[..</text>
</g>
<g >
<title>__asan::Allocator::Deallocate (18 samples, 0.09%)</title><rect x="1154.5" y="2037" width="1.0" height="15.0" fill="rgb(205,228,51)" rx="2" ry="2" />
<text  x="1157.47" y="2047.5" ></text>
</g>
<g >
<title>fasttext::Vector::norm (32 samples, 0.16%)</title><rect x="337.2" y="1989" width="1.9" height="15.0" fill="rgb(252,92,38)" rx="2" ry="2" />
<text  x="340.20" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1187.6" y="613" width="0.4" height="15.0" fill="rgb(219,85,15)" rx="2" ry="2" />
<text  x="1190.61" y="623.5" ></text>
</g>
<g >
<title>fasttext::Vector::mul (2 samples, 0.01%)</title><rect x="498.8" y="1957" width="0.1" height="15.0" fill="rgb(212,135,53)" rx="2" ry="2" />
<text  x="501.82" y="1967.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (9 samples, 0.05%)</title><rect x="152.9" y="1637" width="0.5" height="15.0" fill="rgb(235,207,37)" rx="2" ry="2" />
<text  x="155.90" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="162.7" y="1189" width="0.1" height="15.0" fill="rgb(214,173,33)" rx="2" ry="2" />
<text  x="165.65" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (2 samples, 0.01%)</title><rect x="190.5" y="1685" width="0.1" height="15.0" fill="rgb(237,197,44)" rx="2" ry="2" />
<text  x="193.53" y="1695.5" ></text>
</g>
<g >
<title>__asan::AsanThread::stack_top (2 samples, 0.01%)</title><rect x="323.5" y="1941" width="0.1" height="15.0" fill="rgb(242,2,31)" rx="2" ry="2" />
<text  x="326.50" y="1951.5" ></text>
</g>
<g >
<title>__asan::asan_memalign (8 samples, 0.04%)</title><rect x="1165.1" y="2037" width="0.4" height="15.0" fill="rgb(206,187,22)" rx="2" ry="2" />
<text  x="1168.06" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (358 samples, 1.81%)</title><rect x="55.3" y="645" width="21.4" height="15.0" fill="rgb(219,81,22)" rx="2" ry="2" />
<text  x="58.28" y="655.5" >[..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.4" y="1365" width="0.1" height="15.0" fill="rgb(244,74,42)" rx="2" ry="2" />
<text  x="1190.43" y="1375.5" ></text>
</g>
<g >
<title>do_futex (17 samples, 0.09%)</title><rect x="29.0" y="1941" width="1.0" height="15.0" fill="rgb(241,49,49)" rx="2" ry="2" />
<text  x="31.96" y="1951.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::basic_json&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, 0&gt; (2 samples, 0.01%)</title><rect x="542.5" y="1957" width="0.2" height="15.0" fill="rgb(219,215,52)" rx="2" ry="2" />
<text  x="545.55" y="1967.5" ></text>
</g>
<g >
<title>__asan::Allocator::Deallocate (329 samples, 1.67%)</title><rect x="950.9" y="2053" width="19.7" height="15.0" fill="rgb(205,59,2)" rx="2" ry="2" />
<text  x="953.91" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.4" y="1109" width="0.1" height="15.0" fill="rgb(208,152,31)" rx="2" ry="2" />
<text  x="1190.43" y="1119.5" ></text>
</g>
<g >
<title>__pthread_getspecific (12 samples, 0.06%)</title><rect x="596.4" y="1877" width="0.7" height="15.0" fill="rgb(212,13,32)" rx="2" ry="2" />
<text  x="599.38" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (734 samples, 3.72%)</title><rect x="55.2" y="2037" width="43.9" height="15.0" fill="rgb(213,221,36)" rx="2" ry="2" />
<text  x="58.22" y="2047.5" >[unk..</text>
</g>
<g >
<title>onmt::ITokenizer::tokenize (2 samples, 0.01%)</title><rect x="813.3" y="2037" width="0.2" height="15.0" fill="rgb(245,3,27)" rx="2" ry="2" />
<text  x="816.34" y="2047.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (2 samples, 0.01%)</title><rect x="136.0" y="1557" width="0.2" height="15.0" fill="rgb(244,204,12)" rx="2" ry="2" />
<text  x="139.03" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (2 samples, 0.01%)</title><rect x="212.2" y="1765" width="0.1" height="15.0" fill="rgb(227,6,18)" rx="2" ry="2" />
<text  x="215.18" y="1775.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (111 samples, 0.56%)</title><rect x="990.6" y="2053" width="6.7" height="15.0" fill="rgb(206,52,47)" rx="2" ry="2" />
<text  x="993.63" y="2063.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (2 samples, 0.01%)</title><rect x="193.0" y="1557" width="0.1" height="15.0" fill="rgb(220,55,21)" rx="2" ry="2" />
<text  x="195.98" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="162.4" y="1461" width="0.1" height="15.0" fill="rgb(220,36,32)" rx="2" ry="2" />
<text  x="165.35" y="1471.5" ></text>
</g>
<g >
<title>__asan_memset (5 samples, 0.03%)</title><rect x="581.6" y="1893" width="0.3" height="15.0" fill="rgb(238,152,50)" rx="2" ry="2" />
<text  x="584.61" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1186.9" y="469" width="0.5" height="15.0" fill="rgb(235,207,16)" rx="2" ry="2" />
<text  x="1189.95" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="218.3" y="1173" width="0.2" height="15.0" fill="rgb(215,186,23)" rx="2" ry="2" />
<text  x="221.34" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="188.9" y="1381" width="0.1" height="15.0" fill="rgb(210,68,13)" rx="2" ry="2" />
<text  x="191.91" y="1391.5" ></text>
</g>
<g >
<title>fasttext::FastText::predictLine (490 samples, 2.48%)</title><rect x="543.0" y="1941" width="29.3" height="15.0" fill="rgb(238,33,45)" rx="2" ry="2" />
<text  x="546.02" y="1951.5" >fa..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="218.2" y="1765" width="0.3" height="15.0" fill="rgb(252,84,37)" rx="2" ry="2" />
<text  x="221.22" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="188.9" y="1541" width="0.1" height="15.0" fill="rgb(205,65,28)" rx="2" ry="2" />
<text  x="191.91" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (360 samples, 1.82%)</title><rect x="55.3" y="853" width="21.5" height="15.0" fill="rgb(224,146,16)" rx="2" ry="2" />
<text  x="58.28" y="863.5" >[..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.6" y="501" width="0.4" height="15.0" fill="rgb(226,51,8)" rx="2" ry="2" />
<text  x="1190.61" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.4" y="1813" width="0.1" height="15.0" fill="rgb(231,140,36)" rx="2" ry="2" />
<text  x="1190.37" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (50 samples, 0.25%)</title><rect x="174.3" y="1621" width="2.9" height="15.0" fill="rgb(222,102,26)" rx="2" ry="2" />
<text  x="177.26" y="1631.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (3 samples, 0.02%)</title><rect x="205.7" y="1621" width="0.2" height="15.0" fill="rgb(245,63,4)" rx="2" ry="2" />
<text  x="208.72" y="1631.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (6 samples, 0.03%)</title><rect x="186.6" y="1653" width="0.3" height="15.0" fill="rgb(226,11,14)" rx="2" ry="2" />
<text  x="189.58" y="1663.5" ></text>
</g>
<g >
<title>do_wp_page (10 samples, 0.05%)</title><rect x="54.4" y="1941" width="0.6" height="15.0" fill="rgb(241,65,45)" rx="2" ry="2" />
<text  x="57.38" y="1951.5" ></text>
</g>
<g >
<title>do_mmap (12 samples, 0.06%)</title><rect x="767.6" y="1941" width="0.8" height="15.0" fill="rgb(215,113,54)" rx="2" ry="2" />
<text  x="770.64" y="1951.5" ></text>
</g>
<g >
<title>onmt::unicode::cp_to_utf8[abi:cxx11] (7 samples, 0.04%)</title><rect x="598.7" y="1877" width="0.4" height="15.0" fill="rgb(221,134,25)" rx="2" ry="2" />
<text  x="601.65" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (75 samples, 0.38%)</title><rect x="190.6" y="1621" width="4.5" height="15.0" fill="rgb(240,40,17)" rx="2" ry="2" />
<text  x="193.65" y="1631.5" ></text>
</g>
<g >
<title>__do_page_fault (2 samples, 0.01%)</title><rect x="93.1" y="1973" width="0.1" height="15.0" fill="rgb(229,207,36)" rx="2" ry="2" />
<text  x="96.09" y="1983.5" ></text>
</g>
<g >
<title>__lsan::LsanMetadata::LsanMetadata (3 samples, 0.02%)</title><rect x="524.2" y="2037" width="0.2" height="15.0" fill="rgb(229,37,20)" rx="2" ry="2" />
<text  x="527.18" y="2047.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (3 samples, 0.02%)</title><rect x="87.4" y="1797" width="0.2" height="15.0" fill="rgb(245,23,3)" rx="2" ry="2" />
<text  x="90.40" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.5" y="1781" width="0.5" height="15.0" fill="rgb(238,105,26)" rx="2" ry="2" />
<text  x="1190.55" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (339 samples, 1.72%)</title><rect x="55.3" y="117" width="20.3" height="15.0" fill="rgb(250,93,13)" rx="2" ry="2" />
<text  x="58.28" y="127.5" ></text>
</g>
<g >
<title>handle_mm_fault (2 samples, 0.01%)</title><rect x="653.1" y="1813" width="0.2" height="15.0" fill="rgb(216,62,29)" rx="2" ry="2" />
<text  x="656.15" y="1823.5" ></text>
</g>
<g >
<title>do_page_fault (2 samples, 0.01%)</title><rect x="580.1" y="1861" width="0.1" height="15.0" fill="rgb(213,92,25)" rx="2" ry="2" />
<text  x="583.05" y="1871.5" ></text>
</g>
<g >
<title>onmt::CaseModifier::extract_case_type (52 samples, 0.26%)</title><rect x="810.2" y="2037" width="3.1" height="15.0" fill="rgb(245,177,24)" rx="2" ry="2" />
<text  x="813.23" y="2047.5" ></text>
</g>
<g >
<title>__asan::GetMallocContextSize (8 samples, 0.04%)</title><rect x="1159.7" y="2037" width="0.5" height="15.0" fill="rgb(211,18,12)" rx="2" ry="2" />
<text  x="1162.67" y="2047.5" ></text>
</g>
<g >
<title>clear_page_erms (2 samples, 0.01%)</title><rect x="764.8" y="1909" width="0.1" height="15.0" fill="rgb(215,218,48)" rx="2" ry="2" />
<text  x="767.76" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (84 samples, 0.43%)</title><rect x="206.7" y="1717" width="5.1" height="15.0" fill="rgb(240,190,28)" rx="2" ry="2" />
<text  x="209.74" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.4" y="949" width="0.1" height="15.0" fill="rgb(233,12,8)" rx="2" ry="2" />
<text  x="1190.43" y="959.5" ></text>
</g>
<g >
<title>__pthread_getspecific (4 samples, 0.02%)</title><rect x="209.5" y="1637" width="0.3" height="15.0" fill="rgb(208,200,41)" rx="2" ry="2" />
<text  x="212.55" y="1647.5" ></text>
</g>
<g >
<title>Eigen::internal::gebp_kernel&lt;float, float, long, Eigen::internal::blas_data_mapper&lt;float, long, 0, 0, 1&gt;, 8, 4, false, false&gt;::operator (133 samples, 0.67%)</title><rect x="504.6" y="1909" width="8.0" height="15.0" fill="rgb(218,115,44)" rx="2" ry="2" />
<text  x="507.62" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (461 samples, 2.34%)</title><rect x="190.4" y="1909" width="27.6" height="15.0" fill="rgb(228,123,3)" rx="2" ry="2" />
<text  x="193.41" y="1919.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.5" y="1461" width="0.5" height="15.0" fill="rgb(233,70,6)" rx="2" ry="2" />
<text  x="1190.55" y="1471.5" ></text>
</g>
<g >
<title>fasttext::Vector::zero (13 samples, 0.07%)</title><rect x="498.9" y="1957" width="0.8" height="15.0" fill="rgb(233,41,22)" rx="2" ry="2" />
<text  x="501.94" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (352 samples, 1.78%)</title><rect x="55.3" y="501" width="21.0" height="15.0" fill="rgb(205,227,42)" rx="2" ry="2" />
<text  x="58.28" y="511.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::clear (7 samples, 0.04%)</title><rect x="656.7" y="1877" width="0.4" height="15.0" fill="rgb(216,33,46)" rx="2" ry="2" />
<text  x="659.68" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (68 samples, 0.34%)</title><rect x="196.0" y="1621" width="4.1" height="15.0" fill="rgb(244,189,48)" rx="2" ry="2" />
<text  x="199.03" y="1631.5" ></text>
</g>
<g >
<title>handle_mm_fault (19 samples, 0.10%)</title><rect x="503.5" y="1877" width="1.1" height="15.0" fill="rgb(205,7,14)" rx="2" ry="2" />
<text  x="506.49" y="1887.5" ></text>
</g>
<g >
<title>std::vector&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::allocator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;::vector (4 samples, 0.02%)</title><rect x="521.8" y="1861" width="0.3" height="15.0" fill="rgb(206,74,48)" rx="2" ry="2" />
<text  x="524.85" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (2 samples, 0.01%)</title><rect x="187.7" y="1845" width="0.1" height="15.0" fill="rgb(245,16,8)" rx="2" ry="2" />
<text  x="190.65" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1186.9" y="1157" width="0.5" height="15.0" fill="rgb(212,108,8)" rx="2" ry="2" />
<text  x="1189.95" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1186.9" y="277" width="0.5" height="15.0" fill="rgb(240,162,49)" rx="2" ry="2" />
<text  x="1189.95" y="287.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.02%)</title><rect x="770.6" y="2021" width="0.1" height="15.0" fill="rgb(224,190,0)" rx="2" ry="2" />
<text  x="773.57" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="162.3" y="1733" width="0.2" height="15.0" fill="rgb(226,135,39)" rx="2" ry="2" />
<text  x="165.29" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1186.9" y="421" width="0.5" height="15.0" fill="rgb(243,23,36)" rx="2" ry="2" />
<text  x="1189.95" y="431.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::do_tolower (2 samples, 0.01%)</title><rect x="211.2" y="1653" width="0.1" height="15.0" fill="rgb(217,96,49)" rx="2" ry="2" />
<text  x="214.22" y="1663.5" ></text>
</g>
<g >
<title>std::__move_merge&lt;TDocument*, __gnu_cxx::__normal_iterator&lt;TDocument*, std::vector&lt;TDocument, std::allocator&lt;TDocument&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;main::$_1&gt; &gt; (2 samples, 0.01%)</title><rect x="522.6" y="1973" width="0.1" height="15.0" fill="rgb(245,27,34)" rx="2" ry="2" />
<text  x="525.57" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.4" y="597" width="0.1" height="15.0" fill="rgb(226,5,51)" rx="2" ry="2" />
<text  x="1190.43" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="162.5" y="1541" width="0.3" height="15.0" fill="rgb(209,121,38)" rx="2" ry="2" />
<text  x="165.53" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="218.3" y="1285" width="0.2" height="15.0" fill="rgb(233,24,18)" rx="2" ry="2" />
<text  x="221.34" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.4" y="1733" width="0.1" height="15.0" fill="rgb(217,167,21)" rx="2" ry="2" />
<text  x="1190.37" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (79 samples, 0.40%)</title><rect x="206.9" y="1685" width="4.7" height="15.0" fill="rgb(210,192,4)" rx="2" ry="2" />
<text  x="209.92" y="1695.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (3 samples, 0.02%)</title><rect x="488.8" y="1925" width="0.2" height="15.0" fill="rgb(217,33,13)" rx="2" ry="2" />
<text  x="491.83" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (91 samples, 0.46%)</title><rect x="150.2" y="1733" width="5.4" height="15.0" fill="rgb(221,182,49)" rx="2" ry="2" />
<text  x="153.15" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (482 samples, 2.44%)</title><rect x="55.3" y="1557" width="28.8" height="15.0" fill="rgb(229,82,25)" rx="2" ry="2" />
<text  x="58.28" y="1567.5" >[u..</text>
</g>
<g >
<title>__sanitizer::CombinedAllocator&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&gt;, __sanitizer::SizeClassAllocatorLocalCache&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&gt; &gt;, __sanitizer::LargeMmapAllocator&lt;__asan::AsanMapUnmapCallback, __sanitizer::LargeMmapAllocatorPtrArrayDynamic&gt; &gt;::Allocate (2 samples, 0.01%)</title><rect x="758.7" y="2037" width="0.1" height="15.0" fill="rgb(231,15,26)" rx="2" ry="2" />
<text  x="761.72" y="2047.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (3 samples, 0.02%)</title><rect x="323.3" y="1941" width="0.1" height="15.0" fill="rgb(242,85,22)" rx="2" ry="2" />
<text  x="326.26" y="1951.5" ></text>
</g>
<g >
<title>__lru_cache_add (2 samples, 0.01%)</title><rect x="697.8" y="1749" width="0.1" height="15.0" fill="rgb(220,63,22)" rx="2" ry="2" />
<text  x="700.83" y="1759.5" ></text>
</g>
<g >
<title>__do_munmap (2 samples, 0.01%)</title><rect x="81.1" y="1269" width="0.1" height="15.0" fill="rgb(229,168,14)" rx="2" ry="2" />
<text  x="84.12" y="1279.5" ></text>
</g>
<g >
<title>handle_mm_fault (16 samples, 0.08%)</title><rect x="54.2" y="1973" width="1.0" height="15.0" fill="rgb(206,153,0)" rx="2" ry="2" />
<text  x="57.20" y="1983.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (2 samples, 0.01%)</title><rect x="85.8" y="1541" width="0.2" height="15.0" fill="rgb(215,160,33)" rx="2" ry="2" />
<text  x="88.85" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (84 samples, 0.43%)</title><rect x="206.7" y="1701" width="5.1" height="15.0" fill="rgb(221,35,50)" rx="2" ry="2" />
<text  x="209.74" y="1711.5" ></text>
</g>
<g >
<title>wake_up_q (12 samples, 0.06%)</title><rect x="29.3" y="1909" width="0.7" height="15.0" fill="rgb(205,45,8)" rx="2" ry="2" />
<text  x="32.26" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (494 samples, 2.50%)</title><rect x="55.3" y="1637" width="29.5" height="15.0" fill="rgb(245,131,4)" rx="2" ry="2" />
<text  x="58.28" y="1647.5" >[u..</text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="143.7" y="1621" width="0.2" height="15.0" fill="rgb(242,9,44)" rx="2" ry="2" />
<text  x="146.75" y="1631.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (12 samples, 0.06%)</title><rect x="767.6" y="1957" width="0.8" height="15.0" fill="rgb(205,183,14)" rx="2" ry="2" />
<text  x="770.64" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (520 samples, 2.64%)</title><rect x="55.3" y="1733" width="31.1" height="15.0" fill="rgb(219,220,39)" rx="2" ry="2" />
<text  x="58.28" y="1743.5" >[u..</text>
</g>
<g >
<title>memchr@plt (4 samples, 0.02%)</title><rect x="1112.7" y="2053" width="0.3" height="15.0" fill="rgb(241,225,38)" rx="2" ry="2" />
<text  x="1115.72" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="218.2" y="1733" width="0.3" height="15.0" fill="rgb(250,28,5)" rx="2" ry="2" />
<text  x="221.22" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (99 samples, 0.50%)</title><rect x="200.6" y="1701" width="5.9" height="15.0" fill="rgb(222,38,25)" rx="2" ry="2" />
<text  x="203.58" y="1711.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (151 samples, 0.77%)</title><rect x="1132.3" y="2037" width="9.1" height="15.0" fill="rgb(253,160,43)" rx="2" ry="2" />
<text  x="1135.34" y="2047.5" ></text>
</g>
<g >
<title>on_each_cpu_mask (2 samples, 0.01%)</title><rect x="85.8" y="1477" width="0.2" height="15.0" fill="rgb(211,188,47)" rx="2" ry="2" />
<text  x="88.85" y="1487.5" ></text>
</g>
<g >
<title>__handle_mm_fault (2 samples, 0.01%)</title><rect x="124.7" y="1893" width="0.1" height="15.0" fill="rgb(231,4,29)" rx="2" ry="2" />
<text  x="127.67" y="1903.5" ></text>
</g>
<g >
<title>__asan_memmove (2 samples, 0.01%)</title><rect x="490.1" y="1925" width="0.1" height="15.0" fill="rgb(234,188,46)" rx="2" ry="2" />
<text  x="493.09" y="1935.5" ></text>
</g>
<g >
<title>do_page_fault (6 samples, 0.03%)</title><rect x="1105.5" y="2005" width="0.3" height="15.0" fill="rgb(219,147,6)" rx="2" ry="2" />
<text  x="1108.48" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.4" y="1717" width="0.1" height="15.0" fill="rgb(231,157,10)" rx="2" ry="2" />
<text  x="1190.37" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1187.6" y="901" width="0.4" height="15.0" fill="rgb(253,206,27)" rx="2" ry="2" />
<text  x="1190.61" y="911.5" ></text>
</g>
<g >
<title>__vm_munmap (2 samples, 0.01%)</title><rect x="91.3" y="1909" width="0.1" height="15.0" fill="rgb(224,185,44)" rx="2" ry="2" />
<text  x="94.29" y="1919.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::pushHash (5 samples, 0.03%)</title><rect x="877.6" y="1941" width="0.3" height="15.0" fill="rgb(235,175,15)" rx="2" ry="2" />
<text  x="880.58" y="1951.5" ></text>
</g>
<g >
<title>__vm_munmap (2 samples, 0.01%)</title><rect x="88.6" y="1781" width="0.1" height="15.0" fill="rgb(206,26,34)" rx="2" ry="2" />
<text  x="91.60" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (2 samples, 0.01%)</title><rect x="161.3" y="1781" width="0.2" height="15.0" fill="rgb(233,140,31)" rx="2" ry="2" />
<text  x="164.34" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="1187.7" y="53" width="0.3" height="15.0" fill="rgb(229,64,14)" rx="2" ry="2" />
<text  x="1190.73" y="63.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (35 samples, 0.18%)</title><rect x="1130.2" y="2037" width="2.1" height="15.0" fill="rgb(227,61,1)" rx="2" ry="2" />
<text  x="1133.24" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.6" y="245" width="0.4" height="15.0" fill="rgb(217,188,7)" rx="2" ry="2" />
<text  x="1190.61" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1186.9" y="1029" width="0.5" height="15.0" fill="rgb(226,164,5)" rx="2" ry="2" />
<text  x="1189.95" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1186.9" y="261" width="0.5" height="15.0" fill="rgb(228,223,28)" rx="2" ry="2" />
<text  x="1189.95" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (453 samples, 2.30%)</title><rect x="190.4" y="1877" width="27.1" height="15.0" fill="rgb(206,182,33)" rx="2" ry="2" />
<text  x="193.41" y="1887.5" >s..</text>
</g>
<g >
<title>std::operator&gt;&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (5 samples, 0.03%)</title><rect x="519.1" y="1973" width="0.3" height="15.0" fill="rgb(230,69,3)" rx="2" ry="2" />
<text  x="522.10" y="1983.5" ></text>
</g>
<g >
<title>fasttext::FastText::getDimension (26 samples, 0.13%)</title><rect x="335.6" y="1989" width="1.5" height="15.0" fill="rgb(206,217,29)" rx="2" ry="2" />
<text  x="338.58" y="1999.5" ></text>
</g>
<g >
<title>RunFasttextClf (493 samples, 2.50%)</title><rect x="542.9" y="1957" width="29.5" height="15.0" fill="rgb(233,63,21)" rx="2" ry="2" />
<text  x="545.91" y="1967.5" >Ru..</text>
</g>
<g >
<title>__asan::Allocator::Allocate (20 samples, 0.10%)</title><rect x="99.1" y="2037" width="1.2" height="15.0" fill="rgb(250,48,34)" rx="2" ry="2" />
<text  x="102.13" y="2047.5" ></text>
</g>
<g >
<title>__x64_sys_madvise (3 samples, 0.02%)</title><rect x="1013.4" y="2005" width="0.1" height="15.0" fill="rgb(228,105,28)" rx="2" ry="2" />
<text  x="1016.36" y="2015.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (3 samples, 0.02%)</title><rect x="149.7" y="1637" width="0.2" height="15.0" fill="rgb(237,29,44)" rx="2" ry="2" />
<text  x="152.67" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1186.9" y="1845" width="0.5" height="15.0" fill="rgb(215,64,40)" rx="2" ry="2" />
<text  x="1189.95" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1187.5" y="1621" width="0.5" height="15.0" fill="rgb(249,45,14)" rx="2" ry="2" />
<text  x="1190.55" y="1631.5" ></text>
</g>
<g >
<title>onmt::unicode::get_case (5 samples, 0.03%)</title><rect x="736.4" y="1893" width="0.3" height="15.0" fill="rgb(251,133,38)" rx="2" ry="2" />
<text  x="739.41" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (477 samples, 2.42%)</title><rect x="55.3" y="1541" width="28.5" height="15.0" fill="rgb(250,96,49)" rx="2" ry="2" />
<text  x="58.28" y="1551.5" >[u..</text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt;@plt (3 samples, 0.02%)</title><rect x="755.3" y="1893" width="0.1" height="15.0" fill="rgb(243,141,19)" rx="2" ry="2" />
<text  x="758.25" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (339 samples, 1.72%)</title><rect x="55.3" y="133" width="20.3" height="15.0" fill="rgb(206,3,54)" rx="2" ry="2" />
<text  x="58.28" y="143.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (9 samples, 0.05%)</title><rect x="1123.4" y="2037" width="0.6" height="15.0" fill="rgb(208,219,3)" rx="2" ry="2" />
<text  x="1126.42" y="2047.5" ></text>
</g>
<g >
<title>page_fault (35 samples, 0.18%)</title><rect x="512.6" y="1957" width="2.1" height="15.0" fill="rgb(211,120,52)" rx="2" ry="2" />
<text  x="515.58" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (2 samples, 0.01%)</title><rect x="217.7" y="1829" width="0.1" height="15.0" fill="rgb(215,63,32)" rx="2" ry="2" />
<text  x="220.68" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="162.5" y="1573" width="0.3" height="15.0" fill="rgb(240,162,35)" rx="2" ry="2" />
<text  x="165.53" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.4" y="1477" width="0.1" height="15.0" fill="rgb(228,30,0)" rx="2" ry="2" />
<text  x="1190.43" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.4" y="421" width="0.1" height="15.0" fill="rgb(232,61,34)" rx="2" ry="2" />
<text  x="1190.43" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (99 samples, 0.50%)</title><rect x="200.6" y="1669" width="5.9" height="15.0" fill="rgb(213,176,28)" rx="2" ry="2" />
<text  x="203.58" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (446 samples, 2.26%)</title><rect x="134.5" y="1845" width="26.7" height="15.0" fill="rgb(235,78,19)" rx="2" ry="2" />
<text  x="137.48" y="1855.5" >s..</text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (3 samples, 0.02%)</title><rect x="155.7" y="1733" width="0.1" height="15.0" fill="rgb(225,60,44)" rx="2" ry="2" />
<text  x="158.65" y="1743.5" ></text>
</g>
<g >
<title>schedule (2 samples, 0.01%)</title><rect x="697.0" y="1749" width="0.1" height="15.0" fill="rgb(216,99,32)" rx="2" ry="2" />
<text  x="699.99" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (8 samples, 0.04%)</title><rect x="1186.9" y="1973" width="0.5" height="15.0" fill="rgb(214,20,27)" rx="2" ry="2" />
<text  x="1189.89" y="1983.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (7 samples, 0.04%)</title><rect x="525.0" y="1925" width="0.4" height="15.0" fill="rgb(209,153,4)" rx="2" ry="2" />
<text  x="528.02" y="1935.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (3 samples, 0.02%)</title><rect x="98.6" y="2021" width="0.2" height="15.0" fill="rgb(221,6,30)" rx="2" ry="2" />
<text  x="101.59" y="2031.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::addSubwords (441 samples, 2.24%)</title><rect x="545.5" y="1909" width="26.4" height="15.0" fill="rgb(245,102,16)" rx="2" ry="2" />
<text  x="548.54" y="1919.5" >f..</text>
</g>
<g >
<title>__interceptor_memcmp (5 samples, 0.03%)</title><rect x="539.9" y="1909" width="0.3" height="15.0" fill="rgb(231,183,0)" rx="2" ry="2" />
<text  x="542.91" y="1919.5" ></text>
</g>
<g >
<title>arch_tlb_finish_mmu (7 samples, 0.04%)</title><rect x="1103.6" y="1877" width="0.4" height="15.0" fill="rgb(215,115,20)" rx="2" ry="2" />
<text  x="1106.62" y="1887.5" ></text>
</g>
<g >
<title>__dynamic_cast (4 samples, 0.02%)</title><rect x="180.6" y="1621" width="0.2" height="15.0" fill="rgb(232,127,27)" rx="2" ry="2" />
<text  x="183.60" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="218.2" y="1701" width="0.3" height="15.0" fill="rgb(246,83,53)" rx="2" ry="2" />
<text  x="221.22" y="1711.5" ></text>
</g>
<g >
<title>onmt::unicode::explode_utf8 (387 samples, 1.96%)</title><rect x="599.1" y="1877" width="23.1" height="15.0" fill="rgb(225,180,46)" rx="2" ry="2" />
<text  x="602.07" y="1887.5" >o..</text>
</g>
<g >
<title>Preprocess (3,087 samples, 15.65%)</title><rect x="572.6" y="1957" width="184.6" height="15.0" fill="rgb(211,14,18)" rx="2" ry="2" />
<text  x="575.57" y="1967.5" >Preprocess</text>
</g>
<g >
<title>__dynamic_cast (4 samples, 0.02%)</title><rect x="156.3" y="1701" width="0.3" height="15.0" fill="rgb(232,60,41)" rx="2" ry="2" />
<text  x="159.31" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_try_char (2 samples, 0.01%)</title><rect x="200.3" y="1733" width="0.2" height="15.0" fill="rgb(215,123,43)" rx="2" ry="2" />
<text  x="203.34" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.03%)</title><rect x="880.5" y="2021" width="0.3" height="15.0" fill="rgb(241,88,38)" rx="2" ry="2" />
<text  x="883.51" y="2031.5" ></text>
</g>
<g >
<title>__sanitizer::internal_munmap (6 samples, 0.03%)</title><rect x="768.4" y="2037" width="0.3" height="15.0" fill="rgb(243,30,34)" rx="2" ry="2" />
<text  x="771.35" y="2047.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (5 samples, 0.03%)</title><rect x="880.5" y="2037" width="0.3" height="15.0" fill="rgb(240,47,11)" rx="2" ry="2" />
<text  x="883.51" y="2047.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.02%)</title><rect x="1013.4" y="2037" width="0.1" height="15.0" fill="rgb(239,12,13)" rx="2" ry="2" />
<text  x="1016.36" y="2047.5" ></text>
</g>
<g >
<title>__asan::asan_delete (7 samples, 0.04%)</title><rect x="1164.6" y="2037" width="0.5" height="15.0" fill="rgb(230,107,25)" rx="2" ry="2" />
<text  x="1167.64" y="2047.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.04%)</title><rect x="1105.1" y="2053" width="0.4" height="15.0" fill="rgb(246,51,50)" rx="2" ry="2" />
<text  x="1108.06" y="2063.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (8 samples, 0.04%)</title><rect x="181.6" y="1621" width="0.4" height="15.0" fill="rgb(245,102,25)" rx="2" ry="2" />
<text  x="184.55" y="1631.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (16 samples, 0.08%)</title><rect x="617.0" y="1845" width="0.9" height="15.0" fill="rgb(218,31,37)" rx="2" ry="2" />
<text  x="619.96" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1186.9" y="917" width="0.5" height="15.0" fill="rgb(238,99,5)" rx="2" ry="2" />
<text  x="1189.95" y="927.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::do_tolower (3 samples, 0.02%)</title><rect x="155.4" y="1653" width="0.1" height="15.0" fill="rgb(252,84,40)" rx="2" ry="2" />
<text  x="158.35" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1187.4" y="1653" width="0.1" height="15.0" fill="rgb(227,139,39)" rx="2" ry="2" />
<text  x="1190.37" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="188.7" y="1909" width="0.4" height="15.0" fill="rgb(230,153,12)" rx="2" ry="2" />
<text  x="191.73" y="1919.5" ></text>
</g>
<g >
<title>__schedule (2 samples, 0.01%)</title><rect x="697.0" y="1733" width="0.1" height="15.0" fill="rgb(247,179,3)" rx="2" ry="2" />
<text  x="699.99" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.6" y="1349" width="0.4" height="15.0" fill="rgb(213,172,14)" rx="2" ry="2" />
<text  x="1190.61" y="1359.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (4 samples, 0.02%)</title><rect x="124.5" y="1973" width="0.3" height="15.0" fill="rgb(208,121,0)" rx="2" ry="2" />
<text  x="127.55" y="1983.5" ></text>
</g>
<g >
<title>__asan::AsanThread::stack_top (3 samples, 0.02%)</title><rect x="179.8" y="1621" width="0.2" height="15.0" fill="rgb(213,53,7)" rx="2" ry="2" />
<text  x="182.82" y="1631.5" ></text>
</g>
<g >
<title>alloc_pages_vma (2 samples, 0.01%)</title><rect x="124.7" y="1877" width="0.1" height="15.0" fill="rgb(219,135,47)" rx="2" ry="2" />
<text  x="127.67" y="1887.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (4 samples, 0.02%)</title><rect x="1188.7" y="2037" width="0.3" height="15.0" fill="rgb(247,159,42)" rx="2" ry="2" />
<text  x="1191.74" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (362 samples, 1.84%)</title><rect x="55.3" y="1013" width="21.6" height="15.0" fill="rgb(253,125,22)" rx="2" ry="2" />
<text  x="58.28" y="1023.5" >[..</text>
</g>
<g >
<title>Eigen::internal::generic_product_impl&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt;, Eigen::DenseShape, Eigen::DenseShape, 8&gt;::scaleAndAddTo&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt; (2 samples, 0.01%)</title><rect x="190.1" y="1989" width="0.1" height="15.0" fill="rgb(211,131,15)" rx="2" ry="2" />
<text  x="193.11" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (85 samples, 0.43%)</title><rect x="168.4" y="1637" width="5.1" height="15.0" fill="rgb(235,95,54)" rx="2" ry="2" />
<text  x="171.39" y="1647.5" ></text>
</g>
<g >
<title>operator delete@plt (2 samples, 0.01%)</title><rect x="737.8" y="1893" width="0.1" height="15.0" fill="rgb(223,75,25)" rx="2" ry="2" />
<text  x="740.79" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (367 samples, 1.86%)</title><rect x="55.3" y="1077" width="21.9" height="15.0" fill="rgb(230,152,47)" rx="2" ry="2" />
<text  x="58.28" y="1087.5" >[..</text>
</g>
<g >
<title>nlohmann::detail::json_sax_dom_parser&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::handle_value&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (3 samples, 0.02%)</title><rect x="125.4" y="1941" width="0.2" height="15.0" fill="rgb(227,77,25)" rx="2" ry="2" />
<text  x="128.39" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.4" y="405" width="0.1" height="15.0" fill="rgb(223,119,12)" rx="2" ry="2" />
<text  x="1190.43" y="415.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="87.9" y="1797" width="0.1" height="15.0" fill="rgb(236,32,48)" rx="2" ry="2" />
<text  x="90.88" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.4" y="1765" width="0.1" height="15.0" fill="rgb(232,24,9)" rx="2" ry="2" />
<text  x="1190.37" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (95 samples, 0.48%)</title><rect x="144.3" y="1685" width="5.7" height="15.0" fill="rgb(237,100,18)" rx="2" ry="2" />
<text  x="147.29" y="1695.5" ></text>
</g>
<g >
<title>Eigen::DenseBase&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt;::setConstant (36 samples, 0.18%)</title><rect x="502.5" y="1941" width="2.1" height="15.0" fill="rgb(215,205,36)" rx="2" ry="2" />
<text  x="505.47" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="218.2" y="1909" width="0.3" height="15.0" fill="rgb(228,116,4)" rx="2" ry="2" />
<text  x="221.22" y="1919.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (2 samples, 0.01%)</title><rect x="1113.7" y="1861" width="0.2" height="15.0" fill="rgb(209,122,2)" rx="2" ry="2" />
<text  x="1116.73" y="1871.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (2 samples, 0.01%)</title><rect x="82.6" y="1429" width="0.1" height="15.0" fill="rgb(235,101,4)" rx="2" ry="2" />
<text  x="85.56" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (2 samples, 0.01%)</title><rect x="161.2" y="1845" width="0.1" height="15.0" fill="rgb(221,177,13)" rx="2" ry="2" />
<text  x="164.16" y="1855.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (3 samples, 0.02%)</title><rect x="80.9" y="1349" width="0.2" height="15.0" fill="rgb(218,76,36)" rx="2" ry="2" />
<text  x="83.94" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (7 samples, 0.04%)</title><rect x="217.0" y="1829" width="0.4" height="15.0" fill="rgb(254,15,33)" rx="2" ry="2" />
<text  x="220.02" y="1839.5" ></text>
</g>
<g >
<title>__asan::GetMallocContextSize (2 samples, 0.01%)</title><rect x="197.3" y="1589" width="0.2" height="15.0" fill="rgb(235,217,30)" rx="2" ry="2" />
<text  x="200.35" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.4" y="1909" width="0.1" height="15.0" fill="rgb(234,42,49)" rx="2" ry="2" />
<text  x="1190.37" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.02%)</title><rect x="162.5" y="1413" width="0.3" height="15.0" fill="rgb(236,166,13)" rx="2" ry="2" />
<text  x="165.53" y="1423.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="81.4" y="1333" width="0.1" height="15.0" fill="rgb(221,220,47)" rx="2" ry="2" />
<text  x="84.42" y="1343.5" ></text>
</g>
<g >
<title>std::istream::sentry::sentry (2 samples, 0.01%)</title><rect x="1188.1" y="2053" width="0.1" height="15.0" fill="rgb(253,170,45)" rx="2" ry="2" />
<text  x="1191.09" y="2063.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::basic_json (4 samples, 0.02%)</title><rect x="521.8" y="1973" width="0.3" height="15.0" fill="rgb(244,204,46)" rx="2" ry="2" />
<text  x="524.85" y="1983.5" ></text>
</g>
<g >
<title>operator delete (6 samples, 0.03%)</title><rect x="148.1" y="1605" width="0.4" height="15.0" fill="rgb(235,80,21)" rx="2" ry="2" />
<text  x="151.12" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (361 samples, 1.83%)</title><rect x="55.3" y="933" width="21.6" height="15.0" fill="rgb(247,99,17)" rx="2" ry="2" />
<text  x="58.28" y="943.5" >[..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (2 samples, 0.01%)</title><rect x="190.5" y="1701" width="0.1" height="15.0" fill="rgb(223,197,24)" rx="2" ry="2" />
<text  x="193.53" y="1711.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.03%)</title><rect x="215.5" y="1669" width="0.3" height="15.0" fill="rgb(235,105,51)" rx="2" ry="2" />
<text  x="218.53" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (77 samples, 0.39%)</title><rect x="212.3" y="1765" width="4.6" height="15.0" fill="rgb(212,31,34)" rx="2" ry="2" />
<text  x="215.30" y="1775.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::Unwind (30 samples, 0.15%)</title><rect x="1178.2" y="2037" width="1.8" height="15.0" fill="rgb(228,161,10)" rx="2" ry="2" />
<text  x="1181.22" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.02%)</title><rect x="218.2" y="1685" width="0.3" height="15.0" fill="rgb(239,160,26)" rx="2" ry="2" />
<text  x="221.22" y="1695.5" ></text>
</g>
<g >
<title>fasttext::HierarchicalSoftmaxLoss::dfs (2 samples, 0.01%)</title><rect x="572.2" y="1877" width="0.1" height="15.0" fill="rgb(226,110,19)" rx="2" ry="2" />
<text  x="575.22" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="162.7" y="1285" width="0.1" height="15.0" fill="rgb(228,33,35)" rx="2" ry="2" />
<text  x="165.65" y="1295.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (3 samples, 0.02%)</title><rect x="123.7" y="2037" width="0.1" height="15.0" fill="rgb(229,182,13)" rx="2" ry="2" />
<text  x="126.65" y="2047.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (49 samples, 0.25%)</title><rect x="202.8" y="1621" width="2.9" height="15.0" fill="rgb(236,66,20)" rx="2" ry="2" />
<text  x="205.79" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.4" y="757" width="0.1" height="15.0" fill="rgb(209,204,27)" rx="2" ry="2" />
<text  x="1190.43" y="767.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (3 samples, 0.02%)</title><rect x="44.2" y="2005" width="0.2" height="15.0" fill="rgb(243,215,26)" rx="2" ry="2" />
<text  x="47.22" y="2015.5" ></text>
</g>
<g >
<title>smp_call_function_many (2 samples, 0.01%)</title><rect x="85.8" y="1461" width="0.2" height="15.0" fill="rgb(218,58,54)" rx="2" ry="2" />
<text  x="88.85" y="1471.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (3 samples, 0.02%)</title><rect x="340.1" y="1989" width="0.1" height="15.0" fill="rgb(208,84,23)" rx="2" ry="2" />
<text  x="343.07" y="1999.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (3 samples, 0.02%)</title><rect x="140.9" y="1589" width="0.2" height="15.0" fill="rgb(231,6,10)" rx="2" ry="2" />
<text  x="143.88" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="162.5" y="1621" width="0.3" height="15.0" fill="rgb(253,141,42)" rx="2" ry="2" />
<text  x="165.53" y="1631.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (5 samples, 0.03%)</title><rect x="168.0" y="1573" width="0.3" height="15.0" fill="rgb(249,64,18)" rx="2" ry="2" />
<text  x="171.04" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (537 samples, 2.72%)</title><rect x="55.3" y="1797" width="32.1" height="15.0" fill="rgb(235,205,47)" rx="2" ry="2" />
<text  x="58.28" y="1807.5" >[u..</text>
</g>
<g >
<title>[unknown] (533 samples, 2.70%)</title><rect x="55.3" y="1781" width="31.9" height="15.0" fill="rgb(234,35,30)" rx="2" ry="2" />
<text  x="58.28" y="1791.5" >[u..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1187.4" y="2037" width="0.1" height="15.0" fill="rgb(209,31,25)" rx="2" ry="2" />
<text  x="1190.37" y="2047.5" ></text>
</g>
<g >
<title>__dynamic_cast (4 samples, 0.02%)</title><rect x="175.9" y="1589" width="0.2" height="15.0" fill="rgb(208,99,39)" rx="2" ry="2" />
<text  x="178.87" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.4" y="373" width="0.1" height="15.0" fill="rgb(233,4,17)" rx="2" ry="2" />
<text  x="1190.43" y="383.5" ></text>
</g>
<g >
<title>get_page_from_freelist (7 samples, 0.04%)</title><rect x="946.2" y="1893" width="0.4" height="15.0" fill="rgb(248,92,18)" rx="2" ry="2" />
<text  x="949.19" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1186.9" y="1541" width="0.5" height="15.0" fill="rgb(237,24,37)" rx="2" ry="2" />
<text  x="1189.95" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3 samples, 0.02%)</title><rect x="187.4" y="1781" width="0.2" height="15.0" fill="rgb(225,148,17)" rx="2" ry="2" />
<text  x="190.42" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (62 samples, 0.31%)</title><rect x="140.0" y="1621" width="3.7" height="15.0" fill="rgb(211,37,8)" rx="2" ry="2" />
<text  x="143.04" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (899 samples, 4.56%)</title><rect x="822.5" y="2021" width="53.8" height="15.0" fill="rgb(242,58,51)" rx="2" ry="2" />
<text  x="825.49" y="2031.5" >[unkn..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.4" y="501" width="0.1" height="15.0" fill="rgb(244,179,3)" rx="2" ry="2" />
<text  x="1190.43" y="511.5" ></text>
</g>
<g >
<title>handle_mm_fault (2 samples, 0.01%)</title><rect x="580.1" y="1829" width="0.1" height="15.0" fill="rgb(242,14,1)" rx="2" ry="2" />
<text  x="583.05" y="1839.5" ></text>
</g>
<g >
<title>unmap_region (2 samples, 0.01%)</title><rect x="87.9" y="1717" width="0.1" height="15.0" fill="rgb(225,178,34)" rx="2" ry="2" />
<text  x="90.88" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (65 samples, 0.33%)</title><rect x="173.7" y="1653" width="3.9" height="15.0" fill="rgb(237,100,8)" rx="2" ry="2" />
<text  x="176.72" y="1663.5" ></text>
</g>
<g >
<title>onmt::is_alphabet (3 samples, 0.02%)</title><rect x="736.2" y="1893" width="0.2" height="15.0" fill="rgb(222,131,42)" rx="2" ry="2" />
<text  x="739.17" y="1903.5" ></text>
</g>
<g >
<title>do_page_fault (6 samples, 0.03%)</title><rect x="652.1" y="1845" width="0.3" height="15.0" fill="rgb(214,226,42)" rx="2" ry="2" />
<text  x="655.07" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1187.5" y="1669" width="0.5" height="15.0" fill="rgb(228,86,18)" rx="2" ry="2" />
<text  x="1190.55" y="1679.5" ></text>
</g>
<g >
<title>unmap_region (2 samples, 0.01%)</title><rect x="87.0" y="1669" width="0.2" height="15.0" fill="rgb(240,31,52)" rx="2" ry="2" />
<text  x="90.04" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1187.4" y="1701" width="0.1" height="15.0" fill="rgb(223,185,41)" rx="2" ry="2" />
<text  x="1190.37" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (101 samples, 0.51%)</title><rect x="200.6" y="1749" width="6.0" height="15.0" fill="rgb(239,156,16)" rx="2" ry="2" />
<text  x="203.58" y="1759.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::Unwind (2 samples, 0.01%)</title><rect x="1125.9" y="2037" width="0.1" height="15.0" fill="rgb(242,135,4)" rx="2" ry="2" />
<text  x="1128.88" y="2047.5" ></text>
</g>
<g >
<title>__pthread_getspecific (134 samples, 0.68%)</title><rect x="1013.5" y="2053" width="8.1" height="15.0" fill="rgb(253,29,35)" rx="2" ry="2" />
<text  x="1016.54" y="2063.5" ></text>
</g>
<g >
<title>__asan_memcpy (4 samples, 0.02%)</title><rect x="208.8" y="1637" width="0.2" height="15.0" fill="rgb(248,11,30)" rx="2" ry="2" />
<text  x="211.77" y="1647.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (11 samples, 0.06%)</title><rect x="737.9" y="1893" width="0.7" height="15.0" fill="rgb(253,189,7)" rx="2" ry="2" />
<text  x="740.91" y="1903.5" ></text>
</g>
<g >
<title>unmap_vmas (7 samples, 0.04%)</title><rect x="1105.1" y="1941" width="0.4" height="15.0" fill="rgb(235,150,44)" rx="2" ry="2" />
<text  x="1108.06" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.6" y="1301" width="0.4" height="15.0" fill="rgb(215,163,13)" rx="2" ry="2" />
<text  x="1190.61" y="1311.5" ></text>
</g>
<g >
<title>__asan_memcpy (4 samples, 0.02%)</title><rect x="204.0" y="1605" width="0.2" height="15.0" fill="rgb(244,155,34)" rx="2" ry="2" />
<text  x="206.98" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1186.9" y="1797" width="0.5" height="15.0" fill="rgb(245,126,50)" rx="2" ry="2" />
<text  x="1189.95" y="1807.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (48 samples, 0.24%)</title><rect x="179.3" y="1637" width="2.9" height="15.0" fill="rgb(233,15,49)" rx="2" ry="2" />
<text  x="182.34" y="1647.5" ></text>
</g>
<g >
<title>__sanitizer::internal_munmap (2 samples, 0.01%)</title><rect x="91.3" y="1973" width="0.1" height="15.0" fill="rgb(238,160,32)" rx="2" ry="2" />
<text  x="94.29" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (7 samples, 0.04%)</title><rect x="217.0" y="1797" width="0.4" height="15.0" fill="rgb(222,137,6)" rx="2" ry="2" />
<text  x="220.02" y="1807.5" ></text>
</g>
<g >
<title>operator delete (7 samples, 0.04%)</title><rect x="171.9" y="1573" width="0.4" height="15.0" fill="rgb(211,6,43)" rx="2" ry="2" />
<text  x="174.92" y="1583.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_Alloc_node&gt; (4 samples, 0.02%)</title><rect x="521.8" y="1797" width="0.3" height="15.0" fill="rgb(254,94,5)" rx="2" ry="2" />
<text  x="524.85" y="1807.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (223 samples, 1.13%)</title><rect x="30.1" y="2037" width="13.3" height="15.0" fill="rgb(207,228,13)" rx="2" ry="2" />
<text  x="33.10" y="2047.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (37 samples, 0.19%)</title><rect x="192.5" y="1573" width="2.2" height="15.0" fill="rgb(233,47,29)" rx="2" ry="2" />
<text  x="195.50" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="878.1" y="2021" width="0.1" height="15.0" fill="rgb(229,91,10)" rx="2" ry="2" />
<text  x="881.06" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1187.5" y="1813" width="0.5" height="15.0" fill="rgb(207,137,2)" rx="2" ry="2" />
<text  x="1190.55" y="1823.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.06%)</title><rect x="525.0" y="2021" width="0.6" height="15.0" fill="rgb(217,41,52)" rx="2" ry="2" />
<text  x="527.96" y="2031.5" ></text>
</g>
<g >
<title>alloc_pages_vma (22 samples, 0.11%)</title><rect x="945.3" y="1925" width="1.3" height="15.0" fill="rgb(244,51,3)" rx="2" ry="2" />
<text  x="948.29" y="1935.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.02%)</title><rect x="159.5" y="1669" width="0.2" height="15.0" fill="rgb(236,6,24)" rx="2" ry="2" />
<text  x="162.48" y="1679.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::Unwind (3 samples, 0.02%)</title><rect x="154.2" y="1637" width="0.1" height="15.0" fill="rgb(224,153,0)" rx="2" ry="2" />
<text  x="157.16" y="1647.5" ></text>
</g>
<g >
<title>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::dump_escaped (2 samples, 0.01%)</title><rect x="520.8" y="1893" width="0.2" height="15.0" fill="rgb(226,78,14)" rx="2" ry="2" />
<text  x="523.83" y="1903.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (24 samples, 0.12%)</title><rect x="1103.1" y="1973" width="1.5" height="15.0" fill="rgb(226,150,41)" rx="2" ry="2" />
<text  x="1106.15" y="1983.5" ></text>
</g>
<g >
<title>get_page_from_freelist (4 samples, 0.02%)</title><rect x="504.1" y="1813" width="0.2" height="15.0" fill="rgb(248,85,24)" rx="2" ry="2" />
<text  x="507.08" y="1823.5" ></text>
</g>
<g >
<title>cpumask_any_but (2 samples, 0.01%)</title><rect x="948.8" y="1893" width="0.1" height="15.0" fill="rgb(239,196,17)" rx="2" ry="2" />
<text  x="951.82" y="1903.5" ></text>
</g>
<g >
<title>__asan::AsanThread::stack_bottom (7 samples, 0.04%)</title><rect x="1157.4" y="2037" width="0.4" height="15.0" fill="rgb(248,206,40)" rx="2" ry="2" />
<text  x="1160.40" y="2047.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (20 samples, 0.10%)</title><rect x="1155.5" y="2037" width="1.2" height="15.0" fill="rgb(251,152,37)" rx="2" ry="2" />
<text  x="1158.55" y="2047.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (3 samples, 0.02%)</title><rect x="89.0" y="1877" width="0.1" height="15.0" fill="rgb(214,8,34)" rx="2" ry="2" />
<text  x="91.96" y="1887.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.03%)</title><rect x="176.5" y="1589" width="0.3" height="15.0" fill="rgb(211,49,54)" rx="2" ry="2" />
<text  x="179.47" y="1599.5" ></text>
</g>
<g >
<title>fasttext::Vector::addRow (8 samples, 0.04%)</title><rect x="805.6" y="2037" width="0.4" height="15.0" fill="rgb(209,23,45)" rx="2" ry="2" />
<text  x="808.56" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.02%)</title><rect x="218.2" y="1445" width="0.3" height="15.0" fill="rgb(239,129,30)" rx="2" ry="2" />
<text  x="221.22" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="162.5" y="1477" width="0.3" height="15.0" fill="rgb(238,163,33)" rx="2" ry="2" />
<text  x="165.53" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (452 samples, 2.29%)</title><rect x="190.4" y="1845" width="27.0" height="15.0" fill="rgb(221,54,37)" rx="2" ry="2" />
<text  x="193.41" y="1855.5" >s..</text>
</g>
<g >
<title>[libstdc++.so.6.0.25] (2 samples, 0.01%)</title><rect x="28.3" y="2037" width="0.1" height="15.0" fill="rgb(210,2,53)" rx="2" ry="2" />
<text  x="31.30" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (18 samples, 0.09%)</title><rect x="876.9" y="2021" width="1.1" height="15.0" fill="rgb(240,71,41)" rx="2" ry="2" />
<text  x="879.92" y="2031.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="88.4" y="1829" width="0.1" height="15.0" fill="rgb(231,197,19)" rx="2" ry="2" />
<text  x="91.42" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.4" y="1013" width="0.1" height="15.0" fill="rgb(225,14,52)" rx="2" ry="2" />
<text  x="1190.43" y="1023.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.01%)</title><rect x="204.2" y="1605" width="0.1" height="15.0" fill="rgb(242,88,4)" rx="2" ry="2" />
<text  x="207.22" y="1615.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.02%)</title><rect x="181.4" y="1621" width="0.2" height="15.0" fill="rgb(254,79,54)" rx="2" ry="2" />
<text  x="184.37" y="1631.5" ></text>
</g>
<g >
<title>onmt::unicode::is_letter (198 samples, 1.00%)</title><rect x="713.6" y="1877" width="11.9" height="15.0" fill="rgb(218,28,4)" rx="2" ry="2" />
<text  x="716.62" y="1887.5" ></text>
</g>
<g >
<title>__strxfrm_l (25 samples, 0.13%)</title><rect x="1172.1" y="2021" width="1.5" height="15.0" fill="rgb(234,175,7)" rx="2" ry="2" />
<text  x="1175.11" y="2031.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (8 samples, 0.04%)</title><rect x="27.3" y="1941" width="0.5" height="15.0" fill="rgb(253,24,34)" rx="2" ry="2" />
<text  x="30.29" y="1951.5" ></text>
</g>
<g >
<title>__asan::AsanThread::stack_top (2 samples, 0.01%)</title><rect x="489.1" y="1925" width="0.1" height="15.0" fill="rgb(205,182,29)" rx="2" ry="2" />
<text  x="492.07" y="1935.5" ></text>
</g>
<g >
<title>__asan_memset (2 samples, 0.01%)</title><rect x="334.6" y="1957" width="0.1" height="15.0" fill="rgb(206,160,5)" rx="2" ry="2" />
<text  x="337.62" y="1967.5" ></text>
</g>
<g >
<title>tlb_flush_mmu_free (2 samples, 0.01%)</title><rect x="768.6" y="1877" width="0.1" height="15.0" fill="rgb(246,133,22)" rx="2" ry="2" />
<text  x="771.59" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.4" y="437" width="0.1" height="15.0" fill="rgb(252,63,40)" rx="2" ry="2" />
<text  x="1190.43" y="447.5" ></text>
</g>
<g >
<title>__pthread_getspecific (3 samples, 0.02%)</title><rect x="198.0" y="1589" width="0.2" height="15.0" fill="rgb(209,215,25)" rx="2" ry="2" />
<text  x="201.00" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_quantifier (2 samples, 0.01%)</title><rect x="150.0" y="1701" width="0.1" height="15.0" fill="rgb(249,169,22)" rx="2" ry="2" />
<text  x="152.97" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="218.2" y="1813" width="0.3" height="15.0" fill="rgb(206,204,9)" rx="2" ry="2" />
<text  x="221.22" y="1823.5" ></text>
</g>
<g >
<title>__vm_munmap (2 samples, 0.01%)</title><rect x="87.9" y="1749" width="0.1" height="15.0" fill="rgb(244,175,5)" rx="2" ry="2" />
<text  x="90.88" y="1759.5" ></text>
</g>
<g >
<title>__handle_mm_fault (14 samples, 0.07%)</title><rect x="682.7" y="1781" width="0.8" height="15.0" fill="rgb(216,11,32)" rx="2" ry="2" />
<text  x="685.70" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (76 samples, 0.39%)</title><rect x="177.9" y="1701" width="4.6" height="15.0" fill="rgb(223,206,38)" rx="2" ry="2" />
<text  x="180.90" y="1711.5" ></text>
</g>
<g >
<title>vfs_read (2 samples, 0.01%)</title><rect x="124.1" y="1957" width="0.1" height="15.0" fill="rgb(250,151,9)" rx="2" ry="2" />
<text  x="127.13" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="188.9" y="1733" width="0.2" height="15.0" fill="rgb(241,68,54)" rx="2" ry="2" />
<text  x="191.91" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1186.9" y="1669" width="0.5" height="15.0" fill="rgb(252,82,54)" rx="2" ry="2" />
<text  x="1189.95" y="1679.5" ></text>
</g>
<g >
<title>__dynamic_cast (6 samples, 0.03%)</title><rect x="182.6" y="1685" width="0.3" height="15.0" fill="rgb(252,140,0)" rx="2" ry="2" />
<text  x="185.57" y="1695.5" ></text>
</g>
<g >
<title>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::dump (5 samples, 0.03%)</title><rect x="520.8" y="1973" width="0.3" height="15.0" fill="rgb(239,34,38)" rx="2" ry="2" />
<text  x="523.77" y="1983.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (7 samples, 0.04%)</title><rect x="525.0" y="1957" width="0.4" height="15.0" fill="rgb(242,12,37)" rx="2" ry="2" />
<text  x="528.02" y="1967.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (4 samples, 0.02%)</title><rect x="339.8" y="1989" width="0.3" height="15.0" fill="rgb(206,224,48)" rx="2" ry="2" />
<text  x="342.83" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="876.3" y="2021" width="0.1" height="15.0" fill="rgb(225,54,42)" rx="2" ry="2" />
<text  x="879.26" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.6" y="181" width="0.1" height="15.0" fill="rgb(214,150,51)" rx="2" ry="2" />
<text  x="1190.61" y="191.5" ></text>
</g>
<g >
<title>__sanitizer::internal_munmap (2 samples, 0.01%)</title><rect x="88.6" y="1845" width="0.1" height="15.0" fill="rgb(252,185,14)" rx="2" ry="2" />
<text  x="91.60" y="1855.5" ></text>
</g>
<g >
<title>__pthread_getspecific (4 samples, 0.02%)</title><rect x="620.9" y="1845" width="0.2" height="15.0" fill="rgb(243,55,46)" rx="2" ry="2" />
<text  x="623.91" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1186.9" y="1301" width="0.5" height="15.0" fill="rgb(247,81,25)" rx="2" ry="2" />
<text  x="1189.95" y="1311.5" ></text>
</g>
<g >
<title>__asan::AsanThread::stack_top (2 samples, 0.01%)</title><rect x="620.7" y="1845" width="0.1" height="15.0" fill="rgb(222,201,39)" rx="2" ry="2" />
<text  x="623.73" y="1855.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (3 samples, 0.02%)</title><rect x="81.2" y="1365" width="0.2" height="15.0" fill="rgb(214,30,30)" rx="2" ry="2" />
<text  x="84.24" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1187.6" y="949" width="0.4" height="15.0" fill="rgb(219,208,41)" rx="2" ry="2" />
<text  x="1190.61" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.02%)</title><rect x="218.2" y="1637" width="0.3" height="15.0" fill="rgb(223,83,34)" rx="2" ry="2" />
<text  x="221.22" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (69 samples, 0.35%)</title><rect x="173.7" y="1733" width="4.1" height="15.0" fill="rgb(250,42,38)" rx="2" ry="2" />
<text  x="176.66" y="1743.5" ></text>
</g>
<g >
<title>__madvise (2 samples, 0.01%)</title><rect x="88.4" y="1845" width="0.1" height="15.0" fill="rgb(205,137,48)" rx="2" ry="2" />
<text  x="91.42" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (101 samples, 0.51%)</title><rect x="200.6" y="1765" width="6.0" height="15.0" fill="rgb(211,183,1)" rx="2" ry="2" />
<text  x="203.58" y="1775.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (11 samples, 0.06%)</title><rect x="821.8" y="2005" width="0.7" height="15.0" fill="rgb(242,58,28)" rx="2" ry="2" />
<text  x="824.83" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1186.9" y="309" width="0.5" height="15.0" fill="rgb(215,19,25)" rx="2" ry="2" />
<text  x="1189.95" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.5" y="1541" width="0.5" height="15.0" fill="rgb(223,47,7)" rx="2" ry="2" />
<text  x="1190.55" y="1551.5" ></text>
</g>
<g >
<title>copy_page_to_iter (2 samples, 0.01%)</title><rect x="1113.7" y="1877" width="0.2" height="15.0" fill="rgb(215,108,29)" rx="2" ry="2" />
<text  x="1116.73" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1186.9" y="1813" width="0.5" height="15.0" fill="rgb(246,119,37)" rx="2" ry="2" />
<text  x="1189.95" y="1823.5" ></text>
</g>
<g >
<title>__asan::Allocator::Deallocate (2 samples, 0.01%)</title><rect x="146.4" y="1605" width="0.1" height="15.0" fill="rgb(226,167,40)" rx="2" ry="2" />
<text  x="149.38" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1186.9" y="981" width="0.5" height="15.0" fill="rgb(247,45,49)" rx="2" ry="2" />
<text  x="1189.95" y="991.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.01%)</title><rect x="207.6" y="1653" width="0.2" height="15.0" fill="rgb(236,227,22)" rx="2" ry="2" />
<text  x="210.63" y="1663.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::create&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt; const&amp;&gt; (4 samples, 0.02%)</title><rect x="521.8" y="1813" width="0.3" height="15.0" fill="rgb(233,100,45)" rx="2" ry="2" />
<text  x="524.85" y="1823.5" ></text>
</g>
<g >
<title>do_syscall_64 (11 samples, 0.06%)</title><rect x="525.0" y="2005" width="0.6" height="15.0" fill="rgb(214,110,6)" rx="2" ry="2" />
<text  x="527.96" y="2015.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (3 samples, 0.02%)</title><rect x="876.1" y="1941" width="0.2" height="15.0" fill="rgb(216,133,7)" rx="2" ry="2" />
<text  x="879.08" y="1951.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.01%)</title><rect x="514.7" y="1925" width="0.2" height="15.0" fill="rgb(238,84,14)" rx="2" ry="2" />
<text  x="517.73" y="1935.5" ></text>
</g>
<g >
<title>do_page_fault (2 samples, 0.01%)</title><rect x="93.1" y="1989" width="0.1" height="15.0" fill="rgb(214,87,21)" rx="2" ry="2" />
<text  x="96.09" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (448 samples, 2.27%)</title><rect x="134.5" y="1877" width="26.8" height="15.0" fill="rgb(237,164,30)" rx="2" ry="2" />
<text  x="137.48" y="1887.5" >s..</text>
</g>
<g >
<title>fasttext::Vector::norm (22 samples, 0.11%)</title><rect x="517.2" y="1973" width="1.4" height="15.0" fill="rgb(236,214,32)" rx="2" ry="2" />
<text  x="520.24" y="1983.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (18 samples, 0.09%)</title><rect x="325.4" y="1941" width="1.0" height="15.0" fill="rgb(237,197,48)" rx="2" ry="2" />
<text  x="328.35" y="1951.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (3 samples, 0.02%)</title><rect x="77.4" y="1141" width="0.2" height="15.0" fill="rgb(221,76,1)" rx="2" ry="2" />
<text  x="80.41" y="1151.5" ></text>
</g>
<g >
<title>__asan::AsanTSDGet (11 samples, 0.06%)</title><rect x="1156.7" y="2037" width="0.7" height="15.0" fill="rgb(231,186,39)" rx="2" ry="2" />
<text  x="1159.74" y="2047.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (2 samples, 0.01%)</title><rect x="179.6" y="1621" width="0.2" height="15.0" fill="rgb(225,191,23)" rx="2" ry="2" />
<text  x="182.64" y="1631.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (2 samples, 0.01%)</title><rect x="816.8" y="2005" width="0.1" height="15.0" fill="rgb(234,197,23)" rx="2" ry="2" />
<text  x="819.80" y="2015.5" ></text>
</g>
<g >
<title>[libm-2.27.so] (4 samples, 0.02%)</title><rect x="1105.8" y="2037" width="0.3" height="15.0" fill="rgb(254,192,50)" rx="2" ry="2" />
<text  x="1108.84" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.6" y="293" width="0.4" height="15.0" fill="rgb(251,41,4)" rx="2" ry="2" />
<text  x="1190.61" y="303.5" ></text>
</g>
<g >
<title>mem_cgroup_throttle_swaprate (3 samples, 0.02%)</title><rect x="947.4" y="1909" width="0.2" height="15.0" fill="rgb(225,72,1)" rx="2" ry="2" />
<text  x="950.44" y="1919.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="89.7" y="1877" width="0.2" height="15.0" fill="rgb(241,71,19)" rx="2" ry="2" />
<text  x="92.74" y="1887.5" ></text>
</g>
<g >
<title>Annotate (169 samples, 0.86%)</title><rect x="124.2" y="2005" width="10.2" height="15.0" fill="rgb(239,70,23)" rx="2" ry="2" />
<text  x="127.25" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.5" y="1445" width="0.5" height="15.0" fill="rgb(229,223,40)" rx="2" ry="2" />
<text  x="1190.55" y="1455.5" ></text>
</g>
<g >
<title>std::__merge_sort_with_buffer&lt;__gnu_cxx::__normal_iterator&lt;TDocument*, std::vector&lt;TDocument, std::allocator&lt;TDocument&gt; &gt; &gt;, TDocument*, __gnu_cxx::__ops::_Iter_comp_iter&lt;main::$_1&gt; &gt; (6 samples, 0.03%)</title><rect x="522.5" y="1989" width="0.4" height="15.0" fill="rgb(206,161,39)" rx="2" ry="2" />
<text  x="525.51" y="1999.5" ></text>
</g>
<g >
<title>__interceptor_memcpy (18 samples, 0.09%)</title><rect x="1011.4" y="2053" width="1.1" height="15.0" fill="rgb(214,192,6)" rx="2" ry="2" />
<text  x="1014.39" y="2063.5" ></text>
</g>
<g >
<title>wp_page_copy (10 samples, 0.05%)</title><rect x="54.4" y="1925" width="0.6" height="15.0" fill="rgb(242,47,51)" rx="2" ry="2" />
<text  x="57.38" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (80 samples, 0.41%)</title><rect x="182.5" y="1749" width="4.8" height="15.0" fill="rgb(238,39,17)" rx="2" ry="2" />
<text  x="185.51" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.4" y="485" width="0.1" height="15.0" fill="rgb(225,46,45)" rx="2" ry="2" />
<text  x="1190.43" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.5" y="1509" width="0.5" height="15.0" fill="rgb(218,170,28)" rx="2" ry="2" />
<text  x="1190.55" y="1519.5" ></text>
</g>
<g >
<title>nlohmann::detail::input_stream_adapter::get_character (2 samples, 0.01%)</title><rect x="127.9" y="1925" width="0.1" height="15.0" fill="rgb(242,208,31)" rx="2" ry="2" />
<text  x="130.90" y="1935.5" ></text>
</g>
<g >
<title>Eigen::DenseBase&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt;::setConstant (2 samples, 0.01%)</title><rect x="190.0" y="1989" width="0.1" height="15.0" fill="rgb(248,39,17)" rx="2" ry="2" />
<text  x="192.99" y="1999.5" ></text>
</g>
<g >
<title>__pthread_getspecific (6 samples, 0.03%)</title><rect x="141.8" y="1589" width="0.4" height="15.0" fill="rgb(250,199,16)" rx="2" ry="2" />
<text  x="144.84" y="1599.5" ></text>
</g>
<g >
<title>do_syscall_64 (6 samples, 0.03%)</title><rect x="768.4" y="2005" width="0.3" height="15.0" fill="rgb(230,71,21)" rx="2" ry="2" />
<text  x="771.35" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (323 samples, 1.64%)</title><rect x="163.2" y="1797" width="19.3" height="15.0" fill="rgb(245,213,30)" rx="2" ry="2" />
<text  x="166.19" y="1807.5" ></text>
</g>
<g >
<title>__handle_mm_fault (2 samples, 0.01%)</title><rect x="580.1" y="1813" width="0.1" height="15.0" fill="rgb(238,193,45)" rx="2" ry="2" />
<text  x="583.05" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (598 samples, 3.03%)</title><rect x="55.3" y="1973" width="35.8" height="15.0" fill="rgb(250,151,6)" rx="2" ry="2" />
<text  x="58.28" y="1983.5" >[un..</text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (5 samples, 0.03%)</title><rect x="154.9" y="1637" width="0.3" height="15.0" fill="rgb(244,27,46)" rx="2" ry="2" />
<text  x="157.94" y="1647.5" ></text>
</g>
<g >
<title>fasttext::Vector::addRow (30 samples, 0.15%)</title><rect x="332.8" y="1973" width="1.8" height="15.0" fill="rgb(238,92,40)" rx="2" ry="2" />
<text  x="335.83" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="218.2" y="1461" width="0.3" height="15.0" fill="rgb(232,203,1)" rx="2" ry="2" />
<text  x="221.22" y="1471.5" ></text>
</g>
<g >
<title>TSlinkClustering::FillDistanceMatrix (248 samples, 1.26%)</title><rect x="499.8" y="1973" width="14.9" height="15.0" fill="rgb(228,128,26)" rx="2" ry="2" />
<text  x="502.84" y="1983.5" ></text>
</g>
<g >
<title>__interceptor_strcmp (93 samples, 0.47%)</title><rect x="37.8" y="2021" width="5.5" height="15.0" fill="rgb(245,63,14)" rx="2" ry="2" />
<text  x="40.75" y="2031.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::basic_json (7 samples, 0.04%)</title><rect x="520.2" y="2005" width="0.4" height="15.0" fill="rgb(214,227,40)" rx="2" ry="2" />
<text  x="523.17" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (82 samples, 0.42%)</title><rect x="182.5" y="1797" width="4.9" height="15.0" fill="rgb(205,213,19)" rx="2" ry="2" />
<text  x="185.51" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="218.2" y="1413" width="0.3" height="15.0" fill="rgb(233,136,26)" rx="2" ry="2" />
<text  x="221.22" y="1423.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (6 samples, 0.03%)</title><rect x="147.3" y="1605" width="0.3" height="15.0" fill="rgb(206,74,12)" rx="2" ry="2" />
<text  x="150.28" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="188.9" y="1509" width="0.1" height="15.0" fill="rgb(254,126,27)" rx="2" ry="2" />
<text  x="191.91" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1187.0" y="101" width="0.4" height="15.0" fill="rgb(231,186,25)" rx="2" ry="2" />
<text  x="1190.01" y="111.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="188.9" y="1525" width="0.1" height="15.0" fill="rgb(247,126,50)" rx="2" ry="2" />
<text  x="191.91" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="188.9" y="1429" width="0.1" height="15.0" fill="rgb(246,208,13)" rx="2" ry="2" />
<text  x="191.91" y="1439.5" ></text>
</g>
<g >
<title>operator delete[] (3 samples, 0.02%)</title><rect x="1113.3" y="2053" width="0.2" height="15.0" fill="rgb(239,212,24)" rx="2" ry="2" />
<text  x="1116.32" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.04%)</title><rect x="162.3" y="1781" width="0.5" height="15.0" fill="rgb(242,72,26)" rx="2" ry="2" />
<text  x="165.29" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.5" y="1925" width="0.5" height="15.0" fill="rgb(251,0,42)" rx="2" ry="2" />
<text  x="1190.55" y="1935.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (16 samples, 0.08%)</title><rect x="26.8" y="1957" width="1.0" height="15.0" fill="rgb(214,110,49)" rx="2" ry="2" />
<text  x="29.81" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1186.9" y="1653" width="0.5" height="15.0" fill="rgb(237,104,46)" rx="2" ry="2" />
<text  x="1189.95" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (613 samples, 3.11%)</title><rect x="55.3" y="2005" width="36.6" height="15.0" fill="rgb(223,195,45)" rx="2" ry="2" />
<text  x="58.28" y="2015.5" >[un..</text>
</g>
<g >
<title>__sanitizer::internal_mmap (13 samples, 0.07%)</title><rect x="767.6" y="2037" width="0.8" height="15.0" fill="rgb(222,55,0)" rx="2" ry="2" />
<text  x="770.58" y="2047.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (5 samples, 0.03%)</title><rect x="499.3" y="1941" width="0.3" height="15.0" fill="rgb(254,212,35)" rx="2" ry="2" />
<text  x="502.30" y="1951.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (3 samples, 0.02%)</title><rect x="211.0" y="1653" width="0.2" height="15.0" fill="rgb(239,189,28)" rx="2" ry="2" />
<text  x="214.04" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="771.0" y="2021" width="0.2" height="15.0" fill="rgb(224,138,46)" rx="2" ry="2" />
<text  x="774.05" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (78 samples, 0.40%)</title><rect x="190.5" y="1733" width="4.7" height="15.0" fill="rgb(223,195,21)" rx="2" ry="2" />
<text  x="193.53" y="1743.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (40 samples, 0.20%)</title><rect x="818.9" y="2005" width="2.4" height="15.0" fill="rgb(210,77,14)" rx="2" ry="2" />
<text  x="821.90" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.06%)</title><rect x="162.1" y="1925" width="0.7" height="15.0" fill="rgb(217,77,37)" rx="2" ry="2" />
<text  x="165.11" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_expression_term&lt;false, false&gt; (3 samples, 0.02%)</title><rect x="177.4" y="1637" width="0.2" height="15.0" fill="rgb(228,8,26)" rx="2" ry="2" />
<text  x="180.43" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1186.9" y="1317" width="0.5" height="15.0" fill="rgb(251,49,12)" rx="2" ry="2" />
<text  x="1189.95" y="1327.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="88.4" y="1813" width="0.1" height="15.0" fill="rgb(246,224,44)" rx="2" ry="2" />
<text  x="91.42" y="1823.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::basic_json&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, 0&gt; (2 samples, 0.01%)</title><rect x="520.7" y="2005" width="0.1" height="15.0" fill="rgb(249,24,10)" rx="2" ry="2" />
<text  x="523.65" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (75 samples, 0.38%)</title><rect x="201.7" y="1637" width="4.4" height="15.0" fill="rgb(248,30,8)" rx="2" ry="2" />
<text  x="204.65" y="1647.5" ></text>
</g>
<g >
<title>do_page_fault (21 samples, 0.11%)</title><rect x="682.3" y="1829" width="1.2" height="15.0" fill="rgb(235,150,7)" rx="2" ry="2" />
<text  x="685.28" y="1839.5" ></text>
</g>
<g >
<title>try_charge (4 samples, 0.02%)</title><rect x="698.2" y="1733" width="0.2" height="15.0" fill="rgb(213,128,5)" rx="2" ry="2" />
<text  x="701.19" y="1743.5" ></text>
</g>
<g >
<title>std::locale::locale (2 samples, 0.01%)</title><rect x="339.3" y="1989" width="0.2" height="15.0" fill="rgb(226,151,43)" rx="2" ry="2" />
<text  x="342.35" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="162.7" y="1205" width="0.1" height="15.0" fill="rgb(217,139,34)" rx="2" ry="2" />
<text  x="165.65" y="1215.5" ></text>
</g>
<g >
<title>Rank (926 samples, 4.69%)</title><rect x="134.4" y="2005" width="55.3" height="15.0" fill="rgb(225,229,6)" rx="2" ry="2" />
<text  x="137.36" y="2015.5" >Rank</text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (3 samples, 0.02%)</title><rect x="1125.7" y="2037" width="0.2" height="15.0" fill="rgb(236,188,48)" rx="2" ry="2" />
<text  x="1128.70" y="2047.5" ></text>
</g>
<g >
<title>onmt::unicode::get_lower (10 samples, 0.05%)</title><rect x="622.2" y="1877" width="0.6" height="15.0" fill="rgb(247,66,21)" rx="2" ry="2" />
<text  x="625.22" y="1887.5" ></text>
</g>
<g >
<title>onmt::is_alphabet (49 samples, 0.25%)</title><rect x="657.4" y="1877" width="2.9" height="15.0" fill="rgb(253,123,43)" rx="2" ry="2" />
<text  x="660.39" y="1887.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::do_tolower (4 samples, 0.02%)</title><rect x="149.4" y="1621" width="0.3" height="15.0" fill="rgb(245,46,6)" rx="2" ry="2" />
<text  x="152.43" y="1631.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64LocalCache&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&gt; &gt;::Deallocate (43 samples, 0.22%)</title><rect x="72.9" y="37" width="2.5" height="15.0" fill="rgb(218,224,52)" rx="2" ry="2" />
<text  x="75.87" y="47.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (6 samples, 0.03%)</title><rect x="134.5" y="1701" width="0.4" height="15.0" fill="rgb(231,149,23)" rx="2" ry="2" />
<text  x="137.54" y="1711.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::reserve (59 samples, 0.30%)</title><rect x="618.7" y="1861" width="3.5" height="15.0" fill="rgb(235,165,0)" rx="2" ry="2" />
<text  x="621.69" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="162.7" y="1301" width="0.1" height="15.0" fill="rgb(231,162,30)" rx="2" ry="2" />
<text  x="165.65" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (84 samples, 0.43%)</title><rect x="195.3" y="1717" width="5.0" height="15.0" fill="rgb(213,177,22)" rx="2" ry="2" />
<text  x="198.31" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1187.6" y="709" width="0.4" height="15.0" fill="rgb(223,169,3)" rx="2" ry="2" />
<text  x="1190.61" y="719.5" ></text>
</g>
<g >
<title>alloc_pages_vma (2 samples, 0.01%)</title><rect x="580.1" y="1797" width="0.1" height="15.0" fill="rgb(254,172,45)" rx="2" ry="2" />
<text  x="583.05" y="1807.5" ></text>
</g>
<g >
<title>alloc_pages_vma (10 samples, 0.05%)</title><rect x="503.7" y="1845" width="0.6" height="15.0" fill="rgb(246,0,3)" rx="2" ry="2" />
<text  x="506.73" y="1855.5" ></text>
</g>
<g >
<title>__interceptor___strxfrm_l (3 samples, 0.02%)</title><rect x="1009.7" y="2053" width="0.2" height="15.0" fill="rgb(228,164,22)" rx="2" ry="2" />
<text  x="1012.71" y="2063.5" ></text>
</g>
<g >
<title>__do_page_fault (2 samples, 0.01%)</title><rect x="580.1" y="1845" width="0.1" height="15.0" fill="rgb(251,143,5)" rx="2" ry="2" />
<text  x="583.05" y="1855.5" ></text>
</g>
<g >
<title>fasttext::QuantMatrix::addRowToVector (39 samples, 0.20%)</title><rect x="1106.5" y="2053" width="2.3" height="15.0" fill="rgb(252,25,7)" rx="2" ry="2" />
<text  x="1109.50" y="2063.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (5 samples, 0.03%)</title><rect x="193.2" y="1557" width="0.3" height="15.0" fill="rgb(214,150,53)" rx="2" ry="2" />
<text  x="196.16" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1187.6" y="421" width="0.4" height="15.0" fill="rgb(222,6,32)" rx="2" ry="2" />
<text  x="1190.61" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.4" y="1285" width="0.1" height="15.0" fill="rgb(231,161,22)" rx="2" ry="2" />
<text  x="1190.43" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (2 samples, 0.01%)</title><rect x="161.3" y="1797" width="0.2" height="15.0" fill="rgb(240,148,27)" rx="2" ry="2" />
<text  x="164.34" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (75 samples, 0.38%)</title><rect x="134.9" y="1637" width="4.5" height="15.0" fill="rgb(228,167,10)" rx="2" ry="2" />
<text  x="137.90" y="1647.5" ></text>
</g>
<g >
<title>__dynamic_cast (6 samples, 0.03%)</title><rect x="213.7" y="1685" width="0.4" height="15.0" fill="rgb(225,40,50)" rx="2" ry="2" />
<text  x="216.73" y="1695.5" ></text>
</g>
<g >
<title>__pthread_getspecific (3 samples, 0.02%)</title><rect x="153.9" y="1637" width="0.2" height="15.0" fill="rgb(208,174,0)" rx="2" ry="2" />
<text  x="156.92" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.6" y="549" width="0.4" height="15.0" fill="rgb(238,140,0)" rx="2" ry="2" />
<text  x="1190.61" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1186.9" y="709" width="0.5" height="15.0" fill="rgb(220,61,2)" rx="2" ry="2" />
<text  x="1189.95" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="218.2" y="1509" width="0.3" height="15.0" fill="rgb(245,227,5)" rx="2" ry="2" />
<text  x="221.22" y="1519.5" ></text>
</g>
<g >
<title>std::locale::locale (2 samples, 0.01%)</title><rect x="28.3" y="2021" width="0.1" height="15.0" fill="rgb(245,87,47)" rx="2" ry="2" />
<text  x="31.30" y="2031.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (2 samples, 0.01%)</title><rect x="765.0" y="1925" width="0.1" height="15.0" fill="rgb(227,155,17)" rx="2" ry="2" />
<text  x="768.00" y="1935.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (3 samples, 0.02%)</title><rect x="876.1" y="1973" width="0.2" height="15.0" fill="rgb(228,39,53)" rx="2" ry="2" />
<text  x="879.08" y="1983.5" ></text>
</g>
<g >
<title>__asan_memcpy (3 samples, 0.02%)</title><rect x="141.5" y="1589" width="0.2" height="15.0" fill="rgb(210,135,16)" rx="2" ry="2" />
<text  x="144.48" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.06%)</title><rect x="162.1" y="1893" width="0.7" height="15.0" fill="rgb(248,16,51)" rx="2" ry="2" />
<text  x="165.11" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="162.5" y="1493" width="0.3" height="15.0" fill="rgb(224,180,52)" rx="2" ry="2" />
<text  x="165.53" y="1503.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (8 samples, 0.04%)</title><rect x="148.8" y="1605" width="0.5" height="15.0" fill="rgb(213,43,31)" rx="2" ry="2" />
<text  x="151.77" y="1615.5" ></text>
</g>
<g >
<title>__sanitizer::internal_munmap (3 samples, 0.02%)</title><rect x="87.0" y="1765" width="0.2" height="15.0" fill="rgb(213,152,17)" rx="2" ry="2" />
<text  x="89.98" y="1775.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (2 samples, 0.01%)</title><rect x="597.1" y="1877" width="0.1" height="15.0" fill="rgb(247,154,9)" rx="2" ry="2" />
<text  x="600.10" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1187.6" y="853" width="0.4" height="15.0" fill="rgb(206,117,26)" rx="2" ry="2" />
<text  x="1190.61" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1186.9" y="773" width="0.5" height="15.0" fill="rgb(205,24,39)" rx="2" ry="2" />
<text  x="1189.95" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="162.7" y="1317" width="0.1" height="15.0" fill="rgb(214,5,41)" rx="2" ry="2" />
<text  x="165.65" y="1327.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (55 samples, 0.28%)</title><rect x="818.0" y="2037" width="3.3" height="15.0" fill="rgb(222,51,25)" rx="2" ry="2" />
<text  x="821.00" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="162.3" y="1573" width="0.2" height="15.0" fill="rgb(212,208,41)" rx="2" ry="2" />
<text  x="165.29" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="162.5" y="1685" width="0.3" height="15.0" fill="rgb(242,201,21)" rx="2" ry="2" />
<text  x="165.47" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (347 samples, 1.76%)</title><rect x="55.3" y="325" width="20.7" height="15.0" fill="rgb(205,215,25)" rx="2" ry="2" />
<text  x="58.28" y="335.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotPut (4 samples, 0.02%)</title><rect x="598.2" y="1877" width="0.3" height="15.0" fill="rgb(250,102,45)" rx="2" ry="2" />
<text  x="601.24" y="1887.5" ></text>
</g>
<g >
<title>__dynamic_cast (4 samples, 0.02%)</title><rect x="139.8" y="1621" width="0.2" height="15.0" fill="rgb(222,89,7)" rx="2" ry="2" />
<text  x="142.80" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (409 samples, 2.07%)</title><rect x="163.2" y="1861" width="24.5" height="15.0" fill="rgb(226,211,0)" rx="2" ry="2" />
<text  x="166.19" y="1871.5" >s..</text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="81.1" y="1317" width="0.1" height="15.0" fill="rgb(214,58,22)" rx="2" ry="2" />
<text  x="84.12" y="1327.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find (11 samples, 0.06%)</title><rect x="756.2" y="1909" width="0.7" height="15.0" fill="rgb(236,137,8)" rx="2" ry="2" />
<text  x="759.21" y="1919.5" ></text>
</g>
<g >
<title>nlohmann::detail::external_constructor&lt; (2 samples, 0.01%)</title><rect x="520.7" y="1989" width="0.1" height="15.0" fill="rgb(232,84,15)" rx="2" ry="2" />
<text  x="523.65" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1186.9" y="1365" width="0.5" height="15.0" fill="rgb(240,164,6)" rx="2" ry="2" />
<text  x="1189.95" y="1375.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.04%)</title><rect x="159.7" y="1669" width="0.4" height="15.0" fill="rgb(252,40,24)" rx="2" ry="2" />
<text  x="162.72" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="218.3" y="1381" width="0.2" height="15.0" fill="rgb(217,193,26)" rx="2" ry="2" />
<text  x="221.28" y="1391.5" ></text>
</g>
<g >
<title>smp_call_function_single (24 samples, 0.12%)</title><rect x="949.3" y="1829" width="1.4" height="15.0" fill="rgb(219,227,26)" rx="2" ry="2" />
<text  x="952.30" y="1839.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::basic_json (4 samples, 0.02%)</title><rect x="521.8" y="1829" width="0.3" height="15.0" fill="rgb(251,220,31)" rx="2" ry="2" />
<text  x="524.85" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="162.7" y="1221" width="0.1" height="15.0" fill="rgb(231,5,30)" rx="2" ry="2" />
<text  x="165.65" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (77 samples, 0.39%)</title><rect x="212.3" y="1733" width="4.6" height="15.0" fill="rgb(206,145,0)" rx="2" ry="2" />
<text  x="215.30" y="1743.5" ></text>
</g>
<g >
<title>__asan::Allocator::Deallocate (2 samples, 0.01%)</title><rect x="592.7" y="1877" width="0.1" height="15.0" fill="rgb(229,226,18)" rx="2" ry="2" />
<text  x="595.67" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1186.9" y="661" width="0.5" height="15.0" fill="rgb(234,95,2)" rx="2" ry="2" />
<text  x="1189.95" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (6 samples, 0.03%)</title><rect x="217.6" y="1893" width="0.4" height="15.0" fill="rgb(251,79,0)" rx="2" ry="2" />
<text  x="220.62" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="188.9" y="1461" width="0.1" height="15.0" fill="rgb(249,194,10)" rx="2" ry="2" />
<text  x="191.91" y="1471.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::emplace_back&lt;char const*&amp;, unsigned int&amp;&gt; (2 samples, 0.01%)</title><rect x="735.9" y="1877" width="0.1" height="15.0" fill="rgb(254,159,10)" rx="2" ry="2" />
<text  x="738.87" y="1887.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (5 samples, 0.03%)</title><rect x="92.2" y="2005" width="0.3" height="15.0" fill="rgb(208,20,16)" rx="2" ry="2" />
<text  x="95.19" y="2015.5" ></text>
</g>
<g >
<title>fasttext::FastText::loadModel (11 samples, 0.06%)</title><rect x="519.5" y="2005" width="0.7" height="15.0" fill="rgb(254,188,26)" rx="2" ry="2" />
<text  x="522.52" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.5" y="1685" width="0.5" height="15.0" fill="rgb(241,225,22)" rx="2" ry="2" />
<text  x="1190.55" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.6" y="773" width="0.4" height="15.0" fill="rgb(208,204,40)" rx="2" ry="2" />
<text  x="1190.61" y="783.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (5 samples, 0.03%)</title><rect x="205.3" y="1605" width="0.3" height="15.0" fill="rgb(244,40,32)" rx="2" ry="2" />
<text  x="208.30" y="1615.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (8 samples, 0.04%)</title><rect x="1127.7" y="2037" width="0.4" height="15.0" fill="rgb(239,115,42)" rx="2" ry="2" />
<text  x="1130.67" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1187.4" y="1989" width="0.1" height="15.0" fill="rgb(212,185,52)" rx="2" ry="2" />
<text  x="1190.37" y="1999.5" ></text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.02%)</title><rect x="150.6" y="1669" width="0.2" height="15.0" fill="rgb(227,154,8)" rx="2" ry="2" />
<text  x="153.63" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="218.2" y="1653" width="0.3" height="15.0" fill="rgb(238,79,20)" rx="2" ry="2" />
<text  x="221.22" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (409 samples, 2.07%)</title><rect x="163.2" y="1845" width="24.5" height="15.0" fill="rgb(227,36,53)" rx="2" ry="2" />
<text  x="166.19" y="1855.5" >s..</text>
</g>
<g >
<title>cap_mmap_file (2 samples, 0.01%)</title><rect x="1103.1" y="1957" width="0.2" height="15.0" fill="rgb(207,40,20)" rx="2" ry="2" />
<text  x="1106.15" y="1967.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (2 samples, 0.01%)</title><rect x="86.4" y="1685" width="0.1" height="15.0" fill="rgb(216,148,36)" rx="2" ry="2" />
<text  x="89.39" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (12 samples, 0.06%)</title><rect x="1186.8" y="2053" width="0.7" height="15.0" fill="rgb(247,30,53)" rx="2" ry="2" />
<text  x="1189.83" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="162.7" y="1269" width="0.1" height="15.0" fill="rgb(209,20,16)" rx="2" ry="2" />
<text  x="165.65" y="1279.5" ></text>
</g>
<g >
<title>__sanitizer::internal_munmap (2 samples, 0.01%)</title><rect x="86.4" y="1733" width="0.1" height="15.0" fill="rgb(240,6,53)" rx="2" ry="2" />
<text  x="89.39" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (7 samples, 0.04%)</title><rect x="211.8" y="1781" width="0.4" height="15.0" fill="rgb(230,171,43)" rx="2" ry="2" />
<text  x="214.76" y="1791.5" ></text>
</g>
<g >
<title>alloc_pages_vma (6 samples, 0.03%)</title><rect x="54.4" y="1909" width="0.3" height="15.0" fill="rgb(224,64,6)" rx="2" ry="2" />
<text  x="57.38" y="1919.5" ></text>
</g>
<g >
<title>onmt::Tokenizer::finalize_tokens (84 samples, 0.43%)</title><rect x="575.3" y="1909" width="5.0" height="15.0" fill="rgb(244,7,1)" rx="2" ry="2" />
<text  x="578.27" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.0" y="69" width="0.4" height="15.0" fill="rgb(248,184,47)" rx="2" ry="2" />
<text  x="1190.01" y="79.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::pushHash (323 samples, 1.64%)</title><rect x="552.3" y="1877" width="19.3" height="15.0" fill="rgb(244,174,1)" rx="2" ry="2" />
<text  x="555.30" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="188.9" y="1669" width="0.1" height="15.0" fill="rgb(241,121,21)" rx="2" ry="2" />
<text  x="191.91" y="1679.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (1,122 samples, 5.69%)</title><rect x="1034.4" y="2053" width="67.1" height="15.0" fill="rgb(254,11,31)" rx="2" ry="2" />
<text  x="1037.42" y="2063.5" >__sanit..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.4" y="821" width="0.1" height="15.0" fill="rgb(237,137,54)" rx="2" ry="2" />
<text  x="1190.43" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1187.4" y="69" width="0.1" height="15.0" fill="rgb(250,226,43)" rx="2" ry="2" />
<text  x="1190.43" y="79.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="85.8" y="1653" width="0.2" height="15.0" fill="rgb(220,16,6)" rx="2" ry="2" />
<text  x="88.85" y="1663.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (22 samples, 0.11%)</title><rect x="945.3" y="1909" width="1.3" height="15.0" fill="rgb(252,223,26)" rx="2" ry="2" />
<text  x="948.29" y="1919.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (3 samples, 0.02%)</title><rect x="405.7" y="1941" width="0.2" height="15.0" fill="rgb(220,11,40)" rx="2" ry="2" />
<text  x="408.75" y="1951.5" ></text>
</g>
<g >
<title>onmt::add_final_token&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (48 samples, 0.24%)</title><rect x="577.3" y="1893" width="2.9" height="15.0" fill="rgb(249,62,49)" rx="2" ry="2" />
<text  x="580.30" y="1903.5" ></text>
</g>
<g >
<title>unmap_single_vma (4 samples, 0.02%)</title><rect x="768.5" y="1909" width="0.2" height="15.0" fill="rgb(219,50,14)" rx="2" ry="2" />
<text  x="771.47" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (101 samples, 0.51%)</title><rect x="200.6" y="1733" width="6.0" height="15.0" fill="rgb(206,98,11)" rx="2" ry="2" />
<text  x="203.58" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (359 samples, 1.82%)</title><rect x="55.3" y="757" width="21.5" height="15.0" fill="rgb(237,185,6)" rx="2" ry="2" />
<text  x="58.28" y="767.5" >[..</text>
</g>
<g >
<title>[unknown] (359 samples, 1.82%)</title><rect x="55.3" y="773" width="21.5" height="15.0" fill="rgb(215,213,28)" rx="2" ry="2" />
<text  x="58.28" y="783.5" >[..</text>
</g>
<g >
<title>[unknown] (362 samples, 1.84%)</title><rect x="55.3" y="997" width="21.6" height="15.0" fill="rgb(206,126,31)" rx="2" ry="2" />
<text  x="58.28" y="1007.5" >[..</text>
</g>
<g >
<title>ComputeClusterWeight (918 samples, 4.65%)</title><rect x="134.4" y="1989" width="54.9" height="15.0" fill="rgb(206,160,11)" rx="2" ry="2" />
<text  x="137.36" y="1999.5" >Compu..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (132 samples, 0.67%)</title><rect x="1113.9" y="2053" width="7.8" height="15.0" fill="rgb(209,86,13)" rx="2" ry="2" />
<text  x="1116.85" y="2063.5" ></text>
</g>
<g >
<title>__vm_munmap (2 samples, 0.01%)</title><rect x="86.4" y="1669" width="0.1" height="15.0" fill="rgb(213,219,41)" rx="2" ry="2" />
<text  x="89.39" y="1679.5" ></text>
</g>
<g >
<title>__asan_memcpy (10 samples, 0.05%)</title><rect x="617.9" y="1845" width="0.6" height="15.0" fill="rgb(210,56,17)" rx="2" ry="2" />
<text  x="620.92" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1186.9" y="1589" width="0.5" height="15.0" fill="rgb(212,129,10)" rx="2" ry="2" />
<text  x="1189.95" y="1599.5" ></text>
</g>
<g >
<title>__pthread_getspecific (51 samples, 0.26%)</title><rect x="1174.4" y="2037" width="3.0" height="15.0" fill="rgb(248,62,45)" rx="2" ry="2" />
<text  x="1177.39" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.5" y="1733" width="0.5" height="15.0" fill="rgb(215,175,49)" rx="2" ry="2" />
<text  x="1190.55" y="1743.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (2 samples, 0.01%)</title><rect x="55.0" y="1909" width="0.1" height="15.0" fill="rgb(248,182,54)" rx="2" ry="2" />
<text  x="57.98" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1186.9" y="213" width="0.5" height="15.0" fill="rgb(219,36,30)" rx="2" ry="2" />
<text  x="1189.95" y="223.5" ></text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::xsgetn (2 samples, 0.01%)</title><rect x="1113.7" y="2053" width="0.2" height="15.0" fill="rgb(214,170,4)" rx="2" ry="2" />
<text  x="1116.73" y="2063.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (2 samples, 0.01%)</title><rect x="91.3" y="1925" width="0.1" height="15.0" fill="rgb(231,157,43)" rx="2" ry="2" />
<text  x="94.29" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1186.9" y="933" width="0.5" height="15.0" fill="rgb(205,130,30)" rx="2" ry="2" />
<text  x="1189.95" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="188.9" y="1685" width="0.1" height="15.0" fill="rgb(249,99,20)" rx="2" ry="2" />
<text  x="191.91" y="1695.5" ></text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::next_byte_in_range (40 samples, 0.20%)</title><rect x="130.8" y="1925" width="2.4" height="15.0" fill="rgb(222,152,3)" rx="2" ry="2" />
<text  x="133.77" y="1935.5" ></text>
</g>
<g >
<title>__asan_memcpy@plt (2 samples, 0.01%)</title><rect x="685.1" y="1861" width="0.2" height="15.0" fill="rgb(217,43,51)" rx="2" ry="2" />
<text  x="688.15" y="1871.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::json_value::destroy (2 samples, 0.01%)</title><rect x="520.3" y="1973" width="0.1" height="15.0" fill="rgb(244,59,43)" rx="2" ry="2" />
<text  x="523.29" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="218.2" y="1941" width="0.3" height="15.0" fill="rgb(240,25,35)" rx="2" ry="2" />
<text  x="221.16" y="1951.5" ></text>
</g>
<g >
<title>fasttext::Matrix::size (35 samples, 0.18%)</title><rect x="330.7" y="1973" width="2.1" height="15.0" fill="rgb(211,63,27)" rx="2" ry="2" />
<text  x="333.74" y="1983.5" ></text>
</g>
<g >
<title>generic_exec_single (23 samples, 0.12%)</title><rect x="949.4" y="1813" width="1.3" height="15.0" fill="rgb(218,183,42)" rx="2" ry="2" />
<text  x="952.36" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (348 samples, 1.76%)</title><rect x="55.3" y="357" width="20.8" height="15.0" fill="rgb(239,88,44)" rx="2" ry="2" />
<text  x="58.28" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1186.9" y="357" width="0.5" height="15.0" fill="rgb(230,90,30)" rx="2" ry="2" />
<text  x="1189.95" y="367.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (2 samples, 0.01%)</title><rect x="165.9" y="1541" width="0.2" height="15.0" fill="rgb(222,100,15)" rx="2" ry="2" />
<text  x="168.94" y="1551.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (12 samples, 0.06%)</title><rect x="767.6" y="1989" width="0.8" height="15.0" fill="rgb(218,125,30)" rx="2" ry="2" />
<text  x="770.64" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.5" y="1653" width="0.5" height="15.0" fill="rgb(234,43,45)" rx="2" ry="2" />
<text  x="1190.55" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (360 samples, 1.82%)</title><rect x="55.3" y="885" width="21.5" height="15.0" fill="rgb(216,79,27)" rx="2" ry="2" />
<text  x="58.28" y="895.5" >[..</text>
</g>
</g>
</svg>
