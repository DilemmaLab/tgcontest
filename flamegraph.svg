<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="2134" onload="init(evt)" viewBox="0 0 1200 2134" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="2134.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="2117" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="2117" > </text>
<g id="frames">
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.7" y="405" width="0.2" height="15.0" fill="rgb(233,0,52)" rx="2" ry="2" />
<text  x="1171.70" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (25 samples, 0.43%)</title><rect x="132.1" y="1797" width="5.1" height="15.0" fill="rgb(222,107,37)" rx="2" ry="2" />
<text  x="135.10" y="1807.5" ></text>
</g>
<g >
<title>get_user_pages_fast (1 samples, 0.02%)</title><rect x="102.5" y="1845" width="0.2" height="15.0" fill="rgb(247,215,9)" rx="2" ry="2" />
<text  x="105.49" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="171.6" y="1605" width="0.2" height="15.0" fill="rgb(231,141,23)" rx="2" ry="2" />
<text  x="174.65" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="138.0" y="1909" width="0.6" height="15.0" fill="rgb(215,156,5)" rx="2" ry="2" />
<text  x="140.98" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (163 samples, 2.80%)</title><rect x="173.7" y="1797" width="33.0" height="15.0" fill="rgb(235,94,5)" rx="2" ry="2" />
<text  x="176.67" y="1807.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="138.2" y="1749" width="0.4" height="15.0" fill="rgb(253,8,41)" rx="2" ry="2" />
<text  x="141.18" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.3" y="1989" width="0.2" height="15.0" fill="rgb(242,130,35)" rx="2" ry="2" />
<text  x="1171.30" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.3" y="917" width="0.2" height="15.0" fill="rgb(229,21,2)" rx="2" ry="2" />
<text  x="1171.30" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="218.5" y="853" width="0.2" height="15.0" fill="rgb(233,123,51)" rx="2" ry="2" />
<text  x="221.50" y="863.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="137.6" y="1749" width="0.2" height="15.0" fill="rgb(254,104,39)" rx="2" ry="2" />
<text  x="140.57" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.3" y="1653" width="0.2" height="15.0" fill="rgb(230,37,54)" rx="2" ry="2" />
<text  x="1171.30" y="1663.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (11 samples, 0.19%)</title><rect x="228.4" y="1989" width="2.3" height="15.0" fill="rgb(209,25,36)" rx="2" ry="2" />
<text  x="231.44" y="1999.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (47 samples, 0.81%)</title><rect x="1177.2" y="2037" width="9.6" height="15.0" fill="rgb(226,166,43)" rx="2" ry="2" />
<text  x="1180.22" y="2047.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::do_tolower (1 samples, 0.02%)</title><rect x="156.8" y="1621" width="0.2" height="15.0" fill="rgb(231,106,19)" rx="2" ry="2" />
<text  x="159.84" y="1631.5" ></text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.02%)</title><rect x="79.8" y="1909" width="0.2" height="15.0" fill="rgb(217,228,13)" rx="2" ry="2" />
<text  x="82.77" y="1919.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="578.1" y="1973" width="0.4" height="15.0" fill="rgb(250,134,47)" rx="2" ry="2" />
<text  x="581.10" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.4" y="837" width="0.2" height="15.0" fill="rgb(254,158,4)" rx="2" ry="2" />
<text  x="141.38" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.5" y="901" width="0.2" height="15.0" fill="rgb(244,186,41)" rx="2" ry="2" />
<text  x="1171.50" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.7" y="597" width="0.2" height="15.0" fill="rgb(211,84,6)" rx="2" ry="2" />
<text  x="1171.70" y="607.5" ></text>
</g>
<g >
<title>malloc@plt (1 samples, 0.02%)</title><rect x="201.1" y="1669" width="0.2" height="15.0" fill="rgb(233,81,31)" rx="2" ry="2" />
<text  x="204.06" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.7" y="1429" width="0.2" height="15.0" fill="rgb(243,92,48)" rx="2" ry="2" />
<text  x="1171.70" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (30 samples, 0.52%)</title><rect x="102.7" y="1685" width="6.1" height="15.0" fill="rgb(212,108,54)" rx="2" ry="2" />
<text  x="105.69" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (1 samples, 0.02%)</title><rect x="206.7" y="1749" width="0.2" height="15.0" fill="rgb(228,177,39)" rx="2" ry="2" />
<text  x="209.73" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="171.8" y="1685" width="0.3" height="15.0" fill="rgb(217,194,29)" rx="2" ry="2" />
<text  x="174.85" y="1695.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::reserve (3 samples, 0.05%)</title><rect x="645.4" y="1861" width="0.6" height="15.0" fill="rgb(209,198,7)" rx="2" ry="2" />
<text  x="648.43" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.5" y="1829" width="0.2" height="15.0" fill="rgb(247,126,8)" rx="2" ry="2" />
<text  x="1171.50" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.7" y="53" width="0.2" height="15.0" fill="rgb(220,177,25)" rx="2" ry="2" />
<text  x="1171.70" y="63.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.7" y="325" width="0.2" height="15.0" fill="rgb(254,169,54)" rx="2" ry="2" />
<text  x="1171.70" y="335.5" ></text>
</g>
<g >
<title>page_fault (31 samples, 0.53%)</title><rect x="431.5" y="1941" width="6.2" height="15.0" fill="rgb(232,138,40)" rx="2" ry="2" />
<text  x="434.46" y="1951.5" ></text>
</g>
<g >
<title>std::locale::~locale (1 samples, 0.02%)</title><rect x="171.4" y="1909" width="0.2" height="15.0" fill="rgb(224,50,3)" rx="2" ry="2" />
<text  x="174.44" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="218.5" y="1253" width="0.2" height="15.0" fill="rgb(240,91,30)" rx="2" ry="2" />
<text  x="221.50" y="1263.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::pushHash (8 samples, 0.14%)</title><rect x="869.5" y="2037" width="1.7" height="15.0" fill="rgb(235,106,34)" rx="2" ry="2" />
<text  x="872.55" y="2047.5" ></text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.02%)</title><rect x="86.5" y="1861" width="0.2" height="15.0" fill="rgb(235,55,0)" rx="2" ry="2" />
<text  x="89.46" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="218.7" y="789" width="0.2" height="15.0" fill="rgb(208,59,20)" rx="2" ry="2" />
<text  x="221.70" y="799.5" ></text>
</g>
<g >
<title>cfree (1 samples, 0.02%)</title><rect x="209.2" y="1701" width="0.2" height="15.0" fill="rgb(251,88,11)" rx="2" ry="2" />
<text  x="212.17" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.3" y="325" width="0.2" height="15.0" fill="rgb(219,15,51)" rx="2" ry="2" />
<text  x="1171.30" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.7" y="1941" width="0.2" height="15.0" fill="rgb(253,171,32)" rx="2" ry="2" />
<text  x="1171.70" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.7" y="1141" width="0.2" height="15.0" fill="rgb(207,185,9)" rx="2" ry="2" />
<text  x="1171.70" y="1151.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::at (2 samples, 0.03%)</title><rect x="86.1" y="1957" width="0.4" height="15.0" fill="rgb(217,142,9)" rx="2" ry="2" />
<text  x="89.06" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.2" y="1109" width="0.2" height="15.0" fill="rgb(220,189,19)" rx="2" ry="2" />
<text  x="141.18" y="1119.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (3 samples, 0.05%)</title><rect x="168.4" y="1669" width="0.6" height="15.0" fill="rgb(205,209,3)" rx="2" ry="2" />
<text  x="171.40" y="1679.5" ></text>
</g>
<g >
<title>cfree (2 samples, 0.03%)</title><rect x="230.7" y="1989" width="0.4" height="15.0" fill="rgb(238,51,5)" rx="2" ry="2" />
<text  x="233.67" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.5" y="1893" width="0.2" height="15.0" fill="rgb(217,199,21)" rx="2" ry="2" />
<text  x="1171.50" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.5" y="149" width="0.2" height="15.0" fill="rgb(206,209,45)" rx="2" ry="2" />
<text  x="1171.50" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.5" y="1525" width="0.2" height="15.0" fill="rgb(231,229,38)" rx="2" ry="2" />
<text  x="1171.50" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.3" y="1557" width="0.2" height="15.0" fill="rgb(253,154,6)" rx="2" ry="2" />
<text  x="1171.30" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="437" width="1.0" height="15.0" fill="rgb(220,18,50)" rx="2" ry="2" />
<text  x="83.58" y="447.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (3 samples, 0.05%)</title><rect x="188.9" y="1605" width="0.6" height="15.0" fill="rgb(223,131,18)" rx="2" ry="2" />
<text  x="191.89" y="1615.5" ></text>
</g>
<g >
<title>tgnews (5,818 samples, 100.00%)</title><rect x="10.0" y="2069" width="1180.0" height="15.0" fill="rgb(253,81,50)" rx="2" ry="2" />
<text  x="13.00" y="2079.5" >tgnews</text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="576.9" y="1973" width="0.2" height="15.0" fill="rgb(227,15,29)" rx="2" ry="2" />
<text  x="579.88" y="1983.5" ></text>
</g>
<g >
<title>std::locale::locale (3 samples, 0.05%)</title><rect x="38.0" y="2021" width="0.6" height="15.0" fill="rgb(234,18,25)" rx="2" ry="2" />
<text  x="40.99" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.4" y="693" width="0.2" height="15.0" fill="rgb(216,94,15)" rx="2" ry="2" />
<text  x="141.38" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.7" y="277" width="0.2" height="15.0" fill="rgb(209,122,26)" rx="2" ry="2" />
<text  x="1171.70" y="287.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::getLine (1 samples, 0.02%)</title><rect x="869.1" y="2037" width="0.2" height="15.0" fill="rgb(214,206,40)" rx="2" ry="2" />
<text  x="872.14" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="1813" width="1.0" height="15.0" fill="rgb(215,17,38)" rx="2" ry="2" />
<text  x="83.58" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (30 samples, 0.52%)</title><rect x="138.8" y="1637" width="6.1" height="15.0" fill="rgb(217,162,42)" rx="2" ry="2" />
<text  x="141.79" y="1647.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::basic_regex&lt;char const*&gt; (163 samples, 2.80%)</title><rect x="138.6" y="1941" width="33.0" height="15.0" fill="rgb(249,89,21)" rx="2" ry="2" />
<text  x="141.59" y="1951.5" >st..</text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="1333" width="1.0" height="15.0" fill="rgb(219,137,15)" rx="2" ry="2" />
<text  x="83.58" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="171.8" y="1381" width="0.3" height="15.0" fill="rgb(212,88,28)" rx="2" ry="2" />
<text  x="174.85" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="218.9" y="1781" width="0.2" height="15.0" fill="rgb(235,45,20)" rx="2" ry="2" />
<text  x="221.90" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="1093" width="1.0" height="15.0" fill="rgb(243,68,24)" rx="2" ry="2" />
<text  x="83.58" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (171 samples, 2.94%)</title><rect x="102.7" y="1845" width="34.7" height="15.0" fill="rgb(212,12,31)" rx="2" ry="2" />
<text  x="105.69" y="1855.5" >st..</text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="1557" width="1.0" height="15.0" fill="rgb(227,93,37)" rx="2" ry="2" />
<text  x="83.58" y="1567.5" ></text>
</g>
<g >
<title>onmt::CaseModifier::type_to_char@plt (1 samples, 0.02%)</title><rect x="592.9" y="1893" width="0.2" height="15.0" fill="rgb(234,142,21)" rx="2" ry="2" />
<text  x="595.90" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="218.5" y="1061" width="0.2" height="15.0" fill="rgb(218,106,28)" rx="2" ry="2" />
<text  x="221.50" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_try_char (1 samples, 0.02%)</title><rect x="137.4" y="1845" width="0.2" height="15.0" fill="rgb(234,121,48)" rx="2" ry="2" />
<text  x="140.37" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.2" y="661" width="0.2" height="15.0" fill="rgb(249,86,25)" rx="2" ry="2" />
<text  x="141.18" y="671.5" ></text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.02%)</title><rect x="79.8" y="1941" width="0.2" height="15.0" fill="rgb(253,59,31)" rx="2" ry="2" />
<text  x="82.77" y="1951.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (1 samples, 0.02%)</title><rect x="113.0" y="1605" width="0.2" height="15.0" fill="rgb(206,132,20)" rx="2" ry="2" />
<text  x="116.03" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.3" y="1765" width="0.2" height="15.0" fill="rgb(232,73,8)" rx="2" ry="2" />
<text  x="1171.30" y="1775.5" ></text>
</g>
<g >
<title>onmt::Tokenizer::tokenize (1,319 samples, 22.67%)</title><rect x="596.3" y="1909" width="267.6" height="15.0" fill="rgb(236,198,18)" rx="2" ry="2" />
<text  x="599.35" y="1919.5" >onmt::Tokenizer::tokenize</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.2" y="853" width="0.2" height="15.0" fill="rgb(208,146,28)" rx="2" ry="2" />
<text  x="141.18" y="863.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="646.0" y="1877" width="0.2" height="15.0" fill="rgb(229,193,28)" rx="2" ry="2" />
<text  x="649.04" y="1887.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="80.6" y="69" width="0.2" height="15.0" fill="rgb(232,114,43)" rx="2" ry="2" />
<text  x="83.58" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="171.6" y="1845" width="0.5" height="15.0" fill="rgb(217,170,2)" rx="2" ry="2" />
<text  x="174.65" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.2" y="1157" width="0.2" height="15.0" fill="rgb(231,147,20)" rx="2" ry="2" />
<text  x="141.18" y="1167.5" ></text>
</g>
<g >
<title>__x64_sys_read (4 samples, 0.07%)</title><rect x="84.4" y="1989" width="0.8" height="15.0" fill="rgb(244,185,16)" rx="2" ry="2" />
<text  x="87.43" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="138.2" y="1781" width="0.4" height="15.0" fill="rgb(229,109,50)" rx="2" ry="2" />
<text  x="141.18" y="1791.5" ></text>
</g>
<g >
<title>onmt::unicode::get_lower (6 samples, 0.10%)</title><rect x="766.3" y="1893" width="1.2" height="15.0" fill="rgb(233,141,27)" rx="2" ry="2" />
<text  x="769.31" y="1903.5" ></text>
</g>
<g >
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="871.0" y="1941" width="0.2" height="15.0" fill="rgb(244,160,44)" rx="2" ry="2" />
<text  x="873.97" y="1951.5" ></text>
</g>
<g >
<title>__pthread_once (1 samples, 0.02%)</title><rect x="897.5" y="2005" width="0.2" height="15.0" fill="rgb(217,100,45)" rx="2" ry="2" />
<text  x="900.54" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.3" y="725" width="0.2" height="15.0" fill="rgb(231,45,39)" rx="2" ry="2" />
<text  x="1171.30" y="735.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="137.0" y="1701" width="0.2" height="15.0" fill="rgb(240,162,36)" rx="2" ry="2" />
<text  x="139.96" y="1711.5" ></text>
</g>
<g >
<title>std::__future_base::_Task_state&lt;std::_Bind&lt;Annotate (1 samples, 0.02%)</title><rect x="39.4" y="2021" width="0.2" height="15.0" fill="rgb(236,128,9)" rx="2" ry="2" />
<text  x="42.41" y="2031.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (8 samples, 0.14%)</title><rect x="81.6" y="2005" width="1.6" height="15.0" fill="rgb(218,183,11)" rx="2" ry="2" />
<text  x="84.60" y="2015.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="185.0" y="1573" width="0.2" height="15.0" fill="rgb(217,88,24)" rx="2" ry="2" />
<text  x="188.03" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.4" y="1365" width="0.2" height="15.0" fill="rgb(231,214,22)" rx="2" ry="2" />
<text  x="141.38" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.4" y="757" width="0.2" height="15.0" fill="rgb(210,84,18)" rx="2" ry="2" />
<text  x="141.38" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (4 samples, 0.07%)</title><rect x="215.5" y="1877" width="0.8" height="15.0" fill="rgb(228,40,25)" rx="2" ry="2" />
<text  x="218.46" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.5" y="357" width="0.2" height="15.0" fill="rgb(225,55,48)" rx="2" ry="2" />
<text  x="1171.50" y="367.5" ></text>
</g>
<g >
<title>fasttext::DenseMatrix::addRowToVector (457 samples, 7.85%)</title><rect x="231.1" y="1989" width="92.7" height="15.0" fill="rgb(216,75,13)" rx="2" ry="2" />
<text  x="234.07" y="1999.5" >fasttext::D..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.7" y="661" width="0.2" height="15.0" fill="rgb(212,215,23)" rx="2" ry="2" />
<text  x="1171.70" y="671.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="879.3" y="1989" width="0.2" height="15.0" fill="rgb(222,178,32)" rx="2" ry="2" />
<text  x="882.28" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="757" width="1.0" height="15.0" fill="rgb(213,91,34)" rx="2" ry="2" />
<text  x="83.58" y="767.5" ></text>
</g>
<g >
<title>unmap_vmas (3 samples, 0.05%)</title><rect x="458.0" y="1861" width="0.6" height="15.0" fill="rgb(208,61,42)" rx="2" ry="2" />
<text  x="461.03" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="218.5" y="1189" width="0.2" height="15.0" fill="rgb(210,1,54)" rx="2" ry="2" />
<text  x="221.50" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.7" y="389" width="0.2" height="15.0" fill="rgb(218,2,23)" rx="2" ry="2" />
<text  x="1171.70" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.5" y="1285" width="0.2" height="15.0" fill="rgb(254,132,27)" rx="2" ry="2" />
<text  x="1171.50" y="1295.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (33 samples, 0.57%)</title><rect x="1153.3" y="2037" width="6.7" height="15.0" fill="rgb(250,95,47)" rx="2" ry="2" />
<text  x="1156.29" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (22 samples, 0.38%)</title><rect x="153.2" y="1637" width="4.5" height="15.0" fill="rgb(213,137,35)" rx="2" ry="2" />
<text  x="156.19" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (95 samples, 1.63%)</title><rect x="138.6" y="1765" width="19.3" height="15.0" fill="rgb(218,180,27)" rx="2" ry="2" />
<text  x="141.59" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.5" y="1493" width="0.2" height="15.0" fill="rgb(231,14,37)" rx="2" ry="2" />
<text  x="1171.50" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_subexpr_begin (1 samples, 0.02%)</title><rect x="152.2" y="1701" width="0.2" height="15.0" fill="rgb(231,100,7)" rx="2" ry="2" />
<text  x="155.18" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="1717" width="1.0" height="15.0" fill="rgb(237,181,12)" rx="2" ry="2" />
<text  x="83.58" y="1727.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::getSubwords (2 samples, 0.03%)</title><rect x="323.8" y="1989" width="0.4" height="15.0" fill="rgb(232,218,46)" rx="2" ry="2" />
<text  x="326.76" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.4" y="901" width="0.2" height="15.0" fill="rgb(234,15,16)" rx="2" ry="2" />
<text  x="141.38" y="911.5" ></text>
</g>
<g >
<title>__page_set_anon_rmap (1 samples, 0.02%)</title><rect x="444.0" y="1861" width="0.2" height="15.0" fill="rgb(253,52,34)" rx="2" ry="2" />
<text  x="447.03" y="1871.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="458.2" y="1765" width="0.2" height="15.0" fill="rgb(241,34,24)" rx="2" ry="2" />
<text  x="461.23" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (21 samples, 0.36%)</title><rect x="126.6" y="1669" width="4.3" height="15.0" fill="rgb(242,37,32)" rx="2" ry="2" />
<text  x="129.62" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.2" y="933" width="0.2" height="15.0" fill="rgb(236,74,31)" rx="2" ry="2" />
<text  x="141.18" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="171.6" y="1733" width="0.2" height="15.0" fill="rgb(225,211,49)" rx="2" ry="2" />
<text  x="174.65" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.5" y="1077" width="0.2" height="15.0" fill="rgb(243,112,31)" rx="2" ry="2" />
<text  x="1171.50" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.4" y="677" width="0.2" height="15.0" fill="rgb(232,33,52)" rx="2" ry="2" />
<text  x="141.38" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (1 samples, 0.02%)</title><rect x="137.2" y="1813" width="0.2" height="15.0" fill="rgb(240,229,47)" rx="2" ry="2" />
<text  x="140.17" y="1823.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="173.7" y="1669" width="0.2" height="15.0" fill="rgb(226,81,36)" rx="2" ry="2" />
<text  x="176.67" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (37 samples, 0.64%)</title><rect x="207.1" y="1797" width="7.5" height="15.0" fill="rgb(224,54,34)" rx="2" ry="2" />
<text  x="210.14" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="217.5" y="1701" width="0.4" height="15.0" fill="rgb(238,64,53)" rx="2" ry="2" />
<text  x="220.48" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (1 samples, 0.02%)</title><rect x="163.9" y="1701" width="0.2" height="15.0" fill="rgb(224,46,36)" rx="2" ry="2" />
<text  x="166.94" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.7" y="997" width="0.2" height="15.0" fill="rgb(214,178,30)" rx="2" ry="2" />
<text  x="1171.70" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.3" y="1909" width="0.2" height="15.0" fill="rgb(230,25,4)" rx="2" ry="2" />
<text  x="1171.30" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (210 samples, 3.61%)</title><rect x="173.7" y="1909" width="42.6" height="15.0" fill="rgb(213,59,8)" rx="2" ry="2" />
<text  x="176.67" y="1919.5" >std:..</text>
</g>
<g >
<title>__x64_sys_munmap (3 samples, 0.05%)</title><rect x="458.0" y="1925" width="0.6" height="15.0" fill="rgb(225,8,33)" rx="2" ry="2" />
<text  x="461.03" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.2" y="917" width="0.2" height="15.0" fill="rgb(228,59,19)" rx="2" ry="2" />
<text  x="141.18" y="927.5" ></text>
</g>
<g >
<title>fasttext::ProductQuantizer::addcode (2 samples, 0.03%)</title><rect x="83.4" y="2021" width="0.4" height="15.0" fill="rgb(234,36,14)" rx="2" ry="2" />
<text  x="86.42" y="2031.5" ></text>
</g>
<g >
<title>__do_page_fault (10 samples, 0.17%)</title><rect x="710.5" y="1829" width="2.1" height="15.0" fill="rgb(208,21,43)" rx="2" ry="2" />
<text  x="713.54" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (30 samples, 0.52%)</title><rect x="102.7" y="1637" width="6.1" height="15.0" fill="rgb(215,176,47)" rx="2" ry="2" />
<text  x="105.69" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="1413" width="1.0" height="15.0" fill="rgb(234,145,25)" rx="2" ry="2" />
<text  x="83.58" y="1423.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="159.3" y="1653" width="0.2" height="15.0" fill="rgb(234,45,4)" rx="2" ry="2" />
<text  x="162.27" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="218.7" y="1141" width="0.2" height="15.0" fill="rgb(215,61,18)" rx="2" ry="2" />
<text  x="221.70" y="1151.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (1 samples, 0.02%)</title><rect x="157.0" y="1621" width="0.2" height="15.0" fill="rgb(247,26,42)" rx="2" ry="2" />
<text  x="160.04" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.3" y="1397" width="0.2" height="15.0" fill="rgb(236,204,38)" rx="2" ry="2" />
<text  x="1171.30" y="1407.5" ></text>
</g>
<g >
<title>std::istream::read@plt (1 samples, 0.02%)</title><rect x="1188.6" y="2053" width="0.2" height="15.0" fill="rgb(245,197,10)" rx="2" ry="2" />
<text  x="1191.58" y="2063.5" ></text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.05%)</title><rect x="158.5" y="1653" width="0.6" height="15.0" fill="rgb(221,147,4)" rx="2" ry="2" />
<text  x="161.46" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="171.8" y="1573" width="0.3" height="15.0" fill="rgb(242,204,45)" rx="2" ry="2" />
<text  x="174.85" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="171.6" y="1685" width="0.2" height="15.0" fill="rgb(215,63,53)" rx="2" ry="2" />
<text  x="174.65" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (30 samples, 0.52%)</title><rect x="157.9" y="1765" width="6.0" height="15.0" fill="rgb(224,54,26)" rx="2" ry="2" />
<text  x="160.85" y="1775.5" ></text>
</g>
<g >
<title>operator delete@plt (2 samples, 0.03%)</title><rect x="1117.2" y="2053" width="0.4" height="15.0" fill="rgb(225,85,48)" rx="2" ry="2" />
<text  x="1120.19" y="2063.5" ></text>
</g>
<g >
<title>Eigen::internal::generic_product_impl&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt;, Eigen::DenseShape, Eigen::DenseShape, 8&gt;::evalTo&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt; (28 samples, 0.48%)</title><rect x="424.0" y="1957" width="5.6" height="15.0" fill="rgb(235,131,27)" rx="2" ry="2" />
<text  x="426.95" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="997" width="1.0" height="15.0" fill="rgb(207,120,0)" rx="2" ry="2" />
<text  x="83.58" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.4" y="245" width="0.2" height="15.0" fill="rgb(217,24,11)" rx="2" ry="2" />
<text  x="141.38" y="255.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (2 samples, 0.03%)</title><rect x="122.0" y="1621" width="0.4" height="15.0" fill="rgb(237,45,4)" rx="2" ry="2" />
<text  x="124.96" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="725" width="1.0" height="15.0" fill="rgb(249,4,43)" rx="2" ry="2" />
<text  x="83.58" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (36 samples, 0.62%)</title><rect x="207.3" y="1717" width="7.3" height="15.0" fill="rgb(227,26,25)" rx="2" ry="2" />
<text  x="210.34" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.3" y="1845" width="0.2" height="15.0" fill="rgb(233,153,17)" rx="2" ry="2" />
<text  x="1171.30" y="1855.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (8 samples, 0.14%)</title><rect x="860.6" y="1893" width="1.6" height="15.0" fill="rgb(219,137,5)" rx="2" ry="2" />
<text  x="863.62" y="1903.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (3 samples, 0.05%)</title><rect x="195.6" y="1621" width="0.6" height="15.0" fill="rgb(209,170,44)" rx="2" ry="2" />
<text  x="198.58" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (1 samples, 0.02%)</title><rect x="197.6" y="1685" width="0.2" height="15.0" fill="rgb(251,147,3)" rx="2" ry="2" />
<text  x="200.61" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="218.7" y="1125" width="0.2" height="15.0" fill="rgb(218,7,19)" rx="2" ry="2" />
<text  x="221.70" y="1135.5" ></text>
</g>
<g >
<title>onmt::unicode::is_number (10 samples, 0.17%)</title><rect x="832.6" y="1893" width="2.1" height="15.0" fill="rgb(223,143,31)" rx="2" ry="2" />
<text  x="835.63" y="1903.5" ></text>
</g>
<g >
<title>fasttext::FastText::getDimension (8 samples, 0.14%)</title><rect x="324.2" y="1989" width="1.6" height="15.0" fill="rgb(236,225,0)" rx="2" ry="2" />
<text  x="327.17" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (44 samples, 0.76%)</title><rect x="173.9" y="1669" width="8.9" height="15.0" fill="rgb(213,126,34)" rx="2" ry="2" />
<text  x="176.88" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="949" width="1.0" height="15.0" fill="rgb(240,50,1)" rx="2" ry="2" />
<text  x="83.58" y="959.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id@plt (1 samples, 0.02%)</title><rect x="205.7" y="1669" width="0.2" height="15.0" fill="rgb(251,102,2)" rx="2" ry="2" />
<text  x="208.72" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (1 samples, 0.02%)</title><rect x="215.3" y="1733" width="0.2" height="15.0" fill="rgb(226,193,43)" rx="2" ry="2" />
<text  x="218.25" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.5" y="117" width="0.2" height="15.0" fill="rgb(245,4,46)" rx="2" ry="2" />
<text  x="1171.50" y="127.5" ></text>
</g>
<g >
<title>std::ios_base::~ios_base (1 samples, 0.02%)</title><rect x="340.6" y="1989" width="0.2" height="15.0" fill="rgb(226,133,0)" rx="2" ry="2" />
<text  x="343.59" y="1999.5" ></text>
</g>
<g >
<title>futex_wake (9 samples, 0.15%)</title><rect x="39.8" y="1941" width="1.8" height="15.0" fill="rgb(253,40,52)" rx="2" ry="2" />
<text  x="42.81" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (1 samples, 0.02%)</title><rect x="197.6" y="1701" width="0.2" height="15.0" fill="rgb(233,58,22)" rx="2" ry="2" />
<text  x="200.61" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.07%)</title><rect x="218.1" y="1701" width="0.8" height="15.0" fill="rgb(245,137,27)" rx="2" ry="2" />
<text  x="221.09" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="217.5" y="1653" width="0.4" height="15.0" fill="rgb(224,153,43)" rx="2" ry="2" />
<text  x="220.48" y="1663.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="126.2" y="1669" width="0.2" height="15.0" fill="rgb(231,35,2)" rx="2" ry="2" />
<text  x="129.22" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.3" y="597" width="0.2" height="15.0" fill="rgb(236,0,35)" rx="2" ry="2" />
<text  x="1171.30" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.5" y="293" width="0.2" height="15.0" fill="rgb(209,149,3)" rx="2" ry="2" />
<text  x="1171.50" y="303.5" ></text>
</g>
<g >
<title>free@plt (1 samples, 0.02%)</title><rect x="613.4" y="1893" width="0.2" height="15.0" fill="rgb(240,28,28)" rx="2" ry="2" />
<text  x="616.39" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (1 samples, 0.02%)</title><rect x="215.7" y="1829" width="0.2" height="15.0" fill="rgb(241,221,48)" rx="2" ry="2" />
<text  x="218.66" y="1839.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (4 samples, 0.07%)</title><rect x="1134.0" y="2053" width="0.8" height="15.0" fill="rgb(244,14,31)" rx="2" ry="2" />
<text  x="1137.02" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (24 samples, 0.41%)</title><rect x="152.8" y="1653" width="4.9" height="15.0" fill="rgb(245,165,7)" rx="2" ry="2" />
<text  x="155.78" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (125 samples, 2.15%)</title><rect x="138.6" y="1781" width="25.3" height="15.0" fill="rgb(221,175,21)" rx="2" ry="2" />
<text  x="141.59" y="1791.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.7" y="1765" width="0.2" height="15.0" fill="rgb(207,213,23)" rx="2" ry="2" />
<text  x="1171.70" y="1775.5" ></text>
</g>
<g >
<title>alloc_pages_vma (4 samples, 0.07%)</title><rect x="710.9" y="1781" width="0.9" height="15.0" fill="rgb(232,165,38)" rx="2" ry="2" />
<text  x="713.94" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="171.6" y="1861" width="0.5" height="15.0" fill="rgb(218,14,17)" rx="2" ry="2" />
<text  x="174.65" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (1 samples, 0.02%)</title><rect x="215.5" y="1829" width="0.2" height="15.0" fill="rgb(250,68,10)" rx="2" ry="2" />
<text  x="218.46" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 0.10%)</title><rect x="80.4" y="1877" width="1.2" height="15.0" fill="rgb(245,80,7)" rx="2" ry="2" />
<text  x="83.38" y="1887.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="575.3" y="1973" width="0.2" height="15.0" fill="rgb(249,221,31)" rx="2" ry="2" />
<text  x="578.26" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="218.5" y="949" width="0.2" height="15.0" fill="rgb(226,166,22)" rx="2" ry="2" />
<text  x="221.50" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.2" y="837" width="0.2" height="15.0" fill="rgb(216,9,43)" rx="2" ry="2" />
<text  x="141.18" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="138.2" y="1861" width="0.4" height="15.0" fill="rgb(211,6,54)" rx="2" ry="2" />
<text  x="141.18" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_Compiler (163 samples, 2.80%)</title><rect x="138.6" y="1925" width="33.0" height="15.0" fill="rgb(222,6,10)" rx="2" ry="2" />
<text  x="141.59" y="1935.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="217.7" y="1493" width="0.2" height="15.0" fill="rgb(243,187,6)" rx="2" ry="2" />
<text  x="220.69" y="1503.5" ></text>
</g>
<g >
<title>onmt::unicode::is_letter@plt (7 samples, 0.12%)</title><rect x="831.2" y="1893" width="1.4" height="15.0" fill="rgb(236,81,42)" rx="2" ry="2" />
<text  x="834.21" y="1903.5" ></text>
</g>
<g >
<title>__dynamic_cast (6 samples, 0.10%)</title><rect x="116.7" y="1637" width="1.2" height="15.0" fill="rgb(216,130,8)" rx="2" ry="2" />
<text  x="119.68" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="218.7" y="1045" width="0.2" height="15.0" fill="rgb(210,82,16)" rx="2" ry="2" />
<text  x="221.70" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (1 samples, 0.02%)</title><rect x="206.7" y="1765" width="0.2" height="15.0" fill="rgb(246,203,33)" rx="2" ry="2" />
<text  x="209.73" y="1775.5" ></text>
</g>
<g >
<title>mem_cgroup_commit_charge (1 samples, 0.02%)</title><rect x="712.4" y="1797" width="0.2" height="15.0" fill="rgb(218,28,38)" rx="2" ry="2" />
<text  x="715.36" y="1807.5" ></text>
</g>
<g >
<title>memset@plt (1 samples, 0.02%)</title><rect x="228.2" y="1973" width="0.2" height="15.0" fill="rgb(210,113,24)" rx="2" ry="2" />
<text  x="231.23" y="1983.5" ></text>
</g>
<g >
<title>malloc (3 samples, 0.05%)</title><rect x="184.4" y="1621" width="0.6" height="15.0" fill="rgb(211,14,48)" rx="2" ry="2" />
<text  x="187.42" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.5" y="1189" width="0.2" height="15.0" fill="rgb(226,122,15)" rx="2" ry="2" />
<text  x="1171.50" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.3" y="389" width="0.2" height="15.0" fill="rgb(219,106,53)" rx="2" ry="2" />
<text  x="1171.30" y="399.5" ></text>
</g>
<g >
<title>[unknown] (29 samples, 0.50%)</title><rect x="881.5" y="2021" width="5.9" height="15.0" fill="rgb(218,11,3)" rx="2" ry="2" />
<text  x="884.51" y="2031.5" ></text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::next_byte_in_range (1 samples, 0.02%)</title><rect x="87.7" y="1941" width="0.2" height="15.0" fill="rgb(217,183,25)" rx="2" ry="2" />
<text  x="90.68" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.7" y="1925" width="0.2" height="15.0" fill="rgb(246,18,40)" rx="2" ry="2" />
<text  x="1171.70" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.3" y="261" width="0.2" height="15.0" fill="rgb(228,138,38)" rx="2" ry="2" />
<text  x="1171.30" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="218.7" y="965" width="0.2" height="15.0" fill="rgb(250,2,12)" rx="2" ry="2" />
<text  x="221.70" y="975.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt;,  (13 samples, 0.22%)</title><rect x="216.5" y="1957" width="2.6" height="15.0" fill="rgb(221,136,6)" rx="2" ry="2" />
<text  x="219.47" y="1967.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (4 samples, 0.07%)</title><rect x="84.4" y="1909" width="0.8" height="15.0" fill="rgb(212,174,34)" rx="2" ry="2" />
<text  x="87.43" y="1919.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.02%)</title><rect x="86.5" y="1973" width="0.2" height="15.0" fill="rgb(218,18,36)" rx="2" ry="2" />
<text  x="89.46" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (30 samples, 0.52%)</title><rect x="138.8" y="1669" width="6.1" height="15.0" fill="rgb(235,90,18)" rx="2" ry="2" />
<text  x="141.79" y="1679.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.02%)</title><rect x="134.7" y="1685" width="0.2" height="15.0" fill="rgb(213,90,34)" rx="2" ry="2" />
<text  x="137.73" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (33 samples, 0.57%)</title><rect x="163.9" y="1781" width="6.7" height="15.0" fill="rgb(246,150,46)" rx="2" ry="2" />
<text  x="166.94" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (1 samples, 0.02%)</title><rect x="215.3" y="1813" width="0.2" height="15.0" fill="rgb(219,0,20)" rx="2" ry="2" />
<text  x="218.25" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.5" y="1909" width="0.2" height="15.0" fill="rgb(205,143,22)" rx="2" ry="2" />
<text  x="1171.50" y="1919.5" ></text>
</g>
<g >
<title>std::__move_merge&lt;__gnu_cxx::__normal_iterator&lt;TDocument*, std::vector&lt;TDocument, std::allocator&lt;TDocument&gt; &gt; &gt;, TDocument*, __gnu_cxx::__ops::_Iter_comp_iter&lt;main::$_0&gt; &gt; (1 samples, 0.02%)</title><rect x="581.3" y="1973" width="0.2" height="15.0" fill="rgb(224,99,45)" rx="2" ry="2" />
<text  x="584.34" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.7" y="437" width="0.2" height="15.0" fill="rgb(236,46,17)" rx="2" ry="2" />
<text  x="1171.70" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.5" y="1557" width="0.2" height="15.0" fill="rgb(215,45,25)" rx="2" ry="2" />
<text  x="1171.50" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="218.7" y="1061" width="0.2" height="15.0" fill="rgb(218,4,12)" rx="2" ry="2" />
<text  x="221.70" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="218.5" y="837" width="0.2" height="15.0" fill="rgb(231,68,14)" rx="2" ry="2" />
<text  x="221.50" y="847.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (3 samples, 0.05%)</title><rect x="169.2" y="1685" width="0.6" height="15.0" fill="rgb(252,36,15)" rx="2" ry="2" />
<text  x="172.21" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.7" y="1285" width="0.2" height="15.0" fill="rgb(248,35,39)" rx="2" ry="2" />
<text  x="1171.70" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_try_char (1 samples, 0.02%)</title><rect x="189.9" y="1621" width="0.2" height="15.0" fill="rgb(239,167,10)" rx="2" ry="2" />
<text  x="192.90" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.7" y="789" width="0.2" height="15.0" fill="rgb(228,116,33)" rx="2" ry="2" />
<text  x="1171.70" y="799.5" ></text>
</g>
<g >
<title>__lru_cache_add (2 samples, 0.03%)</title><rect x="711.8" y="1765" width="0.4" height="15.0" fill="rgb(244,113,0)" rx="2" ry="2" />
<text  x="714.75" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="1109" width="1.0" height="15.0" fill="rgb(214,54,37)" rx="2" ry="2" />
<text  x="83.58" y="1119.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="185.0" y="1589" width="0.2" height="15.0" fill="rgb(236,64,24)" rx="2" ry="2" />
<text  x="188.03" y="1599.5" ></text>
</g>
<g >
<title>syscall (11 samples, 0.19%)</title><rect x="39.6" y="2021" width="2.2" height="15.0" fill="rgb(213,94,28)" rx="2" ry="2" />
<text  x="42.61" y="2031.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="227.8" y="1973" width="0.2" height="15.0" fill="rgb(252,131,51)" rx="2" ry="2" />
<text  x="230.83" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (1 samples, 0.02%)</title><rect x="138.8" y="1589" width="0.2" height="15.0" fill="rgb(215,31,12)" rx="2" ry="2" />
<text  x="141.79" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.2" y="725" width="0.2" height="15.0" fill="rgb(228,53,43)" rx="2" ry="2" />
<text  x="141.18" y="735.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (1 samples, 0.02%)</title><rect x="205.5" y="1669" width="0.2" height="15.0" fill="rgb(234,139,51)" rx="2" ry="2" />
<text  x="208.52" y="1679.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="169.0" y="1669" width="0.2" height="15.0" fill="rgb(213,150,2)" rx="2" ry="2" />
<text  x="172.01" y="1679.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (2 samples, 0.03%)</title><rect x="136.4" y="1701" width="0.4" height="15.0" fill="rgb(250,138,15)" rx="2" ry="2" />
<text  x="139.36" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="421" width="1.0" height="15.0" fill="rgb(217,63,2)" rx="2" ry="2" />
<text  x="83.58" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.3" y="1173" width="0.2" height="15.0" fill="rgb(249,19,3)" rx="2" ry="2" />
<text  x="1171.30" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.3" y="565" width="0.2" height="15.0" fill="rgb(206,191,5)" rx="2" ry="2" />
<text  x="1171.30" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="218.5" y="789" width="0.2" height="15.0" fill="rgb(226,56,10)" rx="2" ry="2" />
<text  x="221.50" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.5" y="53" width="0.2" height="15.0" fill="rgb(231,195,16)" rx="2" ry="2" />
<text  x="1171.50" y="63.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.5" y="1269" width="0.2" height="15.0" fill="rgb(248,148,23)" rx="2" ry="2" />
<text  x="1171.50" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (1 samples, 0.02%)</title><rect x="137.2" y="1797" width="0.2" height="15.0" fill="rgb(214,128,11)" rx="2" ry="2" />
<text  x="140.17" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (12 samples, 0.21%)</title><rect x="216.7" y="1909" width="2.4" height="15.0" fill="rgb(218,57,33)" rx="2" ry="2" />
<text  x="219.67" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (2 samples, 0.03%)</title><rect x="137.6" y="1861" width="0.4" height="15.0" fill="rgb(245,52,3)" rx="2" ry="2" />
<text  x="140.57" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.3" y="517" width="0.2" height="15.0" fill="rgb(210,192,48)" rx="2" ry="2" />
<text  x="1171.30" y="527.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="86.5" y="1909" width="0.2" height="15.0" fill="rgb(215,160,52)" rx="2" ry="2" />
<text  x="89.46" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.3" y="1717" width="0.2" height="15.0" fill="rgb(253,182,33)" rx="2" ry="2" />
<text  x="1171.30" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (17 samples, 0.29%)</title><rect x="209.8" y="1701" width="3.4" height="15.0" fill="rgb(217,193,22)" rx="2" ry="2" />
<text  x="212.78" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="885" width="1.0" height="15.0" fill="rgb(252,104,24)" rx="2" ry="2" />
<text  x="83.58" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (1 samples, 0.02%)</title><rect x="183.0" y="1685" width="0.2" height="15.0" fill="rgb(224,138,22)" rx="2" ry="2" />
<text  x="186.00" y="1695.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="35.6" y="2021" width="0.2" height="15.0" fill="rgb(239,80,11)" rx="2" ry="2" />
<text  x="38.56" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.19%)</title><rect x="216.9" y="1829" width="2.2" height="15.0" fill="rgb(224,24,4)" rx="2" ry="2" />
<text  x="219.88" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="217.7" y="1269" width="0.2" height="15.0" fill="rgb(226,108,27)" rx="2" ry="2" />
<text  x="220.69" y="1279.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="955.1" y="2037" width="0.2" height="15.0" fill="rgb(209,152,16)" rx="2" ry="2" />
<text  x="958.14" y="2047.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;,  (1 samples, 0.02%)</title><rect x="173.3" y="1957" width="0.2" height="15.0" fill="rgb(213,36,51)" rx="2" ry="2" />
<text  x="176.27" y="1967.5" ></text>
</g>
<g >
<title>get_futex_key (1 samples, 0.02%)</title><rect x="102.5" y="1861" width="0.2" height="15.0" fill="rgb(237,2,53)" rx="2" ry="2" />
<text  x="105.49" y="1871.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.02%)</title><rect x="41.6" y="1941" width="0.2" height="15.0" fill="rgb(210,202,1)" rx="2" ry="2" />
<text  x="44.64" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (30 samples, 0.52%)</title><rect x="138.8" y="1653" width="6.1" height="15.0" fill="rgb(216,107,31)" rx="2" ry="2" />
<text  x="141.79" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.5" y="437" width="0.2" height="15.0" fill="rgb(245,196,29)" rx="2" ry="2" />
<text  x="1171.50" y="447.5" ></text>
</g>
<g >
<title>try_charge (2 samples, 0.03%)</title><rect x="35.1" y="1925" width="0.5" height="15.0" fill="rgb(227,11,32)" rx="2" ry="2" />
<text  x="38.15" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.5" y="453" width="0.2" height="15.0" fill="rgb(236,74,9)" rx="2" ry="2" />
<text  x="1171.50" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.7" y="1029" width="0.2" height="15.0" fill="rgb(226,186,50)" rx="2" ry="2" />
<text  x="1171.70" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.5" y="1301" width="0.2" height="15.0" fill="rgb(206,72,44)" rx="2" ry="2" />
<text  x="1171.50" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="171.6" y="1909" width="0.5" height="15.0" fill="rgb(225,59,2)" rx="2" ry="2" />
<text  x="174.65" y="1919.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (1 samples, 0.02%)</title><rect x="156.6" y="1605" width="0.2" height="15.0" fill="rgb(207,7,34)" rx="2" ry="2" />
<text  x="159.64" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="138.2" y="1493" width="0.4" height="15.0" fill="rgb(236,117,8)" rx="2" ry="2" />
<text  x="141.18" y="1503.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1047.2" y="2005" width="0.2" height="15.0" fill="rgb(254,219,31)" rx="2" ry="2" />
<text  x="1050.22" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (2 samples, 0.03%)</title><rect x="215.0" y="1829" width="0.5" height="15.0" fill="rgb(242,8,41)" rx="2" ry="2" />
<text  x="218.05" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.7" y="213" width="0.2" height="15.0" fill="rgb(243,141,33)" rx="2" ry="2" />
<text  x="1171.70" y="223.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="228.0" y="1973" width="0.2" height="15.0" fill="rgb(250,146,2)" rx="2" ry="2" />
<text  x="231.03" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.7" y="1525" width="0.2" height="15.0" fill="rgb(218,46,32)" rx="2" ry="2" />
<text  x="1171.70" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.5" y="1173" width="0.2" height="15.0" fill="rgb(233,116,16)" rx="2" ry="2" />
<text  x="1171.50" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.4" y="597" width="0.2" height="15.0" fill="rgb(233,78,52)" rx="2" ry="2" />
<text  x="141.38" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.3" y="981" width="0.2" height="15.0" fill="rgb(207,145,36)" rx="2" ry="2" />
<text  x="1171.30" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (119 samples, 2.05%)</title><rect x="173.7" y="1781" width="24.1" height="15.0" fill="rgb(230,145,0)" rx="2" ry="2" />
<text  x="176.67" y="1791.5" >s..</text>
</g>
<g >
<title>std::locale::id::_M_id@plt (1 samples, 0.02%)</title><rect x="214.0" y="1701" width="0.2" height="15.0" fill="rgb(212,65,45)" rx="2" ry="2" />
<text  x="217.04" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (1 samples, 0.02%)</title><rect x="108.8" y="1669" width="0.2" height="15.0" fill="rgb(220,29,0)" rx="2" ry="2" />
<text  x="111.77" y="1679.5" ></text>
</g>
<g >
<title>TAgencyRating::ScoreUrl (228 samples, 3.92%)</title><rect x="173.1" y="1989" width="46.2" height="15.0" fill="rgb(241,201,53)" rx="2" ry="2" />
<text  x="176.07" y="1999.5" >TAge..</text>
</g>
<g >
<title>prepare_exit_to_usermode (2 samples, 0.03%)</title><rect x="830.8" y="1861" width="0.4" height="15.0" fill="rgb(238,96,49)" rx="2" ry="2" />
<text  x="833.81" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.3" y="149" width="0.2" height="15.0" fill="rgb(241,188,38)" rx="2" ry="2" />
<text  x="1171.30" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (1 samples, 0.02%)</title><rect x="215.7" y="1797" width="0.2" height="15.0" fill="rgb(209,218,14)" rx="2" ry="2" />
<text  x="218.66" y="1807.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1055.9" y="1989" width="0.2" height="15.0" fill="rgb(233,207,5)" rx="2" ry="2" />
<text  x="1058.94" y="1999.5" ></text>
</g>
<g >
<title>TDocument::TDocument (1 samples, 0.02%)</title><rect x="344.2" y="2005" width="0.2" height="15.0" fill="rgb(205,9,53)" rx="2" ry="2" />
<text  x="347.25" y="2015.5" ></text>
</g>
<g >
<title>TSlinkClustering::ClusterBatch (1,152 samples, 19.80%)</title><rect x="344.4" y="1989" width="233.7" height="15.0" fill="rgb(239,14,34)" rx="2" ry="2" />
<text  x="347.45" y="1999.5" >TSlinkClustering::ClusterBatch</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (44 samples, 0.76%)</title><rect x="173.9" y="1621" width="8.9" height="15.0" fill="rgb(231,149,39)" rx="2" ry="2" />
<text  x="176.88" y="1631.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="1055.9" y="1941" width="0.2" height="15.0" fill="rgb(237,28,44)" rx="2" ry="2" />
<text  x="1058.94" y="1951.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (71 samples, 1.22%)</title><rect x="597.2" y="1893" width="14.4" height="15.0" fill="rgb(226,99,42)" rx="2" ry="2" />
<text  x="600.16" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.3" y="245" width="0.2" height="15.0" fill="rgb(211,208,46)" rx="2" ry="2" />
<text  x="1171.30" y="255.5" ></text>
</g>
<g >
<title>std::operator&gt;&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;@plt (2 samples, 0.03%)</title><rect x="343.6" y="1989" width="0.4" height="15.0" fill="rgb(235,177,44)" rx="2" ry="2" />
<text  x="346.64" y="1999.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (3 samples, 0.05%)</title><rect x="180.6" y="1573" width="0.6" height="15.0" fill="rgb(236,32,22)" rx="2" ry="2" />
<text  x="183.57" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (4 samples, 0.07%)</title><rect x="215.5" y="1893" width="0.8" height="15.0" fill="rgb(239,43,49)" rx="2" ry="2" />
<text  x="218.46" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="218.5" y="1013" width="0.2" height="15.0" fill="rgb(245,176,52)" rx="2" ry="2" />
<text  x="221.50" y="1023.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1055.9" y="2037" width="0.2" height="15.0" fill="rgb(250,199,27)" rx="2" ry="2" />
<text  x="1058.94" y="2047.5" ></text>
</g>
<g >
<title>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::dump (4 samples, 0.07%)</title><rect x="579.3" y="1957" width="0.8" height="15.0" fill="rgb(235,175,20)" rx="2" ry="2" />
<text  x="582.31" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.5" y="981" width="0.2" height="15.0" fill="rgb(207,217,5)" rx="2" ry="2" />
<text  x="1171.50" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (1 samples, 0.02%)</title><rect x="137.4" y="1861" width="0.2" height="15.0" fill="rgb(219,128,23)" rx="2" ry="2" />
<text  x="140.37" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.3" y="101" width="0.2" height="15.0" fill="rgb(233,96,18)" rx="2" ry="2" />
<text  x="1171.30" y="111.5" ></text>
</g>
<g >
<title>TDocument::operator= (1 samples, 0.02%)</title><rect x="581.3" y="1957" width="0.2" height="15.0" fill="rgb(224,182,1)" rx="2" ry="2" />
<text  x="584.34" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.7" y="1061" width="0.2" height="15.0" fill="rgb(216,62,13)" rx="2" ry="2" />
<text  x="1171.70" y="1071.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.07%)</title><rect x="84.4" y="2021" width="0.8" height="15.0" fill="rgb(248,102,2)" rx="2" ry="2" />
<text  x="87.43" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.5" y="949" width="0.2" height="15.0" fill="rgb(235,90,39)" rx="2" ry="2" />
<text  x="1171.50" y="959.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="75.1" y="1973" width="0.2" height="15.0" fill="rgb(210,34,47)" rx="2" ry="2" />
<text  x="78.10" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.07%)</title><rect x="218.1" y="1685" width="0.8" height="15.0" fill="rgb(227,53,20)" rx="2" ry="2" />
<text  x="221.09" y="1695.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::_Bind&lt;Annotate (1,411 samples, 24.25%)</title><rect x="582.2" y="1989" width="286.1" height="15.0" fill="rgb(231,38,43)" rx="2" ry="2" />
<text  x="585.15" y="1999.5" >std::__invoke&lt;std::_Bind&lt;Annotate</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.5" y="1397" width="0.2" height="15.0" fill="rgb(219,199,41)" rx="2" ry="2" />
<text  x="1171.50" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.5" y="1861" width="0.2" height="15.0" fill="rgb(220,12,47)" rx="2" ry="2" />
<text  x="1171.50" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.4" y="1189" width="0.2" height="15.0" fill="rgb(230,66,41)" rx="2" ry="2" />
<text  x="141.38" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.7" y="1077" width="0.2" height="15.0" fill="rgb(205,86,3)" rx="2" ry="2" />
<text  x="1171.70" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="218.7" y="645" width="0.2" height="15.0" fill="rgb(217,216,41)" rx="2" ry="2" />
<text  x="221.70" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_subexpr_begin (1 samples, 0.02%)</title><rect x="108.8" y="1685" width="0.2" height="15.0" fill="rgb(206,92,4)" rx="2" ry="2" />
<text  x="111.77" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.5" y="277" width="0.2" height="15.0" fill="rgb(218,46,50)" rx="2" ry="2" />
<text  x="1171.50" y="287.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="38.6" y="2037" width="0.4" height="15.0" fill="rgb(214,204,33)" rx="2" ry="2" />
<text  x="41.60" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.4" y="1077" width="0.2" height="15.0" fill="rgb(215,116,10)" rx="2" ry="2" />
<text  x="141.38" y="1087.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct (7 samples, 0.12%)</title><rect x="1132.4" y="2053" width="1.4" height="15.0" fill="rgb(217,7,3)" rx="2" ry="2" />
<text  x="1135.40" y="2063.5" ></text>
</g>
<g >
<title>malloc (3 samples, 0.05%)</title><rect x="147.1" y="1605" width="0.6" height="15.0" fill="rgb(205,181,10)" rx="2" ry="2" />
<text  x="150.11" y="1615.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (2 samples, 0.03%)</title><rect x="144.3" y="1573" width="0.4" height="15.0" fill="rgb(234,190,45)" rx="2" ry="2" />
<text  x="147.27" y="1583.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (2 samples, 0.03%)</title><rect x="149.3" y="1589" width="0.4" height="15.0" fill="rgb(244,133,36)" rx="2" ry="2" />
<text  x="152.34" y="1599.5" ></text>
</g>
<g >
<title>generic_file_read_iter (4 samples, 0.07%)</title><rect x="84.4" y="1893" width="0.8" height="15.0" fill="rgb(228,71,19)" rx="2" ry="2" />
<text  x="87.43" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.7" y="1989" width="0.2" height="15.0" fill="rgb(226,104,30)" rx="2" ry="2" />
<text  x="1171.70" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.3" y="1829" width="0.2" height="15.0" fill="rgb(218,205,52)" rx="2" ry="2" />
<text  x="1171.30" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="485" width="1.0" height="15.0" fill="rgb(234,210,1)" rx="2" ry="2" />
<text  x="83.58" y="495.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="613" width="1.0" height="15.0" fill="rgb(253,9,20)" rx="2" ry="2" />
<text  x="83.58" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.5" y="933" width="0.2" height="15.0" fill="rgb(235,88,34)" rx="2" ry="2" />
<text  x="1171.50" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (1 samples, 0.02%)</title><rect x="137.8" y="1845" width="0.2" height="15.0" fill="rgb(253,163,26)" rx="2" ry="2" />
<text  x="140.78" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="217.7" y="1301" width="0.2" height="15.0" fill="rgb(226,27,3)" rx="2" ry="2" />
<text  x="220.69" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (1 samples, 0.02%)</title><rect x="152.4" y="1733" width="0.2" height="15.0" fill="rgb(222,197,39)" rx="2" ry="2" />
<text  x="155.38" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="218.5" y="725" width="0.2" height="15.0" fill="rgb(242,29,48)" rx="2" ry="2" />
<text  x="221.50" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (1 samples, 0.02%)</title><rect x="137.6" y="1813" width="0.2" height="15.0" fill="rgb(249,161,5)" rx="2" ry="2" />
<text  x="140.57" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="1493" width="1.0" height="15.0" fill="rgb(245,101,45)" rx="2" ry="2" />
<text  x="83.58" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (1 samples, 0.02%)</title><rect x="215.7" y="1781" width="0.2" height="15.0" fill="rgb(241,128,51)" rx="2" ry="2" />
<text  x="218.66" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="217.5" y="1669" width="0.4" height="15.0" fill="rgb(224,65,39)" rx="2" ry="2" />
<text  x="220.48" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.7" y="1541" width="0.2" height="15.0" fill="rgb(210,121,3)" rx="2" ry="2" />
<text  x="1171.70" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="171.8" y="1349" width="0.3" height="15.0" fill="rgb(227,176,43)" rx="2" ry="2" />
<text  x="174.85" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_expression_term&lt;false, false&gt; (1 samples, 0.02%)</title><rect x="197.2" y="1653" width="0.2" height="15.0" fill="rgb(219,205,30)" rx="2" ry="2" />
<text  x="200.20" y="1663.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::readWord (1 samples, 0.02%)</title><rect x="583.8" y="1957" width="0.2" height="15.0" fill="rgb(240,12,8)" rx="2" ry="2" />
<text  x="586.77" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.5" y="85" width="0.2" height="15.0" fill="rgb(243,173,42)" rx="2" ry="2" />
<text  x="1171.50" y="95.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="35.6" y="2005" width="0.2" height="15.0" fill="rgb(231,19,2)" rx="2" ry="2" />
<text  x="38.56" y="2015.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1097.3" y="2037" width="0.2" height="15.0" fill="rgb(234,128,47)" rx="2" ry="2" />
<text  x="1100.31" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.5" y="501" width="0.2" height="15.0" fill="rgb(205,77,1)" rx="2" ry="2" />
<text  x="1171.50" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (29 samples, 0.50%)</title><rect x="139.0" y="1589" width="5.9" height="15.0" fill="rgb(249,188,47)" rx="2" ry="2" />
<text  x="141.99" y="1599.5" ></text>
</g>
<g >
<title>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::dump (4 samples, 0.07%)</title><rect x="579.3" y="1941" width="0.8" height="15.0" fill="rgb(236,18,11)" rx="2" ry="2" />
<text  x="582.31" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.5" y="69" width="0.2" height="15.0" fill="rgb(243,217,16)" rx="2" ry="2" />
<text  x="1171.50" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (36 samples, 0.62%)</title><rect x="144.9" y="1637" width="7.3" height="15.0" fill="rgb(240,216,34)" rx="2" ry="2" />
<text  x="147.87" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="171.8" y="1717" width="0.3" height="15.0" fill="rgb(229,216,25)" rx="2" ry="2" />
<text  x="174.85" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.7" y="549" width="0.2" height="15.0" fill="rgb(246,30,51)" rx="2" ry="2" />
<text  x="1171.70" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.2" y="1013" width="0.2" height="15.0" fill="rgb(215,191,34)" rx="2" ry="2" />
<text  x="141.18" y="1023.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="41.6" y="1973" width="0.2" height="15.0" fill="rgb(230,24,30)" rx="2" ry="2" />
<text  x="44.64" y="1983.5" ></text>
</g>
<g >
<title>TDocument::PreprocessTextFields (1,396 samples, 23.99%)</title><rect x="584.0" y="1973" width="283.1" height="15.0" fill="rgb(229,52,24)" rx="2" ry="2" />
<text  x="586.98" y="1983.5" >TDocument::PreprocessTextFields</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="171.8" y="1621" width="0.3" height="15.0" fill="rgb(214,65,20)" rx="2" ry="2" />
<text  x="174.85" y="1631.5" ></text>
</g>
<g >
<title>onmt::Tokenizer::tokenize (1,374 samples, 23.62%)</title><rect x="586.8" y="1925" width="278.7" height="15.0" fill="rgb(223,6,8)" rx="2" ry="2" />
<text  x="589.82" y="1935.5" >onmt::Tokenizer::tokenize</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.7" y="1829" width="0.2" height="15.0" fill="rgb(207,87,27)" rx="2" ry="2" />
<text  x="1171.70" y="1839.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (1 samples, 0.02%)</title><rect x="578.1" y="1877" width="0.2" height="15.0" fill="rgb(210,74,10)" rx="2" ry="2" />
<text  x="581.10" y="1887.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (4 samples, 0.07%)</title><rect x="113.2" y="1605" width="0.8" height="15.0" fill="rgb(205,42,18)" rx="2" ry="2" />
<text  x="116.23" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="565" width="1.0" height="15.0" fill="rgb(232,215,27)" rx="2" ry="2" />
<text  x="83.58" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_try_char (1 samples, 0.02%)</title><rect x="197.4" y="1701" width="0.2" height="15.0" fill="rgb(230,62,4)" rx="2" ry="2" />
<text  x="200.40" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="218.5" y="885" width="0.2" height="15.0" fill="rgb(253,41,45)" rx="2" ry="2" />
<text  x="221.50" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.5" y="741" width="0.2" height="15.0" fill="rgb(246,220,15)" rx="2" ry="2" />
<text  x="1171.50" y="751.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="578.3" y="1781" width="0.2" height="15.0" fill="rgb(245,98,8)" rx="2" ry="2" />
<text  x="581.30" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.3" y="501" width="0.2" height="15.0" fill="rgb(227,221,29)" rx="2" ry="2" />
<text  x="1171.30" y="511.5" ></text>
</g>
<g >
<title>__strxfrm_l (3 samples, 0.05%)</title><rect x="925.7" y="2053" width="0.6" height="15.0" fill="rgb(210,2,17)" rx="2" ry="2" />
<text  x="928.73" y="2063.5" ></text>
</g>
<g >
<title>std::locale::operator= (1 samples, 0.02%)</title><rect x="38.6" y="2021" width="0.2" height="15.0" fill="rgb(246,30,53)" rx="2" ry="2" />
<text  x="41.60" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 0.10%)</title><rect x="80.4" y="1941" width="1.2" height="15.0" fill="rgb(236,221,11)" rx="2" ry="2" />
<text  x="83.38" y="1951.5" ></text>
</g>
<g >
<title>do_page_fault (31 samples, 0.53%)</title><rect x="431.5" y="1925" width="6.2" height="15.0" fill="rgb(232,218,14)" rx="2" ry="2" />
<text  x="434.46" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (31 samples, 0.53%)</title><rect x="138.6" y="1701" width="6.3" height="15.0" fill="rgb(241,95,25)" rx="2" ry="2" />
<text  x="141.59" y="1711.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;TDocument, std::allocator&lt;TDocument&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;TDocument, std::allocator&lt;TDocument&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;TDocument, std::allocator&lt;TDocument&gt; &gt; &gt; &gt; &gt;::_M_erase (1 samples, 0.02%)</title><rect x="580.9" y="1989" width="0.2" height="15.0" fill="rgb(216,211,44)" rx="2" ry="2" />
<text  x="583.94" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (36 samples, 0.62%)</title><rect x="144.9" y="1685" width="7.3" height="15.0" fill="rgb(229,216,34)" rx="2" ry="2" />
<text  x="147.87" y="1695.5" ></text>
</g>
<g >
<title>new_sync_read (4 samples, 0.07%)</title><rect x="84.4" y="1925" width="0.8" height="15.0" fill="rgb(213,137,53)" rx="2" ry="2" />
<text  x="87.43" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (45 samples, 0.77%)</title><rect x="173.7" y="1717" width="9.1" height="15.0" fill="rgb(253,166,47)" rx="2" ry="2" />
<text  x="176.67" y="1727.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (2 samples, 0.03%)</title><rect x="196.2" y="1621" width="0.4" height="15.0" fill="rgb(227,180,52)" rx="2" ry="2" />
<text  x="199.19" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (44 samples, 0.76%)</title><rect x="197.8" y="1781" width="8.9" height="15.0" fill="rgb(229,226,9)" rx="2" ry="2" />
<text  x="200.81" y="1791.5" ></text>
</g>
<g >
<title>fasttext::Vector::mul (19 samples, 0.33%)</title><rect x="330.7" y="1989" width="3.8" height="15.0" fill="rgb(237,201,10)" rx="2" ry="2" />
<text  x="333.66" y="1999.5" ></text>
</g>
<g >
<title>Eigen::internal::product_evaluator&lt;Eigen::Product&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0&gt;, 7, Eigen::DenseShape, Eigen::DenseShape, float, float&gt;::product_evaluator (1 samples, 0.02%)</title><rect x="454.8" y="1957" width="0.2" height="15.0" fill="rgb(234,126,20)" rx="2" ry="2" />
<text  x="457.78" y="1967.5" ></text>
</g>
<g >
<title>malloc (6 samples, 0.10%)</title><rect x="879.5" y="2037" width="1.2" height="15.0" fill="rgb(212,32,46)" rx="2" ry="2" />
<text  x="882.48" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="218.7" y="741" width="0.2" height="15.0" fill="rgb(238,214,34)" rx="2" ry="2" />
<text  x="221.70" y="751.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="86.5" y="1877" width="0.2" height="15.0" fill="rgb(244,175,17)" rx="2" ry="2" />
<text  x="89.46" y="1887.5" ></text>
</g>
<g >
<title>operator delete[] (3 samples, 0.05%)</title><rect x="1117.6" y="2053" width="0.6" height="15.0" fill="rgb(211,153,36)" rx="2" ry="2" />
<text  x="1120.59" y="2063.5" ></text>
</g>
<g >
<title>onmt::unicode::explode_utf8_with_marks (1 samples, 0.02%)</title><rect x="764.9" y="1893" width="0.2" height="15.0" fill="rgb(230,163,16)" rx="2" ry="2" />
<text  x="767.89" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (35 samples, 0.60%)</title><rect x="109.4" y="1669" width="7.1" height="15.0" fill="rgb(235,70,46)" rx="2" ry="2" />
<text  x="112.38" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (32 samples, 0.55%)</title><rect x="190.7" y="1653" width="6.5" height="15.0" fill="rgb(253,22,37)" rx="2" ry="2" />
<text  x="193.71" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.7" y="1733" width="0.2" height="15.0" fill="rgb(239,74,29)" rx="2" ry="2" />
<text  x="1171.70" y="1743.5" ></text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.02%)</title><rect x="86.5" y="1893" width="0.2" height="15.0" fill="rgb(246,48,9)" rx="2" ry="2" />
<text  x="89.46" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.7" y="741" width="0.2" height="15.0" fill="rgb(251,153,7)" rx="2" ry="2" />
<text  x="1171.70" y="751.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="925.5" y="2037" width="0.2" height="15.0" fill="rgb(245,200,37)" rx="2" ry="2" />
<text  x="928.52" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.4" y="1173" width="0.2" height="15.0" fill="rgb(251,219,20)" rx="2" ry="2" />
<text  x="141.38" y="1183.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="901" width="1.0" height="15.0" fill="rgb(218,215,12)" rx="2" ry="2" />
<text  x="83.58" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="171.8" y="1541" width="0.3" height="15.0" fill="rgb(213,11,16)" rx="2" ry="2" />
<text  x="174.85" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.7" y="261" width="0.2" height="15.0" fill="rgb(211,131,2)" rx="2" ry="2" />
<text  x="1171.70" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="218.7" y="837" width="0.2" height="15.0" fill="rgb(231,99,16)" rx="2" ry="2" />
<text  x="221.70" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="218.5" y="1413" width="0.4" height="15.0" fill="rgb(229,193,14)" rx="2" ry="2" />
<text  x="221.50" y="1423.5" ></text>
</g>
<g >
<title>do_page_fault (14 samples, 0.24%)</title><rect x="32.7" y="2021" width="2.9" height="15.0" fill="rgb(248,15,33)" rx="2" ry="2" />
<text  x="35.72" y="2031.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.02%)</title><rect x="80.6" y="101" width="0.2" height="15.0" fill="rgb(250,205,1)" rx="2" ry="2" />
<text  x="83.58" y="111.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="181" width="1.0" height="15.0" fill="rgb(244,47,23)" rx="2" ry="2" />
<text  x="83.58" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="171.8" y="1637" width="0.3" height="15.0" fill="rgb(235,201,6)" rx="2" ry="2" />
<text  x="174.85" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.5" y="245" width="0.2" height="15.0" fill="rgb(223,111,12)" rx="2" ry="2" />
<text  x="1171.50" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.7" y="1413" width="0.2" height="15.0" fill="rgb(217,56,42)" rx="2" ry="2" />
<text  x="1171.70" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.3" y="165" width="0.2" height="15.0" fill="rgb(237,48,51)" rx="2" ry="2" />
<text  x="1171.30" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="218.7" y="693" width="0.2" height="15.0" fill="rgb(230,117,47)" rx="2" ry="2" />
<text  x="221.70" y="703.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1097.3" y="2021" width="0.2" height="15.0" fill="rgb(205,168,20)" rx="2" ry="2" />
<text  x="1100.31" y="2031.5" ></text>
</g>
<g >
<title>Eigen::internal::general_matrix_matrix_product&lt;long, float, 0, false, float, 1, false, 0, 1&gt;::run (28 samples, 0.48%)</title><rect x="424.0" y="1925" width="5.6" height="15.0" fill="rgb(211,67,12)" rx="2" ry="2" />
<text  x="426.95" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (30 samples, 0.52%)</title><rect x="102.7" y="1669" width="6.1" height="15.0" fill="rgb(238,164,10)" rx="2" ry="2" />
<text  x="105.69" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="218.3" y="1541" width="0.6" height="15.0" fill="rgb(231,0,19)" rx="2" ry="2" />
<text  x="221.29" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="171.6" y="1829" width="0.5" height="15.0" fill="rgb(218,142,8)" rx="2" ry="2" />
<text  x="174.65" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (162 samples, 2.78%)</title><rect x="138.6" y="1909" width="32.8" height="15.0" fill="rgb(221,81,8)" rx="2" ry="2" />
<text  x="141.59" y="1919.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.7" y="85" width="0.2" height="15.0" fill="rgb(211,54,42)" rx="2" ry="2" />
<text  x="1171.70" y="95.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.03%)</title><rect x="195.0" y="1621" width="0.4" height="15.0" fill="rgb(239,59,35)" rx="2" ry="2" />
<text  x="197.97" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.5" y="1541" width="0.2" height="15.0" fill="rgb(227,95,19)" rx="2" ry="2" />
<text  x="1171.50" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (42 samples, 0.72%)</title><rect x="123.4" y="1701" width="8.5" height="15.0" fill="rgb(226,180,39)" rx="2" ry="2" />
<text  x="126.38" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.3" y="1445" width="0.2" height="15.0" fill="rgb(235,11,36)" rx="2" ry="2" />
<text  x="1171.30" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.7" y="421" width="0.2" height="15.0" fill="rgb(205,87,47)" rx="2" ry="2" />
<text  x="1171.70" y="431.5" ></text>
</g>
<g >
<title>Preprocess (1,395 samples, 23.98%)</title><rect x="584.0" y="1957" width="282.9" height="15.0" fill="rgb(244,42,3)" rx="2" ry="2" />
<text  x="586.98" y="1967.5" >Preprocess</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.5" y="1797" width="0.2" height="15.0" fill="rgb(251,77,26)" rx="2" ry="2" />
<text  x="1171.50" y="1807.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.25] (23 samples, 0.40%)</title><rect x="37.2" y="2053" width="4.6" height="15.0" fill="rgb(240,45,52)" rx="2" ry="2" />
<text  x="40.18" y="2063.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="39.2" y="1989" width="0.2" height="15.0" fill="rgb(213,53,11)" rx="2" ry="2" />
<text  x="42.21" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.3" y="1093" width="0.2" height="15.0" fill="rgb(216,157,15)" rx="2" ry="2" />
<text  x="1171.30" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.5" y="1029" width="0.2" height="15.0" fill="rgb(245,158,17)" rx="2" ry="2" />
<text  x="1171.50" y="1039.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.02%)</title><rect x="149.1" y="1589" width="0.2" height="15.0" fill="rgb(232,23,41)" rx="2" ry="2" />
<text  x="152.13" y="1599.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt;@plt (2 samples, 0.03%)</title><rect x="116.1" y="1621" width="0.4" height="15.0" fill="rgb(220,47,39)" rx="2" ry="2" />
<text  x="119.07" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt;,  (2 samples, 0.03%)</title><rect x="171.6" y="1941" width="0.5" height="15.0" fill="rgb(206,202,19)" rx="2" ry="2" />
<text  x="174.65" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.2" y="1093" width="0.2" height="15.0" fill="rgb(206,63,50)" rx="2" ry="2" />
<text  x="141.18" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.5" y="1349" width="0.2" height="15.0" fill="rgb(237,94,26)" rx="2" ry="2" />
<text  x="1171.50" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (12 samples, 0.21%)</title><rect x="216.7" y="1877" width="2.4" height="15.0" fill="rgb(245,75,31)" rx="2" ry="2" />
<text  x="219.67" y="1887.5" ></text>
</g>
<g >
<title>__x64_sys_read (1 samples, 0.02%)</title><rect x="925.3" y="2005" width="0.2" height="15.0" fill="rgb(220,80,26)" rx="2" ry="2" />
<text  x="928.32" y="2015.5" ></text>
</g>
<g >
<title>operator new@plt (1 samples, 0.02%)</title><rect x="111.0" y="1621" width="0.2" height="15.0" fill="rgb(220,140,27)" rx="2" ry="2" />
<text  x="114.00" y="1631.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="925.3" y="2021" width="0.2" height="15.0" fill="rgb(239,27,21)" rx="2" ry="2" />
<text  x="928.32" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.3" y="629" width="0.2" height="15.0" fill="rgb(249,25,17)" rx="2" ry="2" />
<text  x="1171.30" y="639.5" ></text>
</g>
<g >
<title>onmt::CaseModifier::type_to_char (3 samples, 0.05%)</title><rect x="592.3" y="1893" width="0.6" height="15.0" fill="rgb(215,30,14)" rx="2" ry="2" />
<text  x="595.29" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (14 samples, 0.24%)</title><rect x="80.4" y="2021" width="2.8" height="15.0" fill="rgb(253,1,11)" rx="2" ry="2" />
<text  x="83.38" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.4" y="949" width="0.2" height="15.0" fill="rgb(228,12,37)" rx="2" ry="2" />
<text  x="141.38" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (33 samples, 0.57%)</title><rect x="163.9" y="1749" width="6.7" height="15.0" fill="rgb(205,213,3)" rx="2" ry="2" />
<text  x="166.94" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="218.5" y="901" width="0.2" height="15.0" fill="rgb(250,125,52)" rx="2" ry="2" />
<text  x="221.50" y="911.5" ></text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::scan (2 samples, 0.03%)</title><rect x="87.9" y="1941" width="0.4" height="15.0" fill="rgb(219,186,43)" rx="2" ry="2" />
<text  x="90.88" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (36 samples, 0.62%)</title><rect x="144.9" y="1669" width="7.3" height="15.0" fill="rgb(246,132,35)" rx="2" ry="2" />
<text  x="147.87" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.2" y="1381" width="0.2" height="15.0" fill="rgb(226,223,8)" rx="2" ry="2" />
<text  x="141.18" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="171.8" y="1461" width="0.3" height="15.0" fill="rgb(223,200,32)" rx="2" ry="2" />
<text  x="174.85" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.5" y="1925" width="0.2" height="15.0" fill="rgb(247,190,31)" rx="2" ry="2" />
<text  x="1171.50" y="1935.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (1 samples, 0.02%)</title><rect x="712.2" y="1781" width="0.2" height="15.0" fill="rgb(223,11,44)" rx="2" ry="2" />
<text  x="715.16" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.4" y="997" width="0.2" height="15.0" fill="rgb(236,75,44)" rx="2" ry="2" />
<text  x="141.38" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.2" y="773" width="0.2" height="15.0" fill="rgb(244,216,24)" rx="2" ry="2" />
<text  x="141.18" y="783.5" ></text>
</g>
<g >
<title>free_unref_page_list (1 samples, 0.02%)</title><rect x="955.1" y="1845" width="0.2" height="15.0" fill="rgb(215,38,37)" rx="2" ry="2" />
<text  x="958.14" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="138.2" y="1413" width="0.4" height="15.0" fill="rgb(235,135,43)" rx="2" ry="2" />
<text  x="141.18" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.5" y="197" width="0.2" height="15.0" fill="rgb(235,94,21)" rx="2" ry="2" />
<text  x="1171.50" y="207.5" ></text>
</g>
<g >
<title>__x64_sys_futex (3 samples, 0.05%)</title><rect x="102.1" y="1925" width="0.6" height="15.0" fill="rgb(218,31,2)" rx="2" ry="2" />
<text  x="105.08" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="218.5" y="1045" width="0.2" height="15.0" fill="rgb(225,122,49)" rx="2" ry="2" />
<text  x="221.50" y="1055.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="693" width="1.0" height="15.0" fill="rgb(223,149,29)" rx="2" ry="2" />
<text  x="83.58" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="171.8" y="1669" width="0.3" height="15.0" fill="rgb(232,15,53)" rx="2" ry="2" />
<text  x="174.85" y="1679.5" ></text>
</g>
<g >
<title>Summarize (846 samples, 14.54%)</title><rect x="172.7" y="2005" width="171.5" height="15.0" fill="rgb(216,106,29)" rx="2" ry="2" />
<text  x="175.66" y="2015.5" >Summarize</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.4" y="613" width="0.2" height="15.0" fill="rgb(253,113,9)" rx="2" ry="2" />
<text  x="141.38" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (1 samples, 0.02%)</title><rect x="215.5" y="1781" width="0.2" height="15.0" fill="rgb(220,215,48)" rx="2" ry="2" />
<text  x="218.46" y="1791.5" ></text>
</g>
<g >
<title>ksys_read (4 samples, 0.07%)</title><rect x="84.4" y="1973" width="0.8" height="15.0" fill="rgb(250,50,29)" rx="2" ry="2" />
<text  x="87.43" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (159 samples, 2.73%)</title><rect x="138.6" y="1829" width="32.2" height="15.0" fill="rgb(248,23,30)" rx="2" ry="2" />
<text  x="141.59" y="1839.5" >st..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="955.1" y="2053" width="0.2" height="15.0" fill="rgb(237,161,22)" rx="2" ry="2" />
<text  x="958.14" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="218.5" y="1333" width="0.4" height="15.0" fill="rgb(223,195,29)" rx="2" ry="2" />
<text  x="221.50" y="1343.5" ></text>
</g>
<g >
<title>all (5,818 samples, 100%)</title><rect x="10.0" y="2085" width="1180.0" height="15.0" fill="rgb(249,207,19)" rx="2" ry="2" />
<text  x="13.00" y="2095.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (17 samples, 0.29%)</title><rect x="439.8" y="1861" width="3.4" height="15.0" fill="rgb(231,61,8)" rx="2" ry="2" />
<text  x="442.77" y="1871.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="75.3" y="2005" width="0.2" height="15.0" fill="rgb(210,23,24)" rx="2" ry="2" />
<text  x="78.31" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 0.10%)</title><rect x="80.4" y="1845" width="1.2" height="15.0" fill="rgb(233,195,8)" rx="2" ry="2" />
<text  x="83.38" y="1855.5" ></text>
</g>
<g >
<title>fasttext::HierarchicalSoftmaxLoss::dfs (1 samples, 0.02%)</title><rect x="1056.1" y="2053" width="0.2" height="15.0" fill="rgb(243,48,23)" rx="2" ry="2" />
<text  x="1059.14" y="2063.5" ></text>
</g>
<g >
<title>cfree (142 samples, 2.44%)</title><rect x="926.3" y="2053" width="28.8" height="15.0" fill="rgb(240,22,50)" rx="2" ry="2" />
<text  x="929.34" y="2063.5" >cf..</text>
</g>
<g >
<title>free_pages_and_swap_cache (1 samples, 0.02%)</title><rect x="578.1" y="1813" width="0.2" height="15.0" fill="rgb(224,78,52)" rx="2" ry="2" />
<text  x="581.10" y="1823.5" ></text>
</g>
<g >
<title>unmap_single_vma (3 samples, 0.05%)</title><rect x="458.0" y="1845" width="0.6" height="15.0" fill="rgb(207,202,9)" rx="2" ry="2" />
<text  x="461.03" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (174 samples, 2.99%)</title><rect x="102.7" y="1925" width="35.3" height="15.0" fill="rgb(211,168,4)" rx="2" ry="2" />
<text  x="105.69" y="1935.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="217.7" y="1477" width="0.2" height="15.0" fill="rgb(206,41,14)" rx="2" ry="2" />
<text  x="220.69" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.07%)</title><rect x="218.1" y="1653" width="0.8" height="15.0" fill="rgb(231,186,53)" rx="2" ry="2" />
<text  x="221.09" y="1663.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (3 samples, 0.05%)</title><rect x="151.2" y="1605" width="0.6" height="15.0" fill="rgb(227,71,52)" rx="2" ry="2" />
<text  x="154.16" y="1615.5" ></text>
</g>
<g >
<title>cfree (2 samples, 0.03%)</title><rect x="117.9" y="1637" width="0.4" height="15.0" fill="rgb(220,18,23)" rx="2" ry="2" />
<text  x="120.90" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (68 samples, 1.17%)</title><rect x="102.7" y="1749" width="13.8" height="15.0" fill="rgb(237,181,29)" rx="2" ry="2" />
<text  x="105.69" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (17 samples, 0.29%)</title><rect x="104.7" y="1589" width="3.5" height="15.0" fill="rgb(214,158,27)" rx="2" ry="2" />
<text  x="107.72" y="1599.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (20 samples, 0.34%)</title><rect x="893.5" y="2005" width="4.0" height="15.0" fill="rgb(228,93,28)" rx="2" ry="2" />
<text  x="896.48" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.4" y="469" width="0.2" height="15.0" fill="rgb(236,58,37)" rx="2" ry="2" />
<text  x="141.38" y="479.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="1461" width="1.0" height="15.0" fill="rgb(212,227,53)" rx="2" ry="2" />
<text  x="83.58" y="1471.5" ></text>
</g>
<g >
<title>__dynamic_cast (4 samples, 0.07%)</title><rect x="164.3" y="1685" width="0.9" height="15.0" fill="rgb(228,4,1)" rx="2" ry="2" />
<text  x="167.35" y="1695.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.02%)</title><rect x="872.4" y="2005" width="0.2" height="15.0" fill="rgb(212,188,2)" rx="2" ry="2" />
<text  x="875.39" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (1 samples, 0.02%)</title><rect x="137.2" y="1829" width="0.2" height="15.0" fill="rgb(244,2,36)" rx="2" ry="2" />
<text  x="140.17" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (25 samples, 0.43%)</title><rect x="132.1" y="1749" width="5.1" height="15.0" fill="rgb(245,63,27)" rx="2" ry="2" />
<text  x="135.10" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.5" y="1941" width="0.2" height="15.0" fill="rgb(205,126,20)" rx="2" ry="2" />
<text  x="1171.50" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_subexpr_begin (1 samples, 0.02%)</title><rect x="214.6" y="1797" width="0.2" height="15.0" fill="rgb(217,89,24)" rx="2" ry="2" />
<text  x="217.64" y="1807.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="147.7" y="1605" width="0.2" height="15.0" fill="rgb(243,133,14)" rx="2" ry="2" />
<text  x="150.71" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="138.2" y="1573" width="0.4" height="15.0" fill="rgb(254,28,4)" rx="2" ry="2" />
<text  x="141.18" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="171.6" y="1893" width="0.5" height="15.0" fill="rgb(227,85,18)" rx="2" ry="2" />
<text  x="174.65" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.5" y="1765" width="0.2" height="15.0" fill="rgb(249,89,42)" rx="2" ry="2" />
<text  x="1171.50" y="1775.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 0.02%)</title><rect x="925.3" y="2053" width="0.2" height="15.0" fill="rgb(216,173,37)" rx="2" ry="2" />
<text  x="928.32" y="2063.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="132.1" y="1733" width="0.2" height="15.0" fill="rgb(251,18,23)" rx="2" ry="2" />
<text  x="135.10" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="218.3" y="1429" width="0.2" height="15.0" fill="rgb(238,165,24)" rx="2" ry="2" />
<text  x="221.29" y="1439.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="80.8" y="69" width="0.2" height="15.0" fill="rgb(225,28,25)" rx="2" ry="2" />
<text  x="83.78" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="171.8" y="1749" width="0.3" height="15.0" fill="rgb(250,123,14)" rx="2" ry="2" />
<text  x="174.85" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (44 samples, 0.76%)</title><rect x="173.9" y="1685" width="8.9" height="15.0" fill="rgb(215,228,32)" rx="2" ry="2" />
<text  x="176.88" y="1695.5" ></text>
</g>
<g >
<title>memset@plt (1 samples, 0.02%)</title><rect x="575.1" y="1973" width="0.2" height="15.0" fill="rgb(220,70,32)" rx="2" ry="2" />
<text  x="578.05" y="1983.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.02%)</title><rect x="872.4" y="2021" width="0.2" height="15.0" fill="rgb(236,220,25)" rx="2" ry="2" />
<text  x="875.39" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.4" y="869" width="0.2" height="15.0" fill="rgb(229,22,51)" rx="2" ry="2" />
<text  x="141.38" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.5" y="309" width="0.2" height="15.0" fill="rgb(212,93,27)" rx="2" ry="2" />
<text  x="1171.50" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.5" y="1589" width="0.2" height="15.0" fill="rgb(206,12,45)" rx="2" ry="2" />
<text  x="1171.50" y="1599.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="871.0" y="1989" width="0.2" height="15.0" fill="rgb(217,83,43)" rx="2" ry="2" />
<text  x="873.97" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="1173" width="1.0" height="15.0" fill="rgb(219,165,50)" rx="2" ry="2" />
<text  x="83.58" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.7" y="773" width="0.2" height="15.0" fill="rgb(237,50,16)" rx="2" ry="2" />
<text  x="1171.70" y="783.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find@plt (2 samples, 0.03%)</title><rect x="865.1" y="1909" width="0.4" height="15.0" fill="rgb(216,36,32)" rx="2" ry="2" />
<text  x="868.08" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.7" y="37" width="0.2" height="15.0" fill="rgb(213,80,1)" rx="2" ry="2" />
<text  x="1171.70" y="47.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="217.7" y="1541" width="0.2" height="15.0" fill="rgb(228,109,3)" rx="2" ry="2" />
<text  x="220.69" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="218.7" y="981" width="0.2" height="15.0" fill="rgb(217,212,50)" rx="2" ry="2" />
<text  x="221.70" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (30 samples, 0.52%)</title><rect x="157.9" y="1701" width="6.0" height="15.0" fill="rgb(253,62,0)" rx="2" ry="2" />
<text  x="160.85" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.3" y="197" width="0.2" height="15.0" fill="rgb(247,81,48)" rx="2" ry="2" />
<text  x="1171.30" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.3" y="485" width="0.2" height="15.0" fill="rgb(234,168,12)" rx="2" ry="2" />
<text  x="1171.30" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (2 samples, 0.03%)</title><rect x="171.0" y="1829" width="0.4" height="15.0" fill="rgb(234,95,33)" rx="2" ry="2" />
<text  x="174.04" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="218.7" y="869" width="0.2" height="15.0" fill="rgb(237,158,52)" rx="2" ry="2" />
<text  x="221.70" y="879.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="469" width="1.0" height="15.0" fill="rgb(243,126,47)" rx="2" ry="2" />
<text  x="83.58" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (36 samples, 0.62%)</title><rect x="109.2" y="1717" width="7.3" height="15.0" fill="rgb(206,135,54)" rx="2" ry="2" />
<text  x="112.18" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.07%)</title><rect x="218.1" y="1669" width="0.8" height="15.0" fill="rgb(235,70,17)" rx="2" ry="2" />
<text  x="221.09" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (33 samples, 0.57%)</title><rect x="116.5" y="1701" width="6.7" height="15.0" fill="rgb(248,33,35)" rx="2" ry="2" />
<text  x="119.48" y="1711.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::json_value::destroy (1 samples, 0.02%)</title><rect x="579.1" y="1989" width="0.2" height="15.0" fill="rgb(205,31,52)" rx="2" ry="2" />
<text  x="582.11" y="1999.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="433.7" y="1861" width="0.2" height="15.0" fill="rgb(254,109,16)" rx="2" ry="2" />
<text  x="436.69" y="1871.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (3 samples, 0.05%)</title><rect x="443.4" y="1861" width="0.6" height="15.0" fill="rgb(250,161,11)" rx="2" ry="2" />
<text  x="446.42" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="171.6" y="1717" width="0.2" height="15.0" fill="rgb(224,152,2)" rx="2" ry="2" />
<text  x="174.65" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="165" width="1.0" height="15.0" fill="rgb(250,51,15)" rx="2" ry="2" />
<text  x="83.58" y="175.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::str[abi:cxx11] (2 samples, 0.03%)</title><rect x="590.5" y="1909" width="0.4" height="15.0" fill="rgb(209,186,26)" rx="2" ry="2" />
<text  x="593.47" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.7" y="1205" width="0.2" height="15.0" fill="rgb(207,106,5)" rx="2" ry="2" />
<text  x="1171.70" y="1215.5" ></text>
</g>
<g >
<title>page_fault (34 samples, 0.58%)</title><rect x="437.7" y="1957" width="6.9" height="15.0" fill="rgb(233,151,43)" rx="2" ry="2" />
<text  x="440.74" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (42 samples, 0.72%)</title><rect x="123.4" y="1781" width="8.5" height="15.0" fill="rgb(248,107,41)" rx="2" ry="2" />
<text  x="126.38" y="1791.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::has_features (1 samples, 0.02%)</title><rect x="589.0" y="1909" width="0.3" height="15.0" fill="rgb(246,124,0)" rx="2" ry="2" />
<text  x="592.05" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.2" y="821" width="0.2" height="15.0" fill="rgb(224,94,24)" rx="2" ry="2" />
<text  x="141.18" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (2 samples, 0.03%)</title><rect x="152.8" y="1637" width="0.4" height="15.0" fill="rgb(238,203,9)" rx="2" ry="2" />
<text  x="155.78" y="1647.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (1 samples, 0.02%)</title><rect x="122.8" y="1637" width="0.2" height="15.0" fill="rgb(243,37,32)" rx="2" ry="2" />
<text  x="125.77" y="1647.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.03%)</title><rect x="161.3" y="1637" width="0.4" height="15.0" fill="rgb(250,14,37)" rx="2" ry="2" />
<text  x="164.30" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.5" y="1509" width="0.2" height="15.0" fill="rgb(244,10,4)" rx="2" ry="2" />
<text  x="1171.50" y="1519.5" ></text>
</g>
<g >
<title>__dynamic_cast (8 samples, 0.14%)</title><rect x="191.3" y="1637" width="1.6" height="15.0" fill="rgb(240,150,51)" rx="2" ry="2" />
<text  x="194.32" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 0.10%)</title><rect x="80.4" y="1893" width="1.2" height="15.0" fill="rgb(217,127,49)" rx="2" ry="2" />
<text  x="83.38" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.7" y="1573" width="0.2" height="15.0" fill="rgb(223,24,33)" rx="2" ry="2" />
<text  x="1171.70" y="1583.5" ></text>
</g>
<g >
<title>__pthread_mutex_lock (1 samples, 0.02%)</title><rect x="578.9" y="2005" width="0.2" height="15.0" fill="rgb(236,122,27)" rx="2" ry="2" />
<text  x="581.91" y="2015.5" ></text>
</g>
<g >
<title>fasttext::FastText::getWordVector (9 samples, 0.15%)</title><rect x="325.8" y="1989" width="1.8" height="15.0" fill="rgb(205,37,46)" rx="2" ry="2" />
<text  x="328.79" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;fasttext::FastText, std::default_delete&lt;fasttext::FastText&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;fasttext::FastText, std::default_delete&lt;fasttext::FastText&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (1 samples, 0.02%)</title><rect x="868.1" y="1973" width="0.2" height="15.0" fill="rgb(205,166,5)" rx="2" ry="2" />
<text  x="871.13" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.5" y="1141" width="0.2" height="15.0" fill="rgb(225,164,18)" rx="2" ry="2" />
<text  x="1171.50" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.5" y="133" width="0.2" height="15.0" fill="rgb(229,14,44)" rx="2" ry="2" />
<text  x="1171.50" y="143.5" ></text>
</g>
<g >
<title>cfree (1 samples, 0.02%)</title><rect x="192.9" y="1637" width="0.2" height="15.0" fill="rgb(243,213,4)" rx="2" ry="2" />
<text  x="195.94" y="1647.5" ></text>
</g>
<g >
<title>tlb_flush_mmu_free (2 samples, 0.03%)</title><rect x="458.2" y="1813" width="0.4" height="15.0" fill="rgb(210,225,27)" rx="2" ry="2" />
<text  x="461.23" y="1823.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace@plt (1 samples, 0.02%)</title><rect x="866.7" y="1941" width="0.2" height="15.0" fill="rgb(250,8,34)" rx="2" ry="2" />
<text  x="869.71" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="1205" width="1.0" height="15.0" fill="rgb(234,100,18)" rx="2" ry="2" />
<text  x="83.58" y="1215.5" ></text>
</g>
<g >
<title>fasttext::NegativeSamplingLoss::NegativeSamplingLoss (7 samples, 0.12%)</title><rect x="871.2" y="2037" width="1.4" height="15.0" fill="rgb(212,201,26)" rx="2" ry="2" />
<text  x="874.17" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.5" y="261" width="0.2" height="15.0" fill="rgb(220,82,39)" rx="2" ry="2" />
<text  x="1171.50" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (170 samples, 2.92%)</title><rect x="102.7" y="1829" width="34.5" height="15.0" fill="rgb(251,1,14)" rx="2" ry="2" />
<text  x="105.69" y="1839.5" >st..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (30 samples, 0.52%)</title><rect x="157.9" y="1685" width="6.0" height="15.0" fill="rgb(239,222,7)" rx="2" ry="2" />
<text  x="160.85" y="1695.5" ></text>
</g>
<g >
<title>onmt::Tokenizer::finalize_tokens (26 samples, 0.45%)</title><rect x="591.1" y="1909" width="5.2" height="15.0" fill="rgb(231,21,13)" rx="2" ry="2" />
<text  x="594.08" y="1919.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.03%)</title><rect x="155.2" y="1605" width="0.4" height="15.0" fill="rgb(212,35,30)" rx="2" ry="2" />
<text  x="158.22" y="1615.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="193.8" y="1637" width="0.2" height="15.0" fill="rgb(235,210,6)" rx="2" ry="2" />
<text  x="196.75" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.3" y="1493" width="0.2" height="15.0" fill="rgb(227,60,24)" rx="2" ry="2" />
<text  x="1171.30" y="1503.5" ></text>
</g>
<g >
<title>std::packaged_task&lt;boost::optional&lt;TDocument&gt;  (1 samples, 0.02%)</title><rect x="39.2" y="2005" width="0.2" height="15.0" fill="rgb(206,102,52)" rx="2" ry="2" />
<text  x="42.21" y="2015.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::getId (87 samples, 1.50%)</title><rect x="974.2" y="2053" width="17.6" height="15.0" fill="rgb(221,157,49)" rx="2" ry="2" />
<text  x="977.20" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_assertion (1 samples, 0.02%)</title><rect x="215.3" y="1717" width="0.2" height="15.0" fill="rgb(247,31,4)" rx="2" ry="2" />
<text  x="218.25" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.5" y="965" width="0.2" height="15.0" fill="rgb(237,93,27)" rx="2" ry="2" />
<text  x="1171.50" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="138.2" y="1461" width="0.4" height="15.0" fill="rgb(226,89,41)" rx="2" ry="2" />
<text  x="141.18" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.4" y="341" width="0.2" height="15.0" fill="rgb(239,225,8)" rx="2" ry="2" />
<text  x="141.38" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (33 samples, 0.57%)</title><rect x="163.9" y="1765" width="6.7" height="15.0" fill="rgb(253,40,22)" rx="2" ry="2" />
<text  x="166.94" y="1775.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (2 samples, 0.03%)</title><rect x="188.5" y="1605" width="0.4" height="15.0" fill="rgb(230,215,14)" rx="2" ry="2" />
<text  x="191.48" y="1615.5" ></text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (2 samples, 0.03%)</title><rect x="711.8" y="1781" width="0.4" height="15.0" fill="rgb(214,137,1)" rx="2" ry="2" />
<text  x="714.75" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.4" y="629" width="0.2" height="15.0" fill="rgb(224,2,32)" rx="2" ry="2" />
<text  x="141.38" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (29 samples, 0.50%)</title><rect x="158.1" y="1669" width="5.8" height="15.0" fill="rgb(221,61,21)" rx="2" ry="2" />
<text  x="161.06" y="1679.5" ></text>
</g>
<g >
<title>get_page_from_freelist (5 samples, 0.09%)</title><rect x="442.2" y="1845" width="1.0" height="15.0" fill="rgb(247,3,20)" rx="2" ry="2" />
<text  x="445.21" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="171.8" y="1557" width="0.3" height="15.0" fill="rgb(225,90,19)" rx="2" ry="2" />
<text  x="174.85" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="218.7" y="1301" width="0.2" height="15.0" fill="rgb(248,165,35)" rx="2" ry="2" />
<text  x="221.70" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_try_char (1 samples, 0.02%)</title><rect x="171.2" y="1765" width="0.2" height="15.0" fill="rgb(247,97,52)" rx="2" ry="2" />
<text  x="174.24" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (1 samples, 0.02%)</title><rect x="170.6" y="1717" width="0.2" height="15.0" fill="rgb(213,86,30)" rx="2" ry="2" />
<text  x="173.63" y="1727.5" ></text>
</g>
<g >
<title>handle_mm_fault (24 samples, 0.41%)</title><rect x="439.4" y="1909" width="4.8" height="15.0" fill="rgb(212,60,19)" rx="2" ry="2" />
<text  x="442.37" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.3" y="1253" width="0.2" height="15.0" fill="rgb(253,148,10)" rx="2" ry="2" />
<text  x="1171.30" y="1263.5" ></text>
</g>
<g >
<title>arch_tlb_finish_mmu (1 samples, 0.02%)</title><rect x="578.1" y="1861" width="0.2" height="15.0" fill="rgb(209,5,49)" rx="2" ry="2" />
<text  x="581.10" y="1871.5" ></text>
</g>
<g >
<title>onmt::is_alphabet (20 samples, 0.34%)</title><rect x="760.4" y="1893" width="4.1" height="15.0" fill="rgb(216,61,20)" rx="2" ry="2" />
<text  x="763.43" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.5" y="181" width="0.2" height="15.0" fill="rgb(228,229,32)" rx="2" ry="2" />
<text  x="1171.50" y="191.5" ></text>
</g>
<g >
<title>page_fault (10 samples, 0.17%)</title><rect x="710.5" y="1861" width="2.1" height="15.0" fill="rgb(228,93,9)" rx="2" ry="2" />
<text  x="713.54" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.5" y="581" width="0.2" height="15.0" fill="rgb(216,78,32)" rx="2" ry="2" />
<text  x="1171.50" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.3" y="69" width="0.2" height="15.0" fill="rgb(233,155,1)" rx="2" ry="2" />
<text  x="1171.30" y="79.5" ></text>
</g>
<g >
<title>__do_page_fault (31 samples, 0.53%)</title><rect x="431.5" y="1909" width="6.2" height="15.0" fill="rgb(225,34,32)" rx="2" ry="2" />
<text  x="434.46" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="837" width="1.0" height="15.0" fill="rgb(206,198,40)" rx="2" ry="2" />
<text  x="83.58" y="847.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="533" width="1.0" height="15.0" fill="rgb(229,55,29)" rx="2" ry="2" />
<text  x="83.58" y="543.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="805" width="1.0" height="15.0" fill="rgb(220,36,32)" rx="2" ry="2" />
<text  x="83.58" y="815.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="154.6" y="1621" width="0.2" height="15.0" fill="rgb(233,11,24)" rx="2" ry="2" />
<text  x="157.61" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.7" y="1957" width="0.2" height="15.0" fill="rgb(223,172,30)" rx="2" ry="2" />
<text  x="1171.70" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (33 samples, 0.57%)</title><rect x="190.7" y="1701" width="6.7" height="15.0" fill="rgb(232,111,13)" rx="2" ry="2" />
<text  x="193.71" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="138.2" y="1541" width="0.4" height="15.0" fill="rgb(206,100,21)" rx="2" ry="2" />
<text  x="141.18" y="1551.5" ></text>
</g>
<g >
<title>std::locale::~locale (4 samples, 0.07%)</title><rect x="341.8" y="1989" width="0.8" height="15.0" fill="rgb(244,76,16)" rx="2" ry="2" />
<text  x="344.81" y="1999.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.02%)</title><rect x="457.8" y="1973" width="0.2" height="15.0" fill="rgb(229,73,39)" rx="2" ry="2" />
<text  x="460.82" y="1983.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt; &gt;::_M_manager (1 samples, 0.02%)</title><rect x="173.7" y="1653" width="0.2" height="15.0" fill="rgb(253,17,14)" rx="2" ry="2" />
<text  x="176.67" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.3" y="421" width="0.2" height="15.0" fill="rgb(248,195,5)" rx="2" ry="2" />
<text  x="1171.30" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.3" y="773" width="0.2" height="15.0" fill="rgb(244,19,34)" rx="2" ry="2" />
<text  x="1171.30" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (43 samples, 0.74%)</title><rect x="174.1" y="1605" width="8.7" height="15.0" fill="rgb(226,224,47)" rx="2" ry="2" />
<text  x="177.08" y="1615.5" ></text>
</g>
<g >
<title>up_read (2 samples, 0.03%)</title><rect x="444.2" y="1909" width="0.4" height="15.0" fill="rgb(241,126,10)" rx="2" ry="2" />
<text  x="447.24" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (159 samples, 2.73%)</title><rect x="138.6" y="1861" width="32.2" height="15.0" fill="rgb(247,31,13)" rx="2" ry="2" />
<text  x="141.59" y="1871.5" >st..</text>
</g>
<g >
<title>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::dump_escaped (3 samples, 0.05%)</title><rect x="579.3" y="1909" width="0.6" height="15.0" fill="rgb(239,182,4)" rx="2" ry="2" />
<text  x="582.31" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.5" y="1669" width="0.2" height="15.0" fill="rgb(210,24,18)" rx="2" ry="2" />
<text  x="1171.50" y="1679.5" ></text>
</g>
<g >
<title>__handle_mm_fault (20 samples, 0.34%)</title><rect x="433.5" y="1877" width="4.0" height="15.0" fill="rgb(205,113,49)" rx="2" ry="2" />
<text  x="436.49" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="1013" width="1.0" height="15.0" fill="rgb(232,212,13)" rx="2" ry="2" />
<text  x="83.58" y="1023.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (3 samples, 0.05%)</title><rect x="135.1" y="1685" width="0.6" height="15.0" fill="rgb(243,204,30)" rx="2" ry="2" />
<text  x="138.14" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (30 samples, 0.52%)</title><rect x="102.7" y="1605" width="6.1" height="15.0" fill="rgb(238,196,15)" rx="2" ry="2" />
<text  x="105.69" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.5" y="1621" width="0.2" height="15.0" fill="rgb(213,111,8)" rx="2" ry="2" />
<text  x="1171.50" y="1631.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="215.7" y="1765" width="0.2" height="15.0" fill="rgb(211,158,1)" rx="2" ry="2" />
<text  x="218.66" y="1775.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="1047.2" y="1941" width="0.2" height="15.0" fill="rgb(223,168,50)" rx="2" ry="2" />
<text  x="1050.22" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.7" y="917" width="0.2" height="15.0" fill="rgb(252,205,18)" rx="2" ry="2" />
<text  x="1171.70" y="927.5" ></text>
</g>
<g >
<title>try_to_wake_up (8 samples, 0.14%)</title><rect x="40.0" y="1909" width="1.6" height="15.0" fill="rgb(248,137,39)" rx="2" ry="2" />
<text  x="43.02" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (33 samples, 0.57%)</title><rect x="116.5" y="1669" width="6.7" height="15.0" fill="rgb(213,188,17)" rx="2" ry="2" />
<text  x="119.48" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (1 samples, 0.02%)</title><rect x="215.3" y="1749" width="0.2" height="15.0" fill="rgb(224,50,25)" rx="2" ry="2" />
<text  x="218.25" y="1759.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="858.6" y="1861" width="0.2" height="15.0" fill="rgb(213,190,35)" rx="2" ry="2" />
<text  x="861.59" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="138.2" y="1733" width="0.4" height="15.0" fill="rgb(214,7,43)" rx="2" ry="2" />
<text  x="141.18" y="1743.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (2 samples, 0.03%)</title><rect x="196.6" y="1621" width="0.4" height="15.0" fill="rgb(239,162,18)" rx="2" ry="2" />
<text  x="199.59" y="1631.5" ></text>
</g>
<g >
<title>__dynamic_cast (8 samples, 0.14%)</title><rect x="207.5" y="1701" width="1.7" height="15.0" fill="rgb(238,71,26)" rx="2" ry="2" />
<text  x="210.55" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.3" y="1797" width="0.2" height="15.0" fill="rgb(213,51,6)" rx="2" ry="2" />
<text  x="1171.30" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.7" y="1317" width="0.2" height="15.0" fill="rgb(244,11,7)" rx="2" ry="2" />
<text  x="1171.70" y="1327.5" ></text>
</g>
<g >
<title>GetHost (166 samples, 2.85%)</title><rect x="138.6" y="1957" width="33.7" height="15.0" fill="rgb(238,68,48)" rx="2" ry="2" />
<text  x="141.59" y="1967.5" >Ge..</text>
</g>
<g >
<title>__vfs_read (1 samples, 0.02%)</title><rect x="925.3" y="1957" width="0.2" height="15.0" fill="rgb(207,171,45)" rx="2" ry="2" />
<text  x="928.32" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.5" y="597" width="0.2" height="15.0" fill="rgb(232,45,41)" rx="2" ry="2" />
<text  x="1171.50" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.4" y="917" width="0.2" height="15.0" fill="rgb(227,18,32)" rx="2" ry="2" />
<text  x="141.38" y="927.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="711.8" y="1733" width="0.2" height="15.0" fill="rgb(224,188,42)" rx="2" ry="2" />
<text  x="714.75" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (2 samples, 0.03%)</title><rect x="137.6" y="1877" width="0.4" height="15.0" fill="rgb(205,216,37)" rx="2" ry="2" />
<text  x="140.57" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="898.3" y="2021" width="0.7" height="15.0" fill="rgb(218,93,48)" rx="2" ry="2" />
<text  x="901.35" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="217.7" y="1397" width="0.2" height="15.0" fill="rgb(254,53,54)" rx="2" ry="2" />
<text  x="220.69" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.3" y="1733" width="0.2" height="15.0" fill="rgb(229,100,47)" rx="2" ry="2" />
<text  x="1171.30" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="138.2" y="1525" width="0.4" height="15.0" fill="rgb(250,34,11)" rx="2" ry="2" />
<text  x="141.18" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="218.5" y="1381" width="0.4" height="15.0" fill="rgb(240,26,35)" rx="2" ry="2" />
<text  x="221.50" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.7" y="1861" width="0.2" height="15.0" fill="rgb(219,58,24)" rx="2" ry="2" />
<text  x="1171.70" y="1871.5" ></text>
</g>
<g >
<title>std::locale::locale (1 samples, 0.02%)</title><rect x="575.7" y="1973" width="0.2" height="15.0" fill="rgb(254,137,14)" rx="2" ry="2" />
<text  x="578.66" y="1983.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::reserve (1 samples, 0.02%)</title><rect x="646.2" y="1877" width="0.2" height="15.0" fill="rgb(227,122,36)" rx="2" ry="2" />
<text  x="649.24" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (125 samples, 2.15%)</title><rect x="138.6" y="1797" width="25.3" height="15.0" fill="rgb(238,65,0)" rx="2" ry="2" />
<text  x="141.59" y="1807.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.4" y="1301" width="0.2" height="15.0" fill="rgb(247,128,23)" rx="2" ry="2" />
<text  x="141.38" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="218.3" y="1493" width="0.6" height="15.0" fill="rgb(254,114,15)" rx="2" ry="2" />
<text  x="221.29" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (1 samples, 0.02%)</title><rect x="171.2" y="1813" width="0.2" height="15.0" fill="rgb(211,170,26)" rx="2" ry="2" />
<text  x="174.24" y="1823.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::get_case@plt (1 samples, 0.02%)</title><rect x="588.8" y="1909" width="0.2" height="15.0" fill="rgb(254,92,10)" rx="2" ry="2" />
<text  x="591.84" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (1 samples, 0.02%)</title><rect x="131.9" y="1781" width="0.2" height="15.0" fill="rgb(236,9,38)" rx="2" ry="2" />
<text  x="134.89" y="1791.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="81.0" y="37" width="0.2" height="15.0" fill="rgb(251,11,42)" rx="2" ry="2" />
<text  x="83.99" y="47.5" ></text>
</g>
<g >
<title>onmt::unicode::explode_utf8_with_marks (156 samples, 2.68%)</title><rect x="681.1" y="1877" width="31.7" height="15.0" fill="rgb(216,199,32)" rx="2" ry="2" />
<text  x="684.13" y="1887.5" >on..</text>
</g>
<g >
<title>Eigen::internal::call_dense_assignment_loop&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_sum_op&lt;float, float&gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_quotient_op&lt;float, float&gt;, Eigen::CwiseUnaryOp&lt;Eigen::internal::scalar_opposite_op&lt;float&gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_sum_op&lt;float, float&gt;, Eigen::ArrayWrapper&lt;Eigen::Product&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt;, 0&gt; const&gt; const, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Array&lt;float, -1, -1, 0, -1, -1&gt; const&gt; const&gt; const&gt; const, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Array&lt;float, -1, -1, 0, -1, -1&gt; const&gt; const&gt; const, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Array&lt;float, -1, -1, 0, -1, -1&gt; const&gt; const&gt;, Eigen::internal::assign_op&lt;float, float&gt; &gt; (121 samples, 2.08%)</title><rect x="420.1" y="1973" width="24.5" height="15.0" fill="rgb(217,156,10)" rx="2" ry="2" />
<text  x="423.10" y="1983.5" >E..</text>
</g>
<g >
<title>__dynamic_cast (8 samples, 0.14%)</title><rect x="123.8" y="1669" width="1.6" height="15.0" fill="rgb(222,121,28)" rx="2" ry="2" />
<text  x="126.78" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (102 samples, 1.75%)</title><rect x="102.7" y="1781" width="20.7" height="15.0" fill="rgb(245,101,11)" rx="2" ry="2" />
<text  x="105.69" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="171.6" y="1765" width="0.5" height="15.0" fill="rgb(237,17,0)" rx="2" ry="2" />
<text  x="174.65" y="1775.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.02%)</title><rect x="112.8" y="1605" width="0.2" height="15.0" fill="rgb(219,35,4)" rx="2" ry="2" />
<text  x="115.83" y="1615.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (127 samples, 2.18%)</title><rect x="10.0" y="2053" width="25.8" height="15.0" fill="rgb(244,135,40)" rx="2" ry="2" />
<text  x="13.00" y="2063.5" >[..</text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (18 samples, 0.31%)</title><rect x="165.6" y="1685" width="3.6" height="15.0" fill="rgb(219,151,24)" rx="2" ry="2" />
<text  x="168.56" y="1695.5" ></text>
</g>
<g >
<title>std::istream::sentry::sentry (2 samples, 0.03%)</title><rect x="1188.8" y="2053" width="0.4" height="15.0" fill="rgb(244,25,13)" rx="2" ry="2" />
<text  x="1191.78" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="1285" width="1.0" height="15.0" fill="rgb(249,97,39)" rx="2" ry="2" />
<text  x="83.58" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (31 samples, 0.53%)</title><rect x="102.7" y="1717" width="6.3" height="15.0" fill="rgb(235,10,30)" rx="2" ry="2" />
<text  x="105.69" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="1477" width="1.0" height="15.0" fill="rgb(228,92,8)" rx="2" ry="2" />
<text  x="83.58" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.4" y="421" width="0.2" height="15.0" fill="rgb(248,221,7)" rx="2" ry="2" />
<text  x="141.38" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.07%)</title><rect x="218.1" y="1605" width="0.8" height="15.0" fill="rgb(224,142,50)" rx="2" ry="2" />
<text  x="221.09" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (12 samples, 0.21%)</title><rect x="216.7" y="1925" width="2.4" height="15.0" fill="rgb(224,45,34)" rx="2" ry="2" />
<text  x="219.67" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.5" y="1109" width="0.2" height="15.0" fill="rgb(207,192,6)" rx="2" ry="2" />
<text  x="1171.50" y="1119.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="933" width="1.0" height="15.0" fill="rgb(233,151,42)" rx="2" ry="2" />
<text  x="83.58" y="943.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="981" width="1.0" height="15.0" fill="rgb(236,122,6)" rx="2" ry="2" />
<text  x="83.58" y="991.5" ></text>
</g>
<g >
<title>free_unref_page_list (1 samples, 0.02%)</title><rect x="578.1" y="1781" width="0.2" height="15.0" fill="rgb(226,116,52)" rx="2" ry="2" />
<text  x="581.10" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="138.0" y="1893" width="0.6" height="15.0" fill="rgb(215,114,43)" rx="2" ry="2" />
<text  x="140.98" y="1903.5" ></text>
</g>
<g >
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="41.6" y="1925" width="0.2" height="15.0" fill="rgb(209,189,1)" rx="2" ry="2" />
<text  x="44.64" y="1935.5" ></text>
</g>
<g >
<title>Annotate (84 samples, 1.44%)</title><rect x="85.7" y="2005" width="17.0" height="15.0" fill="rgb(242,202,35)" rx="2" ry="2" />
<text  x="88.65" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.4" y="453" width="0.2" height="15.0" fill="rgb(231,68,29)" rx="2" ry="2" />
<text  x="141.38" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.3" y="1637" width="0.2" height="15.0" fill="rgb(233,140,6)" rx="2" ry="2" />
<text  x="1171.30" y="1647.5" ></text>
</g>
<g >
<title>try_charge (1 samples, 0.02%)</title><rect x="437.1" y="1829" width="0.2" height="15.0" fill="rgb(215,182,7)" rx="2" ry="2" />
<text  x="440.14" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.2" y="949" width="0.2" height="15.0" fill="rgb(206,74,34)" rx="2" ry="2" />
<text  x="141.18" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.7" y="1781" width="0.2" height="15.0" fill="rgb(253,222,22)" rx="2" ry="2" />
<text  x="1171.70" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="218.7" y="1237" width="0.2" height="15.0" fill="rgb(244,138,41)" rx="2" ry="2" />
<text  x="221.70" y="1247.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="108.0" y="1573" width="0.2" height="15.0" fill="rgb(221,172,43)" rx="2" ry="2" />
<text  x="110.96" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.4" y="773" width="0.2" height="15.0" fill="rgb(238,148,23)" rx="2" ry="2" />
<text  x="141.38" y="783.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (120 samples, 2.06%)</title><rect x="1144.0" y="2053" width="24.3" height="15.0" fill="rgb(238,129,50)" rx="2" ry="2" />
<text  x="1146.96" y="2063.5" >s..</text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="712.6" y="1861" width="0.2" height="15.0" fill="rgb(251,177,44)" rx="2" ry="2" />
<text  x="715.56" y="1871.5" ></text>
</g>
<g >
<title>malloc (3 samples, 0.05%)</title><rect x="193.1" y="1637" width="0.7" height="15.0" fill="rgb(254,33,18)" rx="2" ry="2" />
<text  x="196.15" y="1647.5" ></text>
</g>
<g >
<title>clear_page_erms (8 samples, 0.14%)</title><rect x="33.5" y="1925" width="1.6" height="15.0" fill="rgb(240,66,16)" rx="2" ry="2" />
<text  x="36.53" y="1935.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.02%)</title><rect x="680.5" y="1845" width="0.2" height="15.0" fill="rgb(209,180,2)" rx="2" ry="2" />
<text  x="683.52" y="1855.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="206.9" y="1797" width="0.2" height="15.0" fill="rgb(215,102,6)" rx="2" ry="2" />
<text  x="209.94" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.2" y="901" width="0.2" height="15.0" fill="rgb(216,123,24)" rx="2" ry="2" />
<text  x="141.18" y="911.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="1047.2" y="1957" width="0.2" height="15.0" fill="rgb(233,155,45)" rx="2" ry="2" />
<text  x="1050.22" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="1157" width="1.0" height="15.0" fill="rgb(238,98,5)" rx="2" ry="2" />
<text  x="83.58" y="1167.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (15 samples, 0.26%)</title><rect x="887.4" y="2037" width="3.0" height="15.0" fill="rgb(228,76,4)" rx="2" ry="2" />
<text  x="890.39" y="2047.5" ></text>
</g>
<g >
<title>__handle_mm_fault (10 samples, 0.17%)</title><rect x="33.5" y="1973" width="2.1" height="15.0" fill="rgb(242,193,46)" rx="2" ry="2" />
<text  x="36.53" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.5" y="1957" width="0.2" height="15.0" fill="rgb(239,176,10)" rx="2" ry="2" />
<text  x="1171.50" y="1967.5" ></text>
</g>
<g >
<title>ComputeClusterWeight (344 samples, 5.91%)</title><rect x="102.7" y="1989" width="69.8" height="15.0" fill="rgb(237,178,31)" rx="2" ry="2" />
<text  x="105.69" y="1999.5" >Compute..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="138.2" y="1445" width="0.4" height="15.0" fill="rgb(253,90,0)" rx="2" ry="2" />
<text  x="141.18" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (33 samples, 0.57%)</title><rect x="116.5" y="1653" width="6.7" height="15.0" fill="rgb(247,193,5)" rx="2" ry="2" />
<text  x="119.48" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.7" y="469" width="0.2" height="15.0" fill="rgb(230,64,5)" rx="2" ry="2" />
<text  x="1171.70" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="171.6" y="1813" width="0.5" height="15.0" fill="rgb(223,22,42)" rx="2" ry="2" />
<text  x="174.65" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="218.5" y="965" width="0.2" height="15.0" fill="rgb(228,110,40)" rx="2" ry="2" />
<text  x="221.50" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.3" y="965" width="0.2" height="15.0" fill="rgb(216,25,17)" rx="2" ry="2" />
<text  x="1171.30" y="975.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="680.5" y="1765" width="0.2" height="15.0" fill="rgb(216,173,42)" rx="2" ry="2" />
<text  x="683.52" y="1775.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id@plt (1 samples, 0.02%)</title><rect x="157.2" y="1621" width="0.2" height="15.0" fill="rgb(251,207,4)" rx="2" ry="2" />
<text  x="160.25" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="171.8" y="1493" width="0.3" height="15.0" fill="rgb(225,148,38)" rx="2" ry="2" />
<text  x="174.85" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.5" y="1125" width="0.2" height="15.0" fill="rgb(221,227,41)" rx="2" ry="2" />
<text  x="1171.50" y="1135.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (8 samples, 0.14%)</title><rect x="40.0" y="1893" width="1.6" height="15.0" fill="rgb(248,196,49)" rx="2" ry="2" />
<text  x="43.02" y="1903.5" ></text>
</g>
<g >
<title>strlen@plt (7 samples, 0.12%)</title><rect x="862.4" y="1893" width="1.5" height="15.0" fill="rgb(241,185,45)" rx="2" ry="2" />
<text  x="865.45" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.2" y="645" width="0.2" height="15.0" fill="rgb(215,34,16)" rx="2" ry="2" />
<text  x="141.18" y="655.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="917" width="1.0" height="15.0" fill="rgb(209,71,23)" rx="2" ry="2" />
<text  x="83.58" y="927.5" ></text>
</g>
<g >
<title>__vm_munmap (2 samples, 0.03%)</title><rect x="578.1" y="1925" width="0.4" height="15.0" fill="rgb(244,153,49)" rx="2" ry="2" />
<text  x="581.10" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="373" width="1.0" height="15.0" fill="rgb(222,57,20)" rx="2" ry="2" />
<text  x="83.58" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.7" y="1509" width="0.2" height="15.0" fill="rgb(246,45,38)" rx="2" ry="2" />
<text  x="1171.70" y="1519.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (2 samples, 0.03%)</title><rect x="106.7" y="1573" width="0.5" height="15.0" fill="rgb(243,37,20)" rx="2" ry="2" />
<text  x="109.74" y="1583.5" ></text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::scan_string (66 samples, 1.13%)</title><rect x="88.3" y="1941" width="13.4" height="15.0" fill="rgb(245,73,0)" rx="2" ry="2" />
<text  x="91.29" y="1951.5" ></text>
</g>
<g >
<title>Eigen::internal::product_evaluator&lt;Eigen::Product&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0&gt;, 7, Eigen::DenseShape, Eigen::DenseShape, float, float&gt;::product_evaluator (3 samples, 0.05%)</title><rect x="227.2" y="1973" width="0.6" height="15.0" fill="rgb(235,159,44)" rx="2" ry="2" />
<text  x="230.22" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="218.7" y="949" width="0.2" height="15.0" fill="rgb(230,151,13)" rx="2" ry="2" />
<text  x="221.70" y="959.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="711.6" y="1749" width="0.2" height="15.0" fill="rgb(208,204,2)" rx="2" ry="2" />
<text  x="714.55" y="1759.5" ></text>
</g>
<g >
<title>std::ios_base::_M_call_callbacks@plt (1 samples, 0.02%)</title><rect x="582.8" y="1957" width="0.2" height="15.0" fill="rgb(218,41,47)" rx="2" ry="2" />
<text  x="585.76" y="1967.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (3 samples, 0.05%)</title><rect x="182.0" y="1573" width="0.6" height="15.0" fill="rgb(217,183,50)" rx="2" ry="2" />
<text  x="184.99" y="1583.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="548.7" y="1941" width="0.2" height="15.0" fill="rgb(229,34,18)" rx="2" ry="2" />
<text  x="551.69" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="218.5" y="1349" width="0.4" height="15.0" fill="rgb(211,170,26)" rx="2" ry="2" />
<text  x="221.50" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13 samples, 0.22%)</title><rect x="216.5" y="1941" width="2.6" height="15.0" fill="rgb(243,75,46)" rx="2" ry="2" />
<text  x="219.47" y="1951.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;std::__detail::_State&lt;char&gt; const*, std::__detail::_State&lt;char&gt;*&gt; (1 samples, 0.02%)</title><rect x="131.9" y="1717" width="0.2" height="15.0" fill="rgb(215,70,19)" rx="2" ry="2" />
<text  x="134.89" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (26 samples, 0.45%)</title><rect x="152.6" y="1749" width="5.3" height="15.0" fill="rgb(231,89,26)" rx="2" ry="2" />
<text  x="155.58" y="1759.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt;@plt (1 samples, 0.02%)</title><rect x="163.7" y="1653" width="0.2" height="15.0" fill="rgb(220,70,34)" rx="2" ry="2" />
<text  x="166.74" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="218.5" y="1029" width="0.2" height="15.0" fill="rgb(208,36,27)" rx="2" ry="2" />
<text  x="221.50" y="1039.5" ></text>
</g>
<g >
<title>malloc (60 samples, 1.03%)</title><rect x="1102.2" y="2053" width="12.1" height="15.0" fill="rgb(239,51,13)" rx="2" ry="2" />
<text  x="1105.18" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (16 samples, 0.28%)</title><rect x="147.9" y="1605" width="3.3" height="15.0" fill="rgb(244,29,54)" rx="2" ry="2" />
<text  x="150.92" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="293" width="1.0" height="15.0" fill="rgb(244,219,20)" rx="2" ry="2" />
<text  x="83.58" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.7" y="309" width="0.2" height="15.0" fill="rgb(222,200,45)" rx="2" ry="2" />
<text  x="1171.70" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (164 samples, 2.82%)</title><rect x="173.7" y="1813" width="33.2" height="15.0" fill="rgb(220,85,4)" rx="2" ry="2" />
<text  x="176.67" y="1823.5" >st..</text>
</g>
<g >
<title>__dynamic_cast (45 samples, 0.77%)</title><rect x="916.2" y="2053" width="9.1" height="15.0" fill="rgb(253,106,21)" rx="2" ry="2" />
<text  x="919.19" y="2063.5" ></text>
</g>
<g >
<title>__dynamic_cast (6 samples, 0.10%)</title><rect x="102.9" y="1589" width="1.2" height="15.0" fill="rgb(241,199,25)" rx="2" ry="2" />
<text  x="105.89" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.3" y="2037" width="0.2" height="15.0" fill="rgb(238,218,53)" rx="2" ry="2" />
<text  x="1171.30" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.2" y="613" width="0.2" height="15.0" fill="rgb(223,170,0)" rx="2" ry="2" />
<text  x="141.18" y="623.5" ></text>
</g>
<g >
<title>do_futex (3 samples, 0.05%)</title><rect x="102.1" y="1909" width="0.6" height="15.0" fill="rgb(232,108,26)" rx="2" ry="2" />
<text  x="105.08" y="1919.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (1 samples, 0.02%)</title><rect x="122.4" y="1621" width="0.2" height="15.0" fill="rgb(206,137,9)" rx="2" ry="2" />
<text  x="125.36" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.7" y="1365" width="0.2" height="15.0" fill="rgb(206,72,32)" rx="2" ry="2" />
<text  x="1171.70" y="1375.5" ></text>
</g>
<g >
<title>std::istream::sentry::sentry (11 samples, 0.19%)</title><rect x="882.3" y="2005" width="2.3" height="15.0" fill="rgb(231,222,52)" rx="2" ry="2" />
<text  x="885.32" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.4" y="1253" width="0.2" height="15.0" fill="rgb(236,134,52)" rx="2" ry="2" />
<text  x="141.38" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.7" y="837" width="0.2" height="15.0" fill="rgb(241,120,47)" rx="2" ry="2" />
<text  x="1171.70" y="847.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (1 samples, 0.02%)</title><rect x="212.8" y="1685" width="0.2" height="15.0" fill="rgb(220,139,0)" rx="2" ry="2" />
<text  x="215.82" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_Compiler (212 samples, 3.64%)</title><rect x="173.5" y="1941" width="43.0" height="15.0" fill="rgb(221,122,23)" rx="2" ry="2" />
<text  x="176.47" y="1951.5" >std:..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.2" y="1173" width="0.2" height="15.0" fill="rgb(233,186,26)" rx="2" ry="2" />
<text  x="141.18" y="1183.5" ></text>
</g>
<g >
<title>__lru_cache_add (1 samples, 0.02%)</title><rect x="443.2" y="1861" width="0.2" height="15.0" fill="rgb(224,112,7)" rx="2" ry="2" />
<text  x="446.22" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="217.7" y="1189" width="0.2" height="15.0" fill="rgb(215,205,34)" rx="2" ry="2" />
<text  x="220.69" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.5" y="1237" width="0.2" height="15.0" fill="rgb(243,181,40)" rx="2" ry="2" />
<text  x="1171.50" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.2" y="1285" width="0.2" height="15.0" fill="rgb(236,220,29)" rx="2" ry="2" />
<text  x="141.18" y="1295.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (1 samples, 0.02%)</title><rect x="212.6" y="1685" width="0.2" height="15.0" fill="rgb(251,212,8)" rx="2" ry="2" />
<text  x="215.62" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.5" y="853" width="0.2" height="15.0" fill="rgb(209,213,4)" rx="2" ry="2" />
<text  x="1171.50" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="217.7" y="1285" width="0.2" height="15.0" fill="rgb(251,21,13)" rx="2" ry="2" />
<text  x="220.69" y="1295.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id@plt (1 samples, 0.02%)</title><rect x="144.1" y="1573" width="0.2" height="15.0" fill="rgb(212,48,14)" rx="2" ry="2" />
<text  x="147.06" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.3" y="1781" width="0.2" height="15.0" fill="rgb(226,32,9)" rx="2" ry="2" />
<text  x="1171.30" y="1791.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (1 samples, 0.02%)</title><rect x="1132.2" y="2053" width="0.2" height="15.0" fill="rgb(248,3,23)" rx="2" ry="2" />
<text  x="1135.20" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (19 samples, 0.33%)</title><rect x="201.7" y="1669" width="3.8" height="15.0" fill="rgb(223,167,40)" rx="2" ry="2" />
<text  x="204.66" y="1679.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="863.9" y="1909" width="0.2" height="15.0" fill="rgb(223,9,34)" rx="2" ry="2" />
<text  x="866.87" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.4" y="645" width="0.2" height="15.0" fill="rgb(220,139,45)" rx="2" ry="2" />
<text  x="141.38" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="217.5" y="1621" width="0.4" height="15.0" fill="rgb(250,146,46)" rx="2" ry="2" />
<text  x="220.48" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.4" y="1093" width="0.2" height="15.0" fill="rgb(216,66,15)" rx="2" ry="2" />
<text  x="141.38" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="171.6" y="1781" width="0.5" height="15.0" fill="rgb(212,144,9)" rx="2" ry="2" />
<text  x="174.65" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.5" y="885" width="0.2" height="15.0" fill="rgb(214,160,13)" rx="2" ry="2" />
<text  x="1171.50" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.5" y="821" width="0.2" height="15.0" fill="rgb(224,38,12)" rx="2" ry="2" />
<text  x="1171.50" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="171.8" y="1605" width="0.3" height="15.0" fill="rgb(206,96,11)" rx="2" ry="2" />
<text  x="174.85" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.5" y="1845" width="0.2" height="15.0" fill="rgb(235,71,6)" rx="2" ry="2" />
<text  x="1171.50" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="405" width="1.0" height="15.0" fill="rgb(233,209,9)" rx="2" ry="2" />
<text  x="83.58" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.07%)</title><rect x="218.1" y="1717" width="0.8" height="15.0" fill="rgb(239,173,11)" rx="2" ry="2" />
<text  x="221.09" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.2" y="805" width="0.2" height="15.0" fill="rgb(220,149,17)" rx="2" ry="2" />
<text  x="141.18" y="815.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (1 samples, 0.02%)</title><rect x="1133.8" y="2053" width="0.2" height="15.0" fill="rgb(250,189,40)" rx="2" ry="2" />
<text  x="1136.82" y="2063.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="140.6" y="1573" width="0.2" height="15.0" fill="rgb(206,78,27)" rx="2" ry="2" />
<text  x="143.62" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="1349" width="1.0" height="15.0" fill="rgb(213,153,8)" rx="2" ry="2" />
<text  x="83.58" y="1359.5" ></text>
</g>
<g >
<title>cfree (2 samples, 0.03%)</title><rect x="125.4" y="1669" width="0.4" height="15.0" fill="rgb(250,180,38)" rx="2" ry="2" />
<text  x="128.40" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (1 samples, 0.02%)</title><rect x="152.4" y="1701" width="0.2" height="15.0" fill="rgb(248,172,8)" rx="2" ry="2" />
<text  x="155.38" y="1711.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="185.0" y="1557" width="0.2" height="15.0" fill="rgb(240,32,49)" rx="2" ry="2" />
<text  x="188.03" y="1567.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.02%)</title><rect x="680.5" y="1861" width="0.2" height="15.0" fill="rgb(236,124,45)" rx="2" ry="2" />
<text  x="683.52" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.3" y="1813" width="0.2" height="15.0" fill="rgb(220,181,42)" rx="2" ry="2" />
<text  x="1171.30" y="1823.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (2 samples, 0.03%)</title><rect x="169.8" y="1685" width="0.4" height="15.0" fill="rgb(236,218,22)" rx="2" ry="2" />
<text  x="172.82" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (33 samples, 0.57%)</title><rect x="163.9" y="1733" width="6.7" height="15.0" fill="rgb(253,73,8)" rx="2" ry="2" />
<text  x="166.94" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (33 samples, 0.57%)</title><rect x="116.5" y="1685" width="6.7" height="15.0" fill="rgb(244,8,10)" rx="2" ry="2" />
<text  x="119.48" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (1 samples, 0.02%)</title><rect x="206.7" y="1781" width="0.2" height="15.0" fill="rgb(207,40,11)" rx="2" ry="2" />
<text  x="209.73" y="1791.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::json_value::destroy (1 samples, 0.02%)</title><rect x="580.5" y="1989" width="0.2" height="15.0" fill="rgb(252,214,42)" rx="2" ry="2" />
<text  x="583.53" y="1999.5" ></text>
</g>
<g >
<title>onmt::unicode::get_lower@plt (1 samples, 0.02%)</title><rect x="767.5" y="1893" width="0.2" height="15.0" fill="rgb(232,159,33)" rx="2" ry="2" />
<text  x="770.53" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="138.2" y="1765" width="0.4" height="15.0" fill="rgb(216,122,54)" rx="2" ry="2" />
<text  x="141.18" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="138.2" y="1845" width="0.4" height="15.0" fill="rgb(233,125,48)" rx="2" ry="2" />
<text  x="141.18" y="1855.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="925.5" y="2021" width="0.2" height="15.0" fill="rgb(251,57,20)" rx="2" ry="2" />
<text  x="928.52" y="2031.5" ></text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::get (7 samples, 0.12%)</title><rect x="100.3" y="1909" width="1.4" height="15.0" fill="rgb(226,112,48)" rx="2" ry="2" />
<text  x="103.25" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="171.8" y="1413" width="0.3" height="15.0" fill="rgb(248,109,37)" rx="2" ry="2" />
<text  x="174.85" y="1423.5" ></text>
</g>
<g >
<title>malloc (2 samples, 0.03%)</title><rect x="125.8" y="1669" width="0.4" height="15.0" fill="rgb(222,203,44)" rx="2" ry="2" />
<text  x="128.81" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.7" y="629" width="0.2" height="15.0" fill="rgb(242,180,12)" rx="2" ry="2" />
<text  x="1171.70" y="639.5" ></text>
</g>
<g >
<title>__handle_mm_fault (7 samples, 0.12%)</title><rect x="710.9" y="1797" width="1.5" height="15.0" fill="rgb(208,80,45)" rx="2" ry="2" />
<text  x="713.94" y="1807.5" ></text>
</g>
<g >
<title>vfs_read (4 samples, 0.07%)</title><rect x="84.4" y="1957" width="0.8" height="15.0" fill="rgb(246,151,4)" rx="2" ry="2" />
<text  x="87.43" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.7" y="613" width="0.2" height="15.0" fill="rgb(207,162,3)" rx="2" ry="2" />
<text  x="1171.70" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.2" y="1301" width="0.2" height="15.0" fill="rgb(209,18,29)" rx="2" ry="2" />
<text  x="141.18" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="218.3" y="1461" width="0.6" height="15.0" fill="rgb(254,110,41)" rx="2" ry="2" />
<text  x="221.29" y="1471.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="123.0" y="1637" width="0.2" height="15.0" fill="rgb(218,159,47)" rx="2" ry="2" />
<text  x="125.97" y="1647.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="110.8" y="1621" width="0.2" height="15.0" fill="rgb(233,62,27)" rx="2" ry="2" />
<text  x="113.80" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (21 samples, 0.36%)</title><rect x="185.2" y="1621" width="4.3" height="15.0" fill="rgb(242,186,46)" rx="2" ry="2" />
<text  x="188.24" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.07%)</title><rect x="218.1" y="1637" width="0.8" height="15.0" fill="rgb(246,75,50)" rx="2" ry="2" />
<text  x="221.09" y="1647.5" ></text>
</g>
<g >
<title>page_fault (14 samples, 0.24%)</title><rect x="32.7" y="2037" width="2.9" height="15.0" fill="rgb(248,146,10)" rx="2" ry="2" />
<text  x="35.72" y="2047.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.25] (3 samples, 0.05%)</title><rect x="38.0" y="2037" width="0.6" height="15.0" fill="rgb(218,205,1)" rx="2" ry="2" />
<text  x="40.99" y="2047.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (1 samples, 0.02%)</title><rect x="955.1" y="1877" width="0.2" height="15.0" fill="rgb(252,48,43)" rx="2" ry="2" />
<text  x="958.14" y="1887.5" ></text>
</g>
<g >
<title>fasttext::Vector::addRow (7 samples, 0.12%)</title><rect x="555.8" y="1973" width="1.4" height="15.0" fill="rgb(247,213,4)" rx="2" ry="2" />
<text  x="558.79" y="1983.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append@plt (1 samples, 0.02%)</title><rect x="882.1" y="2005" width="0.2" height="15.0" fill="rgb(243,37,49)" rx="2" ry="2" />
<text  x="885.12" y="2015.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="581.9" y="1989" width="0.3" height="15.0" fill="rgb(210,13,31)" rx="2" ry="2" />
<text  x="584.95" y="1999.5" ></text>
</g>
<g >
<title>TAgencyRating::ScoreUrl (166 samples, 2.85%)</title><rect x="138.6" y="1973" width="33.7" height="15.0" fill="rgb(251,166,38)" rx="2" ry="2" />
<text  x="141.59" y="1983.5" >TA..</text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="712.6" y="1845" width="0.2" height="15.0" fill="rgb(247,185,7)" rx="2" ry="2" />
<text  x="715.56" y="1855.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (2 samples, 0.03%)</title><rect x="577.7" y="1973" width="0.4" height="15.0" fill="rgb(252,149,6)" rx="2" ry="2" />
<text  x="580.69" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="1237" width="1.0" height="15.0" fill="rgb(215,71,45)" rx="2" ry="2" />
<text  x="83.58" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.7" y="373" width="0.2" height="15.0" fill="rgb(243,227,43)" rx="2" ry="2" />
<text  x="1171.70" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_quantifier (1 samples, 0.02%)</title><rect x="109.0" y="1717" width="0.2" height="15.0" fill="rgb(216,176,0)" rx="2" ry="2" />
<text  x="111.98" y="1727.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (1 samples, 0.02%)</title><rect x="150.8" y="1589" width="0.2" height="15.0" fill="rgb(241,186,42)" rx="2" ry="2" />
<text  x="153.76" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.2" y="1029" width="0.2" height="15.0" fill="rgb(249,115,29)" rx="2" ry="2" />
<text  x="141.18" y="1039.5" ></text>
</g>
<g >
<title>tlb_flush_mmu_free (1 samples, 0.02%)</title><rect x="578.1" y="1829" width="0.2" height="15.0" fill="rgb(234,141,23)" rx="2" ry="2" />
<text  x="581.10" y="1839.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="137.4" y="1829" width="0.2" height="15.0" fill="rgb(223,94,20)" rx="2" ry="2" />
<text  x="140.37" y="1839.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (2 samples, 0.03%)</title><rect x="578.5" y="2005" width="0.4" height="15.0" fill="rgb(248,149,54)" rx="2" ry="2" />
<text  x="581.50" y="2015.5" ></text>
</g>
<g >
<title>__munmap (2 samples, 0.03%)</title><rect x="578.1" y="1989" width="0.4" height="15.0" fill="rgb(209,156,25)" rx="2" ry="2" />
<text  x="581.10" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.4" y="709" width="0.2" height="15.0" fill="rgb(242,86,23)" rx="2" ry="2" />
<text  x="141.38" y="719.5" ></text>
</g>
<g >
<title>__do_page_fault (4 samples, 0.07%)</title><rect x="79.4" y="1989" width="0.8" height="15.0" fill="rgb(229,79,23)" rx="2" ry="2" />
<text  x="82.36" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.7" y="1749" width="0.2" height="15.0" fill="rgb(229,61,8)" rx="2" ry="2" />
<text  x="1171.70" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.3" y="1365" width="0.2" height="15.0" fill="rgb(207,133,3)" rx="2" ry="2" />
<text  x="1171.30" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="218.7" y="901" width="0.2" height="15.0" fill="rgb(240,155,9)" rx="2" ry="2" />
<text  x="221.70" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.5" y="1381" width="0.2" height="15.0" fill="rgb(232,155,21)" rx="2" ry="2" />
<text  x="1171.50" y="1391.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.03%)</title><rect x="830.8" y="1877" width="0.4" height="15.0" fill="rgb(227,142,30)" rx="2" ry="2" />
<text  x="833.81" y="1887.5" ></text>
</g>
<g >
<title>onmt::unicode::is_letter (179 samples, 3.08%)</title><rect x="714.6" y="1877" width="36.3" height="15.0" fill="rgb(227,214,12)" rx="2" ry="2" />
<text  x="717.59" y="1887.5" >onm..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.7" y="1701" width="0.2" height="15.0" fill="rgb(244,1,39)" rx="2" ry="2" />
<text  x="1171.70" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.3" y="181" width="0.2" height="15.0" fill="rgb(247,53,29)" rx="2" ry="2" />
<text  x="1171.30" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (25 samples, 0.43%)</title><rect x="152.6" y="1717" width="5.1" height="15.0" fill="rgb(216,183,34)" rx="2" ry="2" />
<text  x="155.58" y="1727.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (4 samples, 0.07%)</title><rect x="84.4" y="1861" width="0.8" height="15.0" fill="rgb(226,87,25)" rx="2" ry="2" />
<text  x="87.43" y="1871.5" ></text>
</g>
<g >
<title>release_pages (1 samples, 0.02%)</title><rect x="955.1" y="1861" width="0.2" height="15.0" fill="rgb(229,99,5)" rx="2" ry="2" />
<text  x="958.14" y="1871.5" ></text>
</g>
<g >
<title>pmd_page_vaddr (1 samples, 0.02%)</title><rect x="437.3" y="1861" width="0.2" height="15.0" fill="rgb(226,167,37)" rx="2" ry="2" />
<text  x="440.34" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (27 samples, 0.46%)</title><rect x="177.1" y="1589" width="5.5" height="15.0" fill="rgb(227,141,0)" rx="2" ry="2" />
<text  x="180.12" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.5" y="1989" width="0.2" height="15.0" fill="rgb(224,129,38)" rx="2" ry="2" />
<text  x="1171.50" y="1999.5" ></text>
</g>
<g >
<title>onmt::unicode::cp_to_utf8[abi:cxx11]@plt (1 samples, 0.02%)</title><rect x="764.5" y="1893" width="0.2" height="15.0" fill="rgb(213,175,8)" rx="2" ry="2" />
<text  x="767.49" y="1903.5" ></text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::next_byte_in_range (19 samples, 0.33%)</title><rect x="97.8" y="1925" width="3.9" height="15.0" fill="rgb(206,141,32)" rx="2" ry="2" />
<text  x="100.82" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.4" y="789" width="0.2" height="15.0" fill="rgb(209,100,34)" rx="2" ry="2" />
<text  x="141.38" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="218.7" y="709" width="0.2" height="15.0" fill="rgb(243,39,52)" rx="2" ry="2" />
<text  x="221.70" y="719.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::~collate (35 samples, 0.60%)</title><rect x="890.4" y="2037" width="7.1" height="15.0" fill="rgb(221,222,52)" rx="2" ry="2" />
<text  x="893.44" y="2047.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::push_back (2 samples, 0.03%)</title><rect x="897.9" y="2037" width="0.4" height="15.0" fill="rgb(252,89,11)" rx="2" ry="2" />
<text  x="900.94" y="2047.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (1 samples, 0.02%)</title><rect x="925.5" y="1941" width="0.2" height="15.0" fill="rgb(237,149,5)" rx="2" ry="2" />
<text  x="928.52" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="1301" width="1.0" height="15.0" fill="rgb(209,201,19)" rx="2" ry="2" />
<text  x="83.58" y="1311.5" ></text>
</g>
<g >
<title>cfree (1 samples, 0.02%)</title><rect x="184.2" y="1621" width="0.2" height="15.0" fill="rgb(219,13,6)" rx="2" ry="2" />
<text  x="187.22" y="1631.5" ></text>
</g>
<g >
<title>TSlinkClustering::Cluster (1,154 samples, 19.83%)</title><rect x="344.4" y="2005" width="234.1" height="15.0" fill="rgb(220,206,27)" rx="2" ry="2" />
<text  x="347.45" y="2015.5" >TSlinkClustering::Cluster</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.7" y="1669" width="0.2" height="15.0" fill="rgb(238,2,21)" rx="2" ry="2" />
<text  x="1171.70" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt;,  (3 samples, 0.05%)</title><rect x="138.0" y="1957" width="0.6" height="15.0" fill="rgb(245,170,39)" rx="2" ry="2" />
<text  x="140.98" y="1967.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (5 samples, 0.09%)</title><rect x="129.9" y="1653" width="1.0" height="15.0" fill="rgb(222,45,3)" rx="2" ry="2" />
<text  x="132.87" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="597" width="1.0" height="15.0" fill="rgb(243,148,21)" rx="2" ry="2" />
<text  x="83.58" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.2" y="789" width="0.2" height="15.0" fill="rgb(206,36,37)" rx="2" ry="2" />
<text  x="141.18" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.7" y="565" width="0.2" height="15.0" fill="rgb(249,137,53)" rx="2" ry="2" />
<text  x="1171.70" y="575.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="1749" width="1.0" height="15.0" fill="rgb(207,0,40)" rx="2" ry="2" />
<text  x="83.58" y="1759.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (1 samples, 0.02%)</title><rect x="197.0" y="1637" width="0.2" height="15.0" fill="rgb(209,102,14)" rx="2" ry="2" />
<text  x="200.00" y="1647.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_istringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_istringstream (1 samples, 0.02%)</title><rect x="898.5" y="2005" width="0.3" height="15.0" fill="rgb(225,57,18)" rx="2" ry="2" />
<text  x="901.55" y="2015.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="879.3" y="1925" width="0.2" height="15.0" fill="rgb(218,167,14)" rx="2" ry="2" />
<text  x="882.28" y="1935.5" ></text>
</g>
<g >
<title>__pthread_once_slow (1,414 samples, 24.30%)</title><rect x="581.5" y="2037" width="286.8" height="15.0" fill="rgb(235,145,40)" rx="2" ry="2" />
<text  x="584.54" y="2047.5" >__pthread_once_slow</text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (1 samples, 0.02%)</title><rect x="204.5" y="1653" width="0.2" height="15.0" fill="rgb(227,155,33)" rx="2" ry="2" />
<text  x="207.50" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 0.10%)</title><rect x="80.4" y="1861" width="1.2" height="15.0" fill="rgb(234,34,10)" rx="2" ry="2" />
<text  x="83.38" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="1077" width="1.0" height="15.0" fill="rgb(218,113,42)" rx="2" ry="2" />
<text  x="83.58" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.5" y="485" width="0.2" height="15.0" fill="rgb(210,44,22)" rx="2" ry="2" />
<text  x="1171.50" y="495.5" ></text>
</g>
<g >
<title>mmput (1 samples, 0.02%)</title><rect x="955.1" y="1973" width="0.2" height="15.0" fill="rgb(240,152,50)" rx="2" ry="2" />
<text  x="958.14" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.3" y="869" width="0.2" height="15.0" fill="rgb(228,149,16)" rx="2" ry="2" />
<text  x="1171.30" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.7" y="1973" width="0.2" height="15.0" fill="rgb(219,169,27)" rx="2" ry="2" />
<text  x="1171.70" y="1983.5" ></text>
</g>
<g >
<title>tlb_flush_mmu_free (1 samples, 0.02%)</title><rect x="578.3" y="1829" width="0.2" height="15.0" fill="rgb(252,24,30)" rx="2" ry="2" />
<text  x="581.30" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.5" y="837" width="0.2" height="15.0" fill="rgb(225,213,54)" rx="2" ry="2" />
<text  x="1171.50" y="847.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace_aux (1 samples, 0.02%)</title><rect x="190.1" y="1733" width="0.2" height="15.0" fill="rgb(239,20,25)" rx="2" ry="2" />
<text  x="193.10" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="218.7" y="997" width="0.2" height="15.0" fill="rgb(254,15,42)" rx="2" ry="2" />
<text  x="221.70" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1168.5" y="2037" width="0.4" height="15.0" fill="rgb(224,79,14)" rx="2" ry="2" />
<text  x="1171.50" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="138.2" y="1701" width="0.4" height="15.0" fill="rgb(245,74,32)" rx="2" ry="2" />
<text  x="141.18" y="1711.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt;@plt (1 samples, 0.02%)</title><rect x="170.2" y="1685" width="0.2" height="15.0" fill="rgb(237,89,42)" rx="2" ry="2" />
<text  x="173.23" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.4" y="1237" width="0.2" height="15.0" fill="rgb(253,29,48)" rx="2" ry="2" />
<text  x="141.38" y="1247.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="709" width="1.0" height="15.0" fill="rgb(206,40,18)" rx="2" ry="2" />
<text  x="83.58" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (42 samples, 0.72%)</title><rect x="123.4" y="1733" width="8.5" height="15.0" fill="rgb(222,91,5)" rx="2" ry="2" />
<text  x="126.38" y="1743.5" ></text>
</g>
<g >
<title>vfs_read (1 samples, 0.02%)</title><rect x="925.3" y="1973" width="0.2" height="15.0" fill="rgb(221,4,50)" rx="2" ry="2" />
<text  x="928.32" y="1983.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id@plt (2 samples, 0.03%)</title><rect x="108.4" y="1589" width="0.4" height="15.0" fill="rgb(234,36,12)" rx="2" ry="2" />
<text  x="111.37" y="1599.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.07%)</title><rect x="101.9" y="1957" width="0.8" height="15.0" fill="rgb(248,84,37)" rx="2" ry="2" />
<text  x="104.88" y="1967.5" ></text>
</g>
<g >
<title>unmap_page_range (1 samples, 0.02%)</title><rect x="955.1" y="1909" width="0.2" height="15.0" fill="rgb(253,168,30)" rx="2" ry="2" />
<text  x="958.14" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="171.8" y="1477" width="0.3" height="15.0" fill="rgb(226,51,4)" rx="2" ry="2" />
<text  x="174.85" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (84 samples, 1.44%)</title><rect x="173.7" y="1765" width="17.0" height="15.0" fill="rgb(210,83,0)" rx="2" ry="2" />
<text  x="176.67" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.7" y="869" width="0.2" height="15.0" fill="rgb(236,145,24)" rx="2" ry="2" />
<text  x="1171.70" y="879.5" ></text>
</g>
<g >
<title>DetectCategory (5 samples, 0.09%)</title><rect x="582.2" y="1973" width="1.0" height="15.0" fill="rgb(211,215,5)" rx="2" ry="2" />
<text  x="585.15" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="218.5" y="1125" width="0.2" height="15.0" fill="rgb(246,144,32)" rx="2" ry="2" />
<text  x="221.50" y="1135.5" ></text>
</g>
<g >
<title>__dynamic_cast (6 samples, 0.10%)</title><rect x="139.2" y="1573" width="1.2" height="15.0" fill="rgb(243,211,11)" rx="2" ry="2" />
<text  x="142.20" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (15 samples, 0.26%)</title><rect x="890.4" y="1989" width="3.1" height="15.0" fill="rgb(216,131,37)" rx="2" ry="2" />
<text  x="893.44" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.7" y="1797" width="0.2" height="15.0" fill="rgb(241,116,5)" rx="2" ry="2" />
<text  x="1171.70" y="1807.5" ></text>
</g>
<g >
<title>TDocument::TDocument (5 samples, 0.09%)</title><rect x="85.7" y="1989" width="1.0" height="15.0" fill="rgb(220,44,12)" rx="2" ry="2" />
<text  x="88.65" y="1999.5" ></text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.02%)</title><rect x="680.5" y="1749" width="0.2" height="15.0" fill="rgb(253,189,48)" rx="2" ry="2" />
<text  x="683.52" y="1759.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="80.8" y="117" width="0.2" height="15.0" fill="rgb(227,66,10)" rx="2" ry="2" />
<text  x="83.78" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.3" y="789" width="0.2" height="15.0" fill="rgb(216,148,43)" rx="2" ry="2" />
<text  x="1171.30" y="799.5" ></text>
</g>
<g >
<title>exit_mmap (1 samples, 0.02%)</title><rect x="955.1" y="1957" width="0.2" height="15.0" fill="rgb(218,151,19)" rx="2" ry="2" />
<text  x="958.14" y="1967.5" ></text>
</g>
<g >
<title>std::locale::locale (1 samples, 0.02%)</title><rect x="897.7" y="2005" width="0.2" height="15.0" fill="rgb(231,66,42)" rx="2" ry="2" />
<text  x="900.74" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (1 samples, 0.02%)</title><rect x="137.2" y="1781" width="0.2" height="15.0" fill="rgb(220,189,5)" rx="2" ry="2" />
<text  x="140.17" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.7" y="1637" width="0.2" height="15.0" fill="rgb(240,204,45)" rx="2" ry="2" />
<text  x="1171.70" y="1647.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (57 samples, 0.98%)</title><rect x="1120.6" y="2053" width="11.6" height="15.0" fill="rgb(236,170,9)" rx="2" ry="2" />
<text  x="1123.64" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="965" width="1.0" height="15.0" fill="rgb(236,212,43)" rx="2" ry="2" />
<text  x="83.58" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.7" y="1237" width="0.2" height="15.0" fill="rgb(219,216,37)" rx="2" ry="2" />
<text  x="1171.70" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.3" y="885" width="0.2" height="15.0" fill="rgb(245,80,18)" rx="2" ry="2" />
<text  x="1171.30" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.3" y="1189" width="0.2" height="15.0" fill="rgb(211,70,53)" rx="2" ry="2" />
<text  x="1171.30" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (68 samples, 1.17%)</title><rect x="138.6" y="1733" width="13.8" height="15.0" fill="rgb(227,108,29)" rx="2" ry="2" />
<text  x="141.59" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (33 samples, 0.57%)</title><rect x="190.7" y="1685" width="6.7" height="15.0" fill="rgb(234,46,40)" rx="2" ry="2" />
<text  x="193.71" y="1695.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.05%)</title><rect x="644.8" y="1861" width="0.6" height="15.0" fill="rgb(251,5,20)" rx="2" ry="2" />
<text  x="647.82" y="1871.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::dump (4 samples, 0.07%)</title><rect x="579.3" y="2005" width="0.8" height="15.0" fill="rgb(229,200,22)" rx="2" ry="2" />
<text  x="582.31" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (12 samples, 0.21%)</title><rect x="216.7" y="1893" width="2.4" height="15.0" fill="rgb(223,81,27)" rx="2" ry="2" />
<text  x="219.67" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.2" y="981" width="0.2" height="15.0" fill="rgb(228,112,45)" rx="2" ry="2" />
<text  x="141.18" y="991.5" ></text>
</g>
<g >
<title>cfree (3 samples, 0.05%)</title><rect x="200.2" y="1669" width="0.7" height="15.0" fill="rgb(254,221,7)" rx="2" ry="2" />
<text  x="203.24" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.3" y="901" width="0.2" height="15.0" fill="rgb(208,49,33)" rx="2" ry="2" />
<text  x="1171.30" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3 samples, 0.05%)</title><rect x="215.5" y="1861" width="0.6" height="15.0" fill="rgb(236,179,8)" rx="2" ry="2" />
<text  x="218.46" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="171.6" y="1797" width="0.5" height="15.0" fill="rgb(228,118,13)" rx="2" ry="2" />
<text  x="174.65" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="1445" width="1.0" height="15.0" fill="rgb(220,73,28)" rx="2" ry="2" />
<text  x="83.58" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.3" y="1541" width="0.2" height="15.0" fill="rgb(250,20,3)" rx="2" ry="2" />
<text  x="1171.30" y="1551.5" ></text>
</g>
<g >
<title>memcmp@plt (10 samples, 0.17%)</title><rect x="1114.8" y="2053" width="2.0" height="15.0" fill="rgb(215,26,47)" rx="2" ry="2" />
<text  x="1117.75" y="2063.5" ></text>
</g>
<g >
<title>fasttext::FastText::getDimension (11 samples, 0.19%)</title><rect x="549.9" y="1973" width="2.2" height="15.0" fill="rgb(240,188,36)" rx="2" ry="2" />
<text  x="552.90" y="1983.5" ></text>
</g>
<g >
<title>__vfs_read (4 samples, 0.07%)</title><rect x="84.4" y="1941" width="0.8" height="15.0" fill="rgb(219,203,12)" rx="2" ry="2" />
<text  x="87.43" y="1951.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::do_tolower (1 samples, 0.02%)</title><rect x="108.2" y="1589" width="0.2" height="15.0" fill="rgb(222,39,1)" rx="2" ry="2" />
<text  x="111.16" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (145 samples, 2.49%)</title><rect x="102.7" y="1813" width="29.4" height="15.0" fill="rgb(243,90,37)" rx="2" ry="2" />
<text  x="105.69" y="1823.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.4" y="885" width="0.2" height="15.0" fill="rgb(231,130,13)" rx="2" ry="2" />
<text  x="141.38" y="895.5" ></text>
</g>
<g >
<title>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::dump (3 samples, 0.05%)</title><rect x="579.3" y="1925" width="0.6" height="15.0" fill="rgb(243,227,20)" rx="2" ry="2" />
<text  x="582.31" y="1935.5" ></text>
</g>
<g >
<title>@plt (3 samples, 0.05%)</title><rect x="1152.7" y="2037" width="0.6" height="15.0" fill="rgb(236,214,43)" rx="2" ry="2" />
<text  x="1155.68" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (21 samples, 0.36%)</title><rect x="80.2" y="2037" width="4.2" height="15.0" fill="rgb(246,217,2)" rx="2" ry="2" />
<text  x="83.18" y="2047.5" ></text>
</g>
<g >
<title>copy_page_to_iter (4 samples, 0.07%)</title><rect x="84.4" y="1877" width="0.8" height="15.0" fill="rgb(248,198,5)" rx="2" ry="2" />
<text  x="87.43" y="1887.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="80.6" y="85" width="0.2" height="15.0" fill="rgb(253,167,8)" rx="2" ry="2" />
<text  x="83.58" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.7" y="853" width="0.2" height="15.0" fill="rgb(244,145,40)" rx="2" ry="2" />
<text  x="1171.70" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.7" y="1045" width="0.2" height="15.0" fill="rgb(205,76,36)" rx="2" ry="2" />
<text  x="1171.70" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="171.8" y="1525" width="0.3" height="15.0" fill="rgb(234,81,32)" rx="2" ry="2" />
<text  x="174.85" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (33 samples, 0.57%)</title><rect x="183.2" y="1637" width="6.7" height="15.0" fill="rgb(220,183,1)" rx="2" ry="2" />
<text  x="186.21" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.4" y="357" width="0.2" height="15.0" fill="rgb(228,56,14)" rx="2" ry="2" />
<text  x="141.38" y="367.5" ></text>
</g>
<g >
<title>try_charge (1 samples, 0.02%)</title><rect x="712.2" y="1749" width="0.2" height="15.0" fill="rgb(245,125,25)" rx="2" ry="2" />
<text  x="715.16" y="1759.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (15 samples, 0.26%)</title><rect x="890.4" y="1973" width="3.1" height="15.0" fill="rgb(239,80,6)" rx="2" ry="2" />
<text  x="893.44" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (14 samples, 0.24%)</title><rect x="159.7" y="1653" width="2.8" height="15.0" fill="rgb(228,153,42)" rx="2" ry="2" />
<text  x="162.68" y="1663.5" ></text>
</g>
<g >
<title>TNewsCluster::GetCategory (1 samples, 0.02%)</title><rect x="172.5" y="1989" width="0.2" height="15.0" fill="rgb(233,217,28)" rx="2" ry="2" />
<text  x="175.46" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="1125" width="1.0" height="15.0" fill="rgb(250,38,21)" rx="2" ry="2" />
<text  x="83.58" y="1135.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id@plt (1 samples, 0.02%)</title><rect x="151.0" y="1589" width="0.2" height="15.0" fill="rgb(219,174,1)" rx="2" ry="2" />
<text  x="153.96" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.4" y="1333" width="0.2" height="15.0" fill="rgb(238,162,30)" rx="2" ry="2" />
<text  x="141.38" y="1343.5" ></text>
</g>
<g >
<title>get_user_pages_fast (1 samples, 0.02%)</title><rect x="39.8" y="1909" width="0.2" height="15.0" fill="rgb(235,150,51)" rx="2" ry="2" />
<text  x="42.81" y="1919.5" ></text>
</g>
<g >
<title>RunFasttextClf (2 samples, 0.03%)</title><rect x="583.2" y="1957" width="0.4" height="15.0" fill="rgb(229,182,4)" rx="2" ry="2" />
<text  x="586.17" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (33 samples, 0.57%)</title><rect x="163.9" y="1717" width="6.7" height="15.0" fill="rgb(249,93,5)" rx="2" ry="2" />
<text  x="166.94" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (81 samples, 1.39%)</title><rect x="173.7" y="1749" width="16.4" height="15.0" fill="rgb(218,0,27)" rx="2" ry="2" />
<text  x="176.67" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.07%)</title><rect x="218.1" y="1733" width="0.8" height="15.0" fill="rgb(241,95,51)" rx="2" ry="2" />
<text  x="221.09" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="171.8" y="1365" width="0.3" height="15.0" fill="rgb(241,147,8)" rx="2" ry="2" />
<text  x="174.85" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.3" y="453" width="0.2" height="15.0" fill="rgb(210,69,13)" rx="2" ry="2" />
<text  x="1171.30" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (1 samples, 0.02%)</title><rect x="170.4" y="1701" width="0.2" height="15.0" fill="rgb(211,77,34)" rx="2" ry="2" />
<text  x="173.43" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.5" y="1205" width="0.2" height="15.0" fill="rgb(235,47,53)" rx="2" ry="2" />
<text  x="1171.50" y="1215.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="1525" width="1.0" height="15.0" fill="rgb(222,225,27)" rx="2" ry="2" />
<text  x="83.58" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (1 samples, 0.02%)</title><rect x="152.6" y="1669" width="0.2" height="15.0" fill="rgb(251,6,37)" rx="2" ry="2" />
<text  x="155.58" y="1679.5" ></text>
</g>
<g >
<title>Rank (345 samples, 5.93%)</title><rect x="102.7" y="2005" width="70.0" height="15.0" fill="rgb(237,50,15)" rx="2" ry="2" />
<text  x="105.69" y="2015.5" >Rank</text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (1 samples, 0.02%)</title><rect x="137.6" y="1781" width="0.2" height="15.0" fill="rgb(249,33,53)" rx="2" ry="2" />
<text  x="140.57" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="217.7" y="1429" width="0.2" height="15.0" fill="rgb(234,115,30)" rx="2" ry="2" />
<text  x="220.69" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (1 samples, 0.02%)</title><rect x="170.6" y="1749" width="0.2" height="15.0" fill="rgb(252,97,41)" rx="2" ry="2" />
<text  x="173.63" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (1 samples, 0.02%)</title><rect x="215.5" y="1797" width="0.2" height="15.0" fill="rgb(215,56,5)" rx="2" ry="2" />
<text  x="218.46" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (24 samples, 0.41%)</title><rect x="132.3" y="1717" width="4.9" height="15.0" fill="rgb(213,129,33)" rx="2" ry="2" />
<text  x="135.30" y="1727.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="122.6" y="1621" width="0.2" height="15.0" fill="rgb(216,184,47)" rx="2" ry="2" />
<text  x="125.56" y="1631.5" ></text>
</g>
<g >
<title>[libm-2.27.so] (7 samples, 0.12%)</title><rect x="35.8" y="2053" width="1.4" height="15.0" fill="rgb(216,131,5)" rx="2" ry="2" />
<text  x="38.76" y="2063.5" ></text>
</g>
<g >
<title>std::istream::sentry::sentry (1 samples, 0.02%)</title><rect x="583.0" y="1957" width="0.2" height="15.0" fill="rgb(214,97,22)" rx="2" ry="2" />
<text  x="585.96" y="1967.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="35.6" y="2037" width="0.2" height="15.0" fill="rgb(232,39,1)" rx="2" ry="2" />
<text  x="38.56" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.7" y="1189" width="0.2" height="15.0" fill="rgb(217,107,54)" rx="2" ry="2" />
<text  x="1171.70" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.2" y="741" width="0.2" height="15.0" fill="rgb(215,132,37)" rx="2" ry="2" />
<text  x="141.18" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.4" y="1061" width="0.2" height="15.0" fill="rgb(250,175,1)" rx="2" ry="2" />
<text  x="141.38" y="1071.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (4 samples, 0.07%)</title><rect x="710.9" y="1765" width="0.9" height="15.0" fill="rgb(234,204,43)" rx="2" ry="2" />
<text  x="713.94" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="218.7" y="1189" width="0.2" height="15.0" fill="rgb(253,129,7)" rx="2" ry="2" />
<text  x="221.70" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.7" y="293" width="0.2" height="15.0" fill="rgb(247,14,19)" rx="2" ry="2" />
<text  x="1171.70" y="303.5" ></text>
</g>
<g >
<title>std::locale::~locale (1 samples, 0.02%)</title><rect x="38.8" y="2021" width="0.2" height="15.0" fill="rgb(226,44,36)" rx="2" ry="2" />
<text  x="41.80" y="2031.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (5 samples, 0.09%)</title><rect x="149.7" y="1589" width="1.1" height="15.0" fill="rgb(249,84,2)" rx="2" ry="2" />
<text  x="152.74" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="171.8" y="1397" width="0.3" height="15.0" fill="rgb(229,85,39)" rx="2" ry="2" />
<text  x="174.85" y="1407.5" ></text>
</g>
<g >
<title>malloc (5 samples, 0.09%)</title><rect x="631.6" y="1877" width="1.1" height="15.0" fill="rgb(221,226,15)" rx="2" ry="2" />
<text  x="634.64" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="218.7" y="1013" width="0.2" height="15.0" fill="rgb(209,140,35)" rx="2" ry="2" />
<text  x="221.70" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.5" y="757" width="0.2" height="15.0" fill="rgb(207,63,31)" rx="2" ry="2" />
<text  x="1171.50" y="767.5" ></text>
</g>
<g >
<title>ksys_read (1 samples, 0.02%)</title><rect x="925.3" y="1989" width="0.2" height="15.0" fill="rgb(247,172,41)" rx="2" ry="2" />
<text  x="928.32" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (1 samples, 0.02%)</title><rect x="170.6" y="1813" width="0.2" height="15.0" fill="rgb(241,15,41)" rx="2" ry="2" />
<text  x="173.63" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.3" y="1893" width="0.2" height="15.0" fill="rgb(225,214,26)" rx="2" ry="2" />
<text  x="1171.30" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="1621" width="1.0" height="15.0" fill="rgb(233,63,38)" rx="2" ry="2" />
<text  x="83.58" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.07%)</title><rect x="218.1" y="1621" width="0.8" height="15.0" fill="rgb(239,210,49)" rx="2" ry="2" />
<text  x="221.09" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.4" y="741" width="0.2" height="15.0" fill="rgb(233,103,54)" rx="2" ry="2" />
<text  x="141.38" y="751.5" ></text>
</g>
<g >
<title>onmt::unicode::is_separator (44 samples, 0.76%)</title><rect x="834.7" y="1893" width="8.9" height="15.0" fill="rgb(242,168,49)" rx="2" ry="2" />
<text  x="837.66" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.2" y="869" width="0.2" height="15.0" fill="rgb(212,66,8)" rx="2" ry="2" />
<text  x="141.18" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="217.7" y="1381" width="0.2" height="15.0" fill="rgb(242,177,48)" rx="2" ry="2" />
<text  x="220.69" y="1391.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (7 samples, 0.12%)</title><rect x="630.2" y="1877" width="1.4" height="15.0" fill="rgb(206,215,46)" rx="2" ry="2" />
<text  x="633.22" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (206 samples, 3.54%)</title><rect x="173.7" y="1893" width="41.8" height="15.0" fill="rgb(238,84,15)" rx="2" ry="2" />
<text  x="176.67" y="1903.5" >std..</text>
</g>
<g >
<title>fasttext::ProductQuantizer::addcode (203 samples, 3.49%)</title><rect x="1056.3" y="2053" width="41.2" height="15.0" fill="rgb(254,63,54)" rx="2" ry="2" />
<text  x="1059.34" y="2063.5" >fas..</text>
</g>
<g >
<title>__do_munmap (3 samples, 0.05%)</title><rect x="458.0" y="1893" width="0.6" height="15.0" fill="rgb(221,164,47)" rx="2" ry="2" />
<text  x="461.03" y="1903.5" ></text>
</g>
<g >
<title>page_fault (4 samples, 0.07%)</title><rect x="79.4" y="2021" width="0.8" height="15.0" fill="rgb(236,171,41)" rx="2" ry="2" />
<text  x="82.36" y="2031.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="75.1" y="2021" width="0.2" height="15.0" fill="rgb(237,142,38)" rx="2" ry="2" />
<text  x="78.10" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="217.7" y="1333" width="0.2" height="15.0" fill="rgb(209,54,12)" rx="2" ry="2" />
<text  x="220.69" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="217.7" y="1509" width="0.2" height="15.0" fill="rgb(228,60,6)" rx="2" ry="2" />
<text  x="220.69" y="1519.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::set_case (1 samples, 0.02%)</title><rect x="590.3" y="1909" width="0.2" height="15.0" fill="rgb(233,15,27)" rx="2" ry="2" />
<text  x="593.26" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.4" y="1381" width="0.2" height="15.0" fill="rgb(229,95,2)" rx="2" ry="2" />
<text  x="141.38" y="1391.5" ></text>
</g>
<g >
<title>TDocument::~TDocument (1 samples, 0.02%)</title><rect x="86.7" y="1989" width="0.2" height="15.0" fill="rgb(254,73,38)" rx="2" ry="2" />
<text  x="89.67" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.7" y="1253" width="0.2" height="15.0" fill="rgb(243,128,53)" rx="2" ry="2" />
<text  x="1171.70" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (1 samples, 0.02%)</title><rect x="173.7" y="1685" width="0.2" height="15.0" fill="rgb(223,101,45)" rx="2" ry="2" />
<text  x="176.67" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (210 samples, 3.61%)</title><rect x="173.7" y="1925" width="42.6" height="15.0" fill="rgb(241,29,24)" rx="2" ry="2" />
<text  x="176.67" y="1935.5" >std:..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (24 samples, 0.41%)</title><rect x="152.8" y="1669" width="4.9" height="15.0" fill="rgb(211,167,3)" rx="2" ry="2" />
<text  x="155.78" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.5" y="565" width="0.2" height="15.0" fill="rgb(231,0,27)" rx="2" ry="2" />
<text  x="1171.50" y="575.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="453" width="1.0" height="15.0" fill="rgb(242,137,52)" rx="2" ry="2" />
<text  x="83.58" y="463.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="104.5" y="1589" width="0.2" height="15.0" fill="rgb(220,114,44)" rx="2" ry="2" />
<text  x="107.51" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (24 samples, 0.41%)</title><rect x="132.3" y="1733" width="4.9" height="15.0" fill="rgb(238,216,1)" rx="2" ry="2" />
<text  x="135.30" y="1743.5" ></text>
</g>
<g >
<title>Eigen::internal::general_matrix_vector_product&lt;long, float, Eigen::internal::const_blas_data_mapper&lt;float, long, 1&gt;, 1, false, float, Eigen::internal::const_blas_data_mapper&lt;float, long, 0&gt;, false, 0&gt;::run (166 samples, 2.85%)</title><rect x="41.8" y="2037" width="33.7" height="15.0" fill="rgb(213,218,52)" rx="2" ry="2" />
<text  x="44.84" y="2047.5" >Ei..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (44 samples, 0.76%)</title><rect x="197.8" y="1749" width="8.9" height="15.0" fill="rgb(220,202,52)" rx="2" ry="2" />
<text  x="200.81" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="218.3" y="1445" width="0.6" height="15.0" fill="rgb(228,17,22)" rx="2" ry="2" />
<text  x="221.29" y="1455.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (1 samples, 0.02%)</title><rect x="443.2" y="1845" width="0.2" height="15.0" fill="rgb(222,32,26)" rx="2" ry="2" />
<text  x="446.22" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="661" width="1.0" height="15.0" fill="rgb(225,229,42)" rx="2" ry="2" />
<text  x="83.58" y="671.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (1 samples, 0.02%)</title><rect x="84.0" y="2021" width="0.2" height="15.0" fill="rgb(217,59,1)" rx="2" ry="2" />
<text  x="87.03" y="2031.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt;@plt (1 samples, 0.02%)</title><rect x="152.0" y="1605" width="0.2" height="15.0" fill="rgb(230,122,7)" rx="2" ry="2" />
<text  x="154.97" y="1615.5" ></text>
</g>
<g >
<title>native_send_call_func_single_ipi (1 samples, 0.02%)</title><rect x="925.5" y="1813" width="0.2" height="15.0" fill="rgb(249,33,51)" rx="2" ry="2" />
<text  x="928.52" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (1 samples, 0.02%)</title><rect x="170.6" y="1781" width="0.2" height="15.0" fill="rgb(250,56,38)" rx="2" ry="2" />
<text  x="173.63" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.5" y="1573" width="0.2" height="15.0" fill="rgb(244,200,20)" rx="2" ry="2" />
<text  x="1171.50" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="218.5" y="1365" width="0.4" height="15.0" fill="rgb(235,218,6)" rx="2" ry="2" />
<text  x="221.50" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (25 samples, 0.43%)</title><rect x="152.6" y="1733" width="5.1" height="15.0" fill="rgb(226,220,17)" rx="2" ry="2" />
<text  x="155.58" y="1743.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (6 samples, 0.10%)</title><rect x="679.5" y="1877" width="1.2" height="15.0" fill="rgb(207,194,13)" rx="2" ry="2" />
<text  x="682.50" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.5" y="1461" width="0.2" height="15.0" fill="rgb(224,189,49)" rx="2" ry="2" />
<text  x="1171.50" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="138.2" y="1829" width="0.4" height="15.0" fill="rgb(206,5,13)" rx="2" ry="2" />
<text  x="141.18" y="1839.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id@plt (1 samples, 0.02%)</title><rect x="107.8" y="1573" width="0.2" height="15.0" fill="rgb(235,139,13)" rx="2" ry="2" />
<text  x="110.76" y="1583.5" ></text>
</g>
<g >
<title>release_pages (1 samples, 0.02%)</title><rect x="578.3" y="1797" width="0.2" height="15.0" fill="rgb(236,181,45)" rx="2" ry="2" />
<text  x="581.30" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (37 samples, 0.64%)</title><rect x="207.1" y="1781" width="7.5" height="15.0" fill="rgb(219,93,7)" rx="2" ry="2" />
<text  x="210.14" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.3" y="1013" width="0.2" height="15.0" fill="rgb(244,219,14)" rx="2" ry="2" />
<text  x="1171.30" y="1023.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (3 samples, 0.05%)</title><rect x="128.9" y="1653" width="0.6" height="15.0" fill="rgb(206,7,40)" rx="2" ry="2" />
<text  x="131.85" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (1 samples, 0.02%)</title><rect x="173.7" y="1701" width="0.2" height="15.0" fill="rgb(215,214,14)" rx="2" ry="2" />
<text  x="176.67" y="1711.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (1 samples, 0.02%)</title><rect x="205.3" y="1653" width="0.2" height="15.0" fill="rgb(233,103,1)" rx="2" ry="2" />
<text  x="208.31" y="1663.5" ></text>
</g>
<g >
<title>onmt::Tokenizer::tokenize_text (559 samples, 9.61%)</title><rect x="646.4" y="1893" width="113.4" height="15.0" fill="rgb(211,75,40)" rx="2" ry="2" />
<text  x="649.45" y="1903.5" >onmt::Tokenize..</text>
</g>
<g >
<title>memcpy@plt (1 samples, 0.02%)</title><rect x="1116.8" y="2053" width="0.2" height="15.0" fill="rgb(208,137,26)" rx="2" ry="2" />
<text  x="1119.78" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (1 samples, 0.02%)</title><rect x="214.6" y="1781" width="0.2" height="15.0" fill="rgb(228,137,15)" rx="2" ry="2" />
<text  x="217.64" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (37 samples, 0.64%)</title><rect x="207.1" y="1733" width="7.5" height="15.0" fill="rgb(225,20,41)" rx="2" ry="2" />
<text  x="210.14" y="1743.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="171.2" y="1749" width="0.2" height="15.0" fill="rgb(254,2,53)" rx="2" ry="2" />
<text  x="174.24" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.4" y="325" width="0.2" height="15.0" fill="rgb(248,87,32)" rx="2" ry="2" />
<text  x="141.38" y="335.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id@plt (1 samples, 0.02%)</title><rect x="115.3" y="1621" width="0.2" height="15.0" fill="rgb(225,136,21)" rx="2" ry="2" />
<text  x="118.26" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1168.5" y="2005" width="0.4" height="15.0" fill="rgb(243,132,6)" rx="2" ry="2" />
<text  x="1171.50" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="171.8" y="1653" width="0.3" height="15.0" fill="rgb(214,179,33)" rx="2" ry="2" />
<text  x="174.85" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.5" y="805" width="0.2" height="15.0" fill="rgb(230,6,30)" rx="2" ry="2" />
<text  x="1171.50" y="815.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="879.3" y="2021" width="0.2" height="15.0" fill="rgb(215,21,22)" rx="2" ry="2" />
<text  x="882.28" y="2031.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="680.5" y="1829" width="0.2" height="15.0" fill="rgb(221,120,16)" rx="2" ry="2" />
<text  x="683.52" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.3" y="821" width="0.2" height="15.0" fill="rgb(254,133,18)" rx="2" ry="2" />
<text  x="1171.30" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.3" y="133" width="0.2" height="15.0" fill="rgb(236,113,38)" rx="2" ry="2" />
<text  x="1171.30" y="143.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.02%)</title><rect x="128.6" y="1653" width="0.3" height="15.0" fill="rgb(242,158,25)" rx="2" ry="2" />
<text  x="131.65" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="138.0" y="1941" width="0.6" height="15.0" fill="rgb(226,166,38)" rx="2" ry="2" />
<text  x="140.98" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="1189" width="1.0" height="15.0" fill="rgb(220,95,39)" rx="2" ry="2" />
<text  x="83.58" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (30 samples, 0.52%)</title><rect x="157.9" y="1749" width="6.0" height="15.0" fill="rgb(252,76,29)" rx="2" ry="2" />
<text  x="160.85" y="1759.5" ></text>
</g>
<g >
<title>wake_up_q (8 samples, 0.14%)</title><rect x="40.0" y="1925" width="1.6" height="15.0" fill="rgb(209,156,37)" rx="2" ry="2" />
<text  x="43.02" y="1935.5" ></text>
</g>
<g >
<title>__munmap (1 samples, 0.02%)</title><rect x="925.5" y="2053" width="0.2" height="15.0" fill="rgb(223,195,34)" rx="2" ry="2" />
<text  x="928.52" y="2063.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::addSubwords (5 samples, 0.09%)</title><rect x="956.1" y="2053" width="1.1" height="15.0" fill="rgb(214,41,17)" rx="2" ry="2" />
<text  x="959.15" y="2063.5" ></text>
</g>
<g >
<title>fasttext::FastText::getWordVector (18 samples, 0.31%)</title><rect x="552.1" y="1973" width="3.7" height="15.0" fill="rgb(205,177,47)" rx="2" ry="2" />
<text  x="555.13" y="1983.5" ></text>
</g>
<g >
<title>__handle_mm_fault (23 samples, 0.40%)</title><rect x="439.6" y="1893" width="4.6" height="15.0" fill="rgb(226,114,4)" rx="2" ry="2" />
<text  x="442.57" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.3" y="357" width="0.2" height="15.0" fill="rgb(237,104,49)" rx="2" ry="2" />
<text  x="1171.30" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.3" y="677" width="0.2" height="15.0" fill="rgb(214,37,48)" rx="2" ry="2" />
<text  x="1171.30" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (12 samples, 0.21%)</title><rect x="133.7" y="1701" width="2.5" height="15.0" fill="rgb(224,205,30)" rx="2" ry="2" />
<text  x="136.72" y="1711.5" ></text>
</g>
<g >
<title>DetectLanguage[abi:cxx11] (4 samples, 0.07%)</title><rect x="583.2" y="1973" width="0.8" height="15.0" fill="rgb(254,153,26)" rx="2" ry="2" />
<text  x="586.17" y="1983.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (2 samples, 0.03%)</title><rect x="458.2" y="1797" width="0.4" height="15.0" fill="rgb(210,222,9)" rx="2" ry="2" />
<text  x="461.23" y="1807.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="871.0" y="2005" width="0.2" height="15.0" fill="rgb(220,13,32)" rx="2" ry="2" />
<text  x="873.97" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (1 samples, 0.02%)</title><rect x="206.7" y="1797" width="0.2" height="15.0" fill="rgb(236,76,12)" rx="2" ry="2" />
<text  x="209.73" y="1807.5" ></text>
</g>
<g >
<title>nlohmann::detail::input_stream_adapter::get_character (4 samples, 0.07%)</title><rect x="100.9" y="1893" width="0.8" height="15.0" fill="rgb(224,54,54)" rx="2" ry="2" />
<text  x="103.86" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.3" y="1109" width="0.2" height="15.0" fill="rgb(223,56,38)" rx="2" ry="2" />
<text  x="1171.30" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.5" y="789" width="0.2" height="15.0" fill="rgb(232,181,17)" rx="2" ry="2" />
<text  x="1171.50" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="217.5" y="1685" width="0.4" height="15.0" fill="rgb(215,74,4)" rx="2" ry="2" />
<text  x="220.48" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.2" y="1365" width="0.2" height="15.0" fill="rgb(215,66,38)" rx="2" ry="2" />
<text  x="141.18" y="1375.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="1269" width="1.0" height="15.0" fill="rgb(208,137,11)" rx="2" ry="2" />
<text  x="83.58" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (25 samples, 0.43%)</title><rect x="132.1" y="1765" width="5.1" height="15.0" fill="rgb(226,204,40)" rx="2" ry="2" />
<text  x="135.10" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="171.6" y="1749" width="0.2" height="15.0" fill="rgb(254,41,47)" rx="2" ry="2" />
<text  x="174.65" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="138.2" y="1685" width="0.4" height="15.0" fill="rgb(247,177,48)" rx="2" ry="2" />
<text  x="141.18" y="1695.5" ></text>
</g>
<g >
<title>__vm_munmap (3 samples, 0.05%)</title><rect x="458.0" y="1909" width="0.6" height="15.0" fill="rgb(205,119,50)" rx="2" ry="2" />
<text  x="461.03" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="138.2" y="1621" width="0.4" height="15.0" fill="rgb(234,101,33)" rx="2" ry="2" />
<text  x="141.18" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.4" y="389" width="0.2" height="15.0" fill="rgb(211,24,23)" rx="2" ry="2" />
<text  x="141.38" y="399.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="1397" width="1.0" height="15.0" fill="rgb(219,69,10)" rx="2" ry="2" />
<text  x="83.58" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.5" y="1365" width="0.2" height="15.0" fill="rgb(226,59,47)" rx="2" ry="2" />
<text  x="1171.50" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.2" y="1269" width="0.2" height="15.0" fill="rgb(231,107,43)" rx="2" ry="2" />
<text  x="141.18" y="1279.5" ></text>
</g>
<g >
<title>do_syscall_64 (4 samples, 0.07%)</title><rect x="101.9" y="1941" width="0.8" height="15.0" fill="rgb(249,151,45)" rx="2" ry="2" />
<text  x="104.88" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (25 samples, 0.43%)</title><rect x="132.1" y="1781" width="5.1" height="15.0" fill="rgb(239,111,44)" rx="2" ry="2" />
<text  x="135.10" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.3" y="1877" width="0.2" height="15.0" fill="rgb(252,63,30)" rx="2" ry="2" />
<text  x="1171.30" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.7" y="1125" width="0.2" height="15.0" fill="rgb(228,137,31)" rx="2" ry="2" />
<text  x="1171.70" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (44 samples, 0.76%)</title><rect x="197.8" y="1733" width="8.9" height="15.0" fill="rgb(252,196,44)" rx="2" ry="2" />
<text  x="200.81" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (44 samples, 0.76%)</title><rect x="173.9" y="1653" width="8.9" height="15.0" fill="rgb(228,183,14)" rx="2" ry="2" />
<text  x="176.88" y="1663.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::do_tolower (1 samples, 0.02%)</title><rect x="131.1" y="1669" width="0.2" height="15.0" fill="rgb(246,165,34)" rx="2" ry="2" />
<text  x="134.08" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.2" y="1061" width="0.2" height="15.0" fill="rgb(246,39,20)" rx="2" ry="2" />
<text  x="141.18" y="1071.5" ></text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.05%)</title><rect x="132.9" y="1701" width="0.6" height="15.0" fill="rgb(244,211,48)" rx="2" ry="2" />
<text  x="135.91" y="1711.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id@plt (1 samples, 0.02%)</title><rect x="136.0" y="1685" width="0.2" height="15.0" fill="rgb(249,107,39)" rx="2" ry="2" />
<text  x="138.95" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="341" width="1.0" height="15.0" fill="rgb(253,25,30)" rx="2" ry="2" />
<text  x="83.58" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="218.5" y="1093" width="0.2" height="15.0" fill="rgb(229,22,51)" rx="2" ry="2" />
<text  x="221.50" y="1103.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (1 samples, 0.02%)</title><rect x="130.9" y="1669" width="0.2" height="15.0" fill="rgb(246,186,20)" rx="2" ry="2" />
<text  x="133.88" y="1679.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.02%)</title><rect x="102.3" y="1861" width="0.2" height="15.0" fill="rgb(247,101,18)" rx="2" ry="2" />
<text  x="105.28" y="1871.5" ></text>
</g>
<g >
<title>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::dump (4 samples, 0.07%)</title><rect x="579.3" y="1973" width="0.8" height="15.0" fill="rgb(240,223,50)" rx="2" ry="2" />
<text  x="582.31" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="229" width="1.0" height="15.0" fill="rgb(225,124,42)" rx="2" ry="2" />
<text  x="83.58" y="239.5" ></text>
</g>
<g >
<title>std::operator&gt;&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (3 samples, 0.05%)</title><rect x="577.1" y="1973" width="0.6" height="15.0" fill="rgb(207,77,15)" rx="2" ry="2" />
<text  x="580.08" y="1983.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (2 samples, 0.03%)</title><rect x="114.2" y="1605" width="0.5" height="15.0" fill="rgb(217,118,48)" rx="2" ry="2" />
<text  x="117.25" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.7" y="101" width="0.2" height="15.0" fill="rgb(225,229,42)" rx="2" ry="2" />
<text  x="1171.70" y="111.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.4" y="1221" width="0.2" height="15.0" fill="rgb(236,90,42)" rx="2" ry="2" />
<text  x="141.38" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (1 samples, 0.02%)</title><rect x="137.2" y="1701" width="0.2" height="15.0" fill="rgb(232,42,25)" rx="2" ry="2" />
<text  x="140.17" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.7" y="981" width="0.2" height="15.0" fill="rgb(250,138,8)" rx="2" ry="2" />
<text  x="1171.70" y="991.5" ></text>
</g>
<g >
<title>operator new (11 samples, 0.19%)</title><rect x="1118.2" y="2053" width="2.2" height="15.0" fill="rgb(250,219,37)" rx="2" ry="2" />
<text  x="1121.20" y="2063.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="189.7" y="1621" width="0.2" height="15.0" fill="rgb(222,115,24)" rx="2" ry="2" />
<text  x="192.70" y="1631.5" ></text>
</g>
<g >
<title>operator new@plt (1 samples, 0.02%)</title><rect x="176.9" y="1589" width="0.2" height="15.0" fill="rgb(226,185,2)" rx="2" ry="2" />
<text  x="179.92" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (44 samples, 0.76%)</title><rect x="197.8" y="1717" width="8.9" height="15.0" fill="rgb(209,133,48)" rx="2" ry="2" />
<text  x="200.81" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (2 samples, 0.03%)</title><rect x="137.6" y="1893" width="0.4" height="15.0" fill="rgb(210,111,35)" rx="2" ry="2" />
<text  x="140.57" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (1 samples, 0.02%)</title><rect x="137.6" y="1845" width="0.2" height="15.0" fill="rgb(247,105,7)" rx="2" ry="2" />
<text  x="140.57" y="1855.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (41 samples, 0.70%)</title><rect x="1168.9" y="2037" width="8.3" height="15.0" fill="rgb(231,113,48)" rx="2" ry="2" />
<text  x="1171.91" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.3" y="1589" width="0.2" height="15.0" fill="rgb(211,52,49)" rx="2" ry="2" />
<text  x="1171.30" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (30 samples, 0.52%)</title><rect x="157.9" y="1733" width="6.0" height="15.0" fill="rgb(227,104,44)" rx="2" ry="2" />
<text  x="160.85" y="1743.5" ></text>
</g>
<g >
<title>futex_wait_setup (1 samples, 0.02%)</title><rect x="102.5" y="1877" width="0.2" height="15.0" fill="rgb(247,191,16)" rx="2" ry="2" />
<text  x="105.49" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (1 samples, 0.02%)</title><rect x="215.7" y="1813" width="0.2" height="15.0" fill="rgb(211,32,23)" rx="2" ry="2" />
<text  x="218.66" y="1823.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (3 samples, 0.05%)</title><rect x="436.7" y="1861" width="0.6" height="15.0" fill="rgb(231,118,36)" rx="2" ry="2" />
<text  x="439.73" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="171.8" y="1333" width="0.3" height="15.0" fill="rgb(223,41,50)" rx="2" ry="2" />
<text  x="174.85" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.2" y="1141" width="0.2" height="15.0" fill="rgb(235,162,44)" rx="2" ry="2" />
<text  x="141.18" y="1151.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt;@plt (4 samples, 0.07%)</title><rect x="880.7" y="2037" width="0.8" height="15.0" fill="rgb(218,42,28)" rx="2" ry="2" />
<text  x="883.70" y="2047.5" ></text>
</g>
<g >
<title>cfree (1 samples, 0.02%)</title><rect x="159.1" y="1653" width="0.2" height="15.0" fill="rgb(226,121,51)" rx="2" ry="2" />
<text  x="162.07" y="1663.5" ></text>
</g>
<g >
<title>nlohmann::detail::parser&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::parse (72 samples, 1.24%)</title><rect x="87.1" y="1973" width="14.6" height="15.0" fill="rgb(240,120,6)" rx="2" ry="2" />
<text  x="90.07" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.5" y="645" width="0.2" height="15.0" fill="rgb(244,21,1)" rx="2" ry="2" />
<text  x="1171.50" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.3" y="1045" width="0.2" height="15.0" fill="rgb(214,26,37)" rx="2" ry="2" />
<text  x="1171.30" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (39 samples, 0.67%)</title><rect x="206.9" y="1813" width="7.9" height="15.0" fill="rgb(213,28,17)" rx="2" ry="2" />
<text  x="209.94" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="357" width="1.0" height="15.0" fill="rgb(247,61,37)" rx="2" ry="2" />
<text  x="83.58" y="367.5" ></text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.05%)</title><rect x="106.1" y="1573" width="0.6" height="15.0" fill="rgb(247,225,45)" rx="2" ry="2" />
<text  x="109.14" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="218.7" y="629" width="0.2" height="15.0" fill="rgb(233,132,6)" rx="2" ry="2" />
<text  x="221.70" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="206.7" y="1733" width="0.2" height="15.0" fill="rgb(227,211,24)" rx="2" ry="2" />
<text  x="209.73" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="218.5" y="869" width="0.2" height="15.0" fill="rgb(229,128,33)" rx="2" ry="2" />
<text  x="221.50" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.4" y="1285" width="0.2" height="15.0" fill="rgb(230,146,35)" rx="2" ry="2" />
<text  x="141.38" y="1295.5" ></text>
</g>
<g >
<title>release_pages (2 samples, 0.03%)</title><rect x="458.2" y="1781" width="0.4" height="15.0" fill="rgb(249,26,18)" rx="2" ry="2" />
<text  x="461.23" y="1791.5" ></text>
</g>
<g >
<title>cfree (9 samples, 0.15%)</title><rect x="611.6" y="1893" width="1.8" height="15.0" fill="rgb(246,153,43)" rx="2" ry="2" />
<text  x="614.56" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="197" width="1.0" height="15.0" fill="rgb(213,190,37)" rx="2" ry="2" />
<text  x="83.58" y="207.5" ></text>
</g>
<g >
<title>__do_page_fault (34 samples, 0.58%)</title><rect x="437.7" y="1925" width="6.9" height="15.0" fill="rgb(210,0,1)" rx="2" ry="2" />
<text  x="440.74" y="1935.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::do_tolower (1 samples, 0.02%)</title><rect x="213.2" y="1701" width="0.2" height="15.0" fill="rgb(234,127,18)" rx="2" ry="2" />
<text  x="216.22" y="1711.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (6 samples, 0.10%)</title><rect x="865.5" y="1941" width="1.2" height="15.0" fill="rgb(226,175,25)" rx="2" ry="2" />
<text  x="868.49" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="869" width="1.0" height="15.0" fill="rgb(245,173,3)" rx="2" ry="2" />
<text  x="83.58" y="879.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="853" width="1.0" height="15.0" fill="rgb(230,126,42)" rx="2" ry="2" />
<text  x="83.58" y="863.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="80.8" y="37" width="0.2" height="15.0" fill="rgb(248,188,30)" rx="2" ry="2" />
<text  x="83.78" y="47.5" ></text>
</g>
<g >
<title>fasttext::ProductQuantizer::addcode (34 samples, 0.58%)</title><rect x="872.6" y="2037" width="6.9" height="15.0" fill="rgb(226,226,36)" rx="2" ry="2" />
<text  x="875.59" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="789" width="1.0" height="15.0" fill="rgb(211,40,5)" rx="2" ry="2" />
<text  x="83.58" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="217.7" y="1445" width="0.2" height="15.0" fill="rgb(237,213,15)" rx="2" ry="2" />
<text  x="220.69" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (1 samples, 0.02%)</title><rect x="170.6" y="1733" width="0.2" height="15.0" fill="rgb(225,53,12)" rx="2" ry="2" />
<text  x="173.63" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="218.5" y="773" width="0.2" height="15.0" fill="rgb(251,187,25)" rx="2" ry="2" />
<text  x="221.50" y="783.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::do_tolower (1 samples, 0.02%)</title><rect x="136.2" y="1701" width="0.2" height="15.0" fill="rgb(217,82,4)" rx="2" ry="2" />
<text  x="139.15" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="218.5" y="933" width="0.2" height="15.0" fill="rgb(242,24,31)" rx="2" ry="2" />
<text  x="221.50" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.4" y="533" width="0.2" height="15.0" fill="rgb(231,229,5)" rx="2" ry="2" />
<text  x="141.38" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.7" y="965" width="0.2" height="15.0" fill="rgb(240,127,27)" rx="2" ry="2" />
<text  x="1171.70" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.3" y="1973" width="0.2" height="15.0" fill="rgb(236,68,37)" rx="2" ry="2" />
<text  x="1171.30" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="218.7" y="1029" width="0.2" height="15.0" fill="rgb(254,64,12)" rx="2" ry="2" />
<text  x="221.70" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.3" y="1621" width="0.2" height="15.0" fill="rgb(239,119,37)" rx="2" ry="2" />
<text  x="1171.30" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (162 samples, 2.78%)</title><rect x="138.6" y="1893" width="32.8" height="15.0" fill="rgb(249,46,29)" rx="2" ry="2" />
<text  x="141.59" y="1903.5" >st..</text>
</g>
<g >
<title>tlb_flush_mmu (1 samples, 0.02%)</title><rect x="578.1" y="1845" width="0.2" height="15.0" fill="rgb(236,30,29)" rx="2" ry="2" />
<text  x="581.10" y="1855.5" ></text>
</g>
<g >
<title>std::operator&gt;&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (14 samples, 0.24%)</title><rect x="884.6" y="2005" width="2.8" height="15.0" fill="rgb(215,215,1)" rx="2" ry="2" />
<text  x="887.55" y="2015.5" ></text>
</g>
<g >
<title>fasttext::Vector::addVector (13 samples, 0.22%)</title><rect x="328.0" y="1989" width="2.7" height="15.0" fill="rgb(231,39,0)" rx="2" ry="2" />
<text  x="331.02" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="218.7" y="1077" width="0.2" height="15.0" fill="rgb(250,178,21)" rx="2" ry="2" />
<text  x="221.70" y="1087.5" ></text>
</g>
<g >
<title>handle_mm_fault (2 samples, 0.03%)</title><rect x="79.8" y="1973" width="0.4" height="15.0" fill="rgb(229,103,48)" rx="2" ry="2" />
<text  x="82.77" y="1983.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (1 samples, 0.02%)</title><rect x="219.1" y="1973" width="0.2" height="15.0" fill="rgb(250,73,1)" rx="2" ry="2" />
<text  x="222.11" y="1983.5" ></text>
</g>
<g >
<title>operator new@plt (1 samples, 0.02%)</title><rect x="165.4" y="1685" width="0.2" height="15.0" fill="rgb(239,105,7)" rx="2" ry="2" />
<text  x="168.36" y="1695.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.02%)</title><rect x="41.6" y="1957" width="0.2" height="15.0" fill="rgb(241,58,24)" rx="2" ry="2" />
<text  x="44.64" y="1967.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (4 samples, 0.07%)</title><rect x="867.1" y="1973" width="0.8" height="15.0" fill="rgb(211,214,22)" rx="2" ry="2" />
<text  x="870.11" y="1983.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (1 samples, 0.02%)</title><rect x="925.3" y="1925" width="0.2" height="15.0" fill="rgb(240,93,33)" rx="2" ry="2" />
<text  x="928.32" y="1935.5" ></text>
</g>
<g >
<title>unmap_page_range (3 samples, 0.05%)</title><rect x="458.0" y="1829" width="0.6" height="15.0" fill="rgb(212,159,14)" rx="2" ry="2" />
<text  x="461.03" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_try_char (2 samples, 0.03%)</title><rect x="190.3" y="1733" width="0.4" height="15.0" fill="rgb(234,180,14)" rx="2" ry="2" />
<text  x="193.31" y="1743.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (2 samples, 0.03%)</title><rect x="143.3" y="1557" width="0.4" height="15.0" fill="rgb(248,130,12)" rx="2" ry="2" />
<text  x="146.25" y="1567.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="131.9" y="1733" width="0.2" height="15.0" fill="rgb(229,215,29)" rx="2" ry="2" />
<text  x="134.89" y="1743.5" ></text>
</g>
<g >
<title>do_page_fault (34 samples, 0.58%)</title><rect x="437.7" y="1941" width="6.9" height="15.0" fill="rgb(226,14,24)" rx="2" ry="2" />
<text  x="440.74" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.3" y="1957" width="0.2" height="15.0" fill="rgb(216,49,24)" rx="2" ry="2" />
<text  x="1171.30" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.5" y="997" width="0.2" height="15.0" fill="rgb(238,31,29)" rx="2" ry="2" />
<text  x="1171.50" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="218.7" y="1173" width="0.2" height="15.0" fill="rgb(207,159,30)" rx="2" ry="2" />
<text  x="221.70" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.4" y="1349" width="0.2" height="15.0" fill="rgb(216,150,26)" rx="2" ry="2" />
<text  x="141.38" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.15%)</title><rect x="217.1" y="1781" width="1.8" height="15.0" fill="rgb(219,13,3)" rx="2" ry="2" />
<text  x="220.08" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.2" y="1189" width="0.2" height="15.0" fill="rgb(209,211,40)" rx="2" ry="2" />
<text  x="141.18" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.3" y="309" width="0.2" height="15.0" fill="rgb(252,90,2)" rx="2" ry="2" />
<text  x="1171.30" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.5" y="229" width="0.2" height="15.0" fill="rgb(251,131,12)" rx="2" ry="2" />
<text  x="1171.50" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.4" y="229" width="0.2" height="15.0" fill="rgb(210,69,39)" rx="2" ry="2" />
<text  x="141.38" y="239.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.02%)</title><rect x="712.6" y="1813" width="0.2" height="15.0" fill="rgb(247,133,33)" rx="2" ry="2" />
<text  x="715.56" y="1823.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (14 samples, 0.24%)</title><rect x="433.9" y="1845" width="2.8" height="15.0" fill="rgb(235,179,27)" rx="2" ry="2" />
<text  x="436.89" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (1 samples, 0.02%)</title><rect x="215.3" y="1781" width="0.2" height="15.0" fill="rgb(231,17,25)" rx="2" ry="2" />
<text  x="218.25" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (21 samples, 0.36%)</title><rect x="118.5" y="1637" width="4.3" height="15.0" fill="rgb(219,227,53)" rx="2" ry="2" />
<text  x="121.51" y="1647.5" ></text>
</g>
<g >
<title>TFastTextEmbedder::GetSentenceEmbedding (45 samples, 0.77%)</title><rect x="219.3" y="1989" width="9.1" height="15.0" fill="rgb(232,132,34)" rx="2" ry="2" />
<text  x="222.31" y="1999.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;std::unique_ptr&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;  (1,412 samples, 24.27%)</title><rect x="581.9" y="2005" width="286.4" height="15.0" fill="rgb(239,155,19)" rx="2" ry="2" />
<text  x="584.95" y="2015.5" >std::_Function_handler&lt;std::unique_ptr..</text>
</g>
<g >
<title>nlohmann::detail::input_stream_adapter::get_character (7 samples, 0.12%)</title><rect x="96.4" y="1909" width="1.4" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="99.40" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.5" y="613" width="0.2" height="15.0" fill="rgb(244,66,27)" rx="2" ry="2" />
<text  x="1171.50" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.3" y="613" width="0.2" height="15.0" fill="rgb(220,75,46)" rx="2" ry="2" />
<text  x="1171.30" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.7" y="1349" width="0.2" height="15.0" fill="rgb(221,226,42)" rx="2" ry="2" />
<text  x="1171.70" y="1359.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="1685" width="1.0" height="15.0" fill="rgb(245,184,43)" rx="2" ry="2" />
<text  x="83.58" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (34 samples, 0.58%)</title><rect x="116.5" y="1749" width="6.9" height="15.0" fill="rgb(226,139,46)" rx="2" ry="2" />
<text  x="119.48" y="1759.5" ></text>
</g>
<g >
<title>fasttext::Vector::addRow (2 samples, 0.03%)</title><rect x="327.6" y="1989" width="0.4" height="15.0" fill="rgb(239,169,21)" rx="2" ry="2" />
<text  x="330.61" y="1999.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="879.3" y="2005" width="0.2" height="15.0" fill="rgb(237,221,33)" rx="2" ry="2" />
<text  x="882.28" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="773" width="1.0" height="15.0" fill="rgb(207,146,8)" rx="2" ry="2" />
<text  x="83.58" y="783.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (2 samples, 0.03%)</title><rect x="35.1" y="1941" width="0.5" height="15.0" fill="rgb(252,39,52)" rx="2" ry="2" />
<text  x="38.15" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="218.7" y="677" width="0.2" height="15.0" fill="rgb(229,47,52)" rx="2" ry="2" />
<text  x="221.70" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.3" y="53" width="0.2" height="15.0" fill="rgb(226,205,23)" rx="2" ry="2" />
<text  x="1171.30" y="63.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.02%)</title><rect x="80.8" y="85" width="0.2" height="15.0" fill="rgb(239,175,37)" rx="2" ry="2" />
<text  x="83.78" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.5" y="165" width="0.2" height="15.0" fill="rgb(235,72,32)" rx="2" ry="2" />
<text  x="1171.50" y="175.5" ></text>
</g>
<g >
<title>page_add_new_anon_rmap (1 samples, 0.02%)</title><rect x="444.0" y="1877" width="0.2" height="15.0" fill="rgb(206,211,33)" rx="2" ry="2" />
<text  x="447.03" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="629" width="1.0" height="15.0" fill="rgb(224,115,46)" rx="2" ry="2" />
<text  x="83.58" y="639.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="1733" width="1.0" height="15.0" fill="rgb(212,211,45)" rx="2" ry="2" />
<text  x="83.58" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.5" y="1813" width="0.2" height="15.0" fill="rgb(240,4,45)" rx="2" ry="2" />
<text  x="1171.50" y="1823.5" ></text>
</g>
<g >
<title>operator new@plt (1 samples, 0.02%)</title><rect x="201.5" y="1669" width="0.2" height="15.0" fill="rgb(213,94,6)" rx="2" ry="2" />
<text  x="204.46" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.7" y="1589" width="0.2" height="15.0" fill="rgb(254,81,14)" rx="2" ry="2" />
<text  x="1171.70" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.3" y="469" width="0.2" height="15.0" fill="rgb(245,128,48)" rx="2" ry="2" />
<text  x="1171.30" y="479.5" ></text>
</g>
<g >
<title>onmt::ITokenizer::tokenize (1,374 samples, 23.62%)</title><rect x="586.8" y="1941" width="278.7" height="15.0" fill="rgb(237,132,27)" rx="2" ry="2" />
<text  x="589.82" y="1951.5" >onmt::ITokenizer::tokenize</text>
</g>
<g >
<title>malloc@plt (1 samples, 0.02%)</title><rect x="154.4" y="1621" width="0.2" height="15.0" fill="rgb(225,16,50)" rx="2" ry="2" />
<text  x="157.41" y="1631.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="578.1" y="1957" width="0.4" height="15.0" fill="rgb(207,91,32)" rx="2" ry="2" />
<text  x="581.10" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="171.8" y="1301" width="0.3" height="15.0" fill="rgb(247,134,21)" rx="2" ry="2" />
<text  x="174.85" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (171 samples, 2.94%)</title><rect x="102.7" y="1861" width="34.7" height="15.0" fill="rgb(206,125,3)" rx="2" ry="2" />
<text  x="105.69" y="1871.5" >st..</text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="209.4" y="1701" width="0.2" height="15.0" fill="rgb(229,144,11)" rx="2" ry="2" />
<text  x="212.37" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (36 samples, 0.62%)</title><rect x="144.9" y="1653" width="7.3" height="15.0" fill="rgb(207,194,5)" rx="2" ry="2" />
<text  x="147.87" y="1663.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="86.5" y="1925" width="0.2" height="15.0" fill="rgb(254,119,32)" rx="2" ry="2" />
<text  x="89.46" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.09%)</title><rect x="217.9" y="1749" width="1.0" height="15.0" fill="rgb(234,15,50)" rx="2" ry="2" />
<text  x="220.89" y="1759.5" ></text>
</g>
<g >
<title>onmt::unicode::get_case (9 samples, 0.15%)</title><rect x="712.8" y="1877" width="1.8" height="15.0" fill="rgb(240,58,3)" rx="2" ry="2" />
<text  x="715.77" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.3" y="837" width="0.2" height="15.0" fill="rgb(239,29,28)" rx="2" ry="2" />
<text  x="1171.30" y="847.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1097.3" y="2005" width="0.2" height="15.0" fill="rgb(244,161,13)" rx="2" ry="2" />
<text  x="1100.31" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="1253" width="1.0" height="15.0" fill="rgb(226,84,46)" rx="2" ry="2" />
<text  x="83.58" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.3" y="1429" width="0.2" height="15.0" fill="rgb(212,87,48)" rx="2" ry="2" />
<text  x="1171.30" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.3" y="1477" width="0.2" height="15.0" fill="rgb(240,189,53)" rx="2" ry="2" />
<text  x="1171.30" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.4" y="933" width="0.2" height="15.0" fill="rgb(248,11,30)" rx="2" ry="2" />
<text  x="141.38" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.7" y="485" width="0.2" height="15.0" fill="rgb(240,182,31)" rx="2" ry="2" />
<text  x="1171.70" y="495.5" ></text>
</g>
<g >
<title>unmap_vmas (1 samples, 0.02%)</title><rect x="955.1" y="1941" width="0.2" height="15.0" fill="rgb(231,99,14)" rx="2" ry="2" />
<text  x="958.14" y="1951.5" ></text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::get (2 samples, 0.03%)</title><rect x="87.9" y="1925" width="0.4" height="15.0" fill="rgb(240,23,29)" rx="2" ry="2" />
<text  x="90.88" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="138.2" y="1813" width="0.4" height="15.0" fill="rgb(242,218,23)" rx="2" ry="2" />
<text  x="141.18" y="1823.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find (5 samples, 0.09%)</title><rect x="864.1" y="1909" width="1.0" height="15.0" fill="rgb(214,62,52)" rx="2" ry="2" />
<text  x="867.07" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="549" width="1.0" height="15.0" fill="rgb(233,12,23)" rx="2" ry="2" />
<text  x="83.58" y="559.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (2 samples, 0.03%)</title><rect x="129.5" y="1653" width="0.4" height="15.0" fill="rgb(246,159,19)" rx="2" ry="2" />
<text  x="132.46" y="1663.5" ></text>
</g>
<g >
<title>std::locale::~locale (4 samples, 0.07%)</title><rect x="575.9" y="1973" width="0.8" height="15.0" fill="rgb(236,99,24)" rx="2" ry="2" />
<text  x="578.86" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (37 samples, 0.64%)</title><rect x="207.1" y="1749" width="7.5" height="15.0" fill="rgb(238,55,6)" rx="2" ry="2" />
<text  x="210.14" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="218.5" y="757" width="0.2" height="15.0" fill="rgb(213,35,46)" rx="2" ry="2" />
<text  x="221.50" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.7" y="517" width="0.2" height="15.0" fill="rgb(213,89,47)" rx="2" ry="2" />
<text  x="1171.70" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="218.7" y="1109" width="0.2" height="15.0" fill="rgb(248,118,48)" rx="2" ry="2" />
<text  x="221.70" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="218.3" y="1477" width="0.6" height="15.0" fill="rgb(220,55,28)" rx="2" ry="2" />
<text  x="221.29" y="1487.5" ></text>
</g>
<g >
<title>cfree (4 samples, 0.07%)</title><rect x="146.3" y="1605" width="0.8" height="15.0" fill="rgb(242,211,40)" rx="2" ry="2" />
<text  x="149.29" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (33 samples, 0.57%)</title><rect x="163.9" y="1797" width="6.7" height="15.0" fill="rgb(242,185,15)" rx="2" ry="2" />
<text  x="166.94" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="218.7" y="885" width="0.2" height="15.0" fill="rgb(210,223,50)" rx="2" ry="2" />
<text  x="221.70" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (17 samples, 0.29%)</title><rect x="111.2" y="1621" width="3.5" height="15.0" fill="rgb(228,115,32)" rx="2" ry="2" />
<text  x="114.21" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.7" y="197" width="0.2" height="15.0" fill="rgb(211,75,1)" rx="2" ry="2" />
<text  x="1171.70" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.4" y="1157" width="0.2" height="15.0" fill="rgb(207,177,2)" rx="2" ry="2" />
<text  x="141.38" y="1167.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (16 samples, 0.28%)</title><rect x="844.6" y="1893" width="3.2" height="15.0" fill="rgb(241,105,43)" rx="2" ry="2" />
<text  x="847.60" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="218.5" y="1109" width="0.2" height="15.0" fill="rgb(205,40,1)" rx="2" ry="2" />
<text  x="221.50" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.7" y="1397" width="0.2" height="15.0" fill="rgb(242,15,33)" rx="2" ry="2" />
<text  x="1171.70" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="217.7" y="1525" width="0.2" height="15.0" fill="rgb(250,88,17)" rx="2" ry="2" />
<text  x="220.69" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.4" y="1141" width="0.2" height="15.0" fill="rgb(212,28,34)" rx="2" ry="2" />
<text  x="141.38" y="1151.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt;@plt (1 samples, 0.02%)</title><rect x="144.7" y="1573" width="0.2" height="15.0" fill="rgb(247,205,7)" rx="2" ry="2" />
<text  x="147.67" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.3" y="853" width="0.2" height="15.0" fill="rgb(222,93,43)" rx="2" ry="2" />
<text  x="1171.30" y="863.5" ></text>
</g>
<g >
<title>memcpy@plt (2 samples, 0.03%)</title><rect x="680.7" y="1877" width="0.4" height="15.0" fill="rgb(216,87,0)" rx="2" ry="2" />
<text  x="683.72" y="1887.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (1 samples, 0.02%)</title><rect x="925.3" y="1877" width="0.2" height="15.0" fill="rgb(249,214,29)" rx="2" ry="2" />
<text  x="928.32" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="218.3" y="1589" width="0.6" height="15.0" fill="rgb(254,174,3)" rx="2" ry="2" />
<text  x="221.29" y="1599.5" ></text>
</g>
<g >
<title>free@plt (1 samples, 0.02%)</title><rect x="200.9" y="1669" width="0.2" height="15.0" fill="rgb(212,137,39)" rx="2" ry="2" />
<text  x="203.85" y="1679.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (3 samples, 0.05%)</title><rect x="115.5" y="1621" width="0.6" height="15.0" fill="rgb(231,93,50)" rx="2" ry="2" />
<text  x="118.47" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.5" y="1093" width="0.2" height="15.0" fill="rgb(247,226,28)" rx="2" ry="2" />
<text  x="1171.50" y="1103.5" ></text>
</g>
<g >
<title>arch_tlb_finish_mmu (1 samples, 0.02%)</title><rect x="925.5" y="1925" width="0.2" height="15.0" fill="rgb(211,59,20)" rx="2" ry="2" />
<text  x="928.52" y="1935.5" ></text>
</g>
<g >
<title>onmt::unicode::is_separator@plt (5 samples, 0.09%)</title><rect x="843.6" y="1893" width="1.0" height="15.0" fill="rgb(213,94,28)" rx="2" ry="2" />
<text  x="846.59" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (204 samples, 3.51%)</title><rect x="173.7" y="1829" width="41.3" height="15.0" fill="rgb(206,166,11)" rx="2" ry="2" />
<text  x="176.67" y="1839.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.4" y="485" width="0.2" height="15.0" fill="rgb(221,9,7)" rx="2" ry="2" />
<text  x="141.38" y="495.5" ></text>
</g>
<g >
<title>operator delete@plt (1 samples, 0.02%)</title><rect x="201.3" y="1669" width="0.2" height="15.0" fill="rgb(246,209,41)" rx="2" ry="2" />
<text  x="204.26" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="218.5" y="1429" width="0.4" height="15.0" fill="rgb(248,169,25)" rx="2" ry="2" />
<text  x="221.50" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.4" y="517" width="0.2" height="15.0" fill="rgb(217,103,17)" rx="2" ry="2" />
<text  x="141.38" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="217.7" y="1461" width="0.2" height="15.0" fill="rgb(209,119,0)" rx="2" ry="2" />
<text  x="220.69" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.7" y="1477" width="0.2" height="15.0" fill="rgb(208,183,53)" rx="2" ry="2" />
<text  x="1171.70" y="1487.5" ></text>
</g>
<g >
<title>malloc@plt (1 samples, 0.02%)</title><rect x="176.7" y="1589" width="0.2" height="15.0" fill="rgb(215,192,52)" rx="2" ry="2" />
<text  x="179.72" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.5" y="1477" width="0.2" height="15.0" fill="rgb(207,106,2)" rx="2" ry="2" />
<text  x="1171.50" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.3" y="341" width="0.2" height="15.0" fill="rgb(253,169,35)" rx="2" ry="2" />
<text  x="1171.30" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="218.5" y="1221" width="0.2" height="15.0" fill="rgb(225,175,37)" rx="2" ry="2" />
<text  x="221.50" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.3" y="1125" width="0.2" height="15.0" fill="rgb(231,149,42)" rx="2" ry="2" />
<text  x="1171.30" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (1 samples, 0.02%)</title><rect x="137.6" y="1797" width="0.2" height="15.0" fill="rgb(228,19,23)" rx="2" ry="2" />
<text  x="140.57" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="218.5" y="1285" width="0.2" height="15.0" fill="rgb(211,191,45)" rx="2" ry="2" />
<text  x="221.50" y="1295.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="80.4" y="1829" width="0.2" height="15.0" fill="rgb(226,200,43)" rx="2" ry="2" />
<text  x="83.38" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (34 samples, 0.58%)</title><rect x="190.7" y="1717" width="6.9" height="15.0" fill="rgb(254,101,25)" rx="2" ry="2" />
<text  x="193.71" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="217.7" y="1237" width="0.2" height="15.0" fill="rgb(225,36,5)" rx="2" ry="2" />
<text  x="220.69" y="1247.5" ></text>
</g>
<g >
<title>futex_wait (3 samples, 0.05%)</title><rect x="102.1" y="1893" width="0.6" height="15.0" fill="rgb(238,193,5)" rx="2" ry="2" />
<text  x="105.08" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.2" y="709" width="0.2" height="15.0" fill="rgb(211,20,39)" rx="2" ry="2" />
<text  x="141.18" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.7" y="165" width="0.2" height="15.0" fill="rgb(245,181,6)" rx="2" ry="2" />
<text  x="1171.70" y="175.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 0.10%)</title><rect x="80.4" y="1957" width="1.2" height="15.0" fill="rgb(215,194,37)" rx="2" ry="2" />
<text  x="83.38" y="1967.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="443.2" y="1829" width="0.2" height="15.0" fill="rgb(245,229,31)" rx="2" ry="2" />
<text  x="446.22" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="218.7" y="757" width="0.2" height="15.0" fill="rgb(251,161,34)" rx="2" ry="2" />
<text  x="221.70" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="171.8" y="1429" width="0.3" height="15.0" fill="rgb(235,57,29)" rx="2" ry="2" />
<text  x="174.85" y="1439.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.02%)</title><rect x="204.3" y="1653" width="0.2" height="15.0" fill="rgb(220,99,23)" rx="2" ry="2" />
<text  x="207.30" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.7" y="341" width="0.2" height="15.0" fill="rgb(240,0,21)" rx="2" ry="2" />
<text  x="1171.70" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.5" y="773" width="0.2" height="15.0" fill="rgb(243,97,37)" rx="2" ry="2" />
<text  x="1171.50" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.3" y="405" width="0.2" height="15.0" fill="rgb(216,72,29)" rx="2" ry="2" />
<text  x="1171.30" y="415.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsgetn (1 samples, 0.02%)</title><rect x="1187.8" y="2053" width="0.2" height="15.0" fill="rgb(251,153,36)" rx="2" ry="2" />
<text  x="1190.77" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (1 samples, 0.02%)</title><rect x="152.6" y="1685" width="0.2" height="15.0" fill="rgb(207,5,5)" rx="2" ry="2" />
<text  x="155.58" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (1 samples, 0.02%)</title><rect x="131.9" y="1765" width="0.2" height="15.0" fill="rgb(211,122,36)" rx="2" ry="2" />
<text  x="134.89" y="1775.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="162.3" y="1637" width="0.2" height="15.0" fill="rgb(243,132,46)" rx="2" ry="2" />
<text  x="165.32" y="1647.5" ></text>
</g>
<g >
<title>__raw_callee_save___pv_queued_spin_unlock (1 samples, 0.02%)</title><rect x="80.6" y="37" width="0.2" height="15.0" fill="rgb(209,19,33)" rx="2" ry="2" />
<text  x="83.58" y="47.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="171.8" y="1733" width="0.3" height="15.0" fill="rgb(229,82,42)" rx="2" ry="2" />
<text  x="174.85" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.7" y="357" width="0.2" height="15.0" fill="rgb(238,36,32)" rx="2" ry="2" />
<text  x="1171.70" y="367.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="925.3" y="2037" width="0.2" height="15.0" fill="rgb(253,219,26)" rx="2" ry="2" />
<text  x="928.32" y="2047.5" ></text>
</g>
<g >
<title>__do_munmap (2 samples, 0.03%)</title><rect x="578.1" y="1909" width="0.4" height="15.0" fill="rgb(232,179,16)" rx="2" ry="2" />
<text  x="581.10" y="1919.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (3 samples, 0.05%)</title><rect x="1189.2" y="2053" width="0.6" height="15.0" fill="rgb(215,218,48)" rx="2" ry="2" />
<text  x="1192.19" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="1029" width="1.0" height="15.0" fill="rgb(228,41,5)" rx="2" ry="2" />
<text  x="83.58" y="1039.5" ></text>
</g>
<g >
<title>__vm_munmap (1 samples, 0.02%)</title><rect x="925.5" y="1989" width="0.2" height="15.0" fill="rgb(205,17,26)" rx="2" ry="2" />
<text  x="928.52" y="1999.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (3 samples, 0.05%)</title><rect x="161.7" y="1637" width="0.6" height="15.0" fill="rgb(235,81,25)" rx="2" ry="2" />
<text  x="164.71" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (34 samples, 0.58%)</title><rect x="183.2" y="1685" width="6.9" height="15.0" fill="rgb(254,129,31)" rx="2" ry="2" />
<text  x="186.21" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="389" width="1.0" height="15.0" fill="rgb(244,16,0)" rx="2" ry="2" />
<text  x="83.58" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (46 samples, 0.79%)</title><rect x="173.7" y="1733" width="9.3" height="15.0" fill="rgb(240,5,6)" rx="2" ry="2" />
<text  x="176.67" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_try_char (1 samples, 0.02%)</title><rect x="215.9" y="1829" width="0.2" height="15.0" fill="rgb(205,45,17)" rx="2" ry="2" />
<text  x="218.86" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (44 samples, 0.76%)</title><rect x="197.8" y="1701" width="8.9" height="15.0" fill="rgb(215,77,52)" rx="2" ry="2" />
<text  x="200.81" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_assertion (1 samples, 0.02%)</title><rect x="170.8" y="1861" width="0.2" height="15.0" fill="rgb(239,126,26)" rx="2" ry="2" />
<text  x="173.84" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.7" y="725" width="0.2" height="15.0" fill="rgb(214,199,49)" rx="2" ry="2" />
<text  x="1171.70" y="735.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="581.1" y="1973" width="0.2" height="15.0" fill="rgb(208,66,9)" rx="2" ry="2" />
<text  x="584.14" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.3" y="1157" width="0.2" height="15.0" fill="rgb(210,198,53)" rx="2" ry="2" />
<text  x="1171.30" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.3" y="1413" width="0.2" height="15.0" fill="rgb(236,171,14)" rx="2" ry="2" />
<text  x="1171.30" y="1423.5" ></text>
</g>
<g >
<title>generic_file_read_iter (1 samples, 0.02%)</title><rect x="925.3" y="1909" width="0.2" height="15.0" fill="rgb(222,195,27)" rx="2" ry="2" />
<text  x="928.32" y="1919.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (30 samples, 0.52%)</title><rect x="1136.9" y="2053" width="6.0" height="15.0" fill="rgb(236,110,5)" rx="2" ry="2" />
<text  x="1139.86" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (1 samples, 0.02%)</title><rect x="171.2" y="1797" width="0.2" height="15.0" fill="rgb(212,8,21)" rx="2" ry="2" />
<text  x="174.24" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (1 samples, 0.02%)</title><rect x="215.3" y="1797" width="0.2" height="15.0" fill="rgb(206,210,40)" rx="2" ry="2" />
<text  x="218.25" y="1807.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (5 samples, 0.09%)</title><rect x="187.5" y="1605" width="1.0" height="15.0" fill="rgb(244,166,18)" rx="2" ry="2" />
<text  x="190.47" y="1615.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (1 samples, 0.02%)</title><rect x="925.5" y="2005" width="0.2" height="15.0" fill="rgb(217,217,0)" rx="2" ry="2" />
<text  x="928.52" y="2015.5" ></text>
</g>
<g >
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="868.3" y="2037" width="0.2" height="15.0" fill="rgb(217,54,31)" rx="2" ry="2" />
<text  x="871.33" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.4" y="1317" width="0.2" height="15.0" fill="rgb(245,118,47)" rx="2" ry="2" />
<text  x="141.38" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.7" y="1013" width="0.2" height="15.0" fill="rgb(247,207,29)" rx="2" ry="2" />
<text  x="1171.70" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.5" y="1605" width="0.2" height="15.0" fill="rgb(233,41,46)" rx="2" ry="2" />
<text  x="1171.50" y="1615.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (1 samples, 0.02%)</title><rect x="195.4" y="1621" width="0.2" height="15.0" fill="rgb(208,111,15)" rx="2" ry="2" />
<text  x="198.38" y="1631.5" ></text>
</g>
<g >
<title>std::locale::locale (1 samples, 0.02%)</title><rect x="172.1" y="1941" width="0.2" height="15.0" fill="rgb(250,73,17)" rx="2" ry="2" />
<text  x="175.05" y="1951.5" ></text>
</g>
<g >
<title>generic_exec_single (1 samples, 0.02%)</title><rect x="925.5" y="1829" width="0.2" height="15.0" fill="rgb(227,7,8)" rx="2" ry="2" />
<text  x="928.52" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="218.7" y="1093" width="0.2" height="15.0" fill="rgb(238,146,50)" rx="2" ry="2" />
<text  x="221.70" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.5" y="373" width="0.2" height="15.0" fill="rgb(220,128,32)" rx="2" ry="2" />
<text  x="1171.50" y="383.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="151.8" y="1605" width="0.2" height="15.0" fill="rgb(214,85,54)" rx="2" ry="2" />
<text  x="154.77" y="1615.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (53 samples, 0.91%)</title><rect x="848.0" y="1893" width="10.8" height="15.0" fill="rgb(220,18,45)" rx="2" ry="2" />
<text  x="851.05" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="138.2" y="1509" width="0.4" height="15.0" fill="rgb(236,28,43)" rx="2" ry="2" />
<text  x="141.18" y="1519.5" ></text>
</g>
<g >
<title>std::ios_base::_M_init (1 samples, 0.02%)</title><rect x="1188.2" y="2053" width="0.2" height="15.0" fill="rgb(220,161,50)" rx="2" ry="2" />
<text  x="1191.17" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.5" y="1749" width="0.2" height="15.0" fill="rgb(210,185,47)" rx="2" ry="2" />
<text  x="1171.50" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.3" y="1349" width="0.2" height="15.0" fill="rgb(239,193,50)" rx="2" ry="2" />
<text  x="1171.30" y="1359.5" ></text>
</g>
<g >
<title>smp_call_function_single (1 samples, 0.02%)</title><rect x="925.5" y="1845" width="0.2" height="15.0" fill="rgb(235,113,34)" rx="2" ry="2" />
<text  x="928.52" y="1855.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::do_tolower (2 samples, 0.03%)</title><rect x="114.7" y="1621" width="0.4" height="15.0" fill="rgb(232,94,39)" rx="2" ry="2" />
<text  x="117.65" y="1631.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="1055.9" y="1957" width="0.2" height="15.0" fill="rgb(209,117,2)" rx="2" ry="2" />
<text  x="1058.94" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.3" y="1381" width="0.2" height="15.0" fill="rgb(234,100,46)" rx="2" ry="2" />
<text  x="1171.30" y="1391.5" ></text>
</g>
<g >
<title>cfree (2 samples, 0.03%)</title><rect x="104.1" y="1589" width="0.4" height="15.0" fill="rgb(205,23,51)" rx="2" ry="2" />
<text  x="107.11" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.5" y="1221" width="0.2" height="15.0" fill="rgb(244,150,14)" rx="2" ry="2" />
<text  x="1171.50" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (42 samples, 0.72%)</title><rect x="123.4" y="1749" width="8.5" height="15.0" fill="rgb(210,99,2)" rx="2" ry="2" />
<text  x="126.38" y="1759.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="342.6" y="1989" width="0.2" height="15.0" fill="rgb(216,182,1)" rx="2" ry="2" />
<text  x="345.62" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (42 samples, 0.72%)</title><rect x="123.4" y="1685" width="8.5" height="15.0" fill="rgb(227,109,34)" rx="2" ry="2" />
<text  x="126.38" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.5" y="469" width="0.2" height="15.0" fill="rgb(209,68,36)" rx="2" ry="2" />
<text  x="1171.50" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::_M_transform@plt (2 samples, 0.03%)</title><rect x="1143.6" y="2053" width="0.4" height="15.0" fill="rgb(248,197,14)" rx="2" ry="2" />
<text  x="1146.55" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.4" y="581" width="0.2" height="15.0" fill="rgb(250,96,18)" rx="2" ry="2" />
<text  x="141.38" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (5 samples, 0.09%)</title><rect x="155.6" y="1605" width="1.0" height="15.0" fill="rgb(248,113,13)" rx="2" ry="2" />
<text  x="158.62" y="1615.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (10 samples, 0.17%)</title><rect x="39.8" y="2005" width="2.0" height="15.0" fill="rgb(252,165,19)" rx="2" ry="2" />
<text  x="42.81" y="2015.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="185.0" y="1605" width="0.2" height="15.0" fill="rgb(235,99,29)" rx="2" ry="2" />
<text  x="188.03" y="1615.5" ></text>
</g>
<g >
<title>__dynamic_cast (6 samples, 0.10%)</title><rect x="153.2" y="1621" width="1.2" height="15.0" fill="rgb(208,205,47)" rx="2" ry="2" />
<text  x="156.19" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.5" y="213" width="0.2" height="15.0" fill="rgb(229,161,9)" rx="2" ry="2" />
<text  x="1171.50" y="223.5" ></text>
</g>
<g >
<title>fasttext::ProductQuantizer::get_centroids (2 samples, 0.03%)</title><rect x="1097.5" y="2053" width="0.4" height="15.0" fill="rgb(224,190,3)" rx="2" ry="2" />
<text  x="1100.51" y="2063.5" ></text>
</g>
<g >
<title>std::future&lt;boost::optional&lt;TDocument&gt; &gt;::get (5 samples, 0.09%)</title><rect x="101.7" y="1989" width="1.0" height="15.0" fill="rgb(254,39,26)" rx="2" ry="2" />
<text  x="104.67" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="217.3" y="1765" width="0.6" height="15.0" fill="rgb(212,46,17)" rx="2" ry="2" />
<text  x="220.28" y="1775.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="548.7" y="1925" width="0.2" height="15.0" fill="rgb(211,86,29)" rx="2" ry="2" />
<text  x="551.69" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.3" y="933" width="0.2" height="15.0" fill="rgb(223,189,21)" rx="2" ry="2" />
<text  x="1171.30" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.3" y="1749" width="0.2" height="15.0" fill="rgb(253,33,27)" rx="2" ry="2" />
<text  x="1171.30" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="218.7" y="1221" width="0.2" height="15.0" fill="rgb(221,90,30)" rx="2" ry="2" />
<text  x="221.70" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.2" y="1317" width="0.2" height="15.0" fill="rgb(215,1,27)" rx="2" ry="2" />
<text  x="141.18" y="1327.5" ></text>
</g>
<g >
<title>unmap_region (3 samples, 0.05%)</title><rect x="458.0" y="1877" width="0.6" height="15.0" fill="rgb(254,172,5)" rx="2" ry="2" />
<text  x="461.03" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (37 samples, 0.64%)</title><rect x="144.9" y="1717" width="7.5" height="15.0" fill="rgb(228,183,46)" rx="2" ry="2" />
<text  x="147.87" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="217.7" y="1557" width="0.2" height="15.0" fill="rgb(221,46,25)" rx="2" ry="2" />
<text  x="220.69" y="1567.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.02%)</title><rect x="212.4" y="1685" width="0.2" height="15.0" fill="rgb(231,5,35)" rx="2" ry="2" />
<text  x="215.41" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 0.10%)</title><rect x="80.4" y="2005" width="1.2" height="15.0" fill="rgb(216,190,43)" rx="2" ry="2" />
<text  x="83.38" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="218.5" y="1397" width="0.4" height="15.0" fill="rgb(221,126,40)" rx="2" ry="2" />
<text  x="221.50" y="1407.5" ></text>
</g>
<g >
<title>__dynamic_cast (5 samples, 0.09%)</title><rect x="183.2" y="1621" width="1.0" height="15.0" fill="rgb(205,184,20)" rx="2" ry="2" />
<text  x="186.21" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.3" y="117" width="0.2" height="15.0" fill="rgb(219,214,14)" rx="2" ry="2" />
<text  x="1171.30" y="127.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="185.0" y="1621" width="0.2" height="15.0" fill="rgb(218,166,20)" rx="2" ry="2" />
<text  x="188.03" y="1631.5" ></text>
</g>
<g >
<title>alloc_pages_vma (17 samples, 0.29%)</title><rect x="439.8" y="1877" width="3.4" height="15.0" fill="rgb(243,104,31)" rx="2" ry="2" />
<text  x="442.77" y="1887.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (4 samples, 0.07%)</title><rect x="205.9" y="1669" width="0.8" height="15.0" fill="rgb(218,4,9)" rx="2" ry="2" />
<text  x="208.92" y="1679.5" ></text>
</g>
<g >
<title>onmt::unicode::is_letter (313 samples, 5.38%)</title><rect x="767.7" y="1893" width="63.5" height="15.0" fill="rgb(236,7,5)" rx="2" ry="2" />
<text  x="770.73" y="1903.5" >onmt::..</text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (1 samples, 0.02%)</title><rect x="107.2" y="1573" width="0.2" height="15.0" fill="rgb(219,8,8)" rx="2" ry="2" />
<text  x="110.15" y="1583.5" ></text>
</g>
<g >
<title>onmt::unicode::explode_utf8 (1 samples, 0.02%)</title><rect x="764.7" y="1893" width="0.2" height="15.0" fill="rgb(214,109,32)" rx="2" ry="2" />
<text  x="767.69" y="1903.5" ></text>
</g>
<g >
<title>std::__merge_without_buffer&lt;__gnu_cxx::__normal_iterator&lt;TWeightedDoc*, std::vector&lt;TWeightedDoc, std::allocator&lt;TWeightedDoc&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;TNewsCluster::SortByWeights (93 samples, 1.60%)</title><rect x="1168.9" y="2053" width="18.9" height="15.0" fill="rgb(216,21,42)" rx="2" ry="2" />
<text  x="1171.91" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.7" y="1605" width="0.2" height="15.0" fill="rgb(210,200,15)" rx="2" ry="2" />
<text  x="1171.70" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (35 samples, 0.60%)</title><rect x="190.7" y="1765" width="7.1" height="15.0" fill="rgb(237,69,3)" rx="2" ry="2" />
<text  x="193.71" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (42 samples, 0.72%)</title><rect x="123.4" y="1765" width="8.5" height="15.0" fill="rgb(250,193,54)" rx="2" ry="2" />
<text  x="126.38" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (36 samples, 0.62%)</title><rect x="144.9" y="1701" width="7.3" height="15.0" fill="rgb(249,76,38)" rx="2" ry="2" />
<text  x="147.87" y="1711.5" ></text>
</g>
<g >
<title>TNewsCluster::GetTimestamp (1 samples, 0.02%)</title><rect x="172.3" y="1973" width="0.2" height="15.0" fill="rgb(229,72,7)" rx="2" ry="2" />
<text  x="175.26" y="1983.5" ></text>
</g>
<g >
<title>new_sync_read (1 samples, 0.02%)</title><rect x="925.3" y="1941" width="0.2" height="15.0" fill="rgb(221,167,26)" rx="2" ry="2" />
<text  x="928.32" y="1951.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.02%)</title><rect x="80.6" y="117" width="0.2" height="15.0" fill="rgb(211,173,15)" rx="2" ry="2" />
<text  x="83.58" y="127.5" ></text>
</g>
<g >
<title>get_page_from_freelist (2 samples, 0.03%)</title><rect x="436.3" y="1829" width="0.4" height="15.0" fill="rgb(208,135,21)" rx="2" ry="2" />
<text  x="439.33" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (36 samples, 0.62%)</title><rect x="109.2" y="1701" width="7.3" height="15.0" fill="rgb(230,165,4)" rx="2" ry="2" />
<text  x="112.18" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="171.8" y="1701" width="0.3" height="15.0" fill="rgb(226,140,27)" rx="2" ry="2" />
<text  x="174.85" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="581" width="1.0" height="15.0" fill="rgb(237,229,27)" rx="2" ry="2" />
<text  x="83.58" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.5" y="101" width="0.2" height="15.0" fill="rgb(221,224,23)" rx="2" ry="2" />
<text  x="1171.50" y="111.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.7" y="757" width="0.2" height="15.0" fill="rgb(252,189,31)" rx="2" ry="2" />
<text  x="1171.70" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (34 samples, 0.58%)</title><rect x="183.2" y="1653" width="6.9" height="15.0" fill="rgb(207,9,33)" rx="2" ry="2" />
<text  x="186.21" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.7" y="69" width="0.2" height="15.0" fill="rgb(230,163,22)" rx="2" ry="2" />
<text  x="1171.70" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.7" y="1893" width="0.2" height="15.0" fill="rgb(233,170,26)" rx="2" ry="2" />
<text  x="1171.70" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="138.2" y="1429" width="0.4" height="15.0" fill="rgb(229,85,28)" rx="2" ry="2" />
<text  x="141.18" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.5" y="1717" width="0.2" height="15.0" fill="rgb(216,36,33)" rx="2" ry="2" />
<text  x="1171.50" y="1727.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::basic_regex&lt;char const*&gt; (174 samples, 2.99%)</title><rect x="102.7" y="1957" width="35.3" height="15.0" fill="rgb(205,182,3)" rx="2" ry="2" />
<text  x="105.69" y="1967.5" >st..</text>
</g>
<g >
<title>__schedule (1 samples, 0.02%)</title><rect x="871.0" y="1957" width="0.2" height="15.0" fill="rgb(241,123,19)" rx="2" ry="2" />
<text  x="873.97" y="1967.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::append (10 samples, 0.17%)</title><rect x="613.6" y="1893" width="2.0" height="15.0" fill="rgb(249,70,39)" rx="2" ry="2" />
<text  x="616.59" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Scanner&lt;char&gt;::_M_scan_normal (1 samples, 0.02%)</title><rect x="123.2" y="1717" width="0.2" height="15.0" fill="rgb(209,4,14)" rx="2" ry="2" />
<text  x="126.17" y="1727.5" ></text>
</g>
<g >
<title>std::vector&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::allocator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;::reserve (1 samples, 0.02%)</title><rect x="580.7" y="1989" width="0.2" height="15.0" fill="rgb(227,124,35)" rx="2" ry="2" />
<text  x="583.73" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="218.7" y="1157" width="0.2" height="15.0" fill="rgb(236,40,6)" rx="2" ry="2" />
<text  x="221.70" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="218.5" y="1237" width="0.2" height="15.0" fill="rgb(207,133,45)" rx="2" ry="2" />
<text  x="221.50" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.3" y="1685" width="0.2" height="15.0" fill="rgb(222,80,2)" rx="2" ry="2" />
<text  x="1171.30" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="218.5" y="917" width="0.2" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="221.50" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.4" y="565" width="0.2" height="15.0" fill="rgb(207,27,17)" rx="2" ry="2" />
<text  x="141.38" y="575.5" ></text>
</g>
<g >
<title>cfree (1 samples, 0.02%)</title><rect x="580.9" y="1973" width="0.2" height="15.0" fill="rgb(214,135,6)" rx="2" ry="2" />
<text  x="583.94" y="1983.5" ></text>
</g>
<g >
<title>fasttext::Vector::mul (25 samples, 0.43%)</title><rect x="560.7" y="1973" width="5.0" height="15.0" fill="rgb(209,216,42)" rx="2" ry="2" />
<text  x="563.65" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="218.5" y="1317" width="0.4" height="15.0" fill="rgb(242,38,25)" rx="2" ry="2" />
<text  x="221.50" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.3" y="213" width="0.2" height="15.0" fill="rgb(224,160,54)" rx="2" ry="2" />
<text  x="1171.30" y="223.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="80.2" y="2021" width="0.2" height="15.0" fill="rgb(220,216,2)" rx="2" ry="2" />
<text  x="83.18" y="2031.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.02%)</title><rect x="80.8" y="101" width="0.2" height="15.0" fill="rgb(236,79,45)" rx="2" ry="2" />
<text  x="83.78" y="111.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.3" y="1317" width="0.2" height="15.0" fill="rgb(246,149,43)" rx="2" ry="2" />
<text  x="1171.30" y="1327.5" ></text>
</g>
<g >
<title>unmap_vmas (1 samples, 0.02%)</title><rect x="578.3" y="1877" width="0.2" height="15.0" fill="rgb(244,168,23)" rx="2" ry="2" />
<text  x="581.30" y="1887.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.02%)</title><rect x="86.5" y="1957" width="0.2" height="15.0" fill="rgb(243,137,22)" rx="2" ry="2" />
<text  x="89.46" y="1967.5" ></text>
</g>
<g >
<title>get_futex_key (1 samples, 0.02%)</title><rect x="39.8" y="1925" width="0.2" height="15.0" fill="rgb(245,194,29)" rx="2" ry="2" />
<text  x="42.81" y="1935.5" ></text>
</g>
<g >
<title>cfree (1 samples, 0.02%)</title><rect x="866.9" y="1957" width="0.2" height="15.0" fill="rgb(206,67,2)" rx="2" ry="2" />
<text  x="869.91" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (1 samples, 0.02%)</title><rect x="170.6" y="1797" width="0.2" height="15.0" fill="rgb(253,199,39)" rx="2" ry="2" />
<text  x="173.63" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="138.2" y="1589" width="0.4" height="15.0" fill="rgb(242,104,17)" rx="2" ry="2" />
<text  x="141.18" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="218.5" y="1077" width="0.2" height="15.0" fill="rgb(234,83,24)" rx="2" ry="2" />
<text  x="221.50" y="1087.5" ></text>
</g>
<g >
<title>onmt::get_alphabet_id (3 samples, 0.05%)</title><rect x="759.8" y="1893" width="0.6" height="15.0" fill="rgb(243,177,34)" rx="2" ry="2" />
<text  x="762.82" y="1903.5" ></text>
</g>
<g >
<title>do_futex (9 samples, 0.15%)</title><rect x="39.8" y="1957" width="1.8" height="15.0" fill="rgb(229,185,9)" rx="2" ry="2" />
<text  x="42.81" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="218.7" y="773" width="0.2" height="15.0" fill="rgb(241,4,50)" rx="2" ry="2" />
<text  x="221.70" y="783.5" ></text>
</g>
<g >
<title>onmt::unicode::explode_utf8 (64 samples, 1.10%)</title><rect x="633.1" y="1877" width="12.9" height="15.0" fill="rgb(216,189,0)" rx="2" ry="2" />
<text  x="636.06" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (206 samples, 3.54%)</title><rect x="173.7" y="1877" width="41.8" height="15.0" fill="rgb(206,77,5)" rx="2" ry="2" />
<text  x="176.67" y="1887.5" >std..</text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="1781" width="1.0" height="15.0" fill="rgb(233,176,3)" rx="2" ry="2" />
<text  x="83.58" y="1791.5" ></text>
</g>
<g >
<title>std::locale::~locale@plt (1 samples, 0.02%)</title><rect x="576.7" y="1973" width="0.2" height="15.0" fill="rgb(206,209,47)" rx="2" ry="2" />
<text  x="579.68" y="1983.5" ></text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::get (3 samples, 0.05%)</title><rect x="87.1" y="1941" width="0.6" height="15.0" fill="rgb(251,150,42)" rx="2" ry="2" />
<text  x="90.07" y="1951.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="143.9" y="1557" width="0.2" height="15.0" fill="rgb(229,31,3)" rx="2" ry="2" />
<text  x="146.86" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.5" y="629" width="0.2" height="15.0" fill="rgb(208,159,25)" rx="2" ry="2" />
<text  x="1171.50" y="639.5" ></text>
</g>
<g >
<title>std::locale::operator= (1 samples, 0.02%)</title><rect x="216.3" y="1925" width="0.2" height="15.0" fill="rgb(252,169,6)" rx="2" ry="2" />
<text  x="219.27" y="1935.5" ></text>
</g>
<g >
<title>tlb_flush_mmu_free (1 samples, 0.02%)</title><rect x="955.1" y="1893" width="0.2" height="15.0" fill="rgb(207,62,36)" rx="2" ry="2" />
<text  x="958.14" y="1903.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (2 samples, 0.03%)</title><rect x="168.0" y="1669" width="0.4" height="15.0" fill="rgb(246,222,30)" rx="2" ry="2" />
<text  x="171.00" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="1045" width="1.0" height="15.0" fill="rgb(225,33,27)" rx="2" ry="2" />
<text  x="83.58" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.2" y="1205" width="0.2" height="15.0" fill="rgb(229,65,52)" rx="2" ry="2" />
<text  x="141.18" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="217.7" y="1365" width="0.2" height="15.0" fill="rgb(223,23,4)" rx="2" ry="2" />
<text  x="220.69" y="1375.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::push_back (1 samples, 0.02%)</title><rect x="1189.8" y="2053" width="0.2" height="15.0" fill="rgb(205,113,53)" rx="2" ry="2" />
<text  x="1192.80" y="2063.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="879.3" y="1941" width="0.2" height="15.0" fill="rgb(215,227,26)" rx="2" ry="2" />
<text  x="882.28" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="171.6" y="1877" width="0.5" height="15.0" fill="rgb(232,36,12)" rx="2" ry="2" />
<text  x="174.65" y="1887.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="1055.9" y="1973" width="0.2" height="15.0" fill="rgb(234,116,25)" rx="2" ry="2" />
<text  x="1058.94" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="1765" width="1.0" height="15.0" fill="rgb(217,203,24)" rx="2" ry="2" />
<text  x="83.58" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="277" width="1.0" height="15.0" fill="rgb(205,197,26)" rx="2" ry="2" />
<text  x="83.58" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.3" y="1221" width="0.2" height="15.0" fill="rgb(217,153,51)" rx="2" ry="2" />
<text  x="1171.30" y="1231.5" ></text>
</g>
<g >
<title>unmap_single_vma (1 samples, 0.02%)</title><rect x="955.1" y="1925" width="0.2" height="15.0" fill="rgb(241,162,3)" rx="2" ry="2" />
<text  x="958.14" y="1935.5" ></text>
</g>
<g >
<title>fasttext::SoftmaxLoss::computeOutput (2 samples, 0.03%)</title><rect x="1101.0" y="2053" width="0.4" height="15.0" fill="rgb(225,93,4)" rx="2" ry="2" />
<text  x="1103.96" y="2063.5" ></text>
</g>
<g >
<title>boost::algorithm::join&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, char [2]&gt; (3 samples, 0.05%)</title><rect x="586.2" y="1941" width="0.6" height="15.0" fill="rgb(215,73,25)" rx="2" ry="2" />
<text  x="589.21" y="1951.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="75.3" y="1989" width="0.2" height="15.0" fill="rgb(249,82,37)" rx="2" ry="2" />
<text  x="78.31" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.3" y="229" width="0.2" height="15.0" fill="rgb(212,170,43)" rx="2" ry="2" />
<text  x="1171.30" y="239.5" ></text>
</g>
<g >
<title>operator delete@plt (1 samples, 0.02%)</title><rect x="126.4" y="1669" width="0.2" height="15.0" fill="rgb(239,120,22)" rx="2" ry="2" />
<text  x="129.42" y="1679.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_stringbuf (29 samples, 0.50%)</title><rect x="881.5" y="2037" width="5.9" height="15.0" fill="rgb(227,173,52)" rx="2" ry="2" />
<text  x="884.51" y="2047.5" ></text>
</g>
<g >
<title>do_syscall_64 (10 samples, 0.17%)</title><rect x="39.8" y="1989" width="2.0" height="15.0" fill="rgb(206,145,35)" rx="2" ry="2" />
<text  x="42.81" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.3" y="997" width="0.2" height="15.0" fill="rgb(252,19,8)" rx="2" ry="2" />
<text  x="1171.30" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.7" y="885" width="0.2" height="15.0" fill="rgb(225,193,12)" rx="2" ry="2" />
<text  x="1171.70" y="895.5" ></text>
</g>
<g >
<title>__pthread_once (1 samples, 0.02%)</title><rect x="39.0" y="2021" width="0.2" height="15.0" fill="rgb(246,219,41)" rx="2" ry="2" />
<text  x="42.00" y="2031.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::load (3 samples, 0.05%)</title><rect x="1014.0" y="2053" width="0.6" height="15.0" fill="rgb(225,66,35)" rx="2" ry="2" />
<text  x="1016.95" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.5" y="1445" width="0.2" height="15.0" fill="rgb(226,188,20)" rx="2" ry="2" />
<text  x="1171.50" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.4" y="405" width="0.2" height="15.0" fill="rgb(227,19,22)" rx="2" ry="2" />
<text  x="141.38" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.3" y="2053" width="0.2" height="15.0" fill="rgb(215,128,31)" rx="2" ry="2" />
<text  x="1171.30" y="2063.5" ></text>
</g>
<g >
<title>malloc@plt (4 samples, 0.07%)</title><rect x="644.0" y="1861" width="0.8" height="15.0" fill="rgb(247,156,36)" rx="2" ry="2" />
<text  x="647.01" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.4" y="549" width="0.2" height="15.0" fill="rgb(240,148,21)" rx="2" ry="2" />
<text  x="141.38" y="559.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="81.0" y="53" width="0.6" height="15.0" fill="rgb(221,202,45)" rx="2" ry="2" />
<text  x="83.99" y="63.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (206 samples, 3.54%)</title><rect x="173.7" y="1861" width="41.8" height="15.0" fill="rgb(238,60,24)" rx="2" ry="2" />
<text  x="176.67" y="1871.5" >std..</text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="1381" width="1.0" height="15.0" fill="rgb(205,126,5)" rx="2" ry="2" />
<text  x="83.58" y="1391.5" ></text>
</g>
<g >
<title>fasttext::DenseMatrix::addRowToVector (444 samples, 7.63%)</title><rect x="458.8" y="1973" width="90.1" height="15.0" fill="rgb(225,20,1)" rx="2" ry="2" />
<text  x="461.84" y="1983.5" >fasttext::..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.7" y="1557" width="0.2" height="15.0" fill="rgb(221,87,24)" rx="2" ry="2" />
<text  x="1171.70" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.3" y="1701" width="0.2" height="15.0" fill="rgb(225,68,30)" rx="2" ry="2" />
<text  x="1171.30" y="1711.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::clear (1 samples, 0.02%)</title><rect x="616.0" y="1893" width="0.2" height="15.0" fill="rgb(244,62,38)" rx="2" ry="2" />
<text  x="619.02" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.3" y="949" width="0.2" height="15.0" fill="rgb(239,36,17)" rx="2" ry="2" />
<text  x="1171.30" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.3" y="741" width="0.2" height="15.0" fill="rgb(236,172,48)" rx="2" ry="2" />
<text  x="1171.30" y="751.5" ></text>
</g>
<g >
<title>fasttext::DenseMatrix::dotRow (4 samples, 0.07%)</title><rect x="955.3" y="2053" width="0.8" height="15.0" fill="rgb(242,52,33)" rx="2" ry="2" />
<text  x="958.34" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.5" y="709" width="0.2" height="15.0" fill="rgb(229,22,21)" rx="2" ry="2" />
<text  x="1171.50" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="218.5" y="1205" width="0.2" height="15.0" fill="rgb(227,15,47)" rx="2" ry="2" />
<text  x="221.50" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.4" y="821" width="0.2" height="15.0" fill="rgb(238,146,45)" rx="2" ry="2" />
<text  x="141.38" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (2 samples, 0.03%)</title><rect x="171.0" y="1877" width="0.4" height="15.0" fill="rgb(231,192,43)" rx="2" ry="2" />
<text  x="174.04" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="1573" width="1.0" height="15.0" fill="rgb(210,10,8)" rx="2" ry="2" />
<text  x="83.58" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (25 samples, 0.43%)</title><rect x="132.1" y="1813" width="5.1" height="15.0" fill="rgb(246,36,4)" rx="2" ry="2" />
<text  x="135.10" y="1823.5" ></text>
</g>
<g >
<title>__x64_sys_futex (9 samples, 0.15%)</title><rect x="39.8" y="1973" width="1.8" height="15.0" fill="rgb(239,94,40)" rx="2" ry="2" />
<text  x="42.81" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.7" y="1621" width="0.2" height="15.0" fill="rgb(217,153,51)" rx="2" ry="2" />
<text  x="1171.70" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.5" y="1685" width="0.2" height="15.0" fill="rgb(217,186,36)" rx="2" ry="2" />
<text  x="1171.50" y="1695.5" ></text>
</g>
<g >
<title>nlohmann::detail::input_stream_adapter::get_character (1 samples, 0.02%)</title><rect x="91.7" y="1925" width="0.2" height="15.0" fill="rgb(218,226,31)" rx="2" ry="2" />
<text  x="94.74" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.3" y="1525" width="0.2" height="15.0" fill="rgb(227,84,22)" rx="2" ry="2" />
<text  x="1171.30" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="218.5" y="821" width="0.2" height="15.0" fill="rgb(214,171,51)" rx="2" ry="2" />
<text  x="221.50" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.3" y="1925" width="0.2" height="15.0" fill="rgb(237,44,50)" rx="2" ry="2" />
<text  x="1171.30" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.5" y="1045" width="0.2" height="15.0" fill="rgb(215,186,12)" rx="2" ry="2" />
<text  x="1171.50" y="1055.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (1 samples, 0.02%)</title><rect x="120.9" y="1621" width="0.2" height="15.0" fill="rgb(252,166,41)" rx="2" ry="2" />
<text  x="123.94" y="1631.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.03%)</title><rect x="120.5" y="1621" width="0.4" height="15.0" fill="rgb(216,168,35)" rx="2" ry="2" />
<text  x="123.54" y="1631.5" ></text>
</g>
<g >
<title>copy_page_to_iter (1 samples, 0.02%)</title><rect x="925.3" y="1893" width="0.2" height="15.0" fill="rgb(252,39,47)" rx="2" ry="2" />
<text  x="928.32" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.3" y="277" width="0.2" height="15.0" fill="rgb(238,152,20)" rx="2" ry="2" />
<text  x="1171.30" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.2" y="1349" width="0.2" height="15.0" fill="rgb(231,3,31)" rx="2" ry="2" />
<text  x="141.18" y="1359.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="261" width="1.0" height="15.0" fill="rgb(208,125,17)" rx="2" ry="2" />
<text  x="83.58" y="271.5" ></text>
</g>
<g >
<title>fasttext::Vector::norm (30 samples, 0.52%)</title><rect x="334.5" y="1989" width="6.1" height="15.0" fill="rgb(253,120,15)" rx="2" ry="2" />
<text  x="337.51" y="1999.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (2 samples, 0.03%)</title><rect x="214.2" y="1701" width="0.4" height="15.0" fill="rgb(238,199,48)" rx="2" ry="2" />
<text  x="217.24" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="218.7" y="917" width="0.2" height="15.0" fill="rgb(208,74,40)" rx="2" ry="2" />
<text  x="221.70" y="927.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (2 samples, 0.03%)</title><rect x="167.6" y="1669" width="0.4" height="15.0" fill="rgb(236,63,46)" rx="2" ry="2" />
<text  x="170.59" y="1679.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (1 samples, 0.02%)</title><rect x="114.0" y="1605" width="0.2" height="15.0" fill="rgb(220,102,38)" rx="2" ry="2" />
<text  x="117.05" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="171.6" y="1637" width="0.2" height="15.0" fill="rgb(249,174,33)" rx="2" ry="2" />
<text  x="174.65" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="138.2" y="1397" width="0.4" height="15.0" fill="rgb(206,11,36)" rx="2" ry="2" />
<text  x="141.18" y="1407.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1047.4" y="2021" width="0.2" height="15.0" fill="rgb(214,138,5)" rx="2" ry="2" />
<text  x="1050.42" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="138.2" y="1877" width="0.4" height="15.0" fill="rgb(243,106,40)" rx="2" ry="2" />
<text  x="141.18" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.3" y="1061" width="0.2" height="15.0" fill="rgb(207,150,36)" rx="2" ry="2" />
<text  x="1171.30" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (44 samples, 0.76%)</title><rect x="197.8" y="1685" width="8.9" height="15.0" fill="rgb(208,214,28)" rx="2" ry="2" />
<text  x="200.81" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="1797" width="1.0" height="15.0" fill="rgb(228,94,29)" rx="2" ry="2" />
<text  x="83.58" y="1807.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="75.1" y="1989" width="0.2" height="15.0" fill="rgb(240,61,47)" rx="2" ry="2" />
<text  x="78.10" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.7" y="1717" width="0.2" height="15.0" fill="rgb(244,4,1)" rx="2" ry="2" />
<text  x="1171.70" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.5" y="1317" width="0.2" height="15.0" fill="rgb(222,163,7)" rx="2" ry="2" />
<text  x="1171.50" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.3" y="373" width="0.2" height="15.0" fill="rgb(213,112,0)" rx="2" ry="2" />
<text  x="1171.30" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (10 samples, 0.17%)</title><rect x="154.8" y="1621" width="2.0" height="15.0" fill="rgb(246,55,27)" rx="2" ry="2" />
<text  x="157.81" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (172 samples, 2.96%)</title><rect x="102.7" y="1893" width="34.9" height="15.0" fill="rgb(230,54,37)" rx="2" ry="2" />
<text  x="105.69" y="1903.5" >st..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (1 samples, 0.02%)</title><rect x="215.9" y="1845" width="0.2" height="15.0" fill="rgb(251,211,53)" rx="2" ry="2" />
<text  x="218.86" y="1855.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::initNgrams (1 samples, 0.02%)</title><rect x="869.3" y="2037" width="0.2" height="15.0" fill="rgb(223,44,17)" rx="2" ry="2" />
<text  x="872.34" y="2047.5" ></text>
</g>
<g >
<title>__munmap (3 samples, 0.05%)</title><rect x="458.0" y="1973" width="0.6" height="15.0" fill="rgb(208,81,17)" rx="2" ry="2" />
<text  x="461.03" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.3" y="2021" width="0.2" height="15.0" fill="rgb(206,221,29)" rx="2" ry="2" />
<text  x="1171.30" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="218.5" y="805" width="0.2" height="15.0" fill="rgb(234,81,24)" rx="2" ry="2" />
<text  x="221.50" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.19%)</title><rect x="216.9" y="1845" width="2.2" height="15.0" fill="rgb(217,145,41)" rx="2" ry="2" />
<text  x="219.88" y="1855.5" ></text>
</g>
<g >
<title>std::istream::get (1 samples, 0.02%)</title><rect x="1188.4" y="2053" width="0.2" height="15.0" fill="rgb(208,192,0)" rx="2" ry="2" />
<text  x="1191.38" y="2063.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (2 samples, 0.03%)</title><rect x="142.8" y="1557" width="0.5" height="15.0" fill="rgb(205,94,41)" rx="2" ry="2" />
<text  x="145.85" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_expression_term&lt;false, false&gt; (1 samples, 0.02%)</title><rect x="189.9" y="1637" width="0.2" height="15.0" fill="rgb(231,101,13)" rx="2" ry="2" />
<text  x="192.90" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.2" y="1237" width="0.2" height="15.0" fill="rgb(212,187,9)" rx="2" ry="2" />
<text  x="141.18" y="1247.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="80.6" y="53" width="0.2" height="15.0" fill="rgb(223,211,14)" rx="2" ry="2" />
<text  x="83.58" y="63.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="217.7" y="1589" width="0.2" height="15.0" fill="rgb(232,35,29)" rx="2" ry="2" />
<text  x="220.69" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="218.3" y="1557" width="0.6" height="15.0" fill="rgb(251,19,14)" rx="2" ry="2" />
<text  x="221.29" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="218.5" y="1157" width="0.2" height="15.0" fill="rgb(248,29,21)" rx="2" ry="2" />
<text  x="221.50" y="1167.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::_M_do_set (1,412 samples, 24.27%)</title><rect x="581.9" y="2021" width="286.4" height="15.0" fill="rgb(210,101,32)" rx="2" ry="2" />
<text  x="584.95" y="2031.5" >std::__future_base::_State_baseV2::_M_..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="138.0" y="1925" width="0.6" height="15.0" fill="rgb(205,126,12)" rx="2" ry="2" />
<text  x="140.98" y="1935.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (40 samples, 0.69%)</title><rect x="429.6" y="1957" width="8.1" height="15.0" fill="rgb(243,125,2)" rx="2" ry="2" />
<text  x="432.63" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.4" y="261" width="0.2" height="15.0" fill="rgb(215,2,14)" rx="2" ry="2" />
<text  x="141.38" y="271.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="645" width="1.0" height="15.0" fill="rgb(218,107,52)" rx="2" ry="2" />
<text  x="83.58" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="217.7" y="1605" width="0.2" height="15.0" fill="rgb(213,48,4)" rx="2" ry="2" />
<text  x="220.69" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (1 samples, 0.02%)</title><rect x="215.3" y="1765" width="0.2" height="15.0" fill="rgb(219,189,41)" rx="2" ry="2" />
<text  x="218.25" y="1775.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id@plt (1 samples, 0.02%)</title><rect x="182.6" y="1589" width="0.2" height="15.0" fill="rgb(236,94,35)" rx="2" ry="2" />
<text  x="185.60" y="1599.5" ></text>
</g>
<g >
<title>fasttext::Vector::addVector (17 samples, 0.29%)</title><rect x="557.2" y="1973" width="3.5" height="15.0" fill="rgb(245,30,9)" rx="2" ry="2" />
<text  x="560.21" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="171.6" y="1621" width="0.2" height="15.0" fill="rgb(247,11,34)" rx="2" ry="2" />
<text  x="174.65" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.3" y="757" width="0.2" height="15.0" fill="rgb(244,24,44)" rx="2" ry="2" />
<text  x="1171.30" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (1 samples, 0.02%)</title><rect x="152.4" y="1717" width="0.2" height="15.0" fill="rgb(247,110,43)" rx="2" ry="2" />
<text  x="155.38" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (1 samples, 0.02%)</title><rect x="137.2" y="1717" width="0.2" height="15.0" fill="rgb(249,71,54)" rx="2" ry="2" />
<text  x="140.17" y="1727.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="75.3" y="2021" width="0.2" height="15.0" fill="rgb(234,159,15)" rx="2" ry="2" />
<text  x="78.31" y="2031.5" ></text>
</g>
<g >
<title>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::dump (4 samples, 0.07%)</title><rect x="579.3" y="1989" width="0.8" height="15.0" fill="rgb(210,158,34)" rx="2" ry="2" />
<text  x="582.31" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (1 samples, 0.02%)</title><rect x="197.6" y="1669" width="0.2" height="15.0" fill="rgb(237,65,23)" rx="2" ry="2" />
<text  x="200.61" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.2" y="1253" width="0.2" height="15.0" fill="rgb(241,12,51)" rx="2" ry="2" />
<text  x="141.18" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (34 samples, 0.58%)</title><rect x="183.2" y="1669" width="6.9" height="15.0" fill="rgb(209,150,27)" rx="2" ry="2" />
<text  x="186.21" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="217.3" y="1733" width="0.6" height="15.0" fill="rgb(224,72,28)" rx="2" ry="2" />
<text  x="220.28" y="1743.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::_M_transform (3 samples, 0.05%)</title><rect x="1142.9" y="2053" width="0.7" height="15.0" fill="rgb(245,38,15)" rx="2" ry="2" />
<text  x="1145.95" y="2063.5" ></text>
</g>
<g >
<title>native_write_msr (1 samples, 0.02%)</title><rect x="925.5" y="1781" width="0.2" height="15.0" fill="rgb(208,66,45)" rx="2" ry="2" />
<text  x="928.52" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (1 samples, 0.02%)</title><rect x="197.6" y="1717" width="0.2" height="15.0" fill="rgb(211,11,31)" rx="2" ry="2" />
<text  x="200.61" y="1727.5" ></text>
</g>
<g >
<title>nlohmann::operator&gt;&gt; (72 samples, 1.24%)</title><rect x="87.1" y="1989" width="14.6" height="15.0" fill="rgb(236,11,26)" rx="2" ry="2" />
<text  x="90.07" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.5" y="1637" width="0.2" height="15.0" fill="rgb(247,17,49)" rx="2" ry="2" />
<text  x="1171.50" y="1647.5" ></text>
</g>
<g >
<title>std::operator&gt;&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (4 samples, 0.07%)</title><rect x="342.8" y="1989" width="0.8" height="15.0" fill="rgb(221,158,0)" rx="2" ry="2" />
<text  x="345.83" y="1999.5" ></text>
</g>
<g >
<title>onmt::CaseModifier::extract_case_type (148 samples, 2.54%)</title><rect x="616.4" y="1893" width="30.0" height="15.0" fill="rgb(254,203,15)" rx="2" ry="2" />
<text  x="619.43" y="1903.5" >on..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.2" y="1221" width="0.2" height="15.0" fill="rgb(214,7,17)" rx="2" ry="2" />
<text  x="141.18" y="1231.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (2 samples, 0.03%)</title><rect x="860.0" y="1893" width="0.4" height="15.0" fill="rgb(207,6,30)" rx="2" ry="2" />
<text  x="863.01" y="1903.5" ></text>
</g>
<g >
<title>operator new[] (1 samples, 0.02%)</title><rect x="1120.4" y="2053" width="0.2" height="15.0" fill="rgb(242,112,32)" rx="2" ry="2" />
<text  x="1123.43" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="218.5" y="1141" width="0.2" height="15.0" fill="rgb(205,31,45)" rx="2" ry="2" />
<text  x="221.50" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.7" y="1461" width="0.2" height="15.0" fill="rgb(229,45,13)" rx="2" ry="2" />
<text  x="1171.70" y="1471.5" ></text>
</g>
<g >
<title>__dynamic_cast (7 samples, 0.12%)</title><rect x="144.9" y="1605" width="1.4" height="15.0" fill="rgb(244,95,5)" rx="2" ry="2" />
<text  x="147.87" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.3" y="645" width="0.2" height="15.0" fill="rgb(215,217,2)" rx="2" ry="2" />
<text  x="1171.30" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.3" y="1237" width="0.2" height="15.0" fill="rgb(245,104,37)" rx="2" ry="2" />
<text  x="1171.30" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.7" y="949" width="0.2" height="15.0" fill="rgb(207,9,4)" rx="2" ry="2" />
<text  x="1171.70" y="959.5" ></text>
</g>
<g >
<title>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::dump_escaped (1 samples, 0.02%)</title><rect x="579.9" y="1925" width="0.2" height="15.0" fill="rgb(222,143,35)" rx="2" ry="2" />
<text  x="582.92" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="218.7" y="661" width="0.2" height="15.0" fill="rgb(229,84,41)" rx="2" ry="2" />
<text  x="221.70" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.5" y="1413" width="0.2" height="15.0" fill="rgb(236,214,51)" rx="2" ry="2" />
<text  x="1171.50" y="1423.5" ></text>
</g>
<g >
<title>unmap_region (1 samples, 0.02%)</title><rect x="925.5" y="1957" width="0.2" height="15.0" fill="rgb(254,228,22)" rx="2" ry="2" />
<text  x="928.52" y="1967.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt;@plt (1 samples, 0.02%)</title><rect x="862.2" y="1893" width="0.2" height="15.0" fill="rgb(214,4,27)" rx="2" ry="2" />
<text  x="865.24" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.4" y="277" width="0.2" height="15.0" fill="rgb(246,106,27)" rx="2" ry="2" />
<text  x="141.38" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.7" y="677" width="0.2" height="15.0" fill="rgb(227,175,36)" rx="2" ry="2" />
<text  x="1171.70" y="687.5" ></text>
</g>
<g >
<title>do_exit (1 samples, 0.02%)</title><rect x="955.1" y="1989" width="0.2" height="15.0" fill="rgb(252,152,31)" rx="2" ry="2" />
<text  x="958.14" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (14 samples, 0.24%)</title><rect x="194.2" y="1637" width="2.8" height="15.0" fill="rgb(232,73,39)" rx="2" ry="2" />
<text  x="197.16" y="1647.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="157.4" y="1621" width="0.3" height="15.0" fill="rgb(223,66,43)" rx="2" ry="2" />
<text  x="160.45" y="1631.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (1 samples, 0.02%)</title><rect x="216.7" y="1845" width="0.2" height="15.0" fill="rgb(216,144,6)" rx="2" ry="2" />
<text  x="219.67" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="218.7" y="1285" width="0.2" height="15.0" fill="rgb(229,93,31)" rx="2" ry="2" />
<text  x="221.70" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (69 samples, 1.19%)</title><rect x="138.6" y="1749" width="14.0" height="15.0" fill="rgb(228,47,22)" rx="2" ry="2" />
<text  x="141.59" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.3" y="1573" width="0.2" height="15.0" fill="rgb(246,17,24)" rx="2" ry="2" />
<text  x="1171.30" y="1583.5" ></text>
</g>
<g >
<title>free_unref_page_list (1 samples, 0.02%)</title><rect x="458.4" y="1765" width="0.2" height="15.0" fill="rgb(240,84,46)" rx="2" ry="2" />
<text  x="461.43" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (31 samples, 0.53%)</title><rect x="164.1" y="1701" width="6.3" height="15.0" fill="rgb(229,14,24)" rx="2" ry="2" />
<text  x="167.14" y="1711.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (7 samples, 0.12%)</title><rect x="584.8" y="1941" width="1.4" height="15.0" fill="rgb(231,80,36)" rx="2" ry="2" />
<text  x="587.79" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.7" y="901" width="0.2" height="15.0" fill="rgb(232,144,31)" rx="2" ry="2" />
<text  x="1171.70" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.3" y="85" width="0.2" height="15.0" fill="rgb(245,141,36)" rx="2" ry="2" />
<text  x="1171.30" y="95.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="75.1" y="2005" width="0.2" height="15.0" fill="rgb(217,62,9)" rx="2" ry="2" />
<text  x="78.10" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="218.3" y="1525" width="0.6" height="15.0" fill="rgb(216,111,20)" rx="2" ry="2" />
<text  x="221.29" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.7" y="229" width="0.2" height="15.0" fill="rgb(207,134,9)" rx="2" ry="2" />
<text  x="1171.70" y="239.5" ></text>
</g>
<g >
<title>alloc_pages_vma (8 samples, 0.14%)</title><rect x="33.5" y="1957" width="1.6" height="15.0" fill="rgb(223,158,15)" rx="2" ry="2" />
<text  x="36.53" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.3" y="533" width="0.2" height="15.0" fill="rgb(222,182,22)" rx="2" ry="2" />
<text  x="1171.30" y="543.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="680.5" y="1813" width="0.2" height="15.0" fill="rgb(254,27,49)" rx="2" ry="2" />
<text  x="683.52" y="1823.5" ></text>
</g>
<g >
<title>__libc_start_main (2,447 samples, 42.06%)</title><rect x="85.2" y="2037" width="496.3" height="15.0" fill="rgb(224,147,39)" rx="2" ry="2" />
<text  x="88.25" y="2047.5" >__libc_start_main</text>
</g>
<g >
<title>unmap_single_vma (1 samples, 0.02%)</title><rect x="578.3" y="1861" width="0.2" height="15.0" fill="rgb(214,131,43)" rx="2" ry="2" />
<text  x="581.30" y="1871.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::json_value::destroy (1 samples, 0.02%)</title><rect x="579.1" y="1973" width="0.2" height="15.0" fill="rgb(209,205,18)" rx="2" ry="2" />
<text  x="582.11" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.3" y="1461" width="0.2" height="15.0" fill="rgb(209,157,3)" rx="2" ry="2" />
<text  x="1171.30" y="1471.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="1701" width="1.0" height="15.0" fill="rgb(220,216,50)" rx="2" ry="2" />
<text  x="83.58" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="677" width="1.0" height="15.0" fill="rgb(241,66,34)" rx="2" ry="2" />
<text  x="83.58" y="687.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="1669" width="1.0" height="15.0" fill="rgb(218,208,4)" rx="2" ry="2" />
<text  x="83.58" y="1679.5" ></text>
</g>
<g >
<title>x2apic_send_IPI (1 samples, 0.02%)</title><rect x="925.5" y="1797" width="0.2" height="15.0" fill="rgb(241,33,43)" rx="2" ry="2" />
<text  x="928.52" y="1807.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="86.9" y="1989" width="0.2" height="15.0" fill="rgb(244,190,26)" rx="2" ry="2" />
<text  x="89.87" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.5" y="549" width="0.2" height="15.0" fill="rgb(222,99,34)" rx="2" ry="2" />
<text  x="1171.50" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="217.7" y="1317" width="0.2" height="15.0" fill="rgb(218,159,11)" rx="2" ry="2" />
<text  x="220.69" y="1327.5" ></text>
</g>
<g >
<title>nlohmann::detail::input_stream_adapter::get_character (2 samples, 0.03%)</title><rect x="87.9" y="1909" width="0.4" height="15.0" fill="rgb(232,52,46)" rx="2" ry="2" />
<text  x="90.88" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.3" y="661" width="0.2" height="15.0" fill="rgb(205,98,6)" rx="2" ry="2" />
<text  x="1171.30" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (16 samples, 0.28%)</title><rect x="140.8" y="1573" width="3.3" height="15.0" fill="rgb(226,120,34)" rx="2" ry="2" />
<text  x="143.82" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (31 samples, 0.53%)</title><rect x="102.7" y="1701" width="6.3" height="15.0" fill="rgb(236,50,20)" rx="2" ry="2" />
<text  x="105.69" y="1711.5" ></text>
</g>
<g >
<title>__dynamic_cast (4 samples, 0.07%)</title><rect x="110.0" y="1621" width="0.8" height="15.0" fill="rgb(224,17,19)" rx="2" ry="2" />
<text  x="112.99" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.5" y="693" width="0.2" height="15.0" fill="rgb(244,15,48)" rx="2" ry="2" />
<text  x="1171.50" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (35 samples, 0.60%)</title><rect x="109.4" y="1637" width="7.1" height="15.0" fill="rgb(249,187,37)" rx="2" ry="2" />
<text  x="112.38" y="1647.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::set (3 samples, 0.05%)</title><rect x="589.3" y="1909" width="0.6" height="15.0" fill="rgb(216,60,19)" rx="2" ry="2" />
<text  x="592.25" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.5" y="517" width="0.2" height="15.0" fill="rgb(213,15,48)" rx="2" ry="2" />
<text  x="1171.50" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (1 samples, 0.02%)</title><rect x="183.0" y="1669" width="0.2" height="15.0" fill="rgb(253,22,0)" rx="2" ry="2" />
<text  x="186.00" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="309" width="1.0" height="15.0" fill="rgb(246,162,36)" rx="2" ry="2" />
<text  x="83.58" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="138.2" y="1557" width="0.4" height="15.0" fill="rgb(247,7,11)" rx="2" ry="2" />
<text  x="141.18" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (4,226 samples, 72.64%)</title><rect x="41.8" y="2053" width="857.2" height="15.0" fill="rgb(236,171,4)" rx="2" ry="2" />
<text  x="44.84" y="2063.5" >[unknown]</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (35 samples, 0.60%)</title><rect x="109.4" y="1653" width="7.1" height="15.0" fill="rgb(224,151,47)" rx="2" ry="2" />
<text  x="112.38" y="1663.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare@plt (6 samples, 0.10%)</title><rect x="858.8" y="1893" width="1.2" height="15.0" fill="rgb(242,82,15)" rx="2" ry="2" />
<text  x="861.80" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="218.7" y="1205" width="0.2" height="15.0" fill="rgb(243,123,24)" rx="2" ry="2" />
<text  x="221.70" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (35 samples, 0.60%)</title><rect x="190.7" y="1749" width="7.1" height="15.0" fill="rgb(240,158,23)" rx="2" ry="2" />
<text  x="193.71" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="218.3" y="1509" width="0.6" height="15.0" fill="rgb(212,107,23)" rx="2" ry="2" />
<text  x="221.29" y="1519.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="1589" width="1.0" height="15.0" fill="rgb(225,123,28)" rx="2" ry="2" />
<text  x="83.58" y="1599.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="858.6" y="1877" width="0.2" height="15.0" fill="rgb(251,161,17)" rx="2" ry="2" />
<text  x="861.59" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 0.10%)</title><rect x="80.4" y="1973" width="1.2" height="15.0" fill="rgb(248,229,49)" rx="2" ry="2" />
<text  x="83.38" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.4" y="501" width="0.2" height="15.0" fill="rgb(253,123,45)" rx="2" ry="2" />
<text  x="141.38" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="218.5" y="1173" width="0.2" height="15.0" fill="rgb(243,69,13)" rx="2" ry="2" />
<text  x="221.50" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="218.7" y="853" width="0.2" height="15.0" fill="rgb(241,39,7)" rx="2" ry="2" />
<text  x="221.70" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (30 samples, 0.52%)</title><rect x="102.7" y="1653" width="6.1" height="15.0" fill="rgb(233,222,53)" rx="2" ry="2" />
<text  x="105.69" y="1663.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (1 samples, 0.02%)</title><rect x="443.8" y="1845" width="0.2" height="15.0" fill="rgb(254,125,10)" rx="2" ry="2" />
<text  x="446.83" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="897.5" y="2021" width="0.4" height="15.0" fill="rgb(247,4,25)" rx="2" ry="2" />
<text  x="900.54" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="245" width="1.0" height="15.0" fill="rgb(218,30,45)" rx="2" ry="2" />
<text  x="83.58" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.3" y="37" width="0.2" height="15.0" fill="rgb(233,77,2)" rx="2" ry="2" />
<text  x="1171.30" y="47.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::num_get&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="84.2" y="2021" width="0.2" height="15.0" fill="rgb(211,38,11)" rx="2" ry="2" />
<text  x="87.23" y="2031.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="548.7" y="1957" width="0.2" height="15.0" fill="rgb(214,182,2)" rx="2" ry="2" />
<text  x="551.69" y="1967.5" ></text>
</g>
<g >
<title>__dynamic_cast (12 samples, 0.21%)</title><rect x="197.8" y="1669" width="2.4" height="15.0" fill="rgb(221,79,15)" rx="2" ry="2" />
<text  x="200.81" y="1679.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::str[abi:cxx11]@plt (1 samples, 0.02%)</title><rect x="590.9" y="1909" width="0.2" height="15.0" fill="rgb(241,107,4)" rx="2" ry="2" />
<text  x="593.87" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (160 samples, 2.75%)</title><rect x="138.6" y="1877" width="32.4" height="15.0" fill="rgb(229,129,54)" rx="2" ry="2" />
<text  x="141.59" y="1887.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="218.7" y="933" width="0.2" height="15.0" fill="rgb(231,5,50)" rx="2" ry="2" />
<text  x="221.70" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.7" y="1157" width="0.2" height="15.0" fill="rgb(244,109,24)" rx="2" ry="2" />
<text  x="1171.70" y="1167.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="1829" width="1.0" height="15.0" fill="rgb(214,161,31)" rx="2" ry="2" />
<text  x="83.58" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="81.0" y="117" width="0.6" height="15.0" fill="rgb(231,8,12)" rx="2" ry="2" />
<text  x="83.99" y="127.5" ></text>
</g>
<g >
<title>Eigen::internal::generic_product_impl&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt;, Eigen::DenseShape, Eigen::DenseShape, 8&gt;::scaleAndAddTo&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt; (28 samples, 0.48%)</title><rect x="424.0" y="1941" width="5.6" height="15.0" fill="rgb(226,82,26)" rx="2" ry="2" />
<text  x="426.95" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.4" y="1109" width="0.2" height="15.0" fill="rgb(246,101,2)" rx="2" ry="2" />
<text  x="141.38" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.09%)</title><rect x="217.9" y="1765" width="1.0" height="15.0" fill="rgb(221,178,3)" rx="2" ry="2" />
<text  x="220.89" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.3" y="1861" width="0.2" height="15.0" fill="rgb(236,65,52)" rx="2" ry="2" />
<text  x="1171.30" y="1871.5" ></text>
</g>
<g >
<title>fasttext::FastText::predictLine (1 samples, 0.02%)</title><rect x="582.6" y="1957" width="0.2" height="15.0" fill="rgb(205,51,3)" rx="2" ry="2" />
<text  x="585.56" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.5" y="1973" width="0.2" height="15.0" fill="rgb(234,147,21)" rx="2" ry="2" />
<text  x="1171.50" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.3" y="437" width="0.2" height="15.0" fill="rgb(216,204,40)" rx="2" ry="2" />
<text  x="1171.30" y="447.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="86.5" y="1941" width="0.2" height="15.0" fill="rgb(239,144,42)" rx="2" ry="2" />
<text  x="89.46" y="1951.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (3 samples, 0.05%)</title><rect x="443.4" y="1877" width="0.6" height="15.0" fill="rgb(236,102,33)" rx="2" ry="2" />
<text  x="446.42" y="1887.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="680.5" y="1797" width="0.2" height="15.0" fill="rgb(213,74,45)" rx="2" ry="2" />
<text  x="683.52" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.3" y="293" width="0.2" height="15.0" fill="rgb(208,200,28)" rx="2" ry="2" />
<text  x="1171.30" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (36 samples, 0.62%)</title><rect x="109.2" y="1733" width="7.3" height="15.0" fill="rgb(206,87,31)" rx="2" ry="2" />
<text  x="112.18" y="1743.5" ></text>
</g>
<g >
<title>free_unref_page_prepare.part.72 (1 samples, 0.02%)</title><rect x="458.4" y="1749" width="0.2" height="15.0" fill="rgb(218,52,47)" rx="2" ry="2" />
<text  x="461.43" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (37 samples, 0.64%)</title><rect x="207.1" y="1765" width="7.5" height="15.0" fill="rgb(242,130,6)" rx="2" ry="2" />
<text  x="210.14" y="1775.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (4 samples, 0.07%)</title><rect x="121.1" y="1621" width="0.9" height="15.0" fill="rgb(242,218,15)" rx="2" ry="2" />
<text  x="124.14" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="1061" width="1.0" height="15.0" fill="rgb(253,100,52)" rx="2" ry="2" />
<text  x="83.58" y="1071.5" ></text>
</g>
<g >
<title>fasttext::Vector::norm (46 samples, 0.79%)</title><rect x="565.7" y="1973" width="9.4" height="15.0" fill="rgb(237,4,41)" rx="2" ry="2" />
<text  x="568.72" y="1983.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="209.6" y="1701" width="0.2" height="15.0" fill="rgb(221,229,54)" rx="2" ry="2" />
<text  x="212.57" y="1711.5" ></text>
</g>
<g >
<title>pfn_pte (1 samples, 0.02%)</title><rect x="80.0" y="1957" width="0.2" height="15.0" fill="rgb(215,67,17)" rx="2" ry="2" />
<text  x="82.97" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.7" y="117" width="0.2" height="15.0" fill="rgb(218,97,48)" rx="2" ry="2" />
<text  x="1171.70" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (3 samples, 0.05%)</title><rect x="190.1" y="1749" width="0.6" height="15.0" fill="rgb(230,124,35)" rx="2" ry="2" />
<text  x="193.10" y="1759.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="79.8" y="1957" width="0.2" height="15.0" fill="rgb(214,112,44)" rx="2" ry="2" />
<text  x="82.77" y="1967.5" ></text>
</g>
<g >
<title>GetHost (177 samples, 3.04%)</title><rect x="102.7" y="1973" width="35.9" height="15.0" fill="rgb(221,198,53)" rx="2" ry="2" />
<text  x="105.69" y="1983.5" >Get..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.7" y="1333" width="0.2" height="15.0" fill="rgb(233,214,29)" rx="2" ry="2" />
<text  x="1171.70" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.7" y="453" width="0.2" height="15.0" fill="rgb(222,182,30)" rx="2" ry="2" />
<text  x="1171.70" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (1 samples, 0.02%)</title><rect x="137.6" y="1829" width="0.2" height="15.0" fill="rgb(248,127,40)" rx="2" ry="2" />
<text  x="140.57" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="171.8" y="1589" width="0.3" height="15.0" fill="rgb(241,219,5)" rx="2" ry="2" />
<text  x="174.85" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (144 samples, 2.48%)</title><rect x="102.7" y="1797" width="29.2" height="15.0" fill="rgb(253,19,46)" rx="2" ry="2" />
<text  x="105.69" y="1807.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.3" y="1285" width="0.2" height="15.0" fill="rgb(250,65,43)" rx="2" ry="2" />
<text  x="1171.30" y="1295.5" ></text>
</g>
<g >
<title>main (2,447 samples, 42.06%)</title><rect x="85.2" y="2021" width="496.3" height="15.0" fill="rgb(208,119,34)" rx="2" ry="2" />
<text  x="88.25" y="2031.5" >main</text>
</g>
<g >
<title>cfree (1 samples, 0.02%)</title><rect x="140.4" y="1573" width="0.2" height="15.0" fill="rgb(206,49,54)" rx="2" ry="2" />
<text  x="143.41" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.3" y="1269" width="0.2" height="15.0" fill="rgb(254,144,0)" rx="2" ry="2" />
<text  x="1171.30" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.3" y="1077" width="0.2" height="15.0" fill="rgb(253,22,28)" rx="2" ry="2" />
<text  x="1171.30" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.5" y="677" width="0.2" height="15.0" fill="rgb(225,118,10)" rx="2" ry="2" />
<text  x="1171.50" y="687.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id@plt (1 samples, 0.02%)</title><rect x="143.7" y="1557" width="0.2" height="15.0" fill="rgb(229,215,53)" rx="2" ry="2" />
<text  x="146.66" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="1509" width="1.0" height="15.0" fill="rgb(240,120,19)" rx="2" ry="2" />
<text  x="83.58" y="1519.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1047.4" y="2037" width="0.2" height="15.0" fill="rgb(249,135,45)" rx="2" ry="2" />
<text  x="1050.42" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.2" y="1125" width="0.2" height="15.0" fill="rgb(239,69,32)" rx="2" ry="2" />
<text  x="141.18" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.4" y="661" width="0.2" height="15.0" fill="rgb(249,70,41)" rx="2" ry="2" />
<text  x="141.38" y="671.5" ></text>
</g>
<g >
<title>__strxfrm_l (41 samples, 0.70%)</title><rect x="1160.0" y="2037" width="8.3" height="15.0" fill="rgb(208,35,40)" rx="2" ry="2" />
<text  x="1162.98" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (30 samples, 0.52%)</title><rect x="138.8" y="1621" width="6.1" height="15.0" fill="rgb(205,223,24)" rx="2" ry="2" />
<text  x="141.79" y="1631.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (10 samples, 0.17%)</title><rect x="1134.8" y="2053" width="2.1" height="15.0" fill="rgb(236,131,8)" rx="2" ry="2" />
<text  x="1137.83" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.4" y="1045" width="0.2" height="15.0" fill="rgb(249,68,33)" rx="2" ry="2" />
<text  x="141.38" y="1055.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (1 samples, 0.02%)</title><rect x="115.1" y="1621" width="0.2" height="15.0" fill="rgb(240,135,43)" rx="2" ry="2" />
<text  x="118.06" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.3" y="1141" width="0.2" height="15.0" fill="rgb(247,220,54)" rx="2" ry="2" />
<text  x="1171.30" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.7" y="1301" width="0.2" height="15.0" fill="rgb(239,90,20)" rx="2" ry="2" />
<text  x="1171.70" y="1311.5" ></text>
</g>
<g >
<title>smp_call_function_many (1 samples, 0.02%)</title><rect x="925.5" y="1861" width="0.2" height="15.0" fill="rgb(244,72,4)" rx="2" ry="2" />
<text  x="928.52" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.7" y="805" width="0.2" height="15.0" fill="rgb(246,207,39)" rx="2" ry="2" />
<text  x="1171.70" y="815.5" ></text>
</g>
<g >
<title>Eigen::internal::gebp_kernel&lt;float, float, long, Eigen::internal::blas_data_mapper&lt;float, long, 0, 0, 1&gt;, 48, 4, false, false&gt;::operator (28 samples, 0.48%)</title><rect x="424.0" y="1909" width="5.6" height="15.0" fill="rgb(250,203,31)" rx="2" ry="2" />
<text  x="426.95" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.5" y="1157" width="0.2" height="15.0" fill="rgb(240,205,35)" rx="2" ry="2" />
<text  x="1171.50" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (68 samples, 1.17%)</title><rect x="102.7" y="1765" width="13.8" height="15.0" fill="rgb(249,22,20)" rx="2" ry="2" />
<text  x="105.69" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.5" y="1733" width="0.2" height="15.0" fill="rgb(214,27,42)" rx="2" ry="2" />
<text  x="1171.50" y="1743.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (23 samples, 0.40%)</title><rect x="75.5" y="2037" width="4.7" height="15.0" fill="rgb(211,53,29)" rx="2" ry="2" />
<text  x="78.51" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.4" y="1029" width="0.2" height="15.0" fill="rgb(210,103,16)" rx="2" ry="2" />
<text  x="141.38" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.4" y="293" width="0.2" height="15.0" fill="rgb(254,77,19)" rx="2" ry="2" />
<text  x="141.38" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="138.2" y="1669" width="0.4" height="15.0" fill="rgb(212,215,10)" rx="2" ry="2" />
<text  x="141.18" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (2 samples, 0.03%)</title><rect x="171.0" y="1861" width="0.4" height="15.0" fill="rgb(247,17,25)" rx="2" ry="2" />
<text  x="174.04" y="1871.5" ></text>
</g>
<g >
<title>__libc_read (4 samples, 0.07%)</title><rect x="84.4" y="2037" width="0.8" height="15.0" fill="rgb(223,23,10)" rx="2" ry="2" />
<text  x="87.43" y="2047.5" ></text>
</g>
<g >
<title>clear_page_erms (12 samples, 0.21%)</title><rect x="439.8" y="1845" width="2.4" height="15.0" fill="rgb(221,84,37)" rx="2" ry="2" />
<text  x="442.77" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (15 samples, 0.26%)</title><rect x="890.4" y="2005" width="3.1" height="15.0" fill="rgb(206,202,26)" rx="2" ry="2" />
<text  x="893.44" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="1653" width="1.0" height="15.0" fill="rgb(244,70,20)" rx="2" ry="2" />
<text  x="83.58" y="1663.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="872.4" y="1989" width="0.2" height="15.0" fill="rgb(205,22,25)" rx="2" ry="2" />
<text  x="875.39" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.7" y="245" width="0.2" height="15.0" fill="rgb(218,38,12)" rx="2" ry="2" />
<text  x="1171.70" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.3" y="549" width="0.2" height="15.0" fill="rgb(238,24,22)" rx="2" ry="2" />
<text  x="1171.30" y="559.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (13 samples, 0.22%)</title><rect x="455.2" y="1973" width="2.6" height="15.0" fill="rgb(248,149,42)" rx="2" ry="2" />
<text  x="458.19" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="325" width="1.0" height="15.0" fill="rgb(234,225,47)" rx="2" ry="2" />
<text  x="83.58" y="335.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (2 samples, 0.03%)</title><rect x="711.8" y="1749" width="0.4" height="15.0" fill="rgb(238,102,3)" rx="2" ry="2" />
<text  x="714.75" y="1759.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::json_value::destroy (4 samples, 0.07%)</title><rect x="580.1" y="2005" width="0.8" height="15.0" fill="rgb(246,137,44)" rx="2" ry="2" />
<text  x="583.12" y="2015.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (2 samples, 0.03%)</title><rect x="107.4" y="1573" width="0.4" height="15.0" fill="rgb(232,38,26)" rx="2" ry="2" />
<text  x="110.35" y="1583.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (1 samples, 0.02%)</title><rect x="712.2" y="1765" width="0.2" height="15.0" fill="rgb(231,173,0)" rx="2" ry="2" />
<text  x="715.16" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="218.5" y="741" width="0.2" height="15.0" fill="rgb(239,120,42)" rx="2" ry="2" />
<text  x="221.50" y="751.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (3 samples, 0.05%)</title><rect x="213.4" y="1701" width="0.6" height="15.0" fill="rgb(238,172,7)" rx="2" ry="2" />
<text  x="216.43" y="1711.5" ></text>
</g>
<g >
<title>std::__stable_sort_adaptive&lt;__gnu_cxx::__normal_iterator&lt;TDocument*, std::vector&lt;TDocument, std::allocator&lt;TDocument&gt; &gt; &gt;, TDocument*, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;main::$_0&gt; &gt; (2 samples, 0.03%)</title><rect x="581.1" y="2005" width="0.4" height="15.0" fill="rgb(247,53,2)" rx="2" ry="2" />
<text  x="584.14" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="138.2" y="1717" width="0.4" height="15.0" fill="rgb(241,220,19)" rx="2" ry="2" />
<text  x="141.18" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.4" y="853" width="0.2" height="15.0" fill="rgb(219,78,41)" rx="2" ry="2" />
<text  x="141.38" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="217.5" y="1717" width="0.4" height="15.0" fill="rgb(216,74,13)" rx="2" ry="2" />
<text  x="220.48" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.19%)</title><rect x="216.9" y="1813" width="2.2" height="15.0" fill="rgb(248,150,31)" rx="2" ry="2" />
<text  x="219.88" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_Compiler (174 samples, 2.99%)</title><rect x="102.7" y="1941" width="35.3" height="15.0" fill="rgb(254,97,30)" rx="2" ry="2" />
<text  x="105.69" y="1951.5" >st..</text>
</g>
<g >
<title>[unknown] (6 samples, 0.10%)</title><rect x="80.4" y="1925" width="1.2" height="15.0" fill="rgb(227,33,35)" rx="2" ry="2" />
<text  x="83.38" y="1935.5" ></text>
</g>
<g >
<title>native_flush_tlb_others (1 samples, 0.02%)</title><rect x="925.5" y="1877" width="0.2" height="15.0" fill="rgb(236,15,26)" rx="2" ry="2" />
<text  x="928.52" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.5" y="917" width="0.2" height="15.0" fill="rgb(211,88,12)" rx="2" ry="2" />
<text  x="1171.50" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (159 samples, 2.73%)</title><rect x="138.6" y="1845" width="32.2" height="15.0" fill="rgb(210,53,18)" rx="2" ry="2" />
<text  x="141.59" y="1855.5" >st..</text>
</g>
<g >
<title>do_syscall_64 (3 samples, 0.05%)</title><rect x="458.0" y="1941" width="0.6" height="15.0" fill="rgb(209,71,20)" rx="2" ry="2" />
<text  x="461.03" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (35 samples, 0.60%)</title><rect x="890.4" y="2021" width="7.1" height="15.0" fill="rgb(240,197,38)" rx="2" ry="2" />
<text  x="893.44" y="2031.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::set@plt (2 samples, 0.03%)</title><rect x="589.9" y="1909" width="0.4" height="15.0" fill="rgb(213,206,34)" rx="2" ry="2" />
<text  x="592.86" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.7" y="693" width="0.2" height="15.0" fill="rgb(227,170,47)" rx="2" ry="2" />
<text  x="1171.70" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.2" y="629" width="0.2" height="15.0" fill="rgb(216,161,11)" rx="2" ry="2" />
<text  x="141.18" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Scanner&lt;char&gt;::_M_scan_normal (1 samples, 0.02%)</title><rect x="157.7" y="1733" width="0.2" height="15.0" fill="rgb(240,51,11)" rx="2" ry="2" />
<text  x="160.65" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.5" y="405" width="0.2" height="15.0" fill="rgb(233,206,7)" rx="2" ry="2" />
<text  x="1171.50" y="415.5" ></text>
</g>
<g >
<title>onmt::add_final_token&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (10 samples, 0.17%)</title><rect x="593.1" y="1893" width="2.0" height="15.0" fill="rgb(210,91,46)" rx="2" ry="2" />
<text  x="596.10" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="218.7" y="805" width="0.2" height="15.0" fill="rgb(246,133,53)" rx="2" ry="2" />
<text  x="221.70" y="815.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="1221" width="1.0" height="15.0" fill="rgb(241,199,42)" rx="2" ry="2" />
<text  x="83.58" y="1231.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="1429" width="1.0" height="15.0" fill="rgb(233,100,49)" rx="2" ry="2" />
<text  x="83.58" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (1 samples, 0.02%)</title><rect x="170.6" y="1765" width="0.2" height="15.0" fill="rgb(231,77,15)" rx="2" ry="2" />
<text  x="173.63" y="1775.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="871.0" y="2021" width="0.2" height="15.0" fill="rgb(210,199,41)" rx="2" ry="2" />
<text  x="873.97" y="2031.5" ></text>
</g>
<g >
<title>do_group_exit (1 samples, 0.02%)</title><rect x="955.1" y="2005" width="0.2" height="15.0" fill="rgb(213,47,36)" rx="2" ry="2" />
<text  x="958.14" y="2015.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (1 samples, 0.02%)</title><rect x="578.3" y="1813" width="0.2" height="15.0" fill="rgb(234,97,5)" rx="2" ry="2" />
<text  x="581.30" y="1823.5" ></text>
</g>
<g >
<title>__do_munmap (1 samples, 0.02%)</title><rect x="925.5" y="1973" width="0.2" height="15.0" fill="rgb(239,31,46)" rx="2" ry="2" />
<text  x="928.52" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="218.7" y="1269" width="0.2" height="15.0" fill="rgb(253,96,29)" rx="2" ry="2" />
<text  x="221.70" y="1279.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="455.0" y="1957" width="0.2" height="15.0" fill="rgb(236,114,15)" rx="2" ry="2" />
<text  x="457.98" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="217.7" y="1573" width="0.2" height="15.0" fill="rgb(210,159,24)" rx="2" ry="2" />
<text  x="220.69" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="1637" width="1.0" height="15.0" fill="rgb(223,159,18)" rx="2" ry="2" />
<text  x="83.58" y="1647.5" ></text>
</g>
<g >
<title>handle_mm_fault (21 samples, 0.36%)</title><rect x="433.5" y="1893" width="4.2" height="15.0" fill="rgb(223,42,9)" rx="2" ry="2" />
<text  x="436.49" y="1903.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::getLine (109 samples, 1.87%)</title><rect x="991.8" y="2053" width="22.2" height="15.0" fill="rgb(208,19,41)" rx="2" ry="2" />
<text  x="994.85" y="2063.5" >f..</text>
</g>
<g >
<title>handle_mm_fault (8 samples, 0.14%)</title><rect x="710.9" y="1813" width="1.7" height="15.0" fill="rgb(222,70,16)" rx="2" ry="2" />
<text  x="713.94" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_quantifier (1 samples, 0.02%)</title><rect x="182.8" y="1717" width="0.2" height="15.0" fill="rgb(253,103,18)" rx="2" ry="2" />
<text  x="185.80" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.3" y="1669" width="0.2" height="15.0" fill="rgb(243,64,8)" rx="2" ry="2" />
<text  x="1171.30" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="501" width="1.0" height="15.0" fill="rgb(209,142,37)" rx="2" ry="2" />
<text  x="83.58" y="511.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="517" width="1.0" height="15.0" fill="rgb(208,183,15)" rx="2" ry="2" />
<text  x="83.58" y="527.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1047.2" y="2037" width="0.2" height="15.0" fill="rgb(228,95,54)" rx="2" ry="2" />
<text  x="1050.22" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.7" y="149" width="0.2" height="15.0" fill="rgb(209,78,20)" rx="2" ry="2" />
<text  x="1171.70" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (206 samples, 3.54%)</title><rect x="173.7" y="1845" width="41.8" height="15.0" fill="rgb(227,112,38)" rx="2" ry="2" />
<text  x="176.67" y="1855.5" >std..</text>
</g>
<g >
<title>free@plt (4 samples, 0.07%)</title><rect x="1101.4" y="2053" width="0.8" height="15.0" fill="rgb(214,200,45)" rx="2" ry="2" />
<text  x="1104.37" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (24 samples, 0.41%)</title><rect x="152.8" y="1685" width="4.9" height="15.0" fill="rgb(207,147,21)" rx="2" ry="2" />
<text  x="155.78" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 0.10%)</title><rect x="80.4" y="1909" width="1.2" height="15.0" fill="rgb(243,132,0)" rx="2" ry="2" />
<text  x="83.38" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (35 samples, 0.60%)</title><rect x="183.0" y="1717" width="7.1" height="15.0" fill="rgb(220,76,17)" rx="2" ry="2" />
<text  x="186.00" y="1727.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve@plt (1 samples, 0.02%)</title><rect x="860.4" y="1893" width="0.2" height="15.0" fill="rgb(206,133,26)" rx="2" ry="2" />
<text  x="863.42" y="1903.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.05%)</title><rect x="458.0" y="1957" width="0.6" height="15.0" fill="rgb(225,220,43)" rx="2" ry="2" />
<text  x="461.03" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="171.8" y="1509" width="0.3" height="15.0" fill="rgb(218,106,2)" rx="2" ry="2" />
<text  x="174.85" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.5" y="1701" width="0.2" height="15.0" fill="rgb(236,100,42)" rx="2" ry="2" />
<text  x="1171.50" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.7" y="1269" width="0.2" height="15.0" fill="rgb(210,215,15)" rx="2" ry="2" />
<text  x="1171.70" y="1279.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="821" width="1.0" height="15.0" fill="rgb(213,229,48)" rx="2" ry="2" />
<text  x="83.58" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="218.5" y="981" width="0.2" height="15.0" fill="rgb(236,207,3)" rx="2" ry="2" />
<text  x="221.50" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.7" y="1813" width="0.2" height="15.0" fill="rgb(235,44,29)" rx="2" ry="2" />
<text  x="1171.70" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="217.7" y="1349" width="0.2" height="15.0" fill="rgb(220,8,23)" rx="2" ry="2" />
<text  x="220.69" y="1359.5" ></text>
</g>
<g >
<title>unmap_page_range (1 samples, 0.02%)</title><rect x="578.3" y="1845" width="0.2" height="15.0" fill="rgb(230,101,19)" rx="2" ry="2" />
<text  x="581.30" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="217.7" y="1413" width="0.2" height="15.0" fill="rgb(249,186,12)" rx="2" ry="2" />
<text  x="220.69" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (44 samples, 0.76%)</title><rect x="173.9" y="1701" width="8.9" height="15.0" fill="rgb(246,6,50)" rx="2" ry="2" />
<text  x="176.88" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="81.0" y="69" width="0.6" height="15.0" fill="rgb(249,8,19)" rx="2" ry="2" />
<text  x="83.99" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.2" y="677" width="0.2" height="15.0" fill="rgb(207,205,20)" rx="2" ry="2" />
<text  x="141.18" y="687.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="575.5" y="1973" width="0.2" height="15.0" fill="rgb(245,23,53)" rx="2" ry="2" />
<text  x="578.46" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.7" y="1109" width="0.2" height="15.0" fill="rgb(233,131,21)" rx="2" ry="2" />
<text  x="1171.70" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.2" y="693" width="0.2" height="15.0" fill="rgb(236,138,42)" rx="2" ry="2" />
<text  x="141.18" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.5" y="341" width="0.2" height="15.0" fill="rgb(214,52,7)" rx="2" ry="2" />
<text  x="1171.50" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.7" y="1493" width="0.2" height="15.0" fill="rgb(234,180,19)" rx="2" ry="2" />
<text  x="1171.70" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.7" y="1909" width="0.2" height="15.0" fill="rgb(232,85,8)" rx="2" ry="2" />
<text  x="1171.70" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.5" y="725" width="0.2" height="15.0" fill="rgb(225,110,9)" rx="2" ry="2" />
<text  x="1171.50" y="735.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.02%)</title><rect x="871.0" y="1973" width="0.2" height="15.0" fill="rgb(213,145,54)" rx="2" ry="2" />
<text  x="873.97" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.3" y="709" width="0.2" height="15.0" fill="rgb(216,89,16)" rx="2" ry="2" />
<text  x="1171.30" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.2" y="997" width="0.2" height="15.0" fill="rgb(250,178,11)" rx="2" ry="2" />
<text  x="141.18" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (1 samples, 0.02%)</title><rect x="131.9" y="1797" width="0.2" height="15.0" fill="rgb(239,61,20)" rx="2" ry="2" />
<text  x="134.89" y="1807.5" ></text>
</g>
<g >
<title>TFastTextEmbedder::GetSentenceEmbedding (52 samples, 0.89%)</title><rect x="444.6" y="1973" width="10.6" height="15.0" fill="rgb(242,139,52)" rx="2" ry="2" />
<text  x="447.64" y="1983.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1055.9" y="2021" width="0.2" height="15.0" fill="rgb(251,172,18)" rx="2" ry="2" />
<text  x="1058.94" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="218.3" y="1573" width="0.6" height="15.0" fill="rgb(213,0,29)" rx="2" ry="2" />
<text  x="221.29" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (32 samples, 0.55%)</title><rect x="102.7" y="1733" width="6.5" height="15.0" fill="rgb(212,57,43)" rx="2" ry="2" />
<text  x="105.69" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="138.2" y="1797" width="0.4" height="15.0" fill="rgb(243,12,18)" rx="2" ry="2" />
<text  x="141.18" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.3" y="1029" width="0.2" height="15.0" fill="rgb(218,32,48)" rx="2" ry="2" />
<text  x="1171.30" y="1039.5" ></text>
</g>
<g >
<title>std::locale::locale (4 samples, 0.07%)</title><rect x="341.0" y="1989" width="0.8" height="15.0" fill="rgb(248,229,13)" rx="2" ry="2" />
<text  x="344.00" y="1999.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (2 samples, 0.03%)</title><rect x="35.1" y="1957" width="0.5" height="15.0" fill="rgb(205,174,3)" rx="2" ry="2" />
<text  x="38.15" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.4" y="437" width="0.2" height="15.0" fill="rgb(209,172,1)" rx="2" ry="2" />
<text  x="141.38" y="447.5" ></text>
</g>
<g >
<title>clear_page_erms (12 samples, 0.21%)</title><rect x="433.9" y="1829" width="2.4" height="15.0" fill="rgb(231,64,5)" rx="2" ry="2" />
<text  x="436.89" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.4" y="965" width="0.2" height="15.0" fill="rgb(242,34,44)" rx="2" ry="2" />
<text  x="141.38" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.4" y="1205" width="0.2" height="15.0" fill="rgb(218,155,7)" rx="2" ry="2" />
<text  x="141.38" y="1215.5" ></text>
</g>
<g >
<title>std::ios_base::~ios_base (2 samples, 0.03%)</title><rect x="897.5" y="2037" width="0.4" height="15.0" fill="rgb(207,137,11)" rx="2" ry="2" />
<text  x="900.54" y="2047.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (1 samples, 0.02%)</title><rect x="81.4" y="37" width="0.2" height="15.0" fill="rgb(247,87,34)" rx="2" ry="2" />
<text  x="84.39" y="47.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (30 samples, 0.52%)</title><rect x="157.9" y="1717" width="6.0" height="15.0" fill="rgb(207,191,18)" rx="2" ry="2" />
<text  x="160.85" y="1727.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="1047.2" y="1973" width="0.2" height="15.0" fill="rgb(233,201,54)" rx="2" ry="2" />
<text  x="1050.22" y="1983.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::basic_regex&lt;char const*&gt; (212 samples, 3.64%)</title><rect x="173.5" y="1957" width="43.0" height="15.0" fill="rgb(244,183,10)" rx="2" ry="2" />
<text  x="176.47" y="1967.5" >std:..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.3" y="1941" width="0.2" height="15.0" fill="rgb(249,187,22)" rx="2" ry="2" />
<text  x="1171.30" y="1951.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="213.0" y="1685" width="0.2" height="15.0" fill="rgb(227,172,15)" rx="2" ry="2" />
<text  x="216.02" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.3" y="2005" width="0.2" height="15.0" fill="rgb(245,165,4)" rx="2" ry="2" />
<text  x="1171.30" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="1317" width="1.0" height="15.0" fill="rgb(231,221,36)" rx="2" ry="2" />
<text  x="83.58" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.7" y="533" width="0.2" height="15.0" fill="rgb(208,26,33)" rx="2" ry="2" />
<text  x="1171.70" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.7" y="181" width="0.2" height="15.0" fill="rgb(249,194,34)" rx="2" ry="2" />
<text  x="1171.70" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="218.5" y="997" width="0.2" height="15.0" fill="rgb(218,107,45)" rx="2" ry="2" />
<text  x="221.50" y="1007.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="548.7" y="1909" width="0.2" height="15.0" fill="rgb(226,158,33)" rx="2" ry="2" />
<text  x="551.69" y="1919.5" ></text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (1 samples, 0.02%)</title><rect x="443.2" y="1877" width="0.2" height="15.0" fill="rgb(211,108,43)" rx="2" ry="2" />
<text  x="446.22" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="217.7" y="1253" width="0.2" height="15.0" fill="rgb(225,109,54)" rx="2" ry="2" />
<text  x="220.69" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (2 samples, 0.03%)</title><rect x="215.5" y="1845" width="0.4" height="15.0" fill="rgb(221,219,19)" rx="2" ry="2" />
<text  x="218.46" y="1855.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (3 samples, 0.05%)</title><rect x="131.3" y="1669" width="0.6" height="15.0" fill="rgb(209,63,21)" rx="2" ry="2" />
<text  x="134.29" y="1679.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;TThreadPool::TThreadPool (14 samples, 0.24%)</title><rect x="39.0" y="2037" width="2.8" height="15.0" fill="rgb(217,184,43)" rx="2" ry="2" />
<text  x="42.00" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.7" y="933" width="0.2" height="15.0" fill="rgb(216,212,10)" rx="2" ry="2" />
<text  x="1171.70" y="943.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (1 samples, 0.02%)</title><rect x="162.5" y="1653" width="0.2" height="15.0" fill="rgb(245,153,3)" rx="2" ry="2" />
<text  x="165.52" y="1663.5" ></text>
</g>
<g >
<title>alloc_pages_vma (14 samples, 0.24%)</title><rect x="433.9" y="1861" width="2.8" height="15.0" fill="rgb(230,207,6)" rx="2" ry="2" />
<text  x="436.89" y="1871.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="879.3" y="1957" width="0.2" height="15.0" fill="rgb(231,168,27)" rx="2" ry="2" />
<text  x="882.28" y="1967.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (71 samples, 1.22%)</title><rect x="901.8" y="2053" width="14.4" height="15.0" fill="rgb(253,33,47)" rx="2" ry="2" />
<text  x="904.79" y="2063.5" ></text>
</g>
<g >
<title>release_pages (1 samples, 0.02%)</title><rect x="712.0" y="1733" width="0.2" height="15.0" fill="rgb(248,97,17)" rx="2" ry="2" />
<text  x="714.96" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.7" y="821" width="0.2" height="15.0" fill="rgb(250,213,27)" rx="2" ry="2" />
<text  x="1171.70" y="831.5" ></text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.02%)</title><rect x="680.5" y="1781" width="0.2" height="15.0" fill="rgb(210,211,28)" rx="2" ry="2" />
<text  x="683.52" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.2" y="965" width="0.2" height="15.0" fill="rgb(228,79,41)" rx="2" ry="2" />
<text  x="141.18" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.5" y="37" width="0.2" height="15.0" fill="rgb(225,94,39)" rx="2" ry="2" />
<text  x="1171.50" y="47.5" ></text>
</g>
<g >
<title>handle_mm_fault (10 samples, 0.17%)</title><rect x="33.5" y="1989" width="2.1" height="15.0" fill="rgb(235,24,54)" rx="2" ry="2" />
<text  x="36.53" y="1999.5" ></text>
</g>
<g >
<title>clear_page_erms (3 samples, 0.05%)</title><rect x="710.9" y="1749" width="0.7" height="15.0" fill="rgb(252,84,2)" rx="2" ry="2" />
<text  x="713.94" y="1759.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (1 samples, 0.02%)</title><rect x="135.7" y="1685" width="0.3" height="15.0" fill="rgb(248,135,2)" rx="2" ry="2" />
<text  x="138.75" y="1695.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append@plt (1 samples, 0.02%)</title><rect x="847.8" y="1893" width="0.2" height="15.0" fill="rgb(228,192,37)" rx="2" ry="2" />
<text  x="850.84" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.4" y="1269" width="0.2" height="15.0" fill="rgb(212,18,35)" rx="2" ry="2" />
<text  x="141.38" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.5" y="1877" width="0.2" height="15.0" fill="rgb(244,143,39)" rx="2" ry="2" />
<text  x="1171.50" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Scanner&lt;char&gt;::_M_scan_in_bracket (1 samples, 0.02%)</title><rect x="189.9" y="1605" width="0.2" height="15.0" fill="rgb(212,3,2)" rx="2" ry="2" />
<text  x="192.90" y="1615.5" ></text>
</g>
<g >
<title>unmap_region (2 samples, 0.03%)</title><rect x="578.1" y="1893" width="0.4" height="15.0" fill="rgb(248,176,12)" rx="2" ry="2" />
<text  x="581.10" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.4" y="373" width="0.2" height="15.0" fill="rgb(216,27,43)" rx="2" ry="2" />
<text  x="141.38" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;TDocument, std::allocator&lt;TDocument&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;TDocument, std::allocator&lt;TDocument&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;TDocument, std::allocator&lt;TDocument&gt; &gt; &gt; &gt; &gt;::_M_erase (1 samples, 0.02%)</title><rect x="580.9" y="2005" width="0.2" height="15.0" fill="rgb(245,93,26)" rx="2" ry="2" />
<text  x="583.94" y="2015.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (2 samples, 0.03%)</title><rect x="830.8" y="1845" width="0.4" height="15.0" fill="rgb(237,150,39)" rx="2" ry="2" />
<text  x="833.81" y="1855.5" ></text>
</g>
<g >
<title>std::locale::~locale (2 samples, 0.03%)</title><rect x="190.3" y="1717" width="0.4" height="15.0" fill="rgb(207,24,17)" rx="2" ry="2" />
<text  x="193.31" y="1727.5" ></text>
</g>
<g >
<title>do_page_fault (10 samples, 0.17%)</title><rect x="710.5" y="1845" width="2.1" height="15.0" fill="rgb(208,217,12)" rx="2" ry="2" />
<text  x="713.54" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.3" y="1509" width="0.2" height="15.0" fill="rgb(251,157,41)" rx="2" ry="2" />
<text  x="1171.30" y="1519.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::getId (1 samples, 0.02%)</title><rect x="548.9" y="1973" width="0.2" height="15.0" fill="rgb(248,21,4)" rx="2" ry="2" />
<text  x="551.89" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="81.0" y="85" width="0.6" height="15.0" fill="rgb(243,19,34)" rx="2" ry="2" />
<text  x="83.99" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.3" y="1333" width="0.2" height="15.0" fill="rgb(253,61,49)" rx="2" ry="2" />
<text  x="1171.30" y="1343.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::set (1 samples, 0.02%)</title><rect x="616.2" y="1893" width="0.2" height="15.0" fill="rgb(253,104,5)" rx="2" ry="2" />
<text  x="619.23" y="1903.5" ></text>
</g>
<g >
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="102.3" y="1829" width="0.2" height="15.0" fill="rgb(239,37,9)" rx="2" ry="2" />
<text  x="105.28" y="1839.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="858.6" y="1845" width="0.2" height="15.0" fill="rgb(219,93,5)" rx="2" ry="2" />
<text  x="861.59" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.19%)</title><rect x="216.9" y="1797" width="2.2" height="15.0" fill="rgb(249,162,53)" rx="2" ry="2" />
<text  x="219.88" y="1807.5" ></text>
</g>
<g >
<title>cfree (1 samples, 0.02%)</title><rect x="583.6" y="1957" width="0.2" height="15.0" fill="rgb(225,152,5)" rx="2" ry="2" />
<text  x="586.57" y="1967.5" ></text>
</g>
<g >
<title>GetHost (226 samples, 3.88%)</title><rect x="173.3" y="1973" width="45.8" height="15.0" fill="rgb(226,51,4)" rx="2" ry="2" />
<text  x="176.27" y="1983.5" >GetH..</text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::future&lt;std::result_of&lt;Annotate (1 samples, 0.02%)</title><rect x="39.2" y="2021" width="0.2" height="15.0" fill="rgb(223,153,23)" rx="2" ry="2" />
<text  x="42.21" y="2031.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="165.2" y="1685" width="0.2" height="15.0" fill="rgb(234,174,19)" rx="2" ry="2" />
<text  x="168.16" y="1695.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::computeSubwords (84 samples, 1.44%)</title><rect x="957.2" y="2053" width="17.0" height="15.0" fill="rgb(223,167,53)" rx="2" ry="2" />
<text  x="960.16" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="138.2" y="1637" width="0.4" height="15.0" fill="rgb(218,149,25)" rx="2" ry="2" />
<text  x="141.18" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="81.0" y="101" width="0.6" height="15.0" fill="rgb(229,201,31)" rx="2" ry="2" />
<text  x="83.99" y="111.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.7" y="1445" width="0.2" height="15.0" fill="rgb(243,16,6)" rx="2" ry="2" />
<text  x="1171.70" y="1455.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (2 samples, 0.03%)</title><rect x="102.1" y="1877" width="0.4" height="15.0" fill="rgb(217,44,11)" rx="2" ry="2" />
<text  x="105.08" y="1887.5" ></text>
</g>
<g >
<title>virtual thunk to std::__cxx11::basic_istringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_istringstream (3 samples, 0.05%)</title><rect x="898.3" y="2037" width="0.7" height="15.0" fill="rgb(214,151,50)" rx="2" ry="2" />
<text  x="901.35" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.5" y="1253" width="0.2" height="15.0" fill="rgb(225,109,38)" rx="2" ry="2" />
<text  x="1171.50" y="1263.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="133.5" y="1701" width="0.2" height="15.0" fill="rgb(206,51,50)" rx="2" ry="2" />
<text  x="136.52" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.5" y="533" width="0.2" height="15.0" fill="rgb(214,68,20)" rx="2" ry="2" />
<text  x="1171.50" y="543.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (5 samples, 0.09%)</title><rect x="162.7" y="1653" width="1.0" height="15.0" fill="rgb(231,68,54)" rx="2" ry="2" />
<text  x="165.72" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.3" y="581" width="0.2" height="15.0" fill="rgb(234,95,48)" rx="2" ry="2" />
<text  x="1171.30" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.5" y="1333" width="0.2" height="15.0" fill="rgb(207,16,26)" rx="2" ry="2" />
<text  x="1171.50" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.4" y="1125" width="0.2" height="15.0" fill="rgb(225,152,23)" rx="2" ry="2" />
<text  x="141.38" y="1135.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (42 samples, 0.72%)</title><rect x="751.3" y="1877" width="8.5" height="15.0" fill="rgb(244,5,13)" rx="2" ry="2" />
<text  x="754.30" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.5" y="1061" width="0.2" height="15.0" fill="rgb(217,228,15)" rx="2" ry="2" />
<text  x="1171.50" y="1071.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::computeSubwords (3 samples, 0.05%)</title><rect x="868.5" y="2037" width="0.6" height="15.0" fill="rgb(213,219,4)" rx="2" ry="2" />
<text  x="871.53" y="2047.5" ></text>
</g>
<g >
<title>fasttext::QuantMatrix::addRowToVector (15 samples, 0.26%)</title><rect x="1097.9" y="2053" width="3.1" height="15.0" fill="rgb(206,209,3)" rx="2" ry="2" />
<text  x="1100.92" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (35 samples, 0.60%)</title><rect x="183.0" y="1701" width="7.1" height="15.0" fill="rgb(215,214,16)" rx="2" ry="2" />
<text  x="186.00" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_repeat (1 samples, 0.02%)</title><rect x="182.8" y="1701" width="0.2" height="15.0" fill="rgb(217,4,2)" rx="2" ry="2" />
<text  x="185.80" y="1711.5" ></text>
</g>
<g >
<title>TDocument::FromJson (2 samples, 0.03%)</title><rect x="86.1" y="1973" width="0.4" height="15.0" fill="rgb(243,186,52)" rx="2" ry="2" />
<text  x="89.06" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (12 samples, 0.21%)</title><rect x="216.7" y="1861" width="2.4" height="15.0" fill="rgb(242,51,4)" rx="2" ry="2" />
<text  x="219.67" y="1871.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::pushHash (163 samples, 2.80%)</title><rect x="1014.6" y="2053" width="33.0" height="15.0" fill="rgb(220,39,10)" rx="2" ry="2" />
<text  x="1017.56" y="2063.5" >fa..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.3" y="693" width="0.2" height="15.0" fill="rgb(214,150,7)" rx="2" ry="2" />
<text  x="1171.30" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="138.2" y="1477" width="0.4" height="15.0" fill="rgb(212,220,40)" rx="2" ry="2" />
<text  x="141.18" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (44 samples, 0.76%)</title><rect x="173.9" y="1637" width="8.9" height="15.0" fill="rgb(237,125,48)" rx="2" ry="2" />
<text  x="176.88" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (35 samples, 0.60%)</title><rect x="109.4" y="1685" width="7.1" height="15.0" fill="rgb(253,8,0)" rx="2" ry="2" />
<text  x="112.38" y="1695.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.02%)</title><rect x="102.3" y="1845" width="0.2" height="15.0" fill="rgb(208,187,24)" rx="2" ry="2" />
<text  x="105.28" y="1855.5" ></text>
</g>
<g >
<title>onmt::unicode::get_case (6 samples, 0.10%)</title><rect x="765.1" y="1893" width="1.2" height="15.0" fill="rgb(248,100,7)" rx="2" ry="2" />
<text  x="768.09" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (35 samples, 0.60%)</title><rect x="183.0" y="1733" width="7.1" height="15.0" fill="rgb(209,20,2)" rx="2" ry="2" />
<text  x="186.00" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="217.7" y="1221" width="0.2" height="15.0" fill="rgb(243,35,35)" rx="2" ry="2" />
<text  x="220.69" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.3" y="1605" width="0.2" height="15.0" fill="rgb(241,199,4)" rx="2" ry="2" />
<text  x="1171.30" y="1615.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (14 samples, 0.24%)</title><rect x="899.0" y="2053" width="2.8" height="15.0" fill="rgb(218,63,48)" rx="2" ry="2" />
<text  x="901.95" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.7" y="1173" width="0.2" height="15.0" fill="rgb(208,61,37)" rx="2" ry="2" />
<text  x="1171.70" y="1183.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="1365" width="1.0" height="15.0" fill="rgb(231,106,24)" rx="2" ry="2" />
<text  x="83.58" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.5" y="1429" width="0.2" height="15.0" fill="rgb(240,225,5)" rx="2" ry="2" />
<text  x="1171.50" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.5" y="869" width="0.2" height="15.0" fill="rgb(248,150,52)" rx="2" ry="2" />
<text  x="1171.50" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (1 samples, 0.02%)</title><rect x="137.2" y="1749" width="0.2" height="15.0" fill="rgb(253,112,20)" rx="2" ry="2" />
<text  x="140.17" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (35 samples, 0.60%)</title><rect x="190.7" y="1733" width="7.1" height="15.0" fill="rgb(250,174,15)" rx="2" ry="2" />
<text  x="193.71" y="1743.5" ></text>
</g>
<g >
<title>__dynamic_cast (6 samples, 0.10%)</title><rect x="186.2" y="1605" width="1.3" height="15.0" fill="rgb(222,41,13)" rx="2" ry="2" />
<text  x="189.25" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.4" y="725" width="0.2" height="15.0" fill="rgb(209,99,53)" rx="2" ry="2" />
<text  x="141.38" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.4" y="1013" width="0.2" height="15.0" fill="rgb(229,139,23)" rx="2" ry="2" />
<text  x="141.38" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (34 samples, 0.58%)</title><rect x="116.5" y="1733" width="6.9" height="15.0" fill="rgb(237,51,18)" rx="2" ry="2" />
<text  x="119.48" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="171.6" y="1669" width="0.2" height="15.0" fill="rgb(246,166,45)" rx="2" ry="2" />
<text  x="174.65" y="1679.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::load (1 samples, 0.02%)</title><rect x="81.2" y="37" width="0.2" height="15.0" fill="rgb(237,117,17)" rx="2" ry="2" />
<text  x="84.19" y="47.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.7" y="1381" width="0.2" height="15.0" fill="rgb(246,81,52)" rx="2" ry="2" />
<text  x="1171.70" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (2 samples, 0.03%)</title><rect x="171.0" y="1845" width="0.4" height="15.0" fill="rgb(221,205,31)" rx="2" ry="2" />
<text  x="174.04" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.7" y="133" width="0.2" height="15.0" fill="rgb(233,220,20)" rx="2" ry="2" />
<text  x="1171.70" y="143.5" ></text>
</g>
<g >
<title>onmt::unicode::is_letter@plt (2 samples, 0.03%)</title><rect x="750.9" y="1877" width="0.4" height="15.0" fill="rgb(254,50,16)" rx="2" ry="2" />
<text  x="753.90" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="218.5" y="1269" width="0.2" height="15.0" fill="rgb(210,179,29)" rx="2" ry="2" />
<text  x="221.50" y="1279.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="118.3" y="1637" width="0.2" height="15.0" fill="rgb(208,186,3)" rx="2" ry="2" />
<text  x="121.31" y="1647.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id@plt (1 samples, 0.02%)</title><rect x="136.8" y="1701" width="0.2" height="15.0" fill="rgb(231,152,37)" rx="2" ry="2" />
<text  x="139.76" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.7" y="1653" width="0.2" height="15.0" fill="rgb(235,61,46)" rx="2" ry="2" />
<text  x="1171.70" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1168.5" y="2053" width="0.4" height="15.0" fill="rgb(228,198,53)" rx="2" ry="2" />
<text  x="1171.50" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (31 samples, 0.53%)</title><rect x="138.6" y="1685" width="6.3" height="15.0" fill="rgb(222,14,45)" rx="2" ry="2" />
<text  x="141.59" y="1695.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (3 samples, 0.05%)</title><rect x="881.5" y="2005" width="0.6" height="15.0" fill="rgb(252,147,12)" rx="2" ry="2" />
<text  x="884.51" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (1 samples, 0.02%)</title><rect x="207.1" y="1717" width="0.2" height="15.0" fill="rgb(252,88,32)" rx="2" ry="2" />
<text  x="210.14" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="218.5" y="1301" width="0.2" height="15.0" fill="rgb(221,53,32)" rx="2" ry="2" />
<text  x="221.50" y="1311.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1055.9" y="2005" width="0.2" height="15.0" fill="rgb(225,149,13)" rx="2" ry="2" />
<text  x="1058.94" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="149" width="1.0" height="15.0" fill="rgb(222,36,25)" rx="2" ry="2" />
<text  x="83.58" y="159.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="1541" width="1.0" height="15.0" fill="rgb(254,126,31)" rx="2" ry="2" />
<text  x="83.58" y="1551.5" ></text>
</g>
<g >
<title>RunFasttextClf (2 samples, 0.03%)</title><rect x="582.2" y="1957" width="0.4" height="15.0" fill="rgb(209,88,13)" rx="2" ry="2" />
<text  x="585.15" y="1967.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (1 samples, 0.02%)</title><rect x="925.5" y="1909" width="0.2" height="15.0" fill="rgb(236,98,50)" rx="2" ry="2" />
<text  x="928.52" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.7" y="709" width="0.2" height="15.0" fill="rgb(249,141,28)" rx="2" ry="2" />
<text  x="1171.70" y="719.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.02%)</title><rect x="83.2" y="2021" width="0.2" height="15.0" fill="rgb(226,0,29)" rx="2" ry="2" />
<text  x="86.22" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="218.7" y="1253" width="0.2" height="15.0" fill="rgb(249,218,8)" rx="2" ry="2" />
<text  x="221.70" y="1263.5" ></text>
</g>
<g >
<title>std::__merge_sort_with_buffer&lt;__gnu_cxx::__normal_iterator&lt;TDocument*, std::vector&lt;TDocument, std::allocator&lt;TDocument&gt; &gt; &gt;, TDocument*, __gnu_cxx::__ops::_Iter_comp_iter&lt;main::$_0&gt; &gt; (2 samples, 0.03%)</title><rect x="581.1" y="1989" width="0.4" height="15.0" fill="rgb(215,188,15)" rx="2" ry="2" />
<text  x="584.14" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="217.3" y="1749" width="0.6" height="15.0" fill="rgb(211,109,22)" rx="2" ry="2" />
<text  x="220.28" y="1759.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="712.6" y="1829" width="0.2" height="15.0" fill="rgb(209,190,23)" rx="2" ry="2" />
<text  x="715.56" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.7" y="1877" width="0.2" height="15.0" fill="rgb(213,26,49)" rx="2" ry="2" />
<text  x="1171.70" y="1887.5" ></text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::get (29 samples, 0.50%)</title><rect x="91.9" y="1925" width="5.9" height="15.0" fill="rgb(219,57,46)" rx="2" ry="2" />
<text  x="94.94" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.5" y="1013" width="0.2" height="15.0" fill="rgb(236,170,2)" rx="2" ry="2" />
<text  x="1171.50" y="1023.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::append@plt (2 samples, 0.03%)</title><rect x="615.6" y="1893" width="0.4" height="15.0" fill="rgb(206,169,54)" rx="2" ry="2" />
<text  x="618.62" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.2" y="1333" width="0.2" height="15.0" fill="rgb(219,178,5)" rx="2" ry="2" />
<text  x="141.18" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.3" y="1205" width="0.2" height="15.0" fill="rgb(206,169,11)" rx="2" ry="2" />
<text  x="1171.30" y="1215.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="1141" width="1.0" height="15.0" fill="rgb(205,14,48)" rx="2" ry="2" />
<text  x="83.58" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="218.7" y="821" width="0.2" height="15.0" fill="rgb(254,170,24)" rx="2" ry="2" />
<text  x="221.70" y="831.5" ></text>
</g>
<g >
<title>memcpy@plt (1 samples, 0.02%)</title><rect x="867.9" y="1973" width="0.2" height="15.0" fill="rgb(228,183,24)" rx="2" ry="2" />
<text  x="870.92" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (34 samples, 0.58%)</title><rect x="116.5" y="1765" width="6.9" height="15.0" fill="rgb(229,94,43)" rx="2" ry="2" />
<text  x="119.48" y="1775.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (1 samples, 0.02%)</title><rect x="955.1" y="2021" width="0.2" height="15.0" fill="rgb(248,137,28)" rx="2" ry="2" />
<text  x="958.14" y="2031.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="80.6" y="133" width="0.2" height="15.0" fill="rgb(252,39,27)" rx="2" ry="2" />
<text  x="83.58" y="143.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (30 samples, 0.52%)</title><rect x="138.8" y="1605" width="6.1" height="15.0" fill="rgb(227,143,5)" rx="2" ry="2" />
<text  x="141.79" y="1615.5" ></text>
</g>
<g >
<title>operator new@plt (1 samples, 0.02%)</title><rect x="159.5" y="1653" width="0.2" height="15.0" fill="rgb(220,105,22)" rx="2" ry="2" />
<text  x="162.48" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (172 samples, 2.96%)</title><rect x="102.7" y="1877" width="34.9" height="15.0" fill="rgb(248,178,18)" rx="2" ry="2" />
<text  x="105.69" y="1887.5" >st..</text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="344.0" y="1989" width="0.2" height="15.0" fill="rgb(251,128,36)" rx="2" ry="2" />
<text  x="347.04" y="1999.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::basic_json (1 samples, 0.02%)</title><rect x="579.1" y="2005" width="0.2" height="15.0" fill="rgb(211,82,31)" rx="2" ry="2" />
<text  x="582.11" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (33 samples, 0.57%)</title><rect x="116.5" y="1717" width="6.7" height="15.0" fill="rgb(232,43,28)" rx="2" ry="2" />
<text  x="119.48" y="1727.5" ></text>
</g>
<g >
<title>std::istream::sentry::sentry (1 samples, 0.02%)</title><rect x="340.8" y="1989" width="0.2" height="15.0" fill="rgb(213,163,32)" rx="2" ry="2" />
<text  x="343.80" y="1999.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="1117.0" y="2053" width="0.2" height="15.0" fill="rgb(218,208,12)" rx="2" ry="2" />
<text  x="1119.99" y="2063.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (4 samples, 0.07%)</title><rect x="181.2" y="1573" width="0.8" height="15.0" fill="rgb(211,209,5)" rx="2" ry="2" />
<text  x="184.18" y="1583.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.03%)</title><rect x="142.4" y="1557" width="0.4" height="15.0" fill="rgb(251,68,49)" rx="2" ry="2" />
<text  x="145.44" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.7" y="501" width="0.2" height="15.0" fill="rgb(223,92,1)" rx="2" ry="2" />
<text  x="1171.70" y="511.5" ></text>
</g>
<g >
<title>__do_page_fault (14 samples, 0.24%)</title><rect x="32.7" y="2005" width="2.9" height="15.0" fill="rgb(244,87,6)" rx="2" ry="2" />
<text  x="35.72" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.3" y="1301" width="0.2" height="15.0" fill="rgb(242,11,11)" rx="2" ry="2" />
<text  x="1171.30" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (1 samples, 0.02%)</title><rect x="171.2" y="1781" width="0.2" height="15.0" fill="rgb(247,3,34)" rx="2" ry="2" />
<text  x="174.24" y="1791.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::reserve (1 samples, 0.02%)</title><rect x="596.1" y="1893" width="0.2" height="15.0" fill="rgb(232,88,7)" rx="2" ry="2" />
<text  x="599.15" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.5" y="389" width="0.2" height="15.0" fill="rgb(237,217,38)" rx="2" ry="2" />
<text  x="1171.50" y="399.5" ></text>
</g>
<g >
<title>syscall (5 samples, 0.09%)</title><rect x="101.7" y="1973" width="1.0" height="15.0" fill="rgb(233,215,42)" rx="2" ry="2" />
<text  x="104.67" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.2" y="1045" width="0.2" height="15.0" fill="rgb(245,203,30)" rx="2" ry="2" />
<text  x="141.18" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.2" y="757" width="0.2" height="15.0" fill="rgb(208,149,32)" rx="2" ry="2" />
<text  x="141.18" y="767.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="879.3" y="1973" width="0.2" height="15.0" fill="rgb(205,118,14)" rx="2" ry="2" />
<text  x="882.28" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="138.2" y="1605" width="0.4" height="15.0" fill="rgb(229,195,51)" rx="2" ry="2" />
<text  x="141.18" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (31 samples, 0.53%)</title><rect x="138.6" y="1717" width="6.3" height="15.0" fill="rgb(230,172,41)" rx="2" ry="2" />
<text  x="141.59" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (1 samples, 0.02%)</title><rect x="170.6" y="1701" width="0.2" height="15.0" fill="rgb(207,223,34)" rx="2" ry="2" />
<text  x="173.63" y="1711.5" ></text>
</g>
<g >
<title>do_syscall_64 (4 samples, 0.07%)</title><rect x="84.4" y="2005" width="0.8" height="15.0" fill="rgb(249,95,4)" rx="2" ry="2" />
<text  x="87.43" y="2015.5" ></text>
</g>
<g >
<title>__dynamic_cast (6 samples, 0.10%)</title><rect x="174.9" y="1589" width="1.2" height="15.0" fill="rgb(238,9,8)" rx="2" ry="2" />
<text  x="177.89" y="1599.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (1 samples, 0.02%)</title><rect x="134.9" y="1685" width="0.2" height="15.0" fill="rgb(250,14,48)" rx="2" ry="2" />
<text  x="137.94" y="1695.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1047.2" y="1989" width="0.2" height="15.0" fill="rgb(247,96,51)" rx="2" ry="2" />
<text  x="1050.22" y="1999.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (8 samples, 0.14%)</title><rect x="33.5" y="1941" width="1.6" height="15.0" fill="rgb(254,145,23)" rx="2" ry="2" />
<text  x="36.53" y="1951.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::readWord (42 samples, 0.72%)</title><rect x="1047.6" y="2053" width="8.5" height="15.0" fill="rgb(231,73,8)" rx="2" ry="2" />
<text  x="1050.62" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.7" y="1845" width="0.2" height="15.0" fill="rgb(246,4,48)" rx="2" ry="2" />
<text  x="1171.70" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="217.5" y="1637" width="0.4" height="15.0" fill="rgb(228,10,50)" rx="2" ry="2" />
<text  x="220.48" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="171.6" y="1925" width="0.5" height="15.0" fill="rgb(226,72,14)" rx="2" ry="2" />
<text  x="174.65" y="1935.5" ></text>
</g>
<g >
<title>cfree (1 samples, 0.02%)</title><rect x="458.6" y="1973" width="0.2" height="15.0" fill="rgb(206,110,5)" rx="2" ry="2" />
<text  x="461.64" y="1983.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1047.4" y="2005" width="0.2" height="15.0" fill="rgb(249,46,52)" rx="2" ry="2" />
<text  x="1050.42" y="2015.5" ></text>
</g>
<g >
<title>pmd_page_vaddr (1 samples, 0.02%)</title><rect x="437.5" y="1877" width="0.2" height="15.0" fill="rgb(251,45,51)" rx="2" ry="2" />
<text  x="440.54" y="1887.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::at (2 samples, 0.03%)</title><rect x="86.1" y="1941" width="0.4" height="15.0" fill="rgb(234,20,9)" rx="2" ry="2" />
<text  x="89.06" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (1 samples, 0.02%)</title><rect x="109.2" y="1685" width="0.2" height="15.0" fill="rgb(251,216,12)" rx="2" ry="2" />
<text  x="112.18" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (1 samples, 0.02%)</title><rect x="216.1" y="1861" width="0.2" height="15.0" fill="rgb(213,94,0)" rx="2" ry="2" />
<text  x="219.06" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.07%)</title><rect x="80.8" y="133" width="0.8" height="15.0" fill="rgb(213,79,9)" rx="2" ry="2" />
<text  x="83.78" y="143.5" ></text>
</g>
<g >
<title>operator new@plt (1 samples, 0.02%)</title><rect x="194.0" y="1637" width="0.2" height="15.0" fill="rgb(222,133,42)" rx="2" ry="2" />
<text  x="196.96" y="1647.5" ></text>
</g>
<g >
<title>nlohmann::detail::parser&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::sax_parse_internal&lt;nlohmann::detail::json_sax_dom_parser&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; (72 samples, 1.24%)</title><rect x="87.1" y="1957" width="14.6" height="15.0" fill="rgb(213,156,25)" rx="2" ry="2" />
<text  x="90.07" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.5" y="661" width="0.2" height="15.0" fill="rgb(245,228,12)" rx="2" ry="2" />
<text  x="1171.50" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (36 samples, 0.62%)</title><rect x="144.9" y="1621" width="7.3" height="15.0" fill="rgb(219,66,24)" rx="2" ry="2" />
<text  x="147.87" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_quantifier (1 samples, 0.02%)</title><rect x="214.8" y="1813" width="0.2" height="15.0" fill="rgb(253,213,20)" rx="2" ry="2" />
<text  x="217.85" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="741" width="1.0" height="15.0" fill="rgb(207,17,29)" rx="2" ry="2" />
<text  x="83.58" y="751.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="213" width="1.0" height="15.0" fill="rgb(222,179,20)" rx="2" ry="2" />
<text  x="83.58" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.7" y="1093" width="0.2" height="15.0" fill="rgb(235,28,45)" rx="2" ry="2" />
<text  x="1171.70" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.7" y="645" width="0.2" height="15.0" fill="rgb(229,64,5)" rx="2" ry="2" />
<text  x="1171.70" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.7" y="1221" width="0.2" height="15.0" fill="rgb(233,84,5)" rx="2" ry="2" />
<text  x="1171.70" y="1231.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (3 samples, 0.05%)</title><rect x="204.7" y="1653" width="0.6" height="15.0" fill="rgb(253,96,37)" rx="2" ry="2" />
<text  x="207.71" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="218.7" y="725" width="0.2" height="15.0" fill="rgb(238,163,3)" rx="2" ry="2" />
<text  x="221.70" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.5" y="1653" width="0.2" height="15.0" fill="rgb(252,190,29)" rx="2" ry="2" />
<text  x="1171.50" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (33 samples, 0.57%)</title><rect x="190.7" y="1669" width="6.7" height="15.0" fill="rgb(237,65,30)" rx="2" ry="2" />
<text  x="193.71" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.2" y="1077" width="0.2" height="15.0" fill="rgb(220,134,11)" rx="2" ry="2" />
<text  x="141.18" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.7" y="1685" width="0.2" height="15.0" fill="rgb(248,53,47)" rx="2" ry="2" />
<text  x="1171.70" y="1695.5" ></text>
</g>
<g >
<title>malloc@plt (2 samples, 0.03%)</title><rect x="1114.3" y="2053" width="0.5" height="15.0" fill="rgb(208,46,35)" rx="2" ry="2" />
<text  x="1117.35" y="2063.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id@plt (1 samples, 0.02%)</title><rect x="189.5" y="1621" width="0.2" height="15.0" fill="rgb(227,128,11)" rx="2" ry="2" />
<text  x="192.49" y="1631.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id@plt (1 samples, 0.02%)</title><rect x="898.8" y="2005" width="0.2" height="15.0" fill="rgb(233,150,19)" rx="2" ry="2" />
<text  x="901.75" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (1 samples, 0.02%)</title><rect x="131.9" y="1749" width="0.2" height="15.0" fill="rgb(244,171,23)" rx="2" ry="2" />
<text  x="134.89" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="171.6" y="1701" width="0.2" height="15.0" fill="rgb(251,47,13)" rx="2" ry="2" />
<text  x="174.65" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (30 samples, 0.52%)</title><rect x="102.7" y="1621" width="6.1" height="15.0" fill="rgb(209,107,26)" rx="2" ry="2" />
<text  x="105.69" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.3" y="805" width="0.2" height="15.0" fill="rgb(224,19,37)" rx="2" ry="2" />
<text  x="1171.30" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (1 samples, 0.02%)</title><rect x="137.6" y="1765" width="0.2" height="15.0" fill="rgb(218,16,30)" rx="2" ry="2" />
<text  x="140.57" y="1775.5" ></text>
</g>
<g >
<title>release_pages (1 samples, 0.02%)</title><rect x="578.1" y="1797" width="0.2" height="15.0" fill="rgb(206,181,5)" rx="2" ry="2" />
<text  x="581.10" y="1807.5" ></text>
</g>
<g >
<title>strcmp@plt (5 samples, 0.09%)</title><rect x="1186.8" y="2037" width="1.0" height="15.0" fill="rgb(219,183,11)" rx="2" ry="2" />
<text  x="1189.75" y="2047.5" ></text>
</g>
<g >
<title>fasttext::Vector::addRow (1 samples, 0.02%)</title><rect x="83.8" y="2021" width="0.2" height="15.0" fill="rgb(220,129,54)" rx="2" ry="2" />
<text  x="86.83" y="2031.5" ></text>
</g>
<g >
<title>flush_tlb_mm_range (1 samples, 0.02%)</title><rect x="925.5" y="1893" width="0.2" height="15.0" fill="rgb(237,98,14)" rx="2" ry="2" />
<text  x="928.52" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (1 samples, 0.02%)</title><rect x="137.2" y="1765" width="0.2" height="15.0" fill="rgb(237,118,12)" rx="2" ry="2" />
<text  x="140.17" y="1775.5" ></text>
</g>
<g >
<title>Eigen::internal::gemv_dense_selector&lt;2, 1, true&gt;::run&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; &gt; (1 samples, 0.02%)</title><rect x="227.6" y="1957" width="0.2" height="15.0" fill="rgb(225,129,21)" rx="2" ry="2" />
<text  x="230.62" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="171.6" y="1653" width="0.2" height="15.0" fill="rgb(244,77,45)" rx="2" ry="2" />
<text  x="174.65" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (174 samples, 2.99%)</title><rect x="102.7" y="1909" width="35.3" height="15.0" fill="rgb(230,123,47)" rx="2" ry="2" />
<text  x="105.69" y="1919.5" >st..</text>
</g>
<g >
<title>do_page_fault (4 samples, 0.07%)</title><rect x="79.4" y="2005" width="0.8" height="15.0" fill="rgb(214,108,3)" rx="2" ry="2" />
<text  x="82.36" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (1 samples, 0.02%)</title><rect x="215.5" y="1813" width="0.2" height="15.0" fill="rgb(254,54,11)" rx="2" ry="2" />
<text  x="218.46" y="1823.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.02%)</title><rect x="898.3" y="2005" width="0.2" height="15.0" fill="rgb(214,18,22)" rx="2" ry="2" />
<text  x="901.35" y="2015.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsgetn (1 samples, 0.02%)</title><rect x="1188.0" y="2053" width="0.2" height="15.0" fill="rgb(240,109,40)" rx="2" ry="2" />
<text  x="1190.97" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="217.7" y="1205" width="0.2" height="15.0" fill="rgb(225,136,46)" rx="2" ry="2" />
<text  x="220.69" y="1215.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::getSubwords (4 samples, 0.07%)</title><rect x="549.1" y="1973" width="0.8" height="15.0" fill="rgb(212,11,33)" rx="2" ry="2" />
<text  x="552.09" y="1983.5" ></text>
</g>
<g >
<title>__dynamic_cast (4 samples, 0.07%)</title><rect x="179.8" y="1573" width="0.8" height="15.0" fill="rgb(231,57,10)" rx="2" ry="2" />
<text  x="182.76" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.5" y="421" width="0.2" height="15.0" fill="rgb(231,27,28)" rx="2" ry="2" />
<text  x="1171.50" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1168.5" y="1781" width="0.2" height="15.0" fill="rgb(227,61,24)" rx="2" ry="2" />
<text  x="1171.50" y="1791.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1047.2" y="2021" width="0.2" height="15.0" fill="rgb(248,65,37)" rx="2" ry="2" />
<text  x="1050.22" y="2031.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="79.8" y="1925" width="0.2" height="15.0" fill="rgb(238,6,11)" rx="2" ry="2" />
<text  x="82.77" y="1935.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (2 samples, 0.03%)</title><rect x="578.1" y="1941" width="0.4" height="15.0" fill="rgb(224,191,30)" rx="2" ry="2" />
<text  x="581.10" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="171.8" y="1445" width="0.3" height="15.0" fill="rgb(212,148,24)" rx="2" ry="2" />
<text  x="174.85" y="1455.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="80.8" y="53" width="0.2" height="15.0" fill="rgb(242,84,53)" rx="2" ry="2" />
<text  x="83.78" y="63.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.5" y="325" width="0.2" height="15.0" fill="rgb(242,117,7)" rx="2" ry="2" />
<text  x="1171.50" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (1 samples, 0.02%)</title><rect x="137.2" y="1733" width="0.2" height="15.0" fill="rgb(208,64,20)" rx="2" ry="2" />
<text  x="140.17" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="171.8" y="1317" width="0.3" height="15.0" fill="rgb(228,133,21)" rx="2" ry="2" />
<text  x="174.85" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1168.7" y="581" width="0.2" height="15.0" fill="rgb(214,99,14)" rx="2" ry="2" />
<text  x="1171.70" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (1 samples, 0.02%)</title><rect x="157.9" y="1669" width="0.2" height="15.0" fill="rgb(232,222,25)" rx="2" ry="2" />
<text  x="160.85" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.4" y="805" width="0.2" height="15.0" fill="rgb(237,69,35)" rx="2" ry="2" />
<text  x="141.38" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.2" y="885" width="0.2" height="15.0" fill="rgb(239,65,36)" rx="2" ry="2" />
<text  x="141.18" y="895.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 0.10%)</title><rect x="80.4" y="1989" width="1.2" height="15.0" fill="rgb(222,124,18)" rx="2" ry="2" />
<text  x="83.38" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="138.2" y="1653" width="0.4" height="15.0" fill="rgb(253,1,42)" rx="2" ry="2" />
<text  x="141.18" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1168.5" y="2021" width="0.4" height="15.0" fill="rgb(233,166,24)" rx="2" ry="2" />
<text  x="1171.50" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.09%)</title><rect x="80.6" y="1605" width="1.0" height="15.0" fill="rgb(224,165,22)" rx="2" ry="2" />
<text  x="83.58" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (25 samples, 0.43%)</title><rect x="152.6" y="1701" width="5.1" height="15.0" fill="rgb(212,151,39)" rx="2" ry="2" />
<text  x="155.58" y="1711.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (3 samples, 0.05%)</title><rect x="436.7" y="1845" width="0.6" height="15.0" fill="rgb(248,126,31)" rx="2" ry="2" />
<text  x="439.73" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (158 samples, 2.72%)</title><rect x="138.6" y="1813" width="32.0" height="15.0" fill="rgb(217,129,44)" rx="2" ry="2" />
<text  x="141.59" y="1823.5" >st..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct (5 samples, 0.09%)</title><rect x="595.1" y="1893" width="1.0" height="15.0" fill="rgb(207,158,33)" rx="2" ry="2" />
<text  x="598.13" y="1903.5" ></text>
</g>
<g >
<title>cfree (3 samples, 0.05%)</title><rect x="176.1" y="1589" width="0.6" height="15.0" fill="rgb(205,8,50)" rx="2" ry="2" />
<text  x="179.11" y="1599.5" ></text>
</g>
<g >
<title>memcpy@plt (2 samples, 0.03%)</title><rect x="632.7" y="1877" width="0.4" height="15.0" fill="rgb(214,69,25)" rx="2" ry="2" />
<text  x="635.65" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (44 samples, 0.76%)</title><rect x="197.8" y="1765" width="8.9" height="15.0" fill="rgb(209,36,26)" rx="2" ry="2" />
<text  x="200.81" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.4" y="981" width="0.2" height="15.0" fill="rgb(217,172,38)" rx="2" ry="2" />
<text  x="141.38" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.4" y="309" width="0.2" height="15.0" fill="rgb(233,91,47)" rx="2" ry="2" />
<text  x="141.38" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (42 samples, 0.72%)</title><rect x="123.4" y="1717" width="8.5" height="15.0" fill="rgb(206,17,10)" rx="2" ry="2" />
<text  x="126.38" y="1727.5" ></text>
</g>
</g>
</svg>
