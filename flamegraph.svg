<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="2134" onload="init(evt)" viewBox="0 0 1200 2134" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="2134.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="2117" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="2117" > </text>
<g id="frames">
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (78 samples, 0.42%)</title><rect x="195.7" y="1669" width="4.9" height="15.0" fill="rgb(231,78,31)" rx="2" ry="2" />
<text  x="198.70" y="1679.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (48 samples, 0.26%)</title><rect x="981.6" y="2053" width="3.0" height="15.0" fill="rgb(215,202,30)" rx="2" ry="2" />
<text  x="984.57" y="2063.5" ></text>
</g>
<g >
<title>unmap_region (2 samples, 0.01%)</title><rect x="89.9" y="1845" width="0.1" height="15.0" fill="rgb(242,30,33)" rx="2" ry="2" />
<text  x="92.91" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="162.8" y="885" width="0.1" height="15.0" fill="rgb(226,209,46)" rx="2" ry="2" />
<text  x="165.82" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (91 samples, 0.49%)</title><rect x="190.0" y="1653" width="5.7" height="15.0" fill="rgb(218,59,53)" rx="2" ry="2" />
<text  x="192.96" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (513 samples, 2.74%)</title><rect x="55.5" y="1845" width="32.4" height="15.0" fill="rgb(214,103,24)" rx="2" ry="2" />
<text  x="58.51" y="1855.5" >[u..</text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int&gt; (12 samples, 0.06%)</title><rect x="863.6" y="2037" width="0.8" height="15.0" fill="rgb(215,116,7)" rx="2" ry="2" />
<text  x="866.60" y="2047.5" ></text>
</g>
<g >
<title>onmt::is_alphabet (47 samples, 0.25%)</title><rect x="635.7" y="1877" width="2.9" height="15.0" fill="rgb(249,198,5)" rx="2" ry="2" />
<text  x="638.66" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (2 samples, 0.01%)</title><rect x="161.6" y="1781" width="0.1" height="15.0" fill="rgb(215,140,44)" rx="2" ry="2" />
<text  x="164.62" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1187.9" y="453" width="0.1" height="15.0" fill="rgb(238,205,46)" rx="2" ry="2" />
<text  x="1190.85" y="463.5" ></text>
</g>
<g >
<title>fasttext::FastText::getWordVector (176 samples, 0.94%)</title><rect x="307.8" y="1973" width="11.1" height="15.0" fill="rgb(244,228,34)" rx="2" ry="2" />
<text  x="310.81" y="1983.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::~collate (24 samples, 0.13%)</title><rect x="804.2" y="2037" width="1.5" height="15.0" fill="rgb(226,89,14)" rx="2" ry="2" />
<text  x="807.20" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1187.3" y="805" width="0.3" height="15.0" fill="rgb(248,219,13)" rx="2" ry="2" />
<text  x="1190.29" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.2" y="1957" width="0.4" height="15.0" fill="rgb(246,124,1)" rx="2" ry="2" />
<text  x="1190.22" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="43.5" y="2021" width="0.1" height="15.0" fill="rgb(243,169,47)" rx="2" ry="2" />
<text  x="46.52" y="2031.5" ></text>
</g>
<g >
<title>std::locale::locale (2 samples, 0.01%)</title><rect x="26.6" y="2021" width="0.1" height="15.0" fill="rgb(222,31,20)" rx="2" ry="2" />
<text  x="29.60" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1188.0" y="1909" width="0.2" height="15.0" fill="rgb(235,145,2)" rx="2" ry="2" />
<text  x="1191.04" y="1919.5" ></text>
</g>
<g >
<title>__libc_read (2 samples, 0.01%)</title><rect x="1104.8" y="2037" width="0.1" height="15.0" fill="rgb(223,216,42)" rx="2" ry="2" />
<text  x="1107.79" y="2047.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (2 samples, 0.01%)</title><rect x="200.2" y="1605" width="0.2" height="15.0" fill="rgb(239,138,37)" rx="2" ry="2" />
<text  x="203.25" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.9" y="1301" width="0.1" height="15.0" fill="rgb(244,27,8)" rx="2" ry="2" />
<text  x="1190.85" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.0" y="1173" width="0.2" height="15.0" fill="rgb(208,80,16)" rx="2" ry="2" />
<text  x="1191.04" y="1183.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (2 samples, 0.01%)</title><rect x="43.4" y="2005" width="0.1" height="15.0" fill="rgb(252,53,13)" rx="2" ry="2" />
<text  x="46.39" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1187.3" y="261" width="0.3" height="15.0" fill="rgb(242,143,5)" rx="2" ry="2" />
<text  x="1190.29" y="271.5" ></text>
</g>
<g >
<title>__asan::AsanThread::stack_top (3 samples, 0.02%)</title><rect x="464.6" y="1941" width="0.2" height="15.0" fill="rgb(221,131,48)" rx="2" ry="2" />
<text  x="467.60" y="1951.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="79.7" y="1269" width="0.1" height="15.0" fill="rgb(209,222,39)" rx="2" ry="2" />
<text  x="82.69" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.0" y="1205" width="0.2" height="15.0" fill="rgb(251,67,24)" rx="2" ry="2" />
<text  x="1191.04" y="1215.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (8 samples, 0.04%)</title><rect x="149.1" y="1605" width="0.5" height="15.0" fill="rgb(224,165,10)" rx="2" ry="2" />
<text  x="152.06" y="1615.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (4 samples, 0.02%)</title><rect x="89.0" y="1909" width="0.2" height="15.0" fill="rgb(238,98,12)" rx="2" ry="2" />
<text  x="91.97" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (330 samples, 1.77%)</title><rect x="55.6" y="549" width="20.8" height="15.0" fill="rgb(209,117,3)" rx="2" ry="2" />
<text  x="58.57" y="559.5" ></text>
</g>
<g >
<title>__handle_mm_fault (3 samples, 0.02%)</title><rect x="1189.4" y="1957" width="0.2" height="15.0" fill="rgb(208,14,27)" rx="2" ry="2" />
<text  x="1192.43" y="1967.5" ></text>
</g>
<g >
<title>handle_mm_fault (20 samples, 0.11%)</title><rect x="482.0" y="1877" width="1.3" height="15.0" fill="rgb(240,44,17)" rx="2" ry="2" />
<text  x="485.03" y="1887.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (2 samples, 0.01%)</title><rect x="86.5" y="1749" width="0.1" height="15.0" fill="rgb(233,148,27)" rx="2" ry="2" />
<text  x="89.50" y="1759.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="78.9" y="1205" width="0.2" height="15.0" fill="rgb(227,189,43)" rx="2" ry="2" />
<text  x="81.93" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.0" y="581" width="0.2" height="15.0" fill="rgb(230,151,18)" rx="2" ry="2" />
<text  x="1191.04" y="591.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="75.6" y="69" width="0.1" height="15.0" fill="rgb(228,35,51)" rx="2" ry="2" />
<text  x="78.58" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1188.0" y="949" width="0.2" height="15.0" fill="rgb(246,188,46)" rx="2" ry="2" />
<text  x="1191.04" y="959.5" ></text>
</g>
<g >
<title>__sanitizer::mem_is_zero (3 samples, 0.02%)</title><rect x="1095.6" y="2053" width="0.2" height="15.0" fill="rgb(242,1,49)" rx="2" ry="2" />
<text  x="1098.63" y="2063.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotPut (3 samples, 0.02%)</title><rect x="167.0" y="1541" width="0.2" height="15.0" fill="rgb(250,207,37)" rx="2" ry="2" />
<text  x="169.98" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (325 samples, 1.74%)</title><rect x="55.6" y="309" width="20.5" height="15.0" fill="rgb(241,48,54)" rx="2" ry="2" />
<text  x="58.57" y="319.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::create&lt;std::vector&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::allocator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::vector&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::allocator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; const&amp;&gt; (3 samples, 0.02%)</title><rect x="501.5" y="1749" width="0.2" height="15.0" fill="rgb(239,141,29)" rx="2" ry="2" />
<text  x="504.53" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="162.7" y="1477" width="0.2" height="15.0" fill="rgb(245,160,21)" rx="2" ry="2" />
<text  x="165.69" y="1487.5" ></text>
</g>
<g >
<title>__asan::PoisonShadow (88 samples, 0.47%)</title><rect x="48.5" y="2021" width="5.6" height="15.0" fill="rgb(245,225,6)" rx="2" ry="2" />
<text  x="51.50" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (91 samples, 0.49%)</title><rect x="190.0" y="1685" width="5.7" height="15.0" fill="rgb(239,196,5)" rx="2" ry="2" />
<text  x="192.96" y="1695.5" ></text>
</g>
<g >
<title>__asan_memcpy (2 samples, 0.01%)</title><rect x="166.5" y="1541" width="0.1" height="15.0" fill="rgb(251,38,53)" rx="2" ry="2" />
<text  x="169.48" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.2" y="1749" width="0.4" height="15.0" fill="rgb(226,7,25)" rx="2" ry="2" />
<text  x="1190.22" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (86 samples, 0.46%)</title><rect x="205.5" y="1765" width="5.4" height="15.0" fill="rgb(248,72,25)" rx="2" ry="2" />
<text  x="208.49" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="162.8" y="965" width="0.1" height="15.0" fill="rgb(214,179,43)" rx="2" ry="2" />
<text  x="165.82" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.0" y="1925" width="0.2" height="15.0" fill="rgb(230,212,3)" rx="2" ry="2" />
<text  x="1191.04" y="1935.5" ></text>
</g>
<g >
<title>fasttext::FastText::getDimension (34 samples, 0.18%)</title><rect x="494.0" y="1973" width="2.2" height="15.0" fill="rgb(235,104,33)" rx="2" ry="2" />
<text  x="497.02" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (334 samples, 1.79%)</title><rect x="55.6" y="725" width="21.1" height="15.0" fill="rgb(207,125,15)" rx="2" ry="2" />
<text  x="58.57" y="735.5" ></text>
</g>
<g >
<title>do_wp_page (84 samples, 0.45%)</title><rect x="924.8" y="1957" width="5.3" height="15.0" fill="rgb(220,117,24)" rx="2" ry="2" />
<text  x="927.83" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="162.4" y="1397" width="0.2" height="15.0" fill="rgb(208,180,51)" rx="2" ry="2" />
<text  x="165.44" y="1407.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (17 samples, 0.09%)</title><rect x="1094.6" y="1989" width="1.0" height="15.0" fill="rgb(220,125,12)" rx="2" ry="2" />
<text  x="1097.56" y="1999.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (5 samples, 0.03%)</title><rect x="1094.9" y="1861" width="0.4" height="15.0" fill="rgb(211,57,50)" rx="2" ry="2" />
<text  x="1097.94" y="1871.5" ></text>
</g>
<g >
<title>__dynamic_cast (5 samples, 0.03%)</title><rect x="157.5" y="1685" width="0.3" height="15.0" fill="rgb(212,73,47)" rx="2" ry="2" />
<text  x="160.45" y="1695.5" ></text>
</g>
<g >
<title>do_mmap (7 samples, 0.04%)</title><rect x="751.0" y="1941" width="0.4" height="15.0" fill="rgb(209,49,37)" rx="2" ry="2" />
<text  x="753.99" y="1951.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::Unwind (2 samples, 0.01%)</title><rect x="154.2" y="1637" width="0.1" height="15.0" fill="rgb(242,106,11)" rx="2" ry="2" />
<text  x="157.17" y="1647.5" ></text>
</g>
<g >
<title>__asan::AsanTSDGet (14 samples, 0.07%)</title><rect x="1153.0" y="2037" width="0.9" height="15.0" fill="rgb(210,22,26)" rx="2" ry="2" />
<text  x="1156.01" y="2047.5" ></text>
</g>
<g >
<title>__do_page_fault (75 samples, 0.40%)</title><rect x="21.4" y="2005" width="4.7" height="15.0" fill="rgb(216,196,29)" rx="2" ry="2" />
<text  x="24.36" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.02%)</title><rect x="863.6" y="2021" width="0.2" height="15.0" fill="rgb(229,167,17)" rx="2" ry="2" />
<text  x="866.60" y="2031.5" ></text>
</g>
<g >
<title>unmap_region (5 samples, 0.03%)</title><rect x="751.6" y="1941" width="0.3" height="15.0" fill="rgb(238,0,1)" rx="2" ry="2" />
<text  x="754.62" y="1951.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::push_back (5 samples, 0.03%)</title><rect x="501.4" y="2005" width="0.3" height="15.0" fill="rgb(205,145,37)" rx="2" ry="2" />
<text  x="504.40" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1187.3" y="1573" width="0.3" height="15.0" fill="rgb(234,146,46)" rx="2" ry="2" />
<text  x="1190.29" y="1583.5" ></text>
</g>
<g >
<title>__sanitizer::internal_memmove (20 samples, 0.11%)</title><rect x="470.4" y="1925" width="1.3" height="15.0" fill="rgb(215,224,25)" rx="2" ry="2" />
<text  x="473.41" y="1935.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (4 samples, 0.02%)</title><rect x="205.2" y="1637" width="0.2" height="15.0" fill="rgb(248,52,32)" rx="2" ry="2" />
<text  x="208.17" y="1647.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.01%)</title><rect x="206.1" y="1669" width="0.1" height="15.0" fill="rgb(215,175,10)" rx="2" ry="2" />
<text  x="209.06" y="1679.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::operator[] (2 samples, 0.01%)</title><rect x="130.5" y="1941" width="0.1" height="15.0" fill="rgb(227,75,14)" rx="2" ry="2" />
<text  x="133.50" y="1951.5" ></text>
</g>
<g >
<title>__sanitizer::internal_munmap (2 samples, 0.01%)</title><rect x="84.0" y="1573" width="0.1" height="15.0" fill="rgb(223,16,24)" rx="2" ry="2" />
<text  x="86.98" y="1583.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.03%)</title><rect x="1095.9" y="2053" width="0.3" height="15.0" fill="rgb(235,128,41)" rx="2" ry="2" />
<text  x="1098.89" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.9" y="325" width="0.1" height="15.0" fill="rgb(214,89,30)" rx="2" ry="2" />
<text  x="1190.85" y="335.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (2 samples, 0.01%)</title><rect x="81.4" y="1397" width="0.1" height="15.0" fill="rgb(218,170,38)" rx="2" ry="2" />
<text  x="84.39" y="1407.5" ></text>
</g>
<g >
<title>[unknown] (325 samples, 1.74%)</title><rect x="55.6" y="325" width="20.5" height="15.0" fill="rgb(212,59,9)" rx="2" ry="2" />
<text  x="58.57" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (301 samples, 1.61%)</title><rect x="131.8" y="1781" width="19.0" height="15.0" fill="rgb(230,2,16)" rx="2" ry="2" />
<text  x="134.83" y="1791.5" ></text>
</g>
<g >
<title>free_unref_page_list (2 samples, 0.01%)</title><rect x="751.6" y="1829" width="0.1" height="15.0" fill="rgb(229,79,15)" rx="2" ry="2" />
<text  x="754.62" y="1839.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (4 samples, 0.02%)</title><rect x="195.4" y="1589" width="0.2" height="15.0" fill="rgb(250,128,4)" rx="2" ry="2" />
<text  x="198.39" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.2" y="1797" width="0.4" height="15.0" fill="rgb(226,170,1)" rx="2" ry="2" />
<text  x="1190.22" y="1807.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (26 samples, 0.14%)</title><rect x="660.7" y="1861" width="1.7" height="15.0" fill="rgb(226,139,15)" rx="2" ry="2" />
<text  x="663.72" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1187.3" y="1413" width="0.3" height="15.0" fill="rgb(214,22,35)" rx="2" ry="2" />
<text  x="1190.29" y="1423.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (61 samples, 0.33%)</title><rect x="31.7" y="2021" width="3.9" height="15.0" fill="rgb(208,14,39)" rx="2" ry="2" />
<text  x="34.71" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (536 samples, 2.87%)</title><rect x="55.5" y="1925" width="33.8" height="15.0" fill="rgb(218,193,32)" rx="2" ry="2" />
<text  x="58.51" y="1935.5" >[u..</text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::create&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (3 samples, 0.02%)</title><rect x="500.3" y="1973" width="0.2" height="15.0" fill="rgb(213,18,51)" rx="2" ry="2" />
<text  x="503.33" y="1983.5" ></text>
</g>
<g >
<title>page_fault (3 samples, 0.02%)</title><rect x="1008.0" y="2037" width="0.2" height="15.0" fill="rgb(237,198,33)" rx="2" ry="2" />
<text  x="1011.02" y="2047.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (34 samples, 0.18%)</title><rect x="802.1" y="2005" width="2.1" height="15.0" fill="rgb(207,102,20)" rx="2" ry="2" />
<text  x="805.05" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (80 samples, 0.43%)</title><rect x="156.5" y="1717" width="5.1" height="15.0" fill="rgb(224,119,9)" rx="2" ry="2" />
<text  x="159.51" y="1727.5" ></text>
</g>
<g >
<title>__sanitizer::BlockingMutex::Lock (5 samples, 0.03%)</title><rect x="999.5" y="2053" width="0.3" height="15.0" fill="rgb(241,45,2)" rx="2" ry="2" />
<text  x="1002.50" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.0" y="1349" width="0.2" height="15.0" fill="rgb(221,145,35)" rx="2" ry="2" />
<text  x="1191.04" y="1359.5" ></text>
</g>
<g >
<title>try_to_wake_up (3 samples, 0.02%)</title><rect x="751.4" y="1877" width="0.2" height="15.0" fill="rgb(238,136,29)" rx="2" ry="2" />
<text  x="754.43" y="1887.5" ></text>
</g>
<g >
<title>__vm_munmap (2 samples, 0.01%)</title><rect x="89.9" y="1877" width="0.1" height="15.0" fill="rgb(207,54,33)" rx="2" ry="2" />
<text  x="92.91" y="1887.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (3 samples, 0.02%)</title><rect x="146.9" y="1605" width="0.2" height="15.0" fill="rgb(221,187,30)" rx="2" ry="2" />
<text  x="149.91" y="1615.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (2 samples, 0.01%)</title><rect x="751.2" y="1829" width="0.2" height="15.0" fill="rgb(238,228,50)" rx="2" ry="2" />
<text  x="754.24" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1187.3" y="453" width="0.3" height="15.0" fill="rgb(236,110,1)" rx="2" ry="2" />
<text  x="1190.29" y="463.5" ></text>
</g>
<g >
<title>clear_page_erms (8 samples, 0.04%)</title><rect x="23.6" y="1925" width="0.5" height="15.0" fill="rgb(217,75,0)" rx="2" ry="2" />
<text  x="26.63" y="1935.5" ></text>
</g>
<g >
<title>std::__merge_sort_with_buffer&lt;__gnu_cxx::__normal_iterator&lt;TDocument*, std::vector&lt;TDocument, std::allocator&lt;TDocument&gt; &gt; &gt;, TDocument*, __gnu_cxx::__ops::_Iter_comp_iter&lt;main::$_1&gt; &gt; (5 samples, 0.03%)</title><rect x="502.0" y="1989" width="0.4" height="15.0" fill="rgb(245,98,29)" rx="2" ry="2" />
<text  x="505.03" y="1999.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (2 samples, 0.01%)</title><rect x="142.2" y="1589" width="0.1" height="15.0" fill="rgb(232,17,23)" rx="2" ry="2" />
<text  x="145.18" y="1599.5" ></text>
</g>
<g >
<title>handle_mm_fault (47 samples, 0.25%)</title><rect x="23.0" y="1989" width="3.0" height="15.0" fill="rgb(243,122,16)" rx="2" ry="2" />
<text  x="26.00" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1188.0" y="1525" width="0.2" height="15.0" fill="rgb(224,119,40)" rx="2" ry="2" />
<text  x="1191.04" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="162.7" y="1397" width="0.2" height="15.0" fill="rgb(236,99,15)" rx="2" ry="2" />
<text  x="165.69" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1188.0" y="757" width="0.2" height="15.0" fill="rgb(207,171,50)" rx="2" ry="2" />
<text  x="1191.04" y="767.5" ></text>
</g>
<g >
<title>__lru_cache_add (2 samples, 0.01%)</title><rect x="24.6" y="1941" width="0.2" height="15.0" fill="rgb(215,22,45)" rx="2" ry="2" />
<text  x="27.64" y="1951.5" ></text>
</g>
<g >
<title>down_read_trylock (2 samples, 0.01%)</title><rect x="923.7" y="1989" width="0.1" height="15.0" fill="rgb(205,152,27)" rx="2" ry="2" />
<text  x="926.69" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (482 samples, 2.58%)</title><rect x="131.8" y="1909" width="30.4" height="15.0" fill="rgb(243,218,54)" rx="2" ry="2" />
<text  x="134.83" y="1919.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1187.3" y="981" width="0.3" height="15.0" fill="rgb(216,122,40)" rx="2" ry="2" />
<text  x="1190.29" y="991.5" ></text>
</g>
<g >
<title>unmap_region (2 samples, 0.01%)</title><rect x="86.8" y="1669" width="0.1" height="15.0" fill="rgb(244,156,23)" rx="2" ry="2" />
<text  x="89.82" y="1679.5" ></text>
</g>
<g >
<title>__pthread_getspecific (2 samples, 0.01%)</title><rect x="465.1" y="1941" width="0.1" height="15.0" fill="rgb(251,178,23)" rx="2" ry="2" />
<text  x="468.11" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.0" y="1637" width="0.2" height="15.0" fill="rgb(214,25,24)" rx="2" ry="2" />
<text  x="1191.04" y="1647.5" ></text>
</g>
<g >
<title>__asan::AsanThread::stack_top (23 samples, 0.12%)</title><rect x="1154.6" y="2037" width="1.4" height="15.0" fill="rgb(210,151,47)" rx="2" ry="2" />
<text  x="1157.59" y="2047.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (4 samples, 0.02%)</title><rect x="477.8" y="1941" width="0.2" height="15.0" fill="rgb(225,166,17)" rx="2" ry="2" />
<text  x="480.80" y="1951.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (2 samples, 0.01%)</title><rect x="88.0" y="1797" width="0.1" height="15.0" fill="rgb(213,75,54)" rx="2" ry="2" />
<text  x="91.02" y="1807.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (2 samples, 0.01%)</title><rect x="552.5" y="1781" width="0.1" height="15.0" fill="rgb(216,155,42)" rx="2" ry="2" />
<text  x="555.47" y="1791.5" ></text>
</g>
<g >
<title>__asan::PoisonShadow (49 samples, 0.26%)</title><rect x="117.3" y="2037" width="3.1" height="15.0" fill="rgb(237,109,11)" rx="2" ry="2" />
<text  x="120.31" y="2047.5" ></text>
</g>
<g >
<title>flush_tlb_mm_range (5 samples, 0.03%)</title><rect x="55.1" y="1893" width="0.3" height="15.0" fill="rgb(216,195,6)" rx="2" ry="2" />
<text  x="58.07" y="1903.5" ></text>
</g>
<g >
<title>page_fault (4 samples, 0.02%)</title><rect x="1189.4" y="2021" width="0.2" height="15.0" fill="rgb(249,37,25)" rx="2" ry="2" />
<text  x="1192.37" y="2031.5" ></text>
</g>
<g >
<title>__do_munmap (2 samples, 0.01%)</title><rect x="89.9" y="1861" width="0.1" height="15.0" fill="rgb(232,72,4)" rx="2" ry="2" />
<text  x="92.91" y="1871.5" ></text>
</g>
<g >
<title>flush_tlb_mm_range (2 samples, 0.01%)</title><rect x="89.9" y="1781" width="0.1" height="15.0" fill="rgb(247,111,17)" rx="2" ry="2" />
<text  x="92.91" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.0" y="1461" width="0.2" height="15.0" fill="rgb(232,59,8)" rx="2" ry="2" />
<text  x="1191.04" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="217.3" y="1925" width="0.3" height="15.0" fill="rgb(246,185,24)" rx="2" ry="2" />
<text  x="220.29" y="1935.5" ></text>
</g>
<g >
<title>fasttext::FastText::getWordVector (9 samples, 0.05%)</title><rect x="754.0" y="2037" width="0.5" height="15.0" fill="rgb(222,86,9)" rx="2" ry="2" />
<text  x="756.95" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (2 samples, 0.01%)</title><rect x="200.8" y="1701" width="0.1" height="15.0" fill="rgb(246,205,49)" rx="2" ry="2" />
<text  x="203.82" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (547 samples, 2.93%)</title><rect x="55.5" y="1957" width="34.5" height="15.0" fill="rgb(211,57,33)" rx="2" ry="2" />
<text  x="58.51" y="1967.5" >[u..</text>
</g>
<g >
<title>[unknown] (11 samples, 0.06%)</title><rect x="804.2" y="1989" width="0.7" height="15.0" fill="rgb(239,26,14)" rx="2" ry="2" />
<text  x="807.20" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (424 samples, 2.27%)</title><rect x="189.5" y="1877" width="26.7" height="15.0" fill="rgb(251,127,2)" rx="2" ry="2" />
<text  x="192.46" y="1887.5" >s..</text>
</g>
<g >
<title>smp_call_function_many (17 samples, 0.09%)</title><rect x="928.7" y="1845" width="1.1" height="15.0" fill="rgb(207,165,28)" rx="2" ry="2" />
<text  x="931.74" y="1855.5" ></text>
</g>
<g >
<title>from_json&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; (2 samples, 0.01%)</title><rect x="521.1" y="1957" width="0.1" height="15.0" fill="rgb(240,96,15)" rx="2" ry="2" />
<text  x="524.10" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (66 samples, 0.35%)</title><rect x="196.3" y="1621" width="4.2" height="15.0" fill="rgb(225,193,20)" rx="2" ry="2" />
<text  x="199.34" y="1631.5" ></text>
</g>
<g >
<title>__do_munmap (4 samples, 0.02%)</title><rect x="751.1" y="1909" width="0.3" height="15.0" fill="rgb(212,23,45)" rx="2" ry="2" />
<text  x="754.11" y="1919.5" ></text>
</g>
<g >
<title>__asan::AsanTSDGet (22 samples, 0.12%)</title><rect x="113.4" y="2037" width="1.4" height="15.0" fill="rgb(253,164,51)" rx="2" ry="2" />
<text  x="116.39" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (81 samples, 0.43%)</title><rect x="156.4" y="1749" width="5.2" height="15.0" fill="rgb(218,150,32)" rx="2" ry="2" />
<text  x="159.44" y="1759.5" ></text>
</g>
<g >
<title>fasttext::Vector::addRow (27 samples, 0.14%)</title><rect x="321.0" y="1973" width="1.7" height="15.0" fill="rgb(239,15,3)" rx="2" ry="2" />
<text  x="324.00" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (323 samples, 1.73%)</title><rect x="55.6" y="245" width="20.4" height="15.0" fill="rgb(221,52,34)" rx="2" ry="2" />
<text  x="58.57" y="255.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (2 samples, 0.01%)</title><rect x="159.0" y="1669" width="0.1" height="15.0" fill="rgb(244,15,29)" rx="2" ry="2" />
<text  x="161.97" y="1679.5" ></text>
</g>
<g >
<title>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::dump (3 samples, 0.02%)</title><rect x="500.5" y="1941" width="0.2" height="15.0" fill="rgb(217,152,1)" rx="2" ry="2" />
<text  x="503.52" y="1951.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (13 samples, 0.07%)</title><rect x="566.2" y="1877" width="0.9" height="15.0" fill="rgb(213,125,20)" rx="2" ry="2" />
<text  x="569.23" y="1887.5" ></text>
</g>
<g >
<title>fasttext::QuantMatrix::addRowToVector (4 samples, 0.02%)</title><rect x="787.3" y="2037" width="0.2" height="15.0" fill="rgb(206,123,45)" rx="2" ry="2" />
<text  x="790.28" y="2047.5" ></text>
</g>
<g >
<title>alloc_pages_vma (9 samples, 0.05%)</title><rect x="482.3" y="1845" width="0.6" height="15.0" fill="rgb(242,163,47)" rx="2" ry="2" />
<text  x="485.34" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (2 samples, 0.01%)</title><rect x="162.0" y="1797" width="0.1" height="15.0" fill="rgb(243,194,50)" rx="2" ry="2" />
<text  x="165.00" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="188.3" y="1797" width="0.1" height="15.0" fill="rgb(239,77,54)" rx="2" ry="2" />
<text  x="191.26" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1187.3" y="933" width="0.3" height="15.0" fill="rgb(206,30,24)" rx="2" ry="2" />
<text  x="1190.29" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (100 samples, 0.53%)</title><rect x="132.4" y="1605" width="6.3" height="15.0" fill="rgb(212,102,36)" rx="2" ry="2" />
<text  x="135.39" y="1615.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (2 samples, 0.01%)</title><rect x="86.8" y="1717" width="0.1" height="15.0" fill="rgb(245,163,23)" rx="2" ry="2" />
<text  x="89.82" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_expression_term&lt;false, false&gt; (2 samples, 0.01%)</title><rect x="216.0" y="1717" width="0.1" height="15.0" fill="rgb(205,63,30)" rx="2" ry="2" />
<text  x="218.97" y="1727.5" ></text>
</g>
<g >
<title>do_page_fault (23 samples, 0.12%)</title><rect x="54.1" y="2005" width="1.4" height="15.0" fill="rgb(233,222,21)" rx="2" ry="2" />
<text  x="57.06" y="2015.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (655 samples, 3.50%)</title><rect x="1145.7" y="2053" width="41.3" height="15.0" fill="rgb(213,123,8)" rx="2" ry="2" />
<text  x="1148.69" y="2063.5" >std..</text>
</g>
<g >
<title>tlb_flush_mmu (11 samples, 0.06%)</title><rect x="504.9" y="1925" width="0.7" height="15.0" fill="rgb(224,147,34)" rx="2" ry="2" />
<text  x="507.94" y="1935.5" ></text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.02%)</title><rect x="176.1" y="1589" width="0.2" height="15.0" fill="rgb(214,76,29)" rx="2" ry="2" />
<text  x="179.07" y="1599.5" ></text>
</g>
<g >
<title>do_group_exit (5 samples, 0.03%)</title><rect x="1095.9" y="2005" width="0.3" height="15.0" fill="rgb(238,7,1)" rx="2" ry="2" />
<text  x="1098.89" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.9" y="965" width="0.1" height="15.0" fill="rgb(226,60,32)" rx="2" ry="2" />
<text  x="1190.85" y="975.5" ></text>
</g>
<g >
<title>std::operator&gt;&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (8 samples, 0.04%)</title><rect x="800.9" y="2005" width="0.5" height="15.0" fill="rgb(238,31,7)" rx="2" ry="2" />
<text  x="803.85" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="162.4" y="1445" width="0.2" height="15.0" fill="rgb(209,0,47)" rx="2" ry="2" />
<text  x="165.44" y="1455.5" ></text>
</g>
<g >
<title>__handle_mm_fault (13 samples, 0.07%)</title><rect x="748.0" y="1957" width="0.8" height="15.0" fill="rgb(220,42,39)" rx="2" ry="2" />
<text  x="751.02" y="1967.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (1,268 samples, 6.78%)</title><rect x="1012.5" y="2053" width="80.0" height="15.0" fill="rgb(253,108,53)" rx="2" ry="2" />
<text  x="1015.50" y="2063.5" >__sanitiz..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (98 samples, 0.52%)</title><rect x="189.5" y="1717" width="6.2" height="15.0" fill="rgb(215,76,1)" rx="2" ry="2" />
<text  x="192.52" y="1727.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (4 samples, 0.02%)</title><rect x="87.3" y="1797" width="0.2" height="15.0" fill="rgb(207,46,46)" rx="2" ry="2" />
<text  x="90.26" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.0" y="501" width="0.2" height="15.0" fill="rgb(210,19,27)" rx="2" ry="2" />
<text  x="1191.04" y="511.5" ></text>
</g>
<g >
<title>__asan::AsanTSDGet (4 samples, 0.02%)</title><rect x="567.1" y="1877" width="0.2" height="15.0" fill="rgb(238,45,37)" rx="2" ry="2" />
<text  x="570.05" y="1887.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt; &gt;::_M_manager (2 samples, 0.01%)</title><rect x="163.3" y="1925" width="0.1" height="15.0" fill="rgb(222,157,54)" rx="2" ry="2" />
<text  x="166.26" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="162.4" y="1669" width="0.2" height="15.0" fill="rgb(242,104,34)" rx="2" ry="2" />
<text  x="165.44" y="1679.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (4 samples, 0.02%)</title><rect x="467.9" y="1925" width="0.2" height="15.0" fill="rgb(241,166,27)" rx="2" ry="2" />
<text  x="470.89" y="1935.5" ></text>
</g>
<g >
<title>Eigen::internal::product_evaluator&lt;Eigen::Product&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt;, 0&gt;, 8, Eigen::DenseShape, Eigen::DenseShape, float, float&gt;::product_evaluator (167 samples, 0.89%)</title><rect x="481.0" y="1957" width="10.6" height="15.0" fill="rgb(214,25,29)" rx="2" ry="2" />
<text  x="484.02" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.9" y="293" width="0.1" height="15.0" fill="rgb(230,50,28)" rx="2" ry="2" />
<text  x="1190.85" y="303.5" ></text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.02%)</title><rect x="135.8" y="1557" width="0.2" height="15.0" fill="rgb(247,50,5)" rx="2" ry="2" />
<text  x="138.80" y="1567.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotPut (28 samples, 0.15%)</title><rect x="1092.5" y="2053" width="1.8" height="15.0" fill="rgb(223,40,6)" rx="2" ry="2" />
<text  x="1095.54" y="2063.5" ></text>
</g>
<g >
<title>__sanitizer::internal_mmap (13 samples, 0.07%)</title><rect x="750.8" y="2037" width="0.8" height="15.0" fill="rgb(225,19,6)" rx="2" ry="2" />
<text  x="753.80" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (74 samples, 0.40%)</title><rect x="200.8" y="1717" width="4.7" height="15.0" fill="rgb(243,57,0)" rx="2" ry="2" />
<text  x="203.82" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1187.3" y="1013" width="0.3" height="15.0" fill="rgb(214,115,5)" rx="2" ry="2" />
<text  x="1190.29" y="1023.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotPut (18 samples, 0.10%)</title><rect x="1178.4" y="2037" width="1.1" height="15.0" fill="rgb(254,194,9)" rx="2" ry="2" />
<text  x="1181.39" y="2047.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (2 samples, 0.01%)</title><rect x="478.2" y="1941" width="0.1" height="15.0" fill="rgb(243,51,7)" rx="2" ry="2" />
<text  x="481.17" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.7" y="1733" width="0.3" height="15.0" fill="rgb(224,82,7)" rx="2" ry="2" />
<text  x="1190.66" y="1743.5" ></text>
</g>
<g >
<title>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::dump (3 samples, 0.02%)</title><rect x="500.5" y="1973" width="0.2" height="15.0" fill="rgb(221,202,18)" rx="2" ry="2" />
<text  x="503.52" y="1983.5" ></text>
</g>
<g >
<title>native_flush_tlb_others (2 samples, 0.01%)</title><rect x="505.2" y="1893" width="0.1" height="15.0" fill="rgb(249,212,23)" rx="2" ry="2" />
<text  x="508.19" y="1903.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (4 samples, 0.02%)</title><rect x="752.6" y="2005" width="0.3" height="15.0" fill="rgb(216,75,9)" rx="2" ry="2" />
<text  x="755.63" y="2015.5" ></text>
</g>
<g >
<title>operator new (29 samples, 0.16%)</title><rect x="583.2" y="1861" width="1.8" height="15.0" fill="rgb(244,184,39)" rx="2" ry="2" />
<text  x="586.21" y="1871.5" ></text>
</g>
<g >
<title>__lsan::CollectIgnoredCb (7 samples, 0.04%)</title><rect x="502.5" y="2037" width="0.4" height="15.0" fill="rgb(219,124,26)" rx="2" ry="2" />
<text  x="505.48" y="2047.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::do_tolower (2 samples, 0.01%)</title><rect x="183.1" y="1637" width="0.1" height="15.0" fill="rgb(218,42,17)" rx="2" ry="2" />
<text  x="186.08" y="1647.5" ></text>
</g>
<g >
<title>on_each_cpu_cond_mask (2 samples, 0.01%)</title><rect x="505.2" y="1877" width="0.1" height="15.0" fill="rgb(210,11,10)" rx="2" ry="2" />
<text  x="508.19" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.02%)</title><rect x="750.5" y="2021" width="0.3" height="15.0" fill="rgb(217,91,33)" rx="2" ry="2" />
<text  x="753.55" y="2031.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (2 samples, 0.01%)</title><rect x="90.2" y="1957" width="0.1" height="15.0" fill="rgb(233,129,24)" rx="2" ry="2" />
<text  x="93.16" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (101 samples, 0.54%)</title><rect x="132.4" y="1669" width="6.4" height="15.0" fill="rgb(254,15,2)" rx="2" ry="2" />
<text  x="135.39" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.0" y="1973" width="0.2" height="15.0" fill="rgb(243,133,21)" rx="2" ry="2" />
<text  x="1191.04" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1187.3" y="1141" width="0.3" height="15.0" fill="rgb(245,113,46)" rx="2" ry="2" />
<text  x="1190.29" y="1151.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.04%)</title><rect x="182.0" y="1621" width="0.4" height="15.0" fill="rgb(237,110,4)" rx="2" ry="2" />
<text  x="185.01" y="1631.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (62 samples, 0.33%)</title><rect x="791.5" y="2005" width="3.9" height="15.0" fill="rgb(212,95,46)" rx="2" ry="2" />
<text  x="794.51" y="2015.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_Alloc_node&gt; (3 samples, 0.02%)</title><rect x="501.5" y="1797" width="0.2" height="15.0" fill="rgb(219,64,18)" rx="2" ry="2" />
<text  x="504.53" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (338 samples, 1.81%)</title><rect x="55.6" y="949" width="21.3" height="15.0" fill="rgb(235,176,15)" rx="2" ry="2" />
<text  x="58.57" y="959.5" >[..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.0" y="1509" width="0.2" height="15.0" fill="rgb(251,212,51)" rx="2" ry="2" />
<text  x="1191.04" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (77 samples, 0.41%)</title><rect x="168.2" y="1621" width="4.9" height="15.0" fill="rgb(237,192,35)" rx="2" ry="2" />
<text  x="171.25" y="1631.5" ></text>
</g>
<g >
<title>syscall (10 samples, 0.05%)</title><rect x="27.3" y="2005" width="0.6" height="15.0" fill="rgb(236,146,21)" rx="2" ry="2" />
<text  x="30.30" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1187.9" y="837" width="0.1" height="15.0" fill="rgb(249,159,19)" rx="2" ry="2" />
<text  x="1190.85" y="847.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="215.8" y="1701" width="0.2" height="15.0" fill="rgb(240,182,23)" rx="2" ry="2" />
<text  x="218.84" y="1711.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (6 samples, 0.03%)</title><rect x="927.4" y="1909" width="0.4" height="15.0" fill="rgb(235,92,38)" rx="2" ry="2" />
<text  x="930.41" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="162.8" y="805" width="0.1" height="15.0" fill="rgb(236,72,28)" rx="2" ry="2" />
<text  x="165.82" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1187.9" y="549" width="0.1" height="15.0" fill="rgb(230,39,16)" rx="2" ry="2" />
<text  x="1190.85" y="559.5" ></text>
</g>
<g >
<title>handle_mm_fault (20 samples, 0.11%)</title><rect x="675.3" y="1797" width="1.3" height="15.0" fill="rgb(216,179,32)" rx="2" ry="2" />
<text  x="678.30" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (79 samples, 0.42%)</title><rect x="211.1" y="1749" width="5.0" height="15.0" fill="rgb(236,98,4)" rx="2" ry="2" />
<text  x="214.11" y="1759.5" ></text>
</g>
<g >
<title>unmap_region (2 samples, 0.01%)</title><rect x="751.2" y="1893" width="0.2" height="15.0" fill="rgb(231,218,27)" rx="2" ry="2" />
<text  x="754.24" y="1903.5" ></text>
</g>
<g >
<title>operator delete[] (61 samples, 0.33%)</title><rect x="1179.7" y="2037" width="3.9" height="15.0" fill="rgb(222,103,20)" rx="2" ry="2" />
<text  x="1182.71" y="2047.5" ></text>
</g>
<g >
<title>unmap_vmas (2 samples, 0.01%)</title><rect x="1095.3" y="1893" width="0.1" height="15.0" fill="rgb(228,204,9)" rx="2" ry="2" />
<text  x="1098.25" y="1903.5" ></text>
</g>
<g >
<title>__pthread_getspecific (9 samples, 0.05%)</title><rect x="570.4" y="1877" width="0.6" height="15.0" fill="rgb(240,206,54)" rx="2" ry="2" />
<text  x="573.40" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.04%)</title><rect x="162.4" y="1749" width="0.5" height="15.0" fill="rgb(214,134,13)" rx="2" ry="2" />
<text  x="165.44" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_Compiler (393 samples, 2.10%)</title><rect x="163.4" y="1925" width="24.8" height="15.0" fill="rgb(237,172,9)" rx="2" ry="2" />
<text  x="166.39" y="1935.5" >s..</text>
</g>
<g >
<title>[unknown] (322 samples, 1.72%)</title><rect x="55.6" y="181" width="20.3" height="15.0" fill="rgb(229,64,40)" rx="2" ry="2" />
<text  x="58.57" y="191.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::addSubwords (342 samples, 1.83%)</title><rect x="523.8" y="1909" width="21.6" height="15.0" fill="rgb(214,12,7)" rx="2" ry="2" />
<text  x="526.81" y="1919.5" >f..</text>
</g>
<g >
<title>__asan::GetCurrentThread (4 samples, 0.02%)</title><rect x="202.8" y="1605" width="0.2" height="15.0" fill="rgb(250,103,54)" rx="2" ry="2" />
<text  x="205.77" y="1615.5" ></text>
</g>
<g >
<title>generic_file_read_iter (2 samples, 0.01%)</title><rect x="121.0" y="1893" width="0.2" height="15.0" fill="rgb(250,85,30)" rx="2" ry="2" />
<text  x="124.03" y="1903.5" ></text>
</g>
<g >
<title>onmt::unicode::is_letter (214 samples, 1.14%)</title><rect x="679.1" y="1861" width="13.5" height="15.0" fill="rgb(251,87,4)" rx="2" ry="2" />
<text  x="682.09" y="1871.5" ></text>
</g>
<g >
<title>__do_page_fault (4 samples, 0.02%)</title><rect x="104.4" y="1989" width="0.3" height="15.0" fill="rgb(238,135,37)" rx="2" ry="2" />
<text  x="107.43" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.0" y="965" width="0.2" height="15.0" fill="rgb(254,26,4)" rx="2" ry="2" />
<text  x="1191.04" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.0" y="1957" width="0.2" height="15.0" fill="rgb(237,163,7)" rx="2" ry="2" />
<text  x="1190.03" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (329 samples, 1.76%)</title><rect x="55.6" y="501" width="20.7" height="15.0" fill="rgb(234,79,0)" rx="2" ry="2" />
<text  x="58.57" y="511.5" ></text>
</g>
<g >
<title>on_each_cpu_cond_mask (22 samples, 0.12%)</title><rect x="928.6" y="1877" width="1.4" height="15.0" fill="rgb(254,198,46)" rx="2" ry="2" />
<text  x="931.61" y="1887.5" ></text>
</g>
<g >
<title>alloc_cpumask_var_node (2 samples, 0.01%)</title><rect x="929.9" y="1845" width="0.1" height="15.0" fill="rgb(234,47,20)" rx="2" ry="2" />
<text  x="932.87" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.0" y="869" width="0.2" height="15.0" fill="rgb(228,149,8)" rx="2" ry="2" />
<text  x="1191.04" y="879.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (2 samples, 0.01%)</title><rect x="493.3" y="1877" width="0.2" height="15.0" fill="rgb(237,78,27)" rx="2" ry="2" />
<text  x="496.32" y="1887.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (2 samples, 0.01%)</title><rect x="84.3" y="1477" width="0.1" height="15.0" fill="rgb(238,85,25)" rx="2" ry="2" />
<text  x="87.29" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="188.2" y="1909" width="0.2" height="15.0" fill="rgb(212,8,51)" rx="2" ry="2" />
<text  x="191.19" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (682 samples, 3.65%)</title><rect x="55.5" y="2037" width="43.1" height="15.0" fill="rgb(210,179,24)" rx="2" ry="2" />
<text  x="58.51" y="2047.5" >[unk..</text>
</g>
<g >
<title>mem_cgroup_throttle_swaprate (4 samples, 0.02%)</title><rect x="927.2" y="1909" width="0.2" height="15.0" fill="rgb(205,53,27)" rx="2" ry="2" />
<text  x="930.16" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (2 samples, 0.01%)</title><rect x="150.5" y="1637" width="0.1" height="15.0" fill="rgb(237,227,6)" rx="2" ry="2" />
<text  x="153.51" y="1647.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (3 samples, 0.02%)</title><rect x="78.2" y="1157" width="0.2" height="15.0" fill="rgb(253,166,39)" rx="2" ry="2" />
<text  x="81.23" y="1167.5" ></text>
</g>
<g >
<title>[unknown] (330 samples, 1.77%)</title><rect x="55.6" y="533" width="20.8" height="15.0" fill="rgb(252,57,28)" rx="2" ry="2" />
<text  x="58.57" y="543.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (4 samples, 0.02%)</title><rect x="863.0" y="2005" width="0.2" height="15.0" fill="rgb(242,186,7)" rx="2" ry="2" />
<text  x="865.97" y="2015.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (2 samples, 0.01%)</title><rect x="864.0" y="2021" width="0.1" height="15.0" fill="rgb(247,154,44)" rx="2" ry="2" />
<text  x="866.98" y="2031.5" ></text>
</g>
<g >
<title>__asan_memmove (2 samples, 0.01%)</title><rect x="314.1" y="1941" width="0.1" height="15.0" fill="rgb(216,63,54)" rx="2" ry="2" />
<text  x="317.12" y="1951.5" ></text>
</g>
<g >
<title>unmap_region (2 samples, 0.01%)</title><rect x="88.0" y="1749" width="0.1" height="15.0" fill="rgb(245,19,20)" rx="2" ry="2" />
<text  x="91.02" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1187.3" y="1557" width="0.3" height="15.0" fill="rgb(250,175,7)" rx="2" ry="2" />
<text  x="1190.29" y="1567.5" ></text>
</g>
<g >
<title>futex_wake (7 samples, 0.04%)</title><rect x="27.4" y="1925" width="0.4" height="15.0" fill="rgb(228,16,5)" rx="2" ry="2" />
<text  x="30.36" y="1935.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (2 samples, 0.01%)</title><rect x="203.9" y="1605" width="0.1" height="15.0" fill="rgb(233,197,10)" rx="2" ry="2" />
<text  x="206.91" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1188.0" y="2005" width="0.2" height="15.0" fill="rgb(228,31,14)" rx="2" ry="2" />
<text  x="1191.04" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="162.8" y="1237" width="0.1" height="15.0" fill="rgb(224,171,4)" rx="2" ry="2" />
<text  x="165.75" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (2 samples, 0.01%)</title><rect x="150.5" y="1653" width="0.1" height="15.0" fill="rgb(228,93,31)" rx="2" ry="2" />
<text  x="153.51" y="1663.5" ></text>
</g>
<g >
<title>native_flush_tlb_others (2 samples, 0.01%)</title><rect x="89.9" y="1765" width="0.1" height="15.0" fill="rgb(211,71,52)" rx="2" ry="2" />
<text  x="92.91" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (389 samples, 2.08%)</title><rect x="131.8" y="1813" width="24.6" height="15.0" fill="rgb(211,131,36)" rx="2" ry="2" />
<text  x="134.83" y="1823.5" >s..</text>
</g>
<g >
<title>tlb_flush_mmu_free (2 samples, 0.01%)</title><rect x="751.6" y="1877" width="0.1" height="15.0" fill="rgb(236,112,53)" rx="2" ry="2" />
<text  x="754.62" y="1887.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="121.0" y="2005" width="0.2" height="15.0" fill="rgb(211,39,29)" rx="2" ry="2" />
<text  x="124.03" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="162.8" y="997" width="0.1" height="15.0" fill="rgb(229,169,11)" rx="2" ry="2" />
<text  x="165.82" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1187.9" y="117" width="0.1" height="15.0" fill="rgb(227,117,17)" rx="2" ry="2" />
<text  x="1190.85" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.0" y="885" width="0.2" height="15.0" fill="rgb(231,168,9)" rx="2" ry="2" />
<text  x="1191.04" y="895.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.02%)</title><rect x="154.5" y="1637" width="0.3" height="15.0" fill="rgb(208,92,5)" rx="2" ry="2" />
<text  x="157.55" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.6" y="1925" width="0.4" height="15.0" fill="rgb(251,164,35)" rx="2" ry="2" />
<text  x="1190.60" y="1935.5" ></text>
</g>
<g >
<title>__sanitizer::mem_is_zero (2 samples, 0.01%)</title><rect x="471.7" y="1925" width="0.1" height="15.0" fill="rgb(207,79,51)" rx="2" ry="2" />
<text  x="474.67" y="1935.5" ></text>
</g>
<g >
<title>handle_mm_fault (26 samples, 0.14%)</title><rect x="491.9" y="1909" width="1.7" height="15.0" fill="rgb(239,84,32)" rx="2" ry="2" />
<text  x="494.94" y="1919.5" ></text>
</g>
<g >
<title>alloc_cpumask_var_node (2 samples, 0.01%)</title><rect x="928.6" y="1861" width="0.1" height="15.0" fill="rgb(235,82,33)" rx="2" ry="2" />
<text  x="931.61" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1187.2" y="1829" width="0.4" height="15.0" fill="rgb(208,80,45)" rx="2" ry="2" />
<text  x="1190.22" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1188.0" y="1669" width="0.2" height="15.0" fill="rgb(245,198,37)" rx="2" ry="2" />
<text  x="1191.04" y="1679.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::append (7 samples, 0.04%)</title><rect x="634.8" y="1877" width="0.4" height="15.0" fill="rgb(253,57,5)" rx="2" ry="2" />
<text  x="637.78" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1187.3" y="549" width="0.3" height="15.0" fill="rgb(239,83,31)" rx="2" ry="2" />
<text  x="1190.29" y="559.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::computeSubwords (6 samples, 0.03%)</title><rect x="520.1" y="1893" width="0.4" height="15.0" fill="rgb(248,220,54)" rx="2" ry="2" />
<text  x="523.09" y="1903.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (14 samples, 0.07%)</title><rect x="1109.0" y="2037" width="0.9" height="15.0" fill="rgb(244,139,24)" rx="2" ry="2" />
<text  x="1112.01" y="2047.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.02%)</title><rect x="143.1" y="1589" width="0.3" height="15.0" fill="rgb(219,199,11)" rx="2" ry="2" />
<text  x="146.12" y="1599.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (2 samples, 0.01%)</title><rect x="660.4" y="1717" width="0.1" height="15.0" fill="rgb(231,80,4)" rx="2" ry="2" />
<text  x="663.41" y="1727.5" ></text>
</g>
<g >
<title>alloc_pages_vma (18 samples, 0.10%)</title><rect x="492.2" y="1877" width="1.1" height="15.0" fill="rgb(235,61,1)" rx="2" ry="2" />
<text  x="495.19" y="1887.5" ></text>
</g>
<g >
<title>free_unref_page_list (3 samples, 0.02%)</title><rect x="505.4" y="1861" width="0.2" height="15.0" fill="rgb(211,158,36)" rx="2" ry="2" />
<text  x="508.38" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="217.3" y="1941" width="0.3" height="15.0" fill="rgb(230,18,33)" rx="2" ry="2" />
<text  x="220.29" y="1951.5" ></text>
</g>
<g >
<title>__asan::Allocator::Allocate (1,014 samples, 5.42%)</title><rect x="866.3" y="2053" width="64.0" height="15.0" fill="rgb(220,23,2)" rx="2" ry="2" />
<text  x="869.31" y="2063.5" >__asan:..</text>
</g>
<g >
<title>__vm_munmap (2 samples, 0.01%)</title><rect x="84.0" y="1509" width="0.1" height="15.0" fill="rgb(245,217,48)" rx="2" ry="2" />
<text  x="86.98" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.02%)</title><rect x="162.7" y="1365" width="0.2" height="15.0" fill="rgb(226,47,50)" rx="2" ry="2" />
<text  x="165.69" y="1375.5" ></text>
</g>
<g >
<title>[unknown] (331 samples, 1.77%)</title><rect x="55.6" y="597" width="20.9" height="15.0" fill="rgb(226,133,42)" rx="2" ry="2" />
<text  x="58.57" y="607.5" ></text>
</g>
<g >
<title>std::future&lt;boost::optional&lt;TDocument&gt; &gt;::get (12 samples, 0.06%)</title><rect x="131.0" y="1989" width="0.8" height="15.0" fill="rgb(234,98,54)" rx="2" ry="2" />
<text  x="134.00" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (81 samples, 0.43%)</title><rect x="178.3" y="1733" width="5.2" height="15.0" fill="rgb(226,51,5)" rx="2" ry="2" />
<text  x="181.35" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (81 samples, 0.43%)</title><rect x="178.3" y="1701" width="5.2" height="15.0" fill="rgb(244,110,23)" rx="2" ry="2" />
<text  x="181.35" y="1711.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_Alloc_node&gt; (3 samples, 0.02%)</title><rect x="501.5" y="1941" width="0.2" height="15.0" fill="rgb(211,159,14)" rx="2" ry="2" />
<text  x="504.53" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (75 samples, 0.40%)</title><rect x="145.1" y="1637" width="4.8" height="15.0" fill="rgb(228,103,16)" rx="2" ry="2" />
<text  x="148.14" y="1647.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (7 samples, 0.04%)</title><rect x="177.3" y="1589" width="0.4" height="15.0" fill="rgb(253,193,3)" rx="2" ry="2" />
<text  x="180.27" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (57 samples, 0.30%)</title><rect x="164.4" y="1573" width="3.6" height="15.0" fill="rgb(243,7,24)" rx="2" ry="2" />
<text  x="167.40" y="1583.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (54 samples, 0.29%)</title><rect x="140.9" y="1605" width="3.4" height="15.0" fill="rgb(226,63,19)" rx="2" ry="2" />
<text  x="143.85" y="1615.5" ></text>
</g>
<g >
<title>__asan_memcpy (4 samples, 0.02%)</title><rect x="175.8" y="1589" width="0.3" height="15.0" fill="rgb(223,56,28)" rx="2" ry="2" />
<text  x="178.82" y="1599.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (13 samples, 0.07%)</title><rect x="468.3" y="1925" width="0.8" height="15.0" fill="rgb(242,76,26)" rx="2" ry="2" />
<text  x="471.33" y="1935.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (240 samples, 1.28%)</title><rect x="55.6" y="37" width="15.1" height="15.0" fill="rgb(238,133,47)" rx="2" ry="2" />
<text  x="58.57" y="47.5" ></text>
</g>
<g >
<title>__asan::Allocator::GetAsanChunkByAddrFastLocked (9 samples, 0.05%)</title><rect x="92.2" y="2021" width="0.6" height="15.0" fill="rgb(243,201,29)" rx="2" ry="2" />
<text  x="95.18" y="2031.5" ></text>
</g>
<g >
<title>__interceptor_memcpy (6 samples, 0.03%)</title><rect x="1120.0" y="2037" width="0.4" height="15.0" fill="rgb(241,103,46)" rx="2" ry="2" />
<text  x="1123.00" y="2047.5" ></text>
</g>
<g >
<title>__asan_memcpy (4 samples, 0.02%)</title><rect x="198.2" y="1589" width="0.2" height="15.0" fill="rgb(237,174,44)" rx="2" ry="2" />
<text  x="201.17" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="162.4" y="1573" width="0.2" height="15.0" fill="rgb(207,151,50)" rx="2" ry="2" />
<text  x="165.44" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (333 samples, 1.78%)</title><rect x="55.6" y="661" width="21.0" height="15.0" fill="rgb(226,77,29)" rx="2" ry="2" />
<text  x="58.57" y="671.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::computeSubwords (332 samples, 1.78%)</title><rect x="524.4" y="1893" width="21.0" height="15.0" fill="rgb(215,134,19)" rx="2" ry="2" />
<text  x="527.44" y="1903.5" ></text>
</g>
<g >
<title>handle_mm_fault (94 samples, 0.50%)</title><rect x="924.3" y="1989" width="5.9" height="15.0" fill="rgb(212,63,3)" rx="2" ry="2" />
<text  x="927.26" y="1999.5" ></text>
</g>
<g >
<title>__madvise (18 samples, 0.10%)</title><rect x="504.9" y="2037" width="1.1" height="15.0" fill="rgb(225,41,44)" rx="2" ry="2" />
<text  x="507.88" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (2 samples, 0.01%)</title><rect x="216.1" y="1797" width="0.1" height="15.0" fill="rgb(213,196,25)" rx="2" ry="2" />
<text  x="219.09" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (3 samples, 0.02%)</title><rect x="187.5" y="1797" width="0.2" height="15.0" fill="rgb(218,88,32)" rx="2" ry="2" />
<text  x="190.50" y="1807.5" ></text>
</g>
<g >
<title>do_syscall_64 (5 samples, 0.03%)</title><rect x="751.6" y="2005" width="0.3" height="15.0" fill="rgb(222,50,48)" rx="2" ry="2" />
<text  x="754.62" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="162.6" y="1685" width="0.3" height="15.0" fill="rgb(218,211,16)" rx="2" ry="2" />
<text  x="165.63" y="1695.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (3 samples, 0.02%)</title><rect x="146.5" y="1605" width="0.2" height="15.0" fill="rgb(243,209,5)" rx="2" ry="2" />
<text  x="149.47" y="1615.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.01%)</title><rect x="154.4" y="1637" width="0.1" height="15.0" fill="rgb(225,190,27)" rx="2" ry="2" />
<text  x="157.42" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="162.4" y="1541" width="0.2" height="15.0" fill="rgb(248,196,48)" rx="2" ry="2" />
<text  x="165.44" y="1551.5" ></text>
</g>
<g >
<title>GetHost (456 samples, 2.44%)</title><rect x="188.8" y="1973" width="28.8" height="15.0" fill="rgb(246,169,0)" rx="2" ry="2" />
<text  x="191.82" y="1983.5" >Ge..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.05%)</title><rect x="131.2" y="1957" width="0.6" height="15.0" fill="rgb(249,34,0)" rx="2" ry="2" />
<text  x="134.19" y="1967.5" ></text>
</g>
<g >
<title>smp_call_function_many (2 samples, 0.01%)</title><rect x="89.9" y="1717" width="0.1" height="15.0" fill="rgb(241,210,43)" rx="2" ry="2" />
<text  x="92.91" y="1727.5" ></text>
</g>
<g >
<title>virtual thunk to std::__cxx11::basic_istringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_istringstream (3 samples, 0.02%)</title><rect x="866.1" y="2037" width="0.2" height="15.0" fill="rgb(246,131,53)" rx="2" ry="2" />
<text  x="869.12" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.2" y="1941" width="0.4" height="15.0" fill="rgb(243,40,41)" rx="2" ry="2" />
<text  x="1190.22" y="1951.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;std::__detail::_State&lt;char&gt; const*, std::__detail::_State&lt;char&gt;*&gt; (7 samples, 0.04%)</title><rect x="132.0" y="1653" width="0.4" height="15.0" fill="rgb(246,205,13)" rx="2" ry="2" />
<text  x="134.95" y="1663.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::_M_transform (7 samples, 0.04%)</title><rect x="1145.0" y="2053" width="0.4" height="15.0" fill="rgb(252,194,6)" rx="2" ry="2" />
<text  x="1147.99" y="2063.5" ></text>
</g>
<g >
<title>std::istream::sentry::sentry (2 samples, 0.01%)</title><rect x="862.8" y="1989" width="0.1" height="15.0" fill="rgb(234,35,32)" rx="2" ry="2" />
<text  x="865.78" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1187.7" y="1797" width="0.3" height="15.0" fill="rgb(225,123,34)" rx="2" ry="2" />
<text  x="1190.66" y="1807.5" ></text>
</g>
<g >
<title>__dynamic_cast (6 samples, 0.03%)</title><rect x="174.4" y="1605" width="0.4" height="15.0" fill="rgb(253,58,2)" rx="2" ry="2" />
<text  x="177.43" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (319 samples, 1.71%)</title><rect x="55.6" y="117" width="20.1" height="15.0" fill="rgb(231,8,5)" rx="2" ry="2" />
<text  x="58.57" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.2" y="1669" width="0.4" height="15.0" fill="rgb(207,222,50)" rx="2" ry="2" />
<text  x="1190.22" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (404 samples, 2.16%)</title><rect x="55.5" y="1381" width="25.5" height="15.0" fill="rgb(213,37,38)" rx="2" ry="2" />
<text  x="58.51" y="1391.5" >[..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1187.2" y="1685" width="0.4" height="15.0" fill="rgb(243,218,40)" rx="2" ry="2" />
<text  x="1190.22" y="1695.5" ></text>
</g>
<g >
<title>onmt::unicode::is_separator (6 samples, 0.03%)</title><rect x="720.6" y="1893" width="0.3" height="15.0" fill="rgb(208,34,14)" rx="2" ry="2" />
<text  x="723.56" y="1903.5" ></text>
</g>
<g >
<title>finish_task_switch (7 samples, 0.04%)</title><rect x="131.3" y="1829" width="0.5" height="15.0" fill="rgb(231,195,22)" rx="2" ry="2" />
<text  x="134.32" y="1839.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.01%)</title><rect x="122.7" y="1877" width="0.1" height="15.0" fill="rgb(209,57,35)" rx="2" ry="2" />
<text  x="125.67" y="1887.5" ></text>
</g>
<g >
<title>nlohmann::detail::parser&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::sax_parse_internal&lt;nlohmann::detail::json_sax_dom_parser&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; (132 samples, 0.71%)</title><rect x="122.3" y="1957" width="8.3" height="15.0" fill="rgb(245,179,0)" rx="2" ry="2" />
<text  x="125.29" y="1967.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (2 samples, 0.01%)</title><rect x="524.1" y="1893" width="0.1" height="15.0" fill="rgb(205,153,30)" rx="2" ry="2" />
<text  x="527.06" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1187.3" y="1493" width="0.3" height="15.0" fill="rgb(210,1,23)" rx="2" ry="2" />
<text  x="1190.29" y="1503.5" ></text>
</g>
<g >
<title>[unknown] (517 samples, 2.77%)</title><rect x="55.5" y="1861" width="32.6" height="15.0" fill="rgb(217,106,36)" rx="2" ry="2" />
<text  x="58.51" y="1871.5" >[u..</text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (11 samples, 0.06%)</title><rect x="194.3" y="1557" width="0.7" height="15.0" fill="rgb(241,50,15)" rx="2" ry="2" />
<text  x="197.32" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (376 samples, 2.01%)</title><rect x="55.5" y="1221" width="23.7" height="15.0" fill="rgb(233,125,27)" rx="2" ry="2" />
<text  x="58.51" y="1231.5" >[..</text>
</g>
<g >
<title>[libc-2.27.so] (58 samples, 0.31%)</title><rect x="725.0" y="1877" width="3.7" height="15.0" fill="rgb(216,23,53)" rx="2" ry="2" />
<text  x="728.04" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1187.3" y="69" width="0.3" height="15.0" fill="rgb(210,147,53)" rx="2" ry="2" />
<text  x="1190.29" y="79.5" ></text>
</g>
<g >
<title>onmt::Tokenizer::tokenize (3,052 samples, 16.33%)</title><rect x="547.7" y="1925" width="192.6" height="15.0" fill="rgb(238,67,21)" rx="2" ry="2" />
<text  x="550.67" y="1935.5" >onmt::Tokenizer::tokenize</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (58 samples, 0.31%)</title><rect x="183.8" y="1733" width="3.6" height="15.0" fill="rgb(247,107,36)" rx="2" ry="2" />
<text  x="186.77" y="1743.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (14 samples, 0.07%)</title><rect x="1156.0" y="2037" width="0.9" height="15.0" fill="rgb(252,179,17)" rx="2" ry="2" />
<text  x="1159.04" y="2047.5" ></text>
</g>
<g >
<title>try_charge (3 samples, 0.02%)</title><rect x="25.5" y="1925" width="0.2" height="15.0" fill="rgb(253,134,45)" rx="2" ry="2" />
<text  x="28.53" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.02%)</title><rect x="43.1" y="2021" width="0.3" height="15.0" fill="rgb(215,18,38)" rx="2" ry="2" />
<text  x="46.14" y="2031.5" ></text>
</g>
<g >
<title>onmt::unicode::explode_utf8 (358 samples, 1.92%)</title><rect x="573.4" y="1877" width="22.6" height="15.0" fill="rgb(229,4,45)" rx="2" ry="2" />
<text  x="576.36" y="1887.5" >o..</text>
</g>
<g >
<title>[libc-2.27.so] (2 samples, 0.01%)</title><rect x="546.4" y="1925" width="0.1" height="15.0" fill="rgb(247,5,35)" rx="2" ry="2" />
<text  x="549.41" y="1935.5" ></text>
</g>
<g >
<title>onmt::ITokenizer::tokenize (3,059 samples, 16.36%)</title><rect x="547.3" y="1941" width="193.1" height="15.0" fill="rgb(246,132,30)" rx="2" ry="2" />
<text  x="550.29" y="1951.5" >onmt::ITokenizer::tokenize</text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (6 samples, 0.03%)</title><rect x="551.6" y="1877" width="0.4" height="15.0" fill="rgb(251,63,9)" rx="2" ry="2" />
<text  x="554.65" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (329 samples, 1.76%)</title><rect x="55.6" y="485" width="20.7" height="15.0" fill="rgb(245,45,45)" rx="2" ry="2" />
<text  x="58.57" y="495.5" ></text>
</g>
<g >
<title>fasttext::Vector::addVector (61 samples, 0.33%)</title><rect x="1099.7" y="2053" width="3.9" height="15.0" fill="rgb(231,161,11)" rx="2" ry="2" />
<text  x="1102.74" y="2063.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (3 samples, 0.02%)</title><rect x="195.1" y="1573" width="0.2" height="15.0" fill="rgb(222,193,42)" rx="2" ry="2" />
<text  x="198.07" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (328 samples, 1.75%)</title><rect x="55.6" y="389" width="20.7" height="15.0" fill="rgb(235,141,49)" rx="2" ry="2" />
<text  x="58.57" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1187.7" y="1605" width="0.3" height="15.0" fill="rgb(240,116,22)" rx="2" ry="2" />
<text  x="1190.73" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.0" y="629" width="0.2" height="15.0" fill="rgb(249,206,19)" rx="2" ry="2" />
<text  x="1191.04" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1187.3" y="1349" width="0.3" height="15.0" fill="rgb(253,207,6)" rx="2" ry="2" />
<text  x="1190.29" y="1359.5" ></text>
</g>
<g >
<title>__handle_mm_fault (15 samples, 0.08%)</title><rect x="54.5" y="1957" width="0.9" height="15.0" fill="rgb(238,219,43)" rx="2" ry="2" />
<text  x="57.50" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1187.3" y="1333" width="0.3" height="15.0" fill="rgb(229,26,35)" rx="2" ry="2" />
<text  x="1190.29" y="1343.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (3 samples, 0.02%)</title><rect x="462.5" y="1941" width="0.2" height="15.0" fill="rgb(217,85,20)" rx="2" ry="2" />
<text  x="465.52" y="1951.5" ></text>
</g>
<g >
<title>generic_exec_single (3 samples, 0.02%)</title><rect x="55.1" y="1797" width="0.2" height="15.0" fill="rgb(252,225,23)" rx="2" ry="2" />
<text  x="58.07" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.0" y="1365" width="0.2" height="15.0" fill="rgb(254,151,38)" rx="2" ry="2" />
<text  x="1191.04" y="1375.5" ></text>
</g>
<g >
<title>[unknown] (338 samples, 1.81%)</title><rect x="55.6" y="965" width="21.3" height="15.0" fill="rgb(221,29,32)" rx="2" ry="2" />
<text  x="58.57" y="975.5" >[..</text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (13 samples, 0.07%)</title><rect x="518.1" y="1909" width="0.9" height="15.0" fill="rgb(214,193,23)" rx="2" ry="2" />
<text  x="521.13" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.7" y="1669" width="0.3" height="15.0" fill="rgb(225,114,17)" rx="2" ry="2" />
<text  x="1190.66" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.0" y="1781" width="0.2" height="15.0" fill="rgb(249,154,52)" rx="2" ry="2" />
<text  x="1191.04" y="1791.5" ></text>
</g>
<g >
<title>__asan_memset (4 samples, 0.02%)</title><rect x="554.2" y="1893" width="0.3" height="15.0" fill="rgb(207,199,26)" rx="2" ry="2" />
<text  x="557.24" y="1903.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (4 samples, 0.02%)</title><rect x="54.6" y="1893" width="0.2" height="15.0" fill="rgb(237,113,0)" rx="2" ry="2" />
<text  x="57.56" y="1903.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (4 samples, 0.02%)</title><rect x="594.6" y="1845" width="0.3" height="15.0" fill="rgb(207,166,23)" rx="2" ry="2" />
<text  x="597.63" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1187.9" y="357" width="0.1" height="15.0" fill="rgb(248,88,47)" rx="2" ry="2" />
<text  x="1190.85" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.0" y="1029" width="0.2" height="15.0" fill="rgb(225,183,42)" rx="2" ry="2" />
<text  x="1191.04" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (151 samples, 0.81%)</title><rect x="163.7" y="1749" width="9.5" height="15.0" fill="rgb(251,40,5)" rx="2" ry="2" />
<text  x="166.70" y="1759.5" ></text>
</g>
<g >
<title>handle_mm_fault (2 samples, 0.01%)</title><rect x="497.7" y="1925" width="0.1" height="15.0" fill="rgb(251,66,34)" rx="2" ry="2" />
<text  x="500.68" y="1935.5" ></text>
</g>
<g >
<title>onmt::unicode::is_letter (227 samples, 1.21%)</title><rect x="596.4" y="1877" width="14.3" height="15.0" fill="rgb(230,77,32)" rx="2" ry="2" />
<text  x="599.40" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (397 samples, 2.12%)</title><rect x="55.5" y="1349" width="25.1" height="15.0" fill="rgb(205,46,40)" rx="2" ry="2" />
<text  x="58.51" y="1359.5" >[..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1187.9" y="1077" width="0.1" height="15.0" fill="rgb(218,226,40)" rx="2" ry="2" />
<text  x="1190.85" y="1087.5" ></text>
</g>
<g >
<title>operator delete (7 samples, 0.04%)</title><rect x="148.4" y="1605" width="0.4" height="15.0" fill="rgb(228,33,52)" rx="2" ry="2" />
<text  x="151.36" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.2" y="1701" width="0.4" height="15.0" fill="rgb(212,84,12)" rx="2" ry="2" />
<text  x="1190.22" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.0" y="1989" width="0.2" height="15.0" fill="rgb(237,92,28)" rx="2" ry="2" />
<text  x="1191.04" y="1999.5" ></text>
</g>
<g >
<title>__do_page_fault (32 samples, 0.17%)</title><rect x="491.6" y="1925" width="2.0" height="15.0" fill="rgb(212,100,34)" rx="2" ry="2" />
<text  x="494.56" y="1935.5" ></text>
</g>
<g >
<title>tlb_flush_mmu_free (3 samples, 0.02%)</title><rect x="1096.0" y="1893" width="0.2" height="15.0" fill="rgb(214,148,45)" rx="2" ry="2" />
<text  x="1099.01" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.0" y="821" width="0.2" height="15.0" fill="rgb(243,46,52)" rx="2" ry="2" />
<text  x="1191.04" y="831.5" ></text>
</g>
<g >
<title>__dynamic_cast (5 samples, 0.03%)</title><rect x="196.0" y="1621" width="0.3" height="15.0" fill="rgb(227,33,8)" rx="2" ry="2" />
<text  x="199.02" y="1631.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (4 samples, 0.02%)</title><rect x="748.1" y="1925" width="0.2" height="15.0" fill="rgb(220,83,51)" rx="2" ry="2" />
<text  x="751.08" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1187.9" y="405" width="0.1" height="15.0" fill="rgb(229,177,46)" rx="2" ry="2" />
<text  x="1190.85" y="415.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::Unwind (3 samples, 0.02%)</title><rect x="214.3" y="1669" width="0.2" height="15.0" fill="rgb(252,132,25)" rx="2" ry="2" />
<text  x="217.26" y="1679.5" ></text>
</g>
<g >
<title>operator new (11 samples, 0.06%)</title><rect x="193.5" y="1557" width="0.7" height="15.0" fill="rgb(218,157,30)" rx="2" ry="2" />
<text  x="196.50" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (78 samples, 0.42%)</title><rect x="195.7" y="1685" width="4.9" height="15.0" fill="rgb(242,136,30)" rx="2" ry="2" />
<text  x="198.70" y="1695.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::has_features (3 samples, 0.02%)</title><rect x="549.1" y="1893" width="0.2" height="15.0" fill="rgb(235,224,28)" rx="2" ry="2" />
<text  x="552.06" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (8 samples, 0.04%)</title><rect x="131.9" y="1701" width="0.5" height="15.0" fill="rgb(216,188,9)" rx="2" ry="2" />
<text  x="134.89" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (551 samples, 2.95%)</title><rect x="55.5" y="1973" width="34.8" height="15.0" fill="rgb(206,111,4)" rx="2" ry="2" />
<text  x="58.51" y="1983.5" >[u..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find (28 samples, 0.15%)</title><rect x="1143.2" y="2053" width="1.8" height="15.0" fill="rgb(205,165,14)" rx="2" ry="2" />
<text  x="1146.23" y="2063.5" ></text>
</g>
<g >
<title>do_page_fault (16 samples, 0.09%)</title><rect x="659.7" y="1829" width="1.0" height="15.0" fill="rgb(241,42,18)" rx="2" ry="2" />
<text  x="662.71" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.9" y="1237" width="0.1" height="15.0" fill="rgb(244,156,35)" rx="2" ry="2" />
<text  x="1190.85" y="1247.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (2 samples, 0.01%)</title><rect x="310.0" y="1957" width="0.1" height="15.0" fill="rgb(249,141,3)" rx="2" ry="2" />
<text  x="312.96" y="1967.5" ></text>
</g>
<g >
<title>__asan_memcpy (3 samples, 0.02%)</title><rect x="185.3" y="1653" width="0.2" height="15.0" fill="rgb(212,5,0)" rx="2" ry="2" />
<text  x="188.29" y="1663.5" ></text>
</g>
<g >
<title>__dynamic_cast (4 samples, 0.02%)</title><rect x="208.3" y="1637" width="0.3" height="15.0" fill="rgb(209,7,54)" rx="2" ry="2" />
<text  x="211.33" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1187.7" y="1845" width="0.3" height="15.0" fill="rgb(251,77,20)" rx="2" ry="2" />
<text  x="1190.66" y="1855.5" ></text>
</g>
<g >
<title>[libm-2.27.so] (2 samples, 0.01%)</title><rect x="1096.6" y="2037" width="0.2" height="15.0" fill="rgb(233,72,7)" rx="2" ry="2" />
<text  x="1099.64" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.0" y="2021" width="0.2" height="15.0" fill="rgb(249,198,10)" rx="2" ry="2" />
<text  x="1191.04" y="2031.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="84.0" y="1541" width="0.1" height="15.0" fill="rgb(247,162,6)" rx="2" ry="2" />
<text  x="86.98" y="1551.5" ></text>
</g>
<g >
<title>__asan::AsanThread::stack_bottom (2 samples, 0.01%)</title><rect x="582.1" y="1861" width="0.1" height="15.0" fill="rgb(223,41,45)" rx="2" ry="2" />
<text  x="585.07" y="1871.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="90.0" y="1957" width="0.2" height="15.0" fill="rgb(252,66,0)" rx="2" ry="2" />
<text  x="93.04" y="1967.5" ></text>
</g>
<g >
<title>page_fault (5 samples, 0.03%)</title><rect x="1096.3" y="2021" width="0.3" height="15.0" fill="rgb(230,144,37)" rx="2" ry="2" />
<text  x="1099.33" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1187.6" y="1893" width="0.4" height="15.0" fill="rgb(214,124,20)" rx="2" ry="2" />
<text  x="1190.60" y="1903.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::json_value::destroy (9 samples, 0.05%)</title><rect x="500.7" y="2005" width="0.6" height="15.0" fill="rgb(239,131,14)" rx="2" ry="2" />
<text  x="503.71" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.0" y="533" width="0.2" height="15.0" fill="rgb(250,218,36)" rx="2" ry="2" />
<text  x="1191.04" y="543.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (4 samples, 0.02%)</title><rect x="79.4" y="1253" width="0.3" height="15.0" fill="rgb(250,117,0)" rx="2" ry="2" />
<text  x="82.43" y="1263.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (15 samples, 0.08%)</title><rect x="752.9" y="2005" width="0.9" height="15.0" fill="rgb(252,135,41)" rx="2" ry="2" />
<text  x="755.88" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.9" y="1109" width="0.1" height="15.0" fill="rgb(212,95,24)" rx="2" ry="2" />
<text  x="1190.85" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.0" y="1589" width="0.2" height="15.0" fill="rgb(210,151,50)" rx="2" ry="2" />
<text  x="1191.04" y="1599.5" ></text>
</g>
<g >
<title>nlohmann::detail::input_stream_adapter::get_character (15 samples, 0.08%)</title><rect x="127.5" y="1909" width="1.0" height="15.0" fill="rgb(239,124,9)" rx="2" ry="2" />
<text  x="130.53" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (439 samples, 2.35%)</title><rect x="189.4" y="1909" width="27.7" height="15.0" fill="rgb(246,137,5)" rx="2" ry="2" />
<text  x="192.39" y="1919.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1187.3" y="485" width="0.3" height="15.0" fill="rgb(214,84,1)" rx="2" ry="2" />
<text  x="1190.29" y="495.5" ></text>
</g>
<g >
<title>__pthread_getspecific (39 samples, 0.21%)</title><rect x="506.0" y="2037" width="2.5" height="15.0" fill="rgb(247,191,41)" rx="2" ry="2" />
<text  x="509.01" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (341 samples, 1.82%)</title><rect x="55.6" y="1061" width="21.5" height="15.0" fill="rgb(233,210,23)" rx="2" ry="2" />
<text  x="58.57" y="1071.5" >[..</text>
</g>
<g >
<title>do_page_fault (3 samples, 0.02%)</title><rect x="1008.0" y="2021" width="0.2" height="15.0" fill="rgb(206,200,21)" rx="2" ry="2" />
<text  x="1011.02" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="188.3" y="1493" width="0.1" height="15.0" fill="rgb(241,78,15)" rx="2" ry="2" />
<text  x="191.32" y="1503.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (4 samples, 0.02%)</title><rect x="212.9" y="1669" width="0.2" height="15.0" fill="rgb(210,5,50)" rx="2" ry="2" />
<text  x="215.87" y="1679.5" ></text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (4 samples, 0.02%)</title><rect x="926.7" y="1925" width="0.2" height="15.0" fill="rgb(249,215,38)" rx="2" ry="2" />
<text  x="929.66" y="1935.5" ></text>
</g>
<g >
<title>nlohmann::detail::json_sax_dom_parser&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::handle_value&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (9 samples, 0.05%)</title><rect x="122.4" y="1941" width="0.5" height="15.0" fill="rgb(239,67,28)" rx="2" ry="2" />
<text  x="125.36" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1187.6" y="1989" width="0.4" height="15.0" fill="rgb(246,159,36)" rx="2" ry="2" />
<text  x="1190.60" y="1999.5" ></text>
</g>
<g >
<title>native_write_msr (2 samples, 0.01%)</title><rect x="505.2" y="1765" width="0.1" height="15.0" fill="rgb(252,37,29)" rx="2" ry="2" />
<text  x="508.19" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (319 samples, 1.71%)</title><rect x="55.6" y="85" width="20.1" height="15.0" fill="rgb(228,182,14)" rx="2" ry="2" />
<text  x="58.57" y="95.5" ></text>
</g>
<g >
<title>__do_page_fault (30 samples, 0.16%)</title><rect x="674.7" y="1813" width="1.9" height="15.0" fill="rgb(208,203,3)" rx="2" ry="2" />
<text  x="677.74" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="162.4" y="1285" width="0.2" height="15.0" fill="rgb(220,66,12)" rx="2" ry="2" />
<text  x="165.44" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (7 samples, 0.04%)</title><rect x="189.5" y="1701" width="0.5" height="15.0" fill="rgb(234,208,54)" rx="2" ry="2" />
<text  x="192.52" y="1711.5" ></text>
</g>
<g >
<title>__do_munmap (2 samples, 0.01%)</title><rect x="84.3" y="1509" width="0.1" height="15.0" fill="rgb(211,180,23)" rx="2" ry="2" />
<text  x="87.29" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="162.7" y="1381" width="0.2" height="15.0" fill="rgb(242,161,47)" rx="2" ry="2" />
<text  x="165.69" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.9" y="1349" width="0.1" height="15.0" fill="rgb(230,149,18)" rx="2" ry="2" />
<text  x="1190.85" y="1359.5" ></text>
</g>
<g >
<title>Eigen::internal::general_matrix_matrix_product&lt;long, float, 0, false, float, 1, false, 0, 1&gt;::run (131 samples, 0.70%)</title><rect x="483.3" y="1925" width="8.3" height="15.0" fill="rgb(215,145,38)" rx="2" ry="2" />
<text  x="486.29" y="1935.5" ></text>
</g>
<g >
<title>unmap_page_range (5 samples, 0.03%)</title><rect x="1095.9" y="1909" width="0.3" height="15.0" fill="rgb(206,32,20)" rx="2" ry="2" />
<text  x="1098.89" y="1919.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (92 samples, 0.49%)</title><rect x="104.7" y="2037" width="5.8" height="15.0" fill="rgb(221,225,49)" rx="2" ry="2" />
<text  x="107.68" y="2047.5" ></text>
</g>
<g >
<title>__dynamic_cast (5 samples, 0.03%)</title><rect x="213.7" y="1669" width="0.3" height="15.0" fill="rgb(228,87,36)" rx="2" ry="2" />
<text  x="216.69" y="1679.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.02%)</title><rect x="186.4" y="1653" width="0.2" height="15.0" fill="rgb(251,212,38)" rx="2" ry="2" />
<text  x="189.43" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.0" y="1733" width="0.2" height="15.0" fill="rgb(212,121,21)" rx="2" ry="2" />
<text  x="1191.04" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (417 samples, 2.23%)</title><rect x="55.5" y="1445" width="26.3" height="15.0" fill="rgb(238,80,42)" rx="2" ry="2" />
<text  x="58.51" y="1455.5" >[..</text>
</g>
<g >
<title>[unknown] (359 samples, 1.92%)</title><rect x="55.6" y="1157" width="22.6" height="15.0" fill="rgb(250,55,25)" rx="2" ry="2" />
<text  x="58.57" y="1167.5" >[..</text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt; &gt;::_M_manager (9 samples, 0.05%)</title><rect x="798.4" y="2037" width="0.6" height="15.0" fill="rgb(228,50,11)" rx="2" ry="2" />
<text  x="801.39" y="2047.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (2 samples, 0.01%)</title><rect x="88.0" y="1733" width="0.1" height="15.0" fill="rgb(212,25,10)" rx="2" ry="2" />
<text  x="91.02" y="1743.5" ></text>
</g>
<g >
<title>nlohmann::detail::parser&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::parse (132 samples, 0.71%)</title><rect x="122.3" y="1973" width="8.3" height="15.0" fill="rgb(229,204,6)" rx="2" ry="2" />
<text  x="125.29" y="1983.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (12 samples, 0.06%)</title><rect x="675.4" y="1749" width="0.7" height="15.0" fill="rgb(208,47,26)" rx="2" ry="2" />
<text  x="678.37" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="162.8" y="1093" width="0.1" height="15.0" fill="rgb(222,138,1)" rx="2" ry="2" />
<text  x="165.75" y="1103.5" ></text>
</g>
<g >
<title>__mod_node_page_state (2 samples, 0.01%)</title><rect x="25.7" y="1941" width="0.1" height="15.0" fill="rgb(237,59,0)" rx="2" ry="2" />
<text  x="28.72" y="1951.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (2 samples, 0.01%)</title><rect x="630.6" y="1765" width="0.1" height="15.0" fill="rgb(218,3,45)" rx="2" ry="2" />
<text  x="633.55" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (43 samples, 0.23%)</title><rect x="795.7" y="2021" width="2.7" height="15.0" fill="rgb(219,27,51)" rx="2" ry="2" />
<text  x="798.68" y="2031.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (2 samples, 0.01%)</title><rect x="79.1" y="1205" width="0.1" height="15.0" fill="rgb(206,21,3)" rx="2" ry="2" />
<text  x="82.12" y="1215.5" ></text>
</g>
<g >
<title>Eigen::internal::general_matrix_vector_product&lt;long, float, Eigen::internal::const_blas_data_mapper&lt;float, long, 1&gt;, 1, false, float, Eigen::internal::const_blas_data_mapper&lt;float, long, 0&gt;, false, 0&gt;::run (355 samples, 1.90%)</title><rect x="374.7" y="1925" width="22.4" height="15.0" fill="rgb(243,33,15)" rx="2" ry="2" />
<text  x="377.65" y="1935.5" >E..</text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (37 samples, 0.20%)</title><rect x="1109.9" y="2037" width="2.3" height="15.0" fill="rgb(246,154,8)" rx="2" ry="2" />
<text  x="1112.90" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.9" y="565" width="0.1" height="15.0" fill="rgb(249,164,28)" rx="2" ry="2" />
<text  x="1190.85" y="575.5" ></text>
</g>
<g >
<title>__pthread_getspecific (3 samples, 0.02%)</title><rect x="159.5" y="1669" width="0.2" height="15.0" fill="rgb(252,67,46)" rx="2" ry="2" />
<text  x="162.47" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1187.3" y="1541" width="0.3" height="15.0" fill="rgb(246,52,54)" rx="2" ry="2" />
<text  x="1190.29" y="1551.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.01%)</title><rect x="139.4" y="1621" width="0.1" height="15.0" fill="rgb(235,102,12)" rx="2" ry="2" />
<text  x="142.40" y="1631.5" ></text>
</g>
<g >
<title>__do_page_fault (5 samples, 0.03%)</title><rect x="1096.3" y="1989" width="0.3" height="15.0" fill="rgb(209,209,54)" rx="2" ry="2" />
<text  x="1099.33" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.7" y="1765" width="0.3" height="15.0" fill="rgb(245,152,11)" rx="2" ry="2" />
<text  x="1190.66" y="1775.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (3 samples, 0.02%)</title><rect x="1144.4" y="2037" width="0.2" height="15.0" fill="rgb(253,57,28)" rx="2" ry="2" />
<text  x="1147.36" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1187.3" y="869" width="0.3" height="15.0" fill="rgb(206,188,44)" rx="2" ry="2" />
<text  x="1190.29" y="879.5" ></text>
</g>
<g >
<title>operator delete (6 samples, 0.03%)</title><rect x="204.1" y="1605" width="0.4" height="15.0" fill="rgb(253,149,27)" rx="2" ry="2" />
<text  x="207.10" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.9" y="613" width="0.1" height="15.0" fill="rgb(243,51,12)" rx="2" ry="2" />
<text  x="1190.85" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (6 samples, 0.03%)</title><rect x="161.9" y="1893" width="0.3" height="15.0" fill="rgb(228,96,44)" rx="2" ry="2" />
<text  x="164.87" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (407 samples, 2.18%)</title><rect x="55.5" y="1397" width="25.7" height="15.0" fill="rgb(224,81,43)" rx="2" ry="2" />
<text  x="58.51" y="1407.5" >[..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="162.8" y="757" width="0.1" height="15.0" fill="rgb(238,186,16)" rx="2" ry="2" />
<text  x="165.82" y="767.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::set_case (2 samples, 0.01%)</title><rect x="557.7" y="1893" width="0.1" height="15.0" fill="rgb(206,104,45)" rx="2" ry="2" />
<text  x="560.71" y="1903.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (2 samples, 0.01%)</title><rect x="1012.3" y="1957" width="0.1" height="15.0" fill="rgb(250,107,41)" rx="2" ry="2" />
<text  x="1015.31" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (383 samples, 2.05%)</title><rect x="163.6" y="1829" width="24.2" height="15.0" fill="rgb(251,189,30)" rx="2" ry="2" />
<text  x="166.58" y="1839.5" >s..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (3 samples, 0.02%)</title><rect x="187.9" y="1861" width="0.2" height="15.0" fill="rgb(243,14,39)" rx="2" ry="2" />
<text  x="190.88" y="1871.5" ></text>
</g>
<g >
<title>clear_page_erms (8 samples, 0.04%)</title><rect x="675.5" y="1733" width="0.5" height="15.0" fill="rgb(240,90,8)" rx="2" ry="2" />
<text  x="678.49" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1187.3" y="373" width="0.3" height="15.0" fill="rgb(250,39,52)" rx="2" ry="2" />
<text  x="1190.29" y="383.5" ></text>
</g>
<g >
<title>Eigen::DenseCoeffsBase&lt;Eigen::Transpose&lt;Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_sum_op&lt;float, float&gt;, Eigen::Product&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0&gt; const, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const&gt;, 0&gt;::coeff (376 samples, 2.01%)</title><rect x="373.5" y="1957" width="23.7" height="15.0" fill="rgb(245,172,22)" rx="2" ry="2" />
<text  x="376.46" y="1967.5" >E..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.02%)</title><rect x="1187.8" y="1413" width="0.2" height="15.0" fill="rgb(247,31,25)" rx="2" ry="2" />
<text  x="1190.79" y="1423.5" ></text>
</g>
<g >
<title>GetHost (399 samples, 2.13%)</title><rect x="163.3" y="1957" width="25.1" height="15.0" fill="rgb(219,163,43)" rx="2" ry="2" />
<text  x="166.26" y="1967.5" >G..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (5 samples, 0.03%)</title><rect x="161.9" y="1877" width="0.3" height="15.0" fill="rgb(240,156,42)" rx="2" ry="2" />
<text  x="164.87" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.9" y="1045" width="0.1" height="15.0" fill="rgb(240,187,45)" rx="2" ry="2" />
<text  x="1190.85" y="1055.5" ></text>
</g>
<g >
<title>fasttext::Vector::norm (24 samples, 0.13%)</title><rect x="326.4" y="1989" width="1.5" height="15.0" fill="rgb(241,120,21)" rx="2" ry="2" />
<text  x="329.37" y="1999.5" ></text>
</g>
<g >
<title>__sanitizer::internal_mmap (20 samples, 0.11%)</title><rect x="1094.4" y="2053" width="1.2" height="15.0" fill="rgb(254,50,27)" rx="2" ry="2" />
<text  x="1097.37" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (91 samples, 0.49%)</title><rect x="190.0" y="1701" width="5.7" height="15.0" fill="rgb(236,36,44)" rx="2" ry="2" />
<text  x="192.96" y="1711.5" ></text>
</g>
<g >
<title>memcpy (12 samples, 0.06%)</title><rect x="634.0" y="1877" width="0.8" height="15.0" fill="rgb(217,67,31)" rx="2" ry="2" />
<text  x="637.02" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (29 samples, 0.16%)</title><rect x="861.1" y="2021" width="1.8" height="15.0" fill="rgb(248,84,18)" rx="2" ry="2" />
<text  x="864.07" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt;,  (4 samples, 0.02%)</title><rect x="188.2" y="1941" width="0.2" height="15.0" fill="rgb(209,200,18)" rx="2" ry="2" />
<text  x="191.19" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1187.3" y="1429" width="0.3" height="15.0" fill="rgb(205,1,16)" rx="2" ry="2" />
<text  x="1190.29" y="1439.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::emplace_back&lt;char const*&amp;, unsigned int&amp;&gt; (187 samples, 1.00%)</title><rect x="664.8" y="1861" width="11.8" height="15.0" fill="rgb(219,167,45)" rx="2" ry="2" />
<text  x="667.83" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.9" y="1189" width="0.1" height="15.0" fill="rgb(236,84,46)" rx="2" ry="2" />
<text  x="1190.85" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (101 samples, 0.54%)</title><rect x="132.4" y="1653" width="6.4" height="15.0" fill="rgb(234,24,20)" rx="2" ry="2" />
<text  x="135.39" y="1663.5" ></text>
</g>
<g >
<title>TDocument::~TDocument (2 samples, 0.01%)</title><rect x="43.5" y="2037" width="0.1" height="15.0" fill="rgb(227,64,19)" rx="2" ry="2" />
<text  x="46.52" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (84 samples, 0.45%)</title><rect x="205.6" y="1701" width="5.3" height="15.0" fill="rgb(213,14,17)" rx="2" ry="2" />
<text  x="208.61" y="1711.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (6 samples, 0.03%)</title><rect x="182.4" y="1621" width="0.4" height="15.0" fill="rgb(227,191,53)" rx="2" ry="2" />
<text  x="185.45" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (90 samples, 0.48%)</title><rect x="190.0" y="1605" width="5.7" height="15.0" fill="rgb(216,159,7)" rx="2" ry="2" />
<text  x="193.02" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1188.0" y="517" width="0.2" height="15.0" fill="rgb(229,83,20)" rx="2" ry="2" />
<text  x="1191.04" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1188.0" y="1717" width="0.2" height="15.0" fill="rgb(238,143,15)" rx="2" ry="2" />
<text  x="1191.04" y="1727.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (3 samples, 0.02%)</title><rect x="143.9" y="1589" width="0.2" height="15.0" fill="rgb(224,47,35)" rx="2" ry="2" />
<text  x="146.94" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.0" y="1605" width="0.2" height="15.0" fill="rgb(224,141,54)" rx="2" ry="2" />
<text  x="1191.04" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (89 samples, 0.48%)</title><rect x="138.8" y="1717" width="5.6" height="15.0" fill="rgb(214,139,43)" rx="2" ry="2" />
<text  x="141.83" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.9" y="437" width="0.1" height="15.0" fill="rgb(210,151,52)" rx="2" ry="2" />
<text  x="1190.85" y="447.5" ></text>
</g>
<g >
<title>__asan_memmove (5 samples, 0.03%)</title><rect x="469.2" y="1925" width="0.3" height="15.0" fill="rgb(211,189,28)" rx="2" ry="2" />
<text  x="472.21" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="162.4" y="1317" width="0.2" height="15.0" fill="rgb(226,97,52)" rx="2" ry="2" />
<text  x="165.44" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.0" y="1701" width="0.2" height="15.0" fill="rgb(232,57,39)" rx="2" ry="2" />
<text  x="1191.04" y="1711.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::basic_json (3 samples, 0.02%)</title><rect x="501.5" y="1829" width="0.2" height="15.0" fill="rgb(222,125,35)" rx="2" ry="2" />
<text  x="504.53" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (337 samples, 1.80%)</title><rect x="55.6" y="933" width="21.2" height="15.0" fill="rgb(221,95,24)" rx="2" ry="2" />
<text  x="58.57" y="943.5" >[..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1188.0" y="805" width="0.2" height="15.0" fill="rgb(245,160,23)" rx="2" ry="2" />
<text  x="1191.04" y="815.5" ></text>
</g>
<g >
<title>__interceptor_strlen (26 samples, 0.14%)</title><rect x="1171.1" y="2037" width="1.6" height="15.0" fill="rgb(234,229,28)" rx="2" ry="2" />
<text  x="1174.06" y="2047.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.01%)</title><rect x="203.5" y="1605" width="0.2" height="15.0" fill="rgb(220,44,32)" rx="2" ry="2" />
<text  x="206.53" y="1615.5" ></text>
</g>
<g >
<title>page_fault (2 samples, 0.01%)</title><rect x="497.7" y="1973" width="0.1" height="15.0" fill="rgb(254,26,3)" rx="2" ry="2" />
<text  x="500.68" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1187.3" y="309" width="0.3" height="15.0" fill="rgb(213,128,29)" rx="2" ry="2" />
<text  x="1190.29" y="319.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="84.8" y="1621" width="0.1" height="15.0" fill="rgb(220,34,54)" rx="2" ry="2" />
<text  x="87.80" y="1631.5" ></text>
</g>
<g >
<title>flush_tlb_mm_range (3 samples, 0.02%)</title><rect x="1094.9" y="1845" width="0.2" height="15.0" fill="rgb(216,115,36)" rx="2" ry="2" />
<text  x="1097.94" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="162.8" y="1029" width="0.1" height="15.0" fill="rgb(240,162,31)" rx="2" ry="2" />
<text  x="165.82" y="1039.5" ></text>
</g>
<g >
<title>flush_tlb_mm_range (32 samples, 0.17%)</title><rect x="928.1" y="1909" width="2.0" height="15.0" fill="rgb(212,75,33)" rx="2" ry="2" />
<text  x="931.11" y="1919.5" ></text>
</g>
<g >
<title>rwsem_wake (3 samples, 0.02%)</title><rect x="751.4" y="1909" width="0.2" height="15.0" fill="rgb(206,148,49)" rx="2" ry="2" />
<text  x="754.43" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.2" y="1605" width="0.4" height="15.0" fill="rgb(231,57,52)" rx="2" ry="2" />
<text  x="1190.22" y="1615.5" ></text>
</g>
<g >
<title>__asan::asan_delete (2 samples, 0.01%)</title><rect x="568.9" y="1877" width="0.2" height="15.0" fill="rgb(250,50,29)" rx="2" ry="2" />
<text  x="571.94" y="1887.5" ></text>
</g>
<g >
<title>memcpy (4 samples, 0.02%)</title><rect x="1120.4" y="2037" width="0.3" height="15.0" fill="rgb(248,164,32)" rx="2" ry="2" />
<text  x="1123.44" y="2047.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (2 samples, 0.01%)</title><rect x="714.8" y="1781" width="0.1" height="15.0" fill="rgb(244,128,2)" rx="2" ry="2" />
<text  x="717.76" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (440 samples, 2.35%)</title><rect x="55.5" y="1525" width="27.8" height="15.0" fill="rgb(241,164,47)" rx="2" ry="2" />
<text  x="58.51" y="1535.5" >[..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.0" y="1013" width="0.2" height="15.0" fill="rgb(245,32,1)" rx="2" ry="2" />
<text  x="1191.04" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.0" y="1109" width="0.2" height="15.0" fill="rgb(214,41,26)" rx="2" ry="2" />
<text  x="1191.04" y="1119.5" ></text>
</g>
<g >
<title>__pthread_getspecific (3 samples, 0.02%)</title><rect x="208.6" y="1637" width="0.2" height="15.0" fill="rgb(240,162,39)" rx="2" ry="2" />
<text  x="211.58" y="1647.5" ></text>
</g>
<g >
<title>page_fault (5 samples, 0.03%)</title><rect x="1012.1" y="2037" width="0.3" height="15.0" fill="rgb(212,93,34)" rx="2" ry="2" />
<text  x="1015.12" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="188.3" y="1749" width="0.1" height="15.0" fill="rgb(207,157,15)" rx="2" ry="2" />
<text  x="191.26" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (433 samples, 2.32%)</title><rect x="55.5" y="1493" width="27.3" height="15.0" fill="rgb(224,183,37)" rx="2" ry="2" />
<text  x="58.51" y="1503.5" >[..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (91 samples, 0.49%)</title><rect x="190.0" y="1669" width="5.7" height="15.0" fill="rgb(237,96,51)" rx="2" ry="2" />
<text  x="192.96" y="1679.5" ></text>
</g>
<g >
<title>__pthread_getspecific (3 samples, 0.02%)</title><rect x="203.7" y="1605" width="0.1" height="15.0" fill="rgb(219,135,8)" rx="2" ry="2" />
<text  x="206.66" y="1615.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (2 samples, 0.01%)</title><rect x="171.2" y="1573" width="0.1" height="15.0" fill="rgb(212,39,13)" rx="2" ry="2" />
<text  x="174.21" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="217.3" y="1813" width="0.3" height="15.0" fill="rgb(223,53,10)" rx="2" ry="2" />
<text  x="220.29" y="1823.5" ></text>
</g>
<g >
<title>Eigen::internal::gemv_dense_selector&lt;2, 1, true&gt;::run&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; &gt; (308 samples, 1.65%)</title><rect x="223.9" y="1957" width="19.4" height="15.0" fill="rgb(214,159,17)" rx="2" ry="2" />
<text  x="226.86" y="1967.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.01%)</title><rect x="134.2" y="1573" width="0.1" height="15.0" fill="rgb(245,83,27)" rx="2" ry="2" />
<text  x="137.16" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="217.3" y="1909" width="0.3" height="15.0" fill="rgb(225,155,15)" rx="2" ry="2" />
<text  x="220.29" y="1919.5" ></text>
</g>
<g >
<title>TFastTextEmbedder::GetSentenceEmbedding (1,752 samples, 9.37%)</title><rect x="368.0" y="1973" width="110.6" height="15.0" fill="rgb(221,225,13)" rx="2" ry="2" />
<text  x="370.96" y="1983.5" >TFastTextEmbe..</text>
</g>
<g >
<title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::basic_regex&lt;char const*&gt; (393 samples, 2.10%)</title><rect x="163.4" y="1941" width="24.8" height="15.0" fill="rgb(228,67,37)" rx="2" ry="2" />
<text  x="166.39" y="1951.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1188.0" y="1093" width="0.2" height="15.0" fill="rgb(235,40,23)" rx="2" ry="2" />
<text  x="1191.04" y="1103.5" ></text>
</g>
<g >
<title>__interceptor_strlen (3 samples, 0.02%)</title><rect x="990.9" y="2053" width="0.2" height="15.0" fill="rgb(249,213,15)" rx="2" ry="2" />
<text  x="993.91" y="2063.5" ></text>
</g>
<g >
<title>__asan::RZSize2Log (67 samples, 0.36%)</title><rect x="974.0" y="2053" width="4.2" height="15.0" fill="rgb(235,216,7)" rx="2" ry="2" />
<text  x="977.00" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (74 samples, 0.40%)</title><rect x="200.8" y="1749" width="4.7" height="15.0" fill="rgb(218,145,49)" rx="2" ry="2" />
<text  x="203.82" y="1759.5" ></text>
</g>
<g >
<title>__sanitizer::mem_is_zero (3 samples, 0.02%)</title><rect x="323.3" y="1957" width="0.2" height="15.0" fill="rgb(228,54,14)" rx="2" ry="2" />
<text  x="326.27" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="162.8" y="901" width="0.1" height="15.0" fill="rgb(248,160,27)" rx="2" ry="2" />
<text  x="165.82" y="911.5" ></text>
</g>
<g >
<title>clear_page_erms (2 samples, 0.01%)</title><rect x="630.2" y="1749" width="0.1" height="15.0" fill="rgb(232,52,37)" rx="2" ry="2" />
<text  x="633.17" y="1759.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.03%)</title><rect x="209.2" y="1637" width="0.3" height="15.0" fill="rgb(226,153,22)" rx="2" ry="2" />
<text  x="212.21" y="1647.5" ></text>
</g>
<g >
<title>__do_page_fault (16 samples, 0.09%)</title><rect x="659.7" y="1813" width="1.0" height="15.0" fill="rgb(219,67,39)" rx="2" ry="2" />
<text  x="662.71" y="1823.5" ></text>
</g>
<g >
<title>onmt::CaseModifier::extract_case_type (62 samples, 0.33%)</title><rect x="791.5" y="2037" width="3.9" height="15.0" fill="rgb(214,40,3)" rx="2" ry="2" />
<text  x="794.51" y="2047.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::dump (3 samples, 0.02%)</title><rect x="500.5" y="2005" width="0.2" height="15.0" fill="rgb(230,75,30)" rx="2" ry="2" />
<text  x="503.52" y="2015.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (2 samples, 0.01%)</title><rect x="170.1" y="1573" width="0.1" height="15.0" fill="rgb(219,151,0)" rx="2" ry="2" />
<text  x="173.08" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (95 samples, 0.51%)</title><rect x="144.6" y="1701" width="6.0" height="15.0" fill="rgb(224,217,15)" rx="2" ry="2" />
<text  x="147.64" y="1711.5" ></text>
</g>
<g >
<title>operator delete (6 samples, 0.03%)</title><rect x="176.8" y="1589" width="0.3" height="15.0" fill="rgb(234,26,24)" rx="2" ry="2" />
<text  x="179.77" y="1599.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (5 samples, 0.03%)</title><rect x="860.7" y="2005" width="0.3" height="15.0" fill="rgb(224,169,32)" rx="2" ry="2" />
<text  x="863.69" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (525 samples, 2.81%)</title><rect x="55.5" y="1893" width="33.1" height="15.0" fill="rgb(218,144,50)" rx="2" ry="2" />
<text  x="58.51" y="1903.5" >[u..</text>
</g>
<g >
<title>__asan_memmove (2 samples, 0.01%)</title><rect x="980.7" y="2053" width="0.1" height="15.0" fill="rgb(244,141,0)" rx="2" ry="2" />
<text  x="983.69" y="2063.5" ></text>
</g>
<g >
<title>handle_mm_fault (3 samples, 0.02%)</title><rect x="1012.2" y="1989" width="0.2" height="15.0" fill="rgb(226,125,1)" rx="2" ry="2" />
<text  x="1015.25" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (508 samples, 2.72%)</title><rect x="55.5" y="1813" width="32.1" height="15.0" fill="rgb(207,122,49)" rx="2" ry="2" />
<text  x="58.51" y="1823.5" >[u..</text>
</g>
<g >
<title>[unknown] (332 samples, 1.78%)</title><rect x="55.6" y="629" width="20.9" height="15.0" fill="rgb(219,25,12)" rx="2" ry="2" />
<text  x="58.57" y="639.5" ></text>
</g>
<g >
<title>[unknown] (340 samples, 1.82%)</title><rect x="55.6" y="1013" width="21.4" height="15.0" fill="rgb(226,6,40)" rx="2" ry="2" />
<text  x="58.57" y="1023.5" >[..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace@plt (2 samples, 0.01%)</title><rect x="740.8" y="1941" width="0.1" height="15.0" fill="rgb(232,71,29)" rx="2" ry="2" />
<text  x="743.76" y="1951.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.01%)</title><rect x="323.8" y="1989" width="0.1" height="15.0" fill="rgb(216,91,30)" rx="2" ry="2" />
<text  x="326.78" y="1999.5" ></text>
</g>
<g >
<title>mmap_region (15 samples, 0.08%)</title><rect x="1094.6" y="1941" width="1.0" height="15.0" fill="rgb(237,27,46)" rx="2" ry="2" />
<text  x="1097.62" y="1951.5" ></text>
</g>
<g >
<title>std::basic_ifstream&lt;char, std::char_traits&lt;char&gt; &gt;::~basic_ifstream (29 samples, 0.16%)</title><rect x="861.1" y="2037" width="1.8" height="15.0" fill="rgb(230,106,43)" rx="2" ry="2" />
<text  x="864.07" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (79 samples, 0.42%)</title><rect x="173.4" y="1717" width="4.9" height="15.0" fill="rgb(234,113,5)" rx="2" ry="2" />
<text  x="176.36" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="217.4" y="1749" width="0.1" height="15.0" fill="rgb(230,107,53)" rx="2" ry="2" />
<text  x="220.36" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1187.3" y="437" width="0.3" height="15.0" fill="rgb(210,37,13)" rx="2" ry="2" />
<text  x="1190.29" y="447.5" ></text>
</g>
<g >
<title>wake_up_q (3 samples, 0.02%)</title><rect x="751.4" y="1893" width="0.2" height="15.0" fill="rgb(227,121,24)" rx="2" ry="2" />
<text  x="754.43" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (81 samples, 0.43%)</title><rect x="156.4" y="1733" width="5.2" height="15.0" fill="rgb(216,172,28)" rx="2" ry="2" />
<text  x="159.44" y="1743.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_range_insert&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (2 samples, 0.01%)</title><rect x="1188.4" y="2053" width="0.1" height="15.0" fill="rgb(248,100,3)" rx="2" ry="2" />
<text  x="1191.42" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (83 samples, 0.44%)</title><rect x="205.6" y="1685" width="5.3" height="15.0" fill="rgb(218,70,7)" rx="2" ry="2" />
<text  x="208.61" y="1695.5" ></text>
</g>
<g >
<title>__do_munmap (2 samples, 0.01%)</title><rect x="82.0" y="1365" width="0.1" height="15.0" fill="rgb(245,14,26)" rx="2" ry="2" />
<text  x="84.96" y="1375.5" ></text>
</g>
<g >
<title>wp_page_copy (13 samples, 0.07%)</title><rect x="54.6" y="1925" width="0.8" height="15.0" fill="rgb(237,112,43)" rx="2" ry="2" />
<text  x="57.56" y="1935.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (7 samples, 0.04%)</title><rect x="189.5" y="1669" width="0.5" height="15.0" fill="rgb(226,198,32)" rx="2" ry="2" />
<text  x="192.52" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="217.4" y="1797" width="0.2" height="15.0" fill="rgb(242,132,25)" rx="2" ry="2" />
<text  x="220.36" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1187.3" y="821" width="0.3" height="15.0" fill="rgb(251,11,32)" rx="2" ry="2" />
<text  x="1190.29" y="831.5" ></text>
</g>
<g >
<title>__interceptor_memcmp (3 samples, 0.02%)</title><rect x="523.6" y="1909" width="0.2" height="15.0" fill="rgb(249,64,39)" rx="2" ry="2" />
<text  x="526.62" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (2 samples, 0.01%)</title><rect x="216.1" y="1781" width="0.1" height="15.0" fill="rgb(221,138,24)" rx="2" ry="2" />
<text  x="219.09" y="1791.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (2 samples, 0.01%)</title><rect x="82.0" y="1301" width="0.1" height="15.0" fill="rgb(245,148,41)" rx="2" ry="2" />
<text  x="84.96" y="1311.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (44 samples, 0.24%)</title><rect x="1165.4" y="2021" width="2.8" height="15.0" fill="rgb(223,84,36)" rx="2" ry="2" />
<text  x="1168.38" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (336 samples, 1.80%)</title><rect x="55.6" y="869" width="21.2" height="15.0" fill="rgb(216,62,35)" rx="2" ry="2" />
<text  x="58.57" y="879.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (5 samples, 0.03%)</title><rect x="676.3" y="1749" width="0.3" height="15.0" fill="rgb(250,137,23)" rx="2" ry="2" />
<text  x="679.25" y="1759.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (6 samples, 0.03%)</title><rect x="166.0" y="1541" width="0.4" height="15.0" fill="rgb(246,79,28)" rx="2" ry="2" />
<text  x="169.04" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.4" y="37" width="0.2" height="15.0" fill="rgb(225,43,8)" rx="2" ry="2" />
<text  x="1190.41" y="47.5" ></text>
</g>
<g >
<title>__sanitizer::mem_is_zero (4 samples, 0.02%)</title><rect x="1118.2" y="2037" width="0.2" height="15.0" fill="rgb(233,209,28)" rx="2" ry="2" />
<text  x="1121.17" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (81 samples, 0.43%)</title><rect x="150.8" y="1781" width="5.1" height="15.0" fill="rgb(237,155,17)" rx="2" ry="2" />
<text  x="153.82" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (203 samples, 1.09%)</title><rect x="131.8" y="1765" width="12.8" height="15.0" fill="rgb(237,142,2)" rx="2" ry="2" />
<text  x="134.83" y="1775.5" ></text>
</g>
<g >
<title>x2apic_send_IPI (14 samples, 0.07%)</title><rect x="928.9" y="1781" width="0.9" height="15.0" fill="rgb(234,133,15)" rx="2" ry="2" />
<text  x="931.93" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (475 samples, 2.54%)</title><rect x="131.8" y="1845" width="30.0" height="15.0" fill="rgb(207,192,1)" rx="2" ry="2" />
<text  x="134.83" y="1855.5" >st..</text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::json_value::destroy (6 samples, 0.03%)</title><rect x="499.9" y="1989" width="0.4" height="15.0" fill="rgb(252,44,6)" rx="2" ry="2" />
<text  x="502.89" y="1999.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (2 samples, 0.01%)</title><rect x="223.7" y="1941" width="0.1" height="15.0" fill="rgb(216,145,39)" rx="2" ry="2" />
<text  x="226.67" y="1951.5" ></text>
</g>
<g >
<title>page_fault (7 samples, 0.04%)</title><rect x="634.3" y="1861" width="0.5" height="15.0" fill="rgb(217,1,0)" rx="2" ry="2" />
<text  x="637.34" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.2" y="1845" width="0.4" height="15.0" fill="rgb(230,48,19)" rx="2" ry="2" />
<text  x="1190.22" y="1855.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::append (7 samples, 0.04%)</title><rect x="555.4" y="1893" width="0.4" height="15.0" fill="rgb(250,179,36)" rx="2" ry="2" />
<text  x="558.37" y="1903.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::getLine (4 samples, 0.02%)</title><rect x="752.6" y="2037" width="0.3" height="15.0" fill="rgb(239,128,44)" rx="2" ry="2" />
<text  x="755.63" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (72 samples, 0.39%)</title><rect x="200.9" y="1685" width="4.6" height="15.0" fill="rgb(209,175,22)" rx="2" ry="2" />
<text  x="203.94" y="1695.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (2 samples, 0.01%)</title><rect x="43.5" y="2005" width="0.1" height="15.0" fill="rgb(227,204,40)" rx="2" ry="2" />
<text  x="46.52" y="2015.5" ></text>
</g>
<g >
<title>__libc_start_main (6,041 samples, 32.32%)</title><rect x="121.2" y="2037" width="381.3" height="15.0" fill="rgb(231,102,45)" rx="2" ry="2" />
<text  x="124.16" y="2047.5" >__libc_start_main</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (80 samples, 0.43%)</title><rect x="173.3" y="1733" width="5.0" height="15.0" fill="rgb(221,210,52)" rx="2" ry="2" />
<text  x="176.30" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.9" y="997" width="0.1" height="15.0" fill="rgb(217,50,22)" rx="2" ry="2" />
<text  x="1190.85" y="1007.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (3 samples, 0.02%)</title><rect x="77.4" y="1109" width="0.1" height="15.0" fill="rgb(249,224,0)" rx="2" ry="2" />
<text  x="80.35" y="1119.5" ></text>
</g>
<g >
<title>unmap_single_vma (6 samples, 0.03%)</title><rect x="505.6" y="1957" width="0.4" height="15.0" fill="rgb(211,200,43)" rx="2" ry="2" />
<text  x="508.63" y="1967.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::create&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (3 samples, 0.02%)</title><rect x="501.5" y="1685" width="0.2" height="15.0" fill="rgb(217,98,13)" rx="2" ry="2" />
<text  x="504.53" y="1695.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::reserve (27 samples, 0.14%)</title><rect x="864.4" y="2037" width="1.7" height="15.0" fill="rgb(226,196,6)" rx="2" ry="2" />
<text  x="867.42" y="2047.5" ></text>
</g>
<g >
<title>__do_page_fault (3 samples, 0.02%)</title><rect x="499.5" y="1909" width="0.2" height="15.0" fill="rgb(212,210,25)" rx="2" ry="2" />
<text  x="502.51" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (13,046 samples, 69.79%)</title><rect x="42.8" y="2053" width="823.5" height="15.0" fill="rgb(237,138,8)" rx="2" ry="2" />
<text  x="45.82" y="2063.5" >[unknown]</text>
</g>
<g >
<title>__asan::Allocator::Deallocate (6 samples, 0.03%)</title><rect x="565.9" y="1877" width="0.3" height="15.0" fill="rgb(236,2,2)" rx="2" ry="2" />
<text  x="568.85" y="1887.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::Unwind (4 samples, 0.02%)</title><rect x="582.9" y="1861" width="0.2" height="15.0" fill="rgb(222,63,41)" rx="2" ry="2" />
<text  x="585.89" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (475 samples, 2.54%)</title><rect x="131.8" y="1861" width="30.0" height="15.0" fill="rgb(237,96,4)" rx="2" ry="2" />
<text  x="134.83" y="1871.5" >st..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (19 samples, 0.10%)</title><rect x="1094.4" y="2037" width="1.2" height="15.0" fill="rgb(242,171,19)" rx="2" ry="2" />
<text  x="1097.43" y="2047.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (356 samples, 1.90%)</title><rect x="1120.8" y="2053" width="22.4" height="15.0" fill="rgb(213,12,2)" rx="2" ry="2" />
<text  x="1123.76" y="2063.5" >s..</text>
</g>
<g >
<title>__lsan::DisabledInThisThread (19 samples, 0.10%)</title><rect x="991.1" y="2053" width="1.2" height="15.0" fill="rgb(251,139,21)" rx="2" ry="2" />
<text  x="994.10" y="2063.5" ></text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.02%)</title><rect x="166.6" y="1541" width="0.2" height="15.0" fill="rgb(207,192,35)" rx="2" ry="2" />
<text  x="169.61" y="1551.5" ></text>
</g>
<g >
<title>__sanitizer::StackTrace::GetCurrentPc (2 samples, 0.01%)</title><rect x="594.9" y="1845" width="0.1" height="15.0" fill="rgb(245,229,49)" rx="2" ry="2" />
<text  x="597.89" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="162.8" y="1301" width="0.1" height="15.0" fill="rgb(230,62,24)" rx="2" ry="2" />
<text  x="165.75" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="162.4" y="1701" width="0.2" height="15.0" fill="rgb(254,64,34)" rx="2" ry="2" />
<text  x="165.44" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.0" y="1973" width="0.2" height="15.0" fill="rgb(244,94,11)" rx="2" ry="2" />
<text  x="1190.03" y="1983.5" ></text>
</g>
<g >
<title>__asan::Allocator::Deallocate (288 samples, 1.54%)</title><rect x="930.3" y="2053" width="18.2" height="15.0" fill="rgb(215,114,34)" rx="2" ry="2" />
<text  x="933.32" y="2063.5" ></text>
</g>
<g >
<title>syscall (10 samples, 0.05%)</title><rect x="131.1" y="1973" width="0.7" height="15.0" fill="rgb(216,9,25)" rx="2" ry="2" />
<text  x="134.13" y="1983.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::Dictionary (29 samples, 0.16%)</title><rect x="861.1" y="2005" width="1.8" height="15.0" fill="rgb(208,213,21)" rx="2" ry="2" />
<text  x="864.07" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (2 samples, 0.01%)</title><rect x="216.1" y="1829" width="0.1" height="15.0" fill="rgb(223,80,50)" rx="2" ry="2" />
<text  x="219.09" y="1839.5" ></text>
</g>
<g >
<title>strlen@plt (10 samples, 0.05%)</title><rect x="739.1" y="1893" width="0.7" height="15.0" fill="rgb(208,208,14)" rx="2" ry="2" />
<text  x="742.12" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.05%)</title><rect x="162.4" y="1845" width="0.6" height="15.0" fill="rgb(245,86,48)" rx="2" ry="2" />
<text  x="165.44" y="1855.5" ></text>
</g>
<g >
<title>__sanitizer::internal_munmap (2 samples, 0.01%)</title><rect x="89.9" y="1941" width="0.1" height="15.0" fill="rgb(205,64,27)" rx="2" ry="2" />
<text  x="92.91" y="1951.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt; &gt;::_M_manager (2 samples, 0.01%)</title><rect x="132.3" y="1637" width="0.1" height="15.0" fill="rgb(242,105,41)" rx="2" ry="2" />
<text  x="135.27" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.7" y="1717" width="0.3" height="15.0" fill="rgb(249,120,21)" rx="2" ry="2" />
<text  x="1190.66" y="1727.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (2 samples, 0.01%)</title><rect x="85.8" y="1685" width="0.1" height="15.0" fill="rgb(220,70,19)" rx="2" ry="2" />
<text  x="88.81" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (383 samples, 2.05%)</title><rect x="55.5" y="1269" width="24.2" height="15.0" fill="rgb(237,25,28)" rx="2" ry="2" />
<text  x="58.51" y="1279.5" >[..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.0" y="1845" width="0.2" height="15.0" fill="rgb(228,95,20)" rx="2" ry="2" />
<text  x="1191.04" y="1855.5" ></text>
</g>
<g >
<title>TSlinkClustering::Cluster (2,697 samples, 14.43%)</title><rect x="328.7" y="2005" width="170.2" height="15.0" fill="rgb(243,91,43)" rx="2" ry="2" />
<text  x="331.70" y="2015.5" >TSlinkClustering::Clus..</text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (8 samples, 0.04%)</title><rect x="131.9" y="1669" width="0.5" height="15.0" fill="rgb(234,178,45)" rx="2" ry="2" />
<text  x="134.89" y="1679.5" ></text>
</g>
<g >
<title>__do_munmap (2 samples, 0.01%)</title><rect x="84.0" y="1493" width="0.1" height="15.0" fill="rgb(223,34,36)" rx="2" ry="2" />
<text  x="86.98" y="1503.5" ></text>
</g>
<g >
<title>__lsan::LsanMetadata::allocated (2 samples, 0.01%)</title><rect x="93.7" y="2021" width="0.1" height="15.0" fill="rgb(205,37,0)" rx="2" ry="2" />
<text  x="96.70" y="2031.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64LocalCache&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&gt; &gt;::Deallocate (3 samples, 0.02%)</title><rect x="82.7" y="1477" width="0.1" height="15.0" fill="rgb(230,68,30)" rx="2" ry="2" />
<text  x="85.65" y="1487.5" ></text>
</g>
<g >
<title>__asan::AsanThread::stack_bottom (2 samples, 0.01%)</title><rect x="567.3" y="1877" width="0.1" height="15.0" fill="rgb(216,32,31)" rx="2" ry="2" />
<text  x="570.30" y="1887.5" ></text>
</g>
<g >
<title>handle_mm_fault (5 samples, 0.03%)</title><rect x="1096.3" y="1973" width="0.3" height="15.0" fill="rgb(233,91,27)" rx="2" ry="2" />
<text  x="1099.33" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (336 samples, 1.80%)</title><rect x="55.6" y="901" width="21.2" height="15.0" fill="rgb(234,87,42)" rx="2" ry="2" />
<text  x="58.57" y="911.5" ></text>
</g>
<g >
<title>page_fault (3 samples, 0.02%)</title><rect x="499.5" y="1941" width="0.2" height="15.0" fill="rgb(229,41,48)" rx="2" ry="2" />
<text  x="502.51" y="1951.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (6 samples, 0.03%)</title><rect x="1119.6" y="2037" width="0.4" height="15.0" fill="rgb(224,48,20)" rx="2" ry="2" />
<text  x="1122.62" y="2047.5" ></text>
</g>
<g >
<title>__dynamic_cast (5 samples, 0.03%)</title><rect x="132.5" y="1589" width="0.3" height="15.0" fill="rgb(221,161,25)" rx="2" ry="2" />
<text  x="135.52" y="1599.5" ></text>
</g>
<g >
<title>__sanitizer::internal_munmap (2 samples, 0.01%)</title><rect x="84.7" y="1605" width="0.1" height="15.0" fill="rgb(239,173,15)" rx="2" ry="2" />
<text  x="87.67" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (59 samples, 0.32%)</title><rect x="183.8" y="1781" width="3.7" height="15.0" fill="rgb(239,188,46)" rx="2" ry="2" />
<text  x="186.77" y="1791.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::push_back (4 samples, 0.02%)</title><rect x="863.0" y="2037" width="0.2" height="15.0" fill="rgb(235,140,43)" rx="2" ry="2" />
<text  x="865.97" y="2047.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (2 samples, 0.01%)</title><rect x="24.6" y="1925" width="0.2" height="15.0" fill="rgb(209,63,32)" rx="2" ry="2" />
<text  x="27.64" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="188.3" y="1477" width="0.1" height="15.0" fill="rgb(232,30,49)" rx="2" ry="2" />
<text  x="191.32" y="1487.5" ></text>
</g>
<g >
<title>[unknown] (581 samples, 3.11%)</title><rect x="55.5" y="2021" width="36.7" height="15.0" fill="rgb(211,217,16)" rx="2" ry="2" />
<text  x="58.51" y="2031.5" >[un..</text>
</g>
<g >
<title>fasttext::Matrix::size (11 samples, 0.06%)</title><rect x="754.6" y="2037" width="0.7" height="15.0" fill="rgb(244,141,6)" rx="2" ry="2" />
<text  x="757.65" y="2047.5" ></text>
</g>
<g >
<title>fasttext::Vector::addVector (3 samples, 0.02%)</title><rect x="326.1" y="1989" width="0.2" height="15.0" fill="rgb(208,99,30)" rx="2" ry="2" />
<text  x="329.11" y="1999.5" ></text>
</g>
<g >
<title>nlohmann::detail::input_stream_adapter::get_character (2 samples, 0.01%)</title><rect x="123.5" y="1909" width="0.1" height="15.0" fill="rgb(228,215,31)" rx="2" ry="2" />
<text  x="126.49" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1187.3" y="389" width="0.3" height="15.0" fill="rgb(216,7,11)" rx="2" ry="2" />
<text  x="1190.29" y="399.5" ></text>
</g>
<g >
<title>__do_page_fault (3 samples, 0.02%)</title><rect x="92.6" y="1973" width="0.2" height="15.0" fill="rgb(227,51,13)" rx="2" ry="2" />
<text  x="95.56" y="1983.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (41 samples, 0.22%)</title><rect x="1148.0" y="2037" width="2.5" height="15.0" fill="rgb(251,182,41)" rx="2" ry="2" />
<text  x="1150.96" y="2047.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (4 samples, 0.02%)</title><rect x="90.9" y="2005" width="0.3" height="15.0" fill="rgb(252,95,42)" rx="2" ry="2" />
<text  x="93.92" y="2015.5" ></text>
</g>
<g >
<title>find_vma (2 samples, 0.01%)</title><rect x="22.9" y="1989" width="0.1" height="15.0" fill="rgb(214,70,54)" rx="2" ry="2" />
<text  x="25.88" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (2 samples, 0.01%)</title><rect x="162.0" y="1765" width="0.1" height="15.0" fill="rgb(213,53,50)" rx="2" ry="2" />
<text  x="165.00" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1187.9" y="981" width="0.1" height="15.0" fill="rgb(223,128,21)" rx="2" ry="2" />
<text  x="1190.85" y="991.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (27 samples, 0.14%)</title><rect x="864.4" y="2005" width="1.7" height="15.0" fill="rgb(215,222,26)" rx="2" ry="2" />
<text  x="867.42" y="2015.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (4 samples, 0.02%)</title><rect x="89.7" y="1941" width="0.2" height="15.0" fill="rgb(221,182,48)" rx="2" ry="2" />
<text  x="92.66" y="1951.5" ></text>
</g>
<g >
<title>Annotate (166 samples, 0.89%)</title><rect x="121.3" y="2005" width="10.5" height="15.0" fill="rgb(221,229,16)" rx="2" ry="2" />
<text  x="124.35" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.9" y="629" width="0.1" height="15.0" fill="rgb(205,17,49)" rx="2" ry="2" />
<text  x="1190.85" y="639.5" ></text>
</g>
<g >
<title>vfs_read (2 samples, 0.01%)</title><rect x="121.0" y="1957" width="0.2" height="15.0" fill="rgb(207,11,33)" rx="2" ry="2" />
<text  x="124.03" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (322 samples, 1.72%)</title><rect x="55.6" y="197" width="20.3" height="15.0" fill="rgb(209,88,11)" rx="2" ry="2" />
<text  x="58.57" y="207.5" ></text>
</g>
<g >
<title>__do_page_fault (3 samples, 0.02%)</title><rect x="1008.0" y="2005" width="0.2" height="15.0" fill="rgb(251,172,37)" rx="2" ry="2" />
<text  x="1011.02" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1187.7" y="1573" width="0.3" height="15.0" fill="rgb(233,176,54)" rx="2" ry="2" />
<text  x="1190.73" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1187.2" y="1877" width="0.4" height="15.0" fill="rgb(212,25,29)" rx="2" ry="2" />
<text  x="1190.22" y="1887.5" ></text>
</g>
<g >
<title>do_syscall_64 (12 samples, 0.06%)</title><rect x="750.9" y="2005" width="0.7" height="15.0" fill="rgb(213,156,2)" rx="2" ry="2" />
<text  x="753.86" y="2015.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="83.3" y="1525" width="0.1" height="15.0" fill="rgb(214,32,26)" rx="2" ry="2" />
<text  x="86.28" y="1535.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (5 samples, 0.03%)</title><rect x="557.0" y="1877" width="0.3" height="15.0" fill="rgb(236,0,36)" rx="2" ry="2" />
<text  x="559.95" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (65 samples, 0.35%)</title><rect x="164.1" y="1685" width="4.1" height="15.0" fill="rgb(224,57,49)" rx="2" ry="2" />
<text  x="167.08" y="1695.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.01%)</title><rect x="633.9" y="1845" width="0.1" height="15.0" fill="rgb(232,60,13)" rx="2" ry="2" />
<text  x="636.90" y="1855.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.03%)</title><rect x="751.6" y="2021" width="0.3" height="15.0" fill="rgb(251,30,37)" rx="2" ry="2" />
<text  x="754.62" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (2 samples, 0.01%)</title><rect x="161.6" y="1765" width="0.1" height="15.0" fill="rgb(219,62,32)" rx="2" ry="2" />
<text  x="164.62" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (254 samples, 1.36%)</title><rect x="189.5" y="1781" width="16.0" height="15.0" fill="rgb(247,225,53)" rx="2" ry="2" />
<text  x="192.46" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (555 samples, 2.97%)</title><rect x="55.5" y="1989" width="35.0" height="15.0" fill="rgb(248,163,24)" rx="2" ry="2" />
<text  x="58.51" y="1999.5" >[u..</text>
</g>
<g >
<title>try_charge (3 samples, 0.02%)</title><rect x="927.6" y="1893" width="0.2" height="15.0" fill="rgb(219,49,38)" rx="2" ry="2" />
<text  x="930.60" y="1903.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (5 samples, 0.03%)</title><rect x="199.3" y="1589" width="0.3" height="15.0" fill="rgb(229,210,27)" rx="2" ry="2" />
<text  x="202.30" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (3 samples, 0.02%)</title><rect x="161.6" y="1813" width="0.2" height="15.0" fill="rgb(209,112,5)" rx="2" ry="2" />
<text  x="164.62" y="1823.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (9 samples, 0.05%)</title><rect x="131.2" y="1877" width="0.6" height="15.0" fill="rgb(253,155,23)" rx="2" ry="2" />
<text  x="134.19" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="162.4" y="1381" width="0.2" height="15.0" fill="rgb(242,203,26)" rx="2" ry="2" />
<text  x="165.44" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.0" y="597" width="0.2" height="15.0" fill="rgb(238,96,18)" rx="2" ry="2" />
<text  x="1191.04" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (34 samples, 0.18%)</title><rect x="165.7" y="1557" width="2.1" height="15.0" fill="rgb(242,71,12)" rx="2" ry="2" />
<text  x="168.66" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1187.2" y="1637" width="0.4" height="15.0" fill="rgb(216,45,44)" rx="2" ry="2" />
<text  x="1190.22" y="1647.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (2 samples, 0.01%)</title><rect x="863.3" y="2021" width="0.1" height="15.0" fill="rgb(237,168,54)" rx="2" ry="2" />
<text  x="866.28" y="2031.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (2 samples, 0.01%)</title><rect x="660.4" y="1733" width="0.1" height="15.0" fill="rgb(248,207,51)" rx="2" ry="2" />
<text  x="663.41" y="1743.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (5 samples, 0.03%)</title><rect x="1094.9" y="1893" width="0.4" height="15.0" fill="rgb(241,108,36)" rx="2" ry="2" />
<text  x="1097.94" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="162.8" y="1317" width="0.1" height="15.0" fill="rgb(245,19,17)" rx="2" ry="2" />
<text  x="165.75" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.02%)</title><rect x="1187.8" y="1557" width="0.2" height="15.0" fill="rgb(219,127,44)" rx="2" ry="2" />
<text  x="1190.79" y="1567.5" ></text>
</g>
<g >
<title>operator delete (6 samples, 0.03%)</title><rect x="208.8" y="1637" width="0.4" height="15.0" fill="rgb(242,68,14)" rx="2" ry="2" />
<text  x="211.83" y="1647.5" ></text>
</g>
<g >
<title>nlohmann::detail::input_stream_adapter::get_character (3 samples, 0.02%)</title><rect x="130.3" y="1893" width="0.2" height="15.0" fill="rgb(246,138,38)" rx="2" ry="2" />
<text  x="133.31" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (557 samples, 2.98%)</title><rect x="55.5" y="2005" width="35.2" height="15.0" fill="rgb(208,32,30)" rx="2" ry="2" />
<text  x="58.51" y="2015.5" >[u..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="162.8" y="1125" width="0.1" height="15.0" fill="rgb(232,8,26)" rx="2" ry="2" />
<text  x="165.75" y="1135.5" ></text>
</g>
<g >
<title>TDocument::TDocument (9 samples, 0.05%)</title><rect x="740.9" y="1973" width="0.6" height="15.0" fill="rgb(234,10,45)" rx="2" ry="2" />
<text  x="743.89" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.2" y="1893" width="0.4" height="15.0" fill="rgb(239,190,26)" rx="2" ry="2" />
<text  x="1190.22" y="1903.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (23 samples, 0.12%)</title><rect x="630.9" y="1877" width="1.4" height="15.0" fill="rgb(223,205,38)" rx="2" ry="2" />
<text  x="633.87" y="1887.5" ></text>
</g>
<g >
<title>__sanitizer::QuarantineCache&lt;__asan::QuarantineCallback&gt;::MergeBatches (10 samples, 0.05%)</title><rect x="748.8" y="2037" width="0.7" height="15.0" fill="rgb(210,126,4)" rx="2" ry="2" />
<text  x="751.84" y="2047.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.02%)</title><rect x="214.5" y="1669" width="0.2" height="15.0" fill="rgb(223,74,43)" rx="2" ry="2" />
<text  x="217.51" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (24 samples, 0.13%)</title><rect x="804.2" y="2021" width="1.5" height="15.0" fill="rgb(241,204,2)" rx="2" ry="2" />
<text  x="807.20" y="2031.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_Alloc_node&gt; (3 samples, 0.02%)</title><rect x="501.5" y="1925" width="0.2" height="15.0" fill="rgb(206,45,15)" rx="2" ry="2" />
<text  x="504.53" y="1935.5" ></text>
</g>
<g >
<title>do_page_fault (3 samples, 0.02%)</title><rect x="92.6" y="1989" width="0.2" height="15.0" fill="rgb(228,151,30)" rx="2" ry="2" />
<text  x="95.56" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.9" y="661" width="0.1" height="15.0" fill="rgb(245,142,2)" rx="2" ry="2" />
<text  x="1190.85" y="671.5" ></text>
</g>
<g >
<title>__handle_mm_fault (4 samples, 0.02%)</title><rect x="552.5" y="1813" width="0.2" height="15.0" fill="rgb(214,194,38)" rx="2" ry="2" />
<text  x="555.47" y="1823.5" ></text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::next_byte_in_range (32 samples, 0.17%)</title><rect x="128.5" y="1925" width="2.0" height="15.0" fill="rgb(212,144,14)" rx="2" ry="2" />
<text  x="131.48" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1187.3" y="1397" width="0.3" height="15.0" fill="rgb(219,135,34)" rx="2" ry="2" />
<text  x="1190.29" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (78 samples, 0.42%)</title><rect x="168.2" y="1653" width="5.0" height="15.0" fill="rgb(240,213,29)" rx="2" ry="2" />
<text  x="171.25" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1187.3" y="101" width="0.3" height="15.0" fill="rgb(209,104,25)" rx="2" ry="2" />
<text  x="1190.29" y="111.5" ></text>
</g>
<g >
<title>__do_page_fault (4 samples, 0.02%)</title><rect x="552.5" y="1845" width="0.2" height="15.0" fill="rgb(237,184,12)" rx="2" ry="2" />
<text  x="555.47" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="162.4" y="1269" width="0.2" height="15.0" fill="rgb(244,57,15)" rx="2" ry="2" />
<text  x="165.44" y="1279.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="87.8" y="1797" width="0.1" height="15.0" fill="rgb(208,13,47)" rx="2" ry="2" />
<text  x="90.77" y="1807.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.04%)</title><rect x="1118.4" y="2037" width="0.5" height="15.0" fill="rgb(222,67,25)" rx="2" ry="2" />
<text  x="1121.42" y="2047.5" ></text>
</g>
<g >
<title>__sanitizer::StackTrace::GetCurrentPc (2 samples, 0.01%)</title><rect x="136.4" y="1557" width="0.2" height="15.0" fill="rgb(246,9,2)" rx="2" ry="2" />
<text  x="139.43" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="162.4" y="1413" width="0.2" height="15.0" fill="rgb(222,139,2)" rx="2" ry="2" />
<text  x="165.44" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="162.8" y="773" width="0.1" height="15.0" fill="rgb(231,212,47)" rx="2" ry="2" />
<text  x="165.82" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.2" y="1717" width="0.4" height="15.0" fill="rgb(222,191,23)" rx="2" ry="2" />
<text  x="1190.22" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="162.7" y="1541" width="0.2" height="15.0" fill="rgb(211,49,43)" rx="2" ry="2" />
<text  x="165.69" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (9 samples, 0.05%)</title><rect x="216.3" y="1877" width="0.6" height="15.0" fill="rgb(246,213,10)" rx="2" ry="2" />
<text  x="219.35" y="1887.5" ></text>
</g>
<g >
<title>do_page_fault (28 samples, 0.15%)</title><rect x="481.5" y="1909" width="1.8" height="15.0" fill="rgb(222,5,35)" rx="2" ry="2" />
<text  x="484.52" y="1919.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (3 samples, 0.02%)</title><rect x="210.7" y="1669" width="0.2" height="15.0" fill="rgb(253,194,38)" rx="2" ry="2" />
<text  x="213.66" y="1679.5" ></text>
</g>
<g >
<title>release_pages (3 samples, 0.02%)</title><rect x="1096.0" y="1861" width="0.2" height="15.0" fill="rgb(220,151,28)" rx="2" ry="2" />
<text  x="1099.01" y="1871.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (3 samples, 0.02%)</title><rect x="24.8" y="1957" width="0.2" height="15.0" fill="rgb(238,55,0)" rx="2" ry="2" />
<text  x="27.77" y="1967.5" ></text>
</g>
<g >
<title>TAgencyRating::ScoreUrl (457 samples, 2.44%)</title><rect x="188.8" y="1989" width="28.9" height="15.0" fill="rgb(207,67,49)" rx="2" ry="2" />
<text  x="191.82" y="1999.5" >TA..</text>
</g>
<g >
<title>vmacache_find (2 samples, 0.01%)</title><rect x="924.1" y="1973" width="0.2" height="15.0" fill="rgb(251,140,34)" rx="2" ry="2" />
<text  x="927.13" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (87 samples, 0.47%)</title><rect x="139.0" y="1685" width="5.4" height="15.0" fill="rgb(249,37,36)" rx="2" ry="2" />
<text  x="141.96" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="1187.8" y="1477" width="0.2" height="15.0" fill="rgb(215,193,16)" rx="2" ry="2" />
<text  x="1190.79" y="1487.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (186 samples, 0.99%)</title><rect x="43.8" y="2037" width="11.7" height="15.0" fill="rgb(221,145,44)" rx="2" ry="2" />
<text  x="46.77" y="2047.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (2 samples, 0.01%)</title><rect x="135.4" y="1557" width="0.1" height="15.0" fill="rgb(226,2,22)" rx="2" ry="2" />
<text  x="138.42" y="1567.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotPut (2 samples, 0.01%)</title><rect x="160.1" y="1669" width="0.1" height="15.0" fill="rgb(210,178,30)" rx="2" ry="2" />
<text  x="163.10" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (84 samples, 0.45%)</title><rect x="205.6" y="1717" width="5.3" height="15.0" fill="rgb(219,198,40)" rx="2" ry="2" />
<text  x="208.61" y="1727.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (2 samples, 0.01%)</title><rect x="84.0" y="1525" width="0.1" height="15.0" fill="rgb(219,90,13)" rx="2" ry="2" />
<text  x="86.98" y="1535.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (7 samples, 0.04%)</title><rect x="799.8" y="2005" width="0.5" height="15.0" fill="rgb(251,200,39)" rx="2" ry="2" />
<text  x="802.84" y="2015.5" ></text>
</g>
<g >
<title>__do_munmap (2 samples, 0.01%)</title><rect x="87.8" y="1749" width="0.1" height="15.0" fill="rgb(250,78,29)" rx="2" ry="2" />
<text  x="90.77" y="1759.5" ></text>
</g>
<g >
<title>fasttext::entry::entry (3 samples, 0.02%)</title><rect x="862.5" y="1973" width="0.2" height="15.0" fill="rgb(230,160,37)" rx="2" ry="2" />
<text  x="865.46" y="1983.5" ></text>
</g>
<g >
<title>std::locale::~locale (5 samples, 0.03%)</title><rect x="498.4" y="1973" width="0.3" height="15.0" fill="rgb(210,95,0)" rx="2" ry="2" />
<text  x="501.37" y="1983.5" ></text>
</g>
<g >
<title>onmt::Tokenizer::tokenize (3 samples, 0.02%)</title><rect x="795.4" y="2037" width="0.2" height="15.0" fill="rgb(254,131,16)" rx="2" ry="2" />
<text  x="798.43" y="2047.5" ></text>
</g>
<g >
<title>page_fault (23 samples, 0.12%)</title><rect x="54.1" y="2021" width="1.4" height="15.0" fill="rgb(231,200,34)" rx="2" ry="2" />
<text  x="57.06" y="2031.5" ></text>
</g>
<g >
<title>Eigen::DenseCoeffsBase&lt;Eigen::Transpose&lt;Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_sum_op&lt;float, float&gt;, Eigen::Product&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0&gt; const, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const&gt;, 0&gt;::coeff (4 samples, 0.02%)</title><rect x="42.9" y="2037" width="0.2" height="15.0" fill="rgb(245,135,33)" rx="2" ry="2" />
<text  x="45.89" y="2047.5" ></text>
</g>
<g >
<title>__dynamic_cast (4 samples, 0.02%)</title><rect x="144.8" y="1637" width="0.3" height="15.0" fill="rgb(213,180,46)" rx="2" ry="2" />
<text  x="147.83" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (471 samples, 2.52%)</title><rect x="55.5" y="1653" width="29.7" height="15.0" fill="rgb(241,204,1)" rx="2" ry="2" />
<text  x="58.51" y="1663.5" >[u..</text>
</g>
<g >
<title>[[vdso]] (4 samples, 0.02%)</title><rect x="120.7" y="2021" width="0.3" height="15.0" fill="rgb(234,101,41)" rx="2" ry="2" />
<text  x="123.72" y="2031.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (2 samples, 0.01%)</title><rect x="94.0" y="2021" width="0.1" height="15.0" fill="rgb(240,39,4)" rx="2" ry="2" />
<text  x="96.95" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (57 samples, 0.30%)</title><rect x="201.5" y="1637" width="3.6" height="15.0" fill="rgb(207,42,52)" rx="2" ry="2" />
<text  x="204.51" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.0" y="1541" width="0.2" height="15.0" fill="rgb(230,162,41)" rx="2" ry="2" />
<text  x="1191.04" y="1551.5" ></text>
</g>
<g >
<title>alloc_pages_vma (3 samples, 0.02%)</title><rect x="552.5" y="1797" width="0.2" height="15.0" fill="rgb(231,109,35)" rx="2" ry="2" />
<text  x="555.47" y="1807.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (53 samples, 0.28%)</title><rect x="212.4" y="1685" width="3.3" height="15.0" fill="rgb(247,128,39)" rx="2" ry="2" />
<text  x="215.37" y="1695.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="508.5" y="2021" width="0.2" height="15.0" fill="rgb(238,20,54)" rx="2" ry="2" />
<text  x="511.54" y="2031.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (65 samples, 0.35%)</title><rect x="1157.7" y="2037" width="4.1" height="15.0" fill="rgb(207,171,37)" rx="2" ry="2" />
<text  x="1160.74" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1187.3" y="1205" width="0.3" height="15.0" fill="rgb(222,102,49)" rx="2" ry="2" />
<text  x="1190.29" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.0" y="1125" width="0.2" height="15.0" fill="rgb(253,70,43)" rx="2" ry="2" />
<text  x="1191.04" y="1135.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (3 samples, 0.02%)</title><rect x="660.5" y="1765" width="0.2" height="15.0" fill="rgb(238,120,12)" rx="2" ry="2" />
<text  x="663.53" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (328 samples, 1.75%)</title><rect x="55.6" y="421" width="20.7" height="15.0" fill="rgb(254,152,6)" rx="2" ry="2" />
<text  x="58.57" y="431.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;,  (2 samples, 0.01%)</title><rect x="163.3" y="1941" width="0.1" height="15.0" fill="rgb(211,187,45)" rx="2" ry="2" />
<text  x="166.26" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1187.9" y="1125" width="0.1" height="15.0" fill="rgb(221,154,50)" rx="2" ry="2" />
<text  x="1190.85" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (482 samples, 2.58%)</title><rect x="131.8" y="1925" width="30.4" height="15.0" fill="rgb(254,71,2)" rx="2" ry="2" />
<text  x="134.83" y="1935.5" >st..</text>
</g>
<g >
<title>do_page_fault (134 samples, 0.72%)</title><rect x="921.8" y="2021" width="8.5" height="15.0" fill="rgb(235,220,26)" rx="2" ry="2" />
<text  x="924.80" y="2031.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="90.5" y="1989" width="0.2" height="15.0" fill="rgb(233,143,13)" rx="2" ry="2" />
<text  x="93.54" y="1999.5" ></text>
</g>
<g >
<title>fasttext::Matrix::size (30 samples, 0.16%)</title><rect x="474.2" y="1957" width="1.9" height="15.0" fill="rgb(212,41,18)" rx="2" ry="2" />
<text  x="477.20" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (91 samples, 0.49%)</title><rect x="144.6" y="1653" width="5.8" height="15.0" fill="rgb(242,15,24)" rx="2" ry="2" />
<text  x="147.64" y="1663.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (3 samples, 0.02%)</title><rect x="156.1" y="1701" width="0.2" height="15.0" fill="rgb(219,180,22)" rx="2" ry="2" />
<text  x="159.06" y="1711.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (15 samples, 0.08%)</title><rect x="114.8" y="2037" width="0.9" height="15.0" fill="rgb(244,17,21)" rx="2" ry="2" />
<text  x="117.78" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.9" y="853" width="0.1" height="15.0" fill="rgb(220,205,28)" rx="2" ry="2" />
<text  x="1190.85" y="863.5" ></text>
</g>
<g >
<title>clear_page_erms (16 samples, 0.09%)</title><rect x="492.3" y="1845" width="1.0" height="15.0" fill="rgb(225,74,23)" rx="2" ry="2" />
<text  x="495.25" y="1855.5" ></text>
</g>
<g >
<title>__interceptor_memcpy (5 samples, 0.03%)</title><rect x="1117.5" y="2037" width="0.4" height="15.0" fill="rgb(252,226,6)" rx="2" ry="2" />
<text  x="1120.54" y="2047.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="77.2" y="1109" width="0.2" height="15.0" fill="rgb(211,69,10)" rx="2" ry="2" />
<text  x="80.22" y="1119.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (20 samples, 0.11%)</title><rect x="629.6" y="1877" width="1.3" height="15.0" fill="rgb(217,171,12)" rx="2" ry="2" />
<text  x="632.60" y="1887.5" ></text>
</g>
<g >
<title>__x64_sys_read (2 samples, 0.01%)</title><rect x="1104.8" y="1989" width="0.1" height="15.0" fill="rgb(220,50,51)" rx="2" ry="2" />
<text  x="1107.79" y="1999.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (3 samples, 0.02%)</title><rect x="322.7" y="1957" width="0.2" height="15.0" fill="rgb(243,5,1)" rx="2" ry="2" />
<text  x="325.71" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1187.9" y="597" width="0.1" height="15.0" fill="rgb(233,204,14)" rx="2" ry="2" />
<text  x="1190.85" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (313 samples, 1.67%)</title><rect x="163.7" y="1781" width="19.8" height="15.0" fill="rgb(220,59,12)" rx="2" ry="2" />
<text  x="166.70" y="1791.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (6 samples, 0.03%)</title><rect x="660.0" y="1749" width="0.4" height="15.0" fill="rgb(242,33,20)" rx="2" ry="2" />
<text  x="663.03" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.0" y="933" width="0.2" height="15.0" fill="rgb(222,143,27)" rx="2" ry="2" />
<text  x="1191.04" y="943.5" ></text>
</g>
<g >
<title>release_pages (5 samples, 0.03%)</title><rect x="505.3" y="1877" width="0.3" height="15.0" fill="rgb(239,133,17)" rx="2" ry="2" />
<text  x="508.32" y="1887.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (4 samples, 0.02%)</title><rect x="630.4" y="1781" width="0.3" height="15.0" fill="rgb(207,214,39)" rx="2" ry="2" />
<text  x="633.42" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.0" y="1797" width="0.2" height="15.0" fill="rgb(244,104,37)" rx="2" ry="2" />
<text  x="1191.04" y="1807.5" ></text>
</g>
<g >
<title>__asan::AsanTSDGet (2 samples, 0.01%)</title><rect x="141.8" y="1589" width="0.1" height="15.0" fill="rgb(227,166,28)" rx="2" ry="2" />
<text  x="144.80" y="1599.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (8 samples, 0.04%)</title><rect x="92.8" y="2021" width="0.5" height="15.0" fill="rgb(239,130,13)" rx="2" ry="2" />
<text  x="95.75" y="2031.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (15 samples, 0.08%)</title><rect x="925.5" y="1909" width="1.0" height="15.0" fill="rgb(226,221,52)" rx="2" ry="2" />
<text  x="928.52" y="1919.5" ></text>
</g>
<g >
<title>__asan_memcpy (17 samples, 0.09%)</title><rect x="673.6" y="1845" width="1.1" height="15.0" fill="rgb(206,179,1)" rx="2" ry="2" />
<text  x="676.60" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (326 samples, 1.74%)</title><rect x="55.6" y="341" width="20.6" height="15.0" fill="rgb(205,145,11)" rx="2" ry="2" />
<text  x="58.57" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (59 samples, 0.32%)</title><rect x="134.3" y="1573" width="3.7" height="15.0" fill="rgb(250,51,26)" rx="2" ry="2" />
<text  x="137.29" y="1583.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="84.4" y="1605" width="0.1" height="15.0" fill="rgb(237,212,51)" rx="2" ry="2" />
<text  x="87.42" y="1615.5" ></text>
</g>
<g >
<title>do_page_fault (76 samples, 0.41%)</title><rect x="21.4" y="2021" width="4.8" height="15.0" fill="rgb(238,139,35)" rx="2" ry="2" />
<text  x="24.36" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (2 samples, 0.01%)</title><rect x="187.5" y="1765" width="0.1" height="15.0" fill="rgb(207,102,40)" rx="2" ry="2" />
<text  x="190.50" y="1775.5" ></text>
</g>
<g >
<title>__asan::AsanThread::stack_top (2 samples, 0.01%)</title><rect x="468.1" y="1925" width="0.2" height="15.0" fill="rgb(253,195,15)" rx="2" ry="2" />
<text  x="471.14" y="1935.5" ></text>
</g>
<g >
<title>__asan::AsanThread::stack_top (2 samples, 0.01%)</title><rect x="142.0" y="1589" width="0.1" height="15.0" fill="rgb(240,9,34)" rx="2" ry="2" />
<text  x="144.99" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (379 samples, 2.03%)</title><rect x="163.6" y="1813" width="23.9" height="15.0" fill="rgb(231,77,26)" rx="2" ry="2" />
<text  x="166.58" y="1823.5" >s..</text>
</g>
<g >
<title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (2 samples, 0.01%)</title><rect x="185.9" y="1653" width="0.1" height="15.0" fill="rgb(233,217,22)" rx="2" ry="2" />
<text  x="188.92" y="1663.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::future&lt;std::result_of&lt;Annotate (2 samples, 0.01%)</title><rect x="27.1" y="2021" width="0.1" height="15.0" fill="rgb(247,112,52)" rx="2" ry="2" />
<text  x="30.11" y="2031.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::computeSubwords (16 samples, 0.09%)</title><rect x="861.4" y="1957" width="1.0" height="15.0" fill="rgb(231,6,45)" rx="2" ry="2" />
<text  x="864.39" y="1967.5" ></text>
</g>
<g >
<title>nlohmann::detail::input_stream_adapter::get_character (5 samples, 0.03%)</title><rect x="125.1" y="1925" width="0.3" height="15.0" fill="rgb(220,29,1)" rx="2" ry="2" />
<text  x="128.13" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (520 samples, 2.78%)</title><rect x="55.5" y="1877" width="32.8" height="15.0" fill="rgb(235,229,7)" rx="2" ry="2" />
<text  x="58.51" y="1887.5" >[u..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="89.9" y="1925" width="0.1" height="15.0" fill="rgb(217,47,18)" rx="2" ry="2" />
<text  x="92.91" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1187.3" y="693" width="0.3" height="15.0" fill="rgb(216,142,41)" rx="2" ry="2" />
<text  x="1190.29" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1187.3" y="277" width="0.3" height="15.0" fill="rgb(253,43,30)" rx="2" ry="2" />
<text  x="1190.29" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.0" y="1077" width="0.2" height="15.0" fill="rgb(208,159,37)" rx="2" ry="2" />
<text  x="1191.04" y="1087.5" ></text>
</g>
<g >
<title>__pthread_once_slow (3,692 samples, 19.75%)</title><rect x="508.5" y="2037" width="233.0" height="15.0" fill="rgb(223,36,37)" rx="2" ry="2" />
<text  x="511.47" y="2047.5" >__pthread_once_slow</text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::at (3 samples, 0.02%)</title><rect x="121.4" y="1941" width="0.2" height="15.0" fill="rgb(212,93,47)" rx="2" ry="2" />
<text  x="124.41" y="1951.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotPut (4 samples, 0.02%)</title><rect x="572.3" y="1877" width="0.2" height="15.0" fill="rgb(217,90,13)" rx="2" ry="2" />
<text  x="575.29" y="1887.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::pushHash (226 samples, 1.21%)</title><rect x="531.1" y="1877" width="14.3" height="15.0" fill="rgb(219,101,51)" rx="2" ry="2" />
<text  x="534.13" y="1887.5" ></text>
</g>
<g >
<title>__asan::Allocator::Deallocate (2 samples, 0.01%)</title><rect x="191.6" y="1557" width="0.1" height="15.0" fill="rgb(231,122,0)" rx="2" ry="2" />
<text  x="194.60" y="1567.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (2 samples, 0.01%)</title><rect x="84.7" y="1557" width="0.1" height="15.0" fill="rgb(246,218,7)" rx="2" ry="2" />
<text  x="87.67" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1187.9" y="789" width="0.1" height="15.0" fill="rgb(226,191,42)" rx="2" ry="2" />
<text  x="1190.85" y="799.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.03%)</title><rect x="136.6" y="1557" width="0.3" height="15.0" fill="rgb(208,7,21)" rx="2" ry="2" />
<text  x="139.56" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (383 samples, 2.05%)</title><rect x="163.6" y="1861" width="24.2" height="15.0" fill="rgb(222,16,45)" rx="2" ry="2" />
<text  x="166.58" y="1871.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1187.3" y="517" width="0.3" height="15.0" fill="rgb(237,159,33)" rx="2" ry="2" />
<text  x="1190.29" y="527.5" ></text>
</g>
<g >
<title>__pthread_getspecific (4 samples, 0.02%)</title><rect x="582.6" y="1861" width="0.2" height="15.0" fill="rgb(248,162,50)" rx="2" ry="2" />
<text  x="585.58" y="1871.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (2 samples, 0.01%)</title><rect x="493.9" y="1973" width="0.1" height="15.0" fill="rgb(224,223,51)" rx="2" ry="2" />
<text  x="496.89" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.05%)</title><rect x="162.4" y="1909" width="0.6" height="15.0" fill="rgb(210,161,19)" rx="2" ry="2" />
<text  x="165.44" y="1919.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="84.3" y="1557" width="0.1" height="15.0" fill="rgb(249,53,52)" rx="2" ry="2" />
<text  x="87.29" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (7 samples, 0.04%)</title><rect x="189.5" y="1685" width="0.5" height="15.0" fill="rgb(248,14,47)" rx="2" ry="2" />
<text  x="192.52" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_BracketMatcher (2 samples, 0.01%)</title><rect x="132.3" y="1621" width="0.1" height="15.0" fill="rgb(207,78,11)" rx="2" ry="2" />
<text  x="135.27" y="1631.5" ></text>
</g>
<g >
<title>onmt::Tokenizer::finalize_tokens (73 samples, 0.39%)</title><rect x="548.3" y="1909" width="4.6" height="15.0" fill="rgb(243,59,37)" rx="2" ry="2" />
<text  x="551.30" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1187.3" y="709" width="0.3" height="15.0" fill="rgb(208,139,40)" rx="2" ry="2" />
<text  x="1190.29" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1188.0" y="1237" width="0.2" height="15.0" fill="rgb(231,155,53)" rx="2" ry="2" />
<text  x="1191.04" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="1187.8" y="1429" width="0.2" height="15.0" fill="rgb(224,197,35)" rx="2" ry="2" />
<text  x="1190.79" y="1439.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct (7 samples, 0.04%)</title><rect x="1115.0" y="2053" width="0.5" height="15.0" fill="rgb(253,155,23)" rx="2" ry="2" />
<text  x="1118.01" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1187.9" y="261" width="0.1" height="15.0" fill="rgb(232,131,22)" rx="2" ry="2" />
<text  x="1190.85" y="271.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::initNgrams (18 samples, 0.10%)</title><rect x="861.3" y="1973" width="1.2" height="15.0" fill="rgb(250,204,8)" rx="2" ry="2" />
<text  x="864.32" y="1983.5" ></text>
</g>
<g >
<title>generic_exec_single (14 samples, 0.07%)</title><rect x="928.9" y="1813" width="0.9" height="15.0" fill="rgb(208,168,42)" rx="2" ry="2" />
<text  x="931.93" y="1823.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (2 samples, 0.01%)</title><rect x="863.5" y="2021" width="0.1" height="15.0" fill="rgb(231,88,17)" rx="2" ry="2" />
<text  x="866.47" y="2031.5" ></text>
</g>
<g >
<title>get_page_from_freelist (6 samples, 0.03%)</title><rect x="24.1" y="1925" width="0.4" height="15.0" fill="rgb(241,126,19)" rx="2" ry="2" />
<text  x="27.14" y="1935.5" ></text>
</g>
<g >
<title>__interceptor_malloc (2 samples, 0.01%)</title><rect x="374.2" y="1925" width="0.1" height="15.0" fill="rgb(214,23,11)" rx="2" ry="2" />
<text  x="377.21" y="1935.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.01%)</title><rect x="178.7" y="1653" width="0.2" height="15.0" fill="rgb(217,100,14)" rx="2" ry="2" />
<text  x="181.72" y="1663.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="86.8" y="1749" width="0.1" height="15.0" fill="rgb(243,228,15)" rx="2" ry="2" />
<text  x="89.82" y="1759.5" ></text>
</g>
<g >
<title>onmt::unicode::is_letter (223 samples, 1.19%)</title><rect x="692.6" y="1877" width="14.1" height="15.0" fill="rgb(224,80,11)" rx="2" ry="2" />
<text  x="695.60" y="1887.5" ></text>
</g>
<g >
<title>__vm_munmap (2 samples, 0.01%)</title><rect x="84.7" y="1541" width="0.1" height="15.0" fill="rgb(235,149,22)" rx="2" ry="2" />
<text  x="87.67" y="1551.5" ></text>
</g>
<g >
<title>handle_mm_fault (12 samples, 0.06%)</title><rect x="660.0" y="1797" width="0.7" height="15.0" fill="rgb(215,36,17)" rx="2" ry="2" />
<text  x="662.97" y="1807.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::Unwind (4 samples, 0.02%)</title><rect x="571.4" y="1877" width="0.3" height="15.0" fill="rgb(253,87,23)" rx="2" ry="2" />
<text  x="574.41" y="1887.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.02%)</title><rect x="500.9" y="1973" width="0.2" height="15.0" fill="rgb(235,110,28)" rx="2" ry="2" />
<text  x="503.90" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (333 samples, 1.78%)</title><rect x="55.6" y="645" width="21.0" height="15.0" fill="rgb(211,131,52)" rx="2" ry="2" />
<text  x="58.57" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (91 samples, 0.49%)</title><rect x="190.0" y="1637" width="5.7" height="15.0" fill="rgb(222,25,33)" rx="2" ry="2" />
<text  x="192.96" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1187.2" y="2021" width="0.4" height="15.0" fill="rgb(226,16,29)" rx="2" ry="2" />
<text  x="1190.22" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1187.7" y="1749" width="0.3" height="15.0" fill="rgb(231,214,16)" rx="2" ry="2" />
<text  x="1190.66" y="1759.5" ></text>
</g>
<g >
<title>__dynamic_cast (4 samples, 0.02%)</title><rect x="202.2" y="1621" width="0.3" height="15.0" fill="rgb(238,82,34)" rx="2" ry="2" />
<text  x="205.21" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (59 samples, 0.32%)</title><rect x="183.8" y="1765" width="3.7" height="15.0" fill="rgb(226,114,8)" rx="2" ry="2" />
<text  x="186.77" y="1775.5" ></text>
</g>
<g >
<title>TDocument::TDocument (4 samples, 0.02%)</title><rect x="328.4" y="2005" width="0.3" height="15.0" fill="rgb(254,39,44)" rx="2" ry="2" />
<text  x="331.45" y="2015.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (2 samples, 0.01%)</title><rect x="751.2" y="1845" width="0.2" height="15.0" fill="rgb(232,93,29)" rx="2" ry="2" />
<text  x="754.24" y="1855.5" ></text>
</g>
<g >
<title>fasttext::FastText::getWordVector (182 samples, 0.97%)</title><rect x="462.7" y="1957" width="11.5" height="15.0" fill="rgb(207,53,49)" rx="2" ry="2" />
<text  x="465.71" y="1967.5" ></text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::xsgetn (3 samples, 0.02%)</title><rect x="1104.8" y="2053" width="0.2" height="15.0" fill="rgb(224,187,33)" rx="2" ry="2" />
<text  x="1107.79" y="2063.5" ></text>
</g>
<g >
<title>std::istream::sentry::sentry (6 samples, 0.03%)</title><rect x="497.9" y="1973" width="0.3" height="15.0" fill="rgb(223,86,51)" rx="2" ry="2" />
<text  x="500.87" y="1983.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotPut (2 samples, 0.01%)</title><rect x="186.0" y="1653" width="0.2" height="15.0" fill="rgb(233,156,14)" rx="2" ry="2" />
<text  x="189.05" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (2 samples, 0.01%)</title><rect x="216.9" y="1861" width="0.1" height="15.0" fill="rgb(234,83,7)" rx="2" ry="2" />
<text  x="219.91" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.0" y="1653" width="0.2" height="15.0" fill="rgb(247,192,48)" rx="2" ry="2" />
<text  x="1191.04" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (339 samples, 1.81%)</title><rect x="55.6" y="981" width="21.4" height="15.0" fill="rgb(208,22,15)" rx="2" ry="2" />
<text  x="58.57" y="991.5" >[..</text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64LocalCache&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&gt; &gt;::Deallocate (33 samples, 0.18%)</title><rect x="73.4" y="37" width="2.1" height="15.0" fill="rgb(213,67,5)" rx="2" ry="2" />
<text  x="76.44" y="47.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (6 samples, 0.03%)</title><rect x="27.4" y="1877" width="0.4" height="15.0" fill="rgb(225,76,19)" rx="2" ry="2" />
<text  x="30.42" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (323 samples, 1.73%)</title><rect x="55.6" y="261" width="20.4" height="15.0" fill="rgb(213,24,45)" rx="2" ry="2" />
<text  x="58.57" y="271.5" ></text>
</g>
<g >
<title>page_fault (4 samples, 0.02%)</title><rect x="104.4" y="2021" width="0.3" height="15.0" fill="rgb(207,105,6)" rx="2" ry="2" />
<text  x="107.43" y="2031.5" ></text>
</g>
<g >
<title>do_syscall_64 (9 samples, 0.05%)</title><rect x="131.2" y="1941" width="0.6" height="15.0" fill="rgb(205,17,38)" rx="2" ry="2" />
<text  x="134.19" y="1951.5" ></text>
</g>
<g >
<title>zalloc_cpumask_var (2 samples, 0.01%)</title><rect x="929.9" y="1861" width="0.1" height="15.0" fill="rgb(247,213,43)" rx="2" ry="2" />
<text  x="932.87" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (81 samples, 0.43%)</title><rect x="150.8" y="1765" width="5.1" height="15.0" fill="rgb(219,39,17)" rx="2" ry="2" />
<text  x="153.82" y="1775.5" ></text>
</g>
<g >
<title>__asan_memcpy (2 samples, 0.01%)</title><rect x="208.2" y="1637" width="0.1" height="15.0" fill="rgb(223,229,46)" rx="2" ry="2" />
<text  x="211.20" y="1647.5" ></text>
</g>
<g >
<title>__asan::AsanThread::stack_top (2 samples, 0.01%)</title><rect x="567.4" y="1877" width="0.2" height="15.0" fill="rgb(219,136,17)" rx="2" ry="2" />
<text  x="570.43" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="188.3" y="1461" width="0.1" height="15.0" fill="rgb(220,56,13)" rx="2" ry="2" />
<text  x="191.32" y="1471.5" ></text>
</g>
<g >
<title>unmap_single_vma (5 samples, 0.03%)</title><rect x="1095.9" y="1925" width="0.3" height="15.0" fill="rgb(249,28,41)" rx="2" ry="2" />
<text  x="1098.89" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (79 samples, 0.42%)</title><rect x="211.1" y="1781" width="5.0" height="15.0" fill="rgb(224,18,43)" rx="2" ry="2" />
<text  x="214.11" y="1791.5" ></text>
</g>
<g >
<title>__sanitizer::internal_munmap (2 samples, 0.01%)</title><rect x="86.8" y="1765" width="0.1" height="15.0" fill="rgb(242,228,3)" rx="2" ry="2" />
<text  x="89.82" y="1775.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThreadStats (25 samples, 0.13%)</title><rect x="115.7" y="2037" width="1.6" height="15.0" fill="rgb(225,74,30)" rx="2" ry="2" />
<text  x="118.73" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="162.8" y="1061" width="0.1" height="15.0" fill="rgb(220,46,48)" rx="2" ry="2" />
<text  x="165.75" y="1071.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="493.9" y="1957" width="0.1" height="15.0" fill="rgb(219,23,50)" rx="2" ry="2" />
<text  x="496.89" y="1967.5" ></text>
</g>
<g >
<title>onmt::unicode::explode_utf8_with_marks (604 samples, 3.23%)</title><rect x="638.6" y="1877" width="38.2" height="15.0" fill="rgb(224,223,44)" rx="2" ry="2" />
<text  x="641.63" y="1887.5" >onm..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (86 samples, 0.46%)</title><rect x="205.5" y="1749" width="5.4" height="15.0" fill="rgb(216,188,16)" rx="2" ry="2" />
<text  x="208.49" y="1759.5" ></text>
</g>
<g >
<title>__asan_memcpy (6 samples, 0.03%)</title><rect x="557.3" y="1877" width="0.3" height="15.0" fill="rgb(217,36,31)" rx="2" ry="2" />
<text  x="560.27" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (498 samples, 2.66%)</title><rect x="55.5" y="1781" width="31.4" height="15.0" fill="rgb(220,195,25)" rx="2" ry="2" />
<text  x="58.51" y="1791.5" >[u..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.0" y="2021" width="0.2" height="15.0" fill="rgb(246,52,13)" rx="2" ry="2" />
<text  x="1190.03" y="2031.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (18 samples, 0.10%)</title><rect x="492.2" y="1861" width="1.1" height="15.0" fill="rgb(252,100,42)" rx="2" ry="2" />
<text  x="495.19" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.0" y="1989" width="0.2" height="15.0" fill="rgb(236,112,8)" rx="2" ry="2" />
<text  x="1190.03" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (81 samples, 0.43%)</title><rect x="150.8" y="1749" width="5.1" height="15.0" fill="rgb(231,161,5)" rx="2" ry="2" />
<text  x="153.82" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3 samples, 0.02%)</title><rect x="187.5" y="1781" width="0.2" height="15.0" fill="rgb(226,145,40)" rx="2" ry="2" />
<text  x="190.50" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1188.0" y="1429" width="0.2" height="15.0" fill="rgb(229,189,46)" rx="2" ry="2" />
<text  x="1191.04" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.0" y="1941" width="0.2" height="15.0" fill="rgb(223,58,3)" rx="2" ry="2" />
<text  x="1191.04" y="1951.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (2 samples, 0.01%)</title><rect x="89.9" y="1829" width="0.1" height="15.0" fill="rgb(231,134,34)" rx="2" ry="2" />
<text  x="92.91" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1187.3" y="677" width="0.3" height="15.0" fill="rgb(222,172,11)" rx="2" ry="2" />
<text  x="1190.29" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1187.3" y="1061" width="0.3" height="15.0" fill="rgb(253,198,51)" rx="2" ry="2" />
<text  x="1190.29" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (98 samples, 0.52%)</title><rect x="144.6" y="1749" width="6.2" height="15.0" fill="rgb(243,122,6)" rx="2" ry="2" />
<text  x="147.64" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="162.8" y="869" width="0.1" height="15.0" fill="rgb(232,28,31)" rx="2" ry="2" />
<text  x="165.82" y="879.5" ></text>
</g>
<g >
<title>__asan_memset (2 samples, 0.01%)</title><rect x="478.0" y="1941" width="0.2" height="15.0" fill="rgb(233,21,52)" rx="2" ry="2" />
<text  x="481.05" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1187.3" y="629" width="0.3" height="15.0" fill="rgb(209,125,32)" rx="2" ry="2" />
<text  x="1190.29" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="162.8" y="1253" width="0.1" height="15.0" fill="rgb(235,118,21)" rx="2" ry="2" />
<text  x="165.75" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1187.3" y="197" width="0.3" height="15.0" fill="rgb(254,48,1)" rx="2" ry="2" />
<text  x="1190.29" y="207.5" ></text>
</g>
<g >
<title>__do_page_fault (4 samples, 0.02%)</title><rect x="1189.4" y="1989" width="0.2" height="15.0" fill="rgb(232,101,36)" rx="2" ry="2" />
<text  x="1192.37" y="1999.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.01%)</title><rect x="493.9" y="1941" width="0.1" height="15.0" fill="rgb(216,188,12)" rx="2" ry="2" />
<text  x="496.89" y="1951.5" ></text>
</g>
<g >
<title>operator new (9 samples, 0.05%)</title><rect x="136.9" y="1557" width="0.5" height="15.0" fill="rgb(240,115,41)" rx="2" ry="2" />
<text  x="139.87" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (328 samples, 1.75%)</title><rect x="55.6" y="437" width="20.7" height="15.0" fill="rgb(254,201,40)" rx="2" ry="2" />
<text  x="58.57" y="447.5" ></text>
</g>
<g >
<title>[unknown] (336 samples, 1.80%)</title><rect x="55.6" y="885" width="21.2" height="15.0" fill="rgb(220,66,26)" rx="2" ry="2" />
<text  x="58.57" y="895.5" ></text>
</g>
<g >
<title>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::dump (3 samples, 0.02%)</title><rect x="500.5" y="1957" width="0.2" height="15.0" fill="rgb(233,64,24)" rx="2" ry="2" />
<text  x="503.52" y="1967.5" ></text>
</g>
<g >
<title>__asan_memcpy (5 samples, 0.03%)</title><rect x="552.0" y="1877" width="0.3" height="15.0" fill="rgb(213,39,23)" rx="2" ry="2" />
<text  x="555.03" y="1887.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::getSubwords (131 samples, 0.70%)</title><rect x="310.1" y="1957" width="8.3" height="15.0" fill="rgb(236,47,3)" rx="2" ry="2" />
<text  x="313.14" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (503 samples, 2.69%)</title><rect x="55.5" y="1797" width="31.8" height="15.0" fill="rgb(246,143,44)" rx="2" ry="2" />
<text  x="58.51" y="1807.5" >[u..</text>
</g>
<g >
<title>__pthread_getspecific (5 samples, 0.03%)</title><rect x="147.7" y="1605" width="0.3" height="15.0" fill="rgb(227,12,53)" rx="2" ry="2" />
<text  x="150.67" y="1615.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="84.0" y="1557" width="0.1" height="15.0" fill="rgb(205,92,50)" rx="2" ry="2" />
<text  x="86.98" y="1567.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::at (3 samples, 0.02%)</title><rect x="121.4" y="1957" width="0.2" height="15.0" fill="rgb(248,167,34)" rx="2" ry="2" />
<text  x="124.41" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1188.0" y="997" width="0.2" height="15.0" fill="rgb(207,130,43)" rx="2" ry="2" />
<text  x="1191.04" y="1007.5" ></text>
</g>
<g >
<title>[unknown] (366 samples, 1.96%)</title><rect x="55.6" y="1189" width="23.1" height="15.0" fill="rgb(229,150,35)" rx="2" ry="2" />
<text  x="58.57" y="1199.5" >[..</text>
</g>
<g >
<title>__sanitizer_weak_hook_memcmp (9 samples, 0.05%)</title><rect x="1142.6" y="2037" width="0.6" height="15.0" fill="rgb(233,61,4)" rx="2" ry="2" />
<text  x="1145.60" y="2047.5" ></text>
</g>
<g >
<title>tlb_flush_mmu_free (2 samples, 0.01%)</title><rect x="84.0" y="1413" width="0.1" height="15.0" fill="rgb(207,159,40)" rx="2" ry="2" />
<text  x="86.98" y="1423.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::create&lt;std::vector&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::allocator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, nlohmann::detail::json_ref&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; const*, nlohmann::detail::json_ref&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; const*&gt; (2 samples, 0.01%)</title><rect x="499.8" y="1989" width="0.1" height="15.0" fill="rgb(249,18,1)" rx="2" ry="2" />
<text  x="502.76" y="1999.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (6 samples, 0.03%)</title><rect x="1096.3" y="2037" width="0.3" height="15.0" fill="rgb(240,71,13)" rx="2" ry="2" />
<text  x="1099.26" y="2047.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="1104.8" y="2005" width="0.1" height="15.0" fill="rgb(228,58,40)" rx="2" ry="2" />
<text  x="1107.79" y="2015.5" ></text>
</g>
<g >
<title>operator new[] (4 samples, 0.02%)</title><rect x="1104.3" y="2053" width="0.3" height="15.0" fill="rgb(222,88,34)" rx="2" ry="2" />
<text  x="1107.34" y="2063.5" ></text>
</g>
<g >
<title>zap_page_range (17 samples, 0.09%)</title><rect x="504.9" y="1973" width="1.1" height="15.0" fill="rgb(249,62,1)" rx="2" ry="2" />
<text  x="507.94" y="1983.5" ></text>
</g>
<g >
<title>do_syscall_64 (9 samples, 0.05%)</title><rect x="27.4" y="1973" width="0.5" height="15.0" fill="rgb(242,131,25)" rx="2" ry="2" />
<text  x="30.36" y="1983.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.02%)</title><rect x="160.3" y="1669" width="0.2" height="15.0" fill="rgb(211,17,14)" rx="2" ry="2" />
<text  x="163.29" y="1679.5" ></text>
</g>
<g >
<title>unmap_page_range (2 samples, 0.01%)</title><rect x="751.8" y="1893" width="0.1" height="15.0" fill="rgb(209,193,46)" rx="2" ry="2" />
<text  x="754.81" y="1903.5" ></text>
</g>
<g >
<title>handle_mm_fault (13 samples, 0.07%)</title><rect x="748.0" y="1973" width="0.8" height="15.0" fill="rgb(207,55,50)" rx="2" ry="2" />
<text  x="751.02" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="162.7" y="1333" width="0.2" height="15.0" fill="rgb(251,137,33)" rx="2" ry="2" />
<text  x="165.69" y="1343.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (43 samples, 0.23%)</title><rect x="795.7" y="2005" width="2.7" height="15.0" fill="rgb(254,143,8)" rx="2" ry="2" />
<text  x="798.68" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (5 samples, 0.03%)</title><rect x="161.9" y="1861" width="0.3" height="15.0" fill="rgb(207,142,35)" rx="2" ry="2" />
<text  x="164.87" y="1871.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;std::__detail::_State&lt;char&gt; const*, std::__detail::_State&lt;char&gt;*&gt; (2 samples, 0.01%)</title><rect x="216.9" y="1829" width="0.1" height="15.0" fill="rgb(218,121,8)" rx="2" ry="2" />
<text  x="219.91" y="1839.5" ></text>
</g>
<g >
<title>clear_page_erms (2 samples, 0.01%)</title><rect x="54.7" y="1877" width="0.1" height="15.0" fill="rgb(226,105,1)" rx="2" ry="2" />
<text  x="57.69" y="1887.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (36 samples, 0.19%)</title><rect x="658.5" y="1861" width="2.2" height="15.0" fill="rgb(215,174,34)" rx="2" ry="2" />
<text  x="661.45" y="1871.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (9 samples, 0.05%)</title><rect x="798.4" y="2005" width="0.6" height="15.0" fill="rgb(251,198,28)" rx="2" ry="2" />
<text  x="801.39" y="2015.5" ></text>
</g>
<g >
<title>page_fault (76 samples, 0.41%)</title><rect x="21.4" y="2037" width="4.8" height="15.0" fill="rgb(208,107,11)" rx="2" ry="2" />
<text  x="24.36" y="2047.5" ></text>
</g>
<g >
<title>__sanitizer::CombinedAllocator&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&gt;, __sanitizer::SizeClassAllocatorLocalCache&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&gt; &gt;, __sanitizer::LargeMmapAllocator&lt;__asan::AsanMapUnmapCallback, __sanitizer::LargeMmapAllocatorPtrArrayDynamic&gt; &gt;::Allocate (129 samples, 0.69%)</title><rect x="999.9" y="2053" width="8.1" height="15.0" fill="rgb(208,212,25)" rx="2" ry="2" />
<text  x="1002.88" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1187.3" y="1589" width="0.3" height="15.0" fill="rgb(208,90,11)" rx="2" ry="2" />
<text  x="1190.29" y="1599.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (47 samples, 0.25%)</title><rect x="169.8" y="1589" width="2.9" height="15.0" fill="rgb(242,39,10)" rx="2" ry="2" />
<text  x="172.76" y="1599.5" ></text>
</g>
<g >
<title>__clock_gettime (4 samples, 0.02%)</title><rect x="120.7" y="2037" width="0.3" height="15.0" fill="rgb(251,45,26)" rx="2" ry="2" />
<text  x="123.72" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="162.4" y="1509" width="0.2" height="15.0" fill="rgb(231,89,14)" rx="2" ry="2" />
<text  x="165.44" y="1519.5" ></text>
</g>
<g >
<title>alloc_pages_vma (2 samples, 0.01%)</title><rect x="499.6" y="1861" width="0.1" height="15.0" fill="rgb(240,148,14)" rx="2" ry="2" />
<text  x="502.57" y="1871.5" ></text>
</g>
<g >
<title>mem_cgroup_throttle_swaprate (2 samples, 0.01%)</title><rect x="25.1" y="1941" width="0.1" height="15.0" fill="rgb(235,190,30)" rx="2" ry="2" />
<text  x="28.09" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (65 samples, 0.35%)</title><rect x="164.1" y="1669" width="4.1" height="15.0" fill="rgb(247,171,8)" rx="2" ry="2" />
<text  x="167.08" y="1679.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (3 samples, 0.02%)</title><rect x="567.6" y="1877" width="0.1" height="15.0" fill="rgb(228,160,23)" rx="2" ry="2" />
<text  x="570.56" y="1887.5" ></text>
</g>
<g >
<title>__do_munmap (5 samples, 0.03%)</title><rect x="751.6" y="1957" width="0.3" height="15.0" fill="rgb(223,227,5)" rx="2" ry="2" />
<text  x="754.62" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1187.3" y="837" width="0.3" height="15.0" fill="rgb(224,73,12)" rx="2" ry="2" />
<text  x="1190.29" y="847.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (3 samples, 0.02%)</title><rect x="161.4" y="1701" width="0.2" height="15.0" fill="rgb(239,5,5)" rx="2" ry="2" />
<text  x="164.37" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="162.8" y="1173" width="0.1" height="15.0" fill="rgb(232,116,42)" rx="2" ry="2" />
<text  x="165.75" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="1187.8" y="1493" width="0.2" height="15.0" fill="rgb(222,182,24)" rx="2" ry="2" />
<text  x="1190.79" y="1503.5" ></text>
</g>
<g >
<title>smp_call_function_single (15 samples, 0.08%)</title><rect x="928.9" y="1829" width="0.9" height="15.0" fill="rgb(214,127,13)" rx="2" ry="2" />
<text  x="931.86" y="1839.5" ></text>
</g>
<g >
<title>x2apic_send_IPI (3 samples, 0.02%)</title><rect x="55.1" y="1765" width="0.2" height="15.0" fill="rgb(230,128,4)" rx="2" ry="2" />
<text  x="58.07" y="1775.5" ></text>
</g>
<g >
<title>arch_tlb_finish_mmu (2 samples, 0.01%)</title><rect x="84.3" y="1461" width="0.1" height="15.0" fill="rgb(207,96,33)" rx="2" ry="2" />
<text  x="87.29" y="1471.5" ></text>
</g>
<g >
<title>smp_call_function_single (4 samples, 0.02%)</title><rect x="55.1" y="1813" width="0.2" height="15.0" fill="rgb(233,134,54)" rx="2" ry="2" />
<text  x="58.07" y="1823.5" ></text>
</g>
<g >
<title>new_sync_read (2 samples, 0.01%)</title><rect x="1104.8" y="1925" width="0.1" height="15.0" fill="rgb(210,196,54)" rx="2" ry="2" />
<text  x="1107.79" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1187.3" y="85" width="0.3" height="15.0" fill="rgb(242,120,21)" rx="2" ry="2" />
<text  x="1190.29" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.9" y="1061" width="0.1" height="15.0" fill="rgb(213,219,52)" rx="2" ry="2" />
<text  x="1190.85" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.05%)</title><rect x="1187.0" y="2037" width="0.6" height="15.0" fill="rgb(234,192,43)" rx="2" ry="2" />
<text  x="1190.03" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (9 samples, 0.05%)</title><rect x="754.0" y="2021" width="0.5" height="15.0" fill="rgb(250,70,10)" rx="2" ry="2" />
<text  x="756.95" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (425 samples, 2.27%)</title><rect x="189.5" y="1893" width="26.8" height="15.0" fill="rgb(233,12,6)" rx="2" ry="2" />
<text  x="192.46" y="1903.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="217.3" y="1861" width="0.3" height="15.0" fill="rgb(251,167,7)" rx="2" ry="2" />
<text  x="220.29" y="1871.5" ></text>
</g>
<g >
<title>__interceptor_memcpy (16 samples, 0.09%)</title><rect x="989.9" y="2053" width="1.0" height="15.0" fill="rgb(253,199,42)" rx="2" ry="2" />
<text  x="992.90" y="2063.5" ></text>
</g>
<g >
<title>__asan_memcpy (6 samples, 0.03%)</title><rect x="159.1" y="1669" width="0.4" height="15.0" fill="rgb(208,82,44)" rx="2" ry="2" />
<text  x="162.09" y="1679.5" ></text>
</g>
<g >
<title>alloc_pages_vma (18 samples, 0.10%)</title><rect x="925.5" y="1925" width="1.1" height="15.0" fill="rgb(217,108,50)" rx="2" ry="2" />
<text  x="928.46" y="1935.5" ></text>
</g>
<g >
<title>tlb_flush_mmu_free (2 samples, 0.01%)</title><rect x="82.0" y="1285" width="0.1" height="15.0" fill="rgb(250,68,11)" rx="2" ry="2" />
<text  x="84.96" y="1295.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (8 samples, 0.04%)</title><rect x="149.9" y="1637" width="0.5" height="15.0" fill="rgb(244,53,32)" rx="2" ry="2" />
<text  x="152.88" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.0" y="1221" width="0.2" height="15.0" fill="rgb(224,84,8)" rx="2" ry="2" />
<text  x="1191.04" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="162.7" y="1429" width="0.2" height="15.0" fill="rgb(207,131,35)" rx="2" ry="2" />
<text  x="165.69" y="1439.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (2 samples, 0.01%)</title><rect x="121.7" y="1973" width="0.2" height="15.0" fill="rgb(254,48,25)" rx="2" ry="2" />
<text  x="124.73" y="1983.5" ></text>
</g>
<g >
<title>__sanitizer::CombinedAllocator&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&gt;, __sanitizer::SizeClassAllocatorLocalCache&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&gt; &gt;, __sanitizer::LargeMmapAllocator&lt;__asan::AsanMapUnmapCallback, __sanitizer::LargeMmapAllocatorPtrArrayDynamic&gt; &gt;::Allocate (2 samples, 0.01%)</title><rect x="742.1" y="2037" width="0.1" height="15.0" fill="rgb(213,192,6)" rx="2" ry="2" />
<text  x="745.09" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="1187.8" y="1381" width="0.2" height="15.0" fill="rgb(236,188,24)" rx="2" ry="2" />
<text  x="1190.79" y="1391.5" ></text>
</g>
<g >
<title>[unknown] (336 samples, 1.80%)</title><rect x="55.6" y="821" width="21.2" height="15.0" fill="rgb(205,123,22)" rx="2" ry="2" />
<text  x="58.57" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (4 samples, 0.02%)</title><rect x="183.5" y="1749" width="0.2" height="15.0" fill="rgb(221,55,19)" rx="2" ry="2" />
<text  x="186.46" y="1759.5" ></text>
</g>
<g >
<title>[tgnews] (236 samples, 1.26%)</title><rect x="27.9" y="2053" width="14.9" height="15.0" fill="rgb(219,227,13)" rx="2" ry="2" />
<text  x="30.93" y="2063.5" ></text>
</g>
<g >
<title>operator new[] (55 samples, 0.29%)</title><rect x="1183.6" y="2037" width="3.4" height="15.0" fill="rgb(239,141,31)" rx="2" ry="2" />
<text  x="1186.56" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (78 samples, 0.42%)</title><rect x="168.2" y="1669" width="5.0" height="15.0" fill="rgb(228,203,37)" rx="2" ry="2" />
<text  x="171.25" y="1679.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (2 samples, 0.01%)</title><rect x="1095.1" y="1829" width="0.2" height="15.0" fill="rgb(250,185,5)" rx="2" ry="2" />
<text  x="1098.13" y="1839.5" ></text>
</g>
<g >
<title>__pthread_getspecific (41 samples, 0.22%)</title><rect x="1172.7" y="2037" width="2.6" height="15.0" fill="rgb(246,207,2)" rx="2" ry="2" />
<text  x="1175.70" y="2047.5" ></text>
</g>
<g >
<title>__do_munmap (11 samples, 0.06%)</title><rect x="1094.7" y="1925" width="0.7" height="15.0" fill="rgb(224,68,30)" rx="2" ry="2" />
<text  x="1097.69" y="1935.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; const*, std::vector&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::allocator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;*&gt; (3 samples, 0.02%)</title><rect x="501.5" y="1845" width="0.2" height="15.0" fill="rgb(232,5,25)" rx="2" ry="2" />
<text  x="504.53" y="1855.5" ></text>
</g>
<g >
<title>__asan::AsanTSDGet (4 samples, 0.02%)</title><rect x="581.8" y="1861" width="0.3" height="15.0" fill="rgb(244,4,11)" rx="2" ry="2" />
<text  x="584.82" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.0" y="1877" width="0.2" height="15.0" fill="rgb(232,181,35)" rx="2" ry="2" />
<text  x="1191.04" y="1887.5" ></text>
</g>
<g >
<title>RunFasttextClf (194 samples, 1.04%)</title><rect x="508.9" y="1957" width="12.2" height="15.0" fill="rgb(225,207,32)" rx="2" ry="2" />
<text  x="511.85" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="162.4" y="1301" width="0.2" height="15.0" fill="rgb(250,175,39)" rx="2" ry="2" />
<text  x="165.44" y="1311.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (6 samples, 0.03%)</title><rect x="155.9" y="1733" width="0.4" height="15.0" fill="rgb(247,208,40)" rx="2" ry="2" />
<text  x="158.94" y="1743.5" ></text>
</g>
<g >
<title>__sanitizer::RunMallocHooks (25 samples, 0.13%)</title><rect x="1009.0" y="2053" width="1.5" height="15.0" fill="rgb(224,44,32)" rx="2" ry="2" />
<text  x="1011.97" y="2063.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (7 samples, 0.04%)</title><rect x="167.4" y="1541" width="0.4" height="15.0" fill="rgb(218,199,6)" rx="2" ry="2" />
<text  x="170.36" y="1551.5" ></text>
</g>
<g >
<title>__asan::AsanTSDGet (2 samples, 0.01%)</title><rect x="197.7" y="1589" width="0.1" height="15.0" fill="rgb(223,164,28)" rx="2" ry="2" />
<text  x="200.66" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1187.3" y="885" width="0.3" height="15.0" fill="rgb(250,156,43)" rx="2" ry="2" />
<text  x="1190.29" y="895.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::json_value::destroy (2 samples, 0.01%)</title><rect x="122.2" y="1973" width="0.1" height="15.0" fill="rgb(218,19,50)" rx="2" ry="2" />
<text  x="125.17" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1187.2" y="1781" width="0.4" height="15.0" fill="rgb(228,118,41)" rx="2" ry="2" />
<text  x="1190.22" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="188.3" y="1701" width="0.1" height="15.0" fill="rgb(236,216,23)" rx="2" ry="2" />
<text  x="191.32" y="1711.5" ></text>
</g>
<g >
<title>page_fault (4 samples, 0.02%)</title><rect x="552.5" y="1877" width="0.2" height="15.0" fill="rgb(231,131,30)" rx="2" ry="2" />
<text  x="555.47" y="1887.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="88.0" y="1829" width="0.1" height="15.0" fill="rgb(224,75,27)" rx="2" ry="2" />
<text  x="91.02" y="1839.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (28 samples, 0.15%)</title><rect x="1151.2" y="2037" width="1.8" height="15.0" fill="rgb(230,63,30)" rx="2" ry="2" />
<text  x="1154.24" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (65 samples, 0.35%)</title><rect x="164.1" y="1637" width="4.1" height="15.0" fill="rgb(254,63,0)" rx="2" ry="2" />
<text  x="167.08" y="1647.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_erase (2 samples, 0.01%)</title><rect x="501.1" y="1989" width="0.1" height="15.0" fill="rgb(249,1,38)" rx="2" ry="2" />
<text  x="504.09" y="1999.5" ></text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.02%)</title><rect x="153.6" y="1637" width="0.2" height="15.0" fill="rgb(206,26,32)" rx="2" ry="2" />
<text  x="156.60" y="1647.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (5 samples, 0.03%)</title><rect x="207.8" y="1637" width="0.3" height="15.0" fill="rgb(250,55,19)" rx="2" ry="2" />
<text  x="210.82" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1187.7" y="1653" width="0.3" height="15.0" fill="rgb(231,210,51)" rx="2" ry="2" />
<text  x="1190.66" y="1663.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (2 samples, 0.01%)</title><rect x="154.3" y="1637" width="0.1" height="15.0" fill="rgb(244,118,26)" rx="2" ry="2" />
<text  x="157.30" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="162.6" y="1717" width="0.3" height="15.0" fill="rgb(224,83,52)" rx="2" ry="2" />
<text  x="165.57" y="1727.5" ></text>
</g>
<g >
<title>__interceptor_memchr (7 samples, 0.04%)</title><rect x="1144.6" y="2037" width="0.4" height="15.0" fill="rgb(250,140,28)" rx="2" ry="2" />
<text  x="1147.55" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1188.0" y="1957" width="0.2" height="15.0" fill="rgb(213,216,11)" rx="2" ry="2" />
<text  x="1191.04" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="188.3" y="1621" width="0.1" height="15.0" fill="rgb(246,130,30)" rx="2" ry="2" />
<text  x="191.32" y="1631.5" ></text>
</g>
<g >
<title>new_sync_read (2 samples, 0.01%)</title><rect x="121.0" y="1925" width="0.2" height="15.0" fill="rgb(240,106,43)" rx="2" ry="2" />
<text  x="124.03" y="1935.5" ></text>
</g>
<g >
<title>__do_page_fault (2 samples, 0.01%)</title><rect x="497.7" y="1941" width="0.1" height="15.0" fill="rgb(219,73,34)" rx="2" ry="2" />
<text  x="500.68" y="1951.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (4 samples, 0.02%)</title><rect x="177.9" y="1621" width="0.3" height="15.0" fill="rgb(239,195,33)" rx="2" ry="2" />
<text  x="180.90" y="1631.5" ></text>
</g>
<g >
<title>__asan_memcpy (2 samples, 0.01%)</title><rect x="554.1" y="1893" width="0.1" height="15.0" fill="rgb(252,189,15)" rx="2" ry="2" />
<text  x="557.11" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (3 samples, 0.02%)</title><rect x="161.6" y="1829" width="0.2" height="15.0" fill="rgb(211,143,46)" rx="2" ry="2" />
<text  x="164.62" y="1839.5" ></text>
</g>
<g >
<title>__handle_mm_fault (5 samples, 0.03%)</title><rect x="1096.3" y="1957" width="0.3" height="15.0" fill="rgb(207,210,45)" rx="2" ry="2" />
<text  x="1099.33" y="1967.5" ></text>
</g>
<g >
<title>page_fault (32 samples, 0.17%)</title><rect x="491.6" y="1957" width="2.0" height="15.0" fill="rgb(247,219,29)" rx="2" ry="2" />
<text  x="494.56" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="188.3" y="1605" width="0.1" height="15.0" fill="rgb(238,183,2)" rx="2" ry="2" />
<text  x="191.32" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (79 samples, 0.42%)</title><rect x="211.1" y="1797" width="5.0" height="15.0" fill="rgb(243,108,36)" rx="2" ry="2" />
<text  x="214.11" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (322 samples, 1.72%)</title><rect x="55.6" y="213" width="20.3" height="15.0" fill="rgb(243,75,7)" rx="2" ry="2" />
<text  x="58.57" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1187.9" y="645" width="0.1" height="15.0" fill="rgb(223,43,34)" rx="2" ry="2" />
<text  x="1190.85" y="655.5" ></text>
</g>
<g >
<title>__dynamic_cast (4 samples, 0.02%)</title><rect x="493.6" y="1973" width="0.2" height="15.0" fill="rgb(246,102,54)" rx="2" ry="2" />
<text  x="496.58" y="1983.5" ></text>
</g>
<g >
<title>__handle_mm_fault (12 samples, 0.06%)</title><rect x="660.0" y="1781" width="0.7" height="15.0" fill="rgb(221,44,16)" rx="2" ry="2" />
<text  x="662.97" y="1791.5" ></text>
</g>
<g >
<title>arch_tlb_finish_mmu (2 samples, 0.01%)</title><rect x="87.8" y="1701" width="0.1" height="15.0" fill="rgb(218,32,27)" rx="2" ry="2" />
<text  x="90.77" y="1711.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (6 samples, 0.03%)</title><rect x="180.6" y="1621" width="0.3" height="15.0" fill="rgb(252,99,49)" rx="2" ry="2" />
<text  x="183.56" y="1631.5" ></text>
</g>
<g >
<title>__asan::AsanThread::stack_top (3 samples, 0.02%)</title><rect x="1116.5" y="2037" width="0.2" height="15.0" fill="rgb(228,187,48)" rx="2" ry="2" />
<text  x="1119.46" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (77 samples, 0.41%)</title><rect x="211.1" y="1717" width="4.9" height="15.0" fill="rgb(250,89,29)" rx="2" ry="2" />
<text  x="214.11" y="1727.5" ></text>
</g>
<g >
<title>__asan::asan_memalign (10 samples, 0.05%)</title><rect x="1162.2" y="2037" width="0.6" height="15.0" fill="rgb(211,56,41)" rx="2" ry="2" />
<text  x="1165.16" y="2047.5" ></text>
</g>
<g >
<title>__asan_memset (12 samples, 0.06%)</title><rect x="633.1" y="1877" width="0.7" height="15.0" fill="rgb(221,164,31)" rx="2" ry="2" />
<text  x="636.08" y="1887.5" ></text>
</g>
<g >
<title>do_page_fault (5 samples, 0.03%)</title><rect x="1012.1" y="2021" width="0.3" height="15.0" fill="rgb(244,183,52)" rx="2" ry="2" />
<text  x="1015.12" y="2031.5" ></text>
</g>
<g >
<title>__sanitizer_weak_hook_strcmp (6 samples, 0.03%)</title><rect x="41.8" y="2021" width="0.3" height="15.0" fill="rgb(226,143,19)" rx="2" ry="2" />
<text  x="44.75" y="2031.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (4 samples, 0.02%)</title><rect x="83.0" y="1509" width="0.3" height="15.0" fill="rgb(215,155,29)" rx="2" ry="2" />
<text  x="86.03" y="1519.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.02%)</title><rect x="750.5" y="2005" width="0.3" height="15.0" fill="rgb(239,132,23)" rx="2" ry="2" />
<text  x="753.55" y="2015.5" ></text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::get (3 samples, 0.02%)</title><rect x="122.9" y="1941" width="0.2" height="15.0" fill="rgb(205,218,44)" rx="2" ry="2" />
<text  x="125.93" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1188.0" y="1861" width="0.2" height="15.0" fill="rgb(236,134,10)" rx="2" ry="2" />
<text  x="1191.04" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (453 samples, 2.42%)</title><rect x="55.5" y="1589" width="28.6" height="15.0" fill="rgb(209,33,50)" rx="2" ry="2" />
<text  x="58.51" y="1599.5" >[u..</text>
</g>
<g >
<title>memcpy (2 samples, 0.01%)</title><rect x="552.3" y="1877" width="0.2" height="15.0" fill="rgb(226,84,18)" rx="2" ry="2" />
<text  x="555.34" y="1887.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (43 samples, 0.23%)</title><rect x="184.4" y="1669" width="2.7" height="15.0" fill="rgb(242,192,17)" rx="2" ry="2" />
<text  x="187.41" y="1679.5" ></text>
</g>
<g >
<title>__handle_mm_fault (45 samples, 0.24%)</title><rect x="23.0" y="1973" width="2.8" height="15.0" fill="rgb(207,35,24)" rx="2" ry="2" />
<text  x="26.00" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="188.3" y="1573" width="0.1" height="15.0" fill="rgb(253,164,22)" rx="2" ry="2" />
<text  x="191.32" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.6" y="2005" width="0.4" height="15.0" fill="rgb(250,79,16)" rx="2" ry="2" />
<text  x="1190.60" y="2015.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::getLine (377 samples, 2.02%)</title><rect x="521.6" y="1925" width="23.8" height="15.0" fill="rgb(214,158,37)" rx="2" ry="2" />
<text  x="524.60" y="1935.5" >f..</text>
</g>
<g >
<title>__handle_mm_fault (2 samples, 0.01%)</title><rect x="497.7" y="1909" width="0.1" height="15.0" fill="rgb(244,32,40)" rx="2" ry="2" />
<text  x="500.68" y="1919.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; const*, std::vector&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::allocator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;*&gt; (3 samples, 0.02%)</title><rect x="501.5" y="1717" width="0.2" height="15.0" fill="rgb(217,115,42)" rx="2" ry="2" />
<text  x="504.53" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.0" y="485" width="0.2" height="15.0" fill="rgb(233,75,18)" rx="2" ry="2" />
<text  x="1191.04" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1187.3" y="725" width="0.3" height="15.0" fill="rgb(208,46,2)" rx="2" ry="2" />
<text  x="1190.29" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (177 samples, 0.95%)</title><rect x="189.5" y="1749" width="11.1" height="15.0" fill="rgb(234,43,43)" rx="2" ry="2" />
<text  x="192.46" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.02%)</title><rect x="752.4" y="2021" width="0.2" height="15.0" fill="rgb(227,20,44)" rx="2" ry="2" />
<text  x="755.38" y="2031.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&gt;::GetFromAllocator (15 samples, 0.08%)</title><rect x="749.5" y="2037" width="0.9" height="15.0" fill="rgb(244,30,5)" rx="2" ry="2" />
<text  x="752.47" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (95 samples, 0.51%)</title><rect x="144.6" y="1669" width="6.0" height="15.0" fill="rgb(209,2,43)" rx="2" ry="2" />
<text  x="147.64" y="1679.5" ></text>
</g>
<g >
<title>__do_munmap (2 samples, 0.01%)</title><rect x="86.8" y="1685" width="0.1" height="15.0" fill="rgb(222,122,52)" rx="2" ry="2" />
<text  x="89.82" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.05%)</title><rect x="162.4" y="1797" width="0.6" height="15.0" fill="rgb(240,215,13)" rx="2" ry="2" />
<text  x="165.44" y="1807.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (43 samples, 0.23%)</title><rect x="197.3" y="1605" width="2.7" height="15.0" fill="rgb(236,162,1)" rx="2" ry="2" />
<text  x="200.28" y="1615.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::basic_json (9 samples, 0.05%)</title><rect x="499.7" y="2005" width="0.6" height="15.0" fill="rgb(243,206,50)" rx="2" ry="2" />
<text  x="502.70" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1187.3" y="917" width="0.3" height="15.0" fill="rgb(248,37,39)" rx="2" ry="2" />
<text  x="1190.29" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (72 samples, 0.39%)</title><rect x="200.9" y="1701" width="4.6" height="15.0" fill="rgb(224,97,43)" rx="2" ry="2" />
<text  x="203.94" y="1711.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (2 samples, 0.01%)</title><rect x="751.6" y="1893" width="0.1" height="15.0" fill="rgb(235,106,44)" rx="2" ry="2" />
<text  x="754.62" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1187.3" y="1093" width="0.3" height="15.0" fill="rgb(248,153,35)" rx="2" ry="2" />
<text  x="1190.29" y="1103.5" ></text>
</g>
<g >
<title>__handle_mm_fault (2 samples, 0.01%)</title><rect x="499.6" y="1877" width="0.1" height="15.0" fill="rgb(218,153,49)" rx="2" ry="2" />
<text  x="502.57" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1187.3" y="581" width="0.3" height="15.0" fill="rgb(237,227,1)" rx="2" ry="2" />
<text  x="1190.29" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.2" y="1653" width="0.4" height="15.0" fill="rgb(213,122,1)" rx="2" ry="2" />
<text  x="1190.22" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="1187.8" y="1397" width="0.2" height="15.0" fill="rgb(251,80,26)" rx="2" ry="2" />
<text  x="1190.79" y="1407.5" ></text>
</g>
<g >
<title>main (6,041 samples, 32.32%)</title><rect x="121.2" y="2021" width="381.3" height="15.0" fill="rgb(222,28,29)" rx="2" ry="2" />
<text  x="124.16" y="2031.5" >main</text>
</g>
<g >
<title>__do_page_fault (5 samples, 0.03%)</title><rect x="1012.1" y="2005" width="0.3" height="15.0" fill="rgb(252,109,0)" rx="2" ry="2" />
<text  x="1015.12" y="2015.5" ></text>
</g>
<g >
<title>__interceptor_strlen (5 samples, 0.03%)</title><rect x="547.0" y="1925" width="0.3" height="15.0" fill="rgb(227,75,44)" rx="2" ry="2" />
<text  x="549.98" y="1935.5" ></text>
</g>
<g >
<title>__asan::AsanChunk::UsedSize (48 samples, 0.26%)</title><rect x="948.5" y="2053" width="3.0" height="15.0" fill="rgb(223,68,22)" rx="2" ry="2" />
<text  x="951.50" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (324 samples, 1.73%)</title><rect x="55.6" y="293" width="20.4" height="15.0" fill="rgb(248,151,9)" rx="2" ry="2" />
<text  x="58.57" y="303.5" ></text>
</g>
<g >
<title>clear_page_erms (2 samples, 0.01%)</title><rect x="1096.4" y="1909" width="0.1" height="15.0" fill="rgb(210,205,37)" rx="2" ry="2" />
<text  x="1099.39" y="1919.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.03%)</title><rect x="199.0" y="1589" width="0.3" height="15.0" fill="rgb(238,198,39)" rx="2" ry="2" />
<text  x="201.99" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.02%)</title><rect x="1187.8" y="1461" width="0.2" height="15.0" fill="rgb(249,52,51)" rx="2" ry="2" />
<text  x="1190.79" y="1471.5" ></text>
</g>
<g >
<title>alloc_pages_vma (2 samples, 0.01%)</title><rect x="714.8" y="1797" width="0.1" height="15.0" fill="rgb(219,104,29)" rx="2" ry="2" />
<text  x="717.76" y="1807.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (3 samples, 0.02%)</title><rect x="54.9" y="1909" width="0.2" height="15.0" fill="rgb(205,31,14)" rx="2" ry="2" />
<text  x="57.88" y="1919.5" ></text>
</g>
<g >
<title>native_send_call_func_single_ipi (14 samples, 0.07%)</title><rect x="928.9" y="1797" width="0.9" height="15.0" fill="rgb(209,85,47)" rx="2" ry="2" />
<text  x="931.93" y="1807.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="162.0" y="1749" width="0.1" height="15.0" fill="rgb(239,144,8)" rx="2" ry="2" />
<text  x="165.00" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="162.4" y="1525" width="0.2" height="15.0" fill="rgb(213,208,54)" rx="2" ry="2" />
<text  x="165.44" y="1535.5" ></text>
</g>
<g >
<title>[unknown] (319 samples, 1.71%)</title><rect x="55.6" y="101" width="20.1" height="15.0" fill="rgb(232,137,29)" rx="2" ry="2" />
<text  x="58.57" y="111.5" ></text>
</g>
<g >
<title>native_send_call_func_single_ipi (2 samples, 0.01%)</title><rect x="505.2" y="1797" width="0.1" height="15.0" fill="rgb(247,39,3)" rx="2" ry="2" />
<text  x="508.19" y="1807.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.03%)</title><rect x="214.7" y="1669" width="0.4" height="15.0" fill="rgb(237,224,0)" rx="2" ry="2" />
<text  x="217.70" y="1679.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="172.9" y="1605" width="0.1" height="15.0" fill="rgb(215,217,1)" rx="2" ry="2" />
<text  x="175.92" y="1615.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (11 samples, 0.06%)</title><rect x="750.9" y="1973" width="0.7" height="15.0" fill="rgb(211,221,3)" rx="2" ry="2" />
<text  x="753.92" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.0" y="741" width="0.2" height="15.0" fill="rgb(223,223,41)" rx="2" ry="2" />
<text  x="1191.04" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1187.9" y="1173" width="0.1" height="15.0" fill="rgb(210,93,36)" rx="2" ry="2" />
<text  x="1190.85" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.9" y="533" width="0.1" height="15.0" fill="rgb(244,214,39)" rx="2" ry="2" />
<text  x="1190.85" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (2 samples, 0.01%)</title><rect x="162.0" y="1781" width="0.1" height="15.0" fill="rgb(253,210,44)" rx="2" ry="2" />
<text  x="165.00" y="1791.5" ></text>
</g>
<g >
<title>__libc_read (3 samples, 0.02%)</title><rect x="121.0" y="2037" width="0.2" height="15.0" fill="rgb(250,152,38)" rx="2" ry="2" />
<text  x="123.97" y="2047.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (2 samples, 0.01%)</title><rect x="633.9" y="1877" width="0.1" height="15.0" fill="rgb(245,74,15)" rx="2" ry="2" />
<text  x="636.90" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (2 samples, 0.01%)</title><rect x="161.6" y="1749" width="0.1" height="15.0" fill="rgb(237,71,25)" rx="2" ry="2" />
<text  x="164.62" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (476 samples, 2.55%)</title><rect x="131.8" y="1893" width="30.1" height="15.0" fill="rgb(228,44,46)" rx="2" ry="2" />
<text  x="134.83" y="1903.5" >st..</text>
</g>
<g >
<title>[unknown] (464 samples, 2.48%)</title><rect x="55.5" y="1621" width="29.3" height="15.0" fill="rgb(243,12,50)" rx="2" ry="2" />
<text  x="58.51" y="1631.5" >[u..</text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::basic_json (3 samples, 0.02%)</title><rect x="501.5" y="1973" width="0.2" height="15.0" fill="rgb(216,217,25)" rx="2" ry="2" />
<text  x="504.53" y="1983.5" ></text>
</g>
<g >
<title>mem_cgroup_throttle_swaprate (2 samples, 0.01%)</title><rect x="493.3" y="1861" width="0.2" height="15.0" fill="rgb(217,63,10)" rx="2" ry="2" />
<text  x="496.32" y="1871.5" ></text>
</g>
<g >
<title>__asan_memcpy (3 samples, 0.02%)</title><rect x="170.5" y="1573" width="0.1" height="15.0" fill="rgb(237,115,47)" rx="2" ry="2" />
<text  x="173.46" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1187.3" y="165" width="0.3" height="15.0" fill="rgb(249,145,30)" rx="2" ry="2" />
<text  x="1190.29" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1187.3" y="1253" width="0.3" height="15.0" fill="rgb(234,130,6)" rx="2" ry="2" />
<text  x="1190.29" y="1263.5" ></text>
</g>
<g >
<title>[unknown] (336 samples, 1.80%)</title><rect x="55.6" y="805" width="21.2" height="15.0" fill="rgb(234,145,40)" rx="2" ry="2" />
<text  x="58.57" y="815.5" ></text>
</g>
<g >
<title>[unknown] (15 samples, 0.08%)</title><rect x="752.9" y="2021" width="0.9" height="15.0" fill="rgb(217,7,24)" rx="2" ry="2" />
<text  x="755.88" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1188.0" y="1573" width="0.2" height="15.0" fill="rgb(217,110,14)" rx="2" ry="2" />
<text  x="1191.04" y="1583.5" ></text>
</g>
<g >
<title>arch_tlb_finish_mmu (11 samples, 0.06%)</title><rect x="504.9" y="1941" width="0.7" height="15.0" fill="rgb(239,126,34)" rx="2" ry="2" />
<text  x="507.94" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (7 samples, 0.04%)</title><rect x="216.5" y="1861" width="0.4" height="15.0" fill="rgb(254,57,45)" rx="2" ry="2" />
<text  x="219.47" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1187.9" y="1221" width="0.1" height="15.0" fill="rgb(207,117,49)" rx="2" ry="2" />
<text  x="1190.85" y="1231.5" ></text>
</g>
<g >
<title>__dynamic_cast (58 samples, 0.31%)</title><rect x="984.6" y="2053" width="3.7" height="15.0" fill="rgb(224,147,27)" rx="2" ry="2" />
<text  x="987.60" y="2063.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::computeSubwords (23 samples, 0.12%)</title><rect x="316.6" y="1941" width="1.4" height="15.0" fill="rgb(253,177,12)" rx="2" ry="2" />
<text  x="319.58" y="1951.5" ></text>
</g>
<g >
<title>operator delete (8 samples, 0.04%)</title><rect x="318.4" y="1957" width="0.5" height="15.0" fill="rgb(209,197,46)" rx="2" ry="2" />
<text  x="321.41" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="188.3" y="1525" width="0.1" height="15.0" fill="rgb(236,130,46)" rx="2" ry="2" />
<text  x="191.32" y="1535.5" ></text>
</g>
<g >
<title>__x64_sys_madvise (17 samples, 0.09%)</title><rect x="504.9" y="1989" width="1.1" height="15.0" fill="rgb(226,191,30)" rx="2" ry="2" />
<text  x="507.94" y="1999.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (2 samples, 0.01%)</title><rect x="82.0" y="1269" width="0.1" height="15.0" fill="rgb(246,48,39)" rx="2" ry="2" />
<text  x="84.96" y="1279.5" ></text>
</g>
<g >
<title>__asan::Allocator::Deallocate (11 samples, 0.06%)</title><rect x="1150.5" y="2037" width="0.7" height="15.0" fill="rgb(216,5,34)" rx="2" ry="2" />
<text  x="1153.55" y="2047.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (5 samples, 0.03%)</title><rect x="505.3" y="1893" width="0.3" height="15.0" fill="rgb(226,203,3)" rx="2" ry="2" />
<text  x="508.32" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (389 samples, 2.08%)</title><rect x="163.6" y="1909" width="24.5" height="15.0" fill="rgb(227,223,6)" rx="2" ry="2" />
<text  x="166.58" y="1919.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1187.3" y="1221" width="0.3" height="15.0" fill="rgb(250,74,13)" rx="2" ry="2" />
<text  x="1190.29" y="1231.5" ></text>
</g>
<g >
<title>Preprocess (3,088 samples, 16.52%)</title><rect x="546.0" y="1957" width="194.9" height="15.0" fill="rgb(219,123,17)" rx="2" ry="2" />
<text  x="548.97" y="1967.5" >Preprocess</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (150 samples, 0.80%)</title><rect x="163.7" y="1733" width="9.5" height="15.0" fill="rgb(250,189,2)" rx="2" ry="2" />
<text  x="166.70" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.9" y="1333" width="0.1" height="15.0" fill="rgb(239,139,36)" rx="2" ry="2" />
<text  x="1190.85" y="1343.5" ></text>
</g>
<g >
<title>Eigen::DenseBase&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt;::setConstant (36 samples, 0.19%)</title><rect x="481.0" y="1941" width="2.3" height="15.0" fill="rgb(238,51,53)" rx="2" ry="2" />
<text  x="484.02" y="1951.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (50 samples, 0.27%)</title><rect x="179.9" y="1637" width="3.1" height="15.0" fill="rgb(225,128,17)" rx="2" ry="2" />
<text  x="182.86" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1188.0" y="1621" width="0.2" height="15.0" fill="rgb(254,203,47)" rx="2" ry="2" />
<text  x="1191.04" y="1631.5" ></text>
</g>
<g >
<title>page_fault (17 samples, 0.09%)</title><rect x="747.8" y="2021" width="1.0" height="15.0" fill="rgb(253,145,38)" rx="2" ry="2" />
<text  x="750.77" y="2031.5" ></text>
</g>
<g >
<title>clear_page_erms (2 samples, 0.01%)</title><rect x="499.6" y="1829" width="0.1" height="15.0" fill="rgb(254,182,37)" rx="2" ry="2" />
<text  x="502.57" y="1839.5" ></text>
</g>
<g >
<title>__asan::PoisonShadow (116 samples, 0.62%)</title><rect x="960.0" y="2053" width="7.4" height="15.0" fill="rgb(232,57,40)" rx="2" ry="2" />
<text  x="963.05" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1187.3" y="565" width="0.3" height="15.0" fill="rgb(211,128,5)" rx="2" ry="2" />
<text  x="1190.29" y="575.5" ></text>
</g>
<g >
<title>ksys_read (2 samples, 0.01%)</title><rect x="121.0" y="1973" width="0.2" height="15.0" fill="rgb(214,2,42)" rx="2" ry="2" />
<text  x="124.03" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1187.3" y="1301" width="0.3" height="15.0" fill="rgb(254,156,2)" rx="2" ry="2" />
<text  x="1190.29" y="1311.5" ></text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.02%)</title><rect x="201.3" y="1637" width="0.2" height="15.0" fill="rgb(205,87,50)" rx="2" ry="2" />
<text  x="204.32" y="1647.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.01%)</title><rect x="165.5" y="1557" width="0.2" height="15.0" fill="rgb(233,8,33)" rx="2" ry="2" />
<text  x="168.53" y="1567.5" ></text>
</g>
<g >
<title>nlohmann::detail::external_constructor&lt; (6 samples, 0.03%)</title><rect x="122.4" y="1909" width="0.4" height="15.0" fill="rgb(245,18,11)" rx="2" ry="2" />
<text  x="125.42" y="1919.5" ></text>
</g>
<g >
<title>__sanitizer::BlockingMutex::Lock (7 samples, 0.04%)</title><rect x="741.5" y="2037" width="0.5" height="15.0" fill="rgb(227,8,9)" rx="2" ry="2" />
<text  x="744.52" y="2047.5" ></text>
</g>
<g >
<title>operator new (9 samples, 0.05%)</title><rect x="171.7" y="1573" width="0.6" height="15.0" fill="rgb(212,5,24)" rx="2" ry="2" />
<text  x="174.72" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.6" y="1909" width="0.4" height="15.0" fill="rgb(226,227,31)" rx="2" ry="2" />
<text  x="1190.60" y="1919.5" ></text>
</g>
<g >
<title>__pthread_getspecific (2 samples, 0.01%)</title><rect x="185.7" y="1653" width="0.2" height="15.0" fill="rgb(244,205,3)" rx="2" ry="2" />
<text  x="188.73" y="1663.5" ></text>
</g>
<g >
<title>__asan_memcpy (3 samples, 0.02%)</title><rect x="153.4" y="1637" width="0.2" height="15.0" fill="rgb(223,163,42)" rx="2" ry="2" />
<text  x="156.41" y="1647.5" ></text>
</g>
<g >
<title>__strxfrm_l (46 samples, 0.25%)</title><rect x="1168.2" y="2021" width="2.9" height="15.0" fill="rgb(249,193,22)" rx="2" ry="2" />
<text  x="1171.16" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (13 samples, 0.07%)</title><rect x="216.3" y="1893" width="0.8" height="15.0" fill="rgb(219,171,51)" rx="2" ry="2" />
<text  x="219.28" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (341 samples, 1.82%)</title><rect x="55.6" y="1077" width="21.5" height="15.0" fill="rgb(218,197,46)" rx="2" ry="2" />
<text  x="58.57" y="1087.5" >[..</text>
</g>
<g >
<title>do_page_fault (7 samples, 0.04%)</title><rect x="634.3" y="1845" width="0.5" height="15.0" fill="rgb(231,31,50)" rx="2" ry="2" />
<text  x="637.34" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (340 samples, 1.82%)</title><rect x="55.6" y="1029" width="21.4" height="15.0" fill="rgb(232,214,4)" rx="2" ry="2" />
<text  x="58.57" y="1039.5" >[..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (81 samples, 0.43%)</title><rect x="150.8" y="1733" width="5.1" height="15.0" fill="rgb(230,42,4)" rx="2" ry="2" />
<text  x="153.82" y="1743.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotPut (3 samples, 0.02%)</title><rect x="176.6" y="1589" width="0.2" height="15.0" fill="rgb(228,177,37)" rx="2" ry="2" />
<text  x="179.58" y="1599.5" ></text>
</g>
<g >
<title>__asan::GetMallocContextSize (3 samples, 0.02%)</title><rect x="197.8" y="1589" width="0.2" height="15.0" fill="rgb(241,154,38)" rx="2" ry="2" />
<text  x="200.79" y="1599.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (3 samples, 0.02%)</title><rect x="159.9" y="1669" width="0.2" height="15.0" fill="rgb(238,164,41)" rx="2" ry="2" />
<text  x="162.91" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (385 samples, 2.06%)</title><rect x="163.6" y="1877" width="24.3" height="15.0" fill="rgb(247,181,40)" rx="2" ry="2" />
<text  x="166.58" y="1887.5" >s..</text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_BracketMatcher (2 samples, 0.01%)</title><rect x="164.0" y="1605" width="0.1" height="15.0" fill="rgb(205,88,29)" rx="2" ry="2" />
<text  x="166.95" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (77 samples, 0.41%)</title><rect x="173.4" y="1653" width="4.9" height="15.0" fill="rgb(252,128,5)" rx="2" ry="2" />
<text  x="176.42" y="1663.5" ></text>
</g>
<g >
<title>generic_file_read_iter (2 samples, 0.01%)</title><rect x="1104.8" y="1893" width="0.1" height="15.0" fill="rgb(241,133,40)" rx="2" ry="2" />
<text  x="1107.79" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.9" y="805" width="0.1" height="15.0" fill="rgb(211,182,34)" rx="2" ry="2" />
<text  x="1190.85" y="815.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&gt;::ReturnToAllocator (15 samples, 0.08%)</title><rect x="1011.5" y="2053" width="0.9" height="15.0" fill="rgb(254,98,6)" rx="2" ry="2" />
<text  x="1014.49" y="2063.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="161.2" y="1685" width="0.2" height="15.0" fill="rgb(236,113,50)" rx="2" ry="2" />
<text  x="164.24" y="1695.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (37 samples, 0.20%)</title><rect x="1123.2" y="2037" width="2.4" height="15.0" fill="rgb(225,70,21)" rx="2" ry="2" />
<text  x="1126.22" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="162.4" y="1429" width="0.2" height="15.0" fill="rgb(226,108,32)" rx="2" ry="2" />
<text  x="165.44" y="1439.5" ></text>
</g>
<g >
<title>Eigen::internal::gemv_dense_selector&lt;2, 1, true&gt;::run&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; &gt; (359 samples, 1.92%)</title><rect x="374.4" y="1941" width="22.7" height="15.0" fill="rgb(246,63,7)" rx="2" ry="2" />
<text  x="377.40" y="1951.5" >E..</text>
</g>
<g >
<title>Eigen::DenseBase&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; &gt;::setConstant (4 samples, 0.02%)</title><rect x="373.7" y="1941" width="0.3" height="15.0" fill="rgb(237,126,25)" rx="2" ry="2" />
<text  x="376.71" y="1951.5" ></text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (2 samples, 0.01%)</title><rect x="660.4" y="1765" width="0.1" height="15.0" fill="rgb(247,194,18)" rx="2" ry="2" />
<text  x="663.41" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.03%)</title><rect x="860.7" y="2021" width="0.3" height="15.0" fill="rgb(245,191,25)" rx="2" ry="2" />
<text  x="863.69" y="2031.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (2 samples, 0.01%)</title><rect x="84.3" y="1413" width="0.1" height="15.0" fill="rgb(215,15,43)" rx="2" ry="2" />
<text  x="87.29" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (58 samples, 0.31%)</title><rect x="183.8" y="1717" width="3.6" height="15.0" fill="rgb(237,100,0)" rx="2" ry="2" />
<text  x="186.77" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1187.9" y="1317" width="0.1" height="15.0" fill="rgb(227,33,8)" rx="2" ry="2" />
<text  x="1190.85" y="1327.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::readWord (61 samples, 0.33%)</title><rect x="94.1" y="2021" width="3.9" height="15.0" fill="rgb(224,144,46)" rx="2" ry="2" />
<text  x="97.14" y="2031.5" ></text>
</g>
<g >
<title>do_page_fault (32 samples, 0.17%)</title><rect x="491.6" y="1941" width="2.0" height="15.0" fill="rgb(206,10,14)" rx="2" ry="2" />
<text  x="494.56" y="1951.5" ></text>
</g>
<g >
<title>__lsan::LsanMetadata::allocated (6 samples, 0.03%)</title><rect x="504.0" y="2037" width="0.4" height="15.0" fill="rgb(233,139,40)" rx="2" ry="2" />
<text  x="506.99" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (447 samples, 2.39%)</title><rect x="55.5" y="1557" width="28.2" height="15.0" fill="rgb(223,87,38)" rx="2" ry="2" />
<text  x="58.51" y="1567.5" >[..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.9" y="869" width="0.1" height="15.0" fill="rgb(232,162,27)" rx="2" ry="2" />
<text  x="1190.85" y="879.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::addSubwords (3 samples, 0.02%)</title><rect x="752.4" y="2037" width="0.2" height="15.0" fill="rgb(215,206,39)" rx="2" ry="2" />
<text  x="755.38" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_expression_term&lt;false, false&gt; (2 samples, 0.01%)</title><rect x="150.4" y="1653" width="0.1" height="15.0" fill="rgb(232,132,48)" rx="2" ry="2" />
<text  x="153.38" y="1663.5" ></text>
</g>
<g >
<title>__sanitizer::internal_memmove (25 samples, 0.13%)</title><rect x="314.9" y="1941" width="1.6" height="15.0" fill="rgb(234,79,47)" rx="2" ry="2" />
<text  x="317.94" y="1951.5" ></text>
</g>
<g >
<title>get_page_from_freelist (3 samples, 0.02%)</title><rect x="660.2" y="1733" width="0.1" height="15.0" fill="rgb(251,130,27)" rx="2" ry="2" />
<text  x="663.16" y="1743.5" ></text>
</g>
<g >
<title>alloc_pages_vma (2 samples, 0.01%)</title><rect x="630.2" y="1781" width="0.1" height="15.0" fill="rgb(246,23,44)" rx="2" ry="2" />
<text  x="633.17" y="1791.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (3 samples, 0.02%)</title><rect x="86.9" y="1781" width="0.2" height="15.0" fill="rgb(235,51,39)" rx="2" ry="2" />
<text  x="89.95" y="1791.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (225 samples, 1.20%)</title><rect x="27.9" y="2037" width="14.2" height="15.0" fill="rgb(227,160,37)" rx="2" ry="2" />
<text  x="30.93" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1187.3" y="1381" width="0.3" height="15.0" fill="rgb(250,202,44)" rx="2" ry="2" />
<text  x="1190.29" y="1391.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (66 samples, 0.35%)</title><rect x="714.9" y="1877" width="4.2" height="15.0" fill="rgb(235,135,50)" rx="2" ry="2" />
<text  x="717.94" y="1887.5" ></text>
</g>
<g >
<title>TDocument::operator= (3 samples, 0.02%)</title><rect x="502.2" y="1957" width="0.2" height="15.0" fill="rgb(248,75,28)" rx="2" ry="2" />
<text  x="505.16" y="1967.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (8 samples, 0.04%)</title><rect x="209.6" y="1637" width="0.5" height="15.0" fill="rgb(222,68,40)" rx="2" ry="2" />
<text  x="212.59" y="1647.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (2 samples, 0.01%)</title><rect x="741.3" y="1957" width="0.1" height="15.0" fill="rgb(230,13,50)" rx="2" ry="2" />
<text  x="744.27" y="1967.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::basic_regex&lt;char const*&gt; (482 samples, 2.58%)</title><rect x="131.8" y="1957" width="30.4" height="15.0" fill="rgb(212,159,7)" rx="2" ry="2" />
<text  x="134.83" y="1967.5" >st..</text>
</g>
<g >
<title>free_unref_page_list (2 samples, 0.01%)</title><rect x="84.0" y="1365" width="0.1" height="15.0" fill="rgb(219,17,19)" rx="2" ry="2" />
<text  x="86.98" y="1375.5" ></text>
</g>
<g >
<title>__pthread_getspecific (3 samples, 0.02%)</title><rect x="594.4" y="1845" width="0.2" height="15.0" fill="rgb(250,141,25)" rx="2" ry="2" />
<text  x="597.45" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (87 samples, 0.47%)</title><rect x="139.0" y="1653" width="5.4" height="15.0" fill="rgb(215,188,10)" rx="2" ry="2" />
<text  x="141.96" y="1663.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (3 samples, 0.02%)</title><rect x="795.4" y="2005" width="0.2" height="15.0" fill="rgb(211,15,52)" rx="2" ry="2" />
<text  x="798.43" y="2015.5" ></text>
</g>
<g >
<title>__interceptor_strlen (74 samples, 0.40%)</title><rect x="732.9" y="1877" width="4.7" height="15.0" fill="rgb(248,53,26)" rx="2" ry="2" />
<text  x="735.93" y="1887.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::json_value::destroy (3 samples, 0.02%)</title><rect x="791.3" y="2037" width="0.2" height="15.0" fill="rgb(219,18,11)" rx="2" ry="2" />
<text  x="794.32" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.9" y="469" width="0.1" height="15.0" fill="rgb(209,143,23)" rx="2" ry="2" />
<text  x="1190.85" y="479.5" ></text>
</g>
<g >
<title>handle_mm_fault (2 samples, 0.01%)</title><rect x="499.6" y="1893" width="0.1" height="15.0" fill="rgb(215,194,17)" rx="2" ry="2" />
<text  x="502.57" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.9" y="389" width="0.1" height="15.0" fill="rgb(220,3,11)" rx="2" ry="2" />
<text  x="1190.85" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1188.0" y="1285" width="0.2" height="15.0" fill="rgb(221,161,51)" rx="2" ry="2" />
<text  x="1191.04" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1187.9" y="213" width="0.1" height="15.0" fill="rgb(231,64,29)" rx="2" ry="2" />
<text  x="1190.85" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (58 samples, 0.31%)</title><rect x="191.4" y="1573" width="3.7" height="15.0" fill="rgb(243,24,16)" rx="2" ry="2" />
<text  x="194.41" y="1583.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; const&amp;&gt; (3 samples, 0.02%)</title><rect x="501.5" y="1909" width="0.2" height="15.0" fill="rgb(214,60,34)" rx="2" ry="2" />
<text  x="504.53" y="1919.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="77.5" y="1125" width="0.2" height="15.0" fill="rgb(240,40,32)" rx="2" ry="2" />
<text  x="80.54" y="1135.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (4 samples, 0.02%)</title><rect x="77.8" y="1141" width="0.2" height="15.0" fill="rgb(240,1,3)" rx="2" ry="2" />
<text  x="80.79" y="1151.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (16 samples, 0.09%)</title><rect x="23.5" y="1941" width="1.0" height="15.0" fill="rgb(211,13,27)" rx="2" ry="2" />
<text  x="26.51" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="162.4" y="1349" width="0.2" height="15.0" fill="rgb(250,32,47)" rx="2" ry="2" />
<text  x="165.44" y="1359.5" ></text>
</g>
<g >
<title>strlen@plt (2 samples, 0.01%)</title><rect x="1189.9" y="2053" width="0.1" height="15.0" fill="rgb(209,16,51)" rx="2" ry="2" />
<text  x="1192.87" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.2" y="1989" width="0.4" height="15.0" fill="rgb(237,158,18)" rx="2" ry="2" />
<text  x="1190.22" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (3 samples, 0.02%)</title><rect x="200.6" y="1749" width="0.2" height="15.0" fill="rgb(232,21,48)" rx="2" ry="2" />
<text  x="203.63" y="1759.5" ></text>
</g>
<g >
<title>__asan::AsanTSDGet (45 samples, 0.24%)</title><rect x="951.5" y="2053" width="2.9" height="15.0" fill="rgb(253,166,43)" rx="2" ry="2" />
<text  x="954.53" y="2063.5" ></text>
</g>
<g >
<title>vfs_read (2 samples, 0.01%)</title><rect x="1104.8" y="1957" width="0.1" height="15.0" fill="rgb(208,138,34)" rx="2" ry="2" />
<text  x="1107.79" y="1967.5" ></text>
</g>
<g >
<title>fasttext::Vector::addRow (12 samples, 0.06%)</title><rect x="787.6" y="2037" width="0.8" height="15.0" fill="rgb(217,40,18)" rx="2" ry="2" />
<text  x="790.60" y="2047.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (4 samples, 0.02%)</title><rect x="43.1" y="2005" width="0.3" height="15.0" fill="rgb(241,52,34)" rx="2" ry="2" />
<text  x="46.14" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (382 samples, 2.04%)</title><rect x="131.8" y="1797" width="24.1" height="15.0" fill="rgb(228,84,38)" rx="2" ry="2" />
<text  x="134.83" y="1807.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1188.0" y="2053" width="0.2" height="15.0" fill="rgb(211,101,27)" rx="2" ry="2" />
<text  x="1191.04" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (333 samples, 1.78%)</title><rect x="55.6" y="677" width="21.0" height="15.0" fill="rgb(219,90,33)" rx="2" ry="2" />
<text  x="58.57" y="687.5" ></text>
</g>
<g >
<title>find_vma (2 samples, 0.01%)</title><rect x="630.0" y="1813" width="0.2" height="15.0" fill="rgb(225,162,27)" rx="2" ry="2" />
<text  x="633.05" y="1823.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (2 samples, 0.01%)</title><rect x="1114.9" y="2053" width="0.1" height="15.0" fill="rgb(212,167,41)" rx="2" ry="2" />
<text  x="1117.88" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1187.3" y="1525" width="0.3" height="15.0" fill="rgb(247,75,10)" rx="2" ry="2" />
<text  x="1190.29" y="1535.5" ></text>
</g>
<g >
<title>fasttext::HierarchicalSoftmaxLoss::dfs (3 samples, 0.02%)</title><rect x="545.6" y="1909" width="0.2" height="15.0" fill="rgb(253,71,20)" rx="2" ry="2" />
<text  x="548.59" y="1919.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.01%)</title><rect x="1189.7" y="2037" width="0.2" height="15.0" fill="rgb(244,34,0)" rx="2" ry="2" />
<text  x="1192.75" y="2047.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (2 samples, 0.01%)</title><rect x="84.0" y="1397" width="0.1" height="15.0" fill="rgb(221,177,0)" rx="2" ry="2" />
<text  x="86.98" y="1407.5" ></text>
</g>
<g >
<title>[unknown] (24 samples, 0.13%)</title><rect x="799.8" y="2021" width="1.6" height="15.0" fill="rgb(219,165,26)" rx="2" ry="2" />
<text  x="802.84" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (319 samples, 1.71%)</title><rect x="163.6" y="1797" width="20.2" height="15.0" fill="rgb(229,113,5)" rx="2" ry="2" />
<text  x="166.64" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.0" y="837" width="0.2" height="15.0" fill="rgb(241,83,46)" rx="2" ry="2" />
<text  x="1191.04" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.05%)</title><rect x="162.4" y="1781" width="0.6" height="15.0" fill="rgb(240,7,39)" rx="2" ry="2" />
<text  x="165.44" y="1791.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::pushHash (3 samples, 0.02%)</title><rect x="317.8" y="1925" width="0.2" height="15.0" fill="rgb(222,40,41)" rx="2" ry="2" />
<text  x="320.85" y="1935.5" ></text>
</g>
<g >
<title>alloc_pages_vma (4 samples, 0.02%)</title><rect x="54.6" y="1909" width="0.2" height="15.0" fill="rgb(254,38,22)" rx="2" ry="2" />
<text  x="57.56" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (98 samples, 0.52%)</title><rect x="144.6" y="1765" width="6.2" height="15.0" fill="rgb(247,183,13)" rx="2" ry="2" />
<text  x="147.64" y="1775.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (2 samples, 0.01%)</title><rect x="86.8" y="1621" width="0.1" height="15.0" fill="rgb(217,23,26)" rx="2" ry="2" />
<text  x="89.82" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="162.8" y="1285" width="0.1" height="15.0" fill="rgb(226,158,1)" rx="2" ry="2" />
<text  x="165.75" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (66 samples, 0.35%)</title><rect x="151.5" y="1669" width="4.2" height="15.0" fill="rgb(222,120,15)" rx="2" ry="2" />
<text  x="154.52" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.02%)</title><rect x="752.6" y="2021" width="0.3" height="15.0" fill="rgb(238,161,1)" rx="2" ry="2" />
<text  x="755.63" y="2031.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (2 samples, 0.01%)</title><rect x="1104.8" y="1909" width="0.1" height="15.0" fill="rgb(241,215,35)" rx="2" ry="2" />
<text  x="1107.79" y="1919.5" ></text>
</g>
<g >
<title>handle_mm_fault (4 samples, 0.02%)</title><rect x="552.5" y="1829" width="0.2" height="15.0" fill="rgb(207,174,25)" rx="2" ry="2" />
<text  x="555.47" y="1839.5" ></text>
</g>
<g >
<title>do_mmap (16 samples, 0.09%)</title><rect x="1094.6" y="1957" width="1.0" height="15.0" fill="rgb(252,149,4)" rx="2" ry="2" />
<text  x="1097.56" y="1967.5" ></text>
</g>
<g >
<title>TDocument::FromJson (5 samples, 0.03%)</title><rect x="121.4" y="1973" width="0.3" height="15.0" fill="rgb(234,177,28)" rx="2" ry="2" />
<text  x="124.41" y="1983.5" ></text>
</g>
<g >
<title>release_pages (2 samples, 0.01%)</title><rect x="84.3" y="1397" width="0.1" height="15.0" fill="rgb(239,111,28)" rx="2" ry="2" />
<text  x="87.29" y="1407.5" ></text>
</g>
<g >
<title>fasttext::FastText::predictLine (189 samples, 1.01%)</title><rect x="509.2" y="1941" width="11.9" height="15.0" fill="rgb(215,76,19)" rx="2" ry="2" />
<text  x="512.17" y="1951.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (4 samples, 0.02%)</title><rect x="88.6" y="1893" width="0.3" height="15.0" fill="rgb(254,145,50)" rx="2" ry="2" />
<text  x="91.65" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.0" y="1397" width="0.2" height="15.0" fill="rgb(215,182,34)" rx="2" ry="2" />
<text  x="1191.04" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.0" y="1829" width="0.2" height="15.0" fill="rgb(247,134,36)" rx="2" ry="2" />
<text  x="1191.04" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1187.3" y="645" width="0.3" height="15.0" fill="rgb(249,10,46)" rx="2" ry="2" />
<text  x="1190.29" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="217.3" y="1893" width="0.3" height="15.0" fill="rgb(206,222,24)" rx="2" ry="2" />
<text  x="220.29" y="1903.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (3 samples, 0.02%)</title><rect x="90.3" y="1973" width="0.2" height="15.0" fill="rgb(213,34,53)" rx="2" ry="2" />
<text  x="93.29" y="1983.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (146 samples, 0.78%)</title><rect x="1125.6" y="2037" width="9.2" height="15.0" fill="rgb(207,150,38)" rx="2" ry="2" />
<text  x="1128.55" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="188.3" y="1685" width="0.1" height="15.0" fill="rgb(225,89,43)" rx="2" ry="2" />
<text  x="191.32" y="1695.5" ></text>
</g>
<g >
<title>__vm_munmap (2 samples, 0.01%)</title><rect x="82.0" y="1381" width="0.1" height="15.0" fill="rgb(236,206,53)" rx="2" ry="2" />
<text  x="84.96" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (424 samples, 2.27%)</title><rect x="189.5" y="1845" width="26.7" height="15.0" fill="rgb(206,77,47)" rx="2" ry="2" />
<text  x="192.46" y="1855.5" >s..</text>
</g>
<g >
<title>__do_page_fault (16 samples, 0.09%)</title><rect x="629.8" y="1829" width="1.0" height="15.0" fill="rgb(209,190,18)" rx="2" ry="2" />
<text  x="632.79" y="1839.5" ></text>
</g>
<g >
<title>fasttext::DenseMatrix::dotRow (7 samples, 0.04%)</title><rect x="751.9" y="2037" width="0.5" height="15.0" fill="rgb(207,68,23)" rx="2" ry="2" />
<text  x="754.93" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.9" y="949" width="0.1" height="15.0" fill="rgb(230,98,34)" rx="2" ry="2" />
<text  x="1190.85" y="959.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (4 samples, 0.02%)</title><rect x="82.3" y="1477" width="0.3" height="15.0" fill="rgb(223,124,23)" rx="2" ry="2" />
<text  x="85.34" y="1487.5" ></text>
</g>
<g >
<title>flush_tlb_mm_range (4 samples, 0.02%)</title><rect x="505.1" y="1909" width="0.2" height="15.0" fill="rgb(221,97,37)" rx="2" ry="2" />
<text  x="508.06" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (69 samples, 0.37%)</title><rect x="206.2" y="1669" width="4.4" height="15.0" fill="rgb(230,91,25)" rx="2" ry="2" />
<text  x="209.25" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="188.3" y="1541" width="0.1" height="15.0" fill="rgb(227,31,1)" rx="2" ry="2" />
<text  x="191.32" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (530 samples, 2.84%)</title><rect x="55.5" y="1909" width="33.5" height="15.0" fill="rgb(251,161,25)" rx="2" ry="2" />
<text  x="58.51" y="1919.5" >[u..</text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt;,  (13 samples, 0.07%)</title><rect x="162.2" y="1957" width="0.9" height="15.0" fill="rgb(218,126,11)" rx="2" ry="2" />
<text  x="165.25" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1188.0" y="1045" width="0.2" height="15.0" fill="rgb(246,140,51)" rx="2" ry="2" />
<text  x="1191.04" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.02%)</title><rect x="162.7" y="1605" width="0.2" height="15.0" fill="rgb(247,18,47)" rx="2" ry="2" />
<text  x="165.69" y="1615.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::load (25 samples, 0.13%)</title><rect x="861.1" y="1989" width="1.6" height="15.0" fill="rgb(238,14,20)" rx="2" ry="2" />
<text  x="864.07" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="162.7" y="1589" width="0.2" height="15.0" fill="rgb(234,82,16)" rx="2" ry="2" />
<text  x="165.69" y="1599.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (9 samples, 0.05%)</title><rect x="27.4" y="1989" width="0.5" height="15.0" fill="rgb(217,28,44)" rx="2" ry="2" />
<text  x="30.36" y="1999.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::do_tolower (3 samples, 0.02%)</title><rect x="210.3" y="1653" width="0.2" height="15.0" fill="rgb(227,36,2)" rx="2" ry="2" />
<text  x="213.35" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.02%)</title><rect x="1187.8" y="1509" width="0.2" height="15.0" fill="rgb(224,103,27)" rx="2" ry="2" />
<text  x="1190.79" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="162.4" y="1365" width="0.2" height="15.0" fill="rgb(213,225,8)" rx="2" ry="2" />
<text  x="165.44" y="1375.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::computeSubwords (33 samples, 0.18%)</title><rect x="471.8" y="1925" width="2.1" height="15.0" fill="rgb(245,86,17)" rx="2" ry="2" />
<text  x="474.80" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (2 samples, 0.01%)</title><rect x="144.5" y="1749" width="0.1" height="15.0" fill="rgb(240,97,52)" rx="2" ry="2" />
<text  x="147.51" y="1759.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (48 samples, 0.26%)</title><rect x="207.2" y="1653" width="3.0" height="15.0" fill="rgb(245,168,20)" rx="2" ry="2" />
<text  x="210.19" y="1663.5" ></text>
</g>
<g >
<title>unmap_region (2 samples, 0.01%)</title><rect x="87.8" y="1733" width="0.1" height="15.0" fill="rgb(246,25,33)" rx="2" ry="2" />
<text  x="90.77" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.7" y="1813" width="0.3" height="15.0" fill="rgb(235,185,12)" rx="2" ry="2" />
<text  x="1190.66" y="1823.5" ></text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::get (12 samples, 0.06%)</title><rect x="129.7" y="1909" width="0.8" height="15.0" fill="rgb(217,109,53)" rx="2" ry="2" />
<text  x="132.74" y="1919.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::basic_json (3 samples, 0.02%)</title><rect x="501.5" y="1893" width="0.2" height="15.0" fill="rgb(214,163,34)" rx="2" ry="2" />
<text  x="504.53" y="1903.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (2 samples, 0.01%)</title><rect x="499.6" y="1845" width="0.1" height="15.0" fill="rgb(239,47,52)" rx="2" ry="2" />
<text  x="502.57" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (71 samples, 0.38%)</title><rect x="163.7" y="1717" width="4.5" height="15.0" fill="rgb(215,13,27)" rx="2" ry="2" />
<text  x="166.70" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1188.0" y="1141" width="0.2" height="15.0" fill="rgb(215,4,31)" rx="2" ry="2" />
<text  x="1191.04" y="1151.5" ></text>
</g>
<g >
<title>[unknown] (322 samples, 1.72%)</title><rect x="55.6" y="165" width="20.3" height="15.0" fill="rgb(220,217,19)" rx="2" ry="2" />
<text  x="58.57" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1187.3" y="901" width="0.3" height="15.0" fill="rgb(229,185,10)" rx="2" ry="2" />
<text  x="1190.29" y="911.5" ></text>
</g>
<g >
<title>alloc_pages_vma (4 samples, 0.02%)</title><rect x="748.1" y="1941" width="0.2" height="15.0" fill="rgb(208,170,6)" rx="2" ry="2" />
<text  x="751.08" y="1951.5" ></text>
</g>
<g >
<title>release_pages (2 samples, 0.01%)</title><rect x="751.6" y="1845" width="0.1" height="15.0" fill="rgb(210,112,18)" rx="2" ry="2" />
<text  x="754.62" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="162.4" y="1493" width="0.2" height="15.0" fill="rgb(209,181,45)" rx="2" ry="2" />
<text  x="165.44" y="1503.5" ></text>
</g>
<g >
<title>__asan::AsanTSDGet (2 samples, 0.01%)</title><rect x="213.1" y="1669" width="0.2" height="15.0" fill="rgb(235,164,23)" rx="2" ry="2" />
<text  x="216.13" y="1679.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (2 samples, 0.01%)</title><rect x="84.3" y="1445" width="0.1" height="15.0" fill="rgb(237,85,34)" rx="2" ry="2" />
<text  x="87.29" y="1455.5" ></text>
</g>
<g >
<title>__dynamic_cast (5 samples, 0.03%)</title><rect x="181.1" y="1621" width="0.3" height="15.0" fill="rgb(210,73,7)" rx="2" ry="2" />
<text  x="184.06" y="1631.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (12 samples, 0.06%)</title><rect x="721.1" y="1893" width="0.8" height="15.0" fill="rgb(247,124,9)" rx="2" ry="2" />
<text  x="724.13" y="1903.5" ></text>
</g>
<g >
<title>__interceptor_memcmp (5 samples, 0.03%)</title><rect x="519.0" y="1909" width="0.3" height="15.0" fill="rgb(224,112,28)" rx="2" ry="2" />
<text  x="522.01" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (442 samples, 2.36%)</title><rect x="55.5" y="1541" width="27.9" height="15.0" fill="rgb(219,34,26)" rx="2" ry="2" />
<text  x="58.51" y="1551.5" >[..</text>
</g>
<g >
<title>[unknown] (3 samples, 0.02%)</title><rect x="795.4" y="2021" width="0.2" height="15.0" fill="rgb(216,162,25)" rx="2" ry="2" />
<text  x="798.43" y="2031.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="84.9" y="1637" width="0.2" height="15.0" fill="rgb(245,81,23)" rx="2" ry="2" />
<text  x="87.93" y="1647.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::pushHash (5 samples, 0.03%)</title><rect x="862.1" y="1941" width="0.3" height="15.0" fill="rgb(222,89,41)" rx="2" ry="2" />
<text  x="865.08" y="1951.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (256 samples, 1.37%)</title><rect x="10.0" y="2053" width="16.2" height="15.0" fill="rgb(210,192,31)" rx="2" ry="2" />
<text  x="13.00" y="2063.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (2 samples, 0.01%)</title><rect x="85.4" y="1669" width="0.2" height="15.0" fill="rgb(234,7,2)" rx="2" ry="2" />
<text  x="88.43" y="1679.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::create&lt;std::vector&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::allocator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::vector&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::allocator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; const&amp;&gt; (3 samples, 0.02%)</title><rect x="501.5" y="1877" width="0.2" height="15.0" fill="rgb(230,95,31)" rx="2" ry="2" />
<text  x="504.53" y="1887.5" ></text>
</g>
<g >
<title>std::operator&gt;&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="498.7" y="1973" width="0.1" height="15.0" fill="rgb(210,111,36)" rx="2" ry="2" />
<text  x="501.69" y="1983.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::operator[]&lt;char const&gt; (2 samples, 0.01%)</title><rect x="501.3" y="2005" width="0.1" height="15.0" fill="rgb(246,3,54)" rx="2" ry="2" />
<text  x="504.28" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="188.3" y="1637" width="0.1" height="15.0" fill="rgb(207,3,8)" rx="2" ry="2" />
<text  x="191.32" y="1647.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::clear (2 samples, 0.01%)</title><rect x="555.9" y="1893" width="0.1" height="15.0" fill="rgb(223,144,7)" rx="2" ry="2" />
<text  x="558.88" y="1903.5" ></text>
</g>
<g >
<title>__do_page_fault (6 samples, 0.03%)</title><rect x="714.6" y="1845" width="0.3" height="15.0" fill="rgb(250,210,48)" rx="2" ry="2" />
<text  x="717.57" y="1855.5" ></text>
</g>
<g >
<title>memcmp@plt (6 samples, 0.03%)</title><rect x="1103.6" y="2053" width="0.4" height="15.0" fill="rgb(234,8,23)" rx="2" ry="2" />
<text  x="1106.59" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1187.3" y="469" width="0.3" height="15.0" fill="rgb(212,76,26)" rx="2" ry="2" />
<text  x="1190.29" y="479.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (5 samples, 0.03%)</title><rect x="191.7" y="1557" width="0.3" height="15.0" fill="rgb(205,153,16)" rx="2" ry="2" />
<text  x="194.73" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1188.0" y="469" width="0.2" height="15.0" fill="rgb(222,229,19)" rx="2" ry="2" />
<text  x="1191.04" y="479.5" ></text>
</g>
<g >
<title>smp_call_function_single (2 samples, 0.01%)</title><rect x="505.2" y="1829" width="0.1" height="15.0" fill="rgb(228,123,46)" rx="2" ry="2" />
<text  x="508.19" y="1839.5" ></text>
</g>
<g >
<title>Eigen::PlainObjectBase&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; &gt;::resize (7 samples, 0.04%)</title><rect x="374.0" y="1941" width="0.4" height="15.0" fill="rgb(207,0,24)" rx="2" ry="2" />
<text  x="376.96" y="1951.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (8 samples, 0.04%)</title><rect x="314.2" y="1941" width="0.6" height="15.0" fill="rgb(205,63,31)" rx="2" ry="2" />
<text  x="317.25" y="1951.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (4 samples, 0.02%)</title><rect x="98.1" y="2021" width="0.2" height="15.0" fill="rgb(254,29,5)" rx="2" ry="2" />
<text  x="101.05" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="217.3" y="1845" width="0.3" height="15.0" fill="rgb(227,99,6)" rx="2" ry="2" />
<text  x="220.29" y="1855.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (5 samples, 0.03%)</title><rect x="141.5" y="1589" width="0.3" height="15.0" fill="rgb(216,128,29)" rx="2" ry="2" />
<text  x="144.48" y="1599.5" ></text>
</g>
<g >
<title>__do_page_fault (23 samples, 0.12%)</title><rect x="54.1" y="1989" width="1.4" height="15.0" fill="rgb(240,202,22)" rx="2" ry="2" />
<text  x="57.06" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.0" y="1253" width="0.2" height="15.0" fill="rgb(215,32,1)" rx="2" ry="2" />
<text  x="1191.04" y="1263.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (3 samples, 0.02%)</title><rect x="462.5" y="1893" width="0.2" height="15.0" fill="rgb(214,114,40)" rx="2" ry="2" />
<text  x="465.52" y="1903.5" ></text>
</g>
<g >
<title>__asan_memcpy (4 samples, 0.02%)</title><rect x="147.1" y="1605" width="0.3" height="15.0" fill="rgb(216,24,35)" rx="2" ry="2" />
<text  x="150.10" y="1615.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::_M_do_set (3,689 samples, 19.73%)</title><rect x="508.7" y="2021" width="232.8" height="15.0" fill="rgb(232,195,10)" rx="2" ry="2" />
<text  x="511.66" y="2031.5" >std::__future_base::_State_bas..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (475 samples, 2.54%)</title><rect x="131.8" y="1877" width="30.0" height="15.0" fill="rgb(245,71,17)" rx="2" ry="2" />
<text  x="134.83" y="1887.5" >st..</text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="78.4" y="1173" width="0.2" height="15.0" fill="rgb(236,147,23)" rx="2" ry="2" />
<text  x="81.42" y="1183.5" ></text>
</g>
<g >
<title>fasttext::Vector::mul (47 samples, 0.25%)</title><rect x="788.4" y="2037" width="2.9" height="15.0" fill="rgb(252,131,19)" rx="2" ry="2" />
<text  x="791.36" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="1187.8" y="1445" width="0.2" height="15.0" fill="rgb(244,65,20)" rx="2" ry="2" />
<text  x="1190.79" y="1455.5" ></text>
</g>
<g >
<title>GetHost (497 samples, 2.66%)</title><rect x="131.8" y="1973" width="31.4" height="15.0" fill="rgb(249,211,38)" rx="2" ry="2" />
<text  x="134.83" y="1983.5" >Ge..</text>
</g>
<g >
<title>__x64_sys_futex (9 samples, 0.05%)</title><rect x="131.2" y="1925" width="0.6" height="15.0" fill="rgb(239,68,51)" rx="2" ry="2" />
<text  x="134.19" y="1935.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (5 samples, 0.03%)</title><rect x="565.5" y="1877" width="0.4" height="15.0" fill="rgb(232,228,3)" rx="2" ry="2" />
<text  x="568.54" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="188.3" y="1653" width="0.1" height="15.0" fill="rgb(212,50,15)" rx="2" ry="2" />
<text  x="191.32" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (232 samples, 1.24%)</title><rect x="163.7" y="1765" width="14.6" height="15.0" fill="rgb(206,198,23)" rx="2" ry="2" />
<text  x="166.70" y="1775.5" ></text>
</g>
<g >
<title>all (18,694 samples, 100%)</title><rect x="10.0" y="2085" width="1180.0" height="15.0" fill="rgb(223,87,30)" rx="2" ry="2" />
<text  x="13.00" y="2095.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="162.8" y="949" width="0.1" height="15.0" fill="rgb(230,153,20)" rx="2" ry="2" />
<text  x="165.82" y="959.5" ></text>
</g>
<g >
<title>[unknown] (11 samples, 0.06%)</title><rect x="804.2" y="2005" width="0.7" height="15.0" fill="rgb(249,112,35)" rx="2" ry="2" />
<text  x="807.20" y="2015.5" ></text>
</g>
<g >
<title>irq_exit (3 samples, 0.02%)</title><rect x="462.5" y="1909" width="0.2" height="15.0" fill="rgb(234,143,0)" rx="2" ry="2" />
<text  x="465.52" y="1919.5" ></text>
</g>
<g >
<title>std::__stable_sort_adaptive&lt;__gnu_cxx::__normal_iterator&lt;TDocument*, std::vector&lt;TDocument, std::allocator&lt;TDocument&gt; &gt; &gt;, TDocument*, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;main::$_1&gt; &gt; (5 samples, 0.03%)</title><rect x="502.0" y="2005" width="0.4" height="15.0" fill="rgb(213,207,30)" rx="2" ry="2" />
<text  x="505.03" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (81 samples, 0.43%)</title><rect x="178.3" y="1765" width="5.2" height="15.0" fill="rgb(250,143,33)" rx="2" ry="2" />
<text  x="181.35" y="1775.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (17 samples, 0.09%)</title><rect x="1094.6" y="2005" width="1.0" height="15.0" fill="rgb(248,156,2)" rx="2" ry="2" />
<text  x="1097.56" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.0" y="1493" width="0.2" height="15.0" fill="rgb(234,72,12)" rx="2" ry="2" />
<text  x="1191.04" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (79 samples, 0.42%)</title><rect x="173.4" y="1701" width="4.9" height="15.0" fill="rgb(229,195,21)" rx="2" ry="2" />
<text  x="176.36" y="1711.5" ></text>
</g>
<g >
<title>__lsan::GetUserBegin (9 samples, 0.05%)</title><rect x="503.3" y="2037" width="0.6" height="15.0" fill="rgb(238,207,25)" rx="2" ry="2" />
<text  x="506.30" y="2047.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (2 samples, 0.01%)</title><rect x="180.0" y="1621" width="0.1" height="15.0" fill="rgb(224,173,31)" rx="2" ry="2" />
<text  x="182.99" y="1631.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (10 samples, 0.05%)</title><rect x="927.2" y="1925" width="0.6" height="15.0" fill="rgb(242,45,1)" rx="2" ry="2" />
<text  x="930.16" y="1935.5" ></text>
</g>
<g >
<title>onmt::unicode::get_case (251 samples, 1.34%)</title><rect x="676.8" y="1877" width="15.8" height="15.0" fill="rgb(247,226,19)" rx="2" ry="2" />
<text  x="679.76" y="1887.5" ></text>
</g>
<g >
<title>__asan::Allocator::Allocate (12 samples, 0.06%)</title><rect x="98.6" y="2037" width="0.7" height="15.0" fill="rgb(221,119,10)" rx="2" ry="2" />
<text  x="101.56" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="162.7" y="1637" width="0.2" height="15.0" fill="rgb(249,45,35)" rx="2" ry="2" />
<text  x="165.69" y="1647.5" ></text>
</g>
<g >
<title>try_charge (2 samples, 0.01%)</title><rect x="660.6" y="1733" width="0.1" height="15.0" fill="rgb(244,213,23)" rx="2" ry="2" />
<text  x="663.60" y="1743.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (105 samples, 0.56%)</title><rect x="967.4" y="2053" width="6.6" height="15.0" fill="rgb(227,120,15)" rx="2" ry="2" />
<text  x="970.37" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (81 samples, 0.43%)</title><rect x="173.2" y="1749" width="5.1" height="15.0" fill="rgb(237,202,33)" rx="2" ry="2" />
<text  x="176.23" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="162.8" y="1269" width="0.1" height="15.0" fill="rgb(244,181,24)" rx="2" ry="2" />
<text  x="165.75" y="1279.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.25] (22 samples, 0.12%)</title><rect x="26.5" y="2053" width="1.4" height="15.0" fill="rgb(214,26,36)" rx="2" ry="2" />
<text  x="29.54" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.0" y="773" width="0.2" height="15.0" fill="rgb(218,163,36)" rx="2" ry="2" />
<text  x="1191.04" y="783.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="78.7" y="1189" width="0.1" height="15.0" fill="rgb(223,89,41)" rx="2" ry="2" />
<text  x="81.68" y="1199.5" ></text>
</g>
<g >
<title>__lsan::ForEachChunk (5 samples, 0.03%)</title><rect x="503.0" y="2037" width="0.3" height="15.0" fill="rgb(251,168,52)" rx="2" ry="2" />
<text  x="505.98" y="2047.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;std::__detail::_State&lt;char&gt; const*, std::__detail::_State&lt;char&gt;*&gt; (4 samples, 0.02%)</title><rect x="189.7" y="1653" width="0.3" height="15.0" fill="rgb(222,142,7)" rx="2" ry="2" />
<text  x="192.71" y="1663.5" ></text>
</g>
<g >
<title>handle_mm_fault (5 samples, 0.03%)</title><rect x="714.6" y="1829" width="0.3" height="15.0" fill="rgb(236,100,12)" rx="2" ry="2" />
<text  x="717.63" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (102 samples, 0.55%)</title><rect x="132.4" y="1701" width="6.4" height="15.0" fill="rgb(220,92,28)" rx="2" ry="2" />
<text  x="135.39" y="1711.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotPut (2 samples, 0.01%)</title><rect x="171.4" y="1573" width="0.1" height="15.0" fill="rgb(216,165,31)" rx="2" ry="2" />
<text  x="174.40" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (6 samples, 0.03%)</title><rect x="163.7" y="1685" width="0.4" height="15.0" fill="rgb(251,89,28)" rx="2" ry="2" />
<text  x="166.70" y="1695.5" ></text>
</g>
<g >
<title>__pthread_getspecific (2 samples, 0.01%)</title><rect x="1117.9" y="2037" width="0.1" height="15.0" fill="rgb(224,119,16)" rx="2" ry="2" />
<text  x="1120.85" y="2047.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (2 samples, 0.01%)</title><rect x="751.6" y="1925" width="0.1" height="15.0" fill="rgb(246,146,13)" rx="2" ry="2" />
<text  x="754.62" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1187.3" y="789" width="0.3" height="15.0" fill="rgb(214,124,8)" rx="2" ry="2" />
<text  x="1190.29" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (74 samples, 0.40%)</title><rect x="200.8" y="1765" width="4.7" height="15.0" fill="rgb(205,39,41)" rx="2" ry="2" />
<text  x="203.82" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1187.3" y="293" width="0.3" height="15.0" fill="rgb(226,200,42)" rx="2" ry="2" />
<text  x="1190.29" y="303.5" ></text>
</g>
<g >
<title>do_syscall_64 (18 samples, 0.10%)</title><rect x="504.9" y="2005" width="1.1" height="15.0" fill="rgb(216,15,28)" rx="2" ry="2" />
<text  x="507.88" y="2015.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (7 samples, 0.04%)</title><rect x="546.5" y="1925" width="0.5" height="15.0" fill="rgb(221,214,44)" rx="2" ry="2" />
<text  x="549.54" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1187.2" y="1733" width="0.4" height="15.0" fill="rgb(247,7,29)" rx="2" ry="2" />
<text  x="1190.22" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.9" y="485" width="0.1" height="15.0" fill="rgb(228,192,13)" rx="2" ry="2" />
<text  x="1190.85" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.02%)</title><rect x="162.7" y="1509" width="0.2" height="15.0" fill="rgb(239,71,33)" rx="2" ry="2" />
<text  x="165.69" y="1519.5" ></text>
</g>
<g >
<title>do_page_fault (17 samples, 0.09%)</title><rect x="747.8" y="2005" width="1.0" height="15.0" fill="rgb(206,3,35)" rx="2" ry="2" />
<text  x="750.77" y="2015.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.02%)</title><rect x="473.9" y="1941" width="0.3" height="15.0" fill="rgb(251,29,37)" rx="2" ry="2" />
<text  x="476.95" y="1951.5" ></text>
</g>
<g >
<title>fasttext::DenseMatrix::addRowToVector (1,016 samples, 5.43%)</title><rect x="243.6" y="1973" width="64.1" height="15.0" fill="rgb(251,94,10)" rx="2" ry="2" />
<text  x="246.61" y="1983.5" >fasttex..</text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (3 samples, 0.02%)</title><rect x="155.7" y="1669" width="0.2" height="15.0" fill="rgb(237,153,13)" rx="2" ry="2" />
<text  x="158.69" y="1679.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (8 samples, 0.04%)</title><rect x="160.5" y="1669" width="0.6" height="15.0" fill="rgb(223,92,37)" rx="2" ry="2" />
<text  x="163.55" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (331 samples, 1.77%)</title><rect x="55.6" y="581" width="20.9" height="15.0" fill="rgb(222,140,1)" rx="2" ry="2" />
<text  x="58.57" y="591.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; const&amp;&gt; (3 samples, 0.02%)</title><rect x="501.5" y="1781" width="0.2" height="15.0" fill="rgb(251,103,14)" rx="2" ry="2" />
<text  x="504.53" y="1791.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (3 samples, 0.02%)</title><rect x="328.3" y="1989" width="0.1" height="15.0" fill="rgb(251,15,47)" rx="2" ry="2" />
<text  x="331.26" y="1999.5" ></text>
</g>
<g >
<title>tlb_is_not_lazy (2 samples, 0.01%)</title><rect x="930.0" y="1877" width="0.1" height="15.0" fill="rgb(218,160,12)" rx="2" ry="2" />
<text  x="933.00" y="1887.5" ></text>
</g>
<g >
<title>__asan::AsanThread::stack_top (3 samples, 0.02%)</title><rect x="135.1" y="1557" width="0.2" height="15.0" fill="rgb(222,206,45)" rx="2" ry="2" />
<text  x="138.11" y="1567.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (17 samples, 0.09%)</title><rect x="517.0" y="1909" width="1.1" height="15.0" fill="rgb(219,134,40)" rx="2" ry="2" />
<text  x="519.99" y="1919.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (13 samples, 0.07%)</title><rect x="91.4" y="2005" width="0.8" height="15.0" fill="rgb(232,73,40)" rx="2" ry="2" />
<text  x="94.36" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (78 samples, 0.42%)</title><rect x="173.4" y="1685" width="4.9" height="15.0" fill="rgb(223,81,47)" rx="2" ry="2" />
<text  x="176.36" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (96 samples, 0.51%)</title><rect x="144.6" y="1717" width="6.1" height="15.0" fill="rgb(248,224,18)" rx="2" ry="2" />
<text  x="147.64" y="1727.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (5 samples, 0.03%)</title><rect x="740.4" y="1941" width="0.4" height="15.0" fill="rgb(207,121,24)" rx="2" ry="2" />
<text  x="743.45" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="188.3" y="1877" width="0.1" height="15.0" fill="rgb(205,219,8)" rx="2" ry="2" />
<text  x="191.26" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.9" y="277" width="0.1" height="15.0" fill="rgb(240,22,46)" rx="2" ry="2" />
<text  x="1190.85" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="162.8" y="853" width="0.1" height="15.0" fill="rgb(242,228,25)" rx="2" ry="2" />
<text  x="165.82" y="863.5" ></text>
</g>
<g >
<title>__vm_munmap (2 samples, 0.01%)</title><rect x="84.3" y="1525" width="0.1" height="15.0" fill="rgb(221,31,51)" rx="2" ry="2" />
<text  x="87.29" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (78 samples, 0.42%)</title><rect x="195.7" y="1653" width="4.9" height="15.0" fill="rgb(245,129,25)" rx="2" ry="2" />
<text  x="198.70" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (476 samples, 2.55%)</title><rect x="55.5" y="1685" width="30.1" height="15.0" fill="rgb(229,47,24)" rx="2" ry="2" />
<text  x="58.51" y="1695.5" >[u..</text>
</g>
<g >
<title>fasttext::Vector::Vector (3 samples, 0.02%)</title><rect x="1099.5" y="2053" width="0.2" height="15.0" fill="rgb(219,110,52)" rx="2" ry="2" />
<text  x="1102.55" y="2063.5" ></text>
</g>
<g >
<title>Eigen::internal::general_matrix_vector_product&lt;long, float, Eigen::internal::const_blas_data_mapper&lt;float, long, 1&gt;, 1, false, float, Eigen::internal::const_blas_data_mapper&lt;float, long, 0&gt;, false, 0&gt;::run (304 samples, 1.63%)</title><rect x="224.1" y="1941" width="19.2" height="15.0" fill="rgb(212,136,7)" rx="2" ry="2" />
<text  x="227.11" y="1951.5" ></text>
</g>
<g >
<title>__vfs_read (2 samples, 0.01%)</title><rect x="121.0" y="1941" width="0.2" height="15.0" fill="rgb(244,92,32)" rx="2" ry="2" />
<text  x="124.03" y="1951.5" ></text>
</g>
<g >
<title>__asan::GetMallocContextSize (3 samples, 0.02%)</title><rect x="567.7" y="1877" width="0.2" height="15.0" fill="rgb(231,7,23)" rx="2" ry="2" />
<text  x="570.74" y="1887.5" ></text>
</g>
<g >
<title>__sanitizer::internal_munmap (5 samples, 0.03%)</title><rect x="751.6" y="2037" width="0.3" height="15.0" fill="rgb(229,108,15)" rx="2" ry="2" />
<text  x="754.62" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (4 samples, 0.02%)</title><rect x="183.5" y="1765" width="0.2" height="15.0" fill="rgb(215,1,7)" rx="2" ry="2" />
<text  x="186.46" y="1775.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (19 samples, 0.10%)</title><rect x="590.7" y="1845" width="1.2" height="15.0" fill="rgb(224,9,1)" rx="2" ry="2" />
<text  x="593.66" y="1855.5" ></text>
</g>
<g >
<title>clear_page_erms (2 samples, 0.01%)</title><rect x="714.8" y="1765" width="0.1" height="15.0" fill="rgb(240,36,43)" rx="2" ry="2" />
<text  x="717.76" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.0" y="1413" width="0.2" height="15.0" fill="rgb(217,127,30)" rx="2" ry="2" />
<text  x="1191.04" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="162.8" y="1045" width="0.1" height="15.0" fill="rgb(212,204,8)" rx="2" ry="2" />
<text  x="165.75" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.05%)</title><rect x="162.4" y="1925" width="0.6" height="15.0" fill="rgb(245,121,1)" rx="2" ry="2" />
<text  x="165.44" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1187.3" y="1125" width="0.3" height="15.0" fill="rgb(241,137,48)" rx="2" ry="2" />
<text  x="1190.29" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (2 samples, 0.01%)</title><rect x="187.9" y="1845" width="0.2" height="15.0" fill="rgb(233,174,17)" rx="2" ry="2" />
<text  x="190.94" y="1855.5" ></text>
</g>
<g >
<title>onmt::Tokenizer::tokenize_text (1,681 samples, 8.99%)</title><rect x="613.4" y="1893" width="106.1" height="15.0" fill="rgb(209,108,20)" rx="2" ry="2" />
<text  x="616.38" y="1903.5" >onmt::Tokeni..</text>
</g>
<g >
<title>std::vector&lt;fasttext::entry, std::allocator&lt;fasttext::entry&gt; &gt;::_M_realloc_insert&lt;fasttext::entry const&amp;&gt; (4 samples, 0.02%)</title><rect x="863.2" y="2037" width="0.3" height="15.0" fill="rgb(223,59,16)" rx="2" ry="2" />
<text  x="866.22" y="2047.5" ></text>
</g>
<g >
<title>do_page_fault (4 samples, 0.02%)</title><rect x="1189.4" y="2005" width="0.2" height="15.0" fill="rgb(215,9,29)" rx="2" ry="2" />
<text  x="1192.37" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1187.9" y="1029" width="0.1" height="15.0" fill="rgb(244,113,7)" rx="2" ry="2" />
<text  x="1190.85" y="1039.5" ></text>
</g>
<g >
<title>__pthread_getspecific (2 samples, 0.01%)</title><rect x="136.0" y="1557" width="0.1" height="15.0" fill="rgb(217,124,42)" rx="2" ry="2" />
<text  x="138.99" y="1567.5" ></text>
</g>
<g >
<title>__asan::AsanThread::stack_top (2 samples, 0.01%)</title><rect x="184.8" y="1653" width="0.2" height="15.0" fill="rgb(218,159,16)" rx="2" ry="2" />
<text  x="187.85" y="1663.5" ></text>
</g>
<g >
<title>[libOpenNMTTokenizer.so] (3 samples, 0.02%)</title><rect x="553.9" y="1893" width="0.1" height="15.0" fill="rgb(237,213,25)" rx="2" ry="2" />
<text  x="556.86" y="1903.5" ></text>
</g>
<g >
<title>native_write_msr (3 samples, 0.02%)</title><rect x="55.1" y="1749" width="0.2" height="15.0" fill="rgb(233,81,37)" rx="2" ry="2" />
<text  x="58.07" y="1759.5" ></text>
</g>
<g >
<title>__lru_cache_add (2 samples, 0.01%)</title><rect x="660.4" y="1749" width="0.1" height="15.0" fill="rgb(236,162,18)" rx="2" ry="2" />
<text  x="663.41" y="1759.5" ></text>
</g>
<g >
<title>__sanitizer::QuarantineCache&lt;__asan::QuarantineCallback&gt;::Enqueue (101 samples, 0.54%)</title><rect x="742.5" y="2037" width="6.3" height="15.0" fill="rgb(218,149,51)" rx="2" ry="2" />
<text  x="745.47" y="2047.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (7 samples, 0.04%)</title><rect x="1116.8" y="2037" width="0.5" height="15.0" fill="rgb(214,169,44)" rx="2" ry="2" />
<text  x="1119.84" y="2047.5" ></text>
</g>
<g >
<title>__handle_mm_fault (24 samples, 0.13%)</title><rect x="491.9" y="1893" width="1.6" height="15.0" fill="rgb(205,216,35)" rx="2" ry="2" />
<text  x="494.94" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (83 samples, 0.44%)</title><rect x="156.4" y="1813" width="5.2" height="15.0" fill="rgb(252,138,26)" rx="2" ry="2" />
<text  x="159.38" y="1823.5" ></text>
</g>
<g >
<title>__vfs_read (2 samples, 0.01%)</title><rect x="1104.8" y="1941" width="0.1" height="15.0" fill="rgb(206,133,45)" rx="2" ry="2" />
<text  x="1107.79" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (362 samples, 1.94%)</title><rect x="55.6" y="1173" width="22.8" height="15.0" fill="rgb(251,143,28)" rx="2" ry="2" />
<text  x="58.57" y="1183.5" >[..</text>
</g>
<g >
<title>unmap_region (2 samples, 0.01%)</title><rect x="84.7" y="1509" width="0.1" height="15.0" fill="rgb(227,210,41)" rx="2" ry="2" />
<text  x="87.67" y="1519.5" ></text>
</g>
<g >
<title>page_fault (28 samples, 0.15%)</title><rect x="481.5" y="1925" width="1.8" height="15.0" fill="rgb(237,17,28)" rx="2" ry="2" />
<text  x="484.52" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (78 samples, 0.42%)</title><rect x="190.3" y="1589" width="5.0" height="15.0" fill="rgb(210,119,7)" rx="2" ry="2" />
<text  x="193.34" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.02%)</title><rect x="162.7" y="1413" width="0.2" height="15.0" fill="rgb(253,198,43)" rx="2" ry="2" />
<text  x="165.69" y="1423.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (3 samples, 0.02%)</title><rect x="93.3" y="2021" width="0.2" height="15.0" fill="rgb(223,82,53)" rx="2" ry="2" />
<text  x="96.32" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="188.3" y="1861" width="0.1" height="15.0" fill="rgb(222,202,42)" rx="2" ry="2" />
<text  x="191.26" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (79 samples, 0.42%)</title><rect x="168.2" y="1701" width="5.0" height="15.0" fill="rgb(218,73,31)" rx="2" ry="2" />
<text  x="171.18" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1187.9" y="885" width="0.1" height="15.0" fill="rgb(208,223,7)" rx="2" ry="2" />
<text  x="1190.85" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.05%)</title><rect x="162.4" y="1765" width="0.6" height="15.0" fill="rgb(248,73,11)" rx="2" ry="2" />
<text  x="165.44" y="1775.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="216.9" y="1845" width="0.1" height="15.0" fill="rgb(253,211,22)" rx="2" ry="2" />
<text  x="219.91" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1187.3" y="325" width="0.3" height="15.0" fill="rgb(219,133,49)" rx="2" ry="2" />
<text  x="1190.29" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (3 samples, 0.02%)</title><rect x="187.5" y="1813" width="0.2" height="15.0" fill="rgb(212,58,54)" rx="2" ry="2" />
<text  x="190.50" y="1823.5" ></text>
</g>
<g >
<title>do_wp_page (13 samples, 0.07%)</title><rect x="54.6" y="1941" width="0.8" height="15.0" fill="rgb(207,102,42)" rx="2" ry="2" />
<text  x="57.56" y="1951.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;TThreadPool::TThreadPool (15 samples, 0.08%)</title><rect x="27.0" y="2037" width="0.9" height="15.0" fill="rgb(211,189,53)" rx="2" ry="2" />
<text  x="29.98" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1187.3" y="1285" width="0.3" height="15.0" fill="rgb(214,187,44)" rx="2" ry="2" />
<text  x="1190.29" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (65 samples, 0.35%)</title><rect x="164.1" y="1605" width="4.1" height="15.0" fill="rgb(238,206,20)" rx="2" ry="2" />
<text  x="167.08" y="1615.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::create&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt; const&amp;&gt; (3 samples, 0.02%)</title><rect x="501.5" y="1957" width="0.2" height="15.0" fill="rgb(206,93,23)" rx="2" ry="2" />
<text  x="504.53" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="1187.8" y="1525" width="0.2" height="15.0" fill="rgb(210,87,46)" rx="2" ry="2" />
<text  x="1190.79" y="1535.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (2 samples, 0.01%)</title><rect x="89.9" y="1797" width="0.1" height="15.0" fill="rgb(205,146,47)" rx="2" ry="2" />
<text  x="92.91" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.0" y="1557" width="0.2" height="15.0" fill="rgb(228,95,49)" rx="2" ry="2" />
<text  x="1191.04" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="188.3" y="1781" width="0.1" height="15.0" fill="rgb(212,34,17)" rx="2" ry="2" />
<text  x="191.26" y="1791.5" ></text>
</g>
<g >
<title>fasttext::DenseMatrix::addRowToVector (1,037 samples, 5.55%)</title><rect x="397.3" y="1957" width="65.4" height="15.0" fill="rgb(240,8,47)" rx="2" ry="2" />
<text  x="400.25" y="1967.5" >fasttex..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (79 samples, 0.42%)</title><rect x="211.1" y="1813" width="5.0" height="15.0" fill="rgb(253,58,44)" rx="2" ry="2" />
<text  x="214.11" y="1823.5" ></text>
</g>
<g >
<title>unmap_vmas (5 samples, 0.03%)</title><rect x="1095.9" y="1941" width="0.3" height="15.0" fill="rgb(249,18,11)" rx="2" ry="2" />
<text  x="1098.89" y="1951.5" ></text>
</g>
<g >
<title>__asan::Allocator::GetAsanChunkByAddrFastLocked (85 samples, 0.45%)</title><rect x="99.3" y="2037" width="5.4" height="15.0" fill="rgb(225,30,32)" rx="2" ry="2" />
<text  x="102.32" y="2047.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (4 samples, 0.02%)</title><rect x="89.3" y="1925" width="0.3" height="15.0" fill="rgb(236,221,30)" rx="2" ry="2" />
<text  x="92.34" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (327 samples, 1.75%)</title><rect x="55.6" y="373" width="20.6" height="15.0" fill="rgb(240,118,22)" rx="2" ry="2" />
<text  x="58.57" y="383.5" ></text>
</g>
<g >
<title>__sanitizer::internal_munmap (2 samples, 0.01%)</title><rect x="82.0" y="1445" width="0.1" height="15.0" fill="rgb(234,26,32)" rx="2" ry="2" />
<text  x="84.96" y="1455.5" ></text>
</g>
<g >
<title>futex_wait (9 samples, 0.05%)</title><rect x="131.2" y="1893" width="0.6" height="15.0" fill="rgb(225,121,5)" rx="2" ry="2" />
<text  x="134.19" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (70 samples, 0.37%)</title><rect x="178.9" y="1653" width="4.4" height="15.0" fill="rgb(236,77,1)" rx="2" ry="2" />
<text  x="181.85" y="1663.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::basic_json&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, 0&gt; (3 samples, 0.02%)</title><rect x="500.3" y="2005" width="0.2" height="15.0" fill="rgb(246,197,14)" rx="2" ry="2" />
<text  x="503.33" y="2015.5" ></text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::scan_string (109 samples, 0.58%)</title><rect x="123.6" y="1941" width="6.9" height="15.0" fill="rgb(209,152,2)" rx="2" ry="2" />
<text  x="126.62" y="1951.5" ></text>
</g>
<g >
<title>unmap_region (2 samples, 0.01%)</title><rect x="84.0" y="1477" width="0.1" height="15.0" fill="rgb(245,182,46)" rx="2" ry="2" />
<text  x="86.98" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.0" y="437" width="0.2" height="15.0" fill="rgb(207,208,46)" rx="2" ry="2" />
<text  x="1191.04" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.0" y="693" width="0.2" height="15.0" fill="rgb(250,126,4)" rx="2" ry="2" />
<text  x="1191.04" y="703.5" ></text>
</g>
<g >
<title>__vm_munmap (5 samples, 0.03%)</title><rect x="751.6" y="1973" width="0.3" height="15.0" fill="rgb(239,37,2)" rx="2" ry="2" />
<text  x="754.62" y="1983.5" ></text>
</g>
<g >
<title>std::__future_base::_Task_state&lt;std::_Bind&lt;Annotate (10 samples, 0.05%)</title><rect x="27.3" y="2021" width="0.6" height="15.0" fill="rgb(231,86,7)" rx="2" ry="2" />
<text  x="30.30" y="2031.5" ></text>
</g>
<g >
<title>TDocument::PreprocessTextFields (3,088 samples, 16.52%)</title><rect x="546.0" y="1973" width="194.9" height="15.0" fill="rgb(238,11,24)" rx="2" ry="2" />
<text  x="548.97" y="1983.5" >TDocument::PreprocessText..</text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (8 samples, 0.04%)</title><rect x="131.9" y="1685" width="0.5" height="15.0" fill="rgb(229,14,53)" rx="2" ry="2" />
<text  x="134.89" y="1695.5" ></text>
</g>
<g >
<title>on_each_cpu_mask (2 samples, 0.01%)</title><rect x="505.2" y="1861" width="0.1" height="15.0" fill="rgb(215,164,19)" rx="2" ry="2" />
<text  x="508.19" y="1871.5" ></text>
</g>
<g >
<title>__pthread_getspecific (2 samples, 0.01%)</title><rect x="166.8" y="1541" width="0.1" height="15.0" fill="rgb(206,7,29)" rx="2" ry="2" />
<text  x="169.79" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="217.3" y="1829" width="0.3" height="15.0" fill="rgb(231,97,10)" rx="2" ry="2" />
<text  x="220.29" y="1839.5" ></text>
</g>
<g >
<title>Eigen::DenseCoeffsBase&lt;Eigen::Transpose&lt;Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_sum_op&lt;float, float&gt;, Eigen::Product&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0&gt; const, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const&gt;, 0&gt;::coeff (322 samples, 1.72%)</title><rect x="223.3" y="1973" width="20.3" height="15.0" fill="rgb(251,17,32)" rx="2" ry="2" />
<text  x="226.29" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (541 samples, 2.89%)</title><rect x="55.5" y="1941" width="34.2" height="15.0" fill="rgb(250,116,6)" rx="2" ry="2" />
<text  x="58.51" y="1951.5" >[u..</text>
</g>
<g >
<title>__do_page_fault (28 samples, 0.15%)</title><rect x="481.5" y="1893" width="1.8" height="15.0" fill="rgb(209,2,22)" rx="2" ry="2" />
<text  x="484.52" y="1903.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="86.8" y="1733" width="0.1" height="15.0" fill="rgb(244,75,21)" rx="2" ry="2" />
<text  x="89.82" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.9" y="581" width="0.1" height="15.0" fill="rgb(238,217,8)" rx="2" ry="2" />
<text  x="1190.85" y="591.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (3 samples, 0.02%)</title><rect x="742.2" y="2037" width="0.2" height="15.0" fill="rgb(211,142,7)" rx="2" ry="2" />
<text  x="745.21" y="2047.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.01%)</title><rect x="633.9" y="1829" width="0.1" height="15.0" fill="rgb(232,47,7)" rx="2" ry="2" />
<text  x="636.90" y="1839.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (2 samples, 0.01%)</title><rect x="216.9" y="1813" width="0.1" height="15.0" fill="rgb(254,189,37)" rx="2" ry="2" />
<text  x="219.91" y="1823.5" ></text>
</g>
<g >
<title>__asan::GetMallocContextSize (13 samples, 0.07%)</title><rect x="1156.9" y="2037" width="0.8" height="15.0" fill="rgb(250,207,42)" rx="2" ry="2" />
<text  x="1159.92" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (95 samples, 0.51%)</title><rect x="144.6" y="1685" width="6.0" height="15.0" fill="rgb(249,200,7)" rx="2" ry="2" />
<text  x="147.64" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1187.3" y="1109" width="0.3" height="15.0" fill="rgb(232,70,30)" rx="2" ry="2" />
<text  x="1190.29" y="1119.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.01%)</title><rect x="193.4" y="1557" width="0.1" height="15.0" fill="rgb(234,184,7)" rx="2" ry="2" />
<text  x="196.37" y="1567.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="76.7" y="725" width="0.1" height="15.0" fill="rgb(243,69,11)" rx="2" ry="2" />
<text  x="79.66" y="735.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (3 samples, 0.02%)</title><rect x="80.6" y="1349" width="0.2" height="15.0" fill="rgb(235,160,51)" rx="2" ry="2" />
<text  x="83.57" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="217.3" y="1877" width="0.3" height="15.0" fill="rgb(214,154,14)" rx="2" ry="2" />
<text  x="220.29" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (386 samples, 2.06%)</title><rect x="55.5" y="1285" width="24.4" height="15.0" fill="rgb(222,45,48)" rx="2" ry="2" />
<text  x="58.51" y="1295.5" >[..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="162.4" y="1589" width="0.2" height="15.0" fill="rgb(215,72,50)" rx="2" ry="2" />
<text  x="165.44" y="1599.5" ></text>
</g>
<g >
<title>__pthread_getspecific (113 samples, 0.60%)</title><rect x="992.4" y="2053" width="7.1" height="15.0" fill="rgb(252,136,28)" rx="2" ry="2" />
<text  x="995.37" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.0" y="2005" width="0.2" height="15.0" fill="rgb(228,92,6)" rx="2" ry="2" />
<text  x="1190.03" y="2015.5" ></text>
</g>
<g >
<title>fasttext::QuantMatrix::addRowToVector (39 samples, 0.21%)</title><rect x="1097.1" y="2053" width="2.4" height="15.0" fill="rgb(249,116,53)" rx="2" ry="2" />
<text  x="1100.08" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="162.8" y="837" width="0.1" height="15.0" fill="rgb(241,167,33)" rx="2" ry="2" />
<text  x="165.82" y="847.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (4 samples, 0.02%)</title><rect x="42.9" y="2005" width="0.2" height="15.0" fill="rgb(215,105,7)" rx="2" ry="2" />
<text  x="45.89" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (422 samples, 2.26%)</title><rect x="189.5" y="1829" width="26.6" height="15.0" fill="rgb(231,64,53)" rx="2" ry="2" />
<text  x="192.46" y="1839.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="188.3" y="1589" width="0.1" height="15.0" fill="rgb(237,16,21)" rx="2" ry="2" />
<text  x="191.32" y="1599.5" ></text>
</g>
<g >
<title>DetectCategory (200 samples, 1.07%)</title><rect x="508.8" y="1973" width="12.6" height="15.0" fill="rgb(227,43,30)" rx="2" ry="2" />
<text  x="511.79" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.0" y="789" width="0.2" height="15.0" fill="rgb(253,74,5)" rx="2" ry="2" />
<text  x="1191.04" y="799.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (5 samples, 0.03%)</title><rect x="323.0" y="1957" width="0.3" height="15.0" fill="rgb(231,29,5)" rx="2" ry="2" />
<text  x="325.96" y="1967.5" ></text>
</g>
<g >
<title>fasttext::FastText::loadModel (11 samples, 0.06%)</title><rect x="499.0" y="2005" width="0.7" height="15.0" fill="rgb(253,105,2)" rx="2" ry="2" />
<text  x="502.01" y="2015.5" ></text>
</g>
<g >
<title>__sanitizer::internal_munmap (2 samples, 0.01%)</title><rect x="84.3" y="1589" width="0.1" height="15.0" fill="rgb(228,37,37)" rx="2" ry="2" />
<text  x="87.29" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1187.3" y="1189" width="0.3" height="15.0" fill="rgb(247,37,18)" rx="2" ry="2" />
<text  x="1190.29" y="1199.5" ></text>
</g>
<g >
<title>__pthread_getspecific (2 samples, 0.01%)</title><rect x="142.8" y="1589" width="0.1" height="15.0" fill="rgb(221,100,7)" rx="2" ry="2" />
<text  x="145.81" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1188.0" y="1333" width="0.2" height="15.0" fill="rgb(213,167,33)" rx="2" ry="2" />
<text  x="1191.04" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.0" y="645" width="0.2" height="15.0" fill="rgb(216,182,8)" rx="2" ry="2" />
<text  x="1191.04" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="188.3" y="1845" width="0.1" height="15.0" fill="rgb(246,13,0)" rx="2" ry="2" />
<text  x="191.26" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (336 samples, 1.80%)</title><rect x="55.6" y="773" width="21.2" height="15.0" fill="rgb(221,136,25)" rx="2" ry="2" />
<text  x="58.57" y="783.5" ></text>
</g>
<g >
<title>page_fault (134 samples, 0.72%)</title><rect x="921.8" y="2037" width="8.5" height="15.0" fill="rgb(222,81,9)" rx="2" ry="2" />
<text  x="924.80" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (472 samples, 2.52%)</title><rect x="131.8" y="1829" width="29.8" height="15.0" fill="rgb(208,177,44)" rx="2" ry="2" />
<text  x="134.83" y="1839.5" >st..</text>
</g>
<g >
<title>__asan_memcpy (2 samples, 0.01%)</title><rect x="132.1" y="1637" width="0.2" height="15.0" fill="rgb(250,177,2)" rx="2" ry="2" />
<text  x="135.14" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="188.2" y="1925" width="0.2" height="15.0" fill="rgb(220,142,22)" rx="2" ry="2" />
<text  x="191.19" y="1935.5" ></text>
</g>
<g >
<title>std::vector&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::allocator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;::_M_realloc_insert&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; const&amp;&gt; (3 samples, 0.02%)</title><rect x="501.5" y="1989" width="0.2" height="15.0" fill="rgb(211,79,34)" rx="2" ry="2" />
<text  x="504.53" y="1999.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (3 samples, 0.02%)</title><rect x="158.3" y="1669" width="0.2" height="15.0" fill="rgb(246,53,17)" rx="2" ry="2" />
<text  x="161.34" y="1679.5" ></text>
</g>
<g >
<title>__handle_mm_fault (19 samples, 0.10%)</title><rect x="675.4" y="1781" width="1.2" height="15.0" fill="rgb(218,38,44)" rx="2" ry="2" />
<text  x="678.37" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="162.8" y="981" width="0.1" height="15.0" fill="rgb(218,176,14)" rx="2" ry="2" />
<text  x="165.82" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.6" y="2021" width="0.4" height="15.0" fill="rgb(218,23,25)" rx="2" ry="2" />
<text  x="1190.60" y="2031.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (12 samples, 0.06%)</title><rect x="313.4" y="1941" width="0.7" height="15.0" fill="rgb(219,111,37)" rx="2" ry="2" />
<text  x="316.36" y="1951.5" ></text>
</g>
<g >
<title>__do_page_fault (7 samples, 0.04%)</title><rect x="634.3" y="1829" width="0.5" height="15.0" fill="rgb(221,157,47)" rx="2" ry="2" />
<text  x="637.34" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (487 samples, 2.61%)</title><rect x="55.5" y="1749" width="30.8" height="15.0" fill="rgb(250,65,13)" rx="2" ry="2" />
<text  x="58.51" y="1759.5" >[u..</text>
</g>
<g >
<title>TSlinkClustering::FillDistanceMatrix (238 samples, 1.27%)</title><rect x="478.6" y="1973" width="15.0" height="15.0" fill="rgb(251,226,37)" rx="2" ry="2" />
<text  x="481.55" y="1983.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="183.6" y="1717" width="0.1" height="15.0" fill="rgb(251,23,45)" rx="2" ry="2" />
<text  x="186.59" y="1727.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="83.4" y="1541" width="0.1" height="15.0" fill="rgb(234,222,26)" rx="2" ry="2" />
<text  x="86.41" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (2 samples, 0.01%)</title><rect x="187.5" y="1685" width="0.1" height="15.0" fill="rgb(236,81,52)" rx="2" ry="2" />
<text  x="190.50" y="1695.5" ></text>
</g>
<g >
<title>__asan_memcpy (4 samples, 0.02%)</title><rect x="135.5" y="1557" width="0.3" height="15.0" fill="rgb(238,162,51)" rx="2" ry="2" />
<text  x="138.55" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (72 samples, 0.39%)</title><rect x="211.3" y="1701" width="4.5" height="15.0" fill="rgb(247,104,3)" rx="2" ry="2" />
<text  x="214.30" y="1711.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int&gt; (19 samples, 0.10%)</title><rect x="1188.7" y="2053" width="1.2" height="15.0" fill="rgb(208,93,33)" rx="2" ry="2" />
<text  x="1191.67" y="2063.5" ></text>
</g>
<g >
<title>__kmalloc_node (2 samples, 0.01%)</title><rect x="929.9" y="1829" width="0.1" height="15.0" fill="rgb(226,142,4)" rx="2" ry="2" />
<text  x="932.87" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (78 samples, 0.42%)</title><rect x="195.7" y="1717" width="4.9" height="15.0" fill="rgb(224,176,16)" rx="2" ry="2" />
<text  x="198.70" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (81 samples, 0.43%)</title><rect x="178.3" y="1717" width="5.2" height="15.0" fill="rgb(223,126,47)" rx="2" ry="2" />
<text  x="181.35" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (439 samples, 2.35%)</title><rect x="189.4" y="1925" width="27.7" height="15.0" fill="rgb(241,201,40)" rx="2" ry="2" />
<text  x="192.39" y="1935.5" >s..</text>
</g>
<g >
<title>__sanitizer::LargeMmapAllocator&lt;__asan::AsanMapUnmapCallback, __sanitizer::LargeMmapAllocatorPtrArrayDynamic&gt;::Allocate (3 samples, 0.02%)</title><rect x="1008.0" y="2053" width="0.2" height="15.0" fill="rgb(225,117,20)" rx="2" ry="2" />
<text  x="1011.02" y="2063.5" ></text>
</g>
<g >
<title>TAgencyRating::ScoreUrl (400 samples, 2.14%)</title><rect x="163.3" y="1973" width="25.2" height="15.0" fill="rgb(215,193,9)" rx="2" ry="2" />
<text  x="166.26" y="1983.5" >T..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="162.4" y="1621" width="0.2" height="15.0" fill="rgb(206,119,13)" rx="2" ry="2" />
<text  x="165.44" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.0" y="725" width="0.2" height="15.0" fill="rgb(246,154,35)" rx="2" ry="2" />
<text  x="1191.04" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1187.9" y="1269" width="0.1" height="15.0" fill="rgb(216,116,28)" rx="2" ry="2" />
<text  x="1190.85" y="1279.5" ></text>
</g>
<g >
<title>TDocument::TDocument (12 samples, 0.06%)</title><rect x="121.3" y="1989" width="0.8" height="15.0" fill="rgb(222,4,17)" rx="2" ry="2" />
<text  x="124.35" y="1999.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.01%)</title><rect x="721.0" y="1893" width="0.1" height="15.0" fill="rgb(241,13,32)" rx="2" ry="2" />
<text  x="724.00" y="1903.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::clear (5 samples, 0.03%)</title><rect x="635.2" y="1877" width="0.3" height="15.0" fill="rgb(249,45,41)" rx="2" ry="2" />
<text  x="638.22" y="1887.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (6 samples, 0.03%)</title><rect x="215.1" y="1669" width="0.4" height="15.0" fill="rgb(248,87,36)" rx="2" ry="2" />
<text  x="218.15" y="1679.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::should_preserve (2 samples, 0.01%)</title><rect x="549.3" y="1893" width="0.1" height="15.0" fill="rgb(248,11,16)" rx="2" ry="2" />
<text  x="552.25" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1187.3" y="341" width="0.3" height="15.0" fill="rgb(252,50,6)" rx="2" ry="2" />
<text  x="1190.29" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="188.3" y="1669" width="0.1" height="15.0" fill="rgb(212,120,12)" rx="2" ry="2" />
<text  x="191.32" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_subexpr_begin (2 samples, 0.01%)</title><rect x="216.9" y="1877" width="0.1" height="15.0" fill="rgb(217,134,52)" rx="2" ry="2" />
<text  x="219.91" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.02%)</title><rect x="42.9" y="2021" width="0.2" height="15.0" fill="rgb(237,32,26)" rx="2" ry="2" />
<text  x="45.89" y="2031.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.02%)</title><rect x="186.2" y="1653" width="0.2" height="15.0" fill="rgb(231,105,9)" rx="2" ry="2" />
<text  x="189.24" y="1663.5" ></text>
</g>
<g >
<title>__handle_mm_fault (10 samples, 0.05%)</title><rect x="630.2" y="1797" width="0.6" height="15.0" fill="rgb(239,59,42)" rx="2" ry="2" />
<text  x="633.17" y="1807.5" ></text>
</g>
<g >
<title>smp_call_function_many (4 samples, 0.02%)</title><rect x="55.1" y="1829" width="0.2" height="15.0" fill="rgb(216,160,46)" rx="2" ry="2" />
<text  x="58.07" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1187.3" y="421" width="0.3" height="15.0" fill="rgb(209,217,20)" rx="2" ry="2" />
<text  x="1190.29" y="431.5" ></text>
</g>
<g >
<title>ptep_clear_flush (33 samples, 0.18%)</title><rect x="928.0" y="1925" width="2.1" height="15.0" fill="rgb(211,8,22)" rx="2" ry="2" />
<text  x="931.04" y="1935.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::basic_json&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, 0&gt; (6 samples, 0.03%)</title><rect x="122.4" y="1925" width="0.4" height="15.0" fill="rgb(230,110,53)" rx="2" ry="2" />
<text  x="125.42" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.9" y="85" width="0.1" height="15.0" fill="rgb(226,14,47)" rx="2" ry="2" />
<text  x="1190.85" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="162.4" y="1557" width="0.2" height="15.0" fill="rgb(254,49,2)" rx="2" ry="2" />
<text  x="165.44" y="1567.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (2 samples, 0.01%)</title><rect x="88.0" y="1701" width="0.1" height="15.0" fill="rgb(236,223,24)" rx="2" ry="2" />
<text  x="91.02" y="1711.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (7 samples, 0.04%)</title><rect x="738.6" y="1893" width="0.4" height="15.0" fill="rgb(214,207,40)" rx="2" ry="2" />
<text  x="741.55" y="1903.5" ></text>
</g>
<g >
<title>__sanitizer::RunFreeHooks (11 samples, 0.06%)</title><rect x="1008.3" y="2053" width="0.7" height="15.0" fill="rgb(238,190,0)" rx="2" ry="2" />
<text  x="1011.27" y="2063.5" ></text>
</g>
<g >
<title>boost::algorithm::join&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, char [2]&gt; (18 samples, 0.10%)</title><rect x="546.2" y="1941" width="1.1" height="15.0" fill="rgb(225,30,22)" rx="2" ry="2" />
<text  x="549.16" y="1951.5" ></text>
</g>
<g >
<title>nlohmann::detail::external_constructor&lt; (3 samples, 0.02%)</title><rect x="500.3" y="1989" width="0.2" height="15.0" fill="rgb(225,123,12)" rx="2" ry="2" />
<text  x="503.33" y="1999.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::json_value::destroy (2 samples, 0.01%)</title><rect x="122.2" y="1989" width="0.1" height="15.0" fill="rgb(247,213,27)" rx="2" ry="2" />
<text  x="125.17" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.0" y="1317" width="0.2" height="15.0" fill="rgb(228,115,40)" rx="2" ry="2" />
<text  x="1191.04" y="1327.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (4 samples, 0.02%)</title><rect x="153.1" y="1637" width="0.2" height="15.0" fill="rgb(250,219,11)" rx="2" ry="2" />
<text  x="156.10" y="1647.5" ></text>
</g>
<g >
<title>handle_mm_fault (3 samples, 0.02%)</title><rect x="1008.0" y="1989" width="0.2" height="15.0" fill="rgb(248,221,5)" rx="2" ry="2" />
<text  x="1011.02" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1187.3" y="133" width="0.3" height="15.0" fill="rgb(208,16,12)" rx="2" ry="2" />
<text  x="1190.29" y="143.5" ></text>
</g>
<g >
<title>unmap_single_vma (2 samples, 0.01%)</title><rect x="1095.3" y="1877" width="0.1" height="15.0" fill="rgb(222,36,49)" rx="2" ry="2" />
<text  x="1098.25" y="1887.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (3 samples, 0.02%)</title><rect x="751.4" y="1861" width="0.2" height="15.0" fill="rgb(228,152,1)" rx="2" ry="2" />
<text  x="754.43" y="1871.5" ></text>
</g>
<g >
<title>__sanitizer::internal_munmap (2 samples, 0.01%)</title><rect x="88.0" y="1845" width="0.1" height="15.0" fill="rgb(246,160,36)" rx="2" ry="2" />
<text  x="91.02" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1187.3" y="1445" width="0.3" height="15.0" fill="rgb(213,206,53)" rx="2" ry="2" />
<text  x="1190.29" y="1455.5" ></text>
</g>
<g >
<title>[unknown] (371 samples, 1.98%)</title><rect x="55.5" y="1205" width="23.4" height="15.0" fill="rgb(240,92,15)" rx="2" ry="2" />
<text  x="58.51" y="1215.5" >[..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1187.9" y="693" width="0.1" height="15.0" fill="rgb(226,105,0)" rx="2" ry="2" />
<text  x="1190.85" y="703.5" ></text>
</g>
<g >
<title>tgnews (18,694 samples, 100.00%)</title><rect x="10.0" y="2069" width="1180.0" height="15.0" fill="rgb(216,160,25)" rx="2" ry="2" />
<text  x="13.00" y="2079.5" >tgnews</text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (6 samples, 0.03%)</title><rect x="163.7" y="1669" width="0.4" height="15.0" fill="rgb(210,176,14)" rx="2" ry="2" />
<text  x="166.70" y="1679.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="86.6" y="1765" width="0.2" height="15.0" fill="rgb(236,127,35)" rx="2" ry="2" />
<text  x="89.63" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1187.3" y="597" width="0.3" height="15.0" fill="rgb(226,186,45)" rx="2" ry="2" />
<text  x="1190.29" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="1187.8" y="1541" width="0.2" height="15.0" fill="rgb(217,220,1)" rx="2" ry="2" />
<text  x="1190.79" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (70 samples, 0.37%)</title><rect x="201.0" y="1653" width="4.4" height="15.0" fill="rgb(215,99,51)" rx="2" ry="2" />
<text  x="204.01" y="1663.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (12 samples, 0.06%)</title><rect x="672.8" y="1845" width="0.8" height="15.0" fill="rgb(224,219,24)" rx="2" ry="2" />
<text  x="675.84" y="1855.5" ></text>
</g>
<g >
<title>find_vma (2 samples, 0.01%)</title><rect x="675.2" y="1797" width="0.1" height="15.0" fill="rgb(217,153,19)" rx="2" ry="2" />
<text  x="678.18" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt;,  (6 samples, 0.03%)</title><rect x="217.2" y="1957" width="0.4" height="15.0" fill="rgb(219,160,33)" rx="2" ry="2" />
<text  x="220.23" y="1967.5" ></text>
</g>
<g >
<title>__dynamic_cast (5 samples, 0.03%)</title><rect x="169.3" y="1589" width="0.3" height="15.0" fill="rgb(235,144,17)" rx="2" ry="2" />
<text  x="172.26" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.2" y="1813" width="0.4" height="15.0" fill="rgb(210,34,36)" rx="2" ry="2" />
<text  x="1190.22" y="1823.5" ></text>
</g>
<g >
<title>fasttext::Vector::norm (22 samples, 0.12%)</title><rect x="496.3" y="1973" width="1.4" height="15.0" fill="rgb(243,200,9)" rx="2" ry="2" />
<text  x="499.29" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.9" y="709" width="0.1" height="15.0" fill="rgb(243,176,54)" rx="2" ry="2" />
<text  x="1190.85" y="719.5" ></text>
</g>
<g >
<title>__asan::asan_memalign (4 samples, 0.02%)</title><rect x="582.3" y="1861" width="0.2" height="15.0" fill="rgb(222,216,29)" rx="2" ry="2" />
<text  x="585.26" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (869 samples, 4.65%)</title><rect x="805.7" y="2021" width="54.9" height="15.0" fill="rgb(232,209,49)" rx="2" ry="2" />
<text  x="808.71" y="2031.5" >[unkn..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (79 samples, 0.42%)</title><rect x="211.1" y="1765" width="5.0" height="15.0" fill="rgb(206,206,4)" rx="2" ry="2" />
<text  x="214.11" y="1775.5" ></text>
</g>
<g >
<title>unmap_region (2 samples, 0.01%)</title><rect x="82.0" y="1349" width="0.1" height="15.0" fill="rgb(214,93,53)" rx="2" ry="2" />
<text  x="84.96" y="1359.5" ></text>
</g>
<g >
<title>__dynamic_cast (4 samples, 0.02%)</title><rect x="191.2" y="1573" width="0.2" height="15.0" fill="rgb(244,225,37)" rx="2" ry="2" />
<text  x="194.16" y="1583.5" ></text>
</g>
<g >
<title>__interceptor_strcmp (7 samples, 0.04%)</title><rect x="42.1" y="2037" width="0.5" height="15.0" fill="rgb(248,127,12)" rx="2" ry="2" />
<text  x="45.13" y="2047.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;std::__detail::_State&lt;char&gt; const*, std::__detail::_State&lt;char&gt;*&gt; (5 samples, 0.03%)</title><rect x="156.0" y="1717" width="0.3" height="15.0" fill="rgb(241,58,9)" rx="2" ry="2" />
<text  x="159.00" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1187.3" y="949" width="0.3" height="15.0" fill="rgb(235,12,51)" rx="2" ry="2" />
<text  x="1190.29" y="959.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::do_tolower (3 samples, 0.02%)</title><rect x="200.1" y="1605" width="0.1" height="15.0" fill="rgb(242,82,32)" rx="2" ry="2" />
<text  x="203.06" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.6" y="1957" width="0.4" height="15.0" fill="rgb(254,217,0)" rx="2" ry="2" />
<text  x="1190.60" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1187.7" y="1589" width="0.3" height="15.0" fill="rgb(245,205,28)" rx="2" ry="2" />
<text  x="1190.73" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3 samples, 0.02%)</title><rect x="216.5" y="1813" width="0.2" height="15.0" fill="rgb(226,125,7)" rx="2" ry="2" />
<text  x="219.47" y="1823.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&gt;::ReleaseFreeMemoryToOS&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&gt;::MemoryMapper&gt; (11 samples, 0.06%)</title><rect x="1010.8" y="2053" width="0.7" height="15.0" fill="rgb(220,110,37)" rx="2" ry="2" />
<text  x="1013.80" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.6" y="1861" width="0.4" height="15.0" fill="rgb(210,214,52)" rx="2" ry="2" />
<text  x="1190.60" y="1871.5" ></text>
</g>
<g >
<title>fasttext::Vector::zero (11 samples, 0.06%)</title><rect x="477.8" y="1957" width="0.7" height="15.0" fill="rgb(218,162,26)" rx="2" ry="2" />
<text  x="480.80" y="1967.5" ></text>
</g>
<g >
<title>try_to_wake_up (6 samples, 0.03%)</title><rect x="27.4" y="1893" width="0.4" height="15.0" fill="rgb(207,126,53)" rx="2" ry="2" />
<text  x="30.42" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1187.2" y="1925" width="0.4" height="15.0" fill="rgb(239,20,3)" rx="2" ry="2" />
<text  x="1190.22" y="1935.5" ></text>
</g>
<g >
<title>do_syscall_64 (19 samples, 0.10%)</title><rect x="1094.4" y="2021" width="1.2" height="15.0" fill="rgb(215,90,24)" rx="2" ry="2" />
<text  x="1097.43" y="2031.5" ></text>
</g>
<g >
<title>boost::optional_detail::optional_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::assign (2 samples, 0.01%)</title><rect x="502.2" y="1941" width="0.2" height="15.0" fill="rgb(246,20,16)" rx="2" ry="2" />
<text  x="505.22" y="1951.5" ></text>
</g>
<g >
<title>clear_page_erms (2 samples, 0.01%)</title><rect x="748.1" y="1909" width="0.1" height="15.0" fill="rgb(207,47,40)" rx="2" ry="2" />
<text  x="751.08" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="162.7" y="1621" width="0.2" height="15.0" fill="rgb(241,50,50)" rx="2" ry="2" />
<text  x="165.69" y="1631.5" ></text>
</g>
<g >
<title>__sanitizer::BlockingMutex::Unlock (2 samples, 0.01%)</title><rect x="742.0" y="2037" width="0.1" height="15.0" fill="rgb(236,60,40)" rx="2" ry="2" />
<text  x="744.96" y="2047.5" ></text>
</g>
<g >
<title>std::istream::get (2 samples, 0.01%)</title><rect x="862.7" y="1989" width="0.1" height="15.0" fill="rgb(221,206,47)" rx="2" ry="2" />
<text  x="865.65" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="188.3" y="1445" width="0.1" height="15.0" fill="rgb(220,62,2)" rx="2" ry="2" />
<text  x="191.32" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1187.3" y="1029" width="0.3" height="15.0" fill="rgb(223,93,20)" rx="2" ry="2" />
<text  x="1190.29" y="1039.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (3 samples, 0.02%)</title><rect x="81.2" y="1397" width="0.2" height="15.0" fill="rgb(250,161,32)" rx="2" ry="2" />
<text  x="84.20" y="1407.5" ></text>
</g>
<g >
<title>try_charge (4 samples, 0.02%)</title><rect x="676.3" y="1733" width="0.3" height="15.0" fill="rgb(252,114,39)" rx="2" ry="2" />
<text  x="679.31" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (458 samples, 2.45%)</title><rect x="55.5" y="1605" width="28.9" height="15.0" fill="rgb(242,153,24)" rx="2" ry="2" />
<text  x="58.51" y="1615.5" >[u..</text>
</g>
<g >
<title>std::istream::sentry::sentry (2 samples, 0.01%)</title><rect x="328.0" y="1989" width="0.1" height="15.0" fill="rgb(226,130,26)" rx="2" ry="2" />
<text  x="331.01" y="1999.5" ></text>
</g>
<g >
<title>__mod_node_page_state (2 samples, 0.01%)</title><rect x="23.3" y="1957" width="0.1" height="15.0" fill="rgb(248,73,14)" rx="2" ry="2" />
<text  x="26.26" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (2 samples, 0.01%)</title><rect x="187.5" y="1701" width="0.1" height="15.0" fill="rgb(205,166,53)" rx="2" ry="2" />
<text  x="190.50" y="1711.5" ></text>
</g>
<g >
<title>kmalloc_slab (2 samples, 0.01%)</title><rect x="929.9" y="1813" width="0.1" height="15.0" fill="rgb(246,40,28)" rx="2" ry="2" />
<text  x="932.87" y="1823.5" ></text>
</g>
<g >
<title>release_pages (2 samples, 0.01%)</title><rect x="1095.1" y="1813" width="0.2" height="15.0" fill="rgb(234,97,15)" rx="2" ry="2" />
<text  x="1098.13" y="1823.5" ></text>
</g>
<g >
<title>__asan_memcpy (22 samples, 0.12%)</title><rect x="591.9" y="1845" width="1.3" height="15.0" fill="rgb(206,56,33)" rx="2" ry="2" />
<text  x="594.86" y="1855.5" ></text>
</g>
<g >
<title>__sanitizer::ThreadContextBase::OnJoined (4 samples, 0.02%)</title><rect x="750.5" y="2037" width="0.3" height="15.0" fill="rgb(254,129,5)" rx="2" ry="2" />
<text  x="753.55" y="2047.5" ></text>
</g>
<g >
<title>__asan::Allocator::Deallocate (4 samples, 0.02%)</title><rect x="134.5" y="1557" width="0.3" height="15.0" fill="rgb(224,32,46)" rx="2" ry="2" />
<text  x="137.54" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (81 samples, 0.43%)</title><rect x="178.3" y="1749" width="5.2" height="15.0" fill="rgb(219,20,42)" rx="2" ry="2" />
<text  x="181.35" y="1759.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::Unwind (3 samples, 0.02%)</title><rect x="159.7" y="1669" width="0.2" height="15.0" fill="rgb(208,171,42)" rx="2" ry="2" />
<text  x="162.73" y="1679.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (2 samples, 0.01%)</title><rect x="483.0" y="1829" width="0.2" height="15.0" fill="rgb(214,180,41)" rx="2" ry="2" />
<text  x="486.04" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.9" y="725" width="0.1" height="15.0" fill="rgb(247,203,50)" rx="2" ry="2" />
<text  x="1190.85" y="735.5" ></text>
</g>
<g >
<title>fasttext::Matrix::size (33 samples, 0.18%)</title><rect x="318.9" y="1973" width="2.1" height="15.0" fill="rgb(208,103,26)" rx="2" ry="2" />
<text  x="321.92" y="1983.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::json_value::destroy (5 samples, 0.03%)</title><rect x="500.8" y="1989" width="0.3" height="15.0" fill="rgb(231,158,11)" rx="2" ry="2" />
<text  x="503.77" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (4 samples, 0.02%)</title><rect x="161.9" y="1829" width="0.2" height="15.0" fill="rgb(220,171,17)" rx="2" ry="2" />
<text  x="164.87" y="1839.5" ></text>
</g>
<g >
<title>do_page_fault (4 samples, 0.02%)</title><rect x="552.5" y="1861" width="0.2" height="15.0" fill="rgb(244,18,6)" rx="2" ry="2" />
<text  x="555.47" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="162.8" y="789" width="0.1" height="15.0" fill="rgb(226,84,23)" rx="2" ry="2" />
<text  x="165.82" y="799.5" ></text>
</g>
<g >
<title>__x64_sys_read (2 samples, 0.01%)</title><rect x="121.0" y="1989" width="0.2" height="15.0" fill="rgb(216,180,47)" rx="2" ry="2" />
<text  x="124.03" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (424 samples, 2.27%)</title><rect x="189.5" y="1861" width="26.7" height="15.0" fill="rgb(247,90,53)" rx="2" ry="2" />
<text  x="192.46" y="1871.5" >s..</text>
</g>
<g >
<title>[unknown] (326 samples, 1.74%)</title><rect x="55.6" y="357" width="20.6" height="15.0" fill="rgb(209,141,14)" rx="2" ry="2" />
<text  x="58.57" y="367.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (2 samples, 0.01%)</title><rect x="82.0" y="1397" width="0.1" height="15.0" fill="rgb(223,71,10)" rx="2" ry="2" />
<text  x="84.96" y="1407.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (3 samples, 0.02%)</title><rect x="85.6" y="1685" width="0.1" height="15.0" fill="rgb(220,46,23)" rx="2" ry="2" />
<text  x="88.56" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (101 samples, 0.54%)</title><rect x="132.4" y="1621" width="6.4" height="15.0" fill="rgb(229,43,14)" rx="2" ry="2" />
<text  x="135.39" y="1631.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (5 samples, 0.03%)</title><rect x="79.9" y="1301" width="0.4" height="15.0" fill="rgb(220,35,37)" rx="2" ry="2" />
<text  x="82.94" y="1311.5" ></text>
</g>
<g >
<title>native_flush_tlb_others (24 samples, 0.13%)</title><rect x="928.6" y="1893" width="1.5" height="15.0" fill="rgb(240,175,37)" rx="2" ry="2" />
<text  x="931.61" y="1903.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (10 samples, 0.05%)</title><rect x="571.7" y="1877" width="0.6" height="15.0" fill="rgb(247,213,2)" rx="2" ry="2" />
<text  x="574.66" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1188.0" y="1381" width="0.2" height="15.0" fill="rgb(219,38,7)" rx="2" ry="2" />
<text  x="1191.04" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1188.0" y="1765" width="0.2" height="15.0" fill="rgb(206,133,53)" rx="2" ry="2" />
<text  x="1191.04" y="1775.5" ></text>
</g>
<g >
<title>page_fault (16 samples, 0.09%)</title><rect x="659.7" y="1845" width="1.0" height="15.0" fill="rgb(239,18,4)" rx="2" ry="2" />
<text  x="662.71" y="1855.5" ></text>
</g>
<g >
<title>__handle_mm_fault (91 samples, 0.49%)</title><rect x="924.4" y="1973" width="5.8" height="15.0" fill="rgb(222,89,42)" rx="2" ry="2" />
<text  x="927.45" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1187.9" y="165" width="0.1" height="15.0" fill="rgb(222,0,12)" rx="2" ry="2" />
<text  x="1190.85" y="175.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::create&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt; const&amp;&gt; (3 samples, 0.02%)</title><rect x="501.5" y="1813" width="0.2" height="15.0" fill="rgb(244,9,29)" rx="2" ry="2" />
<text  x="504.53" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (330 samples, 1.77%)</title><rect x="55.6" y="565" width="20.8" height="15.0" fill="rgb(254,2,26)" rx="2" ry="2" />
<text  x="58.57" y="575.5" ></text>
</g>
<g >
<title>do_exit (5 samples, 0.03%)</title><rect x="1095.9" y="1989" width="0.3" height="15.0" fill="rgb(246,219,51)" rx="2" ry="2" />
<text  x="1098.89" y="1999.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (6 samples, 0.03%)</title><rect x="676.2" y="1765" width="0.4" height="15.0" fill="rgb(240,198,16)" rx="2" ry="2" />
<text  x="679.19" y="1775.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (869 samples, 4.65%)</title><rect x="805.7" y="2037" width="54.9" height="15.0" fill="rgb(213,6,43)" rx="2" ry="2" />
<text  x="808.71" y="2047.5" >std::..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (6 samples, 0.03%)</title><rect x="155.9" y="1781" width="0.4" height="15.0" fill="rgb(252,125,4)" rx="2" ry="2" />
<text  x="158.94" y="1791.5" ></text>
</g>
<g >
<title>do_page_fault (6 samples, 0.03%)</title><rect x="714.6" y="1861" width="0.3" height="15.0" fill="rgb(238,192,18)" rx="2" ry="2" />
<text  x="717.57" y="1871.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="89.9" y="1909" width="0.1" height="15.0" fill="rgb(239,201,24)" rx="2" ry="2" />
<text  x="92.91" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.0" y="1301" width="0.2" height="15.0" fill="rgb(229,3,32)" rx="2" ry="2" />
<text  x="1191.04" y="1311.5" ></text>
</g>
<g >
<title>[unknown] (336 samples, 1.80%)</title><rect x="55.6" y="853" width="21.2" height="15.0" fill="rgb(229,176,17)" rx="2" ry="2" />
<text  x="58.57" y="863.5" ></text>
</g>
<g >
<title>[unknown] (9 samples, 0.05%)</title><rect x="798.4" y="2021" width="0.6" height="15.0" fill="rgb(226,88,43)" rx="2" ry="2" />
<text  x="801.39" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="162.8" y="1077" width="0.1" height="15.0" fill="rgb(226,122,1)" rx="2" ry="2" />
<text  x="165.75" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="162.4" y="1333" width="0.2" height="15.0" fill="rgb(226,97,50)" rx="2" ry="2" />
<text  x="165.44" y="1343.5" ></text>
</g>
<g >
<title>__handle_mm_fault (3 samples, 0.02%)</title><rect x="1012.2" y="1973" width="0.2" height="15.0" fill="rgb(217,206,5)" rx="2" ry="2" />
<text  x="1015.25" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.9" y="421" width="0.1" height="15.0" fill="rgb(230,142,34)" rx="2" ry="2" />
<text  x="1190.85" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.9" y="517" width="0.1" height="15.0" fill="rgb(220,153,45)" rx="2" ry="2" />
<text  x="1190.85" y="527.5" ></text>
</g>
<g >
<title>tlb_flush_mmu_free (5 samples, 0.03%)</title><rect x="505.3" y="1909" width="0.3" height="15.0" fill="rgb(227,180,6)" rx="2" ry="2" />
<text  x="508.32" y="1919.5" ></text>
</g>
<g >
<title>alloc_pages_vma (3 samples, 0.02%)</title><rect x="1096.4" y="1941" width="0.2" height="15.0" fill="rgb(252,76,15)" rx="2" ry="2" />
<text  x="1099.39" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (493 samples, 2.64%)</title><rect x="55.5" y="1765" width="31.1" height="15.0" fill="rgb(207,140,3)" rx="2" ry="2" />
<text  x="58.51" y="1775.5" >[u..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (72 samples, 0.39%)</title><rect x="200.9" y="1669" width="4.6" height="15.0" fill="rgb(236,74,36)" rx="2" ry="2" />
<text  x="203.94" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1187.3" y="1157" width="0.3" height="15.0" fill="rgb(253,189,13)" rx="2" ry="2" />
<text  x="1190.29" y="1167.5" ></text>
</g>
<g >
<title>onmt::unicode::explode_utf8 (43 samples, 0.23%)</title><rect x="795.7" y="2037" width="2.7" height="15.0" fill="rgb(217,29,46)" rx="2" ry="2" />
<text  x="798.68" y="2047.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::clear (2 samples, 0.01%)</title><rect x="98.3" y="2021" width="0.1" height="15.0" fill="rgb(215,45,44)" rx="2" ry="2" />
<text  x="101.31" y="2031.5" ></text>
</g>
<g >
<title>onmt::unicode::get_lower (7 samples, 0.04%)</title><rect x="596.0" y="1877" width="0.4" height="15.0" fill="rgb(242,108,8)" rx="2" ry="2" />
<text  x="598.96" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.9" y="1093" width="0.1" height="15.0" fill="rgb(233,81,21)" rx="2" ry="2" />
<text  x="1190.85" y="1103.5" ></text>
</g>
<g >
<title>__asan::GetMallocContextSize (2 samples, 0.01%)</title><rect x="1116.7" y="2037" width="0.1" height="15.0" fill="rgb(226,46,28)" rx="2" ry="2" />
<text  x="1119.72" y="2047.5" ></text>
</g>
<g >
<title>up_write (3 samples, 0.02%)</title><rect x="751.4" y="1941" width="0.2" height="15.0" fill="rgb(244,87,8)" rx="2" ry="2" />
<text  x="754.43" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1188.0" y="613" width="0.2" height="15.0" fill="rgb(228,93,46)" rx="2" ry="2" />
<text  x="1191.04" y="623.5" ></text>
</g>
<g >
<title>__handle_mm_fault (2 samples, 0.01%)</title><rect x="1008.1" y="1973" width="0.1" height="15.0" fill="rgb(219,36,44)" rx="2" ry="2" />
<text  x="1011.08" y="1983.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (8 samples, 0.04%)</title><rect x="738.0" y="1893" width="0.5" height="15.0" fill="rgb(235,208,10)" rx="2" ry="2" />
<text  x="740.98" y="1903.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (3 samples, 0.02%)</title><rect x="192.2" y="1557" width="0.2" height="15.0" fill="rgb(250,92,15)" rx="2" ry="2" />
<text  x="195.17" y="1567.5" ></text>
</g>
<g >
<title>do_page_fault (30 samples, 0.16%)</title><rect x="674.7" y="1829" width="1.9" height="15.0" fill="rgb(241,62,31)" rx="2" ry="2" />
<text  x="677.74" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="188.3" y="1765" width="0.1" height="15.0" fill="rgb(236,112,52)" rx="2" ry="2" />
<text  x="191.26" y="1775.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (2 samples, 0.01%)</title><rect x="87.8" y="1781" width="0.1" height="15.0" fill="rgb(226,81,28)" rx="2" ry="2" />
<text  x="90.77" y="1791.5" ></text>
</g>
<g >
<title>onmt::is_alphabet (8 samples, 0.04%)</title><rect x="719.5" y="1893" width="0.5" height="15.0" fill="rgb(210,117,33)" rx="2" ry="2" />
<text  x="722.49" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (82 samples, 0.44%)</title><rect x="156.4" y="1797" width="5.2" height="15.0" fill="rgb(218,96,33)" rx="2" ry="2" />
<text  x="159.38" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="188.3" y="1829" width="0.1" height="15.0" fill="rgb(219,13,44)" rx="2" ry="2" />
<text  x="191.26" y="1839.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (2 samples, 0.01%)</title><rect x="175.7" y="1589" width="0.1" height="15.0" fill="rgb(236,28,23)" rx="2" ry="2" />
<text  x="178.69" y="1599.5" ></text>
</g>
<g >
<title>onmt::unicode::is_separator (106 samples, 0.57%)</title><rect x="707.9" y="1877" width="6.7" height="15.0" fill="rgb(206,59,32)" rx="2" ry="2" />
<text  x="710.88" y="1887.5" ></text>
</g>
<g >
<title>fasttext::FastText::predictLine (384 samples, 2.05%)</title><rect x="521.6" y="1941" width="24.2" height="15.0" fill="rgb(232,200,54)" rx="2" ry="2" />
<text  x="524.60" y="1951.5" >f..</text>
</g>
<g >
<title>[unknown] (413 samples, 2.21%)</title><rect x="55.5" y="1413" width="26.1" height="15.0" fill="rgb(206,65,3)" rx="2" ry="2" />
<text  x="58.51" y="1423.5" >[..</text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (3 samples, 0.02%)</title><rect x="791.3" y="2005" width="0.2" height="15.0" fill="rgb(241,193,30)" rx="2" ry="2" />
<text  x="794.32" y="2015.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (6 samples, 0.03%)</title><rect x="1116.0" y="2037" width="0.3" height="15.0" fill="rgb(226,23,25)" rx="2" ry="2" />
<text  x="1118.96" y="2047.5" ></text>
</g>
<g >
<title>nlohmann::operator&gt;&gt; (132 samples, 0.71%)</title><rect x="122.3" y="1989" width="8.3" height="15.0" fill="rgb(233,138,0)" rx="2" ry="2" />
<text  x="125.29" y="1999.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (9 samples, 0.05%)</title><rect x="482.3" y="1829" width="0.6" height="15.0" fill="rgb(241,38,34)" rx="2" ry="2" />
<text  x="485.34" y="1839.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (10 samples, 0.05%)</title><rect x="751.0" y="1957" width="0.6" height="15.0" fill="rgb(227,106,39)" rx="2" ry="2" />
<text  x="753.99" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.9" y="341" width="0.1" height="15.0" fill="rgb(240,159,46)" rx="2" ry="2" />
<text  x="1190.85" y="351.5" ></text>
</g>
<g >
<title>page_fault (6 samples, 0.03%)</title><rect x="714.6" y="1877" width="0.3" height="15.0" fill="rgb(206,224,32)" rx="2" ry="2" />
<text  x="717.57" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="162.6" y="1701" width="0.3" height="15.0" fill="rgb(221,101,19)" rx="2" ry="2" />
<text  x="165.63" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (81 samples, 0.43%)</title><rect x="150.8" y="1701" width="5.1" height="15.0" fill="rgb(211,156,41)" rx="2" ry="2" />
<text  x="153.82" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (71 samples, 0.38%)</title><rect x="168.4" y="1605" width="4.5" height="15.0" fill="rgb(222,136,49)" rx="2" ry="2" />
<text  x="171.44" y="1615.5" ></text>
</g>
<g >
<title>wp_page_copy (81 samples, 0.43%)</title><rect x="925.0" y="1941" width="5.1" height="15.0" fill="rgb(245,123,19)" rx="2" ry="2" />
<text  x="928.01" y="1951.5" ></text>
</g>
<g >
<title>__dynamic_cast (5 samples, 0.03%)</title><rect x="147.4" y="1605" width="0.3" height="15.0" fill="rgb(232,6,13)" rx="2" ry="2" />
<text  x="150.35" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1187.6" y="1941" width="0.4" height="15.0" fill="rgb(254,45,49)" rx="2" ry="2" />
<text  x="1190.60" y="1951.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::addSubwords (18 samples, 0.10%)</title><rect x="519.4" y="1909" width="1.1" height="15.0" fill="rgb(235,6,53)" rx="2" ry="2" />
<text  x="522.39" y="1919.5" ></text>
</g>
<g >
<title>exit_mmap (5 samples, 0.03%)</title><rect x="1095.9" y="1957" width="0.3" height="15.0" fill="rgb(215,172,47)" rx="2" ry="2" />
<text  x="1098.89" y="1967.5" ></text>
</g>
<g >
<title>__interceptor_strcmp (98 samples, 0.52%)</title><rect x="35.6" y="2021" width="6.2" height="15.0" fill="rgb(241,53,53)" rx="2" ry="2" />
<text  x="38.56" y="2031.5" ></text>
</g>
<g >
<title>page_add_new_anon_rmap (4 samples, 0.02%)</title><rect x="927.8" y="1925" width="0.2" height="15.0" fill="rgb(245,191,49)" rx="2" ry="2" />
<text  x="930.79" y="1935.5" ></text>
</g>
<g >
<title>operator delete (30 samples, 0.16%)</title><rect x="610.7" y="1877" width="1.9" height="15.0" fill="rgb(234,80,2)" rx="2" ry="2" />
<text  x="613.73" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (79 samples, 0.42%)</title><rect x="178.5" y="1669" width="5.0" height="15.0" fill="rgb(247,175,0)" rx="2" ry="2" />
<text  x="181.47" y="1679.5" ></text>
</g>
<g >
<title>arch_tlb_finish_mmu (2 samples, 0.01%)</title><rect x="89.9" y="1813" width="0.1" height="15.0" fill="rgb(226,113,11)" rx="2" ry="2" />
<text  x="92.91" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.02%)</title><rect x="866.1" y="2021" width="0.2" height="15.0" fill="rgb(247,152,22)" rx="2" ry="2" />
<text  x="869.12" y="2031.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (3 samples, 0.02%)</title><rect x="158.7" y="1669" width="0.2" height="15.0" fill="rgb(244,106,11)" rx="2" ry="2" />
<text  x="161.72" y="1679.5" ></text>
</g>
<g >
<title>mmap_region (7 samples, 0.04%)</title><rect x="751.0" y="1925" width="0.4" height="15.0" fill="rgb(238,200,44)" rx="2" ry="2" />
<text  x="753.99" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (4 samples, 0.02%)</title><rect x="187.9" y="1877" width="0.2" height="15.0" fill="rgb(254,180,34)" rx="2" ry="2" />
<text  x="190.88" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1187.3" y="773" width="0.3" height="15.0" fill="rgb(251,174,24)" rx="2" ry="2" />
<text  x="1190.29" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (84 samples, 0.45%)</title><rect x="205.6" y="1733" width="5.3" height="15.0" fill="rgb(239,117,3)" rx="2" ry="2" />
<text  x="208.61" y="1743.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (67 samples, 0.36%)</title><rect x="728.7" y="1877" width="4.2" height="15.0" fill="rgb(236,215,29)" rx="2" ry="2" />
<text  x="731.71" y="1887.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::Unwind (4 samples, 0.02%)</title><rect x="136.2" y="1557" width="0.2" height="15.0" fill="rgb(234,43,29)" rx="2" ry="2" />
<text  x="139.18" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.0" y="1157" width="0.2" height="15.0" fill="rgb(229,193,21)" rx="2" ry="2" />
<text  x="1191.04" y="1167.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (2 samples, 0.01%)</title><rect x="82.1" y="1461" width="0.2" height="15.0" fill="rgb(225,127,37)" rx="2" ry="2" />
<text  x="85.15" y="1471.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (5 samples, 0.03%)</title><rect x="172.3" y="1573" width="0.4" height="15.0" fill="rgb(216,87,21)" rx="2" ry="2" />
<text  x="175.35" y="1583.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="200.4" y="1605" width="0.1" height="15.0" fill="rgb(230,221,20)" rx="2" ry="2" />
<text  x="203.38" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (352 samples, 1.88%)</title><rect x="55.6" y="1141" width="22.2" height="15.0" fill="rgb(248,1,30)" rx="2" ry="2" />
<text  x="58.57" y="1151.5" >[..</text>
</g>
<g >
<title>fasttext::FastText::getDimension (35 samples, 0.19%)</title><rect x="323.9" y="1989" width="2.2" height="15.0" fill="rgb(213,25,6)" rx="2" ry="2" />
<text  x="326.90" y="1999.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (2 samples, 0.01%)</title><rect x="84.3" y="1541" width="0.1" height="15.0" fill="rgb(240,92,45)" rx="2" ry="2" />
<text  x="87.29" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (87 samples, 0.47%)</title><rect x="139.0" y="1669" width="5.4" height="15.0" fill="rgb(250,173,10)" rx="2" ry="2" />
<text  x="141.96" y="1679.5" ></text>
</g>
<g >
<title>mem_cgroup_throttle_swaprate (6 samples, 0.03%)</title><rect x="748.3" y="1925" width="0.4" height="15.0" fill="rgb(207,34,23)" rx="2" ry="2" />
<text  x="751.34" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (425 samples, 2.27%)</title><rect x="55.5" y="1477" width="26.8" height="15.0" fill="rgb(234,210,19)" rx="2" ry="2" />
<text  x="58.51" y="1487.5" >[..</text>
</g>
<g >
<title>__pthread_getspecific (2 samples, 0.01%)</title><rect x="214.0" y="1669" width="0.1" height="15.0" fill="rgb(253,192,52)" rx="2" ry="2" />
<text  x="217.01" y="1679.5" ></text>
</g>
<g >
<title>TSlinkClustering::ClusterBatch (2,696 samples, 14.42%)</title><rect x="328.7" y="1989" width="170.2" height="15.0" fill="rgb(214,84,27)" rx="2" ry="2" />
<text  x="331.70" y="1999.5" >TSlinkClustering::Clus..</text>
</g>
<g >
<title>Eigen::PlainObjectBase&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; &gt;::resize (4 samples, 0.02%)</title><rect x="223.6" y="1957" width="0.3" height="15.0" fill="rgb(241,13,6)" rx="2" ry="2" />
<text  x="226.60" y="1967.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (6 samples, 0.03%)</title><rect x="186.6" y="1653" width="0.4" height="15.0" fill="rgb(246,99,49)" rx="2" ry="2" />
<text  x="189.61" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="162.7" y="1493" width="0.2" height="15.0" fill="rgb(211,227,36)" rx="2" ry="2" />
<text  x="165.69" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1187.3" y="1461" width="0.3" height="15.0" fill="rgb(240,181,2)" rx="2" ry="2" />
<text  x="1190.29" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_try_char (2 samples, 0.01%)</title><rect x="144.5" y="1733" width="0.1" height="15.0" fill="rgb(250,81,5)" rx="2" ry="2" />
<text  x="147.51" y="1743.5" ></text>
</g>
<g >
<title>on_each_cpu_cond_mask (2 samples, 0.01%)</title><rect x="89.9" y="1749" width="0.1" height="15.0" fill="rgb(232,30,11)" rx="2" ry="2" />
<text  x="92.91" y="1759.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (2 samples, 0.01%)</title><rect x="755.7" y="2021" width="0.1" height="15.0" fill="rgb(224,110,34)" rx="2" ry="2" />
<text  x="758.72" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (79 samples, 0.42%)</title><rect x="168.2" y="1717" width="5.0" height="15.0" fill="rgb(215,221,27)" rx="2" ry="2" />
<text  x="171.18" y="1727.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (2 samples, 0.01%)</title><rect x="751.6" y="1861" width="0.1" height="15.0" fill="rgb(227,3,54)" rx="2" ry="2" />
<text  x="754.62" y="1871.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.25] (2 samples, 0.01%)</title><rect x="26.6" y="2037" width="0.1" height="15.0" fill="rgb(239,172,39)" rx="2" ry="2" />
<text  x="29.60" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (328 samples, 1.75%)</title><rect x="55.6" y="469" width="20.7" height="15.0" fill="rgb(218,171,1)" rx="2" ry="2" />
<text  x="58.57" y="479.5" ></text>
</g>
<g >
<title>arch_tlb_finish_mmu (2 samples, 0.01%)</title><rect x="82.0" y="1317" width="0.1" height="15.0" fill="rgb(215,200,11)" rx="2" ry="2" />
<text  x="84.96" y="1327.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::Unwind (3 samples, 0.02%)</title><rect x="193.0" y="1557" width="0.2" height="15.0" fill="rgb(251,156,33)" rx="2" ry="2" />
<text  x="195.99" y="1567.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (2 samples, 0.01%)</title><rect x="87.8" y="1685" width="0.1" height="15.0" fill="rgb(228,209,0)" rx="2" ry="2" />
<text  x="90.77" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (342 samples, 1.83%)</title><rect x="189.5" y="1797" width="21.5" height="15.0" fill="rgb(235,193,53)" rx="2" ry="2" />
<text  x="192.46" y="1807.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.9" y="149" width="0.1" height="15.0" fill="rgb(227,119,39)" rx="2" ry="2" />
<text  x="1190.85" y="159.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (2 samples, 0.01%)</title><rect x="175.3" y="1589" width="0.1" height="15.0" fill="rgb(251,115,1)" rx="2" ry="2" />
<text  x="178.32" y="1599.5" ></text>
</g>
<g >
<title>wake_up_q (6 samples, 0.03%)</title><rect x="27.4" y="1909" width="0.4" height="15.0" fill="rgb(249,136,21)" rx="2" ry="2" />
<text  x="30.42" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (58 samples, 0.31%)</title><rect x="183.8" y="1749" width="3.6" height="15.0" fill="rgb(223,13,48)" rx="2" ry="2" />
<text  x="186.77" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (6 samples, 0.03%)</title><rect x="155.9" y="1749" width="0.4" height="15.0" fill="rgb(252,181,5)" rx="2" ry="2" />
<text  x="158.94" y="1759.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.01%)</title><rect x="142.7" y="1589" width="0.1" height="15.0" fill="rgb(216,20,11)" rx="2" ry="2" />
<text  x="145.68" y="1599.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::getLine (178 samples, 0.95%)</title><rect x="509.3" y="1925" width="11.2" height="15.0" fill="rgb(226,107,39)" rx="2" ry="2" />
<text  x="512.29" y="1935.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (3 samples, 0.02%)</title><rect x="1096.0" y="1877" width="0.2" height="15.0" fill="rgb(226,17,3)" rx="2" ry="2" />
<text  x="1099.01" y="1887.5" ></text>
</g>
<g >
<title>onmt::unicode::is_letter (8 samples, 0.04%)</title><rect x="720.0" y="1893" width="0.5" height="15.0" fill="rgb(211,139,0)" rx="2" ry="2" />
<text  x="722.99" y="1903.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (3 samples, 0.02%)</title><rect x="88.1" y="1861" width="0.2" height="15.0" fill="rgb(212,173,16)" rx="2" ry="2" />
<text  x="91.14" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="188.3" y="1893" width="0.1" height="15.0" fill="rgb(213,173,43)" rx="2" ry="2" />
<text  x="191.26" y="1903.5" ></text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::scan (7 samples, 0.04%)</title><rect x="123.2" y="1941" width="0.4" height="15.0" fill="rgb(205,15,35)" rx="2" ry="2" />
<text  x="126.18" y="1951.5" ></text>
</g>
<g >
<title>__handle_mm_fault (4 samples, 0.02%)</title><rect x="714.7" y="1813" width="0.2" height="15.0" fill="rgb(245,213,26)" rx="2" ry="2" />
<text  x="717.69" y="1823.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find (8 samples, 0.04%)</title><rect x="739.8" y="1909" width="0.5" height="15.0" fill="rgb(234,217,11)" rx="2" ry="2" />
<text  x="742.81" y="1919.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&gt;::GetFromAllocator (3 samples, 0.02%)</title><rect x="1010.5" y="2053" width="0.2" height="15.0" fill="rgb(220,184,34)" rx="2" ry="2" />
<text  x="1013.54" y="2063.5" ></text>
</g>
<g >
<title>__asan::asan_memalign (39 samples, 0.21%)</title><rect x="978.2" y="2053" width="2.5" height="15.0" fill="rgb(224,221,25)" rx="2" ry="2" />
<text  x="981.23" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (53 samples, 0.28%)</title><rect x="183.9" y="1685" width="3.3" height="15.0" fill="rgb(209,181,35)" rx="2" ry="2" />
<text  x="186.90" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1188.0" y="901" width="0.2" height="15.0" fill="rgb(254,196,33)" rx="2" ry="2" />
<text  x="1191.04" y="911.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (2 samples, 0.01%)</title><rect x="741.1" y="1957" width="0.1" height="15.0" fill="rgb(220,20,34)" rx="2" ry="2" />
<text  x="744.08" y="1967.5" ></text>
</g>
<g >
<title>mmput (5 samples, 0.03%)</title><rect x="1095.9" y="1973" width="0.3" height="15.0" fill="rgb(238,176,0)" rx="2" ry="2" />
<text  x="1098.89" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="162.8" y="1221" width="0.1" height="15.0" fill="rgb(218,0,41)" rx="2" ry="2" />
<text  x="165.75" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1187.3" y="741" width="0.3" height="15.0" fill="rgb(243,132,50)" rx="2" ry="2" />
<text  x="1190.29" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1187.9" y="741" width="0.1" height="15.0" fill="rgb(241,142,50)" rx="2" ry="2" />
<text  x="1190.85" y="751.5" ></text>
</g>
<g >
<title>fasttext::Loss::predict (2 samples, 0.01%)</title><rect x="1096.6" y="2053" width="0.2" height="15.0" fill="rgb(218,169,15)" rx="2" ry="2" />
<text  x="1099.64" y="2063.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (4 samples, 0.02%)</title><rect x="134.8" y="1557" width="0.2" height="15.0" fill="rgb(223,189,44)" rx="2" ry="2" />
<text  x="137.79" y="1567.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (12 samples, 0.06%)</title><rect x="25.0" y="1957" width="0.7" height="15.0" fill="rgb(231,199,38)" rx="2" ry="2" />
<text  x="27.96" y="1967.5" ></text>
</g>
<g >
<title>Eigen::internal::gebp_kernel&lt;float, float, long, Eigen::internal::blas_data_mapper&lt;float, long, 0, 0, 1&gt;, 8, 4, false, false&gt;::operator (130 samples, 0.70%)</title><rect x="483.3" y="1909" width="8.2" height="15.0" fill="rgb(218,73,54)" rx="2" ry="2" />
<text  x="486.29" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (389 samples, 2.08%)</title><rect x="163.6" y="1893" width="24.5" height="15.0" fill="rgb(237,87,48)" rx="2" ry="2" />
<text  x="166.58" y="1903.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (16 samples, 0.09%)</title><rect x="1187.0" y="2053" width="1.0" height="15.0" fill="rgb(236,137,32)" rx="2" ry="2" />
<text  x="1190.03" y="2063.5" ></text>
</g>
<g >
<title>Eigen::internal::generic_product_impl&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt;, Eigen::DenseShape, Eigen::DenseShape, 8&gt;::scaleAndAddTo&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt; (131 samples, 0.70%)</title><rect x="483.3" y="1941" width="8.3" height="15.0" fill="rgb(249,108,20)" rx="2" ry="2" />
<text  x="486.29" y="1951.5" ></text>
</g>
<g >
<title>__dynamic_cast (4 samples, 0.02%)</title><rect x="170.6" y="1573" width="0.3" height="15.0" fill="rgb(219,59,29)" rx="2" ry="2" />
<text  x="173.65" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (485 samples, 2.59%)</title><rect x="55.5" y="1717" width="30.6" height="15.0" fill="rgb(243,113,8)" rx="2" ry="2" />
<text  x="58.51" y="1727.5" >[u..</text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (6 samples, 0.03%)</title><rect x="204.5" y="1605" width="0.4" height="15.0" fill="rgb(252,225,23)" rx="2" ry="2" />
<text  x="207.54" y="1615.5" ></text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (2 samples, 0.01%)</title><rect x="24.6" y="1957" width="0.2" height="15.0" fill="rgb(216,181,48)" rx="2" ry="2" />
<text  x="27.64" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (5 samples, 0.03%)</title><rect x="860.7" y="2037" width="0.3" height="15.0" fill="rgb(224,180,51)" rx="2" ry="2" />
<text  x="863.69" y="2047.5" ></text>
</g>
<g >
<title>__do_page_fault (17 samples, 0.09%)</title><rect x="747.8" y="1989" width="1.0" height="15.0" fill="rgb(222,149,22)" rx="2" ry="2" />
<text  x="750.77" y="1999.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (8 samples, 0.04%)</title><rect x="25.2" y="1941" width="0.5" height="15.0" fill="rgb(211,119,0)" rx="2" ry="2" />
<text  x="28.21" y="1951.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (16 samples, 0.09%)</title><rect x="1143.4" y="2037" width="1.0" height="15.0" fill="rgb(215,107,26)" rx="2" ry="2" />
<text  x="1146.35" y="2047.5" ></text>
</g>
<g >
<title>alloc_pages_vma (18 samples, 0.10%)</title><rect x="23.5" y="1957" width="1.1" height="15.0" fill="rgb(250,203,19)" rx="2" ry="2" />
<text  x="26.51" y="1967.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (7 samples, 0.04%)</title><rect x="571.0" y="1877" width="0.4" height="15.0" fill="rgb(234,171,43)" rx="2" ry="2" />
<text  x="573.96" y="1887.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="79.3" y="1237" width="0.1" height="15.0" fill="rgb(231,30,34)" rx="2" ry="2" />
<text  x="82.31" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (89 samples, 0.48%)</title><rect x="138.8" y="1701" width="5.6" height="15.0" fill="rgb(211,45,45)" rx="2" ry="2" />
<text  x="141.83" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (77 samples, 0.41%)</title><rect x="168.2" y="1637" width="4.9" height="15.0" fill="rgb(225,26,33)" rx="2" ry="2" />
<text  x="171.25" y="1647.5" ></text>
</g>
<g >
<title>do_page_fault (17 samples, 0.09%)</title><rect x="629.8" y="1845" width="1.1" height="15.0" fill="rgb(231,150,3)" rx="2" ry="2" />
<text  x="632.79" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (4 samples, 0.02%)</title><rect x="161.9" y="1845" width="0.2" height="15.0" fill="rgb(242,210,49)" rx="2" ry="2" />
<text  x="164.87" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="162.4" y="1605" width="0.2" height="15.0" fill="rgb(244,147,18)" rx="2" ry="2" />
<text  x="165.44" y="1615.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (4 samples, 0.02%)</title><rect x="180.3" y="1621" width="0.3" height="15.0" fill="rgb(240,199,24)" rx="2" ry="2" />
<text  x="183.30" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1187.3" y="1045" width="0.3" height="15.0" fill="rgb(211,206,31)" rx="2" ry="2" />
<text  x="1190.29" y="1055.5" ></text>
</g>
<g >
<title>__interceptor_memcmp (3 samples, 0.02%)</title><rect x="314.8" y="1941" width="0.1" height="15.0" fill="rgb(226,9,15)" rx="2" ry="2" />
<text  x="317.75" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.0" y="2037" width="0.2" height="15.0" fill="rgb(218,193,9)" rx="2" ry="2" />
<text  x="1191.04" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.7" y="1621" width="0.3" height="15.0" fill="rgb(234,106,4)" rx="2" ry="2" />
<text  x="1190.66" y="1631.5" ></text>
</g>
<g >
<title>__sanitizer::mem_is_zero (3 samples, 0.02%)</title><rect x="478.3" y="1941" width="0.2" height="15.0" fill="rgb(250,116,45)" rx="2" ry="2" />
<text  x="481.30" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="162.4" y="1637" width="0.2" height="15.0" fill="rgb(239,188,45)" rx="2" ry="2" />
<text  x="165.44" y="1647.5" ></text>
</g>
<g >
<title>generic_exec_single (2 samples, 0.01%)</title><rect x="505.2" y="1813" width="0.1" height="15.0" fill="rgb(205,101,39)" rx="2" ry="2" />
<text  x="508.19" y="1823.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="87.8" y="1813" width="0.1" height="15.0" fill="rgb(236,21,13)" rx="2" ry="2" />
<text  x="90.77" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (336 samples, 1.80%)</title><rect x="55.6" y="741" width="21.2" height="15.0" fill="rgb(229,16,52)" rx="2" ry="2" />
<text  x="58.57" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1187.2" y="1973" width="0.4" height="15.0" fill="rgb(221,72,37)" rx="2" ry="2" />
<text  x="1190.22" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1187.3" y="853" width="0.3" height="15.0" fill="rgb(225,131,23)" rx="2" ry="2" />
<text  x="1190.29" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1187.3" y="1509" width="0.3" height="15.0" fill="rgb(212,22,51)" rx="2" ry="2" />
<text  x="1190.29" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.0" y="1445" width="0.2" height="15.0" fill="rgb(213,205,27)" rx="2" ry="2" />
<text  x="1191.04" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="162.8" y="1157" width="0.1" height="15.0" fill="rgb(219,91,17)" rx="2" ry="2" />
<text  x="165.75" y="1167.5" ></text>
</g>
<g >
<title>do_syscall_64 (5 samples, 0.03%)</title><rect x="1095.9" y="2037" width="0.3" height="15.0" fill="rgb(251,27,3)" rx="2" ry="2" />
<text  x="1098.89" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (101 samples, 0.54%)</title><rect x="132.4" y="1685" width="6.4" height="15.0" fill="rgb(240,112,54)" rx="2" ry="2" />
<text  x="135.39" y="1695.5" ></text>
</g>
<g >
<title>std::__create_task_state&lt;boost::optional&lt;TDocument&gt;  (2 samples, 0.01%)</title><rect x="130.8" y="1989" width="0.1" height="15.0" fill="rgb(209,119,31)" rx="2" ry="2" />
<text  x="133.82" y="1999.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (2 samples, 0.01%)</title><rect x="155.4" y="1637" width="0.2" height="15.0" fill="rgb(229,135,36)" rx="2" ry="2" />
<text  x="158.43" y="1647.5" ></text>
</g>
<g >
<title>__vm_munmap (2 samples, 0.01%)</title><rect x="86.8" y="1701" width="0.1" height="15.0" fill="rgb(229,133,5)" rx="2" ry="2" />
<text  x="89.82" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (486 samples, 2.60%)</title><rect x="55.5" y="1733" width="30.7" height="15.0" fill="rgb(237,109,15)" rx="2" ry="2" />
<text  x="58.51" y="1743.5" >[u..</text>
</g>
<g >
<title>operator delete (4 samples, 0.02%)</title><rect x="198.7" y="1589" width="0.3" height="15.0" fill="rgb(238,204,22)" rx="2" ry="2" />
<text  x="201.73" y="1599.5" ></text>
</g>
<g >
<title>Eigen::PlainObjectBase&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; &gt;::resize (4 samples, 0.02%)</title><rect x="43.1" y="2037" width="0.3" height="15.0" fill="rgb(231,44,52)" rx="2" ry="2" />
<text  x="46.14" y="2047.5" ></text>
</g>
<g >
<title>__asan::AsanThread::stack_bottom (3 samples, 0.02%)</title><rect x="213.3" y="1669" width="0.1" height="15.0" fill="rgb(223,122,7)" rx="2" ry="2" />
<text  x="216.25" y="1679.5" ></text>
</g>
<g >
<title>strcmp@plt (4 samples, 0.02%)</title><rect x="42.6" y="2037" width="0.2" height="15.0" fill="rgb(215,200,39)" rx="2" ry="2" />
<text  x="45.57" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.2" y="2005" width="0.4" height="15.0" fill="rgb(205,33,7)" rx="2" ry="2" />
<text  x="1190.22" y="2015.5" ></text>
</g>
<g >
<title>std::vector&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::allocator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;::vector (3 samples, 0.02%)</title><rect x="501.5" y="1861" width="0.2" height="15.0" fill="rgb(238,19,13)" rx="2" ry="2" />
<text  x="504.53" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.05%)</title><rect x="162.4" y="1893" width="0.6" height="15.0" fill="rgb(238,55,18)" rx="2" ry="2" />
<text  x="165.44" y="1903.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::_Bind&lt;Annotate (3,687 samples, 19.72%)</title><rect x="508.8" y="1989" width="232.7" height="15.0" fill="rgb(245,47,39)" rx="2" ry="2" />
<text  x="511.79" y="1999.5" >std::__invoke&lt;std::_Bind&lt;Annot..</text>
</g>
<g >
<title>[unknown] (324 samples, 1.73%)</title><rect x="55.6" y="277" width="20.4" height="15.0" fill="rgb(248,172,14)" rx="2" ry="2" />
<text  x="58.57" y="287.5" ></text>
</g>
<g >
<title>__interceptor_strlen (10 samples, 0.05%)</title><rect x="554.5" y="1893" width="0.6" height="15.0" fill="rgb(220,167,49)" rx="2" ry="2" />
<text  x="557.49" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (2 samples, 0.01%)</title><rect x="216.1" y="1813" width="0.1" height="15.0" fill="rgb(250,47,23)" rx="2" ry="2" />
<text  x="219.09" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="162.7" y="1525" width="0.2" height="15.0" fill="rgb(246,153,41)" rx="2" ry="2" />
<text  x="165.69" y="1535.5" ></text>
</g>
<g >
<title>pmd_page_vaddr (2 samples, 0.01%)</title><rect x="493.5" y="1893" width="0.1" height="15.0" fill="rgb(205,66,5)" rx="2" ry="2" />
<text  x="496.45" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.7" y="1685" width="0.3" height="15.0" fill="rgb(222,36,51)" rx="2" ry="2" />
<text  x="1190.66" y="1695.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (14 samples, 0.07%)</title><rect x="1177.5" y="2037" width="0.9" height="15.0" fill="rgb(243,129,33)" rx="2" ry="2" />
<text  x="1180.50" y="2047.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (3 samples, 0.02%)</title><rect x="462.5" y="1925" width="0.2" height="15.0" fill="rgb(213,126,42)" rx="2" ry="2" />
<text  x="465.52" y="1935.5" ></text>
</g>
<g >
<title>__dynamic_cast (4 samples, 0.02%)</title><rect x="185.5" y="1653" width="0.2" height="15.0" fill="rgb(240,127,29)" rx="2" ry="2" />
<text  x="188.48" y="1663.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (2 samples, 0.01%)</title><rect x="91.2" y="2005" width="0.1" height="15.0" fill="rgb(243,77,1)" rx="2" ry="2" />
<text  x="94.17" y="2015.5" ></text>
</g>
<g >
<title>__vm_munmap (2 samples, 0.01%)</title><rect x="87.8" y="1765" width="0.1" height="15.0" fill="rgb(239,115,20)" rx="2" ry="2" />
<text  x="90.77" y="1775.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (11 samples, 0.06%)</title><rect x="469.6" y="1925" width="0.7" height="15.0" fill="rgb(216,192,45)" rx="2" ry="2" />
<text  x="472.59" y="1935.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (16 samples, 0.09%)</title><rect x="567.9" y="1877" width="1.0" height="15.0" fill="rgb(232,188,13)" rx="2" ry="2" />
<text  x="570.93" y="1887.5" ></text>
</g>
<g >
<title>try_charge (3 samples, 0.02%)</title><rect x="634.5" y="1749" width="0.2" height="15.0" fill="rgb(243,111,12)" rx="2" ry="2" />
<text  x="637.53" y="1759.5" ></text>
</g>
<g >
<title>on_each_cpu_mask (17 samples, 0.09%)</title><rect x="928.7" y="1861" width="1.1" height="15.0" fill="rgb(206,190,42)" rx="2" ry="2" />
<text  x="931.74" y="1871.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (8 samples, 0.04%)</title><rect x="137.4" y="1557" width="0.5" height="15.0" fill="rgb(225,50,35)" rx="2" ry="2" />
<text  x="140.44" y="1567.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_range_insert&lt;__gnu_cxx::__normal_iterator&lt;int const*, std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt; (2 samples, 0.01%)</title><rect x="863.5" y="2037" width="0.1" height="15.0" fill="rgb(230,127,39)" rx="2" ry="2" />
<text  x="866.47" y="2047.5" ></text>
</g>
<g >
<title>ptep_clear_flush (5 samples, 0.03%)</title><rect x="55.1" y="1909" width="0.3" height="15.0" fill="rgb(241,120,41)" rx="2" ry="2" />
<text  x="58.07" y="1919.5" ></text>
</g>
<g >
<title>tlb_flush_mmu_free (2 samples, 0.01%)</title><rect x="1095.1" y="1845" width="0.2" height="15.0" fill="rgb(205,228,40)" rx="2" ry="2" />
<text  x="1098.13" y="1855.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (2 samples, 0.01%)</title><rect x="121.0" y="1861" width="0.2" height="15.0" fill="rgb(206,152,6)" rx="2" ry="2" />
<text  x="124.03" y="1871.5" ></text>
</g>
<g >
<title>lru_add_drain_cpu (2 samples, 0.01%)</title><rect x="751.2" y="1861" width="0.2" height="15.0" fill="rgb(236,193,24)" rx="2" ry="2" />
<text  x="754.24" y="1871.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (3 samples, 0.02%)</title><rect x="1096.4" y="1925" width="0.2" height="15.0" fill="rgb(241,108,52)" rx="2" ry="2" />
<text  x="1099.39" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="217.4" y="1765" width="0.2" height="15.0" fill="rgb(238,220,32)" rx="2" ry="2" />
<text  x="220.36" y="1775.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (248 samples, 1.33%)</title><rect x="722.0" y="1893" width="15.6" height="15.0" fill="rgb(251,134,49)" rx="2" ry="2" />
<text  x="724.95" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (348 samples, 1.86%)</title><rect x="55.6" y="1125" width="21.9" height="15.0" fill="rgb(212,196,53)" rx="2" ry="2" />
<text  x="58.57" y="1135.5" >[..</text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (16 samples, 0.09%)</title><rect x="1175.3" y="2037" width="1.0" height="15.0" fill="rgb(243,48,33)" rx="2" ry="2" />
<text  x="1178.29" y="2047.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (2 samples, 0.01%)</title><rect x="194.2" y="1557" width="0.1" height="15.0" fill="rgb(245,47,36)" rx="2" ry="2" />
<text  x="197.19" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.9" y="1141" width="0.1" height="15.0" fill="rgb(254,202,10)" rx="2" ry="2" />
<text  x="1190.85" y="1151.5" ></text>
</g>
<g >
<title>onmt::unicode::is_number (18 samples, 0.10%)</title><rect x="706.7" y="1877" width="1.2" height="15.0" fill="rgb(230,15,24)" rx="2" ry="2" />
<text  x="709.74" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1187.3" y="229" width="0.3" height="15.0" fill="rgb(230,210,51)" rx="2" ry="2" />
<text  x="1190.29" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (2 samples, 0.01%)</title><rect x="216.5" y="1797" width="0.1" height="15.0" fill="rgb(252,157,21)" rx="2" ry="2" />
<text  x="219.47" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.2" y="1861" width="0.4" height="15.0" fill="rgb(208,59,6)" rx="2" ry="2" />
<text  x="1190.22" y="1871.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt; &gt;::_M_manager (2 samples, 0.01%)</title><rect x="164.0" y="1621" width="0.1" height="15.0" fill="rgb(236,202,39)" rx="2" ry="2" />
<text  x="166.95" y="1631.5" ></text>
</g>
<g >
<title>__asan::AsanThread::stack_bottom (2 samples, 0.01%)</title><rect x="309.6" y="1957" width="0.1" height="15.0" fill="rgb(250,212,10)" rx="2" ry="2" />
<text  x="312.58" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.0" y="1749" width="0.2" height="15.0" fill="rgb(216,52,43)" rx="2" ry="2" />
<text  x="1191.04" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1187.3" y="245" width="0.3" height="15.0" fill="rgb(234,186,39)" rx="2" ry="2" />
<text  x="1190.29" y="255.5" ></text>
</g>
<g >
<title>[unknown] (393 samples, 2.10%)</title><rect x="55.5" y="1317" width="24.8" height="15.0" fill="rgb(231,167,6)" rx="2" ry="2" />
<text  x="58.51" y="1327.5" >[..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="188.3" y="1717" width="0.1" height="15.0" fill="rgb(234,68,45)" rx="2" ry="2" />
<text  x="191.26" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.9" y="901" width="0.1" height="15.0" fill="rgb(254,228,10)" rx="2" ry="2" />
<text  x="1190.85" y="911.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.02%)</title><rect x="121.0" y="2021" width="0.2" height="15.0" fill="rgb(231,114,8)" rx="2" ry="2" />
<text  x="123.97" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.9" y="229" width="0.1" height="15.0" fill="rgb(241,77,46)" rx="2" ry="2" />
<text  x="1190.85" y="239.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (4 samples, 0.02%)</title><rect x="1117.3" y="2037" width="0.2" height="15.0" fill="rgb(254,143,20)" rx="2" ry="2" />
<text  x="1120.28" y="2047.5" ></text>
</g>
<g >
<title>native_flush_tlb_others (5 samples, 0.03%)</title><rect x="55.1" y="1877" width="0.3" height="15.0" fill="rgb(254,23,10)" rx="2" ry="2" />
<text  x="58.07" y="1887.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (3 samples, 0.02%)</title><rect x="149.6" y="1621" width="0.2" height="15.0" fill="rgb(225,204,46)" rx="2" ry="2" />
<text  x="152.63" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="188.3" y="1509" width="0.1" height="15.0" fill="rgb(235,60,42)" rx="2" ry="2" />
<text  x="191.32" y="1519.5" ></text>
</g>
<g >
<title>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::dump (3 samples, 0.02%)</title><rect x="500.5" y="1989" width="0.2" height="15.0" fill="rgb(219,3,27)" rx="2" ry="2" />
<text  x="503.52" y="1999.5" ></text>
</g>
<g >
<title>on_each_cpu_mask (2 samples, 0.01%)</title><rect x="89.9" y="1733" width="0.1" height="15.0" fill="rgb(212,214,45)" rx="2" ry="2" />
<text  x="92.91" y="1743.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (3 samples, 0.02%)</title><rect x="199.8" y="1589" width="0.2" height="15.0" fill="rgb(232,126,29)" rx="2" ry="2" />
<text  x="202.81" y="1599.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (3 samples, 0.02%)</title><rect x="752.4" y="2005" width="0.2" height="15.0" fill="rgb(251,15,24)" rx="2" ry="2" />
<text  x="755.38" y="2015.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="633.9" y="1861" width="0.1" height="15.0" fill="rgb(208,1,0)" rx="2" ry="2" />
<text  x="636.90" y="1871.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (2 samples, 0.01%)</title><rect x="84.0" y="1461" width="0.1" height="15.0" fill="rgb(221,73,47)" rx="2" ry="2" />
<text  x="86.98" y="1471.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (3 samples, 0.02%)</title><rect x="660.5" y="1749" width="0.2" height="15.0" fill="rgb(247,63,24)" rx="2" ry="2" />
<text  x="663.53" y="1759.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (2 samples, 0.01%)</title><rect x="630.2" y="1765" width="0.1" height="15.0" fill="rgb(245,176,40)" rx="2" ry="2" />
<text  x="633.17" y="1775.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (3 samples, 0.02%)</title><rect x="313.1" y="1941" width="0.2" height="15.0" fill="rgb(212,152,19)" rx="2" ry="2" />
<text  x="316.11" y="1951.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::readWord (8 samples, 0.04%)</title><rect x="520.5" y="1925" width="0.5" height="15.0" fill="rgb(248,101,54)" rx="2" ry="2" />
<text  x="523.53" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.02%)</title><rect x="162.7" y="1557" width="0.2" height="15.0" fill="rgb(237,107,39)" rx="2" ry="2" />
<text  x="165.69" y="1567.5" ></text>
</g>
<g >
<title>__vma_adjust (2 samples, 0.01%)</title><rect x="1094.7" y="1893" width="0.1" height="15.0" fill="rgb(248,16,7)" rx="2" ry="2" />
<text  x="1097.69" y="1903.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (2 samples, 0.01%)</title><rect x="175.6" y="1589" width="0.1" height="15.0" fill="rgb(234,8,0)" rx="2" ry="2" />
<text  x="178.57" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (416 samples, 2.23%)</title><rect x="55.5" y="1429" width="26.3" height="15.0" fill="rgb(218,82,20)" rx="2" ry="2" />
<text  x="58.51" y="1439.5" >[..</text>
</g>
<g >
<title>operator delete (3 samples, 0.02%)</title><rect x="181.8" y="1621" width="0.2" height="15.0" fill="rgb(226,140,22)" rx="2" ry="2" />
<text  x="184.82" y="1631.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.01%)</title><rect x="173.8" y="1621" width="0.1" height="15.0" fill="rgb(241,13,39)" rx="2" ry="2" />
<text  x="176.80" y="1631.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::basic_json (3 samples, 0.02%)</title><rect x="501.5" y="1701" width="0.2" height="15.0" fill="rgb(249,173,48)" rx="2" ry="2" />
<text  x="504.53" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (87 samples, 0.47%)</title><rect x="139.0" y="1637" width="5.4" height="15.0" fill="rgb(228,151,14)" rx="2" ry="2" />
<text  x="141.96" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.9" y="101" width="0.1" height="15.0" fill="rgb(243,132,53)" rx="2" ry="2" />
<text  x="1190.85" y="111.5" ></text>
</g>
<g >
<title>Summarize (2,213 samples, 11.84%)</title><rect x="188.8" y="2005" width="139.6" height="15.0" fill="rgb(225,67,34)" rx="2" ry="2" />
<text  x="191.76" y="2015.5" >Summarize</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (101 samples, 0.54%)</title><rect x="132.4" y="1637" width="6.4" height="15.0" fill="rgb(239,56,33)" rx="2" ry="2" />
<text  x="135.39" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1187.3" y="149" width="0.3" height="15.0" fill="rgb(245,213,25)" rx="2" ry="2" />
<text  x="1190.29" y="159.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="187.0" y="1653" width="0.1" height="15.0" fill="rgb(250,117,21)" rx="2" ry="2" />
<text  x="189.99" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (377 samples, 2.02%)</title><rect x="55.5" y="1237" width="23.8" height="15.0" fill="rgb(213,136,37)" rx="2" ry="2" />
<text  x="58.51" y="1247.5" >[..</text>
</g>
<g >
<title>[unknown] (328 samples, 1.75%)</title><rect x="55.6" y="453" width="20.7" height="15.0" fill="rgb(230,129,17)" rx="2" ry="2" />
<text  x="58.57" y="463.5" ></text>
</g>
<g >
<title>clear_page_erms (2 samples, 0.01%)</title><rect x="552.5" y="1765" width="0.1" height="15.0" fill="rgb(223,217,32)" rx="2" ry="2" />
<text  x="555.47" y="1775.5" ></text>
</g>
<g >
<title>__asan::AsanTSDGet (2 samples, 0.01%)</title><rect x="165.8" y="1541" width="0.2" height="15.0" fill="rgb(226,44,51)" rx="2" ry="2" />
<text  x="168.85" y="1551.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (2 samples, 0.01%)</title><rect x="1012.3" y="1941" width="0.1" height="15.0" fill="rgb(235,105,43)" rx="2" ry="2" />
<text  x="1015.31" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_BracketMatcher (2 samples, 0.01%)</title><rect x="860.6" y="2037" width="0.1" height="15.0" fill="rgb(248,127,17)" rx="2" ry="2" />
<text  x="863.57" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1187.3" y="757" width="0.3" height="15.0" fill="rgb(222,33,15)" rx="2" ry="2" />
<text  x="1190.29" y="767.5" ></text>
</g>
<g >
<title>native_write_msr (14 samples, 0.07%)</title><rect x="928.9" y="1765" width="0.9" height="15.0" fill="rgb(208,124,16)" rx="2" ry="2" />
<text  x="931.93" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1187.3" y="965" width="0.3" height="15.0" fill="rgb(223,61,17)" rx="2" ry="2" />
<text  x="1190.29" y="975.5" ></text>
</g>
<g >
<title>unmap_page_range (5 samples, 0.03%)</title><rect x="505.7" y="1941" width="0.3" height="15.0" fill="rgb(252,123,13)" rx="2" ry="2" />
<text  x="508.70" y="1951.5" ></text>
</g>
<g >
<title>__asan::asan_delete (5 samples, 0.03%)</title><rect x="1161.8" y="2037" width="0.4" height="15.0" fill="rgb(224,222,32)" rx="2" ry="2" />
<text  x="1164.85" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="217.4" y="1717" width="0.1" height="15.0" fill="rgb(218,147,53)" rx="2" ry="2" />
<text  x="220.42" y="1727.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (3 samples, 0.02%)</title><rect x="634.5" y="1781" width="0.2" height="15.0" fill="rgb(238,25,20)" rx="2" ry="2" />
<text  x="637.53" y="1791.5" ></text>
</g>
<g >
<title>__lsan::MarkInvalidPCCb (5 samples, 0.03%)</title><rect x="504.4" y="2037" width="0.3" height="15.0" fill="rgb(247,133,47)" rx="2" ry="2" />
<text  x="507.43" y="2047.5" ></text>
</g>
<g >
<title>__sanitizer::StackTrace::GetCurrentPc (3 samples, 0.02%)</title><rect x="1118.0" y="2037" width="0.2" height="15.0" fill="rgb(208,229,30)" rx="2" ry="2" />
<text  x="1120.98" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1188.0" y="1477" width="0.2" height="15.0" fill="rgb(241,199,44)" rx="2" ry="2" />
<text  x="1191.04" y="1487.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (3 samples, 0.02%)</title><rect x="672.7" y="1845" width="0.1" height="15.0" fill="rgb(214,221,33)" rx="2" ry="2" />
<text  x="675.65" y="1855.5" ></text>
</g>
<g >
<title>__asan_memset (37 samples, 0.20%)</title><rect x="662.5" y="1861" width="2.3" height="15.0" fill="rgb(251,88,28)" rx="2" ry="2" />
<text  x="665.49" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.05%)</title><rect x="162.4" y="1941" width="0.6" height="15.0" fill="rgb(205,193,20)" rx="2" ry="2" />
<text  x="165.44" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1187.3" y="213" width="0.3" height="15.0" fill="rgb(229,227,24)" rx="2" ry="2" />
<text  x="1190.29" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1187.3" y="117" width="0.3" height="15.0" fill="rgb(228,121,38)" rx="2" ry="2" />
<text  x="1190.29" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.02%)</title><rect x="162.7" y="1461" width="0.2" height="15.0" fill="rgb(235,49,49)" rx="2" ry="2" />
<text  x="165.69" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.9" y="1205" width="0.1" height="15.0" fill="rgb(229,30,51)" rx="2" ry="2" />
<text  x="1190.85" y="1215.5" ></text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.02%)</title><rect x="192.8" y="1557" width="0.2" height="15.0" fill="rgb(246,225,52)" rx="2" ry="2" />
<text  x="195.80" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="188.3" y="1557" width="0.1" height="15.0" fill="rgb(253,63,54)" rx="2" ry="2" />
<text  x="191.32" y="1567.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::getSubwords (15 samples, 0.08%)</title><rect x="752.9" y="2037" width="0.9" height="15.0" fill="rgb(225,31,10)" rx="2" ry="2" />
<text  x="755.88" y="2047.5" ></text>
</g>
<g >
<title>__sanitizer::internal_munmap (2 samples, 0.01%)</title><rect x="87.8" y="1829" width="0.1" height="15.0" fill="rgb(216,216,5)" rx="2" ry="2" />
<text  x="90.77" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (57 samples, 0.30%)</title><rect x="183.8" y="1701" width="3.6" height="15.0" fill="rgb(205,112,44)" rx="2" ry="2" />
<text  x="186.77" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (341 samples, 1.82%)</title><rect x="55.6" y="1045" width="21.5" height="15.0" fill="rgb(243,134,49)" rx="2" ry="2" />
<text  x="58.57" y="1055.5" >[..</text>
</g>
<g >
<title>[unknown] (436 samples, 2.33%)</title><rect x="55.5" y="1509" width="27.5" height="15.0" fill="rgb(249,164,27)" rx="2" ry="2" />
<text  x="58.51" y="1519.5" >[..</text>
</g>
<g >
<title>on_each_cpu_cond_mask (5 samples, 0.03%)</title><rect x="55.1" y="1861" width="0.3" height="15.0" fill="rgb(227,53,34)" rx="2" ry="2" />
<text  x="58.07" y="1871.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (2 samples, 0.01%)</title><rect x="748.7" y="1925" width="0.1" height="15.0" fill="rgb(252,43,26)" rx="2" ry="2" />
<text  x="751.72" y="1935.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (4 samples, 0.02%)</title><rect x="86.3" y="1749" width="0.2" height="15.0" fill="rgb(248,108,43)" rx="2" ry="2" />
<text  x="89.25" y="1759.5" ></text>
</g>
<g >
<title>smp_call_function_many (2 samples, 0.01%)</title><rect x="505.2" y="1845" width="0.1" height="15.0" fill="rgb(248,153,7)" rx="2" ry="2" />
<text  x="508.19" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.9" y="677" width="0.1" height="15.0" fill="rgb(230,168,22)" rx="2" ry="2" />
<text  x="1190.85" y="687.5" ></text>
</g>
<g >
<title>__lsan::CollectLeaksCb (2 samples, 0.01%)</title><rect x="93.6" y="2021" width="0.1" height="15.0" fill="rgb(236,177,29)" rx="2" ry="2" />
<text  x="96.57" y="2031.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::_M_transform@plt (4 samples, 0.02%)</title><rect x="1145.4" y="2053" width="0.3" height="15.0" fill="rgb(238,2,2)" rx="2" ry="2" />
<text  x="1148.44" y="2063.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="200.5" y="1621" width="0.1" height="15.0" fill="rgb(252,203,40)" rx="2" ry="2" />
<text  x="203.50" y="1631.5" ></text>
</g>
<g >
<title>do_page_fault (5 samples, 0.03%)</title><rect x="1096.3" y="2005" width="0.3" height="15.0" fill="rgb(206,65,3)" rx="2" ry="2" />
<text  x="1099.33" y="2015.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (3 samples, 0.02%)</title><rect x="634.5" y="1765" width="0.2" height="15.0" fill="rgb(250,160,36)" rx="2" ry="2" />
<text  x="637.53" y="1775.5" ></text>
</g>
<g >
<title>fasttext::FastText::loadModel (11 samples, 0.06%)</title><rect x="499.0" y="1989" width="0.7" height="15.0" fill="rgb(232,180,15)" rx="2" ry="2" />
<text  x="502.01" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="162.8" y="1013" width="0.1" height="15.0" fill="rgb(254,160,4)" rx="2" ry="2" />
<text  x="165.82" y="1023.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::Unwind (19 samples, 0.10%)</title><rect x="1176.3" y="2037" width="1.2" height="15.0" fill="rgb(254,146,41)" rx="2" ry="2" />
<text  x="1179.30" y="2047.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (2 samples, 0.01%)</title><rect x="146.8" y="1605" width="0.1" height="15.0" fill="rgb(251,124,25)" rx="2" ry="2" />
<text  x="149.79" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (27 samples, 0.14%)</title><rect x="864.4" y="2021" width="1.7" height="15.0" fill="rgb(248,95,53)" rx="2" ry="2" />
<text  x="867.42" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.9" y="773" width="0.1" height="15.0" fill="rgb(206,187,52)" rx="2" ry="2" />
<text  x="1190.85" y="783.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.02%)</title><rect x="148.8" y="1605" width="0.3" height="15.0" fill="rgb(238,71,48)" rx="2" ry="2" />
<text  x="151.80" y="1615.5" ></text>
</g>
<g >
<title>clear_page_erms (2 samples, 0.01%)</title><rect x="660.0" y="1733" width="0.2" height="15.0" fill="rgb(246,99,39)" rx="2" ry="2" />
<text  x="663.03" y="1743.5" ></text>
</g>
<g >
<title>__lsan::ResetTagsCb (2 samples, 0.01%)</title><rect x="504.7" y="2037" width="0.2" height="15.0" fill="rgb(212,146,52)" rx="2" ry="2" />
<text  x="507.75" y="2047.5" ></text>
</g>
<g >
<title>arch_tlb_finish_mmu (2 samples, 0.01%)</title><rect x="751.6" y="1909" width="0.1" height="15.0" fill="rgb(220,224,43)" rx="2" ry="2" />
<text  x="754.62" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.02%)</title><rect x="791.3" y="2021" width="0.2" height="15.0" fill="rgb(207,23,31)" rx="2" ry="2" />
<text  x="794.32" y="2031.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (53 samples, 0.28%)</title><rect x="146.3" y="1621" width="3.3" height="15.0" fill="rgb(233,81,43)" rx="2" ry="2" />
<text  x="149.28" y="1631.5" ></text>
</g>
<g >
<title>__interceptor_memcmp (20 samples, 0.11%)</title><rect x="988.6" y="2053" width="1.3" height="15.0" fill="rgb(233,152,50)" rx="2" ry="2" />
<text  x="991.64" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="188.3" y="1733" width="0.1" height="15.0" fill="rgb(223,107,36)" rx="2" ry="2" />
<text  x="191.26" y="1743.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (3 samples, 0.02%)</title><rect x="215.5" y="1669" width="0.2" height="15.0" fill="rgb(224,93,39)" rx="2" ry="2" />
<text  x="218.52" y="1679.5" ></text>
</g>
<g >
<title>schedule (8 samples, 0.04%)</title><rect x="131.3" y="1861" width="0.5" height="15.0" fill="rgb(238,178,20)" rx="2" ry="2" />
<text  x="134.26" y="1871.5" ></text>
</g>
<g >
<title>__pthread_getspecific (5 samples, 0.03%)</title><rect x="170.9" y="1573" width="0.3" height="15.0" fill="rgb(234,8,31)" rx="2" ry="2" />
<text  x="173.90" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1187.4" y="53" width="0.2" height="15.0" fill="rgb(216,60,39)" rx="2" ry="2" />
<text  x="1190.41" y="63.5" ></text>
</g>
<g >
<title>__handle_mm_fault (6 samples, 0.03%)</title><rect x="634.4" y="1797" width="0.4" height="15.0" fill="rgb(237,160,22)" rx="2" ry="2" />
<text  x="637.40" y="1807.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="84.3" y="1573" width="0.1" height="15.0" fill="rgb(219,196,8)" rx="2" ry="2" />
<text  x="87.29" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.0" y="917" width="0.2" height="15.0" fill="rgb(249,153,48)" rx="2" ry="2" />
<text  x="1191.04" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.9" y="1157" width="0.1" height="15.0" fill="rgb(235,151,5)" rx="2" ry="2" />
<text  x="1190.85" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="162.8" y="933" width="0.1" height="15.0" fill="rgb(250,98,28)" rx="2" ry="2" />
<text  x="165.82" y="943.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (2 samples, 0.01%)</title><rect x="87.8" y="1717" width="0.1" height="15.0" fill="rgb(246,122,44)" rx="2" ry="2" />
<text  x="90.77" y="1727.5" ></text>
</g>
<g >
<title>__asan_memcpy (8 samples, 0.04%)</title><rect x="569.1" y="1877" width="0.5" height="15.0" fill="rgb(224,129,14)" rx="2" ry="2" />
<text  x="572.07" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (65 samples, 0.35%)</title><rect x="164.1" y="1653" width="4.1" height="15.0" fill="rgb(238,219,30)" rx="2" ry="2" />
<text  x="167.08" y="1663.5" ></text>
</g>
<g >
<title>call_rwsem_wake (3 samples, 0.02%)</title><rect x="751.4" y="1925" width="0.2" height="15.0" fill="rgb(234,130,49)" rx="2" ry="2" />
<text  x="754.43" y="1935.5" ></text>
</g>
<g >
<title>fasttext::FastText::createLoss (11 samples, 0.06%)</title><rect x="499.0" y="1973" width="0.7" height="15.0" fill="rgb(236,129,31)" rx="2" ry="2" />
<text  x="502.01" y="1983.5" ></text>
</g>
<g >
<title>sqrtf32 (2 samples, 0.01%)</title><rect x="327.9" y="1989" width="0.1" height="15.0" fill="rgb(220,144,52)" rx="2" ry="2" />
<text  x="330.88" y="1999.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (3 samples, 0.02%)</title><rect x="148.0" y="1605" width="0.2" height="15.0" fill="rgb(245,48,7)" rx="2" ry="2" />
<text  x="150.98" y="1615.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (2 samples, 0.01%)</title><rect x="84.0" y="1429" width="0.1" height="15.0" fill="rgb(235,20,27)" rx="2" ry="2" />
<text  x="86.98" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.7" y="1637" width="0.3" height="15.0" fill="rgb(248,150,29)" rx="2" ry="2" />
<text  x="1190.66" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1187.3" y="1173" width="0.3" height="15.0" fill="rgb(218,176,41)" rx="2" ry="2" />
<text  x="1190.29" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (2 samples, 0.01%)</title><rect x="187.5" y="1717" width="0.1" height="15.0" fill="rgb(250,100,33)" rx="2" ry="2" />
<text  x="190.50" y="1727.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="82.0" y="1429" width="0.1" height="15.0" fill="rgb(218,56,40)" rx="2" ry="2" />
<text  x="84.96" y="1439.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="84.7" y="1589" width="0.1" height="15.0" fill="rgb(234,207,7)" rx="2" ry="2" />
<text  x="87.67" y="1599.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (46 samples, 0.25%)</title><rect x="174.9" y="1605" width="2.9" height="15.0" fill="rgb(209,229,0)" rx="2" ry="2" />
<text  x="177.94" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.05%)</title><rect x="162.4" y="1829" width="0.6" height="15.0" fill="rgb(219,207,30)" rx="2" ry="2" />
<text  x="165.44" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (316 samples, 1.69%)</title><rect x="55.6" y="53" width="19.9" height="15.0" fill="rgb(231,204,28)" rx="2" ry="2" />
<text  x="58.57" y="63.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (78 samples, 0.42%)</title><rect x="151.0" y="1685" width="4.9" height="15.0" fill="rgb(241,21,8)" rx="2" ry="2" />
<text  x="153.95" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.05%)</title><rect x="162.4" y="1877" width="0.6" height="15.0" fill="rgb(205,134,20)" rx="2" ry="2" />
<text  x="165.44" y="1887.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (4 samples, 0.02%)</title><rect x="750.5" y="1989" width="0.3" height="15.0" fill="rgb(244,206,33)" rx="2" ry="2" />
<text  x="753.55" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.9" y="197" width="0.1" height="15.0" fill="rgb(206,153,9)" rx="2" ry="2" />
<text  x="1190.85" y="207.5" ></text>
</g>
<g >
<title>[unknown] (473 samples, 2.53%)</title><rect x="55.5" y="1669" width="29.9" height="15.0" fill="rgb(238,18,20)" rx="2" ry="2" />
<text  x="58.51" y="1679.5" >[u..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.3" y="37" width="0.1" height="15.0" fill="rgb(238,195,41)" rx="2" ry="2" />
<text  x="1190.29" y="47.5" ></text>
</g>
<g >
<title>__asan::Allocator::Deallocate (2 samples, 0.01%)</title><rect x="184.7" y="1653" width="0.1" height="15.0" fill="rgb(217,72,16)" rx="2" ry="2" />
<text  x="187.66" y="1663.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (54 samples, 0.29%)</title><rect x="1115.5" y="2053" width="3.4" height="15.0" fill="rgb(207,227,37)" rx="2" ry="2" />
<text  x="1118.45" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="162.4" y="1653" width="0.2" height="15.0" fill="rgb(208,95,51)" rx="2" ry="2" />
<text  x="165.44" y="1663.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (869 samples, 4.65%)</title><rect x="805.7" y="2005" width="54.9" height="15.0" fill="rgb(254,115,52)" rx="2" ry="2" />
<text  x="808.71" y="2015.5" >__san..</text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (2 samples, 0.01%)</title><rect x="78.8" y="1189" width="0.1" height="15.0" fill="rgb(252,46,50)" rx="2" ry="2" />
<text  x="81.80" y="1199.5" ></text>
</g>
<g >
<title>[unknown] (343 samples, 1.83%)</title><rect x="55.6" y="1109" width="21.6" height="15.0" fill="rgb(253,12,21)" rx="2" ry="2" />
<text  x="58.57" y="1119.5" >[..</text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (3 samples, 0.02%)</title><rect x="863.6" y="2005" width="0.2" height="15.0" fill="rgb(241,160,10)" rx="2" ry="2" />
<text  x="866.60" y="2015.5" ></text>
</g>
<g >
<title>arch_tlb_finish_mmu (2 samples, 0.01%)</title><rect x="84.0" y="1445" width="0.1" height="15.0" fill="rgb(253,132,34)" rx="2" ry="2" />
<text  x="86.98" y="1455.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (13 samples, 0.07%)</title><rect x="804.9" y="2005" width="0.8" height="15.0" fill="rgb(218,26,5)" rx="2" ry="2" />
<text  x="807.89" y="2015.5" ></text>
</g>
<g >
<title>ComputeClusterWeight (899 samples, 4.81%)</title><rect x="131.8" y="1989" width="56.8" height="15.0" fill="rgb(218,198,44)" rx="2" ry="2" />
<text  x="134.83" y="1999.5" >Comput..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.0" y="1925" width="0.2" height="15.0" fill="rgb(228,147,43)" rx="2" ry="2" />
<text  x="1190.03" y="1935.5" ></text>
</g>
<g >
<title>page_add_new_anon_rmap (2 samples, 0.01%)</title><rect x="25.7" y="1957" width="0.1" height="15.0" fill="rgb(232,154,49)" rx="2" ry="2" />
<text  x="28.72" y="1967.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_stringbuf (24 samples, 0.13%)</title><rect x="799.8" y="2037" width="1.6" height="15.0" fill="rgb(232,71,22)" rx="2" ry="2" />
<text  x="802.84" y="2047.5" ></text>
</g>
<g >
<title>free_unref_page_list (3 samples, 0.02%)</title><rect x="1096.0" y="1845" width="0.2" height="15.0" fill="rgb(228,57,24)" rx="2" ry="2" />
<text  x="1099.01" y="1855.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (3 samples, 0.02%)</title><rect x="185.1" y="1653" width="0.2" height="15.0" fill="rgb(246,6,27)" rx="2" ry="2" />
<text  x="188.10" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1187.3" y="997" width="0.3" height="15.0" fill="rgb(253,174,51)" rx="2" ry="2" />
<text  x="1190.29" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.9" y="1253" width="0.1" height="15.0" fill="rgb(244,35,40)" rx="2" ry="2" />
<text  x="1190.85" y="1263.5" ></text>
</g>
<g >
<title>do_page_fault (4 samples, 0.02%)</title><rect x="104.4" y="2005" width="0.3" height="15.0" fill="rgb(237,139,15)" rx="2" ry="2" />
<text  x="107.43" y="2015.5" ></text>
</g>
<g >
<title>__dynamic_cast (5 samples, 0.03%)</title><rect x="165.2" y="1557" width="0.3" height="15.0" fill="rgb(215,178,48)" rx="2" ry="2" />
<text  x="168.22" y="1567.5" ></text>
</g>
<g >
<title>handle_mm_fault (16 samples, 0.09%)</title><rect x="54.4" y="1973" width="1.0" height="15.0" fill="rgb(216,3,43)" rx="2" ry="2" />
<text  x="57.44" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (403 samples, 2.16%)</title><rect x="55.5" y="1365" width="25.4" height="15.0" fill="rgb(248,5,0)" rx="2" ry="2" />
<text  x="58.51" y="1375.5" >[..</text>
</g>
<g >
<title>arch_tlb_finish_mmu (2 samples, 0.01%)</title><rect x="86.8" y="1637" width="0.1" height="15.0" fill="rgb(214,61,6)" rx="2" ry="2" />
<text  x="89.82" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (5 samples, 0.03%)</title><rect x="183.5" y="1781" width="0.3" height="15.0" fill="rgb(230,224,49)" rx="2" ry="2" />
<text  x="186.46" y="1791.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare@plt (6 samples, 0.03%)</title><rect x="737.6" y="1893" width="0.4" height="15.0" fill="rgb(215,217,15)" rx="2" ry="2" />
<text  x="740.61" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="188.3" y="1813" width="0.1" height="15.0" fill="rgb(227,138,31)" rx="2" ry="2" />
<text  x="191.26" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (336 samples, 1.80%)</title><rect x="55.6" y="789" width="21.2" height="15.0" fill="rgb(221,122,28)" rx="2" ry="2" />
<text  x="58.57" y="799.5" ></text>
</g>
<g >
<title>[unknown] (323 samples, 1.73%)</title><rect x="55.6" y="229" width="20.4" height="15.0" fill="rgb(207,118,18)" rx="2" ry="2" />
<text  x="58.57" y="239.5" ></text>
</g>
<g >
<title>__asan::CanPoisonMemory (12 samples, 0.06%)</title><rect x="954.4" y="2053" width="0.7" height="15.0" fill="rgb(207,107,25)" rx="2" ry="2" />
<text  x="957.37" y="2063.5" ></text>
</g>
<g >
<title>__asan::AsanChunk::UsedSize (46 samples, 0.25%)</title><rect x="110.5" y="2037" width="2.9" height="15.0" fill="rgb(248,90,32)" rx="2" ry="2" />
<text  x="113.49" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.2" y="1909" width="0.4" height="15.0" fill="rgb(232,191,9)" rx="2" ry="2" />
<text  x="1190.22" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="162.4" y="1685" width="0.2" height="15.0" fill="rgb(222,169,29)" rx="2" ry="2" />
<text  x="165.44" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (77 samples, 0.41%)</title><rect x="173.4" y="1669" width="4.9" height="15.0" fill="rgb(224,187,14)" rx="2" ry="2" />
<text  x="176.42" y="1679.5" ></text>
</g>
<g >
<title>handle_mm_fault (3 samples, 0.02%)</title><rect x="1189.4" y="1973" width="0.2" height="15.0" fill="rgb(240,173,48)" rx="2" ry="2" />
<text  x="1192.43" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="162.7" y="1349" width="0.2" height="15.0" fill="rgb(240,223,49)" rx="2" ry="2" />
<text  x="165.69" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.2" y="1621" width="0.4" height="15.0" fill="rgb(241,92,33)" rx="2" ry="2" />
<text  x="1190.22" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (383 samples, 2.05%)</title><rect x="163.6" y="1845" width="24.2" height="15.0" fill="rgb(208,6,22)" rx="2" ry="2" />
<text  x="166.58" y="1855.5" >s..</text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (9 samples, 0.05%)</title><rect x="154.9" y="1637" width="0.5" height="15.0" fill="rgb(234,146,35)" rx="2" ry="2" />
<text  x="157.86" y="1647.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="81.6" y="1413" width="0.1" height="15.0" fill="rgb(216,13,24)" rx="2" ry="2" />
<text  x="84.58" y="1423.5" ></text>
</g>
<g >
<title>onmt::unicode::cp_to_utf8[abi:cxx11] (7 samples, 0.04%)</title><rect x="572.9" y="1877" width="0.5" height="15.0" fill="rgb(243,85,43)" rx="2" ry="2" />
<text  x="575.92" y="1887.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (5 samples, 0.03%)</title><rect x="751.6" y="1989" width="0.3" height="15.0" fill="rgb(218,150,52)" rx="2" ry="2" />
<text  x="754.62" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.04%)</title><rect x="1187.6" y="2037" width="0.4" height="15.0" fill="rgb(209,56,18)" rx="2" ry="2" />
<text  x="1190.60" y="2047.5" ></text>
</g>
<g >
<title>__interceptor_memcpy (37 samples, 0.20%)</title><rect x="1112.3" y="2037" width="2.3" height="15.0" fill="rgb(238,51,34)" rx="2" ry="2" />
<text  x="1115.30" y="2047.5" ></text>
</g>
<g >
<title>__asan::asan_delete (2 samples, 0.01%)</title><rect x="192.4" y="1557" width="0.1" height="15.0" fill="rgb(254,144,37)" rx="2" ry="2" />
<text  x="195.36" y="1567.5" ></text>
</g>
<g >
<title>__sanitizer::BlockingMutex::Unlock (10 samples, 0.05%)</title><rect x="70.7" y="37" width="0.7" height="15.0" fill="rgb(226,45,29)" rx="2" ry="2" />
<text  x="73.72" y="47.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (3 samples, 0.02%)</title><rect x="198.0" y="1589" width="0.2" height="15.0" fill="rgb(234,92,43)" rx="2" ry="2" />
<text  x="200.98" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (62 samples, 0.33%)</title><rect x="791.5" y="2021" width="3.9" height="15.0" fill="rgb(249,130,0)" rx="2" ry="2" />
<text  x="794.51" y="2031.5" ></text>
</g>
<g >
<title>std::__move_merge&lt;__gnu_cxx::__normal_iterator&lt;TDocument*, std::vector&lt;TDocument, std::allocator&lt;TDocument&gt; &gt; &gt;, TDocument*, __gnu_cxx::__ops::_Iter_comp_iter&lt;main::$_1&gt; &gt; (4 samples, 0.02%)</title><rect x="502.1" y="1973" width="0.3" height="15.0" fill="rgb(247,34,9)" rx="2" ry="2" />
<text  x="505.10" y="1983.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;std::__detail::_State&lt;char&gt; const*, std::__detail::_State&lt;char&gt;*&gt; (5 samples, 0.03%)</title><rect x="163.8" y="1637" width="0.3" height="15.0" fill="rgb(250,141,28)" rx="2" ry="2" />
<text  x="166.76" y="1647.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.01%)</title><rect x="167.2" y="1541" width="0.2" height="15.0" fill="rgb(234,91,39)" rx="2" ry="2" />
<text  x="170.24" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.9" y="133" width="0.1" height="15.0" fill="rgb(226,208,44)" rx="2" ry="2" />
<text  x="1190.85" y="143.5" ></text>
</g>
<g >
<title>handle_mm_fault (10 samples, 0.05%)</title><rect x="630.2" y="1813" width="0.6" height="15.0" fill="rgb(223,120,11)" rx="2" ry="2" />
<text  x="633.17" y="1823.5" ></text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.02%)</title><rect x="152.5" y="1653" width="0.2" height="15.0" fill="rgb(244,98,29)" rx="2" ry="2" />
<text  x="155.53" y="1663.5" ></text>
</g>
<g >
<title>RunFasttextClf (387 samples, 2.07%)</title><rect x="521.4" y="1957" width="24.4" height="15.0" fill="rgb(211,77,38)" rx="2" ry="2" />
<text  x="524.41" y="1967.5" >R..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1188.0" y="709" width="0.2" height="15.0" fill="rgb(219,16,14)" rx="2" ry="2" />
<text  x="1191.04" y="719.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.03%)</title><rect x="318.0" y="1941" width="0.4" height="15.0" fill="rgb(238,197,40)" rx="2" ry="2" />
<text  x="321.03" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="162.8" y="1109" width="0.1" height="15.0" fill="rgb(252,76,51)" rx="2" ry="2" />
<text  x="165.75" y="1119.5" ></text>
</g>
<g >
<title>[unknown] (333 samples, 1.78%)</title><rect x="55.6" y="709" width="21.0" height="15.0" fill="rgb(210,208,8)" rx="2" ry="2" />
<text  x="58.57" y="719.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="88.0" y="1813" width="0.1" height="15.0" fill="rgb(234,71,26)" rx="2" ry="2" />
<text  x="91.02" y="1823.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (2 samples, 0.01%)</title><rect x="309.8" y="1957" width="0.1" height="15.0" fill="rgb(227,144,37)" rx="2" ry="2" />
<text  x="312.77" y="1967.5" ></text>
</g>
<g >
<title>__sanitizer::mem_is_zero (2 samples, 0.01%)</title><rect x="1189.6" y="2037" width="0.1" height="15.0" fill="rgb(212,207,25)" rx="2" ry="2" />
<text  x="1192.62" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="217.4" y="1781" width="0.2" height="15.0" fill="rgb(224,53,13)" rx="2" ry="2" />
<text  x="220.36" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (85 samples, 0.45%)</title><rect x="132.8" y="1589" width="5.4" height="15.0" fill="rgb(208,138,20)" rx="2" ry="2" />
<text  x="135.84" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="217.4" y="1733" width="0.1" height="15.0" fill="rgb(206,198,53)" rx="2" ry="2" />
<text  x="220.42" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1188.0" y="1189" width="0.2" height="15.0" fill="rgb(212,129,18)" rx="2" ry="2" />
<text  x="1191.04" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (2 samples, 0.01%)</title><rect x="187.5" y="1733" width="0.1" height="15.0" fill="rgb(226,112,7)" rx="2" ry="2" />
<text  x="190.50" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (322 samples, 1.72%)</title><rect x="55.6" y="149" width="20.3" height="15.0" fill="rgb(223,184,36)" rx="2" ry="2" />
<text  x="58.57" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1188.0" y="1813" width="0.2" height="15.0" fill="rgb(213,199,48)" rx="2" ry="2" />
<text  x="1191.04" y="1823.5" ></text>
</g>
<g >
<title>__sanitizer::StackTrace::GetCurrentPc (2 samples, 0.01%)</title><rect x="1179.5" y="2037" width="0.1" height="15.0" fill="rgb(230,157,14)" rx="2" ry="2" />
<text  x="1182.52" y="2047.5" ></text>
</g>
<g >
<title>__sanitizer::internal_memmove (9 samples, 0.05%)</title><rect x="1189.1" y="2037" width="0.5" height="15.0" fill="rgb(223,122,45)" rx="2" ry="2" />
<text  x="1192.05" y="2047.5" ></text>
</g>
<g >
<title>DetectLanguage[abi:cxx11] (389 samples, 2.08%)</title><rect x="521.4" y="1973" width="24.6" height="15.0" fill="rgb(234,122,33)" rx="2" ry="2" />
<text  x="524.41" y="1983.5" >D..</text>
</g>
<g >
<title>alloc_pages_vma (6 samples, 0.03%)</title><rect x="660.0" y="1765" width="0.4" height="15.0" fill="rgb(213,192,25)" rx="2" ry="2" />
<text  x="663.03" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (395 samples, 2.11%)</title><rect x="55.5" y="1333" width="24.9" height="15.0" fill="rgb(214,127,51)" rx="2" ry="2" />
<text  x="58.51" y="1343.5" >[..</text>
</g>
<g >
<title>[unknown] (509 samples, 2.72%)</title><rect x="55.5" y="1829" width="32.1" height="15.0" fill="rgb(233,19,46)" rx="2" ry="2" />
<text  x="58.51" y="1839.5" >[u..</text>
</g>
<g >
<title>__asan_memcpy (5 samples, 0.03%)</title><rect x="192.5" y="1557" width="0.3" height="15.0" fill="rgb(207,202,40)" rx="2" ry="2" />
<text  x="195.49" y="1567.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThreadStats (36 samples, 0.19%)</title><rect x="957.8" y="2053" width="2.2" height="15.0" fill="rgb(205,67,46)" rx="2" ry="2" />
<text  x="960.77" y="2063.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (2 samples, 0.01%)</title><rect x="130.6" y="1989" width="0.2" height="15.0" fill="rgb(237,153,19)" rx="2" ry="2" />
<text  x="133.63" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1187.3" y="405" width="0.3" height="15.0" fill="rgb(226,187,49)" rx="2" ry="2" />
<text  x="1190.29" y="415.5" ></text>
</g>
<g >
<title>lru_add_drain (2 samples, 0.01%)</title><rect x="751.2" y="1877" width="0.2" height="15.0" fill="rgb(226,229,27)" rx="2" ry="2" />
<text  x="754.24" y="1887.5" ></text>
</g>
<g >
<title>page_fault (17 samples, 0.09%)</title><rect x="629.8" y="1861" width="1.1" height="15.0" fill="rgb(213,172,35)" rx="2" ry="2" />
<text  x="632.79" y="1871.5" ></text>
</g>
<g >
<title>__do_munmap (2 samples, 0.01%)</title><rect x="88.0" y="1765" width="0.1" height="15.0" fill="rgb(217,99,45)" rx="2" ry="2" />
<text  x="91.02" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (328 samples, 1.75%)</title><rect x="55.6" y="405" width="20.7" height="15.0" fill="rgb(239,0,22)" rx="2" ry="2" />
<text  x="58.57" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.03%)</title><rect x="1187.3" y="533" width="0.3" height="15.0" fill="rgb(244,10,3)" rx="2" ry="2" />
<text  x="1190.29" y="543.5" ></text>
</g>
<g >
<title>ksys_read (2 samples, 0.01%)</title><rect x="1104.8" y="1973" width="0.1" height="15.0" fill="rgb(226,102,11)" rx="2" ry="2" />
<text  x="1107.79" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (63 samples, 0.34%)</title><rect x="173.9" y="1621" width="4.0" height="15.0" fill="rgb(239,33,18)" rx="2" ry="2" />
<text  x="176.93" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="162.7" y="1445" width="0.2" height="15.0" fill="rgb(209,200,18)" rx="2" ry="2" />
<text  x="165.69" y="1455.5" ></text>
</g>
<g >
<title>__split_vma (2 samples, 0.01%)</title><rect x="1094.7" y="1909" width="0.1" height="15.0" fill="rgb(244,66,17)" rx="2" ry="2" />
<text  x="1097.69" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="162.7" y="1573" width="0.2" height="15.0" fill="rgb(222,152,41)" rx="2" ry="2" />
<text  x="165.69" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (483 samples, 2.58%)</title><rect x="55.5" y="1701" width="30.5" height="15.0" fill="rgb(245,162,2)" rx="2" ry="2" />
<text  x="58.51" y="1711.5" >[u..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.0" y="677" width="0.2" height="15.0" fill="rgb(235,193,26)" rx="2" ry="2" />
<text  x="1191.04" y="687.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (2 samples, 0.01%)</title><rect x="1095.1" y="1797" width="0.2" height="15.0" fill="rgb(249,122,41)" rx="2" ry="2" />
<text  x="1098.13" y="1807.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (46 samples, 0.25%)</title><rect x="152.7" y="1653" width="2.9" height="15.0" fill="rgb(222,20,41)" rx="2" ry="2" />
<text  x="155.72" y="1663.5" ></text>
</g>
<g >
<title>fasttext::ProductQuantizer::addcode (498 samples, 2.66%)</title><rect x="755.8" y="2037" width="31.5" height="15.0" fill="rgb(208,190,5)" rx="2" ry="2" />
<text  x="758.85" y="2047.5" >fa..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (78 samples, 0.42%)</title><rect x="195.7" y="1733" width="4.9" height="15.0" fill="rgb(236,16,15)" rx="2" ry="2" />
<text  x="198.70" y="1743.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::set (3 samples, 0.02%)</title><rect x="548.0" y="1909" width="0.2" height="15.0" fill="rgb(249,126,23)" rx="2" ry="2" />
<text  x="550.99" y="1919.5" ></text>
</g>
<g >
<title>release_pages (2 samples, 0.01%)</title><rect x="84.0" y="1381" width="0.1" height="15.0" fill="rgb(218,136,9)" rx="2" ry="2" />
<text  x="86.98" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.0" y="549" width="0.2" height="15.0" fill="rgb(209,58,28)" rx="2" ry="2" />
<text  x="1191.04" y="559.5" ></text>
</g>
<g >
<title>[libm-2.27.so] (6 samples, 0.03%)</title><rect x="26.2" y="2053" width="0.3" height="15.0" fill="rgb(231,49,23)" rx="2" ry="2" />
<text  x="29.16" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (320 samples, 1.71%)</title><rect x="55.6" y="133" width="20.2" height="15.0" fill="rgb(226,124,14)" rx="2" ry="2" />
<text  x="58.57" y="143.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1187.3" y="501" width="0.3" height="15.0" fill="rgb(233,180,37)" rx="2" ry="2" />
<text  x="1190.29" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1187.3" y="1477" width="0.3" height="15.0" fill="rgb(214,97,54)" rx="2" ry="2" />
<text  x="1190.29" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.0" y="1269" width="0.2" height="15.0" fill="rgb(245,78,18)" rx="2" ry="2" />
<text  x="1191.04" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (63 samples, 0.34%)</title><rect x="164.1" y="1589" width="4.0" height="15.0" fill="rgb(230,69,13)" rx="2" ry="2" />
<text  x="167.14" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (98 samples, 0.52%)</title><rect x="189.5" y="1733" width="6.2" height="15.0" fill="rgb(218,121,47)" rx="2" ry="2" />
<text  x="192.52" y="1743.5" ></text>
</g>
<g >
<title>__interceptor_memcmp (124 samples, 0.66%)</title><rect x="1134.8" y="2037" width="7.8" height="15.0" fill="rgb(243,139,18)" rx="2" ry="2" />
<text  x="1137.77" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.6" y="1877" width="0.4" height="15.0" fill="rgb(252,62,37)" rx="2" ry="2" />
<text  x="1190.60" y="1887.5" ></text>
</g>
<g >
<title>memcpy (3 samples, 0.02%)</title><rect x="1114.6" y="2037" width="0.2" height="15.0" fill="rgb(221,182,34)" rx="2" ry="2" />
<text  x="1117.63" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.0" y="1941" width="0.2" height="15.0" fill="rgb(242,66,37)" rx="2" ry="2" />
<text  x="1190.03" y="1951.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (2 samples, 0.01%)</title><rect x="80.8" y="1349" width="0.1" height="15.0" fill="rgb(219,74,5)" rx="2" ry="2" />
<text  x="83.82" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.04%)</title><rect x="1187.6" y="1973" width="0.4" height="15.0" fill="rgb(246,123,21)" rx="2" ry="2" />
<text  x="1190.60" y="1983.5" ></text>
</g>
<g >
<title>__pthread_getspecific (5 samples, 0.03%)</title><rect x="153.8" y="1637" width="0.3" height="15.0" fill="rgb(231,23,11)" rx="2" ry="2" />
<text  x="156.79" y="1647.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::get_case (3 samples, 0.02%)</title><rect x="548.9" y="1893" width="0.2" height="15.0" fill="rgb(243,68,43)" rx="2" ry="2" />
<text  x="551.87" y="1903.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (52 samples, 0.28%)</title><rect x="157.9" y="1685" width="3.3" height="15.0" fill="rgb(209,83,36)" rx="2" ry="2" />
<text  x="160.89" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (387 samples, 2.07%)</title><rect x="55.5" y="1301" width="24.4" height="15.0" fill="rgb(234,119,34)" rx="2" ry="2" />
<text  x="58.51" y="1311.5" >[..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (200 samples, 1.07%)</title><rect x="131.9" y="1749" width="12.6" height="15.0" fill="rgb(206,224,17)" rx="2" ry="2" />
<text  x="134.89" y="1759.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (2 samples, 0.01%)</title><rect x="82.0" y="1333" width="0.1" height="15.0" fill="rgb(215,114,31)" rx="2" ry="2" />
<text  x="84.96" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1187.9" y="1365" width="0.1" height="15.0" fill="rgb(243,26,41)" rx="2" ry="2" />
<text  x="1190.85" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (2 samples, 0.01%)</title><rect x="161.9" y="1813" width="0.1" height="15.0" fill="rgb(220,225,46)" rx="2" ry="2" />
<text  x="164.87" y="1823.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (11 samples, 0.06%)</title><rect x="750.9" y="1989" width="0.7" height="15.0" fill="rgb(210,57,24)" rx="2" ry="2" />
<text  x="753.92" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1187.3" y="1237" width="0.3" height="15.0" fill="rgb(244,216,19)" rx="2" ry="2" />
<text  x="1190.29" y="1247.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (42 samples, 0.22%)</title><rect x="955.1" y="2053" width="2.7" height="15.0" fill="rgb(229,160,35)" rx="2" ry="2" />
<text  x="958.12" y="2063.5" ></text>
</g>
<g >
<title>fasttext::ProductQuantizer::get_centroids (5 samples, 0.03%)</title><rect x="1096.8" y="2053" width="0.3" height="15.0" fill="rgb(250,220,11)" rx="2" ry="2" />
<text  x="1099.77" y="2063.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (2 samples, 0.01%)</title><rect x="177.7" y="1589" width="0.1" height="15.0" fill="rgb(231,223,10)" rx="2" ry="2" />
<text  x="180.71" y="1599.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (2 samples, 0.01%)</title><rect x="182.8" y="1621" width="0.2" height="15.0" fill="rgb(254,10,34)" rx="2" ry="2" />
<text  x="185.83" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="162.8" y="1141" width="0.1" height="15.0" fill="rgb(227,153,2)" rx="2" ry="2" />
<text  x="165.75" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1187.9" y="309" width="0.1" height="15.0" fill="rgb(206,216,22)" rx="2" ry="2" />
<text  x="1190.85" y="319.5" ></text>
</g>
<g >
<title>[unknown] (341 samples, 1.82%)</title><rect x="55.6" y="1093" width="21.5" height="15.0" fill="rgb(235,47,26)" rx="2" ry="2" />
<text  x="58.57" y="1103.5" >[..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1188.0" y="661" width="0.2" height="15.0" fill="rgb(242,114,33)" rx="2" ry="2" />
<text  x="1191.04" y="671.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (7 samples, 0.04%)</title><rect x="203.0" y="1605" width="0.5" height="15.0" fill="rgb(235,128,22)" rx="2" ry="2" />
<text  x="206.03" y="1615.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (2 samples, 0.01%)</title><rect x="86.8" y="1653" width="0.1" height="15.0" fill="rgb(206,106,49)" rx="2" ry="2" />
<text  x="89.82" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (2 samples, 0.01%)</title><rect x="187.5" y="1749" width="0.1" height="15.0" fill="rgb(208,179,13)" rx="2" ry="2" />
<text  x="190.50" y="1759.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.01%)</title><rect x="151.4" y="1669" width="0.1" height="15.0" fill="rgb(248,81,11)" rx="2" ry="2" />
<text  x="154.39" y="1679.5" ></text>
</g>
<g >
<title>on_each_cpu_mask (4 samples, 0.02%)</title><rect x="55.1" y="1845" width="0.2" height="15.0" fill="rgb(238,96,44)" rx="2" ry="2" />
<text  x="58.07" y="1855.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (4 samples, 0.02%)</title><rect x="90.7" y="2005" width="0.2" height="15.0" fill="rgb(233,45,27)" rx="2" ry="2" />
<text  x="93.67" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (331 samples, 1.77%)</title><rect x="55.6" y="613" width="20.9" height="15.0" fill="rgb(213,66,27)" rx="2" ry="2" />
<text  x="58.57" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (81 samples, 0.43%)</title><rect x="150.8" y="1717" width="5.1" height="15.0" fill="rgb(250,60,4)" rx="2" ry="2" />
<text  x="153.82" y="1727.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (9 samples, 0.05%)</title><rect x="754.0" y="2005" width="0.5" height="15.0" fill="rgb(214,3,16)" rx="2" ry="2" />
<text  x="756.95" y="2015.5" ></text>
</g>
<g >
<title>__pthread_getspecific (3 samples, 0.02%)</title><rect x="176.3" y="1589" width="0.2" height="15.0" fill="rgb(224,47,17)" rx="2" ry="2" />
<text  x="179.26" y="1599.5" ></text>
</g>
<g >
<title>__schedule (7 samples, 0.04%)</title><rect x="131.3" y="1845" width="0.5" height="15.0" fill="rgb(235,112,41)" rx="2" ry="2" />
<text  x="134.32" y="1855.5" ></text>
</g>
<g >
<title>fasttext::Vector::zero (12 samples, 0.06%)</title><rect x="322.7" y="1973" width="0.8" height="15.0" fill="rgb(254,73,40)" rx="2" ry="2" />
<text  x="325.71" y="1983.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="82.0" y="1413" width="0.1" height="15.0" fill="rgb(214,50,29)" rx="2" ry="2" />
<text  x="84.96" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1187.3" y="1077" width="0.3" height="15.0" fill="rgb(238,67,50)" rx="2" ry="2" />
<text  x="1190.29" y="1087.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::create&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (6 samples, 0.03%)</title><rect x="122.4" y="1893" width="0.4" height="15.0" fill="rgb(214,56,45)" rx="2" ry="2" />
<text  x="125.42" y="1903.5" ></text>
</g>
<g >
<title>release_pages (2 samples, 0.01%)</title><rect x="82.0" y="1253" width="0.1" height="15.0" fill="rgb(225,154,20)" rx="2" ry="2" />
<text  x="84.96" y="1263.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;TDocument, std::allocator&lt;TDocument&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;TDocument, std::allocator&lt;TDocument&gt; &gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::vector&lt;TDocument, std::allocator&lt;TDocument&gt; &gt; &gt; &gt; &gt;::_M_erase (2 samples, 0.01%)</title><rect x="501.8" y="2005" width="0.2" height="15.0" fill="rgb(246,150,53)" rx="2" ry="2" />
<text  x="504.85" y="2015.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::getSubwords (138 samples, 0.74%)</title><rect x="465.2" y="1941" width="8.7" height="15.0" fill="rgb(251,97,47)" rx="2" ry="2" />
<text  x="468.23" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.0" y="1893" width="0.2" height="15.0" fill="rgb(207,205,44)" rx="2" ry="2" />
<text  x="1191.04" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.7" y="1781" width="0.3" height="15.0" fill="rgb(213,69,3)" rx="2" ry="2" />
<text  x="1190.66" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_try_char (2 samples, 0.01%)</title><rect x="200.7" y="1733" width="0.1" height="15.0" fill="rgb(224,132,35)" rx="2" ry="2" />
<text  x="203.69" y="1743.5" ></text>
</g>
<g >
<title>__vm_munmap (2 samples, 0.01%)</title><rect x="88.0" y="1781" width="0.1" height="15.0" fill="rgb(253,196,51)" rx="2" ry="2" />
<text  x="91.02" y="1791.5" ></text>
</g>
<g >
<title>handle_mm_fault (6 samples, 0.03%)</title><rect x="634.4" y="1813" width="0.4" height="15.0" fill="rgb(233,31,28)" rx="2" ry="2" />
<text  x="637.40" y="1823.5" ></text>
</g>
<g >
<title>alloc_pages_vma (12 samples, 0.06%)</title><rect x="675.4" y="1765" width="0.7" height="15.0" fill="rgb(215,227,10)" rx="2" ry="2" />
<text  x="678.37" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (6 samples, 0.03%)</title><rect x="216.5" y="1829" width="0.4" height="15.0" fill="rgb(206,49,7)" rx="2" ry="2" />
<text  x="219.47" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.9" y="1013" width="0.1" height="15.0" fill="rgb(211,3,4)" rx="2" ry="2" />
<text  x="1190.85" y="1023.5" ></text>
</g>
<g >
<title>fasttext::Model::predict (8 samples, 0.04%)</title><rect x="755.3" y="2037" width="0.5" height="15.0" fill="rgb(235,221,36)" rx="2" ry="2" />
<text  x="758.34" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1187.3" y="357" width="0.3" height="15.0" fill="rgb(220,142,53)" rx="2" ry="2" />
<text  x="1190.29" y="367.5" ></text>
</g>
<g >
<title>__interceptor___strxfrm_l (5 samples, 0.03%)</title><rect x="988.3" y="2053" width="0.3" height="15.0" fill="rgb(237,170,19)" rx="2" ry="2" />
<text  x="991.26" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (110 samples, 0.59%)</title><rect x="131.9" y="1733" width="6.9" height="15.0" fill="rgb(226,73,52)" rx="2" ry="2" />
<text  x="134.89" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1187.9" y="501" width="0.1" height="15.0" fill="rgb(228,93,35)" rx="2" ry="2" />
<text  x="1190.85" y="511.5" ></text>
</g>
<g >
<title>mem_cgroup_commit_charge (4 samples, 0.02%)</title><rect x="926.9" y="1925" width="0.3" height="15.0" fill="rgb(225,27,48)" rx="2" ry="2" />
<text  x="929.91" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="162.4" y="1733" width="0.2" height="15.0" fill="rgb(206,226,1)" rx="2" ry="2" />
<text  x="165.44" y="1743.5" ></text>
</g>
<g >
<title>fasttext::Vector::addRow (26 samples, 0.14%)</title><rect x="476.1" y="1957" width="1.6" height="15.0" fill="rgb(216,105,7)" rx="2" ry="2" />
<text  x="479.09" y="1967.5" ></text>
</g>
<g >
<title>__asan_memmove (2 samples, 0.01%)</title><rect x="1188.9" y="2037" width="0.2" height="15.0" fill="rgb(234,186,26)" rx="2" ry="2" />
<text  x="1191.93" y="2047.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::basic_regex&lt;char const*&gt; (448 samples, 2.40%)</title><rect x="189.0" y="1957" width="28.2" height="15.0" fill="rgb(227,225,52)" rx="2" ry="2" />
<text  x="191.95" y="1967.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.0" y="1061" width="0.2" height="15.0" fill="rgb(246,12,15)" rx="2" ry="2" />
<text  x="1191.04" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (65 samples, 0.35%)</title><rect x="164.1" y="1621" width="4.1" height="15.0" fill="rgb(230,126,2)" rx="2" ry="2" />
<text  x="167.08" y="1631.5" ></text>
</g>
<g >
<title>__asan::AsanThread::stack_top (2 samples, 0.01%)</title><rect x="158.6" y="1669" width="0.1" height="15.0" fill="rgb(237,3,4)" rx="2" ry="2" />
<text  x="161.59" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (98 samples, 0.52%)</title><rect x="144.6" y="1733" width="6.2" height="15.0" fill="rgb(217,180,26)" rx="2" ry="2" />
<text  x="147.64" y="1743.5" ></text>
</g>
<g >
<title>memcpy@plt (3 samples, 0.02%)</title><rect x="1104.0" y="2053" width="0.2" height="15.0" fill="rgb(251,99,4)" rx="2" ry="2" />
<text  x="1106.96" y="2063.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (2 samples, 0.01%)</title><rect x="89.9" y="1893" width="0.1" height="15.0" fill="rgb(232,20,51)" rx="2" ry="2" />
<text  x="92.91" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="162.7" y="1653" width="0.2" height="15.0" fill="rgb(246,140,24)" rx="2" ry="2" />
<text  x="165.69" y="1663.5" ></text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::get (3 samples, 0.02%)</title><rect x="123.4" y="1925" width="0.2" height="15.0" fill="rgb(234,191,16)" rx="2" ry="2" />
<text  x="126.43" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (34 samples, 0.18%)</title><rect x="802.1" y="2021" width="2.1" height="15.0" fill="rgb(239,83,47)" rx="2" ry="2" />
<text  x="805.05" y="2031.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (4 samples, 0.02%)</title><rect x="1119.4" y="2037" width="0.2" height="15.0" fill="rgb(213,60,10)" rx="2" ry="2" />
<text  x="1122.37" y="2047.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (2 samples, 0.01%)</title><rect x="555.2" y="1893" width="0.2" height="15.0" fill="rgb(249,2,44)" rx="2" ry="2" />
<text  x="558.25" y="1903.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (39 samples, 0.21%)</title><rect x="202.5" y="1621" width="2.4" height="15.0" fill="rgb(240,79,39)" rx="2" ry="2" />
<text  x="205.46" y="1631.5" ></text>
</g>
<g >
<title>fasttext::DenseMatrix::load (6 samples, 0.03%)</title><rect x="1096.3" y="2053" width="0.3" height="15.0" fill="rgb(229,117,53)" rx="2" ry="2" />
<text  x="1099.26" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (3 samples, 0.02%)</title><rect x="183.5" y="1733" width="0.2" height="15.0" fill="rgb(226,72,42)" rx="2" ry="2" />
<text  x="186.52" y="1743.5" ></text>
</g>
<g >
<title>Rank (902 samples, 4.83%)</title><rect x="131.8" y="2005" width="57.0" height="15.0" fill="rgb(218,124,4)" rx="2" ry="2" />
<text  x="134.83" y="2015.5" >Rank</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_Compiler (482 samples, 2.58%)</title><rect x="131.8" y="1941" width="30.4" height="15.0" fill="rgb(248,178,45)" rx="2" ry="2" />
<text  x="134.83" y="1951.5" >st..</text>
</g>
<g >
<title>[unknown] (337 samples, 1.80%)</title><rect x="55.6" y="917" width="21.2" height="15.0" fill="rgb(239,218,5)" rx="2" ry="2" />
<text  x="58.57" y="927.5" >[..</text>
</g>
<g >
<title>operator new (2 samples, 0.01%)</title><rect x="612.6" y="1877" width="0.2" height="15.0" fill="rgb(231,176,35)" rx="2" ry="2" />
<text  x="615.62" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (75 samples, 0.40%)</title><rect x="195.9" y="1637" width="4.7" height="15.0" fill="rgb(227,40,42)" rx="2" ry="2" />
<text  x="198.89" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (2 samples, 0.01%)</title><rect x="162.0" y="1813" width="0.1" height="15.0" fill="rgb(235,105,12)" rx="2" ry="2" />
<text  x="165.00" y="1823.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int const&amp;&gt; (2 samples, 0.01%)</title><rect x="1188.5" y="2053" width="0.2" height="15.0" fill="rgb(208,166,4)" rx="2" ry="2" />
<text  x="1191.55" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="162.4" y="1717" width="0.2" height="15.0" fill="rgb(243,69,10)" rx="2" ry="2" />
<text  x="165.44" y="1727.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::Unwind (2 samples, 0.01%)</title><rect x="198.5" y="1589" width="0.1" height="15.0" fill="rgb(230,176,22)" rx="2" ry="2" />
<text  x="201.48" y="1599.5" ></text>
</g>
<g >
<title>find_vma (7 samples, 0.04%)</title><rect x="923.8" y="1989" width="0.5" height="15.0" fill="rgb(208,164,42)" rx="2" ry="2" />
<text  x="926.82" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (78 samples, 0.42%)</title><rect x="168.2" y="1685" width="5.0" height="15.0" fill="rgb(251,118,31)" rx="2" ry="2" />
<text  x="171.25" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_Compiler (447 samples, 2.39%)</title><rect x="189.0" y="1941" width="28.2" height="15.0" fill="rgb(209,85,44)" rx="2" ry="2" />
<text  x="192.01" y="1951.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="162.4" y="1461" width="0.2" height="15.0" fill="rgb(215,42,53)" rx="2" ry="2" />
<text  x="165.44" y="1471.5" ></text>
</g>
<g >
<title>unmap_region (8 samples, 0.04%)</title><rect x="1094.9" y="1909" width="0.5" height="15.0" fill="rgb(234,168,26)" rx="2" ry="2" />
<text  x="1097.88" y="1919.5" ></text>
</g>
<g >
<title>__dynamic_cast (5 samples, 0.03%)</title><rect x="190.0" y="1589" width="0.3" height="15.0" fill="rgb(244,158,36)" rx="2" ry="2" />
<text  x="193.02" y="1599.5" ></text>
</g>
<g >
<title>copy_page_to_iter (2 samples, 0.01%)</title><rect x="121.0" y="1877" width="0.2" height="15.0" fill="rgb(214,132,42)" rx="2" ry="2" />
<text  x="124.03" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="162.4" y="1477" width="0.2" height="15.0" fill="rgb(227,96,37)" rx="2" ry="2" />
<text  x="165.44" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.2" y="1765" width="0.4" height="15.0" fill="rgb(207,98,24)" rx="2" ry="2" />
<text  x="1190.22" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1187.3" y="1269" width="0.3" height="15.0" fill="rgb(220,17,16)" rx="2" ry="2" />
<text  x="1190.29" y="1279.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (12 samples, 0.06%)</title><rect x="980.8" y="2053" width="0.8" height="15.0" fill="rgb(233,197,25)" rx="2" ry="2" />
<text  x="983.81" y="2063.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::basic_json (3 samples, 0.02%)</title><rect x="501.5" y="1765" width="0.2" height="15.0" fill="rgb(225,216,51)" rx="2" ry="2" />
<text  x="504.53" y="1775.5" ></text>
</g>
<g >
<title>do_page_fault (3 samples, 0.02%)</title><rect x="499.5" y="1925" width="0.2" height="15.0" fill="rgb(230,79,27)" rx="2" ry="2" />
<text  x="502.51" y="1935.5" ></text>
</g>
<g >
<title>unmap_vmas (3 samples, 0.02%)</title><rect x="751.7" y="1925" width="0.2" height="15.0" fill="rgb(236,79,5)" rx="2" ry="2" />
<text  x="754.74" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (79 samples, 0.42%)</title><rect x="211.1" y="1733" width="5.0" height="15.0" fill="rgb(235,101,1)" rx="2" ry="2" />
<text  x="214.11" y="1743.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="1104.8" y="2021" width="0.1" height="15.0" fill="rgb(224,118,8)" rx="2" ry="2" />
<text  x="1107.79" y="2031.5" ></text>
</g>
<g >
<title>__do_page_fault (134 samples, 0.72%)</title><rect x="921.8" y="2005" width="8.5" height="15.0" fill="rgb(215,176,20)" rx="2" ry="2" />
<text  x="924.80" y="2015.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (2 samples, 0.01%)</title><rect x="214.1" y="1669" width="0.2" height="15.0" fill="rgb(240,92,15)" rx="2" ry="2" />
<text  x="217.14" y="1679.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (2 samples, 0.01%)</title><rect x="84.5" y="1605" width="0.2" height="15.0" fill="rgb(245,153,9)" rx="2" ry="2" />
<text  x="87.55" y="1615.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (4 samples, 0.02%)</title><rect x="590.4" y="1845" width="0.3" height="15.0" fill="rgb(212,203,16)" rx="2" ry="2" />
<text  x="593.41" y="1855.5" ></text>
</g>
<g >
<title>TFastTextEmbedder::GetSentenceEmbedding (1,677 samples, 8.97%)</title><rect x="217.7" y="1989" width="105.8" height="15.0" fill="rgb(246,131,46)" rx="2" ry="2" />
<text  x="220.67" y="1999.5" >TFastTextEmb..</text>
</g>
<g >
<title>[unknown] (317 samples, 1.70%)</title><rect x="55.6" y="69" width="20.0" height="15.0" fill="rgb(223,48,39)" rx="2" ry="2" />
<text  x="58.57" y="79.5" ></text>
</g>
<g >
<title>__sanitizer::StackTrace::GetCurrentPc (5 samples, 0.03%)</title><rect x="572.5" y="1877" width="0.4" height="15.0" fill="rgb(229,107,21)" rx="2" ry="2" />
<text  x="575.54" y="1887.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (156 samples, 0.83%)</title><rect x="1105.0" y="2053" width="9.8" height="15.0" fill="rgb(211,213,24)" rx="2" ry="2" />
<text  x="1107.97" y="2063.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct (2 samples, 0.01%)</title><rect x="552.7" y="1893" width="0.1" height="15.0" fill="rgb(213,156,3)" rx="2" ry="2" />
<text  x="555.72" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (80 samples, 0.43%)</title><rect x="178.4" y="1685" width="5.1" height="15.0" fill="rgb(239,142,21)" rx="2" ry="2" />
<text  x="181.41" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="162.8" y="821" width="0.1" height="15.0" fill="rgb(239,3,8)" rx="2" ry="2" />
<text  x="165.82" y="831.5" ></text>
</g>
<g >
<title>arch_tlb_finish_mmu (5 samples, 0.03%)</title><rect x="1094.9" y="1877" width="0.4" height="15.0" fill="rgb(219,124,14)" rx="2" ry="2" />
<text  x="1097.94" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.9" y="37" width="0.1" height="15.0" fill="rgb(251,189,30)" rx="2" ry="2" />
<text  x="1190.85" y="47.5" ></text>
</g>
<g >
<title>[unknown] (421 samples, 2.25%)</title><rect x="55.5" y="1461" width="26.6" height="15.0" fill="rgb(206,35,24)" rx="2" ry="2" />
<text  x="58.51" y="1471.5" >[..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="162.6" y="1733" width="0.3" height="15.0" fill="rgb(237,40,22)" rx="2" ry="2" />
<text  x="165.57" y="1743.5" ></text>
</g>
<g >
<title>do_futex (7 samples, 0.04%)</title><rect x="27.4" y="1941" width="0.4" height="15.0" fill="rgb(211,182,1)" rx="2" ry="2" />
<text  x="30.36" y="1951.5" ></text>
</g>
<g >
<title>__lru_cache_add (3 samples, 0.02%)</title><rect x="926.7" y="1909" width="0.1" height="15.0" fill="rgb(246,130,34)" rx="2" ry="2" />
<text  x="929.66" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="43.4" y="2021" width="0.1" height="15.0" fill="rgb(244,21,46)" rx="2" ry="2" />
<text  x="46.39" y="2031.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (2 samples, 0.01%)</title><rect x="500.3" y="1957" width="0.2" height="15.0" fill="rgb(222,169,9)" rx="2" ry="2" />
<text  x="503.33" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.9" y="1285" width="0.1" height="15.0" fill="rgb(234,150,12)" rx="2" ry="2" />
<text  x="1190.85" y="1295.5" ></text>
</g>
<g >
<title>clear_page_erms (7 samples, 0.04%)</title><rect x="482.4" y="1813" width="0.4" height="15.0" fill="rgb(209,183,36)" rx="2" ry="2" />
<text  x="485.40" y="1823.5" ></text>
</g>
<g >
<title>unmap_page_range (2 samples, 0.01%)</title><rect x="1095.3" y="1861" width="0.1" height="15.0" fill="rgb(250,57,44)" rx="2" ry="2" />
<text  x="1098.25" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1188.0" y="853" width="0.2" height="15.0" fill="rgb(230,187,38)" rx="2" ry="2" />
<text  x="1191.04" y="863.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (2 samples, 0.01%)</title><rect x="83.6" y="1541" width="0.1" height="15.0" fill="rgb(219,214,35)" rx="2" ry="2" />
<text  x="86.60" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.9" y="821" width="0.1" height="15.0" fill="rgb(223,140,12)" rx="2" ry="2" />
<text  x="1190.85" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.0" y="981" width="0.2" height="15.0" fill="rgb(224,93,4)" rx="2" ry="2" />
<text  x="1191.04" y="991.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (3 samples, 0.02%)</title><rect x="199.6" y="1589" width="0.2" height="15.0" fill="rgb(252,159,49)" rx="2" ry="2" />
<text  x="202.62" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="26.7" y="2037" width="0.2" height="15.0" fill="rgb(230,49,1)" rx="2" ry="2" />
<text  x="29.73" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (180 samples, 0.96%)</title><rect x="189.5" y="1765" width="11.3" height="15.0" fill="rgb(232,207,43)" rx="2" ry="2" />
<text  x="192.46" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="162.6" y="1669" width="0.3" height="15.0" fill="rgb(247,194,49)" rx="2" ry="2" />
<text  x="165.63" y="1679.5" ></text>
</g>
<g >
<title>get_page_from_freelist (7 samples, 0.04%)</title><rect x="926.0" y="1893" width="0.5" height="15.0" fill="rgb(241,116,52)" rx="2" ry="2" />
<text  x="929.02" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="860.6" y="2021" width="0.1" height="15.0" fill="rgb(218,103,25)" rx="2" ry="2" />
<text  x="863.57" y="2031.5" ></text>
</g>
<g >
<title>__asan::AsanThread::stack_bottom (11 samples, 0.06%)</title><rect x="1153.9" y="2037" width="0.7" height="15.0" fill="rgb(223,183,52)" rx="2" ry="2" />
<text  x="1156.89" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (88 samples, 0.47%)</title><rect x="205.5" y="1781" width="5.5" height="15.0" fill="rgb(234,74,35)" rx="2" ry="2" />
<text  x="208.49" y="1791.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (12 samples, 0.06%)</title><rect x="750.9" y="2021" width="0.7" height="15.0" fill="rgb(216,157,48)" rx="2" ry="2" />
<text  x="753.86" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.0" y="1685" width="0.2" height="15.0" fill="rgb(212,168,17)" rx="2" ry="2" />
<text  x="1191.04" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (379 samples, 2.03%)</title><rect x="55.5" y="1253" width="23.9" height="15.0" fill="rgb(210,1,24)" rx="2" ry="2" />
<text  x="58.51" y="1263.5" >[..</text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (2 samples, 0.01%)</title><rect x="860.6" y="2005" width="0.1" height="15.0" fill="rgb(232,208,12)" rx="2" ry="2" />
<text  x="863.57" y="2015.5" ></text>
</g>
<g >
<title>tlb_flush_mmu_free (2 samples, 0.01%)</title><rect x="84.3" y="1429" width="0.1" height="15.0" fill="rgb(205,29,35)" rx="2" ry="2" />
<text  x="87.29" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (77 samples, 0.41%)</title><rect x="139.5" y="1621" width="4.9" height="15.0" fill="rgb(213,5,0)" rx="2" ry="2" />
<text  x="142.53" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (340 samples, 1.82%)</title><rect x="55.6" y="997" width="21.4" height="15.0" fill="rgb(205,118,40)" rx="2" ry="2" />
<text  x="58.57" y="1007.5" >[..</text>
</g>
<g >
<title>native_send_call_func_single_ipi (3 samples, 0.02%)</title><rect x="55.1" y="1781" width="0.2" height="15.0" fill="rgb(219,32,44)" rx="2" ry="2" />
<text  x="58.07" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.02%)</title><rect x="863.0" y="2021" width="0.2" height="15.0" fill="rgb(233,29,46)" rx="2" ry="2" />
<text  x="865.97" y="2031.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (3 samples, 0.02%)</title><rect x="88.3" y="1877" width="0.2" height="15.0" fill="rgb(231,70,4)" rx="2" ry="2" />
<text  x="91.33" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.05%)</title><rect x="162.4" y="1861" width="0.6" height="15.0" fill="rgb(212,33,18)" rx="2" ry="2" />
<text  x="165.44" y="1871.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (29 samples, 0.16%)</title><rect x="1118.9" y="2053" width="1.8" height="15.0" fill="rgb(226,201,8)" rx="2" ry="2" />
<text  x="1121.86" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (90 samples, 0.48%)</title><rect x="138.8" y="1733" width="5.7" height="15.0" fill="rgb(233,54,26)" rx="2" ry="2" />
<text  x="141.83" y="1743.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (8 samples, 0.04%)</title><rect x="748.3" y="1941" width="0.5" height="15.0" fill="rgb(218,24,9)" rx="2" ry="2" />
<text  x="751.34" y="1951.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (32 samples, 0.17%)</title><rect x="71.4" y="37" width="2.0" height="15.0" fill="rgb(213,126,35)" rx="2" ry="2" />
<text  x="74.35" y="47.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.05%)</title><rect x="162.4" y="1813" width="0.6" height="15.0" fill="rgb(228,120,36)" rx="2" ry="2" />
<text  x="165.44" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (7 samples, 0.04%)</title><rect x="216.5" y="1845" width="0.4" height="15.0" fill="rgb(248,107,46)" rx="2" ry="2" />
<text  x="219.47" y="1855.5" ></text>
</g>
<g >
<title>arch_tlb_finish_mmu (2 samples, 0.01%)</title><rect x="88.0" y="1717" width="0.1" height="15.0" fill="rgb(240,87,20)" rx="2" ry="2" />
<text  x="91.02" y="1727.5" ></text>
</g>
<g >
<title>do_futex (9 samples, 0.05%)</title><rect x="131.2" y="1909" width="0.6" height="15.0" fill="rgb(214,142,39)" rx="2" ry="2" />
<text  x="134.19" y="1919.5" ></text>
</g>
<g >
<title>fasttext::NegativeSamplingLoss::NegativeSamplingLoss (11 samples, 0.06%)</title><rect x="499.0" y="1957" width="0.7" height="15.0" fill="rgb(208,205,34)" rx="2" ry="2" />
<text  x="502.01" y="1967.5" ></text>
</g>
<g >
<title>unmap_single_vma (3 samples, 0.02%)</title><rect x="751.7" y="1909" width="0.2" height="15.0" fill="rgb(242,193,19)" rx="2" ry="2" />
<text  x="754.74" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3 samples, 0.02%)</title><rect x="161.6" y="1797" width="0.2" height="15.0" fill="rgb(238,206,53)" rx="2" ry="2" />
<text  x="164.62" y="1807.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::emplace_back&lt;char const*&amp;, unsigned int&amp;&gt; (9 samples, 0.05%)</title><rect x="612.8" y="1877" width="0.5" height="15.0" fill="rgb(243,122,43)" rx="2" ry="2" />
<text  x="615.75" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (71 samples, 0.38%)</title><rect x="163.7" y="1701" width="4.5" height="15.0" fill="rgb(235,29,29)" rx="2" ry="2" />
<text  x="166.70" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (466 samples, 2.49%)</title><rect x="55.5" y="1637" width="29.4" height="15.0" fill="rgb(205,209,26)" rx="2" ry="2" />
<text  x="58.51" y="1647.5" >[u..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1188.0" y="453" width="0.2" height="15.0" fill="rgb(220,69,3)" rx="2" ry="2" />
<text  x="1191.04" y="463.5" ></text>
</g>
<g >
<title>__asan_memcpy (4 samples, 0.02%)</title><rect x="142.4" y="1589" width="0.3" height="15.0" fill="rgb(214,80,19)" rx="2" ry="2" />
<text  x="145.43" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1187.7" y="1829" width="0.3" height="15.0" fill="rgb(226,48,28)" rx="2" ry="2" />
<text  x="1190.66" y="1839.5" ></text>
</g>
<g >
<title>__x64_sys_futex (7 samples, 0.04%)</title><rect x="27.4" y="1957" width="0.4" height="15.0" fill="rgb(207,24,53)" rx="2" ry="2" />
<text  x="30.36" y="1967.5" ></text>
</g>
<g >
<title>__do_munmap (2 samples, 0.01%)</title><rect x="84.7" y="1525" width="0.1" height="15.0" fill="rgb(206,184,9)" rx="2" ry="2" />
<text  x="87.67" y="1535.5" ></text>
</g>
<g >
<title>std::vector&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::allocator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;::vector (3 samples, 0.02%)</title><rect x="501.5" y="1733" width="0.2" height="15.0" fill="rgb(242,139,40)" rx="2" ry="2" />
<text  x="504.53" y="1743.5" ></text>
</g>
<g >
<title>operator new (8 samples, 0.04%)</title><rect x="143.4" y="1589" width="0.5" height="15.0" fill="rgb(250,167,9)" rx="2" ry="2" />
<text  x="146.38" y="1599.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (17 samples, 0.09%)</title><rect x="1094.6" y="1973" width="1.0" height="15.0" fill="rgb(206,61,16)" rx="2" ry="2" />
<text  x="1097.56" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (330 samples, 1.77%)</title><rect x="55.6" y="517" width="20.8" height="15.0" fill="rgb(213,107,25)" rx="2" ry="2" />
<text  x="58.57" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (91 samples, 0.49%)</title><rect x="190.0" y="1621" width="5.7" height="15.0" fill="rgb(214,61,54)" rx="2" ry="2" />
<text  x="192.96" y="1631.5" ></text>
</g>
<g >
<title>[libOpenNMTTokenizer.so] (3 samples, 0.02%)</title><rect x="629.4" y="1877" width="0.2" height="15.0" fill="rgb(246,160,3)" rx="2" ry="2" />
<text  x="632.41" y="1887.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (7 samples, 0.04%)</title><rect x="138.3" y="1589" width="0.4" height="15.0" fill="rgb(236,35,39)" rx="2" ry="2" />
<text  x="141.26" y="1599.5" ></text>
</g>
<g >
<title>__asan_memset (13 samples, 0.07%)</title><rect x="569.6" y="1877" width="0.8" height="15.0" fill="rgb(237,198,47)" rx="2" ry="2" />
<text  x="572.58" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1187.3" y="181" width="0.3" height="15.0" fill="rgb(207,85,45)" rx="2" ry="2" />
<text  x="1190.29" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::emplace_back&lt;char const*&amp;, unsigned int&amp;&gt; (131 samples, 0.70%)</title><rect x="585.0" y="1861" width="8.3" height="15.0" fill="rgb(242,86,33)" rx="2" ry="2" />
<text  x="588.04" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="162.8" y="1189" width="0.1" height="15.0" fill="rgb(215,186,31)" rx="2" ry="2" />
<text  x="165.75" y="1199.5" ></text>
</g>
<g >
<title>__handle_mm_fault (19 samples, 0.10%)</title><rect x="482.1" y="1861" width="1.2" height="15.0" fill="rgb(218,24,17)" rx="2" ry="2" />
<text  x="485.09" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1187.7" y="1701" width="0.3" height="15.0" fill="rgb(239,162,28)" rx="2" ry="2" />
<text  x="1190.66" y="1711.5" ></text>
</g>
<g >
<title>page_fault (3 samples, 0.02%)</title><rect x="92.6" y="2005" width="0.2" height="15.0" fill="rgb(207,67,4)" rx="2" ry="2" />
<text  x="95.56" y="2015.5" ></text>
</g>
<g >
<title>__interceptor___strxfrm_l (131 samples, 0.70%)</title><rect x="1162.8" y="2037" width="8.3" height="15.0" fill="rgb(238,166,12)" rx="2" ry="2" />
<text  x="1165.79" y="2047.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (2 samples, 0.01%)</title><rect x="121.0" y="1909" width="0.2" height="15.0" fill="rgb(238,178,11)" rx="2" ry="2" />
<text  x="124.03" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1187.9" y="69" width="0.1" height="15.0" fill="rgb(244,182,10)" rx="2" ry="2" />
<text  x="1190.85" y="79.5" ></text>
</g>
<g >
<title>operator new (14 samples, 0.07%)</title><rect x="595.0" y="1845" width="0.9" height="15.0" fill="rgb(242,83,41)" rx="2" ry="2" />
<text  x="598.01" y="1855.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (11 samples, 0.06%)</title><rect x="504.9" y="1957" width="0.7" height="15.0" fill="rgb(228,135,3)" rx="2" ry="2" />
<text  x="507.94" y="1967.5" ></text>
</g>
<g >
<title>do_page_fault (2 samples, 0.01%)</title><rect x="497.7" y="1957" width="0.1" height="15.0" fill="rgb(240,177,25)" rx="2" ry="2" />
<text  x="500.68" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.9" y="757" width="0.1" height="15.0" fill="rgb(246,166,28)" rx="2" ry="2" />
<text  x="1190.85" y="767.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="508.5" y="2005" width="0.2" height="15.0" fill="rgb(239,173,18)" rx="2" ry="2" />
<text  x="511.54" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.02%)</title><rect x="1187.9" y="933" width="0.1" height="15.0" fill="rgb(228,14,22)" rx="2" ry="2" />
<text  x="1190.85" y="943.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (6 samples, 0.03%)</title><rect x="163.7" y="1653" width="0.4" height="15.0" fill="rgb(248,2,34)" rx="2" ry="2" />
<text  x="166.70" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.9" y="373" width="0.1" height="15.0" fill="rgb(243,199,24)" rx="2" ry="2" />
<text  x="1190.85" y="383.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (2 samples, 0.01%)</title><rect x="213.5" y="1669" width="0.1" height="15.0" fill="rgb(236,24,40)" rx="2" ry="2" />
<text  x="216.50" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (82 samples, 0.44%)</title><rect x="156.4" y="1781" width="5.2" height="15.0" fill="rgb(224,55,9)" rx="2" ry="2" />
<text  x="159.38" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="162.8" y="1205" width="0.1" height="15.0" fill="rgb(238,222,29)" rx="2" ry="2" />
<text  x="165.75" y="1215.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (11 samples, 0.06%)</title><rect x="804.2" y="1973" width="0.7" height="15.0" fill="rgb(238,94,10)" rx="2" ry="2" />
<text  x="807.20" y="1983.5" ></text>
</g>
<g >
<title>unmap_region (2 samples, 0.01%)</title><rect x="84.3" y="1493" width="0.1" height="15.0" fill="rgb(238,197,40)" rx="2" ry="2" />
<text  x="87.29" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.9" y="181" width="0.1" height="15.0" fill="rgb(206,94,6)" rx="2" ry="2" />
<text  x="1190.85" y="191.5" ></text>
</g>
<g >
<title>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::dump (2 samples, 0.01%)</title><rect x="500.6" y="1925" width="0.1" height="15.0" fill="rgb(227,206,18)" rx="2" ry="2" />
<text  x="503.58" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1187.3" y="1365" width="0.3" height="15.0" fill="rgb(251,152,14)" rx="2" ry="2" />
<text  x="1190.29" y="1375.5" ></text>
</g>
<g >
<title>[unknown] (336 samples, 1.80%)</title><rect x="55.6" y="757" width="21.2" height="15.0" fill="rgb(214,17,11)" rx="2" ry="2" />
<text  x="58.57" y="767.5" ></text>
</g>
<g >
<title>fasttext::HierarchicalSoftmaxLoss::predict (5 samples, 0.03%)</title><rect x="545.5" y="1925" width="0.3" height="15.0" fill="rgb(226,69,42)" rx="2" ry="2" />
<text  x="548.46" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (78 samples, 0.42%)</title><rect x="195.7" y="1701" width="4.9" height="15.0" fill="rgb(207,116,2)" rx="2" ry="2" />
<text  x="198.70" y="1711.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::set (27 samples, 0.14%)</title><rect x="556.0" y="1893" width="1.7" height="15.0" fill="rgb(213,1,51)" rx="2" ry="2" />
<text  x="559.00" y="1903.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::emplace_back&lt;char const*&amp;, unsigned int&amp;&gt; (6 samples, 0.03%)</title><rect x="719.1" y="1877" width="0.4" height="15.0" fill="rgb(230,87,30)" rx="2" ry="2" />
<text  x="722.11" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (110 samples, 0.59%)</title><rect x="131.9" y="1717" width="6.9" height="15.0" fill="rgb(207,100,35)" rx="2" ry="2" />
<text  x="134.89" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.9" y="245" width="0.1" height="15.0" fill="rgb(249,139,51)" rx="2" ry="2" />
<text  x="1190.85" y="255.5" ></text>
</g>
<g >
<title>__lsan::LsanMetadata::LsanMetadata (2 samples, 0.01%)</title><rect x="503.9" y="2037" width="0.1" height="15.0" fill="rgb(245,32,27)" rx="2" ry="2" />
<text  x="506.87" y="2047.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.02%)</title><rect x="171.5" y="1573" width="0.2" height="15.0" fill="rgb(232,229,35)" rx="2" ry="2" />
<text  x="174.53" y="1583.5" ></text>
</g>
<g >
<title>onmt::get_alphabet_id (2 samples, 0.01%)</title><rect x="635.5" y="1877" width="0.2" height="15.0" fill="rgb(222,25,8)" rx="2" ry="2" />
<text  x="638.54" y="1887.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (2 samples, 0.01%)</title><rect x="122.0" y="1973" width="0.1" height="15.0" fill="rgb(238,196,2)" rx="2" ry="2" />
<text  x="124.98" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (74 samples, 0.40%)</title><rect x="200.8" y="1733" width="4.7" height="15.0" fill="rgb(242,218,33)" rx="2" ry="2" />
<text  x="203.82" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="162.8" y="917" width="0.1" height="15.0" fill="rgb(217,118,29)" rx="2" ry="2" />
<text  x="165.82" y="927.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (45 samples, 0.24%)</title><rect x="801.4" y="2037" width="2.8" height="15.0" fill="rgb(229,125,30)" rx="2" ry="2" />
<text  x="804.36" y="2047.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;std::unique_ptr&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;  (3,689 samples, 19.73%)</title><rect x="508.7" y="2005" width="232.8" height="15.0" fill="rgb(226,120,16)" rx="2" ry="2" />
<text  x="511.66" y="2015.5" >std::_Function_handler&lt;std::un..</text>
</g>
<g >
<title>onmt::CaseModifier::extract_case_type (880 samples, 4.71%)</title><rect x="557.8" y="1893" width="55.6" height="15.0" fill="rgb(247,3,47)" rx="2" ry="2" />
<text  x="560.83" y="1903.5" >onmt:..</text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (2 samples, 0.01%)</title><rect x="189.7" y="1637" width="0.1" height="15.0" fill="rgb(243,12,21)" rx="2" ry="2" />
<text  x="192.71" y="1647.5" ></text>
</g>
<g >
<title>std::istream::sentry::sentry (8 samples, 0.04%)</title><rect x="800.3" y="2005" width="0.6" height="15.0" fill="rgb(247,170,51)" rx="2" ry="2" />
<text  x="803.35" y="2015.5" ></text>
</g>
<g >
<title>smp_call_function_single (2 samples, 0.01%)</title><rect x="89.9" y="1701" width="0.1" height="15.0" fill="rgb(233,226,36)" rx="2" ry="2" />
<text  x="92.91" y="1711.5" ></text>
</g>
<g >
<title>__asan::AsanThread::stack_top (2 samples, 0.01%)</title><rect x="152.9" y="1637" width="0.1" height="15.0" fill="rgb(230,102,29)" rx="2" ry="2" />
<text  x="155.91" y="1647.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::reserve (42 samples, 0.22%)</title><rect x="593.3" y="1861" width="2.7" height="15.0" fill="rgb(243,118,11)" rx="2" ry="2" />
<text  x="596.31" y="1871.5" ></text>
</g>
<g >
<title>__pthread_getspecific (5 samples, 0.03%)</title><rect x="181.4" y="1621" width="0.3" height="15.0" fill="rgb(247,65,37)" rx="2" ry="2" />
<text  x="184.38" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (74 samples, 0.40%)</title><rect x="173.5" y="1637" width="4.7" height="15.0" fill="rgb(214,159,42)" rx="2" ry="2" />
<text  x="176.49" y="1647.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (5 samples, 0.03%)</title><rect x="1095.9" y="2021" width="0.3" height="15.0" fill="rgb(234,157,10)" rx="2" ry="2" />
<text  x="1098.89" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.9" y="53" width="0.1" height="15.0" fill="rgb(209,180,37)" rx="2" ry="2" />
<text  x="1190.85" y="63.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1187.3" y="613" width="0.3" height="15.0" fill="rgb(209,210,3)" rx="2" ry="2" />
<text  x="1190.29" y="623.5" ></text>
</g>
<g >
<title>x2apic_send_IPI (2 samples, 0.01%)</title><rect x="505.2" y="1781" width="0.1" height="15.0" fill="rgb(236,38,24)" rx="2" ry="2" />
<text  x="508.19" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.02%)</title><rect x="1187.9" y="917" width="0.1" height="15.0" fill="rgb(237,118,38)" rx="2" ry="2" />
<text  x="1190.85" y="927.5" ></text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::get (48 samples, 0.26%)</title><rect x="125.4" y="1925" width="3.1" height="15.0" fill="rgb(223,35,37)" rx="2" ry="2" />
<text  x="128.45" y="1935.5" ></text>
</g>
<g >
<title>perf_event_mmap (2 samples, 0.01%)</title><rect x="1095.4" y="1925" width="0.1" height="15.0" fill="rgb(220,28,26)" rx="2" ry="2" />
<text  x="1098.38" y="1935.5" ></text>
</g>
<g >
<title>onmt::Tokenizer::tokenize (2,960 samples, 15.83%)</title><rect x="552.9" y="1909" width="186.9" height="15.0" fill="rgb(253,201,19)" rx="2" ry="2" />
<text  x="555.91" y="1919.5" >onmt::Tokenizer::tokenize</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1187.3" y="661" width="0.3" height="15.0" fill="rgb(215,10,15)" rx="2" ry="2" />
<text  x="1190.29" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (82 samples, 0.44%)</title><rect x="156.4" y="1765" width="5.2" height="15.0" fill="rgb(239,125,8)" rx="2" ry="2" />
<text  x="159.38" y="1775.5" ></text>
</g>
<g >
<title>pmd_devmap_trans_unstable (2 samples, 0.01%)</title><rect x="630.7" y="1781" width="0.1" height="15.0" fill="rgb(242,145,38)" rx="2" ry="2" />
<text  x="633.68" y="1791.5" ></text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.02%)</title><rect x="140.6" y="1605" width="0.2" height="15.0" fill="rgb(227,115,35)" rx="2" ry="2" />
<text  x="143.60" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (59 samples, 0.32%)</title><rect x="183.8" y="1797" width="3.7" height="15.0" fill="rgb(211,201,50)" rx="2" ry="2" />
<text  x="186.77" y="1807.5" ></text>
</g>
<g >
<title>page_fault (30 samples, 0.16%)</title><rect x="674.7" y="1845" width="1.9" height="15.0" fill="rgb(232,102,19)" rx="2" ry="2" />
<text  x="677.74" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (449 samples, 2.40%)</title><rect x="55.5" y="1573" width="28.4" height="15.0" fill="rgb(206,140,36)" rx="2" ry="2" />
<text  x="58.51" y="1583.5" >[u..</text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (2 samples, 0.01%)</title><rect x="210.2" y="1653" width="0.1" height="15.0" fill="rgb(209,9,40)" rx="2" ry="2" />
<text  x="213.22" y="1663.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (4 samples, 0.02%)</title><rect x="120.4" y="2037" width="0.3" height="15.0" fill="rgb(232,139,48)" rx="2" ry="2" />
<text  x="123.40" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (6 samples, 0.03%)</title><rect x="155.9" y="1797" width="0.4" height="15.0" fill="rgb(226,216,19)" rx="2" ry="2" />
<text  x="158.94" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1188.0" y="565" width="0.2" height="15.0" fill="rgb(226,78,7)" rx="2" ry="2" />
<text  x="1191.04" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (6 samples, 0.03%)</title><rect x="155.9" y="1765" width="0.4" height="15.0" fill="rgb(210,33,41)" rx="2" ry="2" />
<text  x="158.94" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (333 samples, 1.78%)</title><rect x="55.6" y="693" width="21.0" height="15.0" fill="rgb(247,59,20)" rx="2" ry="2" />
<text  x="58.57" y="703.5" ></text>
</g>
<g >
<title>onmt::add_final_token&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (52 samples, 0.28%)</title><rect x="549.4" y="1893" width="3.3" height="15.0" fill="rgb(212,152,45)" rx="2" ry="2" />
<text  x="552.44" y="1903.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.01%)</title><rect x="168.3" y="1605" width="0.1" height="15.0" fill="rgb(242,114,21)" rx="2" ry="2" />
<text  x="171.31" y="1615.5" ></text>
</g>
<g >
<title>clear_page_erms (6 samples, 0.03%)</title><rect x="925.6" y="1893" width="0.4" height="15.0" fill="rgb(210,41,25)" rx="2" ry="2" />
<text  x="928.65" y="1903.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.01%)</title><rect x="493.9" y="1925" width="0.1" height="15.0" fill="rgb(212,39,31)" rx="2" ry="2" />
<text  x="496.89" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (75 samples, 0.40%)</title><rect x="156.6" y="1701" width="4.8" height="15.0" fill="rgb(214,128,49)" rx="2" ry="2" />
<text  x="159.63" y="1711.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (6 samples, 0.03%)</title><rect x="799.3" y="2037" width="0.4" height="15.0" fill="rgb(234,105,35)" rx="2" ry="2" />
<text  x="802.28" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (336 samples, 1.80%)</title><rect x="55.6" y="837" width="21.2" height="15.0" fill="rgb(206,186,25)" rx="2" ry="2" />
<text  x="58.57" y="847.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (18 samples, 0.10%)</title><rect x="504.9" y="2021" width="1.1" height="15.0" fill="rgb(227,44,47)" rx="2" ry="2" />
<text  x="507.88" y="2031.5" ></text>
</g>
<g >
<title>__asan_memcpy (12 samples, 0.06%)</title><rect x="632.3" y="1877" width="0.8" height="15.0" fill="rgb(246,28,31)" rx="2" ry="2" />
<text  x="635.32" y="1887.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (2 samples, 0.01%)</title><rect x="799.7" y="2037" width="0.1" height="15.0" fill="rgb(248,88,20)" rx="2" ry="2" />
<text  x="802.72" y="2047.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;, std::tuple&lt;&gt; &gt; (2 samples, 0.01%)</title><rect x="130.5" y="1925" width="0.1" height="15.0" fill="rgb(232,201,33)" rx="2" ry="2" />
<text  x="133.50" y="1935.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="84.7" y="1573" width="0.1" height="15.0" fill="rgb(227,188,42)" rx="2" ry="2" />
<text  x="87.67" y="1583.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (2 samples, 0.01%)</title><rect x="483.0" y="1845" width="0.2" height="15.0" fill="rgb(238,148,6)" rx="2" ry="2" />
<text  x="486.04" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (343 samples, 1.83%)</title><rect x="189.5" y="1813" width="21.6" height="15.0" fill="rgb(232,171,2)" rx="2" ry="2" />
<text  x="192.46" y="1823.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.03%)</title><rect x="1187.3" y="1317" width="0.3" height="15.0" fill="rgb(245,68,23)" rx="2" ry="2" />
<text  x="1190.29" y="1327.5" ></text>
</g>
<g >
<title>Preprocess (2 samples, 0.01%)</title><rect x="43.4" y="2037" width="0.1" height="15.0" fill="rgb(221,80,42)" rx="2" ry="2" />
<text  x="46.39" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1187.3" y="53" width="0.1" height="15.0" fill="rgb(220,121,24)" rx="2" ry="2" />
<text  x="1190.29" y="63.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (2 samples, 0.01%)</title><rect x="216.7" y="1813" width="0.1" height="15.0" fill="rgb(209,142,21)" rx="2" ry="2" />
<text  x="219.66" y="1823.5" ></text>
</g>
</g>
</svg>
