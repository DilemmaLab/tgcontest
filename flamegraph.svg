<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="2134" onload="init(evt)" viewBox="0 0 1200 2134" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="2134.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="2117" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="2117" > </text>
<g id="frames">
<g >
<title>unmap_vmas (2 samples, 0.01%)</title><rect x="1102.3" y="1893" width="0.1" height="15.0" fill="rgb(239,21,32)" rx="2" ry="2" />
<text  x="1105.30" y="1903.5" ></text>
</g>
<g >
<title>__sanitizer::QuarantineCache&lt;__asan::QuarantineCallback&gt;::MergeBatches (14 samples, 0.07%)</title><rect x="762.9" y="2037" width="0.8" height="15.0" fill="rgb(214,181,50)" rx="2" ry="2" />
<text  x="765.90" y="2047.5" ></text>
</g>
<g >
<title>__asan::AsanChunk::UsedSize (3 samples, 0.01%)</title><rect x="91.6" y="2021" width="0.1" height="15.0" fill="rgb(246,117,18)" rx="2" ry="2" />
<text  x="94.57" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (502 samples, 2.51%)</title><rect x="55.4" y="1765" width="29.6" height="15.0" fill="rgb(250,99,38)" rx="2" ry="2" />
<text  x="58.38" y="1775.5" >[u..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.04%)</title><rect x="1185.9" y="549" width="0.5" height="15.0" fill="rgb(214,93,23)" rx="2" ry="2" />
<text  x="1188.87" y="559.5" ></text>
</g>
<g >
<title>__mod_node_page_state (2 samples, 0.01%)</title><rect x="943.8" y="1925" width="0.1" height="15.0" fill="rgb(224,131,37)" rx="2" ry="2" />
<text  x="946.77" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (444 samples, 2.22%)</title><rect x="55.4" y="1573" width="26.1" height="15.0" fill="rgb(240,119,36)" rx="2" ry="2" />
<text  x="58.38" y="1583.5" >[..</text>
</g>
<g >
<title>[unknown] (564 samples, 2.82%)</title><rect x="55.4" y="1957" width="33.2" height="15.0" fill="rgb(250,150,40)" rx="2" ry="2" />
<text  x="58.38" y="1967.5" >[u..</text>
</g>
<g >
<title>TFastTextEmbedder::GetSentenceEmbedding (1,949 samples, 9.73%)</title><rect x="216.5" y="1989" width="114.9" height="15.0" fill="rgb(226,51,33)" rx="2" ry="2" />
<text  x="219.51" y="1999.5" >TFastTextEmbed..</text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::_M_transform (5 samples, 0.02%)</title><rect x="1147.4" y="2053" width="0.3" height="15.0" fill="rgb(249,100,9)" rx="2" ry="2" />
<text  x="1150.39" y="2063.5" ></text>
</g>
<g >
<title>__interceptor_strlen (78 samples, 0.39%)</title><rect x="748.9" y="1877" width="4.6" height="15.0" fill="rgb(235,67,21)" rx="2" ry="2" />
<text  x="751.87" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13 samples, 0.06%)</title><rect x="1187.0" y="597" width="0.8" height="15.0" fill="rgb(246,216,32)" rx="2" ry="2" />
<text  x="1189.99" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (2 samples, 0.01%)</title><rect x="155.3" y="1861" width="0.2" height="15.0" fill="rgb(232,65,29)" rx="2" ry="2" />
<text  x="158.33" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Scanner&lt;char&gt;::_M_scan_normal (2 samples, 0.01%)</title><rect x="182.5" y="1749" width="0.1" height="15.0" fill="rgb(248,129,41)" rx="2" ry="2" />
<text  x="185.50" y="1759.5" ></text>
</g>
<g >
<title>release_pages (2 samples, 0.01%)</title><rect x="1102.2" y="1813" width="0.1" height="15.0" fill="rgb(239,226,54)" rx="2" ry="2" />
<text  x="1105.19" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (12 samples, 0.06%)</title><rect x="1187.1" y="117" width="0.7" height="15.0" fill="rgb(233,81,25)" rx="2" ry="2" />
<text  x="1190.05" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14 samples, 0.07%)</title><rect x="1186.9" y="1781" width="0.9" height="15.0" fill="rgb(208,217,0)" rx="2" ry="2" />
<text  x="1189.94" y="1791.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (2 samples, 0.01%)</title><rect x="618.2" y="1845" width="0.1" height="15.0" fill="rgb(220,125,36)" rx="2" ry="2" />
<text  x="621.21" y="1855.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (2 samples, 0.01%)</title><rect x="78.8" y="1301" width="0.2" height="15.0" fill="rgb(248,102,6)" rx="2" ry="2" />
<text  x="81.84" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (86 samples, 0.43%)</title><rect x="186.4" y="1653" width="5.1" height="15.0" fill="rgb(243,175,21)" rx="2" ry="2" />
<text  x="189.39" y="1663.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="76.9" y="1221" width="0.1" height="15.0" fill="rgb(223,43,19)" rx="2" ry="2" />
<text  x="79.89" y="1231.5" ></text>
</g>
<g >
<title>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::dump_escaped (3 samples, 0.01%)</title><rect x="518.8" y="1893" width="0.2" height="15.0" fill="rgb(209,119,5)" rx="2" ry="2" />
<text  x="521.85" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="155.7" y="1157" width="0.2" height="15.0" fill="rgb(210,61,46)" rx="2" ry="2" />
<text  x="158.75" y="1167.5" ></text>
</g>
<g >
<title>do_page_fault (3 samples, 0.01%)</title><rect x="518.0" y="1925" width="0.2" height="15.0" fill="rgb(235,182,36)" rx="2" ry="2" />
<text  x="521.02" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (2 samples, 0.01%)</title><rect x="182.7" y="1765" width="0.2" height="15.0" fill="rgb(222,192,0)" rx="2" ry="2" />
<text  x="185.74" y="1775.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (22 samples, 0.11%)</title><rect x="765.6" y="1989" width="1.3" height="15.0" fill="rgb(237,6,23)" rx="2" ry="2" />
<text  x="768.61" y="1999.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (2 samples, 0.01%)</title><rect x="1111.9" y="1861" width="0.1" height="15.0" fill="rgb(252,197,28)" rx="2" ry="2" />
<text  x="1114.85" y="1871.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="84.6" y="1749" width="0.1" height="15.0" fill="rgb(223,180,49)" rx="2" ry="2" />
<text  x="87.61" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.02%)</title><rect x="767.8" y="2021" width="0.3" height="15.0" fill="rgb(217,87,21)" rx="2" ry="2" />
<text  x="770.79" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (322 samples, 1.61%)</title><rect x="55.4" y="485" width="19.0" height="15.0" fill="rgb(235,135,2)" rx="2" ry="2" />
<text  x="58.38" y="495.5" ></text>
</g>
<g >
<title>[unknown] (318 samples, 1.59%)</title><rect x="55.4" y="309" width="18.7" height="15.0" fill="rgb(248,223,3)" rx="2" ry="2" />
<text  x="58.38" y="319.5" ></text>
</g>
<g >
<title>alloc_pages_vma (4 samples, 0.02%)</title><rect x="762.4" y="1941" width="0.3" height="15.0" fill="rgb(237,225,9)" rx="2" ry="2" />
<text  x="765.43" y="1951.5" ></text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (2 samples, 0.01%)</title><rect x="501.7" y="1845" width="0.1" height="15.0" fill="rgb(212,9,54)" rx="2" ry="2" />
<text  x="504.70" y="1855.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::Dictionary (28 samples, 0.14%)</title><rect x="872.1" y="2005" width="1.7" height="15.0" fill="rgb(230,22,30)" rx="2" ry="2" />
<text  x="875.10" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1186.5" y="485" width="0.4" height="15.0" fill="rgb(207,127,42)" rx="2" ry="2" />
<text  x="1189.52" y="495.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (3 samples, 0.01%)</title><rect x="1102.8" y="1877" width="0.2" height="15.0" fill="rgb(234,124,21)" rx="2" ry="2" />
<text  x="1105.83" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="43.5" y="2021" width="0.2" height="15.0" fill="rgb(223,142,46)" rx="2" ry="2" />
<text  x="46.53" y="2031.5" ></text>
</g>
<g >
<title>[libm-2.27.so] (7 samples, 0.03%)</title><rect x="570.4" y="1909" width="0.4" height="15.0" fill="rgb(217,70,50)" rx="2" ry="2" />
<text  x="573.36" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="155.9" y="1189" width="0.2" height="15.0" fill="rgb(224,32,36)" rx="2" ry="2" />
<text  x="158.86" y="1199.5" ></text>
</g>
<g >
<title>[unknown] (362 samples, 1.81%)</title><rect x="55.4" y="1205" width="21.3" height="15.0" fill="rgb(208,196,0)" rx="2" ry="2" />
<text  x="58.38" y="1215.5" >[..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (89 samples, 0.44%)</title><rect x="156.5" y="1701" width="5.3" height="15.0" fill="rgb(206,103,51)" rx="2" ry="2" />
<text  x="159.51" y="1711.5" ></text>
</g>
<g >
<title>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::dump (4 samples, 0.02%)</title><rect x="518.8" y="1925" width="0.3" height="15.0" fill="rgb(205,144,5)" rx="2" ry="2" />
<text  x="521.85" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (179 samples, 0.89%)</title><rect x="128.9" y="1765" width="10.5" height="15.0" fill="rgb(247,226,4)" rx="2" ry="2" />
<text  x="131.87" y="1775.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (1,216 samples, 6.07%)</title><rect x="1028.3" y="2053" width="71.6" height="15.0" fill="rgb(236,105,24)" rx="2" ry="2" />
<text  x="1031.28" y="2063.5" >__saniti..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.04%)</title><rect x="1185.9" y="1045" width="0.5" height="15.0" fill="rgb(207,148,28)" rx="2" ry="2" />
<text  x="1188.87" y="1055.5" ></text>
</g>
<g >
<title>__do_page_fault (40 samples, 0.20%)</title><rect x="510.2" y="1925" width="2.3" height="15.0" fill="rgb(246,207,19)" rx="2" ry="2" />
<text  x="513.18" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.04%)</title><rect x="1185.9" y="1125" width="0.5" height="15.0" fill="rgb(212,227,3)" rx="2" ry="2" />
<text  x="1188.87" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (80 samples, 0.40%)</title><rect x="202.9" y="1749" width="4.7" height="15.0" fill="rgb(235,16,31)" rx="2" ry="2" />
<text  x="205.89" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (337 samples, 1.68%)</title><rect x="55.4" y="1077" width="19.8" height="15.0" fill="rgb(233,15,39)" rx="2" ry="2" />
<text  x="58.38" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="155.7" y="1253" width="0.2" height="15.0" fill="rgb(216,137,39)" rx="2" ry="2" />
<text  x="158.75" y="1263.5" ></text>
</g>
<g >
<title>do_futex (6 samples, 0.03%)</title><rect x="128.0" y="1909" width="0.3" height="15.0" fill="rgb(208,146,15)" rx="2" ry="2" />
<text  x="130.99" y="1919.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::set_case (2 samples, 0.01%)</title><rect x="585.6" y="1893" width="0.1" height="15.0" fill="rgb(216,148,17)" rx="2" ry="2" />
<text  x="588.62" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (322 samples, 1.61%)</title><rect x="55.4" y="517" width="19.0" height="15.0" fill="rgb(215,122,10)" rx="2" ry="2" />
<text  x="58.38" y="527.5" ></text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::xsgetn (3 samples, 0.01%)</title><rect x="1111.8" y="2053" width="0.2" height="15.0" fill="rgb(220,153,45)" rx="2" ry="2" />
<text  x="1114.79" y="2063.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="149.2" y="1669" width="0.1" height="15.0" fill="rgb(221,164,13)" rx="2" ry="2" />
<text  x="152.20" y="1679.5" ></text>
</g>
<g >
<title>GetHost (468 samples, 2.34%)</title><rect x="156.1" y="1957" width="27.6" height="15.0" fill="rgb(221,37,39)" rx="2" ry="2" />
<text  x="159.10" y="1967.5" >G..</text>
</g>
<g >
<title>__sanitizer::internal_mmap (27 samples, 0.13%)</title><rect x="1101.5" y="2053" width="1.6" height="15.0" fill="rgb(232,42,1)" rx="2" ry="2" />
<text  x="1104.48" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13 samples, 0.06%)</title><rect x="1187.0" y="341" width="0.8" height="15.0" fill="rgb(245,56,33)" rx="2" ry="2" />
<text  x="1189.99" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (5 samples, 0.02%)</title><rect x="214.2" y="1829" width="0.3" height="15.0" fill="rgb(209,8,14)" rx="2" ry="2" />
<text  x="217.21" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.04%)</title><rect x="1185.9" y="805" width="0.5" height="15.0" fill="rgb(233,166,11)" rx="2" ry="2" />
<text  x="1188.87" y="815.5" ></text>
</g>
<g >
<title>__asan_memcpy (2 samples, 0.01%)</title><rect x="194.0" y="1589" width="0.1" height="15.0" fill="rgb(232,67,48)" rx="2" ry="2" />
<text  x="197.00" y="1599.5" ></text>
</g>
<g >
<title>__pthread_getspecific (3 samples, 0.01%)</title><rect x="199.9" y="1605" width="0.2" height="15.0" fill="rgb(249,3,9)" rx="2" ry="2" />
<text  x="202.95" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1185.6" y="1877" width="0.1" height="15.0" fill="rgb(222,41,12)" rx="2" ry="2" />
<text  x="1188.58" y="1887.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="75.4" y="1093" width="0.1" height="15.0" fill="rgb(245,13,3)" rx="2" ry="2" />
<text  x="78.36" y="1103.5" ></text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::get (4 samples, 0.02%)</title><rect x="120.1" y="1925" width="0.3" height="15.0" fill="rgb(216,185,22)" rx="2" ry="2" />
<text  x="123.15" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="155.7" y="1317" width="0.2" height="15.0" fill="rgb(240,192,36)" rx="2" ry="2" />
<text  x="158.75" y="1327.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.03%)</title><rect x="206.8" y="1637" width="0.4" height="15.0" fill="rgb(224,208,20)" rx="2" ry="2" />
<text  x="209.78" y="1647.5" ></text>
</g>
<g >
<title>page_fault (28 samples, 0.14%)</title><rect x="500.6" y="1925" width="1.6" height="15.0" fill="rgb(215,82,42)" rx="2" ry="2" />
<text  x="503.58" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (109 samples, 0.54%)</title><rect x="196.3" y="1717" width="6.4" height="15.0" fill="rgb(212,179,51)" rx="2" ry="2" />
<text  x="199.29" y="1727.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (28 samples, 0.14%)</title><rect x="27.0" y="1957" width="1.7" height="15.0" fill="rgb(242,157,35)" rx="2" ry="2" />
<text  x="30.03" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (9 samples, 0.04%)</title><rect x="1185.9" y="389" width="0.5" height="15.0" fill="rgb(232,18,18)" rx="2" ry="2" />
<text  x="1188.87" y="399.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (6 samples, 0.03%)</title><rect x="818.1" y="2005" width="0.3" height="15.0" fill="rgb(223,97,7)" rx="2" ry="2" />
<text  x="821.06" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.04%)</title><rect x="1185.9" y="1413" width="0.5" height="15.0" fill="rgb(250,184,28)" rx="2" ry="2" />
<text  x="1188.87" y="1423.5" ></text>
</g>
<g >
<title>std::locale::locale (4 samples, 0.02%)</title><rect x="517.0" y="1973" width="0.2" height="15.0" fill="rgb(242,123,3)" rx="2" ry="2" />
<text  x="519.96" y="1983.5" ></text>
</g>
<g >
<title>__asan::AsanTSDGet (38 samples, 0.19%)</title><rect x="968.9" y="2053" width="2.2" height="15.0" fill="rgb(214,196,25)" rx="2" ry="2" />
<text  x="971.88" y="2063.5" ></text>
</g>
<g >
<title>fasttext::Vector::Vector (2 samples, 0.01%)</title><rect x="333.6" y="1989" width="0.1" height="15.0" fill="rgb(228,24,38)" rx="2" ry="2" />
<text  x="336.61" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1186.5" y="1141" width="0.4" height="15.0" fill="rgb(212,140,52)" rx="2" ry="2" />
<text  x="1189.46" y="1151.5" ></text>
</g>
<g >
<title>vma_merge (2 samples, 0.01%)</title><rect x="1102.6" y="1925" width="0.1" height="15.0" fill="rgb(241,79,1)" rx="2" ry="2" />
<text  x="1105.60" y="1935.5" ></text>
</g>
<g >
<title>alloc_pages_vma (2 samples, 0.01%)</title><rect x="1103.8" y="1941" width="0.2" height="15.0" fill="rgb(218,57,13)" rx="2" ry="2" />
<text  x="1106.84" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (9 samples, 0.04%)</title><rect x="1185.9" y="197" width="0.5" height="15.0" fill="rgb(245,53,23)" rx="2" ry="2" />
<text  x="1188.87" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1185.6" y="1445" width="0.1" height="15.0" fill="rgb(230,105,24)" rx="2" ry="2" />
<text  x="1188.58" y="1455.5" ></text>
</g>
<g >
<title>wp_page_copy (3 samples, 0.01%)</title><rect x="1099.6" y="1941" width="0.2" height="15.0" fill="rgb(244,52,53)" rx="2" ry="2" />
<text  x="1102.59" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (326 samples, 1.63%)</title><rect x="55.4" y="693" width="19.2" height="15.0" fill="rgb(229,106,32)" rx="2" ry="2" />
<text  x="58.38" y="703.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (13 samples, 0.06%)</title><rect x="650.7" y="1877" width="0.8" height="15.0" fill="rgb(229,35,14)" rx="2" ry="2" />
<text  x="653.68" y="1887.5" ></text>
</g>
<g >
<title>__lsan::MarkIndirectlyLeakedCb (3 samples, 0.01%)</title><rect x="522.3" y="2037" width="0.1" height="15.0" fill="rgb(216,177,21)" rx="2" ry="2" />
<text  x="525.26" y="2047.5" ></text>
</g>
<g >
<title>std::vector&lt;char, std::allocator&lt;char&gt; &gt;::push_back (5 samples, 0.02%)</title><rect x="873.8" y="2037" width="0.3" height="15.0" fill="rgb(227,215,35)" rx="2" ry="2" />
<text  x="876.81" y="2047.5" ></text>
</g>
<g >
<title>__sanitizer::QuarantineCache&lt;__asan::QuarantineCallback&gt;::Enqueue (90 samples, 0.45%)</title><rect x="757.6" y="2037" width="5.3" height="15.0" fill="rgb(250,156,42)" rx="2" ry="2" />
<text  x="760.59" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (68 samples, 0.34%)</title><rect x="172.1" y="1733" width="4.0" height="15.0" fill="rgb(226,203,51)" rx="2" ry="2" />
<text  x="175.13" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (511 samples, 2.55%)</title><rect x="55.4" y="1813" width="30.1" height="15.0" fill="rgb(233,139,30)" rx="2" ry="2" />
<text  x="58.38" y="1823.5" >[u..</text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;float, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;float, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;float, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (2 samples, 0.01%)</title><rect x="876.9" y="2037" width="0.1" height="15.0" fill="rgb(251,18,51)" rx="2" ry="2" />
<text  x="879.88" y="2047.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (22 samples, 0.11%)</title><rect x="1151.9" y="2037" width="1.3" height="15.0" fill="rgb(219,69,47)" rx="2" ry="2" />
<text  x="1154.93" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1185.6" y="1461" width="0.1" height="15.0" fill="rgb(244,31,18)" rx="2" ry="2" />
<text  x="1188.58" y="1471.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="214.9" y="1749" width="0.1" height="15.0" fill="rgb(251,208,32)" rx="2" ry="2" />
<text  x="217.92" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13 samples, 0.06%)</title><rect x="1187.0" y="837" width="0.8" height="15.0" fill="rgb(238,4,32)" rx="2" ry="2" />
<text  x="1189.99" y="847.5" ></text>
</g>
<g >
<title>__dynamic_cast (4 samples, 0.02%)</title><rect x="188.0" y="1573" width="0.3" height="15.0" fill="rgb(219,170,34)" rx="2" ry="2" />
<text  x="191.04" y="1583.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.01%)</title><rect x="1111.3" y="2053" width="0.2" height="15.0" fill="rgb(254,212,50)" rx="2" ry="2" />
<text  x="1114.32" y="2063.5" ></text>
</g>
<g >
<title>handle_mm_fault (33 samples, 0.16%)</title><rect x="510.6" y="1909" width="1.9" height="15.0" fill="rgb(225,34,48)" rx="2" ry="2" />
<text  x="513.60" y="1919.5" ></text>
</g>
<g >
<title>smp_call_function_single (20 samples, 0.10%)</title><rect x="947.1" y="1829" width="1.2" height="15.0" fill="rgb(244,1,27)" rx="2" ry="2" />
<text  x="950.13" y="1839.5" ></text>
</g>
<g >
<title>onmt::CaseModifier::extract_case_type (820 samples, 4.10%)</title><rect x="585.7" y="1893" width="48.4" height="15.0" fill="rgb(208,178,39)" rx="2" ry="2" />
<text  x="588.74" y="1903.5" >onmt..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.05%)</title><rect x="215.7" y="1813" width="0.6" height="15.0" fill="rgb(209,188,16)" rx="2" ry="2" />
<text  x="218.68" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (312 samples, 1.56%)</title><rect x="55.4" y="181" width="18.4" height="15.0" fill="rgb(225,114,50)" rx="2" ry="2" />
<text  x="58.38" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="155.7" y="1653" width="0.2" height="15.0" fill="rgb(242,181,36)" rx="2" ry="2" />
<text  x="158.75" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.05%)</title><rect x="1185.8" y="1813" width="0.6" height="15.0" fill="rgb(218,214,30)" rx="2" ry="2" />
<text  x="1188.76" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (90 samples, 0.45%)</title><rect x="133.9" y="1685" width="5.3" height="15.0" fill="rgb(233,28,12)" rx="2" ry="2" />
<text  x="136.88" y="1695.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (3 samples, 0.01%)</title><rect x="85.0" y="1765" width="0.1" height="15.0" fill="rgb(251,164,12)" rx="2" ry="2" />
<text  x="87.97" y="1775.5" ></text>
</g>
<g >
<title>fasttext::SoftmaxLoss::computeOutput (2 samples, 0.01%)</title><rect x="1104.4" y="2037" width="0.1" height="15.0" fill="rgb(243,98,44)" rx="2" ry="2" />
<text  x="1107.37" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.05%)</title><rect x="215.7" y="1861" width="0.6" height="15.0" fill="rgb(241,94,29)" rx="2" ry="2" />
<text  x="218.68" y="1871.5" ></text>
</g>
<g >
<title>__lsan::CollectLeaksCb (4 samples, 0.02%)</title><rect x="92.0" y="2021" width="0.2" height="15.0" fill="rgb(236,190,21)" rx="2" ry="2" />
<text  x="94.98" y="2031.5" ></text>
</g>
<g >
<title>__asan::Allocator::Deallocate (10 samples, 0.05%)</title><rect x="1151.3" y="2037" width="0.6" height="15.0" fill="rgb(243,226,15)" rx="2" ry="2" />
<text  x="1154.34" y="2047.5" ></text>
</g>
<g >
<title>__pthread_getspecific (3 samples, 0.01%)</title><rect x="131.7" y="1557" width="0.2" height="15.0" fill="rgb(227,84,23)" rx="2" ry="2" />
<text  x="134.70" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="216.2" y="1621" width="0.1" height="15.0" fill="rgb(245,95,47)" rx="2" ry="2" />
<text  x="219.16" y="1631.5" ></text>
</g>
<g >
<title>TDocument::TDocument (7 samples, 0.03%)</title><rect x="336.4" y="2005" width="0.4" height="15.0" fill="rgb(228,213,20)" rx="2" ry="2" />
<text  x="339.38" y="2015.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="175.9" y="1653" width="0.1" height="15.0" fill="rgb(253,65,3)" rx="2" ry="2" />
<text  x="178.90" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (439 samples, 2.19%)</title><rect x="156.4" y="1877" width="25.9" height="15.0" fill="rgb(230,71,25)" rx="2" ry="2" />
<text  x="159.39" y="1887.5" >s..</text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="872.0" y="2021" width="0.1" height="15.0" fill="rgb(251,62,22)" rx="2" ry="2" />
<text  x="874.99" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14 samples, 0.07%)</title><rect x="1186.9" y="1589" width="0.9" height="15.0" fill="rgb(247,185,34)" rx="2" ry="2" />
<text  x="1189.94" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (176 samples, 0.88%)</title><rect x="185.9" y="1765" width="10.4" height="15.0" fill="rgb(215,118,40)" rx="2" ry="2" />
<text  x="188.92" y="1775.5" ></text>
</g>
<g >
<title>__asan_memcpy (10 samples, 0.05%)</title><rect x="595.8" y="1877" width="0.5" height="15.0" fill="rgb(232,147,30)" rx="2" ry="2" />
<text  x="598.76" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1186.5" y="117" width="0.4" height="15.0" fill="rgb(246,49,25)" rx="2" ry="2" />
<text  x="1189.52" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13 samples, 0.06%)</title><rect x="1187.0" y="261" width="0.8" height="15.0" fill="rgb(247,181,19)" rx="2" ry="2" />
<text  x="1189.99" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (353 samples, 1.76%)</title><rect x="128.9" y="1813" width="20.8" height="15.0" fill="rgb(237,224,49)" rx="2" ry="2" />
<text  x="131.87" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="155.9" y="1349" width="0.2" height="15.0" fill="rgb(220,168,21)" rx="2" ry="2" />
<text  x="158.86" y="1359.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.01%)</title><rect x="180.1" y="1653" width="0.2" height="15.0" fill="rgb(222,19,29)" rx="2" ry="2" />
<text  x="183.09" y="1663.5" ></text>
</g>
<g >
<title>__interceptor_free (2 samples, 0.01%)</title><rect x="222.2" y="1941" width="0.1" height="15.0" fill="rgb(223,107,1)" rx="2" ry="2" />
<text  x="225.23" y="1951.5" ></text>
</g>
<g >
<title>__pthread_getspecific (3 samples, 0.01%)</title><rect x="142.5" y="1605" width="0.2" height="15.0" fill="rgb(220,70,32)" rx="2" ry="2" />
<text  x="145.55" y="1615.5" ></text>
</g>
<g >
<title>handle_mm_fault (3 samples, 0.01%)</title><rect x="1024.2" y="1989" width="0.1" height="15.0" fill="rgb(218,33,53)" rx="2" ry="2" />
<text  x="1027.16" y="1999.5" ></text>
</g>
<g >
<title>perf_iterate_ctx (2 samples, 0.01%)</title><rect x="766.6" y="1877" width="0.1" height="15.0" fill="rgb(234,4,50)" rx="2" ry="2" />
<text  x="769.61" y="1887.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (6 samples, 0.03%)</title><rect x="695.7" y="1717" width="0.4" height="15.0" fill="rgb(214,177,54)" rx="2" ry="2" />
<text  x="698.71" y="1727.5" ></text>
</g>
<g >
<title>__interceptor_strlen (3 samples, 0.01%)</title><rect x="599.8" y="1861" width="0.2" height="15.0" fill="rgb(222,159,54)" rx="2" ry="2" />
<text  x="602.82" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13 samples, 0.06%)</title><rect x="1187.0" y="1269" width="0.8" height="15.0" fill="rgb(251,41,28)" rx="2" ry="2" />
<text  x="1189.99" y="1279.5" ></text>
</g>
<g >
<title>operator delete (7 samples, 0.03%)</title><rect x="206.4" y="1637" width="0.4" height="15.0" fill="rgb(216,135,11)" rx="2" ry="2" />
<text  x="209.37" y="1647.5" ></text>
</g>
<g >
<title>Eigen::internal::general_matrix_matrix_product&lt;long, float, 0, false, float, 1, false, 0, 1&gt;::run (135 samples, 0.67%)</title><rect x="502.2" y="1925" width="8.0" height="15.0" fill="rgb(239,228,15)" rx="2" ry="2" />
<text  x="505.23" y="1935.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (2 samples, 0.01%)</title><rect x="88.0" y="1765" width="0.1" height="15.0" fill="rgb(225,145,52)" rx="2" ry="2" />
<text  x="90.97" y="1775.5" ></text>
</g>
<g >
<title>__handle_mm_fault (16 samples, 0.08%)</title><rect x="54.3" y="1957" width="1.0" height="15.0" fill="rgb(250,32,28)" rx="2" ry="2" />
<text  x="57.32" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (2 samples, 0.01%)</title><rect x="214.7" y="1845" width="0.1" height="15.0" fill="rgb(210,224,26)" rx="2" ry="2" />
<text  x="217.68" y="1855.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="181.2" y="1669" width="0.1" height="15.0" fill="rgb(212,16,3)" rx="2" ry="2" />
<text  x="184.21" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (481 samples, 2.40%)</title><rect x="55.4" y="1701" width="28.3" height="15.0" fill="rgb(240,31,45)" rx="2" ry="2" />
<text  x="58.38" y="1711.5" >[u..</text>
</g>
<g >
<title>prepare_exit_to_usermode (2 samples, 0.01%)</title><rect x="801.3" y="2005" width="0.1" height="15.0" fill="rgb(207,32,15)" rx="2" ry="2" />
<text  x="804.26" y="2015.5" ></text>
</g>
<g >
<title>rwsem_wake (2 samples, 0.01%)</title><rect x="948.7" y="1957" width="0.1" height="15.0" fill="rgb(218,75,46)" rx="2" ry="2" />
<text  x="951.66" y="1967.5" ></text>
</g>
<g >
<title>alloc_pages_vma (14 samples, 0.07%)</title><rect x="943.9" y="1925" width="0.9" height="15.0" fill="rgb(237,206,0)" rx="2" ry="2" />
<text  x="946.95" y="1935.5" ></text>
</g>
<g >
<title>__dynamic_cast (6 samples, 0.03%)</title><rect x="134.4" y="1621" width="0.4" height="15.0" fill="rgb(239,52,22)" rx="2" ry="2" />
<text  x="137.41" y="1631.5" ></text>
</g>
<g >
<title>__asan::PoisonShadow (87 samples, 0.43%)</title><rect x="48.9" y="2021" width="5.1" height="15.0" fill="rgb(207,142,28)" rx="2" ry="2" />
<text  x="51.90" y="2031.5" ></text>
</g>
<g >
<title>TDocument::~TDocument (2 samples, 0.01%)</title><rect x="119.3" y="1989" width="0.1" height="15.0" fill="rgb(218,180,7)" rx="2" ry="2" />
<text  x="122.32" y="1999.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (2 samples, 0.01%)</title><rect x="543.4" y="1909" width="0.1" height="15.0" fill="rgb(211,139,27)" rx="2" ry="2" />
<text  x="546.36" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1186.5" y="1381" width="0.4" height="15.0" fill="rgb(214,165,24)" rx="2" ry="2" />
<text  x="1189.46" y="1391.5" ></text>
</g>
<g >
<title>[unknown] (485 samples, 2.42%)</title><rect x="55.4" y="1717" width="28.6" height="15.0" fill="rgb(212,153,41)" rx="2" ry="2" />
<text  x="58.38" y="1727.5" >[u..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="183.4" y="1013" width="0.1" height="15.0" fill="rgb(225,42,25)" rx="2" ry="2" />
<text  x="186.39" y="1023.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (8 samples, 0.04%)</title><rect x="136.1" y="1589" width="0.5" height="15.0" fill="rgb(246,39,38)" rx="2" ry="2" />
<text  x="139.12" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="155.7" y="1445" width="0.2" height="15.0" fill="rgb(222,78,47)" rx="2" ry="2" />
<text  x="158.75" y="1455.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="540.6" y="1957" width="0.1" height="15.0" fill="rgb(253,164,16)" rx="2" ry="2" />
<text  x="543.59" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1185.6" y="1925" width="0.1" height="15.0" fill="rgb(246,6,28)" rx="2" ry="2" />
<text  x="1188.58" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="155.9" y="869" width="0.1" height="15.0" fill="rgb(244,181,54)" rx="2" ry="2" />
<text  x="158.86" y="879.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::addSubwords (3 samples, 0.01%)</title><rect x="767.6" y="2037" width="0.2" height="15.0" fill="rgb(205,227,9)" rx="2" ry="2" />
<text  x="770.61" y="2047.5" ></text>
</g>
<g >
<title>memcpy (5 samples, 0.02%)</title><rect x="1119.6" y="2037" width="0.3" height="15.0" fill="rgb(226,58,25)" rx="2" ry="2" />
<text  x="1122.63" y="2047.5" ></text>
</g>
<g >
<title>__do_page_fault (9 samples, 0.04%)</title><rect x="650.9" y="1829" width="0.6" height="15.0" fill="rgb(240,99,14)" rx="2" ry="2" />
<text  x="653.92" y="1839.5" ></text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.01%)</title><rect x="204.6" y="1653" width="0.2" height="15.0" fill="rgb(235,208,30)" rx="2" ry="2" />
<text  x="207.60" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (72 samples, 0.36%)</title><rect x="167.3" y="1621" width="4.2" height="15.0" fill="rgb(229,207,33)" rx="2" ry="2" />
<text  x="170.30" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.04%)</title><rect x="1185.9" y="1173" width="0.5" height="15.0" fill="rgb(251,201,4)" rx="2" ry="2" />
<text  x="1188.87" y="1183.5" ></text>
</g>
<g >
<title>__asan::asan_memalign (7 samples, 0.03%)</title><rect x="1161.8" y="2037" width="0.4" height="15.0" fill="rgb(227,64,18)" rx="2" ry="2" />
<text  x="1164.83" y="2047.5" ></text>
</g>
<g >
<title>alloc_pages_vma (2 samples, 0.01%)</title><rect x="1028.0" y="1957" width="0.2" height="15.0" fill="rgb(211,186,49)" rx="2" ry="2" />
<text  x="1031.05" y="1967.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (46 samples, 0.23%)</title><rect x="141.0" y="1621" width="2.7" height="15.0" fill="rgb(250,173,13)" rx="2" ry="2" />
<text  x="143.95" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (326 samples, 1.63%)</title><rect x="55.4" y="677" width="19.2" height="15.0" fill="rgb(241,123,9)" rx="2" ry="2" />
<text  x="58.38" y="687.5" ></text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::scan_string (115 samples, 0.57%)</title><rect x="120.5" y="1941" width="6.8" height="15.0" fill="rgb(240,49,36)" rx="2" ry="2" />
<text  x="123.50" y="1951.5" ></text>
</g>
<g >
<title>nlohmann::detail::input_stream_adapter::get_character (2 samples, 0.01%)</title><rect x="120.3" y="1909" width="0.1" height="15.0" fill="rgb(254,222,13)" rx="2" ry="2" />
<text  x="123.27" y="1919.5" ></text>
</g>
<g >
<title>memcpy (2 samples, 0.01%)</title><rect x="599.3" y="1877" width="0.1" height="15.0" fill="rgb(233,36,3)" rx="2" ry="2" />
<text  x="602.29" y="1887.5" ></text>
</g>
<g >
<title>do_wp_page (13 samples, 0.06%)</title><rect x="54.5" y="1941" width="0.8" height="15.0" fill="rgb(218,205,20)" rx="2" ry="2" />
<text  x="57.50" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.04%)</title><rect x="1185.9" y="69" width="0.5" height="15.0" fill="rgb(219,52,10)" rx="2" ry="2" />
<text  x="1188.87" y="79.5" ></text>
</g>
<g >
<title>native_flush_tlb_others (2 samples, 0.01%)</title><rect x="80.0" y="1301" width="0.1" height="15.0" fill="rgb(227,83,39)" rx="2" ry="2" />
<text  x="82.96" y="1311.5" ></text>
</g>
<g >
<title>__do_page_fault (5 samples, 0.02%)</title><rect x="1024.0" y="2005" width="0.3" height="15.0" fill="rgb(249,152,43)" rx="2" ry="2" />
<text  x="1027.04" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (14 samples, 0.07%)</title><rect x="1186.9" y="1717" width="0.9" height="15.0" fill="rgb(248,62,5)" rx="2" ry="2" />
<text  x="1189.94" y="1727.5" ></text>
</g>
<g >
<title>finish_task_switch (2 samples, 0.01%)</title><rect x="31.1" y="1909" width="0.1" height="15.0" fill="rgb(233,150,19)" rx="2" ry="2" />
<text  x="34.10" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1185.6" y="1557" width="0.1" height="15.0" fill="rgb(217,86,37)" rx="2" ry="2" />
<text  x="1188.58" y="1567.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::append (10 samples, 0.05%)</title><rect x="654.9" y="1877" width="0.6" height="15.0" fill="rgb(214,167,11)" rx="2" ry="2" />
<text  x="657.93" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (13 samples, 0.06%)</title><rect x="1187.0" y="325" width="0.8" height="15.0" fill="rgb(219,30,50)" rx="2" ry="2" />
<text  x="1189.99" y="335.5" ></text>
</g>
<g >
<title>std::istream::sentry::sentry (7 samples, 0.03%)</title><rect x="812.3" y="2005" width="0.5" height="15.0" fill="rgb(211,134,40)" rx="2" ry="2" />
<text  x="815.34" y="2015.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (185 samples, 0.92%)</title><rect x="44.4" y="2037" width="10.9" height="15.0" fill="rgb(233,154,3)" rx="2" ry="2" />
<text  x="47.36" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (8 samples, 0.04%)</title><rect x="1186.4" y="1701" width="0.5" height="15.0" fill="rgb(219,190,0)" rx="2" ry="2" />
<text  x="1189.40" y="1711.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="77.5" y="1269" width="0.2" height="15.0" fill="rgb(222,76,7)" rx="2" ry="2" />
<text  x="80.54" y="1279.5" ></text>
</g>
<g >
<title>[unknown] (315 samples, 1.57%)</title><rect x="55.4" y="277" width="18.5" height="15.0" fill="rgb(222,225,16)" rx="2" ry="2" />
<text  x="58.38" y="287.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (13 samples, 0.06%)</title><rect x="1146.0" y="2037" width="0.7" height="15.0" fill="rgb(229,5,44)" rx="2" ry="2" />
<text  x="1148.98" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="155.9" y="1109" width="0.2" height="15.0" fill="rgb(246,105,35)" rx="2" ry="2" />
<text  x="158.86" y="1119.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="149.4" y="1733" width="0.2" height="15.0" fill="rgb(224,58,39)" rx="2" ry="2" />
<text  x="152.44" y="1743.5" ></text>
</g>
<g >
<title>__asan_memmove (3 samples, 0.01%)</title><rect x="322.0" y="1941" width="0.2" height="15.0" fill="rgb(233,36,22)" rx="2" ry="2" />
<text  x="325.00" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (2 samples, 0.01%)</title><rect x="214.4" y="1733" width="0.1" height="15.0" fill="rgb(247,10,41)" rx="2" ry="2" />
<text  x="217.39" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="216.2" y="1717" width="0.1" height="15.0" fill="rgb(229,63,26)" rx="2" ry="2" />
<text  x="219.16" y="1727.5" ></text>
</g>
<g >
<title>__sanitizer::internal_munmap (2 samples, 0.01%)</title><rect x="76.8" y="1205" width="0.1" height="15.0" fill="rgb(239,158,14)" rx="2" ry="2" />
<text  x="79.77" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="215.7" y="1717" width="0.4" height="15.0" fill="rgb(219,58,10)" rx="2" ry="2" />
<text  x="218.68" y="1727.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.01%)</title><rect x="142.9" y="1605" width="0.2" height="15.0" fill="rgb(213,66,5)" rx="2" ry="2" />
<text  x="145.90" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1186.5" y="837" width="0.4" height="15.0" fill="rgb(241,104,2)" rx="2" ry="2" />
<text  x="1189.52" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (13 samples, 0.06%)</title><rect x="1187.0" y="1093" width="0.8" height="15.0" fill="rgb(231,198,33)" rx="2" ry="2" />
<text  x="1189.99" y="1103.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (5 samples, 0.02%)</title><rect x="501.9" y="1829" width="0.3" height="15.0" fill="rgb(235,212,10)" rx="2" ry="2" />
<text  x="504.87" y="1839.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (22 samples, 0.11%)</title><rect x="765.6" y="1973" width="1.3" height="15.0" fill="rgb(254,143,40)" rx="2" ry="2" />
<text  x="768.61" y="1983.5" ></text>
</g>
<g >
<title>do_page_fault (6 samples, 0.03%)</title><rect x="1027.9" y="2021" width="0.4" height="15.0" fill="rgb(249,46,14)" rx="2" ry="2" />
<text  x="1030.93" y="2031.5" ></text>
</g>
<g >
<title>__asan_memset (13 samples, 0.06%)</title><rect x="653.0" y="1877" width="0.7" height="15.0" fill="rgb(234,166,33)" rx="2" ry="2" />
<text  x="655.98" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (371 samples, 1.85%)</title><rect x="55.4" y="1253" width="21.8" height="15.0" fill="rgb(234,76,5)" rx="2" ry="2" />
<text  x="58.38" y="1263.5" >[..</text>
</g>
<g >
<title>std::istream::sentry::sentry (2 samples, 0.01%)</title><rect x="1188.0" y="2053" width="0.1" height="15.0" fill="rgb(246,140,29)" rx="2" ry="2" />
<text  x="1191.00" y="2063.5" ></text>
</g>
<g >
<title>onmt::get_alphabet_id (4 samples, 0.02%)</title><rect x="656.2" y="1877" width="0.3" height="15.0" fill="rgb(215,108,29)" rx="2" ry="2" />
<text  x="659.22" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="156.0" y="917" width="0.1" height="15.0" fill="rgb(206,14,40)" rx="2" ry="2" />
<text  x="158.98" y="927.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (2 samples, 0.01%)</title><rect x="85.7" y="1701" width="0.1" height="15.0" fill="rgb(243,124,27)" rx="2" ry="2" />
<text  x="88.67" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="215.9" y="1429" width="0.2" height="15.0" fill="rgb(220,43,23)" rx="2" ry="2" />
<text  x="218.86" y="1439.5" ></text>
</g>
<g >
<title>__dynamic_cast (4 samples, 0.02%)</title><rect x="177.1" y="1685" width="0.2" height="15.0" fill="rgb(216,126,22)" rx="2" ry="2" />
<text  x="180.08" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="155.7" y="1621" width="0.2" height="15.0" fill="rgb(234,147,49)" rx="2" ry="2" />
<text  x="158.75" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="155.9" y="1477" width="0.2" height="15.0" fill="rgb(215,222,36)" rx="2" ry="2" />
<text  x="158.86" y="1487.5" ></text>
</g>
<g >
<title>[unknown] (313 samples, 1.56%)</title><rect x="55.4" y="213" width="18.4" height="15.0" fill="rgb(223,184,22)" rx="2" ry="2" />
<text  x="58.38" y="223.5" ></text>
</g>
<g >
<title>__handle_mm_fault (11 samples, 0.05%)</title><rect x="680.2" y="1781" width="0.6" height="15.0" fill="rgb(230,83,35)" rx="2" ry="2" />
<text  x="683.15" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1186.5" y="405" width="0.4" height="15.0" fill="rgb(216,219,12)" rx="2" ry="2" />
<text  x="1189.52" y="415.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (3 samples, 0.01%)</title><rect x="87.9" y="1861" width="0.2" height="15.0" fill="rgb(250,22,34)" rx="2" ry="2" />
<text  x="90.91" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.04%)</title><rect x="1185.9" y="1237" width="0.5" height="15.0" fill="rgb(227,228,0)" rx="2" ry="2" />
<text  x="1188.87" y="1247.5" ></text>
</g>
<g >
<title>do_page_fault (9 samples, 0.04%)</title><rect x="650.9" y="1845" width="0.6" height="15.0" fill="rgb(251,51,46)" rx="2" ry="2" />
<text  x="653.92" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1186.5" y="645" width="0.4" height="15.0" fill="rgb(214,98,30)" rx="2" ry="2" />
<text  x="1189.52" y="655.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (2 samples, 0.01%)</title><rect x="174.7" y="1621" width="0.1" height="15.0" fill="rgb(218,182,29)" rx="2" ry="2" />
<text  x="177.72" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.04%)</title><rect x="1186.4" y="1861" width="0.5" height="15.0" fill="rgb(213,13,25)" rx="2" ry="2" />
<text  x="1189.40" y="1871.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="84.8" y="1733" width="0.2" height="15.0" fill="rgb(226,117,50)" rx="2" ry="2" />
<text  x="87.85" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="155.7" y="1541" width="0.2" height="15.0" fill="rgb(233,192,6)" rx="2" ry="2" />
<text  x="158.75" y="1551.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::basic_json (2 samples, 0.01%)</title><rect x="519.9" y="1973" width="0.1" height="15.0" fill="rgb(242,90,42)" rx="2" ry="2" />
<text  x="522.91" y="1983.5" ></text>
</g>
<g >
<title>page_fault (39 samples, 0.19%)</title><rect x="694.2" y="1845" width="2.3" height="15.0" fill="rgb(215,99,13)" rx="2" ry="2" />
<text  x="697.24" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (88 samples, 0.44%)</title><rect x="144.3" y="1733" width="5.1" height="15.0" fill="rgb(239,42,7)" rx="2" ry="2" />
<text  x="147.25" y="1743.5" ></text>
</g>
<g >
<title>page_fault (9 samples, 0.04%)</title><rect x="650.9" y="1861" width="0.6" height="15.0" fill="rgb(230,55,44)" rx="2" ry="2" />
<text  x="653.92" y="1871.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (3 samples, 0.01%)</title><rect x="85.5" y="1813" width="0.2" height="15.0" fill="rgb(214,60,7)" rx="2" ry="2" />
<text  x="88.50" y="1823.5" ></text>
</g>
<g >
<title>fasttext::Matrix::size (8 samples, 0.04%)</title><rect x="769.3" y="2037" width="0.4" height="15.0" fill="rgb(226,216,54)" rx="2" ry="2" />
<text  x="772.26" y="2047.5" ></text>
</g>
<g >
<title>__asan_memset (6 samples, 0.03%)</title><rect x="581.5" y="1893" width="0.3" height="15.0" fill="rgb(237,17,39)" rx="2" ry="2" />
<text  x="584.49" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="183.3" y="1237" width="0.2" height="15.0" fill="rgb(237,78,52)" rx="2" ry="2" />
<text  x="186.33" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1186.5" y="421" width="0.4" height="15.0" fill="rgb(218,101,38)" rx="2" ry="2" />
<text  x="1189.52" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (9 samples, 0.04%)</title><rect x="1185.9" y="533" width="0.5" height="15.0" fill="rgb(217,45,53)" rx="2" ry="2" />
<text  x="1188.87" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (82 samples, 0.41%)</title><rect x="139.4" y="1765" width="4.9" height="15.0" fill="rgb(206,173,0)" rx="2" ry="2" />
<text  x="142.42" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="155.9" y="629" width="0.1" height="15.0" fill="rgb(253,30,30)" rx="2" ry="2" />
<text  x="158.86" y="639.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::Unwind (8 samples, 0.04%)</title><rect x="618.3" y="1845" width="0.5" height="15.0" fill="rgb(245,79,40)" rx="2" ry="2" />
<text  x="621.33" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.02%)</title><rect x="155.9" y="1461" width="0.2" height="15.0" fill="rgb(238,144,52)" rx="2" ry="2" />
<text  x="158.86" y="1471.5" ></text>
</g>
<g >
<title>up_write (2 samples, 0.01%)</title><rect x="766.8" y="1941" width="0.1" height="15.0" fill="rgb(226,140,10)" rx="2" ry="2" />
<text  x="769.79" y="1951.5" ></text>
</g>
<g >
<title>ptep_clear_flush (5 samples, 0.02%)</title><rect x="55.0" y="1909" width="0.3" height="15.0" fill="rgb(241,91,11)" rx="2" ry="2" />
<text  x="57.97" y="1919.5" ></text>
</g>
<g >
<title>wp_page_copy (84 samples, 0.42%)</title><rect x="943.5" y="1941" width="5.0" height="15.0" fill="rgb(206,56,31)" rx="2" ry="2" />
<text  x="946.53" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1186.5" y="1077" width="0.4" height="15.0" fill="rgb(205,8,21)" rx="2" ry="2" />
<text  x="1189.52" y="1087.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (2 samples, 0.01%)</title><rect x="147.8" y="1637" width="0.1" height="15.0" fill="rgb(235,15,19)" rx="2" ry="2" />
<text  x="150.79" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1186.5" y="853" width="0.4" height="15.0" fill="rgb(236,122,39)" rx="2" ry="2" />
<text  x="1189.52" y="863.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::reserve (19 samples, 0.09%)</title><rect x="875.5" y="2037" width="1.1" height="15.0" fill="rgb(223,225,10)" rx="2" ry="2" />
<text  x="878.52" y="2047.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (8 samples, 0.04%)</title><rect x="766.9" y="1989" width="0.5" height="15.0" fill="rgb(225,140,10)" rx="2" ry="2" />
<text  x="769.90" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (2 samples, 0.01%)</title><rect x="214.9" y="1797" width="0.1" height="15.0" fill="rgb(218,208,22)" rx="2" ry="2" />
<text  x="217.92" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14 samples, 0.07%)</title><rect x="1186.9" y="1637" width="0.9" height="15.0" fill="rgb(242,161,2)" rx="2" ry="2" />
<text  x="1189.94" y="1647.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int const&amp;&gt; (3 samples, 0.01%)</title><rect x="874.3" y="2037" width="0.2" height="15.0" fill="rgb(240,46,11)" rx="2" ry="2" />
<text  x="877.34" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (175 samples, 0.87%)</title><rect x="156.5" y="1749" width="10.3" height="15.0" fill="rgb(254,190,14)" rx="2" ry="2" />
<text  x="159.45" y="1759.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (6 samples, 0.03%)</title><rect x="163.9" y="1573" width="0.4" height="15.0" fill="rgb(235,219,31)" rx="2" ry="2" />
<text  x="166.94" y="1583.5" ></text>
</g>
<g >
<title>__asan_memset@plt (2 samples, 0.01%)</title><rect x="653.7" y="1877" width="0.2" height="15.0" fill="rgb(227,42,27)" rx="2" ry="2" />
<text  x="656.75" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="155.7" y="1413" width="0.2" height="15.0" fill="rgb(217,26,9)" rx="2" ry="2" />
<text  x="158.75" y="1423.5" ></text>
</g>
<g >
<title>[unknown] (321 samples, 1.60%)</title><rect x="55.4" y="453" width="18.9" height="15.0" fill="rgb(239,164,8)" rx="2" ry="2" />
<text  x="58.38" y="463.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="84.8" y="1717" width="0.2" height="15.0" fill="rgb(225,24,42)" rx="2" ry="2" />
<text  x="87.85" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1185.6" y="1269" width="0.1" height="15.0" fill="rgb(221,54,53)" rx="2" ry="2" />
<text  x="1188.58" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_quantifier (2 samples, 0.01%)</title><rect x="171.8" y="1685" width="0.2" height="15.0" fill="rgb(223,215,47)" rx="2" ry="2" />
<text  x="174.84" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (384 samples, 1.92%)</title><rect x="55.4" y="1301" width="22.6" height="15.0" fill="rgb(209,187,18)" rx="2" ry="2" />
<text  x="58.38" y="1311.5" >[..</text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (89 samples, 0.44%)</title><rect x="103.6" y="2037" width="5.2" height="15.0" fill="rgb(252,139,5)" rx="2" ry="2" />
<text  x="106.59" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="155.7" y="1845" width="0.4" height="15.0" fill="rgb(228,210,25)" rx="2" ry="2" />
<text  x="158.75" y="1855.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.01%)</title><rect x="142.4" y="1605" width="0.1" height="15.0" fill="rgb(225,34,31)" rx="2" ry="2" />
<text  x="145.43" y="1615.5" ></text>
</g>
<g >
<title>__pthread_getspecific (3 samples, 0.01%)</title><rect x="618.0" y="1845" width="0.2" height="15.0" fill="rgb(234,5,25)" rx="2" ry="2" />
<text  x="621.03" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (430 samples, 2.15%)</title><rect x="55.4" y="1493" width="25.3" height="15.0" fill="rgb(215,197,28)" rx="2" ry="2" />
<text  x="58.38" y="1503.5" >[..</text>
</g>
<g >
<title>handle_mm_fault (99 samples, 0.49%)</title><rect x="942.8" y="1989" width="5.8" height="15.0" fill="rgb(253,54,15)" rx="2" ry="2" />
<text  x="945.77" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="1185.5" y="1989" width="0.3" height="15.0" fill="rgb(209,98,32)" rx="2" ry="2" />
<text  x="1188.52" y="1999.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.01%)</title><rect x="143.1" y="1605" width="0.1" height="15.0" fill="rgb(231,25,47)" rx="2" ry="2" />
<text  x="146.08" y="1615.5" ></text>
</g>
<g >
<title>__asan::AsanThread::stack_top (2 samples, 0.01%)</title><rect x="617.8" y="1845" width="0.1" height="15.0" fill="rgb(245,70,50)" rx="2" ry="2" />
<text  x="620.80" y="1855.5" ></text>
</g>
<g >
<title>do_syscall_64 (3 samples, 0.01%)</title><rect x="118.3" y="2005" width="0.1" height="15.0" fill="rgb(248,8,6)" rx="2" ry="2" />
<text  x="121.26" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13 samples, 0.06%)</title><rect x="1187.0" y="485" width="0.8" height="15.0" fill="rgb(225,88,1)" rx="2" ry="2" />
<text  x="1189.99" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1186.5" y="181" width="0.4" height="15.0" fill="rgb(226,120,38)" rx="2" ry="2" />
<text  x="1189.52" y="191.5" ></text>
</g>
<g >
<title>flush_tlb_mm_range (5 samples, 0.02%)</title><rect x="55.0" y="1893" width="0.3" height="15.0" fill="rgb(231,209,2)" rx="2" ry="2" />
<text  x="57.97" y="1903.5" ></text>
</g>
<g >
<title>perf_iterate_sb (2 samples, 0.01%)</title><rect x="766.6" y="1893" width="0.1" height="15.0" fill="rgb(226,50,17)" rx="2" ry="2" />
<text  x="769.61" y="1903.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_erase (2 samples, 0.01%)</title><rect x="519.4" y="1989" width="0.2" height="15.0" fill="rgb(245,172,19)" rx="2" ry="2" />
<text  x="522.44" y="1999.5" ></text>
</g>
<g >
<title>__handle_mm_fault (95 samples, 0.47%)</title><rect x="943.0" y="1973" width="5.6" height="15.0" fill="rgb(244,85,46)" rx="2" ry="2" />
<text  x="946.00" y="1983.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (3 samples, 0.01%)</title><rect x="78.1" y="1317" width="0.1" height="15.0" fill="rgb(250,171,21)" rx="2" ry="2" />
<text  x="81.07" y="1327.5" ></text>
</g>
<g >
<title>unmap_vmas (5 samples, 0.02%)</title><rect x="1103.3" y="1941" width="0.3" height="15.0" fill="rgb(250,31,7)" rx="2" ry="2" />
<text  x="1106.31" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="215.7" y="1573" width="0.4" height="15.0" fill="rgb(217,31,25)" rx="2" ry="2" />
<text  x="218.68" y="1583.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::Unwind (3 samples, 0.01%)</title><rect x="200.1" y="1605" width="0.2" height="15.0" fill="rgb(228,170,24)" rx="2" ry="2" />
<text  x="203.12" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.01%)</title><rect x="765.3" y="2005" width="0.2" height="15.0" fill="rgb(231,155,1)" rx="2" ry="2" />
<text  x="768.31" y="2015.5" ></text>
</g>
<g >
<title>__interceptor_strlen (16 samples, 0.08%)</title><rect x="581.9" y="1893" width="0.9" height="15.0" fill="rgb(229,138,2)" rx="2" ry="2" />
<text  x="584.91" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1185.6" y="1317" width="0.1" height="15.0" fill="rgb(239,192,39)" rx="2" ry="2" />
<text  x="1188.58" y="1327.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (2 samples, 0.01%)</title><rect x="572.2" y="1941" width="0.1" height="15.0" fill="rgb(213,145,6)" rx="2" ry="2" />
<text  x="575.18" y="1951.5" ></text>
</g>
<g >
<title>__asan_memmove (2 samples, 0.01%)</title><rect x="488.3" y="1925" width="0.1" height="15.0" fill="rgb(239,21,52)" rx="2" ry="2" />
<text  x="491.32" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="155.9" y="1093" width="0.2" height="15.0" fill="rgb(247,137,24)" rx="2" ry="2" />
<text  x="158.86" y="1103.5" ></text>
</g>
<g >
<title>[unknown] (47 samples, 0.23%)</title><rect x="814.6" y="2021" width="2.8" height="15.0" fill="rgb(244,157,39)" rx="2" ry="2" />
<text  x="817.64" y="2031.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (38 samples, 0.19%)</title><rect x="971.9" y="2053" width="2.2" height="15.0" fill="rgb(217,139,26)" rx="2" ry="2" />
<text  x="974.88" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (5 samples, 0.02%)</title><rect x="156.5" y="1685" width="0.3" height="15.0" fill="rgb(241,104,51)" rx="2" ry="2" />
<text  x="159.51" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13 samples, 0.06%)</title><rect x="1187.0" y="645" width="0.8" height="15.0" fill="rgb(218,201,46)" rx="2" ry="2" />
<text  x="1189.99" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (2 samples, 0.01%)</title><rect x="214.5" y="1845" width="0.1" height="15.0" fill="rgb(244,207,40)" rx="2" ry="2" />
<text  x="217.51" y="1855.5" ></text>
</g>
<g >
<title>__asan_memset (5 samples, 0.02%)</title><rect x="488.4" y="1925" width="0.3" height="15.0" fill="rgb(222,129,35)" rx="2" ry="2" />
<text  x="491.44" y="1935.5" ></text>
</g>
<g >
<title>__dynamic_cast (6 samples, 0.03%)</title><rect x="150.0" y="1701" width="0.3" height="15.0" fill="rgb(244,112,16)" rx="2" ry="2" />
<text  x="152.97" y="1711.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (3 samples, 0.01%)</title><rect x="1122.4" y="2037" width="0.2" height="15.0" fill="rgb(239,45,34)" rx="2" ry="2" />
<text  x="1125.40" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="183.3" y="1173" width="0.2" height="15.0" fill="rgb(239,97,43)" rx="2" ry="2" />
<text  x="186.33" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (9 samples, 0.04%)</title><rect x="1185.9" y="101" width="0.5" height="15.0" fill="rgb(247,193,28)" rx="2" ry="2" />
<text  x="1188.87" y="111.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (240 samples, 1.20%)</title><rect x="55.4" y="37" width="14.1" height="15.0" fill="rgb(237,112,36)" rx="2" ry="2" />
<text  x="58.38" y="47.5" ></text>
</g>
<g >
<title>[unknown] (321 samples, 1.60%)</title><rect x="55.4" y="469" width="18.9" height="15.0" fill="rgb(253,108,33)" rx="2" ry="2" />
<text  x="58.38" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (261 samples, 1.30%)</title><rect x="128.9" y="1781" width="15.4" height="15.0" fill="rgb(252,67,42)" rx="2" ry="2" />
<text  x="131.87" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="155.7" y="1685" width="0.2" height="15.0" fill="rgb(241,84,48)" rx="2" ry="2" />
<text  x="158.75" y="1695.5" ></text>
</g>
<g >
<title>handle_mm_fault (21 samples, 0.10%)</title><rect x="501.0" y="1877" width="1.2" height="15.0" fill="rgb(228,166,8)" rx="2" ry="2" />
<text  x="503.99" y="1887.5" ></text>
</g>
<g >
<title>ksys_read (3 samples, 0.01%)</title><rect x="1111.8" y="1973" width="0.2" height="15.0" fill="rgb(215,27,41)" rx="2" ry="2" />
<text  x="1114.79" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="155.9" y="1573" width="0.2" height="15.0" fill="rgb(250,208,13)" rx="2" ry="2" />
<text  x="158.86" y="1583.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (4 samples, 0.02%)</title><rect x="89.6" y="2005" width="0.3" height="15.0" fill="rgb(248,201,15)" rx="2" ry="2" />
<text  x="92.62" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.01%)</title><rect x="876.7" y="2021" width="0.2" height="15.0" fill="rgb(250,130,53)" rx="2" ry="2" />
<text  x="879.70" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="216.0" y="1205" width="0.1" height="15.0" fill="rgb(217,210,4)" rx="2" ry="2" />
<text  x="218.98" y="1215.5" ></text>
</g>
<g >
<title>__asan_memcpy (4 samples, 0.02%)</title><rect x="147.0" y="1637" width="0.3" height="15.0" fill="rgb(230,166,49)" rx="2" ry="2" />
<text  x="150.02" y="1647.5" ></text>
</g>
<g >
<title>on_each_cpu_cond_mask (22 samples, 0.11%)</title><rect x="947.1" y="1877" width="1.3" height="15.0" fill="rgb(242,94,49)" rx="2" ry="2" />
<text  x="950.07" y="1887.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (2 samples, 0.01%)</title><rect x="87.6" y="1893" width="0.1" height="15.0" fill="rgb(246,221,45)" rx="2" ry="2" />
<text  x="90.56" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1186.5" y="341" width="0.4" height="15.0" fill="rgb(241,185,33)" rx="2" ry="2" />
<text  x="1189.52" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="183.4" y="917" width="0.1" height="15.0" fill="rgb(214,141,16)" rx="2" ry="2" />
<text  x="186.39" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (9 samples, 0.04%)</title><rect x="1185.9" y="1397" width="0.5" height="15.0" fill="rgb(247,4,2)" rx="2" ry="2" />
<text  x="1188.87" y="1407.5" ></text>
</g>
<g >
<title>TDocument::TDocument (13 samples, 0.06%)</title><rect x="118.6" y="1989" width="0.7" height="15.0" fill="rgb(247,7,29)" rx="2" ry="2" />
<text  x="121.56" y="1999.5" ></text>
</g>
<g >
<title>__lru_cache_add (2 samples, 0.01%)</title><rect x="944.8" y="1909" width="0.1" height="15.0" fill="rgb(232,96,37)" rx="2" ry="2" />
<text  x="947.83" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13 samples, 0.06%)</title><rect x="1187.0" y="1445" width="0.8" height="15.0" fill="rgb(252,184,40)" rx="2" ry="2" />
<text  x="1189.99" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.02%)</title><rect x="155.9" y="1125" width="0.2" height="15.0" fill="rgb(210,73,25)" rx="2" ry="2" />
<text  x="158.86" y="1135.5" ></text>
</g>
<g >
<title>__asan_memcpy (7 samples, 0.03%)</title><rect x="652.6" y="1877" width="0.4" height="15.0" fill="rgb(226,145,16)" rx="2" ry="2" />
<text  x="655.57" y="1887.5" ></text>
</g>
<g >
<title>virtual thunk to std::__cxx11::basic_istringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_istringstream (5 samples, 0.02%)</title><rect x="877.1" y="2037" width="0.2" height="15.0" fill="rgb(239,41,19)" rx="2" ry="2" />
<text  x="880.05" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="216.0" y="1253" width="0.1" height="15.0" fill="rgb(229,151,21)" rx="2" ry="2" />
<text  x="218.98" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1186.5" y="1109" width="0.4" height="15.0" fill="rgb(229,6,32)" rx="2" ry="2" />
<text  x="1189.52" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.04%)</title><rect x="1185.9" y="981" width="0.5" height="15.0" fill="rgb(213,174,53)" rx="2" ry="2" />
<text  x="1188.87" y="991.5" ></text>
</g>
<g >
<title>onmt::Tokenizer::tokenize (6 samples, 0.03%)</title><rect x="808.5" y="2037" width="0.3" height="15.0" fill="rgb(242,147,33)" rx="2" ry="2" />
<text  x="811.45" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (92 samples, 0.46%)</title><rect x="133.9" y="1717" width="5.4" height="15.0" fill="rgb(215,1,45)" rx="2" ry="2" />
<text  x="136.88" y="1727.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (4 samples, 0.02%)</title><rect x="178.8" y="1653" width="0.2" height="15.0" fill="rgb(222,205,40)" rx="2" ry="2" />
<text  x="181.79" y="1663.5" ></text>
</g>
<g >
<title>__sanitizer::internal_mmap (23 samples, 0.11%)</title><rect x="765.5" y="2037" width="1.4" height="15.0" fill="rgb(216,87,22)" rx="2" ry="2" />
<text  x="768.55" y="2047.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (37 samples, 0.18%)</title><rect x="193.4" y="1605" width="2.2" height="15.0" fill="rgb(220,47,27)" rx="2" ry="2" />
<text  x="196.41" y="1615.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&gt;::ReleaseFreeMemoryToOS&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&gt;::MemoryMapper&gt; (12 samples, 0.06%)</title><rect x="1026.7" y="2053" width="0.8" height="15.0" fill="rgb(213,117,26)" rx="2" ry="2" />
<text  x="1029.75" y="2063.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::getLine (494 samples, 2.47%)</title><rect x="541.1" y="1925" width="29.1" height="15.0" fill="rgb(217,138,14)" rx="2" ry="2" />
<text  x="544.06" y="1935.5" >fa..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (436 samples, 2.18%)</title><rect x="156.4" y="1829" width="25.7" height="15.0" fill="rgb(235,103,51)" rx="2" ry="2" />
<text  x="159.39" y="1839.5" >s..</text>
</g>
<g >
<title>do_syscall_64 (8 samples, 0.04%)</title><rect x="766.9" y="2005" width="0.5" height="15.0" fill="rgb(209,216,52)" rx="2" ry="2" />
<text  x="769.90" y="2015.5" ></text>
</g>
<g >
<title>native_send_call_func_single_ipi (2 samples, 0.01%)</title><rect x="55.1" y="1781" width="0.1" height="15.0" fill="rgb(249,28,2)" rx="2" ry="2" />
<text  x="58.09" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (15 samples, 0.07%)</title><rect x="1186.9" y="2005" width="0.9" height="15.0" fill="rgb(246,95,27)" rx="2" ry="2" />
<text  x="1189.88" y="2015.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (4 samples, 0.02%)</title><rect x="86.6" y="1861" width="0.3" height="15.0" fill="rgb(245,147,33)" rx="2" ry="2" />
<text  x="89.62" y="1871.5" ></text>
</g>
<g >
<title>__interceptor_memcmp (18 samples, 0.09%)</title><rect x="1004.6" y="2053" width="1.1" height="15.0" fill="rgb(221,201,13)" rx="2" ry="2" />
<text  x="1007.59" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (9 samples, 0.04%)</title><rect x="214.9" y="1877" width="0.5" height="15.0" fill="rgb(213,79,40)" rx="2" ry="2" />
<text  x="217.86" y="1887.5" ></text>
</g>
<g >
<title>free_unref_page_list (3 samples, 0.01%)</title><rect x="523.8" y="1861" width="0.2" height="15.0" fill="rgb(248,105,38)" rx="2" ry="2" />
<text  x="526.80" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (335 samples, 1.67%)</title><rect x="55.4" y="965" width="19.7" height="15.0" fill="rgb(231,153,35)" rx="2" ry="2" />
<text  x="58.38" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.05%)</title><rect x="1185.8" y="1957" width="0.6" height="15.0" fill="rgb(209,101,50)" rx="2" ry="2" />
<text  x="1188.76" y="1967.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (3 samples, 0.01%)</title><rect x="801.6" y="2021" width="0.1" height="15.0" fill="rgb(228,62,40)" rx="2" ry="2" />
<text  x="804.56" y="2031.5" ></text>
</g>
<g >
<title>__vm_munmap (3 samples, 0.01%)</title><rect x="87.9" y="1845" width="0.2" height="15.0" fill="rgb(211,84,48)" rx="2" ry="2" />
<text  x="90.91" y="1855.5" ></text>
</g>
<g >
<title>native_write_msr (2 samples, 0.01%)</title><rect x="55.1" y="1749" width="0.1" height="15.0" fill="rgb(229,90,40)" rx="2" ry="2" />
<text  x="58.09" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="155.9" y="1541" width="0.2" height="15.0" fill="rgb(206,116,20)" rx="2" ry="2" />
<text  x="158.86" y="1551.5" ></text>
</g>
<g >
<title>find_vma (4 samples, 0.02%)</title><rect x="942.5" y="1989" width="0.3" height="15.0" fill="rgb(235,77,22)" rx="2" ry="2" />
<text  x="945.53" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1185.6" y="1477" width="0.1" height="15.0" fill="rgb(233,164,44)" rx="2" ry="2" />
<text  x="1188.58" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (6 samples, 0.03%)</title><rect x="181.7" y="1781" width="0.4" height="15.0" fill="rgb(206,34,43)" rx="2" ry="2" />
<text  x="184.74" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (12 samples, 0.06%)</title><rect x="1187.1" y="85" width="0.7" height="15.0" fill="rgb(234,205,5)" rx="2" ry="2" />
<text  x="1190.05" y="95.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (2 samples, 0.01%)</title><rect x="1028.0" y="1941" width="0.2" height="15.0" fill="rgb(221,118,13)" rx="2" ry="2" />
<text  x="1031.05" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.07%)</title><rect x="1186.9" y="2021" width="0.9" height="15.0" fill="rgb(250,90,7)" rx="2" ry="2" />
<text  x="1189.88" y="2031.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (2 samples, 0.01%)</title><rect x="812.1" y="2037" width="0.1" height="15.0" fill="rgb(227,9,20)" rx="2" ry="2" />
<text  x="815.11" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_quantifier (2 samples, 0.01%)</title><rect x="214.0" y="1765" width="0.2" height="15.0" fill="rgb(245,87,42)" rx="2" ry="2" />
<text  x="217.03" y="1775.5" ></text>
</g>
<g >
<title>__lsan::GetUserBegin (8 samples, 0.04%)</title><rect x="521.2" y="2037" width="0.5" height="15.0" fill="rgb(212,146,6)" rx="2" ry="2" />
<text  x="524.20" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13 samples, 0.06%)</title><rect x="1187.0" y="1349" width="0.8" height="15.0" fill="rgb(230,19,5)" rx="2" ry="2" />
<text  x="1189.99" y="1359.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.02%)</title><rect x="873.8" y="2021" width="0.3" height="15.0" fill="rgb(205,161,30)" rx="2" ry="2" />
<text  x="876.81" y="2031.5" ></text>
</g>
<g >
<title>__asan::asan_delete (5 samples, 0.02%)</title><rect x="1161.5" y="2037" width="0.3" height="15.0" fill="rgb(226,114,42)" rx="2" ry="2" />
<text  x="1164.53" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.02%)</title><rect x="183.3" y="1445" width="0.3" height="15.0" fill="rgb(249,21,28)" rx="2" ry="2" />
<text  x="186.33" y="1455.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::pushHash (4 samples, 0.02%)</title><rect x="873.4" y="1941" width="0.2" height="15.0" fill="rgb(248,107,14)" rx="2" ry="2" />
<text  x="876.40" y="1951.5" ></text>
</g>
<g >
<title>mem_cgroup_throttle_swaprate (3 samples, 0.01%)</title><rect x="945.2" y="1909" width="0.2" height="15.0" fill="rgb(224,155,12)" rx="2" ry="2" />
<text  x="948.24" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="215.9" y="1365" width="0.2" height="15.0" fill="rgb(209,197,8)" rx="2" ry="2" />
<text  x="218.86" y="1375.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (2 samples, 0.01%)</title><rect x="78.8" y="1205" width="0.2" height="15.0" fill="rgb(210,115,30)" rx="2" ry="2" />
<text  x="81.84" y="1215.5" ></text>
</g>
<g >
<title>__dynamic_cast (5 samples, 0.02%)</title><rect x="196.6" y="1637" width="0.3" height="15.0" fill="rgb(232,42,12)" rx="2" ry="2" />
<text  x="199.59" y="1647.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (3 samples, 0.01%)</title><rect x="512.2" y="1845" width="0.2" height="15.0" fill="rgb(220,60,28)" rx="2" ry="2" />
<text  x="515.25" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (69 samples, 0.34%)</title><rect x="172.1" y="1765" width="4.0" height="15.0" fill="rgb(212,162,41)" rx="2" ry="2" />
<text  x="175.07" y="1775.5" ></text>
</g>
<g >
<title>fasttext::DenseMatrix::dotRow (2 samples, 0.01%)</title><rect x="1103.6" y="2053" width="0.1" height="15.0" fill="rgb(234,31,45)" rx="2" ry="2" />
<text  x="1106.60" y="2063.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (7 samples, 0.03%)</title><rect x="998.2" y="2053" width="0.4" height="15.0" fill="rgb(214,186,1)" rx="2" ry="2" />
<text  x="1001.17" y="2063.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.01%)</title><rect x="178.1" y="1669" width="0.2" height="15.0" fill="rgb(221,166,7)" rx="2" ry="2" />
<text  x="181.14" y="1679.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (36 samples, 0.18%)</title><rect x="680.8" y="1861" width="2.1" height="15.0" fill="rgb(224,88,37)" rx="2" ry="2" />
<text  x="683.80" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_subexpr_begin (2 samples, 0.01%)</title><rect x="215.4" y="1925" width="0.1" height="15.0" fill="rgb(233,86,51)" rx="2" ry="2" />
<text  x="218.39" y="1935.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (2 samples, 0.01%)</title><rect x="1111.6" y="2053" width="0.1" height="15.0" fill="rgb(218,167,38)" rx="2" ry="2" />
<text  x="1114.62" y="2063.5" ></text>
</g>
<g >
<title>__asan_memcpy (3 samples, 0.01%)</title><rect x="205.9" y="1637" width="0.2" height="15.0" fill="rgb(229,16,28)" rx="2" ry="2" />
<text  x="208.90" y="1647.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (2 samples, 0.01%)</title><rect x="569.8" y="1861" width="0.1" height="15.0" fill="rgb(235,96,13)" rx="2" ry="2" />
<text  x="572.83" y="1871.5" ></text>
</g>
<g >
<title>__do_munmap (8 samples, 0.04%)</title><rect x="766.9" y="1957" width="0.5" height="15.0" fill="rgb(251,140,44)" rx="2" ry="2" />
<text  x="769.90" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.02%)</title><rect x="183.3" y="1573" width="0.3" height="15.0" fill="rgb(218,184,22)" rx="2" ry="2" />
<text  x="186.33" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (417 samples, 2.08%)</title><rect x="55.4" y="1445" width="24.6" height="15.0" fill="rgb(213,193,8)" rx="2" ry="2" />
<text  x="58.38" y="1455.5" >[..</text>
</g>
<g >
<title>operator delete (5 samples, 0.02%)</title><rect x="327.2" y="1957" width="0.3" height="15.0" fill="rgb(206,16,32)" rx="2" ry="2" />
<text  x="330.25" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.02%)</title><rect x="155.9" y="1317" width="0.2" height="15.0" fill="rgb(241,91,35)" rx="2" ry="2" />
<text  x="158.86" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (2 samples, 0.01%)</title><rect x="214.4" y="1749" width="0.1" height="15.0" fill="rgb(208,194,38)" rx="2" ry="2" />
<text  x="217.39" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (429 samples, 2.14%)</title><rect x="55.4" y="1477" width="25.3" height="15.0" fill="rgb(248,140,7)" rx="2" ry="2" />
<text  x="58.38" y="1487.5" >[..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="155.7" y="1797" width="0.4" height="15.0" fill="rgb(239,10,25)" rx="2" ry="2" />
<text  x="158.75" y="1807.5" ></text>
</g>
<g >
<title>onmt::add_final_token&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (60 samples, 0.30%)</title><rect x="576.6" y="1893" width="3.5" height="15.0" fill="rgb(238,25,30)" rx="2" ry="2" />
<text  x="579.60" y="1903.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (3 samples, 0.01%)</title><rect x="118.3" y="1861" width="0.1" height="15.0" fill="rgb(235,116,1)" rx="2" ry="2" />
<text  x="121.26" y="1871.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::getLabel[abi:cxx11] (2 samples, 0.01%)</title><rect x="527.4" y="1925" width="0.1" height="15.0" fill="rgb(218,30,16)" rx="2" ry="2" />
<text  x="530.39" y="1935.5" ></text>
</g>
<g >
<title>alloc_pages_vma (7 samples, 0.03%)</title><rect x="680.2" y="1765" width="0.4" height="15.0" fill="rgb(243,26,51)" rx="2" ry="2" />
<text  x="683.15" y="1775.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::do_tolower (4 samples, 0.02%)</title><rect x="212.8" y="1685" width="0.2" height="15.0" fill="rgb(242,6,36)" rx="2" ry="2" />
<text  x="215.80" y="1695.5" ></text>
</g>
<g >
<title>__dynamic_cast (7 samples, 0.03%)</title><rect x="144.9" y="1669" width="0.4" height="15.0" fill="rgb(251,206,23)" rx="2" ry="2" />
<text  x="147.90" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (79 samples, 0.39%)</title><rect x="139.4" y="1653" width="4.7" height="15.0" fill="rgb(238,159,18)" rx="2" ry="2" />
<text  x="142.42" y="1663.5" ></text>
</g>
<g >
<title>operator new (9 samples, 0.04%)</title><rect x="200.7" y="1605" width="0.5" height="15.0" fill="rgb(216,98,10)" rx="2" ry="2" />
<text  x="203.71" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (32 samples, 0.16%)</title><rect x="808.9" y="2021" width="1.9" height="15.0" fill="rgb(234,204,50)" rx="2" ry="2" />
<text  x="811.87" y="2031.5" ></text>
</g>
<g >
<title>__pthread_getspecific (3 samples, 0.01%)</title><rect x="160.0" y="1541" width="0.2" height="15.0" fill="rgb(224,183,49)" rx="2" ry="2" />
<text  x="163.05" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="216.0" y="1285" width="0.1" height="15.0" fill="rgb(213,206,37)" rx="2" ry="2" />
<text  x="218.98" y="1295.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="871.6" y="1973" width="0.2" height="15.0" fill="rgb(221,129,33)" rx="2" ry="2" />
<text  x="874.63" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (315 samples, 1.57%)</title><rect x="55.4" y="261" width="18.5" height="15.0" fill="rgb(234,38,21)" rx="2" ry="2" />
<text  x="58.38" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (66 samples, 0.33%)</title><rect x="172.1" y="1669" width="3.9" height="15.0" fill="rgb(247,82,15)" rx="2" ry="2" />
<text  x="175.13" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="183.5" y="1157" width="0.1" height="15.0" fill="rgb(245,66,46)" rx="2" ry="2" />
<text  x="186.51" y="1167.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (4 samples, 0.02%)</title><rect x="174.0" y="1621" width="0.2" height="15.0" fill="rgb(212,198,13)" rx="2" ry="2" />
<text  x="176.96" y="1631.5" ></text>
</g>
<g >
<title>__asan::AsanTSDGet (2 samples, 0.01%)</title><rect x="487.3" y="1925" width="0.1" height="15.0" fill="rgb(219,77,42)" rx="2" ry="2" />
<text  x="490.26" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1185.6" y="1749" width="0.1" height="15.0" fill="rgb(231,7,43)" rx="2" ry="2" />
<text  x="1188.58" y="1759.5" ></text>
</g>
<g >
<title>__pthread_getspecific (4 samples, 0.02%)</title><rect x="164.7" y="1573" width="0.2" height="15.0" fill="rgb(209,215,27)" rx="2" ry="2" />
<text  x="167.70" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="155.9" y="997" width="0.1" height="15.0" fill="rgb(209,222,31)" rx="2" ry="2" />
<text  x="158.86" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="216.2" y="1525" width="0.1" height="15.0" fill="rgb(235,58,4)" rx="2" ry="2" />
<text  x="219.16" y="1535.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (4 samples, 0.02%)</title><rect x="210.3" y="1669" width="0.2" height="15.0" fill="rgb(243,35,12)" rx="2" ry="2" />
<text  x="213.26" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.07%)</title><rect x="1186.9" y="2037" width="0.9" height="15.0" fill="rgb(231,185,6)" rx="2" ry="2" />
<text  x="1189.88" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (88 samples, 0.44%)</title><rect x="144.3" y="1781" width="5.1" height="15.0" fill="rgb(222,66,13)" rx="2" ry="2" />
<text  x="147.25" y="1791.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (2 samples, 0.01%)</title><rect x="766.2" y="1829" width="0.1" height="15.0" fill="rgb(208,185,34)" rx="2" ry="2" />
<text  x="769.20" y="1839.5" ></text>
</g>
<g >
<title>do_page_fault (21 samples, 0.10%)</title><rect x="54.0" y="2005" width="1.3" height="15.0" fill="rgb(233,103,39)" rx="2" ry="2" />
<text  x="57.02" y="2015.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (348 samples, 1.74%)</title><rect x="1125.4" y="2053" width="20.5" height="15.0" fill="rgb(233,211,2)" rx="2" ry="2" />
<text  x="1128.41" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (9 samples, 0.04%)</title><rect x="1185.9" y="437" width="0.5" height="15.0" fill="rgb(225,158,13)" rx="2" ry="2" />
<text  x="1188.87" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13 samples, 0.06%)</title><rect x="1187.0" y="773" width="0.8" height="15.0" fill="rgb(244,108,35)" rx="2" ry="2" />
<text  x="1189.99" y="783.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (4 samples, 0.02%)</title><rect x="180.8" y="1653" width="0.2" height="15.0" fill="rgb(211,162,8)" rx="2" ry="2" />
<text  x="183.79" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13 samples, 0.06%)</title><rect x="1187.0" y="1125" width="0.8" height="15.0" fill="rgb(233,60,40)" rx="2" ry="2" />
<text  x="1189.99" y="1135.5" ></text>
</g>
<g >
<title>onmt::Tokenizer::finalize_tokens (90 samples, 0.45%)</title><rect x="575.0" y="1909" width="5.3" height="15.0" fill="rgb(241,224,32)" rx="2" ry="2" />
<text  x="578.01" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="183.4" y="981" width="0.1" height="15.0" fill="rgb(249,109,47)" rx="2" ry="2" />
<text  x="186.39" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13 samples, 0.06%)</title><rect x="215.6" y="1925" width="0.7" height="15.0" fill="rgb(237,216,17)" rx="2" ry="2" />
<text  x="218.57" y="1935.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="88.9" y="1973" width="0.1" height="15.0" fill="rgb(226,139,0)" rx="2" ry="2" />
<text  x="91.86" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (337 samples, 1.68%)</title><rect x="55.4" y="1061" width="19.8" height="15.0" fill="rgb(218,210,20)" rx="2" ry="2" />
<text  x="58.38" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="183.5" y="1125" width="0.1" height="15.0" fill="rgb(239,51,25)" rx="2" ry="2" />
<text  x="186.51" y="1135.5" ></text>
</g>
<g >
<title>nlohmann::detail::parser&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::parse (133 samples, 0.66%)</title><rect x="119.7" y="1973" width="7.8" height="15.0" fill="rgb(248,96,22)" rx="2" ry="2" />
<text  x="122.68" y="1983.5" ></text>
</g>
<g >
<title>do_syscall_64 (25 samples, 0.12%)</title><rect x="523.0" y="2005" width="1.4" height="15.0" fill="rgb(238,46,6)" rx="2" ry="2" />
<text  x="525.97" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (9 samples, 0.04%)</title><rect x="1185.9" y="869" width="0.5" height="15.0" fill="rgb(248,38,49)" rx="2" ry="2" />
<text  x="1188.87" y="879.5" ></text>
</g>
<g >
<title>__lru_cache_add (6 samples, 0.03%)</title><rect x="26.6" y="1941" width="0.3" height="15.0" fill="rgb(253,126,35)" rx="2" ry="2" />
<text  x="29.56" y="1951.5" ></text>
</g>
<g >
<title>flush_tlb_mm_range (2 samples, 0.01%)</title><rect x="80.5" y="1333" width="0.1" height="15.0" fill="rgb(226,209,7)" rx="2" ry="2" />
<text  x="83.49" y="1343.5" ></text>
</g>
<g >
<title>release_pages (8 samples, 0.04%)</title><rect x="523.6" y="1877" width="0.4" height="15.0" fill="rgb(213,147,27)" rx="2" ry="2" />
<text  x="526.56" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="216.2" y="1253" width="0.1" height="15.0" fill="rgb(244,202,13)" rx="2" ry="2" />
<text  x="219.21" y="1263.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (25 samples, 0.12%)</title><rect x="1101.5" y="1989" width="1.5" height="15.0" fill="rgb(217,143,11)" rx="2" ry="2" />
<text  x="1104.54" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="1185.5" y="1957" width="0.2" height="15.0" fill="rgb(222,224,27)" rx="2" ry="2" />
<text  x="1188.52" y="1967.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (3 samples, 0.01%)</title><rect x="1111.8" y="1909" width="0.2" height="15.0" fill="rgb(221,127,50)" rx="2" ry="2" />
<text  x="1114.79" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (323 samples, 1.61%)</title><rect x="55.4" y="597" width="19.0" height="15.0" fill="rgb(219,140,0)" rx="2" ry="2" />
<text  x="58.38" y="607.5" ></text>
</g>
<g >
<title>handle_mm_fault (2 samples, 0.01%)</title><rect x="103.4" y="1973" width="0.1" height="15.0" fill="rgb(211,180,29)" rx="2" ry="2" />
<text  x="106.41" y="1983.5" ></text>
</g>
<g >
<title>operator new[] (2 samples, 0.01%)</title><rect x="1111.5" y="2053" width="0.1" height="15.0" fill="rgb(223,224,22)" rx="2" ry="2" />
<text  x="1114.50" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (577 samples, 2.88%)</title><rect x="55.4" y="2005" width="34.0" height="15.0" fill="rgb(244,71,28)" rx="2" ry="2" />
<text  x="58.38" y="2015.5" >[u..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="155.7" y="1573" width="0.2" height="15.0" fill="rgb(254,53,52)" rx="2" ry="2" />
<text  x="158.75" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.04%)</title><rect x="1185.9" y="1477" width="0.5" height="15.0" fill="rgb(244,163,25)" rx="2" ry="2" />
<text  x="1188.87" y="1487.5" ></text>
</g>
<g >
<title>std::vector&lt;fasttext::entry, std::allocator&lt;fasttext::entry&gt; &gt;::_M_realloc_insert&lt;fasttext::entry const&amp;&gt; (3 samples, 0.01%)</title><rect x="874.1" y="2037" width="0.2" height="15.0" fill="rgb(213,202,53)" rx="2" ry="2" />
<text  x="877.11" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.04%)</title><rect x="1185.9" y="933" width="0.5" height="15.0" fill="rgb(233,77,17)" rx="2" ry="2" />
<text  x="1188.87" y="943.5" ></text>
</g>
<g >
<title>[unknown] (21 samples, 0.10%)</title><rect x="812.3" y="2021" width="1.2" height="15.0" fill="rgb(214,6,24)" rx="2" ry="2" />
<text  x="815.28" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.05%)</title><rect x="1185.8" y="1893" width="0.6" height="15.0" fill="rgb(226,227,54)" rx="2" ry="2" />
<text  x="1188.76" y="1903.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (2 samples, 0.01%)</title><rect x="54.4" y="1925" width="0.1" height="15.0" fill="rgb(225,24,52)" rx="2" ry="2" />
<text  x="57.38" y="1935.5" ></text>
</g>
<g >
<title>onmt::unicode::is_separator (7 samples, 0.03%)</title><rect x="736.0" y="1893" width="0.4" height="15.0" fill="rgb(223,23,6)" rx="2" ry="2" />
<text  x="738.96" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1186.5" y="613" width="0.4" height="15.0" fill="rgb(238,29,1)" rx="2" ry="2" />
<text  x="1189.52" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="155.9" y="661" width="0.1" height="15.0" fill="rgb(223,153,20)" rx="2" ry="2" />
<text  x="158.86" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="155.9" y="1141" width="0.2" height="15.0" fill="rgb(237,23,21)" rx="2" ry="2" />
<text  x="158.86" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (75 samples, 0.37%)</title><rect x="191.8" y="1701" width="4.4" height="15.0" fill="rgb(210,212,22)" rx="2" ry="2" />
<text  x="194.76" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1186.5" y="1445" width="0.4" height="15.0" fill="rgb(227,133,8)" rx="2" ry="2" />
<text  x="1189.46" y="1455.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (6 samples, 0.03%)</title><rect x="1121.2" y="2037" width="0.4" height="15.0" fill="rgb(241,148,41)" rx="2" ry="2" />
<text  x="1124.22" y="2047.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (2 samples, 0.01%)</title><rect x="336.4" y="1989" width="0.1" height="15.0" fill="rgb(232,109,29)" rx="2" ry="2" />
<text  x="339.38" y="1999.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (47 samples, 0.23%)</title><rect x="814.6" y="2005" width="2.8" height="15.0" fill="rgb(228,202,25)" rx="2" ry="2" />
<text  x="817.64" y="2015.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&gt;::GetFromAllocator (4 samples, 0.02%)</title><rect x="1026.5" y="2053" width="0.2" height="15.0" fill="rgb(208,53,37)" rx="2" ry="2" />
<text  x="1029.45" y="2063.5" ></text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.01%)</title><rect x="136.8" y="1589" width="0.1" height="15.0" fill="rgb(205,28,33)" rx="2" ry="2" />
<text  x="139.77" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (413 samples, 2.06%)</title><rect x="55.4" y="1429" width="24.3" height="15.0" fill="rgb(254,80,24)" rx="2" ry="2" />
<text  x="58.38" y="1439.5" >[..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (13 samples, 0.06%)</title><rect x="1187.0" y="709" width="0.8" height="15.0" fill="rgb(240,195,31)" rx="2" ry="2" />
<text  x="1189.99" y="719.5" ></text>
</g>
<g >
<title>exit_mmap (5 samples, 0.02%)</title><rect x="1103.3" y="1957" width="0.3" height="15.0" fill="rgb(242,70,16)" rx="2" ry="2" />
<text  x="1106.31" y="1967.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;,  (3 samples, 0.01%)</title><rect x="185.3" y="1957" width="0.2" height="15.0" fill="rgb(212,101,51)" rx="2" ry="2" />
<text  x="188.27" y="1967.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.01%)</title><rect x="129.3" y="1589" width="0.2" height="15.0" fill="rgb(213,191,41)" rx="2" ry="2" />
<text  x="132.34" y="1599.5" ></text>
</g>
<g >
<title>__asan::asan_delete (2 samples, 0.01%)</title><rect x="595.6" y="1877" width="0.2" height="15.0" fill="rgb(236,139,15)" rx="2" ry="2" />
<text  x="598.64" y="1887.5" ></text>
</g>
<g >
<title>on_each_cpu_mask (2 samples, 0.01%)</title><rect x="55.1" y="1845" width="0.1" height="15.0" fill="rgb(247,163,16)" rx="2" ry="2" />
<text  x="58.09" y="1855.5" ></text>
</g>
<g >
<title>__asan::Allocator::Deallocate (293 samples, 1.46%)</title><rect x="948.9" y="2053" width="17.3" height="15.0" fill="rgb(248,56,1)" rx="2" ry="2" />
<text  x="951.90" y="2063.5" ></text>
</g>
<g >
<title>fasttext::FastText::getDimension (34 samples, 0.17%)</title><rect x="331.6" y="1989" width="2.0" height="15.0" fill="rgb(231,147,32)" rx="2" ry="2" />
<text  x="334.61" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="215.7" y="1669" width="0.4" height="15.0" fill="rgb(239,38,41)" rx="2" ry="2" />
<text  x="218.68" y="1679.5" ></text>
</g>
<g >
<title>TSlinkClustering::FillDistanceMatrix (249 samples, 1.24%)</title><rect x="497.9" y="1973" width="14.6" height="15.0" fill="rgb(239,229,37)" rx="2" ry="2" />
<text  x="500.87" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13 samples, 0.06%)</title><rect x="1187.0" y="1365" width="0.8" height="15.0" fill="rgb(240,2,23)" rx="2" ry="2" />
<text  x="1189.99" y="1375.5" ></text>
</g>
<g >
<title>Eigen::internal::generic_product_impl&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt;, Eigen::DenseShape, Eigen::DenseShape, 8&gt;::scaleAndAddTo&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt; (4 samples, 0.02%)</title><rect x="185.0" y="1989" width="0.2" height="15.0" fill="rgb(211,137,25)" rx="2" ry="2" />
<text  x="187.98" y="1999.5" ></text>
</g>
<g >
<title>smp_call_function_single (3 samples, 0.01%)</title><rect x="523.3" y="1829" width="0.1" height="15.0" fill="rgb(237,154,1)" rx="2" ry="2" />
<text  x="526.27" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.04%)</title><rect x="1185.9" y="1189" width="0.5" height="15.0" fill="rgb(221,229,28)" rx="2" ry="2" />
<text  x="1188.87" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (443 samples, 2.21%)</title><rect x="128.9" y="1829" width="26.1" height="15.0" fill="rgb(252,223,33)" rx="2" ry="2" />
<text  x="131.87" y="1839.5" >s..</text>
</g>
<g >
<title>__asan::AsanTSDGet (2 samples, 0.01%)</title><rect x="1121.6" y="2037" width="0.1" height="15.0" fill="rgb(246,59,7)" rx="2" ry="2" />
<text  x="1124.58" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.04%)</title><rect x="1185.9" y="229" width="0.5" height="15.0" fill="rgb(205,55,51)" rx="2" ry="2" />
<text  x="1188.87" y="239.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (29 samples, 0.14%)</title><rect x="24.9" y="1941" width="1.7" height="15.0" fill="rgb(248,219,29)" rx="2" ry="2" />
<text  x="27.85" y="1951.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (3 samples, 0.01%)</title><rect x="205.2" y="1637" width="0.2" height="15.0" fill="rgb(232,142,49)" rx="2" ry="2" />
<text  x="208.19" y="1647.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (8 samples, 0.04%)</title><rect x="132.9" y="1557" width="0.5" height="15.0" fill="rgb(211,13,41)" rx="2" ry="2" />
<text  x="135.94" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (2 samples, 0.01%)</title><rect x="182.1" y="1829" width="0.2" height="15.0" fill="rgb(221,141,32)" rx="2" ry="2" />
<text  x="185.15" y="1839.5" ></text>
</g>
<g >
<title>tlb_flush_mmu_free (2 samples, 0.01%)</title><rect x="524.3" y="1925" width="0.1" height="15.0" fill="rgb(214,58,6)" rx="2" ry="2" />
<text  x="527.33" y="1935.5" ></text>
</g>
<g >
<title>__handle_mm_fault (2 samples, 0.01%)</title><rect x="580.0" y="1813" width="0.1" height="15.0" fill="rgb(207,79,45)" rx="2" ry="2" />
<text  x="583.02" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="183.5" y="1221" width="0.1" height="15.0" fill="rgb(251,189,51)" rx="2" ry="2" />
<text  x="186.51" y="1231.5" ></text>
</g>
<g >
<title>[unknown] (508 samples, 2.54%)</title><rect x="55.4" y="1797" width="29.9" height="15.0" fill="rgb(219,82,53)" rx="2" ry="2" />
<text  x="58.38" y="1807.5" >[u..</text>
</g>
<g >
<title>__alloc_pages_nodemask (2 samples, 0.01%)</title><rect x="54.6" y="1893" width="0.1" height="15.0" fill="rgb(252,163,45)" rx="2" ry="2" />
<text  x="57.55" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (13 samples, 0.06%)</title><rect x="1187.0" y="517" width="0.8" height="15.0" fill="rgb(208,25,12)" rx="2" ry="2" />
<text  x="1189.99" y="527.5" ></text>
</g>
<g >
<title>__dynamic_cast (6 samples, 0.03%)</title><rect x="209.4" y="1685" width="0.4" height="15.0" fill="rgb(252,39,40)" rx="2" ry="2" />
<text  x="212.44" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (3 samples, 0.01%)</title><rect x="181.8" y="1733" width="0.2" height="15.0" fill="rgb(233,144,30)" rx="2" ry="2" />
<text  x="184.80" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="155.9" y="773" width="0.1" height="15.0" fill="rgb(249,81,41)" rx="2" ry="2" />
<text  x="158.86" y="783.5" ></text>
</g>
<g >
<title>do_futex (17 samples, 0.08%)</title><rect x="30.1" y="1941" width="1.0" height="15.0" fill="rgb(249,111,36)" rx="2" ry="2" />
<text  x="33.10" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.03%)</title><rect x="1186.5" y="1317" width="0.4" height="15.0" fill="rgb(233,144,51)" rx="2" ry="2" />
<text  x="1189.46" y="1327.5" ></text>
</g>
<g >
<title>zap_page_range (2 samples, 0.01%)</title><rect x="76.5" y="1125" width="0.2" height="15.0" fill="rgb(209,143,11)" rx="2" ry="2" />
<text  x="79.54" y="1135.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.01%)</title><rect x="160.8" y="1541" width="0.1" height="15.0" fill="rgb(228,29,21)" rx="2" ry="2" />
<text  x="163.82" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1186.5" y="629" width="0.4" height="15.0" fill="rgb(212,174,38)" rx="2" ry="2" />
<text  x="1189.52" y="639.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="90.0" y="1973" width="0.1" height="15.0" fill="rgb(210,75,23)" rx="2" ry="2" />
<text  x="92.98" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="155.7" y="1381" width="0.2" height="15.0" fill="rgb(236,60,24)" rx="2" ry="2" />
<text  x="158.75" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="155.7" y="1781" width="0.4" height="15.0" fill="rgb(243,110,32)" rx="2" ry="2" />
<text  x="158.75" y="1791.5" ></text>
</g>
<g >
<title>native_write_msr (3 samples, 0.01%)</title><rect x="523.3" y="1765" width="0.1" height="15.0" fill="rgb(214,61,35)" rx="2" ry="2" />
<text  x="526.27" y="1775.5" ></text>
</g>
<g >
<title>fasttext::Vector::Vector (3 samples, 0.01%)</title><rect x="1107.3" y="2053" width="0.1" height="15.0" fill="rgb(243,84,16)" rx="2" ry="2" />
<text  x="1110.26" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (94 samples, 0.47%)</title><rect x="208.3" y="1717" width="5.5" height="15.0" fill="rgb(247,171,17)" rx="2" ry="2" />
<text  x="211.26" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (90 samples, 0.45%)</title><rect x="149.7" y="1717" width="5.3" height="15.0" fill="rgb(252,201,35)" rx="2" ry="2" />
<text  x="152.68" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (63 samples, 0.31%)</title><rect x="203.8" y="1669" width="3.7" height="15.0" fill="rgb(231,22,10)" rx="2" ry="2" />
<text  x="206.78" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (8 samples, 0.04%)</title><rect x="1186.4" y="1893" width="0.5" height="15.0" fill="rgb(237,51,0)" rx="2" ry="2" />
<text  x="1189.40" y="1903.5" ></text>
</g>
<g >
<title>__sanitizer::internal_memmove (8 samples, 0.04%)</title><rect x="1189.1" y="2037" width="0.5" height="15.0" fill="rgb(238,199,48)" rx="2" ry="2" />
<text  x="1192.12" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.05%)</title><rect x="1185.8" y="1765" width="0.6" height="15.0" fill="rgb(231,128,54)" rx="2" ry="2" />
<text  x="1188.76" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1186.5" y="549" width="0.4" height="15.0" fill="rgb(245,74,51)" rx="2" ry="2" />
<text  x="1189.52" y="559.5" ></text>
</g>
<g >
<title>find_vma (2 samples, 0.01%)</title><rect x="54.2" y="1973" width="0.1" height="15.0" fill="rgb(227,161,10)" rx="2" ry="2" />
<text  x="57.20" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13 samples, 0.06%)</title><rect x="1187.0" y="1205" width="0.8" height="15.0" fill="rgb(216,204,20)" rx="2" ry="2" />
<text  x="1189.99" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1186.5" y="917" width="0.4" height="15.0" fill="rgb(254,12,52)" rx="2" ry="2" />
<text  x="1189.52" y="927.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (2 samples, 0.01%)</title><rect x="85.8" y="1813" width="0.1" height="15.0" fill="rgb(211,60,1)" rx="2" ry="2" />
<text  x="88.79" y="1823.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (3 samples, 0.01%)</title><rect x="336.2" y="1989" width="0.2" height="15.0" fill="rgb(235,122,37)" rx="2" ry="2" />
<text  x="339.21" y="1999.5" ></text>
</g>
<g >
<title>std::__stable_sort_adaptive&lt;__gnu_cxx::__normal_iterator&lt;TDocument*, std::vector&lt;TDocument, std::allocator&lt;TDocument&gt; &gt; &gt;, TDocument*, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;main::$_1&gt; &gt; (6 samples, 0.03%)</title><rect x="520.3" y="2005" width="0.3" height="15.0" fill="rgb(235,168,32)" rx="2" ry="2" />
<text  x="523.26" y="2015.5" ></text>
</g>
<g >
<title>std::vector&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::allocator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;::_M_realloc_insert&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; (2 samples, 0.01%)</title><rect x="519.8" y="1989" width="0.1" height="15.0" fill="rgb(224,59,51)" rx="2" ry="2" />
<text  x="522.79" y="1999.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64LocalCache&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&gt; &gt;::Deallocate (2 samples, 0.01%)</title><rect x="87.2" y="1877" width="0.1" height="15.0" fill="rgb(215,90,34)" rx="2" ry="2" />
<text  x="90.21" y="1887.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (3 samples, 0.01%)</title><rect x="874.8" y="2005" width="0.1" height="15.0" fill="rgb(240,195,41)" rx="2" ry="2" />
<text  x="877.76" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (85 samples, 0.42%)</title><rect x="161.8" y="1669" width="5.0" height="15.0" fill="rgb(250,12,6)" rx="2" ry="2" />
<text  x="164.76" y="1679.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (5 samples, 0.02%)</title><rect x="572.8" y="1925" width="0.3" height="15.0" fill="rgb(251,70,19)" rx="2" ry="2" />
<text  x="575.77" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="810.8" y="2021" width="0.1" height="15.0" fill="rgb(208,123,39)" rx="2" ry="2" />
<text  x="813.75" y="2031.5" ></text>
</g>
<g >
<title>page_fault (3 samples, 0.01%)</title><rect x="518.0" y="1941" width="0.2" height="15.0" fill="rgb(247,133,22)" rx="2" ry="2" />
<text  x="521.02" y="1951.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (5 samples, 0.02%)</title><rect x="43.9" y="2005" width="0.3" height="15.0" fill="rgb(214,129,47)" rx="2" ry="2" />
<text  x="46.95" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (11 samples, 0.05%)</title><rect x="1185.8" y="1877" width="0.6" height="15.0" fill="rgb(247,100,8)" rx="2" ry="2" />
<text  x="1188.76" y="1887.5" ></text>
</g>
<g >
<title>__dynamic_cast (4 samples, 0.02%)</title><rect x="156.9" y="1573" width="0.3" height="15.0" fill="rgb(208,140,26)" rx="2" ry="2" />
<text  x="159.93" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.05%)</title><rect x="1185.8" y="1621" width="0.6" height="15.0" fill="rgb(229,14,8)" rx="2" ry="2" />
<text  x="1188.76" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (2 samples, 0.01%)</title><rect x="215.0" y="1813" width="0.2" height="15.0" fill="rgb(213,176,49)" rx="2" ry="2" />
<text  x="218.04" y="1823.5" ></text>
</g>
<g >
<title>try_charge (4 samples, 0.02%)</title><rect x="696.2" y="1733" width="0.2" height="15.0" fill="rgb(231,195,31)" rx="2" ry="2" />
<text  x="699.18" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1186.5" y="1301" width="0.4" height="15.0" fill="rgb(235,75,46)" rx="2" ry="2" />
<text  x="1189.46" y="1311.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="78.8" y="1333" width="0.2" height="15.0" fill="rgb(216,99,43)" rx="2" ry="2" />
<text  x="81.84" y="1343.5" ></text>
</g>
<g >
<title>alloc_pages_vma (2 samples, 0.01%)</title><rect x="54.6" y="1909" width="0.1" height="15.0" fill="rgb(218,140,23)" rx="2" ry="2" />
<text  x="57.55" y="1919.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (4 samples, 0.02%)</title><rect x="497.2" y="1941" width="0.3" height="15.0" fill="rgb(215,188,17)" rx="2" ry="2" />
<text  x="500.22" y="1951.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (3 samples, 0.01%)</title><rect x="766.9" y="1925" width="0.2" height="15.0" fill="rgb(226,138,9)" rx="2" ry="2" />
<text  x="769.90" y="1935.5" ></text>
</g>
<g >
<title>nlohmann::detail::input_stream_adapter::get_character (13 samples, 0.06%)</title><rect x="123.7" y="1909" width="0.8" height="15.0" fill="rgb(223,151,24)" rx="2" ry="2" />
<text  x="126.74" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.05%)</title><rect x="1185.8" y="1749" width="0.6" height="15.0" fill="rgb(222,99,28)" rx="2" ry="2" />
<text  x="1188.76" y="1759.5" ></text>
</g>
<g >
<title>__pthread_getspecific (3 samples, 0.01%)</title><rect x="194.2" y="1589" width="0.1" height="15.0" fill="rgb(234,127,4)" rx="2" ry="2" />
<text  x="197.17" y="1599.5" ></text>
</g>
<g >
<title>__asan::Allocator::Deallocate (2 samples, 0.01%)</title><rect x="130.5" y="1557" width="0.1" height="15.0" fill="rgb(221,201,30)" rx="2" ry="2" />
<text  x="133.46" y="1567.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (3 samples, 0.01%)</title><rect x="207.2" y="1637" width="0.2" height="15.0" fill="rgb(229,2,44)" rx="2" ry="2" />
<text  x="210.20" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.04%)</title><rect x="1185.9" y="325" width="0.5" height="15.0" fill="rgb(229,228,51)" rx="2" ry="2" />
<text  x="1188.87" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (14 samples, 0.07%)</title><rect x="1186.9" y="1957" width="0.9" height="15.0" fill="rgb(252,208,10)" rx="2" ry="2" />
<text  x="1189.94" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.05%)</title><rect x="215.7" y="1877" width="0.6" height="15.0" fill="rgb(214,178,17)" rx="2" ry="2" />
<text  x="218.68" y="1887.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="80.5" y="1429" width="0.1" height="15.0" fill="rgb(253,98,0)" rx="2" ry="2" />
<text  x="83.49" y="1439.5" ></text>
</g>
<g >
<title>alloc_pages_vma (21 samples, 0.10%)</title><rect x="510.8" y="1877" width="1.3" height="15.0" fill="rgb(249,104,26)" rx="2" ry="2" />
<text  x="513.83" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.02%)</title><rect x="155.9" y="1413" width="0.2" height="15.0" fill="rgb(248,97,31)" rx="2" ry="2" />
<text  x="158.86" y="1423.5" ></text>
</g>
<g >
<title>fasttext::Loss::predict (8 samples, 0.04%)</title><rect x="1104.0" y="2053" width="0.5" height="15.0" fill="rgb(211,85,19)" rx="2" ry="2" />
<text  x="1107.01" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="216.2" y="1333" width="0.1" height="15.0" fill="rgb(218,158,47)" rx="2" ry="2" />
<text  x="219.16" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1186.5" y="997" width="0.4" height="15.0" fill="rgb(237,210,37)" rx="2" ry="2" />
<text  x="1189.52" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (88 samples, 0.44%)</title><rect x="144.3" y="1749" width="5.1" height="15.0" fill="rgb(237,42,41)" rx="2" ry="2" />
<text  x="147.25" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="155.9" y="709" width="0.1" height="15.0" fill="rgb(215,102,53)" rx="2" ry="2" />
<text  x="158.86" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.02%)</title><rect x="183.3" y="1349" width="0.3" height="15.0" fill="rgb(237,167,46)" rx="2" ry="2" />
<text  x="186.33" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (2 samples, 0.01%)</title><rect x="149.4" y="1749" width="0.2" height="15.0" fill="rgb(221,73,51)" rx="2" ry="2" />
<text  x="152.44" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (322 samples, 1.61%)</title><rect x="55.4" y="581" width="19.0" height="15.0" fill="rgb(229,206,21)" rx="2" ry="2" />
<text  x="58.38" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (8 samples, 0.04%)</title><rect x="185.9" y="1685" width="0.5" height="15.0" fill="rgb(249,75,30)" rx="2" ry="2" />
<text  x="188.92" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (13 samples, 0.06%)</title><rect x="1187.0" y="469" width="0.8" height="15.0" fill="rgb(226,195,32)" rx="2" ry="2" />
<text  x="1189.99" y="479.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (5 samples, 0.02%)</title><rect x="873.8" y="2005" width="0.3" height="15.0" fill="rgb(212,224,50)" rx="2" ry="2" />
<text  x="876.81" y="2015.5" ></text>
</g>
<g >
<title>page_fault (139 samples, 0.69%)</title><rect x="940.7" y="2037" width="8.2" height="15.0" fill="rgb(207,47,46)" rx="2" ry="2" />
<text  x="943.70" y="2047.5" ></text>
</g>
<g >
<title>__handle_mm_fault (7 samples, 0.03%)</title><rect x="654.5" y="1797" width="0.4" height="15.0" fill="rgb(231,197,44)" rx="2" ry="2" />
<text  x="657.52" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (436 samples, 2.18%)</title><rect x="156.4" y="1845" width="25.7" height="15.0" fill="rgb(222,116,28)" rx="2" ry="2" />
<text  x="159.39" y="1855.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="183.2" y="1925" width="0.4" height="15.0" fill="rgb(218,206,32)" rx="2" ry="2" />
<text  x="186.21" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13 samples, 0.06%)</title><rect x="1187.0" y="917" width="0.8" height="15.0" fill="rgb(251,141,12)" rx="2" ry="2" />
<text  x="1189.99" y="927.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (3 samples, 0.01%)</title><rect x="201.2" y="1605" width="0.2" height="15.0" fill="rgb(219,57,28)" rx="2" ry="2" />
<text  x="204.24" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (74 samples, 0.37%)</title><rect x="150.3" y="1701" width="4.4" height="15.0" fill="rgb(248,66,39)" rx="2" ry="2" />
<text  x="153.32" y="1711.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.02%)</title><rect x="211.8" y="1669" width="0.3" height="15.0" fill="rgb(220,127,49)" rx="2" ry="2" />
<text  x="214.79" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (90 samples, 0.45%)</title><rect x="149.7" y="1749" width="5.3" height="15.0" fill="rgb(247,62,11)" rx="2" ry="2" />
<text  x="152.68" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (14 samples, 0.07%)</title><rect x="1186.9" y="1765" width="0.9" height="15.0" fill="rgb(254,82,41)" rx="2" ry="2" />
<text  x="1189.94" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (2 samples, 0.01%)</title><rect x="208.1" y="1733" width="0.1" height="15.0" fill="rgb(241,143,43)" rx="2" ry="2" />
<text  x="211.08" y="1743.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare@plt (7 samples, 0.03%)</title><rect x="753.5" y="1893" width="0.4" height="15.0" fill="rgb(215,212,38)" rx="2" ry="2" />
<text  x="756.47" y="1903.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::append (6 samples, 0.03%)</title><rect x="582.9" y="1893" width="0.4" height="15.0" fill="rgb(221,137,42)" rx="2" ry="2" />
<text  x="585.91" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (13 samples, 0.06%)</title><rect x="1187.0" y="421" width="0.8" height="15.0" fill="rgb(218,178,12)" rx="2" ry="2" />
<text  x="1189.99" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (2 samples, 0.01%)</title><rect x="155.0" y="1829" width="0.1" height="15.0" fill="rgb(233,17,10)" rx="2" ry="2" />
<text  x="157.98" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1186.5" y="597" width="0.4" height="15.0" fill="rgb(234,22,53)" rx="2" ry="2" />
<text  x="1189.52" y="607.5" ></text>
</g>
<g >
<title>kernel_poison_pages (2 samples, 0.01%)</title><rect x="944.6" y="1893" width="0.1" height="15.0" fill="rgb(229,53,29)" rx="2" ry="2" />
<text  x="947.59" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="183.3" y="1221" width="0.2" height="15.0" fill="rgb(211,72,1)" rx="2" ry="2" />
<text  x="186.33" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.04%)</title><rect x="1186.4" y="1637" width="0.5" height="15.0" fill="rgb(249,113,49)" rx="2" ry="2" />
<text  x="1189.40" y="1647.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (5 samples, 0.02%)</title><rect x="767.8" y="2005" width="0.3" height="15.0" fill="rgb(216,213,32)" rx="2" ry="2" />
<text  x="770.79" y="2015.5" ></text>
</g>
<g >
<title>Eigen::internal::gebp_kernel&lt;float, float, long, Eigen::internal::blas_data_mapper&lt;float, long, 0, 0, 1&gt;, 8, 4, false, false&gt;::operator (134 samples, 0.67%)</title><rect x="502.2" y="1909" width="7.9" height="15.0" fill="rgb(205,58,13)" rx="2" ry="2" />
<text  x="505.23" y="1919.5" ></text>
</g>
<g >
<title>unmap_region (8 samples, 0.04%)</title><rect x="766.9" y="1941" width="0.5" height="15.0" fill="rgb(233,139,23)" rx="2" ry="2" />
<text  x="769.90" y="1951.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (2 samples, 0.01%)</title><rect x="78.5" y="1333" width="0.2" height="15.0" fill="rgb(231,147,36)" rx="2" ry="2" />
<text  x="81.54" y="1343.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (60 samples, 0.30%)</title><rect x="151.0" y="1685" width="3.5" height="15.0" fill="rgb(217,64,52)" rx="2" ry="2" />
<text  x="153.97" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.05%)</title><rect x="1185.8" y="1861" width="0.6" height="15.0" fill="rgb(216,37,17)" rx="2" ry="2" />
<text  x="1188.76" y="1871.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.01%)</title><rect x="87.9" y="1893" width="0.2" height="15.0" fill="rgb(234,132,20)" rx="2" ry="2" />
<text  x="90.91" y="1903.5" ></text>
</g>
<g >
<title>page_fault (7 samples, 0.03%)</title><rect x="1099.4" y="2037" width="0.4" height="15.0" fill="rgb(240,169,32)" rx="2" ry="2" />
<text  x="1102.42" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (330 samples, 1.65%)</title><rect x="55.4" y="885" width="19.4" height="15.0" fill="rgb(223,34,43)" rx="2" ry="2" />
<text  x="58.38" y="895.5" ></text>
</g>
<g >
<title>operator delete (7 samples, 0.03%)</title><rect x="153.2" y="1669" width="0.4" height="15.0" fill="rgb(231,30,16)" rx="2" ry="2" />
<text  x="156.21" y="1679.5" ></text>
</g>
<g >
<title>std::__numpunct_cache&lt;char&gt;::~__numpunct_cache (2 samples, 0.01%)</title><rect x="872.0" y="2037" width="0.1" height="15.0" fill="rgb(206,147,35)" rx="2" ry="2" />
<text  x="874.99" y="2047.5" ></text>
</g>
<g >
<title>on_each_cpu_cond_mask (3 samples, 0.01%)</title><rect x="55.1" y="1861" width="0.2" height="15.0" fill="rgb(248,54,36)" rx="2" ry="2" />
<text  x="58.09" y="1871.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (3 samples, 0.01%)</title><rect x="594.3" y="1877" width="0.2" height="15.0" fill="rgb(245,108,27)" rx="2" ry="2" />
<text  x="597.28" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="871.9" y="2021" width="0.1" height="15.0" fill="rgb(232,169,14)" rx="2" ry="2" />
<text  x="874.87" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1186.5" y="277" width="0.4" height="15.0" fill="rgb(218,111,7)" rx="2" ry="2" />
<text  x="1189.52" y="287.5" ></text>
</g>
<g >
<title>alloc_pages_vma (2 samples, 0.01%)</title><rect x="1099.6" y="1925" width="0.1" height="15.0" fill="rgb(228,40,15)" rx="2" ry="2" />
<text  x="1102.59" y="1935.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (13 samples, 0.06%)</title><rect x="593.0" y="1877" width="0.8" height="15.0" fill="rgb(227,169,45)" rx="2" ry="2" />
<text  x="596.05" y="1887.5" ></text>
</g>
<g >
<title>flush_tlb_mm_range (5 samples, 0.02%)</title><rect x="523.2" y="1909" width="0.3" height="15.0" fill="rgb(243,191,0)" rx="2" ry="2" />
<text  x="526.21" y="1919.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (3 samples, 0.01%)</title><rect x="86.9" y="1861" width="0.1" height="15.0" fill="rgb(249,179,46)" rx="2" ry="2" />
<text  x="89.85" y="1871.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="181.4" y="1685" width="0.1" height="15.0" fill="rgb(224,167,6)" rx="2" ry="2" />
<text  x="184.38" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (9 samples, 0.04%)</title><rect x="1185.9" y="965" width="0.5" height="15.0" fill="rgb(230,96,9)" rx="2" ry="2" />
<text  x="1188.87" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1186.5" y="389" width="0.4" height="15.0" fill="rgb(208,111,35)" rx="2" ry="2" />
<text  x="1189.52" y="399.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.01%)</title><rect x="331.5" y="1989" width="0.1" height="15.0" fill="rgb(210,127,35)" rx="2" ry="2" />
<text  x="334.49" y="1999.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::Unwind (24 samples, 0.12%)</title><rect x="1175.3" y="2037" width="1.4" height="15.0" fill="rgb(219,123,30)" rx="2" ry="2" />
<text  x="1178.27" y="2047.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.02%)</title><rect x="1103.3" y="2053" width="0.3" height="15.0" fill="rgb(226,18,11)" rx="2" ry="2" />
<text  x="1106.31" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (8 samples, 0.04%)</title><rect x="185.9" y="1701" width="0.5" height="15.0" fill="rgb(215,84,19)" rx="2" ry="2" />
<text  x="188.92" y="1711.5" ></text>
</g>
<g >
<title>do_syscall_64 (5 samples, 0.02%)</title><rect x="1103.3" y="2037" width="0.3" height="15.0" fill="rgb(217,193,14)" rx="2" ry="2" />
<text  x="1106.31" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="183.3" y="1189" width="0.2" height="15.0" fill="rgb(231,178,40)" rx="2" ry="2" />
<text  x="186.33" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (2 samples, 0.01%)</title><rect x="202.9" y="1733" width="0.1" height="15.0" fill="rgb(221,200,32)" rx="2" ry="2" />
<text  x="205.89" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (6 samples, 0.03%)</title><rect x="181.7" y="1813" width="0.4" height="15.0" fill="rgb(229,90,16)" rx="2" ry="2" />
<text  x="184.74" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.04%)</title><rect x="1185.9" y="997" width="0.5" height="15.0" fill="rgb(247,49,43)" rx="2" ry="2" />
<text  x="1188.87" y="1007.5" ></text>
</g>
<g >
<title>__sanitizer::mem_is_zero (5 samples, 0.02%)</title><rect x="491.4" y="1925" width="0.3" height="15.0" fill="rgb(238,165,0)" rx="2" ry="2" />
<text  x="494.44" y="1935.5" ></text>
</g>
<g >
<title>handle_mm_fault (3 samples, 0.01%)</title><rect x="1099.6" y="1989" width="0.2" height="15.0" fill="rgb(217,115,36)" rx="2" ry="2" />
<text  x="1102.59" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3 samples, 0.01%)</title><rect x="181.8" y="1749" width="0.2" height="15.0" fill="rgb(231,203,33)" rx="2" ry="2" />
<text  x="184.80" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1186.5" y="1493" width="0.4" height="15.0" fill="rgb(218,38,45)" rx="2" ry="2" />
<text  x="1189.46" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13 samples, 0.06%)</title><rect x="1187.0" y="1493" width="0.8" height="15.0" fill="rgb(235,5,28)" rx="2" ry="2" />
<text  x="1189.99" y="1503.5" ></text>
</g>
<g >
<title>[unknown] (317 samples, 1.58%)</title><rect x="55.4" y="293" width="18.7" height="15.0" fill="rgb(220,0,10)" rx="2" ry="2" />
<text  x="58.38" y="303.5" ></text>
</g>
<g >
<title>[unknown] (574 samples, 2.87%)</title><rect x="55.4" y="1989" width="33.8" height="15.0" fill="rgb(205,216,14)" rx="2" ry="2" />
<text  x="58.38" y="1999.5" >[u..</text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (6 samples, 0.03%)</title><rect x="165.8" y="1573" width="0.4" height="15.0" fill="rgb(242,217,34)" rx="2" ry="2" />
<text  x="168.82" y="1583.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (12 samples, 0.06%)</title><rect x="768.1" y="2005" width="0.7" height="15.0" fill="rgb(246,55,10)" rx="2" ry="2" />
<text  x="771.08" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1186.5" y="581" width="0.4" height="15.0" fill="rgb(235,100,48)" rx="2" ry="2" />
<text  x="1189.52" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13 samples, 0.06%)</title><rect x="1187.0" y="741" width="0.8" height="15.0" fill="rgb(237,158,39)" rx="2" ry="2" />
<text  x="1189.99" y="751.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;std::__detail::_State&lt;char&gt; const*, std::__detail::_State&lt;char&gt;*&gt; (3 samples, 0.01%)</title><rect x="156.6" y="1637" width="0.2" height="15.0" fill="rgb(231,59,17)" rx="2" ry="2" />
<text  x="159.63" y="1647.5" ></text>
</g>
<g >
<title>__asan_memcpy (2 samples, 0.01%)</title><rect x="607.2" y="1861" width="0.1" height="15.0" fill="rgb(240,126,27)" rx="2" ry="2" />
<text  x="610.19" y="1871.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (2 samples, 0.01%)</title><rect x="497.7" y="1941" width="0.1" height="15.0" fill="rgb(242,117,11)" rx="2" ry="2" />
<text  x="500.69" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.02%)</title><rect x="155.9" y="1221" width="0.2" height="15.0" fill="rgb(228,209,37)" rx="2" ry="2" />
<text  x="158.86" y="1231.5" ></text>
</g>
<g >
<title>__handle_mm_fault (71 samples, 0.35%)</title><rect x="24.6" y="1973" width="4.1" height="15.0" fill="rgb(212,77,7)" rx="2" ry="2" />
<text  x="27.56" y="1983.5" ></text>
</g>
<g >
<title>memcpy (3 samples, 0.01%)</title><rect x="616.2" y="1845" width="0.2" height="15.0" fill="rgb(252,125,28)" rx="2" ry="2" />
<text  x="619.21" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (312 samples, 1.56%)</title><rect x="55.4" y="165" width="18.4" height="15.0" fill="rgb(246,11,10)" rx="2" ry="2" />
<text  x="58.38" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (85 samples, 0.42%)</title><rect x="166.8" y="1685" width="5.0" height="15.0" fill="rgb(244,77,2)" rx="2" ry="2" />
<text  x="169.83" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1186.5" y="949" width="0.4" height="15.0" fill="rgb(239,222,18)" rx="2" ry="2" />
<text  x="1189.52" y="959.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::json_value::destroy (3 samples, 0.01%)</title><rect x="518.4" y="1989" width="0.2" height="15.0" fill="rgb(226,41,39)" rx="2" ry="2" />
<text  x="521.37" y="1999.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt; &gt;::_M_manager (2 samples, 0.01%)</title><rect x="128.5" y="1941" width="0.1" height="15.0" fill="rgb(231,7,24)" rx="2" ry="2" />
<text  x="131.52" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (447 samples, 2.23%)</title><rect x="128.8" y="1877" width="26.4" height="15.0" fill="rgb(207,92,8)" rx="2" ry="2" />
<text  x="131.81" y="1887.5" >s..</text>
</g>
<g >
<title>mmput (5 samples, 0.02%)</title><rect x="1103.3" y="1973" width="0.3" height="15.0" fill="rgb(226,132,32)" rx="2" ry="2" />
<text  x="1106.31" y="1983.5" ></text>
</g>
<g >
<title>__dynamic_cast (4 samples, 0.02%)</title><rect x="164.5" y="1573" width="0.2" height="15.0" fill="rgb(227,78,1)" rx="2" ry="2" />
<text  x="167.47" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (8 samples, 0.04%)</title><rect x="1186.4" y="1749" width="0.5" height="15.0" fill="rgb(206,132,24)" rx="2" ry="2" />
<text  x="1189.40" y="1759.5" ></text>
</g>
<g >
<title>onmt::is_alphabet (47 samples, 0.23%)</title><rect x="656.5" y="1877" width="2.7" height="15.0" fill="rgb(233,169,28)" rx="2" ry="2" />
<text  x="659.46" y="1887.5" ></text>
</g>
<g >
<title>__asan::PoisonShadow (43 samples, 0.21%)</title><rect x="115.3" y="2037" width="2.5" height="15.0" fill="rgb(250,83,6)" rx="2" ry="2" />
<text  x="118.26" y="2047.5" ></text>
</g>
<g >
<title>native_send_call_func_single_ipi (18 samples, 0.09%)</title><rect x="947.2" y="1797" width="1.1" height="15.0" fill="rgb(237,154,30)" rx="2" ry="2" />
<text  x="950.25" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.02%)</title><rect x="765.3" y="2021" width="0.2" height="15.0" fill="rgb(212,193,6)" rx="2" ry="2" />
<text  x="768.25" y="2031.5" ></text>
</g>
<g >
<title>__sanitizer::internal_munmap (2 samples, 0.01%)</title><rect x="90.0" y="2005" width="0.1" height="15.0" fill="rgb(221,165,7)" rx="2" ry="2" />
<text  x="92.98" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13 samples, 0.06%)</title><rect x="1187.0" y="245" width="0.8" height="15.0" fill="rgb(240,221,3)" rx="2" ry="2" />
<text  x="1189.99" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (89 samples, 0.44%)</title><rect x="166.8" y="1717" width="5.2" height="15.0" fill="rgb(234,219,35)" rx="2" ry="2" />
<text  x="169.77" y="1727.5" ></text>
</g>
<g >
<title>__asan_memset (10 samples, 0.05%)</title><rect x="596.3" y="1877" width="0.6" height="15.0" fill="rgb(208,212,30)" rx="2" ry="2" />
<text  x="599.35" y="1887.5" ></text>
</g>
<g >
<title>do_page_fault (6 samples, 0.03%)</title><rect x="728.7" y="1861" width="0.3" height="15.0" fill="rgb(248,94,28)" rx="2" ry="2" />
<text  x="731.66" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="183.2" y="1829" width="0.4" height="15.0" fill="rgb(215,147,2)" rx="2" ry="2" />
<text  x="186.21" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (336 samples, 1.68%)</title><rect x="55.4" y="1029" width="19.8" height="15.0" fill="rgb(252,135,39)" rx="2" ry="2" />
<text  x="58.38" y="1039.5" ></text>
</g>
<g >
<title>[unknown] (341 samples, 1.70%)</title><rect x="55.4" y="1109" width="20.1" height="15.0" fill="rgb(237,2,40)" rx="2" ry="2" />
<text  x="58.38" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (86 samples, 0.43%)</title><rect x="186.4" y="1621" width="5.1" height="15.0" fill="rgb(220,29,36)" rx="2" ry="2" />
<text  x="189.39" y="1631.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (2 samples, 0.01%)</title><rect x="871.8" y="2005" width="0.1" height="15.0" fill="rgb(238,204,42)" rx="2" ry="2" />
<text  x="874.75" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.02%)</title><rect x="183.3" y="1477" width="0.3" height="15.0" fill="rgb(230,176,7)" rx="2" ry="2" />
<text  x="186.33" y="1487.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; const&amp;&gt; (2 samples, 0.01%)</title><rect x="519.9" y="1909" width="0.1" height="15.0" fill="rgb(242,216,12)" rx="2" ry="2" />
<text  x="522.91" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="155.9" y="1029" width="0.1" height="15.0" fill="rgb(248,34,2)" rx="2" ry="2" />
<text  x="158.86" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="155.9" y="405" width="0.1" height="15.0" fill="rgb(237,201,27)" rx="2" ry="2" />
<text  x="158.86" y="415.5" ></text>
</g>
<g >
<title>__handle_mm_fault (3 samples, 0.01%)</title><rect x="1099.6" y="1973" width="0.2" height="15.0" fill="rgb(224,222,2)" rx="2" ry="2" />
<text  x="1102.59" y="1983.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (3 samples, 0.01%)</title><rect x="654.8" y="1781" width="0.1" height="15.0" fill="rgb(226,24,16)" rx="2" ry="2" />
<text  x="657.75" y="1791.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::json_value::destroy (4 samples, 0.02%)</title><rect x="119.4" y="1989" width="0.3" height="15.0" fill="rgb(231,220,41)" rx="2" ry="2" />
<text  x="122.44" y="1999.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (25 samples, 0.12%)</title><rect x="1101.5" y="1973" width="1.5" height="15.0" fill="rgb(242,195,19)" rx="2" ry="2" />
<text  x="1104.54" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (489 samples, 2.44%)</title><rect x="185.9" y="1877" width="28.8" height="15.0" fill="rgb(242,78,35)" rx="2" ry="2" />
<text  x="188.86" y="1887.5" >st..</text>
</g>
<g >
<title>__dynamic_cast (6 samples, 0.03%)</title><rect x="139.7" y="1637" width="0.3" height="15.0" fill="rgb(246,59,32)" rx="2" ry="2" />
<text  x="142.66" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1186.5" y="1285" width="0.4" height="15.0" fill="rgb(250,190,28)" rx="2" ry="2" />
<text  x="1189.46" y="1295.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (4 samples, 0.02%)</title><rect x="84.2" y="1733" width="0.2" height="15.0" fill="rgb(229,137,45)" rx="2" ry="2" />
<text  x="87.20" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (14 samples, 0.07%)</title><rect x="1186.9" y="1861" width="0.9" height="15.0" fill="rgb(243,80,36)" rx="2" ry="2" />
<text  x="1189.94" y="1871.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (2 samples, 0.01%)</title><rect x="76.5" y="1109" width="0.2" height="15.0" fill="rgb(239,221,33)" rx="2" ry="2" />
<text  x="79.54" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="183.5" y="1093" width="0.1" height="15.0" fill="rgb(239,225,50)" rx="2" ry="2" />
<text  x="186.51" y="1103.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (8 samples, 0.04%)</title><rect x="90.1" y="2005" width="0.5" height="15.0" fill="rgb(237,183,32)" rx="2" ry="2" />
<text  x="93.09" y="2015.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::clear (9 samples, 0.04%)</title><rect x="655.5" y="1877" width="0.5" height="15.0" fill="rgb(212,159,25)" rx="2" ry="2" />
<text  x="658.52" y="1887.5" ></text>
</g>
<g >
<title>release_pages (2 samples, 0.01%)</title><rect x="524.3" y="1893" width="0.1" height="15.0" fill="rgb(245,19,3)" rx="2" ry="2" />
<text  x="527.33" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1185.6" y="1909" width="0.1" height="15.0" fill="rgb(245,111,18)" rx="2" ry="2" />
<text  x="1188.58" y="1919.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (3 samples, 0.01%)</title><rect x="139.0" y="1621" width="0.1" height="15.0" fill="rgb(242,153,6)" rx="2" ry="2" />
<text  x="141.95" y="1631.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.01%)</title><rect x="118.3" y="2021" width="0.1" height="15.0" fill="rgb(214,141,13)" rx="2" ry="2" />
<text  x="121.26" y="2031.5" ></text>
</g>
<g >
<title>__lsan::ResetTagsCb (2 samples, 0.01%)</title><rect x="522.7" y="2037" width="0.2" height="15.0" fill="rgb(231,120,24)" rx="2" ry="2" />
<text  x="525.74" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (105 samples, 0.52%)</title><rect x="208.0" y="1813" width="6.2" height="15.0" fill="rgb(225,159,26)" rx="2" ry="2" />
<text  x="211.02" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (559 samples, 2.79%)</title><rect x="55.4" y="1941" width="32.9" height="15.0" fill="rgb(244,52,24)" rx="2" ry="2" />
<text  x="58.38" y="1951.5" >[u..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.04%)</title><rect x="1185.9" y="501" width="0.5" height="15.0" fill="rgb(234,41,54)" rx="2" ry="2" />
<text  x="1188.87" y="511.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (21 samples, 0.10%)</title><rect x="320.7" y="1941" width="1.2" height="15.0" fill="rgb(254,57,34)" rx="2" ry="2" />
<text  x="323.71" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="155.7" y="1829" width="0.4" height="15.0" fill="rgb(244,88,47)" rx="2" ry="2" />
<text  x="158.75" y="1839.5" ></text>
</g>
<g >
<title>Annotate (170 samples, 0.85%)</title><rect x="118.5" y="2005" width="10.0" height="15.0" fill="rgb(249,201,41)" rx="2" ry="2" />
<text  x="121.50" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="155.7" y="1477" width="0.2" height="15.0" fill="rgb(248,74,23)" rx="2" ry="2" />
<text  x="158.75" y="1487.5" ></text>
</g>
<g >
<title>ComputeClusterWeight (947 samples, 4.73%)</title><rect x="128.5" y="1989" width="55.8" height="15.0" fill="rgb(233,138,17)" rx="2" ry="2" />
<text  x="131.52" y="1999.5" >Compu..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1186.5" y="533" width="0.4" height="15.0" fill="rgb(221,170,12)" rx="2" ry="2" />
<text  x="1189.52" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.02%)</title><rect x="183.3" y="1701" width="0.3" height="15.0" fill="rgb(206,225,8)" rx="2" ry="2" />
<text  x="186.33" y="1711.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.01%)</title><rect x="1111.8" y="2021" width="0.2" height="15.0" fill="rgb(249,67,37)" rx="2" ry="2" />
<text  x="1114.79" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (9 samples, 0.04%)</title><rect x="1185.9" y="341" width="0.5" height="15.0" fill="rgb(243,134,16)" rx="2" ry="2" />
<text  x="1188.87" y="351.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.01%)</title><rect x="190.5" y="1557" width="0.1" height="15.0" fill="rgb(238,69,44)" rx="2" ry="2" />
<text  x="193.46" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.02%)</title><rect x="183.3" y="1381" width="0.3" height="15.0" fill="rgb(226,58,11)" rx="2" ry="2" />
<text  x="186.33" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.04%)</title><rect x="1185.9" y="613" width="0.5" height="15.0" fill="rgb(218,186,20)" rx="2" ry="2" />
<text  x="1188.87" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.04%)</title><rect x="1185.9" y="661" width="0.5" height="15.0" fill="rgb(227,76,39)" rx="2" ry="2" />
<text  x="1188.87" y="671.5" ></text>
</g>
<g >
<title>page_fault (5 samples, 0.02%)</title><rect x="1024.0" y="2037" width="0.3" height="15.0" fill="rgb(245,154,31)" rx="2" ry="2" />
<text  x="1027.04" y="2047.5" ></text>
</g>
<g >
<title>up_read (2 samples, 0.01%)</title><rect x="948.7" y="1989" width="0.1" height="15.0" fill="rgb(240,206,30)" rx="2" ry="2" />
<text  x="951.66" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.02%)</title><rect x="155.9" y="1605" width="0.2" height="15.0" fill="rgb(239,31,9)" rx="2" ry="2" />
<text  x="158.86" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13 samples, 0.06%)</title><rect x="1187.0" y="1509" width="0.8" height="15.0" fill="rgb(253,51,31)" rx="2" ry="2" />
<text  x="1189.99" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1186.5" y="437" width="0.4" height="15.0" fill="rgb(240,42,23)" rx="2" ry="2" />
<text  x="1189.52" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="155.7" y="1269" width="0.2" height="15.0" fill="rgb(218,201,17)" rx="2" ry="2" />
<text  x="158.75" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="155.9" y="741" width="0.1" height="15.0" fill="rgb(218,38,54)" rx="2" ry="2" />
<text  x="158.86" y="751.5" ></text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.01%)</title><rect x="135.5" y="1605" width="0.1" height="15.0" fill="rgb(208,80,34)" rx="2" ry="2" />
<text  x="138.47" y="1615.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::json_value::destroy (4 samples, 0.02%)</title><rect x="519.2" y="1989" width="0.2" height="15.0" fill="rgb(208,205,32)" rx="2" ry="2" />
<text  x="522.20" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="183.2" y="1813" width="0.4" height="15.0" fill="rgb(211,218,45)" rx="2" ry="2" />
<text  x="186.21" y="1823.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (12 samples, 0.06%)</title><rect x="1115.2" y="2037" width="0.7" height="15.0" fill="rgb(238,206,10)" rx="2" ry="2" />
<text  x="1118.15" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="155.7" y="1669" width="0.2" height="15.0" fill="rgb(228,126,27)" rx="2" ry="2" />
<text  x="158.75" y="1679.5" ></text>
</g>
<g >
<title>page_fault (18 samples, 0.09%)</title><rect x="679.7" y="1845" width="1.1" height="15.0" fill="rgb(216,209,38)" rx="2" ry="2" />
<text  x="682.74" y="1855.5" ></text>
</g>
<g >
<title>__pthread_getspecific (4 samples, 0.02%)</title><rect x="317.0" y="1957" width="0.2" height="15.0" fill="rgb(208,126,19)" rx="2" ry="2" />
<text  x="319.99" y="1967.5" ></text>
</g>
<g >
<title>__dynamic_cast (7 samples, 0.03%)</title><rect x="186.6" y="1589" width="0.4" height="15.0" fill="rgb(232,121,46)" rx="2" ry="2" />
<text  x="189.57" y="1599.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;std::__detail::_State&lt;char&gt; const*, std::__detail::_State&lt;char&gt;*&gt; (3 samples, 0.01%)</title><rect x="128.9" y="1653" width="0.2" height="15.0" fill="rgb(223,23,47)" rx="2" ry="2" />
<text  x="131.93" y="1663.5" ></text>
</g>
<g >
<title>__pthread_getspecific (6 samples, 0.03%)</title><rect x="211.1" y="1669" width="0.3" height="15.0" fill="rgb(246,5,9)" rx="2" ry="2" />
<text  x="214.09" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1186.5" y="1429" width="0.4" height="15.0" fill="rgb(233,104,24)" rx="2" ry="2" />
<text  x="1189.46" y="1439.5" ></text>
</g>
<g >
<title>[unknown] (11 samples, 0.05%)</title><rect x="817.4" y="1989" width="0.7" height="15.0" fill="rgb(241,220,37)" rx="2" ry="2" />
<text  x="820.41" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="215.9" y="1413" width="0.2" height="15.0" fill="rgb(236,118,16)" rx="2" ry="2" />
<text  x="218.86" y="1423.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (3 samples, 0.01%)</title><rect x="166.5" y="1605" width="0.2" height="15.0" fill="rgb(232,15,48)" rx="2" ry="2" />
<text  x="169.53" y="1615.5" ></text>
</g>
<g >
<title>operator new (42 samples, 0.21%)</title><rect x="607.8" y="1861" width="2.5" height="15.0" fill="rgb(220,85,29)" rx="2" ry="2" />
<text  x="610.84" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="155.9" y="1717" width="0.2" height="15.0" fill="rgb(247,147,34)" rx="2" ry="2" />
<text  x="158.86" y="1727.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;fasttext::FastText, std::default_delete&lt;fasttext::FastText&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;fasttext::FastText, std::default_delete&lt;fasttext::FastText&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (3 samples, 0.01%)</title><rect x="520.0" y="2005" width="0.2" height="15.0" fill="rgb(224,86,33)" rx="2" ry="2" />
<text  x="523.02" y="2015.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (56 samples, 0.28%)</title><rect x="740.6" y="1877" width="3.3" height="15.0" fill="rgb(250,105,42)" rx="2" ry="2" />
<text  x="743.56" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="155.7" y="1749" width="0.4" height="15.0" fill="rgb(225,126,29)" rx="2" ry="2" />
<text  x="158.75" y="1759.5" ></text>
</g>
<g >
<title>[libm-2.27.so] (2 samples, 0.01%)</title><rect x="29.0" y="2053" width="0.2" height="15.0" fill="rgb(231,72,18)" rx="2" ry="2" />
<text  x="32.04" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (11 samples, 0.05%)</title><rect x="1185.8" y="1925" width="0.6" height="15.0" fill="rgb(252,123,3)" rx="2" ry="2" />
<text  x="1188.76" y="1935.5" ></text>
</g>
<g >
<title>alloc_pages_vma (6 samples, 0.03%)</title><rect x="501.3" y="1845" width="0.4" height="15.0" fill="rgb(250,97,45)" rx="2" ry="2" />
<text  x="504.34" y="1855.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (3 samples, 0.01%)</title><rect x="212.4" y="1669" width="0.2" height="15.0" fill="rgb(235,185,4)" rx="2" ry="2" />
<text  x="215.38" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.04%)</title><rect x="155.6" y="1909" width="0.5" height="15.0" fill="rgb(241,157,16)" rx="2" ry="2" />
<text  x="158.57" y="1919.5" ></text>
</g>
<g >
<title>__pthread_getspecific (46 samples, 0.23%)</title><rect x="1171.2" y="2037" width="2.7" height="15.0" fill="rgb(241,5,15)" rx="2" ry="2" />
<text  x="1174.20" y="2047.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (2 samples, 0.01%)</title><rect x="210.6" y="1669" width="0.1" height="15.0" fill="rgb(247,161,46)" rx="2" ry="2" />
<text  x="213.62" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_Compiler (457 samples, 2.28%)</title><rect x="156.3" y="1925" width="26.9" height="15.0" fill="rgb(235,222,16)" rx="2" ry="2" />
<text  x="159.28" y="1935.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13 samples, 0.06%)</title><rect x="1187.0" y="789" width="0.8" height="15.0" fill="rgb(237,9,3)" rx="2" ry="2" />
<text  x="1189.99" y="799.5" ></text>
</g>
<g >
<title>fasttext::DenseMatrix::dotRow (2 samples, 0.01%)</title><rect x="767.5" y="2037" width="0.1" height="15.0" fill="rgb(223,161,24)" rx="2" ry="2" />
<text  x="770.49" y="2047.5" ></text>
</g>
<g >
<title>zap_page_range (23 samples, 0.11%)</title><rect x="523.1" y="1973" width="1.3" height="15.0" fill="rgb(254,9,36)" rx="2" ry="2" />
<text  x="526.09" y="1983.5" ></text>
</g>
<g >
<title>fasttext::DenseMatrix::load (5 samples, 0.02%)</title><rect x="1103.7" y="2053" width="0.3" height="15.0" fill="rgb(216,90,54)" rx="2" ry="2" />
<text  x="1106.72" y="2063.5" ></text>
</g>
<g >
<title>TSlinkClustering::Cluster (3,067 samples, 15.32%)</title><rect x="336.9" y="2005" width="180.7" height="15.0" fill="rgb(249,124,39)" rx="2" ry="2" />
<text  x="339.85" y="2015.5" >TSlinkClustering::Cluster</text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (6 samples, 0.03%)</title><rect x="82.9" y="1669" width="0.4" height="15.0" fill="rgb(234,195,25)" rx="2" ry="2" />
<text  x="85.90" y="1679.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (62 samples, 0.31%)</title><rect x="198.5" y="1621" width="3.6" height="15.0" fill="rgb(239,170,5)" rx="2" ry="2" />
<text  x="201.47" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.04%)</title><rect x="1185.9" y="213" width="0.5" height="15.0" fill="rgb(225,148,4)" rx="2" ry="2" />
<text  x="1188.87" y="223.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (10 samples, 0.05%)</title><rect x="535.7" y="1909" width="0.6" height="15.0" fill="rgb(253,91,12)" rx="2" ry="2" />
<text  x="538.70" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (101 samples, 0.50%)</title><rect x="208.1" y="1765" width="5.9" height="15.0" fill="rgb(235,225,42)" rx="2" ry="2" />
<text  x="211.08" y="1775.5" ></text>
</g>
<g >
<title>handle_mm_fault (7 samples, 0.03%)</title><rect x="651.0" y="1813" width="0.5" height="15.0" fill="rgb(218,19,0)" rx="2" ry="2" />
<text  x="654.04" y="1823.5" ></text>
</g>
<g >
<title>do_syscall_64 (27 samples, 0.13%)</title><rect x="1101.5" y="2021" width="1.6" height="15.0" fill="rgb(249,196,18)" rx="2" ry="2" />
<text  x="1104.48" y="2031.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (6 samples, 0.03%)</title><rect x="151.8" y="1669" width="0.4" height="15.0" fill="rgb(239,74,0)" rx="2" ry="2" />
<text  x="154.80" y="1679.5" ></text>
</g>
<g >
<title>generic_exec_single (3 samples, 0.01%)</title><rect x="523.3" y="1813" width="0.1" height="15.0" fill="rgb(207,14,45)" rx="2" ry="2" />
<text  x="526.27" y="1823.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (3 samples, 0.01%)</title><rect x="195.7" y="1605" width="0.2" height="15.0" fill="rgb(227,135,49)" rx="2" ry="2" />
<text  x="198.70" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (8 samples, 0.04%)</title><rect x="1186.4" y="1653" width="0.5" height="15.0" fill="rgb(220,114,9)" rx="2" ry="2" />
<text  x="1189.40" y="1663.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (23 samples, 0.11%)</title><rect x="1173.9" y="2037" width="1.4" height="15.0" fill="rgb(228,172,44)" rx="2" ry="2" />
<text  x="1176.91" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1185.6" y="1429" width="0.1" height="15.0" fill="rgb(205,200,49)" rx="2" ry="2" />
<text  x="1188.58" y="1439.5" ></text>
</g>
<g >
<title>release_pages (2 samples, 0.01%)</title><rect x="767.3" y="1845" width="0.1" height="15.0" fill="rgb(217,170,2)" rx="2" ry="2" />
<text  x="770.26" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="183.2" y="1845" width="0.4" height="15.0" fill="rgb(248,159,44)" rx="2" ry="2" />
<text  x="186.21" y="1855.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::basic_regex&lt;char const*&gt; (458 samples, 2.29%)</title><rect x="156.2" y="1941" width="27.0" height="15.0" fill="rgb(212,12,17)" rx="2" ry="2" />
<text  x="159.22" y="1951.5" >s..</text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (67 samples, 0.33%)</title><rect x="177.4" y="1685" width="3.9" height="15.0" fill="rgb(249,15,41)" rx="2" ry="2" />
<text  x="180.38" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.04%)</title><rect x="155.6" y="1941" width="0.5" height="15.0" fill="rgb(241,32,11)" rx="2" ry="2" />
<text  x="158.57" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.04%)</title><rect x="1185.9" y="37" width="0.5" height="15.0" fill="rgb(247,33,18)" rx="2" ry="2" />
<text  x="1188.87" y="47.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (52 samples, 0.26%)</title><rect x="163.3" y="1589" width="3.1" height="15.0" fill="rgb(239,10,23)" rx="2" ry="2" />
<text  x="166.29" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (67 samples, 0.33%)</title><rect x="172.1" y="1701" width="4.0" height="15.0" fill="rgb(229,137,42)" rx="2" ry="2" />
<text  x="175.13" y="1711.5" ></text>
</g>
<g >
<title>do_page_fault (12 samples, 0.06%)</title><rect x="762.2" y="2005" width="0.7" height="15.0" fill="rgb(207,217,16)" rx="2" ry="2" />
<text  x="765.19" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.05%)</title><rect x="215.7" y="1845" width="0.6" height="15.0" fill="rgb(239,13,25)" rx="2" ry="2" />
<text  x="218.68" y="1855.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::has_features (2 samples, 0.01%)</title><rect x="576.2" y="1893" width="0.2" height="15.0" fill="rgb(247,129,14)" rx="2" ry="2" />
<text  x="579.25" y="1903.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="182.1" y="1797" width="0.2" height="15.0" fill="rgb(219,53,15)" rx="2" ry="2" />
<text  x="185.15" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="183.4" y="853" width="0.1" height="15.0" fill="rgb(247,121,25)" rx="2" ry="2" />
<text  x="186.39" y="863.5" ></text>
</g>
<g >
<title>unmap_region (2 samples, 0.01%)</title><rect x="90.0" y="1909" width="0.1" height="15.0" fill="rgb(234,39,9)" rx="2" ry="2" />
<text  x="92.98" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="183.3" y="1765" width="0.3" height="15.0" fill="rgb(227,227,13)" rx="2" ry="2" />
<text  x="186.27" y="1775.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThreadStats (14 samples, 0.07%)</title><rect x="114.4" y="2037" width="0.9" height="15.0" fill="rgb(205,228,24)" rx="2" ry="2" />
<text  x="117.43" y="2047.5" ></text>
</g>
<g >
<title>do_page_fault (39 samples, 0.19%)</title><rect x="694.2" y="1829" width="2.3" height="15.0" fill="rgb(206,49,10)" rx="2" ry="2" />
<text  x="697.24" y="1839.5" ></text>
</g>
<g >
<title>wp_page_copy (13 samples, 0.06%)</title><rect x="54.5" y="1925" width="0.8" height="15.0" fill="rgb(237,198,21)" rx="2" ry="2" />
<text  x="57.50" y="1935.5" ></text>
</g>
<g >
<title>try_charge (3 samples, 0.01%)</title><rect x="502.0" y="1813" width="0.2" height="15.0" fill="rgb(207,88,8)" rx="2" ry="2" />
<text  x="504.99" y="1823.5" ></text>
</g>
<g >
<title>handle_mm_fault (31 samples, 0.15%)</title><rect x="694.7" y="1797" width="1.8" height="15.0" fill="rgb(224,44,39)" rx="2" ry="2" />
<text  x="697.71" y="1807.5" ></text>
</g>
<g >
<title>schedule (5 samples, 0.02%)</title><rect x="128.0" y="1861" width="0.3" height="15.0" fill="rgb(213,62,50)" rx="2" ry="2" />
<text  x="130.99" y="1871.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.01%)</title><rect x="539.5" y="1909" width="0.1" height="15.0" fill="rgb(251,155,18)" rx="2" ry="2" />
<text  x="542.47" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13 samples, 0.06%)</title><rect x="1187.0" y="309" width="0.8" height="15.0" fill="rgb(213,39,41)" rx="2" ry="2" />
<text  x="1189.99" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;TDocument, std::allocator&lt;TDocument&gt; &gt;::_M_realloc_insert&lt;TDocument&gt; (2 samples, 0.01%)</title><rect x="128.4" y="1989" width="0.1" height="15.0" fill="rgb(248,65,37)" rx="2" ry="2" />
<text  x="131.40" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (80 samples, 0.40%)</title><rect x="139.4" y="1717" width="4.7" height="15.0" fill="rgb(213,86,35)" rx="2" ry="2" />
<text  x="142.42" y="1727.5" ></text>
</g>
<g >
<title>memcpy@plt (5 samples, 0.02%)</title><rect x="1110.9" y="2053" width="0.3" height="15.0" fill="rgb(239,158,43)" rx="2" ry="2" />
<text  x="1113.91" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (85 samples, 0.42%)</title><rect x="186.5" y="1605" width="5.0" height="15.0" fill="rgb(223,113,19)" rx="2" ry="2" />
<text  x="189.45" y="1615.5" ></text>
</g>
<g >
<title>handle_mm_fault (6 samples, 0.03%)</title><rect x="762.4" y="1973" width="0.4" height="15.0" fill="rgb(235,78,46)" rx="2" ry="2" />
<text  x="765.43" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (110 samples, 0.55%)</title><rect x="196.3" y="1749" width="6.5" height="15.0" fill="rgb(237,178,52)" rx="2" ry="2" />
<text  x="199.29" y="1759.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.01%)</title><rect x="871.6" y="1941" width="0.2" height="15.0" fill="rgb(226,199,25)" rx="2" ry="2" />
<text  x="874.63" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.04%)</title><rect x="1185.9" y="357" width="0.5" height="15.0" fill="rgb(234,123,47)" rx="2" ry="2" />
<text  x="1188.87" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (71 samples, 0.35%)</title><rect x="129.5" y="1589" width="4.1" height="15.0" fill="rgb(239,137,32)" rx="2" ry="2" />
<text  x="132.46" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="155.9" y="533" width="0.1" height="15.0" fill="rgb(233,138,20)" rx="2" ry="2" />
<text  x="158.86" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (9 samples, 0.04%)</title><rect x="1185.9" y="1253" width="0.5" height="15.0" fill="rgb(254,88,18)" rx="2" ry="2" />
<text  x="1188.87" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.02%)</title><rect x="215.9" y="1397" width="0.2" height="15.0" fill="rgb(249,215,31)" rx="2" ry="2" />
<text  x="218.86" y="1407.5" ></text>
</g>
<g >
<title>onmt::Tokenizer::tokenize (3,090 samples, 15.43%)</title><rect x="573.8" y="1925" width="182.1" height="15.0" fill="rgb(236,163,30)" rx="2" ry="2" />
<text  x="576.77" y="1935.5" >onmt::Tokenizer::tokenize</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.05%)</title><rect x="215.7" y="1829" width="0.6" height="15.0" fill="rgb(250,31,46)" rx="2" ry="2" />
<text  x="218.68" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (9 samples, 0.04%)</title><rect x="1185.9" y="917" width="0.5" height="15.0" fill="rgb(236,110,40)" rx="2" ry="2" />
<text  x="1188.87" y="927.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (35 samples, 0.17%)</title><rect x="173.5" y="1637" width="2.1" height="15.0" fill="rgb(225,97,29)" rx="2" ry="2" />
<text  x="176.55" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="156.0" y="981" width="0.1" height="15.0" fill="rgb(227,94,49)" rx="2" ry="2" />
<text  x="158.98" y="991.5" ></text>
</g>
<g >
<title>do_mmap (20 samples, 0.10%)</title><rect x="1101.5" y="1957" width="1.2" height="15.0" fill="rgb(220,22,37)" rx="2" ry="2" />
<text  x="1104.54" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="215.7" y="1525" width="0.4" height="15.0" fill="rgb(211,114,20)" rx="2" ry="2" />
<text  x="218.68" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="216.2" y="1477" width="0.1" height="15.0" fill="rgb(213,56,46)" rx="2" ry="2" />
<text  x="219.16" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="155.7" y="1557" width="0.2" height="15.0" fill="rgb(254,215,2)" rx="2" ry="2" />
<text  x="158.75" y="1567.5" ></text>
</g>
<g >
<title>[libm-2.27.so] (3 samples, 0.01%)</title><rect x="570.8" y="1893" width="0.2" height="15.0" fill="rgb(228,123,15)" rx="2" ry="2" />
<text  x="573.83" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1185.6" y="1525" width="0.1" height="15.0" fill="rgb(231,131,15)" rx="2" ry="2" />
<text  x="1188.58" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13 samples, 0.06%)</title><rect x="1187.0" y="629" width="0.8" height="15.0" fill="rgb(211,30,41)" rx="2" ry="2" />
<text  x="1189.99" y="639.5" ></text>
</g>
<g >
<title>__dynamic_cast (9 samples, 0.04%)</title><rect x="131.2" y="1557" width="0.5" height="15.0" fill="rgb(244,56,29)" rx="2" ry="2" />
<text  x="134.17" y="1567.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;std::__detail::_State&lt;char&gt; const*, std::__detail::_State&lt;char&gt;*&gt; (5 samples, 0.02%)</title><rect x="176.3" y="1701" width="0.3" height="15.0" fill="rgb(219,99,38)" rx="2" ry="2" />
<text  x="179.26" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (9 samples, 0.04%)</title><rect x="1185.9" y="677" width="0.5" height="15.0" fill="rgb(205,24,40)" rx="2" ry="2" />
<text  x="1188.87" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="155.9" y="517" width="0.1" height="15.0" fill="rgb(212,101,32)" rx="2" ry="2" />
<text  x="158.86" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.04%)</title><rect x="1185.9" y="1269" width="0.5" height="15.0" fill="rgb(213,198,40)" rx="2" ry="2" />
<text  x="1188.87" y="1279.5" ></text>
</g>
<g >
<title>[[vdso]] (6 samples, 0.03%)</title><rect x="117.9" y="2021" width="0.3" height="15.0" fill="rgb(251,22,12)" rx="2" ry="2" />
<text  x="120.85" y="2031.5" ></text>
</g>
<g >
<title>all (20,022 samples, 100%)</title><rect x="10.0" y="2085" width="1180.0" height="15.0" fill="rgb(224,103,44)" rx="2" ry="2" />
<text  x="13.00" y="2095.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.02%)</title><rect x="216.1" y="1733" width="0.2" height="15.0" fill="rgb(238,146,19)" rx="2" ry="2" />
<text  x="219.10" y="1743.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (2 samples, 0.01%)</title><rect x="801.3" y="1989" width="0.1" height="15.0" fill="rgb(217,160,1)" rx="2" ry="2" />
<text  x="804.26" y="1999.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (6 samples, 0.03%)</title><rect x="501.8" y="1845" width="0.4" height="15.0" fill="rgb(252,132,53)" rx="2" ry="2" />
<text  x="504.81" y="1855.5" ></text>
</g>
<g >
<title>operator new[] (49 samples, 0.24%)</title><rect x="1182.6" y="2037" width="2.9" height="15.0" fill="rgb(217,184,14)" rx="2" ry="2" />
<text  x="1185.63" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (88 samples, 0.44%)</title><rect x="144.3" y="1717" width="5.1" height="15.0" fill="rgb(251,198,12)" rx="2" ry="2" />
<text  x="147.25" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.05%)</title><rect x="1185.8" y="1797" width="0.6" height="15.0" fill="rgb(254,97,1)" rx="2" ry="2" />
<text  x="1188.76" y="1807.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (2 samples, 0.01%)</title><rect x="76.8" y="1157" width="0.1" height="15.0" fill="rgb(225,154,46)" rx="2" ry="2" />
<text  x="79.77" y="1167.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (323 samples, 1.61%)</title><rect x="10.0" y="2053" width="19.0" height="15.0" fill="rgb(235,11,3)" rx="2" ry="2" />
<text  x="13.00" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (2 samples, 0.01%)</title><rect x="182.1" y="1813" width="0.2" height="15.0" fill="rgb(210,82,52)" rx="2" ry="2" />
<text  x="185.15" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (9 samples, 0.04%)</title><rect x="1185.9" y="821" width="0.5" height="15.0" fill="rgb(232,133,31)" rx="2" ry="2" />
<text  x="1188.87" y="831.5" ></text>
</g>
<g >
<title>get_unmapped_area (4 samples, 0.02%)</title><rect x="1101.7" y="1941" width="0.2" height="15.0" fill="rgb(226,161,11)" rx="2" ry="2" />
<text  x="1104.66" y="1951.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.01%)</title><rect x="493.6" y="1941" width="0.1" height="15.0" fill="rgb(238,216,49)" rx="2" ry="2" />
<text  x="496.56" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1186.5" y="741" width="0.4" height="15.0" fill="rgb(230,178,53)" rx="2" ry="2" />
<text  x="1189.52" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="183.4" y="1045" width="0.1" height="15.0" fill="rgb(208,158,47)" rx="2" ry="2" />
<text  x="186.39" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (88 samples, 0.44%)</title><rect x="186.4" y="1701" width="5.2" height="15.0" fill="rgb(254,183,18)" rx="2" ry="2" />
<text  x="189.39" y="1711.5" ></text>
</g>
<g >
<title>do_page_fault (8 samples, 0.04%)</title><rect x="103.1" y="2005" width="0.5" height="15.0" fill="rgb(217,65,11)" rx="2" ry="2" />
<text  x="106.12" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (14 samples, 0.07%)</title><rect x="1186.9" y="1813" width="0.9" height="15.0" fill="rgb(207,67,10)" rx="2" ry="2" />
<text  x="1189.94" y="1823.5" ></text>
</g>
<g >
<title>__madvise (27 samples, 0.13%)</title><rect x="522.9" y="2037" width="1.5" height="15.0" fill="rgb(248,214,6)" rx="2" ry="2" />
<text  x="525.85" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1185.6" y="1509" width="0.1" height="15.0" fill="rgb(207,1,33)" rx="2" ry="2" />
<text  x="1188.58" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (13 samples, 0.06%)</title><rect x="1187.0" y="949" width="0.8" height="15.0" fill="rgb(239,75,12)" rx="2" ry="2" />
<text  x="1189.99" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1185.6" y="1413" width="0.1" height="15.0" fill="rgb(252,178,31)" rx="2" ry="2" />
<text  x="1188.58" y="1423.5" ></text>
</g>
<g >
<title>zap_page_range (2 samples, 0.01%)</title><rect x="80.5" y="1397" width="0.1" height="15.0" fill="rgb(247,101,52)" rx="2" ry="2" />
<text  x="83.49" y="1407.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (2 samples, 0.01%)</title><rect x="572.1" y="1941" width="0.1" height="15.0" fill="rgb(234,162,22)" rx="2" ry="2" />
<text  x="575.06" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (308 samples, 1.54%)</title><rect x="55.4" y="69" width="18.1" height="15.0" fill="rgb(243,84,14)" rx="2" ry="2" />
<text  x="58.38" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (79 samples, 0.39%)</title><rect x="129.1" y="1621" width="4.7" height="15.0" fill="rgb(247,187,0)" rx="2" ry="2" />
<text  x="132.11" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13 samples, 0.06%)</title><rect x="1187.0" y="1397" width="0.8" height="15.0" fill="rgb(254,214,31)" rx="2" ry="2" />
<text  x="1189.99" y="1407.5" ></text>
</g>
<g >
<title>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::dump (6 samples, 0.03%)</title><rect x="518.7" y="1941" width="0.4" height="15.0" fill="rgb(229,201,8)" rx="2" ry="2" />
<text  x="521.73" y="1951.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (4 samples, 0.02%)</title><rect x="43.7" y="2005" width="0.2" height="15.0" fill="rgb(246,193,12)" rx="2" ry="2" />
<text  x="46.65" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="155.9" y="901" width="0.1" height="15.0" fill="rgb(210,87,12)" rx="2" ry="2" />
<text  x="158.86" y="911.5" ></text>
</g>
<g >
<title>fasttext::Matrix::size (34 samples, 0.17%)</title><rect x="493.7" y="1957" width="2.0" height="15.0" fill="rgb(250,89,27)" rx="2" ry="2" />
<text  x="496.74" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (2 samples, 0.01%)</title><rect x="182.6" y="1797" width="0.1" height="15.0" fill="rgb(210,95,22)" rx="2" ry="2" />
<text  x="185.62" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="155.7" y="1461" width="0.2" height="15.0" fill="rgb(230,44,8)" rx="2" ry="2" />
<text  x="158.75" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (2 samples, 0.01%)</title><rect x="149.4" y="1765" width="0.2" height="15.0" fill="rgb(224,118,4)" rx="2" ry="2" />
<text  x="152.44" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (480 samples, 2.40%)</title><rect x="185.9" y="1829" width="28.3" height="15.0" fill="rgb(224,53,22)" rx="2" ry="2" />
<text  x="188.92" y="1839.5" >s..</text>
</g>
<g >
<title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::basic_regex&lt;char const*&gt; (457 samples, 2.28%)</title><rect x="128.6" y="1957" width="27.0" height="15.0" fill="rgb(236,66,8)" rx="2" ry="2" />
<text  x="131.64" y="1967.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1186.5" y="293" width="0.4" height="15.0" fill="rgb(218,135,5)" rx="2" ry="2" />
<text  x="1189.52" y="303.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::computeSubwords (19 samples, 0.09%)</title><rect x="872.6" y="1957" width="1.1" height="15.0" fill="rgb(221,226,17)" rx="2" ry="2" />
<text  x="875.58" y="1967.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64LocalCache&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&gt; &gt;::Deallocate (38 samples, 0.19%)</title><rect x="71.2" y="37" width="2.3" height="15.0" fill="rgb(222,0,1)" rx="2" ry="2" />
<text  x="74.23" y="47.5" ></text>
</g>
<g >
<title>__do_page_fault (4 samples, 0.02%)</title><rect x="1189.4" y="1989" width="0.2" height="15.0" fill="rgb(213,152,6)" rx="2" ry="2" />
<text  x="1192.35" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_Compiler (510 samples, 2.55%)</title><rect x="185.5" y="1941" width="30.1" height="15.0" fill="rgb(247,92,4)" rx="2" ry="2" />
<text  x="188.51" y="1951.5" >st..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (375 samples, 1.87%)</title><rect x="185.9" y="1813" width="22.1" height="15.0" fill="rgb(239,27,54)" rx="2" ry="2" />
<text  x="188.92" y="1823.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14 samples, 0.07%)</title><rect x="1186.9" y="1653" width="0.9" height="15.0" fill="rgb(205,160,16)" rx="2" ry="2" />
<text  x="1189.94" y="1663.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (10 samples, 0.05%)</title><rect x="945.5" y="1893" width="0.6" height="15.0" fill="rgb(219,112,32)" rx="2" ry="2" />
<text  x="948.48" y="1903.5" ></text>
</g>
<g >
<title>Eigen::PlainObjectBase&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; &gt;::resize (4 samples, 0.02%)</title><rect x="222.2" y="1957" width="0.3" height="15.0" fill="rgb(234,61,33)" rx="2" ry="2" />
<text  x="225.23" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="155.9" y="757" width="0.1" height="15.0" fill="rgb(250,113,42)" rx="2" ry="2" />
<text  x="158.86" y="767.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="315.1" y="1941" width="0.1" height="15.0" fill="rgb(244,35,15)" rx="2" ry="2" />
<text  x="318.11" y="1951.5" ></text>
</g>
<g >
<title>handle_mm_fault (4 samples, 0.02%)</title><rect x="728.8" y="1829" width="0.2" height="15.0" fill="rgb(222,178,40)" rx="2" ry="2" />
<text  x="731.77" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (319 samples, 1.59%)</title><rect x="55.4" y="341" width="18.8" height="15.0" fill="rgb(234,157,38)" rx="2" ry="2" />
<text  x="58.38" y="351.5" ></text>
</g>
<g >
<title>operator delete (28 samples, 0.14%)</title><rect x="631.5" y="1877" width="1.7" height="15.0" fill="rgb(236,72,16)" rx="2" ry="2" />
<text  x="634.53" y="1887.5" ></text>
</g>
<g >
<title>__madvise (2 samples, 0.01%)</title><rect x="85.7" y="1813" width="0.1" height="15.0" fill="rgb(225,165,18)" rx="2" ry="2" />
<text  x="88.67" y="1823.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (58 samples, 0.29%)</title><rect x="1164.5" y="2021" width="3.5" height="15.0" fill="rgb(209,156,20)" rx="2" ry="2" />
<text  x="1167.54" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.01%)</title><rect x="183.3" y="1093" width="0.2" height="15.0" fill="rgb(212,140,10)" rx="2" ry="2" />
<text  x="186.33" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.02%)</title><rect x="215.8" y="1445" width="0.3" height="15.0" fill="rgb(235,51,24)" rx="2" ry="2" />
<text  x="218.80" y="1455.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (4 samples, 0.02%)</title><rect x="1120.0" y="2037" width="0.3" height="15.0" fill="rgb(223,17,26)" rx="2" ry="2" />
<text  x="1123.04" y="2047.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_Alloc_node&gt; (2 samples, 0.01%)</title><rect x="519.9" y="1941" width="0.1" height="15.0" fill="rgb(235,109,25)" rx="2" ry="2" />
<text  x="522.91" y="1951.5" ></text>
</g>
<g >
<title>__asan::AsanChunk::UsedSize (58 samples, 0.29%)</title><rect x="108.8" y="2037" width="3.5" height="15.0" fill="rgb(235,89,40)" rx="2" ry="2" />
<text  x="111.83" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="183.5" y="1189" width="0.1" height="15.0" fill="rgb(208,153,42)" rx="2" ry="2" />
<text  x="186.51" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1186.5" y="261" width="0.4" height="15.0" fill="rgb(247,10,44)" rx="2" ry="2" />
<text  x="1189.52" y="271.5" ></text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::get (2 samples, 0.01%)</title><rect x="119.9" y="1941" width="0.1" height="15.0" fill="rgb(217,11,51)" rx="2" ry="2" />
<text  x="122.91" y="1951.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (2 samples, 0.01%)</title><rect x="80.0" y="1333" width="0.1" height="15.0" fill="rgb(206,166,41)" rx="2" ry="2" />
<text  x="82.96" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="183.4" y="949" width="0.1" height="15.0" fill="rgb(228,156,33)" rx="2" ry="2" />
<text  x="186.39" y="959.5" ></text>
</g>
<g >
<title>[unknown] (432 samples, 2.16%)</title><rect x="55.4" y="1509" width="25.4" height="15.0" fill="rgb(228,167,43)" rx="2" ry="2" />
<text  x="58.38" y="1519.5" >[..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (12 samples, 0.06%)</title><rect x="1187.1" y="165" width="0.7" height="15.0" fill="rgb(237,58,34)" rx="2" ry="2" />
<text  x="1190.05" y="175.5" ></text>
</g>
<g >
<title>Summarize (2,574 samples, 12.86%)</title><rect x="184.7" y="2005" width="151.7" height="15.0" fill="rgb(223,73,10)" rx="2" ry="2" />
<text  x="187.68" y="2015.5" >Summarize</text>
</g>
<g >
<title>fasttext::FastText::predictLine (220 samples, 1.10%)</title><rect x="527.3" y="1941" width="13.0" height="15.0" fill="rgb(240,40,4)" rx="2" ry="2" />
<text  x="530.33" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (319 samples, 1.59%)</title><rect x="55.4" y="373" width="18.8" height="15.0" fill="rgb(252,153,8)" rx="2" ry="2" />
<text  x="58.38" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (2 samples, 0.01%)</title><rect x="214.4" y="1765" width="0.1" height="15.0" fill="rgb(253,225,9)" rx="2" ry="2" />
<text  x="217.39" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13 samples, 0.06%)</title><rect x="1187.0" y="293" width="0.8" height="15.0" fill="rgb(206,53,52)" rx="2" ry="2" />
<text  x="1189.99" y="303.5" ></text>
</g>
<g >
<title>onmt::unicode::get_case (228 samples, 1.14%)</title><rect x="696.6" y="1877" width="13.4" height="15.0" fill="rgb(219,167,47)" rx="2" ry="2" />
<text  x="699.59" y="1887.5" ></text>
</g>
<g >
<title>__sanitizer_weak_hook_memcmp (2 samples, 0.01%)</title><rect x="537.5" y="1909" width="0.1" height="15.0" fill="rgb(212,120,27)" rx="2" ry="2" />
<text  x="540.47" y="1919.5" ></text>
</g>
<g >
<title>do_group_exit (5 samples, 0.02%)</title><rect x="1103.3" y="2005" width="0.3" height="15.0" fill="rgb(205,204,52)" rx="2" ry="2" />
<text  x="1106.31" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (102 samples, 0.51%)</title><rect x="196.4" y="1653" width="6.0" height="15.0" fill="rgb(222,30,30)" rx="2" ry="2" />
<text  x="199.41" y="1663.5" ></text>
</g>
<g >
<title>__asan::AsanTSDGet (2 samples, 0.01%)</title><rect x="872.5" y="1973" width="0.1" height="15.0" fill="rgb(252,70,18)" rx="2" ry="2" />
<text  x="875.46" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="183.4" y="885" width="0.1" height="15.0" fill="rgb(240,145,52)" rx="2" ry="2" />
<text  x="186.39" y="895.5" ></text>
</g>
<g >
<title>fasttext::ProductQuantizer::addcode (533 samples, 2.66%)</title><rect x="770.0" y="2037" width="31.4" height="15.0" fill="rgb(214,82,50)" rx="2" ry="2" />
<text  x="772.97" y="2047.5" >fa..</text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (4 samples, 0.02%)</title><rect x="128.9" y="1685" width="0.2" height="15.0" fill="rgb(223,34,17)" rx="2" ry="2" />
<text  x="131.87" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (13 samples, 0.06%)</title><rect x="1187.0" y="1429" width="0.8" height="15.0" fill="rgb(235,65,27)" rx="2" ry="2" />
<text  x="1189.99" y="1439.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::Unwind (11 samples, 0.05%)</title><rect x="598.1" y="1877" width="0.7" height="15.0" fill="rgb(224,62,17)" rx="2" ry="2" />
<text  x="601.11" y="1887.5" ></text>
</g>
<g >
<title>__do_page_fault (7 samples, 0.03%)</title><rect x="1099.4" y="2005" width="0.4" height="15.0" fill="rgb(210,126,17)" rx="2" ry="2" />
<text  x="1102.42" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.02%)</title><rect x="183.3" y="1509" width="0.3" height="15.0" fill="rgb(230,109,11)" rx="2" ry="2" />
<text  x="186.33" y="1519.5" ></text>
</g>
<g >
<title>[unknown] (352 samples, 1.76%)</title><rect x="55.4" y="1173" width="20.7" height="15.0" fill="rgb(238,29,47)" rx="2" ry="2" />
<text  x="58.38" y="1183.5" ></text>
</g>
<g >
<title>[unknown] (422 samples, 2.11%)</title><rect x="55.4" y="1461" width="24.9" height="15.0" fill="rgb(214,126,35)" rx="2" ry="2" />
<text  x="58.38" y="1471.5" >[..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (178 samples, 0.89%)</title><rect x="128.9" y="1749" width="10.5" height="15.0" fill="rgb(223,116,32)" rx="2" ry="2" />
<text  x="131.87" y="1759.5" ></text>
</g>
<g >
<title>RunFasttextClf (230 samples, 1.15%)</title><rect x="526.8" y="1957" width="13.6" height="15.0" fill="rgb(250,70,22)" rx="2" ry="2" />
<text  x="529.80" y="1967.5" ></text>
</g>
<g >
<title>generic_exec_single (2 samples, 0.01%)</title><rect x="55.1" y="1797" width="0.1" height="15.0" fill="rgb(234,92,30)" rx="2" ry="2" />
<text  x="58.09" y="1807.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (3 samples, 0.01%)</title><rect x="151.4" y="1669" width="0.2" height="15.0" fill="rgb(220,134,38)" rx="2" ry="2" />
<text  x="154.44" y="1679.5" ></text>
</g>
<g >
<title>__sanitizer::internal_memmove (28 samples, 0.14%)</title><rect x="489.8" y="1925" width="1.6" height="15.0" fill="rgb(248,41,28)" rx="2" ry="2" />
<text  x="492.79" y="1935.5" ></text>
</g>
<g >
<title>copy_page_to_iter (3 samples, 0.01%)</title><rect x="118.3" y="1877" width="0.1" height="15.0" fill="rgb(216,100,14)" rx="2" ry="2" />
<text  x="121.26" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (92 samples, 0.46%)</title><rect x="133.9" y="1701" width="5.4" height="15.0" fill="rgb(235,61,15)" rx="2" ry="2" />
<text  x="136.88" y="1711.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.01%)</title><rect x="493.4" y="1925" width="0.2" height="15.0" fill="rgb(230,91,48)" rx="2" ry="2" />
<text  x="496.45" y="1935.5" ></text>
</g>
<g >
<title>__lsan::ForEachChunk (4 samples, 0.02%)</title><rect x="521.0" y="2037" width="0.2" height="15.0" fill="rgb(218,105,53)" rx="2" ry="2" />
<text  x="523.97" y="2047.5" ></text>
</g>
<g >
<title>page_fault (21 samples, 0.10%)</title><rect x="54.0" y="2021" width="1.3" height="15.0" fill="rgb(248,31,25)" rx="2" ry="2" />
<text  x="57.02" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (88 samples, 0.44%)</title><rect x="176.6" y="1797" width="5.1" height="15.0" fill="rgb(217,188,10)" rx="2" ry="2" />
<text  x="179.55" y="1807.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (13 samples, 0.06%)</title><rect x="943.9" y="1909" width="0.8" height="15.0" fill="rgb(235,70,22)" rx="2" ry="2" />
<text  x="946.95" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (60 samples, 0.30%)</title><rect x="192.3" y="1621" width="3.6" height="15.0" fill="rgb(231,155,43)" rx="2" ry="2" />
<text  x="195.35" y="1631.5" ></text>
</g>
<g >
<title>__sanitizer::CombinedAllocator&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&gt;, __sanitizer::SizeClassAllocatorLocalCache&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&gt; &gt;, __sanitizer::LargeMmapAllocator&lt;__asan::AsanMapUnmapCallback, __sanitizer::LargeMmapAllocatorPtrArrayDynamic&gt; &gt;::Allocate (154 samples, 0.77%)</title><rect x="1014.9" y="2053" width="9.1" height="15.0" fill="rgb(213,119,35)" rx="2" ry="2" />
<text  x="1017.90" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 0.03%)</title><rect x="768.8" y="2021" width="0.4" height="15.0" fill="rgb(226,219,16)" rx="2" ry="2" />
<text  x="771.85" y="2031.5" ></text>
</g>
<g >
<title>onmt::unicode::is_letter (183 samples, 0.91%)</title><rect x="620.7" y="1877" width="10.8" height="15.0" fill="rgb(213,140,29)" rx="2" ry="2" />
<text  x="623.75" y="1887.5" ></text>
</g>
<g >
<title>__dynamic_cast (4 samples, 0.02%)</title><rect x="168.1" y="1605" width="0.2" height="15.0" fill="rgb(225,48,52)" rx="2" ry="2" />
<text  x="171.06" y="1615.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (5 samples, 0.02%)</title><rect x="170.8" y="1589" width="0.3" height="15.0" fill="rgb(244,121,39)" rx="2" ry="2" />
<text  x="173.78" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1186.5" y="693" width="0.4" height="15.0" fill="rgb(227,110,41)" rx="2" ry="2" />
<text  x="1189.52" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (9 samples, 0.04%)</title><rect x="1185.9" y="629" width="0.5" height="15.0" fill="rgb(235,73,54)" rx="2" ry="2" />
<text  x="1188.87" y="639.5" ></text>
</g>
<g >
<title>__asan_memcpy (2 samples, 0.01%)</title><rect x="164.4" y="1573" width="0.1" height="15.0" fill="rgb(232,16,14)" rx="2" ry="2" />
<text  x="167.35" y="1583.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (6 samples, 0.03%)</title><rect x="808.5" y="2005" width="0.3" height="15.0" fill="rgb(222,199,15)" rx="2" ry="2" />
<text  x="811.45" y="2015.5" ></text>
</g>
<g >
<title>operator new (20 samples, 0.10%)</title><rect x="618.8" y="1845" width="1.2" height="15.0" fill="rgb(225,5,8)" rx="2" ry="2" />
<text  x="621.80" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (80 samples, 0.40%)</title><rect x="129.1" y="1669" width="4.7" height="15.0" fill="rgb(230,138,3)" rx="2" ry="2" />
<text  x="132.11" y="1679.5" ></text>
</g>
<g >
<title>__asan::AsanThread::stack_top (6 samples, 0.03%)</title><rect x="1154.8" y="2037" width="0.4" height="15.0" fill="rgb(229,192,19)" rx="2" ry="2" />
<text  x="1157.82" y="2047.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (3 samples, 0.01%)</title><rect x="766.9" y="1861" width="0.2" height="15.0" fill="rgb(216,68,36)" rx="2" ry="2" />
<text  x="769.90" y="1871.5" ></text>
</g>
<g >
<title>__asan::Allocator::GetAsanChunkByAddrFastLocked (95 samples, 0.47%)</title><rect x="98.0" y="2037" width="5.6" height="15.0" fill="rgb(248,110,20)" rx="2" ry="2" />
<text  x="100.99" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="183.3" y="1157" width="0.2" height="15.0" fill="rgb(228,200,48)" rx="2" ry="2" />
<text  x="186.33" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.05%)</title><rect x="215.7" y="1765" width="0.6" height="15.0" fill="rgb(218,174,28)" rx="2" ry="2" />
<text  x="218.68" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (111 samples, 0.55%)</title><rect x="196.3" y="1765" width="6.5" height="15.0" fill="rgb(227,206,14)" rx="2" ry="2" />
<text  x="199.29" y="1775.5" ></text>
</g>
<g >
<title>native_flush_tlb_others (3 samples, 0.01%)</title><rect x="55.1" y="1877" width="0.2" height="15.0" fill="rgb(238,40,28)" rx="2" ry="2" />
<text  x="58.09" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.04%)</title><rect x="1185.9" y="1077" width="0.5" height="15.0" fill="rgb(205,179,28)" rx="2" ry="2" />
<text  x="1188.87" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="183.3" y="1749" width="0.3" height="15.0" fill="rgb(226,143,25)" rx="2" ry="2" />
<text  x="186.27" y="1759.5" ></text>
</g>
<g >
<title>native_send_call_func_single_ipi (3 samples, 0.01%)</title><rect x="523.3" y="1797" width="0.1" height="15.0" fill="rgb(254,165,54)" rx="2" ry="2" />
<text  x="526.27" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1186.5" y="869" width="0.4" height="15.0" fill="rgb(228,225,26)" rx="2" ry="2" />
<text  x="1189.52" y="879.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::addSubwords (32 samples, 0.16%)</title><rect x="537.6" y="1909" width="1.9" height="15.0" fill="rgb(234,178,40)" rx="2" ry="2" />
<text  x="540.59" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (88 samples, 0.44%)</title><rect x="144.3" y="1765" width="5.1" height="15.0" fill="rgb(226,152,52)" rx="2" ry="2" />
<text  x="147.25" y="1775.5" ></text>
</g>
<g >
<title>__vm_munmap (8 samples, 0.04%)</title><rect x="766.9" y="1973" width="0.5" height="15.0" fill="rgb(225,217,29)" rx="2" ry="2" />
<text  x="769.90" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (86 samples, 0.43%)</title><rect x="186.4" y="1637" width="5.1" height="15.0" fill="rgb(242,216,47)" rx="2" ry="2" />
<text  x="189.39" y="1647.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (3 samples, 0.01%)</title><rect x="191.3" y="1589" width="0.2" height="15.0" fill="rgb(246,154,12)" rx="2" ry="2" />
<text  x="194.28" y="1599.5" ></text>
</g>
<g >
<title>smp_call_function_single (2 samples, 0.01%)</title><rect x="55.1" y="1813" width="0.1" height="15.0" fill="rgb(238,141,12)" rx="2" ry="2" />
<text  x="58.09" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (9 samples, 0.04%)</title><rect x="1185.9" y="1445" width="0.5" height="15.0" fill="rgb(217,69,31)" rx="2" ry="2" />
<text  x="1188.87" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.03%)</title><rect x="215.7" y="1685" width="0.4" height="15.0" fill="rgb(222,47,23)" rx="2" ry="2" />
<text  x="218.68" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="155.9" y="1429" width="0.2" height="15.0" fill="rgb(248,26,28)" rx="2" ry="2" />
<text  x="158.86" y="1439.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.02%)</title><rect x="43.7" y="2021" width="0.2" height="15.0" fill="rgb(205,125,14)" rx="2" ry="2" />
<text  x="46.65" y="2031.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (7 samples, 0.03%)</title><rect x="143.2" y="1605" width="0.4" height="15.0" fill="rgb(228,15,32)" rx="2" ry="2" />
<text  x="146.19" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1186.5" y="773" width="0.4" height="15.0" fill="rgb(224,211,36)" rx="2" ry="2" />
<text  x="1189.52" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (9 samples, 0.04%)</title><rect x="1185.9" y="485" width="0.5" height="15.0" fill="rgb(223,26,15)" rx="2" ry="2" />
<text  x="1188.87" y="495.5" ></text>
</g>
<g >
<title>page_fault (3 samples, 0.01%)</title><rect x="580.0" y="1877" width="0.1" height="15.0" fill="rgb(232,132,39)" rx="2" ry="2" />
<text  x="582.96" y="1887.5" ></text>
</g>
<g >
<title>x2apic_send_IPI (3 samples, 0.01%)</title><rect x="523.3" y="1781" width="0.1" height="15.0" fill="rgb(222,186,9)" rx="2" ry="2" />
<text  x="526.27" y="1791.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="76.8" y="1189" width="0.1" height="15.0" fill="rgb(233,127,0)" rx="2" ry="2" />
<text  x="79.77" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (13 samples, 0.06%)</title><rect x="1187.0" y="565" width="0.8" height="15.0" fill="rgb(247,153,22)" rx="2" ry="2" />
<text  x="1189.99" y="575.5" ></text>
</g>
<g >
<title>call_rwsem_wake (3 samples, 0.01%)</title><rect x="1102.8" y="1941" width="0.2" height="15.0" fill="rgb(214,63,17)" rx="2" ry="2" />
<text  x="1105.83" y="1951.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.02%)</title><rect x="175.1" y="1621" width="0.3" height="15.0" fill="rgb(234,69,39)" rx="2" ry="2" />
<text  x="178.14" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1186.5" y="677" width="0.4" height="15.0" fill="rgb(227,202,23)" rx="2" ry="2" />
<text  x="1189.52" y="687.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (3 samples, 0.01%)</title><rect x="87.4" y="1893" width="0.2" height="15.0" fill="rgb(217,126,14)" rx="2" ry="2" />
<text  x="90.38" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="155.9" y="597" width="0.1" height="15.0" fill="rgb(227,181,26)" rx="2" ry="2" />
<text  x="158.86" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14 samples, 0.07%)</title><rect x="1186.9" y="1797" width="0.9" height="15.0" fill="rgb(247,79,13)" rx="2" ry="2" />
<text  x="1189.94" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (310 samples, 1.55%)</title><rect x="55.4" y="117" width="18.2" height="15.0" fill="rgb(243,227,52)" rx="2" ry="2" />
<text  x="58.38" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (85 samples, 0.42%)</title><rect x="161.8" y="1637" width="5.0" height="15.0" fill="rgb(219,216,50)" rx="2" ry="2" />
<text  x="164.76" y="1647.5" ></text>
</g>
<g >
<title>tlb_flush_mmu_free (3 samples, 0.01%)</title><rect x="766.9" y="1877" width="0.2" height="15.0" fill="rgb(226,161,30)" rx="2" ry="2" />
<text  x="769.90" y="1887.5" ></text>
</g>
<g >
<title>do_page_fault (7 samples, 0.03%)</title><rect x="1099.4" y="2021" width="0.4" height="15.0" fill="rgb(229,74,27)" rx="2" ry="2" />
<text  x="1102.42" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1186.5" y="469" width="0.4" height="15.0" fill="rgb(220,191,13)" rx="2" ry="2" />
<text  x="1189.52" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="155.7" y="1365" width="0.2" height="15.0" fill="rgb(252,17,41)" rx="2" ry="2" />
<text  x="158.75" y="1375.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (16 samples, 0.08%)</title><rect x="594.7" y="1877" width="0.9" height="15.0" fill="rgb(215,180,8)" rx="2" ry="2" />
<text  x="597.70" y="1887.5" ></text>
</g>
<g >
<title>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::dump (6 samples, 0.03%)</title><rect x="518.7" y="1989" width="0.4" height="15.0" fill="rgb(209,187,32)" rx="2" ry="2" />
<text  x="521.73" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (67 samples, 0.33%)</title><rect x="172.1" y="1685" width="4.0" height="15.0" fill="rgb(225,120,52)" rx="2" ry="2" />
<text  x="175.13" y="1695.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::create&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt; const&amp;&gt; (2 samples, 0.01%)</title><rect x="519.9" y="1813" width="0.1" height="15.0" fill="rgb(235,210,34)" rx="2" ry="2" />
<text  x="522.91" y="1823.5" ></text>
</g>
<g >
<title>get_page_from_freelist (3 samples, 0.01%)</title><rect x="944.4" y="1893" width="0.2" height="15.0" fill="rgb(209,116,54)" rx="2" ry="2" />
<text  x="947.42" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1186.5" y="1525" width="0.4" height="15.0" fill="rgb(239,113,17)" rx="2" ry="2" />
<text  x="1189.46" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.05%)</title><rect x="1185.8" y="1605" width="0.6" height="15.0" fill="rgb(219,26,52)" rx="2" ry="2" />
<text  x="1188.76" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (93 samples, 0.46%)</title><rect x="133.9" y="1733" width="5.5" height="15.0" fill="rgb(249,135,43)" rx="2" ry="2" />
<text  x="136.88" y="1743.5" ></text>
</g>
<g >
<title>__vfs_read (3 samples, 0.01%)</title><rect x="1111.8" y="1941" width="0.2" height="15.0" fill="rgb(219,192,19)" rx="2" ry="2" />
<text  x="1114.79" y="1951.5" ></text>
</g>
<g >
<title>fasttext::FastText::getWordVector (209 samples, 1.04%)</title><rect x="315.2" y="1973" width="12.3" height="15.0" fill="rgb(252,22,16)" rx="2" ry="2" />
<text  x="318.23" y="1983.5" ></text>
</g>
<g >
<title>find_vma (3 samples, 0.01%)</title><rect x="24.0" y="1989" width="0.2" height="15.0" fill="rgb(248,101,51)" rx="2" ry="2" />
<text  x="27.03" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (2 samples, 0.01%)</title><rect x="214.7" y="1877" width="0.1" height="15.0" fill="rgb(249,110,52)" rx="2" ry="2" />
<text  x="217.68" y="1887.5" ></text>
</g>
<g >
<title>memcmp@plt (3 samples, 0.01%)</title><rect x="1110.7" y="2053" width="0.2" height="15.0" fill="rgb(224,54,19)" rx="2" ry="2" />
<text  x="1113.73" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="216.2" y="1653" width="0.1" height="15.0" fill="rgb(254,188,46)" rx="2" ry="2" />
<text  x="219.16" y="1663.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (2 samples, 0.01%)</title><rect x="524.3" y="1909" width="0.1" height="15.0" fill="rgb(218,152,14)" rx="2" ry="2" />
<text  x="527.33" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.04%)</title><rect x="1185.9" y="709" width="0.5" height="15.0" fill="rgb(236,75,25)" rx="2" ry="2" />
<text  x="1188.87" y="719.5" ></text>
</g>
<g >
<title>on_each_cpu_mask (3 samples, 0.01%)</title><rect x="523.3" y="1861" width="0.1" height="15.0" fill="rgb(235,193,10)" rx="2" ry="2" />
<text  x="526.27" y="1871.5" ></text>
</g>
<g >
<title>__asan_memcpy (2 samples, 0.01%)</title><rect x="336.5" y="1989" width="0.1" height="15.0" fill="rgb(224,127,43)" rx="2" ry="2" />
<text  x="339.50" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (13 samples, 0.06%)</title><rect x="1187.0" y="1333" width="0.8" height="15.0" fill="rgb(246,51,23)" rx="2" ry="2" />
<text  x="1189.99" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.04%)</title><rect x="1186.4" y="1621" width="0.5" height="15.0" fill="rgb(223,79,38)" rx="2" ry="2" />
<text  x="1189.40" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (14 samples, 0.07%)</title><rect x="1186.9" y="1669" width="0.9" height="15.0" fill="rgb(209,220,48)" rx="2" ry="2" />
<text  x="1189.94" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (8 samples, 0.04%)</title><rect x="1186.4" y="1989" width="0.5" height="15.0" fill="rgb(205,96,18)" rx="2" ry="2" />
<text  x="1189.40" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (568 samples, 2.84%)</title><rect x="55.4" y="1973" width="33.5" height="15.0" fill="rgb(235,51,29)" rx="2" ry="2" />
<text  x="58.38" y="1983.5" >[u..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (9 samples, 0.04%)</title><rect x="1185.9" y="1301" width="0.5" height="15.0" fill="rgb(236,47,11)" rx="2" ry="2" />
<text  x="1188.87" y="1311.5" ></text>
</g>
<g >
<title>[unknown] (333 samples, 1.66%)</title><rect x="55.4" y="933" width="19.6" height="15.0" fill="rgb(218,43,37)" rx="2" ry="2" />
<text  x="58.38" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13 samples, 0.06%)</title><rect x="1187.0" y="437" width="0.8" height="15.0" fill="rgb(237,92,26)" rx="2" ry="2" />
<text  x="1189.99" y="447.5" ></text>
</g>
<g >
<title>[unknown] (365 samples, 1.82%)</title><rect x="55.4" y="1221" width="21.5" height="15.0" fill="rgb(207,164,40)" rx="2" ry="2" />
<text  x="58.38" y="1231.5" >[..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (90 samples, 0.45%)</title><rect x="133.9" y="1669" width="5.3" height="15.0" fill="rgb(233,111,44)" rx="2" ry="2" />
<text  x="136.88" y="1679.5" ></text>
</g>
<g >
<title>do_page_fault (4 samples, 0.02%)</title><rect x="1103.8" y="2005" width="0.2" height="15.0" fill="rgb(246,158,15)" rx="2" ry="2" />
<text  x="1106.78" y="2015.5" ></text>
</g>
<g >
<title>TNewsCluster::GetTimestamp (2 samples, 0.01%)</title><rect x="184.0" y="1973" width="0.1" height="15.0" fill="rgb(224,105,16)" rx="2" ry="2" />
<text  x="186.98" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="155.9" y="1013" width="0.1" height="15.0" fill="rgb(213,41,49)" rx="2" ry="2" />
<text  x="158.86" y="1023.5" ></text>
</g>
<g >
<title>DetectCategory (236 samples, 1.18%)</title><rect x="526.8" y="1973" width="13.9" height="15.0" fill="rgb(211,201,43)" rx="2" ry="2" />
<text  x="529.80" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.04%)</title><rect x="1185.9" y="517" width="0.5" height="15.0" fill="rgb(246,31,41)" rx="2" ry="2" />
<text  x="1188.87" y="527.5" ></text>
</g>
<g >
<title>call_rwsem_wake (2 samples, 0.01%)</title><rect x="766.8" y="1925" width="0.1" height="15.0" fill="rgb(251,217,2)" rx="2" ry="2" />
<text  x="769.79" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13 samples, 0.06%)</title><rect x="1187.0" y="1413" width="0.8" height="15.0" fill="rgb(249,213,6)" rx="2" ry="2" />
<text  x="1189.99" y="1423.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (2 samples, 0.01%)</title><rect x="188.7" y="1557" width="0.1" height="15.0" fill="rgb(236,76,20)" rx="2" ry="2" />
<text  x="191.69" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="155.9" y="437" width="0.1" height="15.0" fill="rgb(246,81,9)" rx="2" ry="2" />
<text  x="158.86" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (349 samples, 1.74%)</title><rect x="128.9" y="1797" width="20.5" height="15.0" fill="rgb(220,141,25)" rx="2" ry="2" />
<text  x="131.87" y="1807.5" ></text>
</g>
<g >
<title>__asan::AsanTSDGet (7 samples, 0.03%)</title><rect x="593.8" y="1877" width="0.4" height="15.0" fill="rgb(242,185,24)" rx="2" ry="2" />
<text  x="596.81" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="216.2" y="1493" width="0.1" height="15.0" fill="rgb(217,181,17)" rx="2" ry="2" />
<text  x="219.16" y="1503.5" ></text>
</g>
<g >
<title>__pthread_getspecific (7 samples, 0.03%)</title><rect x="179.4" y="1653" width="0.4" height="15.0" fill="rgb(254,89,38)" rx="2" ry="2" />
<text  x="182.38" y="1663.5" ></text>
</g>
<g >
<title>__interceptor___strxfrm_l (128 samples, 0.64%)</title><rect x="1162.2" y="2037" width="7.6" height="15.0" fill="rgb(250,48,0)" rx="2" ry="2" />
<text  x="1165.24" y="2047.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (2 samples, 0.01%)</title><rect x="88.7" y="1957" width="0.2" height="15.0" fill="rgb(251,77,21)" rx="2" ry="2" />
<text  x="91.74" y="1967.5" ></text>
</g>
<g >
<title>__asan_memcpy (4 samples, 0.02%)</title><rect x="169.3" y="1589" width="0.2" height="15.0" fill="rgb(232,206,48)" rx="2" ry="2" />
<text  x="172.30" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (84 samples, 0.42%)</title><rect x="176.7" y="1717" width="4.9" height="15.0" fill="rgb(232,209,17)" rx="2" ry="2" />
<text  x="179.67" y="1727.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (5 samples, 0.02%)</title><rect x="607.4" y="1861" width="0.3" height="15.0" fill="rgb(245,97,52)" rx="2" ry="2" />
<text  x="610.43" y="1871.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (2 samples, 0.01%)</title><rect x="89.9" y="2005" width="0.1" height="15.0" fill="rgb(254,114,8)" rx="2" ry="2" />
<text  x="92.86" y="2015.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::getSubwords (12 samples, 0.06%)</title><rect x="768.1" y="2037" width="0.7" height="15.0" fill="rgb(230,159,27)" rx="2" ry="2" />
<text  x="771.08" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.04%)</title><rect x="1186.4" y="1909" width="0.5" height="15.0" fill="rgb(242,173,13)" rx="2" ry="2" />
<text  x="1189.40" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="215.7" y="1493" width="0.4" height="15.0" fill="rgb(243,20,26)" rx="2" ry="2" />
<text  x="218.74" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.05%)</title><rect x="1185.8" y="1909" width="0.6" height="15.0" fill="rgb(214,218,24)" rx="2" ry="2" />
<text  x="1188.76" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (356 samples, 1.78%)</title><rect x="55.4" y="1189" width="21.0" height="15.0" fill="rgb(214,49,23)" rx="2" ry="2" />
<text  x="58.38" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="183.4" y="1061" width="0.1" height="15.0" fill="rgb(228,229,4)" rx="2" ry="2" />
<text  x="186.39" y="1071.5" ></text>
</g>
<g >
<title>run_timer_softirq (2 samples, 0.01%)</title><rect x="479.9" y="1877" width="0.1" height="15.0" fill="rgb(249,185,43)" rx="2" ry="2" />
<text  x="482.89" y="1887.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int const&amp;&gt; (3 samples, 0.01%)</title><rect x="1188.2" y="2053" width="0.1" height="15.0" fill="rgb(210,51,32)" rx="2" ry="2" />
<text  x="1191.17" y="2063.5" ></text>
</g>
<g >
<title>std::future&lt;boost::optional&lt;TDocument&gt; &gt;::get (13 samples, 0.06%)</title><rect x="127.6" y="1989" width="0.7" height="15.0" fill="rgb(244,145,39)" rx="2" ry="2" />
<text  x="130.58" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="155.9" y="421" width="0.1" height="15.0" fill="rgb(214,226,37)" rx="2" ry="2" />
<text  x="158.86" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.01%)</title><rect x="216.2" y="1605" width="0.1" height="15.0" fill="rgb(217,144,25)" rx="2" ry="2" />
<text  x="219.16" y="1615.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::Unwind (2 samples, 0.01%)</title><rect x="482.7" y="1941" width="0.1" height="15.0" fill="rgb(215,128,2)" rx="2" ry="2" />
<text  x="485.72" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (519 samples, 2.59%)</title><rect x="55.4" y="1829" width="30.6" height="15.0" fill="rgb(254,53,33)" rx="2" ry="2" />
<text  x="58.38" y="1839.5" >[u..</text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (3 samples, 0.01%)</title><rect x="195.2" y="1589" width="0.2" height="15.0" fill="rgb(245,131,34)" rx="2" ry="2" />
<text  x="198.17" y="1599.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (3 samples, 0.01%)</title><rect x="159.2" y="1541" width="0.2" height="15.0" fill="rgb(212,103,29)" rx="2" ry="2" />
<text  x="162.22" y="1551.5" ></text>
</g>
<g >
<title>__interceptor_free (4 samples, 0.02%)</title><rect x="241.3" y="1957" width="0.2" height="15.0" fill="rgb(212,9,2)" rx="2" ry="2" />
<text  x="244.26" y="1967.5" ></text>
</g>
<g >
<title>__interceptor_memcpy (5 samples, 0.02%)</title><rect x="1125.1" y="2037" width="0.2" height="15.0" fill="rgb(207,46,40)" rx="2" ry="2" />
<text  x="1128.05" y="2047.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (7 samples, 0.03%)</title><rect x="598.8" y="1877" width="0.4" height="15.0" fill="rgb(230,100,20)" rx="2" ry="2" />
<text  x="601.76" y="1887.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="171.4" y="1605" width="0.1" height="15.0" fill="rgb(233,107,17)" rx="2" ry="2" />
<text  x="174.42" y="1615.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (48 samples, 0.24%)</title><rect x="135.7" y="1605" width="2.8" height="15.0" fill="rgb(248,178,1)" rx="2" ry="2" />
<text  x="138.71" y="1615.5" ></text>
</g>
<g >
<title>__asan::AsanThread::stack_top (2 samples, 0.01%)</title><rect x="163.8" y="1573" width="0.1" height="15.0" fill="rgb(244,183,11)" rx="2" ry="2" />
<text  x="166.76" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_try_char (2 samples, 0.01%)</title><rect x="181.9" y="1717" width="0.1" height="15.0" fill="rgb(217,211,24)" rx="2" ry="2" />
<text  x="184.85" y="1727.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_Alloc_node&gt; (2 samples, 0.01%)</title><rect x="519.9" y="1797" width="0.1" height="15.0" fill="rgb(233,112,41)" rx="2" ry="2" />
<text  x="522.91" y="1807.5" ></text>
</g>
<g >
<title>page_fault (6 samples, 0.03%)</title><rect x="1027.9" y="2037" width="0.4" height="15.0" fill="rgb(217,156,29)" rx="2" ry="2" />
<text  x="1030.93" y="2047.5" ></text>
</g>
<g >
<title>__asan::AsanThread::stack_bottom (2 samples, 0.01%)</title><rect x="538.6" y="1893" width="0.1" height="15.0" fill="rgb(237,198,45)" rx="2" ry="2" />
<text  x="541.59" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.04%)</title><rect x="1185.9" y="1333" width="0.5" height="15.0" fill="rgb(242,98,22)" rx="2" ry="2" />
<text  x="1188.87" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="155.9" y="1253" width="0.2" height="15.0" fill="rgb(236,227,13)" rx="2" ry="2" />
<text  x="158.86" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.02%)</title><rect x="155.9" y="1509" width="0.2" height="15.0" fill="rgb(217,54,14)" rx="2" ry="2" />
<text  x="158.86" y="1519.5" ></text>
</g>
<g >
<title>onmt::unicode::is_separator (78 samples, 0.39%)</title><rect x="724.0" y="1877" width="4.6" height="15.0" fill="rgb(236,114,13)" rx="2" ry="2" />
<text  x="727.00" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13 samples, 0.06%)</title><rect x="1187.0" y="869" width="0.8" height="15.0" fill="rgb(250,168,8)" rx="2" ry="2" />
<text  x="1189.99" y="879.5" ></text>
</g>
<g >
<title>__sanitizer::mem_is_zero (3 samples, 0.01%)</title><rect x="1123.3" y="2037" width="0.2" height="15.0" fill="rgb(212,54,12)" rx="2" ry="2" />
<text  x="1126.29" y="2047.5" ></text>
</g>
<g >
<title>__sanitizer::RunFreeHooks (10 samples, 0.05%)</title><rect x="1024.4" y="2053" width="0.6" height="15.0" fill="rgb(215,155,53)" rx="2" ry="2" />
<text  x="1027.39" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1186.5" y="1205" width="0.4" height="15.0" fill="rgb(251,50,33)" rx="2" ry="2" />
<text  x="1189.46" y="1215.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotPut (2 samples, 0.01%)</title><rect x="174.8" y="1621" width="0.2" height="15.0" fill="rgb(217,11,15)" rx="2" ry="2" />
<text  x="177.84" y="1631.5" ></text>
</g>
<g >
<title>rwsem_wake (2 samples, 0.01%)</title><rect x="766.8" y="1909" width="0.1" height="15.0" fill="rgb(242,229,24)" rx="2" ry="2" />
<text  x="769.79" y="1919.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::computeSubwords (28 samples, 0.14%)</title><rect x="325.4" y="1941" width="1.7" height="15.0" fill="rgb(249,52,7)" rx="2" ry="2" />
<text  x="328.42" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="183.4" y="821" width="0.1" height="15.0" fill="rgb(223,53,17)" rx="2" ry="2" />
<text  x="186.39" y="831.5" ></text>
</g>
<g >
<title>[unknown] (329 samples, 1.64%)</title><rect x="55.4" y="805" width="19.4" height="15.0" fill="rgb(240,3,27)" rx="2" ry="2" />
<text  x="58.38" y="815.5" ></text>
</g>
<g >
<title>cpumask_any_but (2 samples, 0.01%)</title><rect x="946.9" y="1893" width="0.1" height="15.0" fill="rgb(215,123,35)" rx="2" ry="2" />
<text  x="949.89" y="1903.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (16 samples, 0.08%)</title><rect x="523.1" y="1957" width="0.9" height="15.0" fill="rgb(239,73,18)" rx="2" ry="2" />
<text  x="526.09" y="1967.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (2 samples, 0.01%)</title><rect x="83.8" y="1701" width="0.1" height="15.0" fill="rgb(213,147,51)" rx="2" ry="2" />
<text  x="86.79" y="1711.5" ></text>
</g>
<g >
<title>__asan::AsanThread::stack_bottom (2 samples, 0.01%)</title><rect x="163.6" y="1573" width="0.2" height="15.0" fill="rgb(206,120,54)" rx="2" ry="2" />
<text  x="166.64" y="1583.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (3 samples, 0.01%)</title><rect x="766.9" y="1893" width="0.2" height="15.0" fill="rgb(221,71,33)" rx="2" ry="2" />
<text  x="769.90" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13 samples, 0.06%)</title><rect x="1187.0" y="1221" width="0.8" height="15.0" fill="rgb(218,98,39)" rx="2" ry="2" />
<text  x="1189.99" y="1231.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (2 samples, 0.01%)</title><rect x="143.8" y="1637" width="0.1" height="15.0" fill="rgb(240,174,4)" rx="2" ry="2" />
<text  x="146.78" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="155.9" y="469" width="0.1" height="15.0" fill="rgb(238,14,13)" rx="2" ry="2" />
<text  x="158.86" y="479.5" ></text>
</g>
<g >
<title>[unknown] (313 samples, 1.56%)</title><rect x="55.4" y="245" width="18.4" height="15.0" fill="rgb(234,109,17)" rx="2" ry="2" />
<text  x="58.38" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1185.6" y="1845" width="0.1" height="15.0" fill="rgb(229,173,25)" rx="2" ry="2" />
<text  x="1188.58" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.05%)</title><rect x="215.7" y="1797" width="0.6" height="15.0" fill="rgb(208,58,38)" rx="2" ry="2" />
<text  x="218.68" y="1807.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int&gt; (27 samples, 0.13%)</title><rect x="1188.3" y="2053" width="1.6" height="15.0" fill="rgb(231,54,47)" rx="2" ry="2" />
<text  x="1191.35" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="216.2" y="1589" width="0.1" height="15.0" fill="rgb(217,174,41)" rx="2" ry="2" />
<text  x="219.16" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="155.7" y="1109" width="0.2" height="15.0" fill="rgb(208,20,51)" rx="2" ry="2" />
<text  x="158.75" y="1119.5" ></text>
</g>
<g >
<title>alloc_pages_vma (3 samples, 0.01%)</title><rect x="651.1" y="1781" width="0.2" height="15.0" fill="rgb(247,23,53)" rx="2" ry="2" />
<text  x="654.10" y="1791.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="81.0" y="1525" width="0.1" height="15.0" fill="rgb(239,19,18)" rx="2" ry="2" />
<text  x="83.96" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.03%)</title><rect x="1186.5" y="1365" width="0.4" height="15.0" fill="rgb(206,210,48)" rx="2" ry="2" />
<text  x="1189.46" y="1375.5" ></text>
</g>
<g >
<title>arch_tlb_finish_mmu (2 samples, 0.01%)</title><rect x="88.0" y="1781" width="0.1" height="15.0" fill="rgb(250,52,48)" rx="2" ry="2" />
<text  x="90.97" y="1791.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.01%)</title><rect x="175.0" y="1621" width="0.1" height="15.0" fill="rgb(250,18,44)" rx="2" ry="2" />
<text  x="177.96" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1185.6" y="1701" width="0.1" height="15.0" fill="rgb(206,59,50)" rx="2" ry="2" />
<text  x="1188.58" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (322 samples, 1.61%)</title><rect x="55.4" y="549" width="19.0" height="15.0" fill="rgb(230,143,11)" rx="2" ry="2" />
<text  x="58.38" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (175 samples, 0.87%)</title><rect x="156.5" y="1733" width="10.3" height="15.0" fill="rgb(228,24,20)" rx="2" ry="2" />
<text  x="159.45" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (385 samples, 1.92%)</title><rect x="55.4" y="1317" width="22.7" height="15.0" fill="rgb(216,148,35)" rx="2" ry="2" />
<text  x="58.38" y="1327.5" >[..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="155.7" y="1237" width="0.2" height="15.0" fill="rgb(221,146,4)" rx="2" ry="2" />
<text  x="158.75" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (14 samples, 0.07%)</title><rect x="1186.9" y="1909" width="0.9" height="15.0" fill="rgb(232,106,24)" rx="2" ry="2" />
<text  x="1189.94" y="1919.5" ></text>
</g>
<g >
<title>__do_page_fault (21 samples, 0.10%)</title><rect x="54.0" y="1989" width="1.3" height="15.0" fill="rgb(228,18,18)" rx="2" ry="2" />
<text  x="57.02" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (64 samples, 0.32%)</title><rect x="140.0" y="1637" width="3.8" height="15.0" fill="rgb(251,63,21)" rx="2" ry="2" />
<text  x="143.01" y="1647.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (2 samples, 0.01%)</title><rect x="80.1" y="1397" width="0.2" height="15.0" fill="rgb(224,37,10)" rx="2" ry="2" />
<text  x="83.13" y="1407.5" ></text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (2 samples, 0.01%)</title><rect x="680.6" y="1765" width="0.1" height="15.0" fill="rgb(212,144,43)" rx="2" ry="2" />
<text  x="683.56" y="1775.5" ></text>
</g>
<g >
<title>tgnews (20,022 samples, 100.00%)</title><rect x="10.0" y="2069" width="1180.0" height="15.0" fill="rgb(241,145,32)" rx="2" ry="2" />
<text  x="13.00" y="2079.5" >tgnews</text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (6 samples, 0.03%)</title><rect x="768.8" y="2005" width="0.4" height="15.0" fill="rgb(218,116,41)" rx="2" ry="2" />
<text  x="771.85" y="2015.5" ></text>
</g>
<g >
<title>__asan::AsanTSDGet (2 samples, 0.01%)</title><rect x="146.7" y="1637" width="0.1" height="15.0" fill="rgb(238,142,12)" rx="2" ry="2" />
<text  x="149.67" y="1647.5" ></text>
</g>
<g >
<title>smp_call_function_many (2 samples, 0.01%)</title><rect x="80.0" y="1253" width="0.1" height="15.0" fill="rgb(238,36,1)" rx="2" ry="2" />
<text  x="82.96" y="1263.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.02%)</title><rect x="200.4" y="1605" width="0.3" height="15.0" fill="rgb(232,107,37)" rx="2" ry="2" />
<text  x="203.42" y="1615.5" ></text>
</g>
<g >
<title>std::basic_ifstream&lt;char, std::char_traits&lt;char&gt; &gt;::~basic_ifstream (28 samples, 0.14%)</title><rect x="872.1" y="2037" width="1.7" height="15.0" fill="rgb(205,157,46)" rx="2" ry="2" />
<text  x="875.10" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="216.2" y="1429" width="0.1" height="15.0" fill="rgb(236,1,26)" rx="2" ry="2" />
<text  x="219.16" y="1439.5" ></text>
</g>
<g >
<title>__sanitizer::internal_munmap (2 samples, 0.01%)</title><rect x="80.1" y="1445" width="0.2" height="15.0" fill="rgb(239,224,15)" rx="2" ry="2" />
<text  x="83.13" y="1455.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;,  (2 samples, 0.01%)</title><rect x="128.5" y="1957" width="0.1" height="15.0" fill="rgb(234,182,12)" rx="2" ry="2" />
<text  x="131.52" y="1967.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (3 samples, 0.01%)</title><rect x="78.7" y="1349" width="0.1" height="15.0" fill="rgb(237,90,42)" rx="2" ry="2" />
<text  x="81.66" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (11 samples, 0.05%)</title><rect x="1185.8" y="1829" width="0.6" height="15.0" fill="rgb(208,70,49)" rx="2" ry="2" />
<text  x="1188.76" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1185.6" y="1765" width="0.1" height="15.0" fill="rgb(221,64,50)" rx="2" ry="2" />
<text  x="1188.58" y="1775.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (2 samples, 0.01%)</title><rect x="84.1" y="1717" width="0.1" height="15.0" fill="rgb(226,27,4)" rx="2" ry="2" />
<text  x="87.08" y="1727.5" ></text>
</g>
<g >
<title>__asan_memcpy (6 samples, 0.03%)</title><rect x="142.1" y="1605" width="0.3" height="15.0" fill="rgb(219,71,49)" rx="2" ry="2" />
<text  x="145.07" y="1615.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.01%)</title><rect x="871.6" y="1957" width="0.2" height="15.0" fill="rgb(224,113,35)" rx="2" ry="2" />
<text  x="874.63" y="1967.5" ></text>
</g>
<g >
<title>fasttext::FastText::getWordVector (6 samples, 0.03%)</title><rect x="768.8" y="2037" width="0.4" height="15.0" fill="rgb(251,29,29)" rx="2" ry="2" />
<text  x="771.85" y="2047.5" ></text>
</g>
<g >
<title>__asan_memcpy (6 samples, 0.03%)</title><rect x="159.4" y="1541" width="0.4" height="15.0" fill="rgb(245,2,37)" rx="2" ry="2" />
<text  x="162.40" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.03%)</title><rect x="215.7" y="1637" width="0.4" height="15.0" fill="rgb(245,97,51)" rx="2" ry="2" />
<text  x="218.68" y="1647.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (49 samples, 0.24%)</title><rect x="188.3" y="1573" width="2.9" height="15.0" fill="rgb(213,148,30)" rx="2" ry="2" />
<text  x="191.34" y="1583.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (4 samples, 0.02%)</title><rect x="128.9" y="1669" width="0.2" height="15.0" fill="rgb(210,33,3)" rx="2" ry="2" />
<text  x="131.87" y="1679.5" ></text>
</g>
<g >
<title>__sanitizer::RunMallocHooks (24 samples, 0.12%)</title><rect x="1025.0" y="2053" width="1.4" height="15.0" fill="rgb(239,120,8)" rx="2" ry="2" />
<text  x="1027.98" y="2063.5" ></text>
</g>
<g >
<title>TDocument::TDocument (2 samples, 0.01%)</title><rect x="128.4" y="1973" width="0.1" height="15.0" fill="rgb(254,63,26)" rx="2" ry="2" />
<text  x="131.40" y="1983.5" ></text>
</g>
<g >
<title>__handle_mm_fault (3 samples, 0.01%)</title><rect x="1103.8" y="1957" width="0.2" height="15.0" fill="rgb(246,97,23)" rx="2" ry="2" />
<text  x="1106.84" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="155.9" y="645" width="0.1" height="15.0" fill="rgb(223,19,4)" rx="2" ry="2" />
<text  x="158.86" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (10 samples, 0.05%)</title><rect x="1185.8" y="1589" width="0.6" height="15.0" fill="rgb(210,211,17)" rx="2" ry="2" />
<text  x="1188.82" y="1599.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (3 samples, 0.01%)</title><rect x="762.4" y="1925" width="0.2" height="15.0" fill="rgb(236,27,51)" rx="2" ry="2" />
<text  x="765.43" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 0.03%)</title><rect x="808.5" y="2021" width="0.3" height="15.0" fill="rgb(228,21,28)" rx="2" ry="2" />
<text  x="811.45" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13 samples, 0.06%)</title><rect x="1187.0" y="1301" width="0.8" height="15.0" fill="rgb(233,222,26)" rx="2" ry="2" />
<text  x="1189.99" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (334 samples, 1.67%)</title><rect x="156.5" y="1781" width="19.6" height="15.0" fill="rgb(230,195,1)" rx="2" ry="2" />
<text  x="159.45" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (287 samples, 1.43%)</title><rect x="185.9" y="1781" width="16.9" height="15.0" fill="rgb(247,110,51)" rx="2" ry="2" />
<text  x="188.92" y="1791.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (7 samples, 0.03%)</title><rect x="176.1" y="1717" width="0.5" height="15.0" fill="rgb(228,24,50)" rx="2" ry="2" />
<text  x="179.14" y="1727.5" ></text>
</g>
<g >
<title>__asan::AsanThread::stack_bottom (10 samples, 0.05%)</title><rect x="1154.2" y="2037" width="0.6" height="15.0" fill="rgb(225,59,26)" rx="2" ry="2" />
<text  x="1157.23" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (80 samples, 0.40%)</title><rect x="139.4" y="1685" width="4.7" height="15.0" fill="rgb(252,113,14)" rx="2" ry="2" />
<text  x="142.42" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13 samples, 0.06%)</title><rect x="1187.0" y="965" width="0.8" height="15.0" fill="rgb(206,180,20)" rx="2" ry="2" />
<text  x="1189.99" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (9 samples, 0.04%)</title><rect x="1185.9" y="1109" width="0.5" height="15.0" fill="rgb(248,10,2)" rx="2" ry="2" />
<text  x="1188.87" y="1119.5" ></text>
</g>
<g >
<title>do_page_fault (139 samples, 0.69%)</title><rect x="940.7" y="2021" width="8.2" height="15.0" fill="rgb(236,57,33)" rx="2" ry="2" />
<text  x="943.70" y="2031.5" ></text>
</g>
<g >
<title>get_futex_key (3 samples, 0.01%)</title><rect x="30.1" y="1909" width="0.2" height="15.0" fill="rgb(245,184,54)" rx="2" ry="2" />
<text  x="33.10" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="183.4" y="1029" width="0.1" height="15.0" fill="rgb(211,146,39)" rx="2" ry="2" />
<text  x="186.39" y="1039.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="85.2" y="1781" width="0.1" height="15.0" fill="rgb(250,131,36)" rx="2" ry="2" />
<text  x="88.20" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13 samples, 0.06%)</title><rect x="1187.0" y="981" width="0.8" height="15.0" fill="rgb(242,3,9)" rx="2" ry="2" />
<text  x="1189.99" y="991.5" ></text>
</g>
<g >
<title>__asan_memset (36 samples, 0.18%)</title><rect x="683.0" y="1861" width="2.2" height="15.0" fill="rgb(236,62,24)" rx="2" ry="2" />
<text  x="686.04" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (9 samples, 0.04%)</title><rect x="1185.9" y="1157" width="0.5" height="15.0" fill="rgb(249,129,35)" rx="2" ry="2" />
<text  x="1188.87" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="183.2" y="1861" width="0.4" height="15.0" fill="rgb(231,42,53)" rx="2" ry="2" />
<text  x="186.21" y="1871.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (54 samples, 0.27%)</title><rect x="1120.8" y="2053" width="3.1" height="15.0" fill="rgb(244,43,30)" rx="2" ry="2" />
<text  x="1123.75" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (70 samples, 0.35%)</title><rect x="162.4" y="1605" width="4.1" height="15.0" fill="rgb(230,28,25)" rx="2" ry="2" />
<text  x="165.41" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.04%)</title><rect x="1185.9" y="645" width="0.5" height="15.0" fill="rgb(243,96,4)" rx="2" ry="2" />
<text  x="1188.87" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.04%)</title><rect x="1185.9" y="277" width="0.5" height="15.0" fill="rgb(254,22,7)" rx="2" ry="2" />
<text  x="1188.87" y="287.5" ></text>
</g>
<g >
<title>[unknown] (341 samples, 1.70%)</title><rect x="55.4" y="1125" width="20.1" height="15.0" fill="rgb(231,23,18)" rx="2" ry="2" />
<text  x="58.38" y="1135.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (2 samples, 0.01%)</title><rect x="1189.0" y="2037" width="0.1" height="15.0" fill="rgb(253,203,44)" rx="2" ry="2" />
<text  x="1192.00" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (400 samples, 2.00%)</title><rect x="55.4" y="1365" width="23.6" height="15.0" fill="rgb(217,198,36)" rx="2" ry="2" />
<text  x="58.38" y="1375.5" >[..</text>
</g>
<g >
<title>fasttext::FastText::getWordVector (233 samples, 1.16%)</title><rect x="480.0" y="1957" width="13.7" height="15.0" fill="rgb(212,38,41)" rx="2" ry="2" />
<text  x="483.01" y="1967.5" ></text>
</g>
<g >
<title>std::istream::sentry::sentry (4 samples, 0.02%)</title><rect x="335.4" y="1989" width="0.2" height="15.0" fill="rgb(228,10,50)" rx="2" ry="2" />
<text  x="338.38" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1186.5" y="309" width="0.4" height="15.0" fill="rgb(240,20,2)" rx="2" ry="2" />
<text  x="1189.52" y="319.5" ></text>
</g>
<g >
<title>alloc_pages_vma (3 samples, 0.01%)</title><rect x="654.6" y="1781" width="0.2" height="15.0" fill="rgb(215,96,40)" rx="2" ry="2" />
<text  x="657.57" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (10 samples, 0.05%)</title><rect x="214.8" y="1893" width="0.6" height="15.0" fill="rgb(250,20,2)" rx="2" ry="2" />
<text  x="217.80" y="1903.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.02%)</title><rect x="170.5" y="1589" width="0.2" height="15.0" fill="rgb(251,66,38)" rx="2" ry="2" />
<text  x="173.48" y="1599.5" ></text>
</g>
<g >
<title>__pthread_getspecific (2 samples, 0.01%)</title><rect x="136.9" y="1589" width="0.2" height="15.0" fill="rgb(211,190,38)" rx="2" ry="2" />
<text  x="139.95" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (329 samples, 1.64%)</title><rect x="55.4" y="757" width="19.4" height="15.0" fill="rgb(209,95,18)" rx="2" ry="2" />
<text  x="58.38" y="767.5" ></text>
</g>
<g >
<title>call_rwsem_wake (2 samples, 0.01%)</title><rect x="948.7" y="1973" width="0.1" height="15.0" fill="rgb(251,79,2)" rx="2" ry="2" />
<text  x="951.66" y="1983.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (59 samples, 0.29%)</title><rect x="805.0" y="2005" width="3.5" height="15.0" fill="rgb(207,75,33)" rx="2" ry="2" />
<text  x="807.98" y="2015.5" ></text>
</g>
<g >
<title>alloc_pages_vma (3 samples, 0.01%)</title><rect x="1024.2" y="1957" width="0.1" height="15.0" fill="rgb(215,116,48)" rx="2" ry="2" />
<text  x="1027.16" y="1967.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (2 samples, 0.01%)</title><rect x="146.9" y="1637" width="0.1" height="15.0" fill="rgb(212,17,45)" rx="2" ry="2" />
<text  x="149.91" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.04%)</title><rect x="1186.4" y="1957" width="0.5" height="15.0" fill="rgb(217,17,34)" rx="2" ry="2" />
<text  x="1189.40" y="1967.5" ></text>
</g>
<g >
<title>__asan::AsanTSDGet (3 samples, 0.01%)</title><rect x="130.7" y="1557" width="0.2" height="15.0" fill="rgb(236,97,51)" rx="2" ry="2" />
<text  x="133.70" y="1567.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::pushHash (6 samples, 0.03%)</title><rect x="493.1" y="1909" width="0.3" height="15.0" fill="rgb(233,173,38)" rx="2" ry="2" />
<text  x="496.09" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (74 samples, 0.37%)</title><rect x="191.8" y="1685" width="4.4" height="15.0" fill="rgb(249,229,21)" rx="2" ry="2" />
<text  x="194.82" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (326 samples, 1.63%)</title><rect x="55.4" y="645" width="19.2" height="15.0" fill="rgb(250,140,31)" rx="2" ry="2" />
<text  x="58.38" y="655.5" ></text>
</g>
<g >
<title>__handle_mm_fault (3 samples, 0.01%)</title><rect x="1024.2" y="1973" width="0.1" height="15.0" fill="rgb(249,8,41)" rx="2" ry="2" />
<text  x="1027.16" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (13 samples, 0.06%)</title><rect x="1187.0" y="805" width="0.8" height="15.0" fill="rgb(246,18,46)" rx="2" ry="2" />
<text  x="1189.99" y="815.5" ></text>
</g>
<g >
<title>page_add_new_anon_rmap (7 samples, 0.03%)</title><rect x="946.2" y="1925" width="0.4" height="15.0" fill="rgb(220,3,53)" rx="2" ry="2" />
<text  x="949.19" y="1935.5" ></text>
</g>
<g >
<title>Eigen::DenseCoeffsBase&lt;Eigen::Transpose&lt;Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_sum_op&lt;float, float&gt;, Eigen::Product&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0&gt; const, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const&gt;, 0&gt;::coeff (2 samples, 0.01%)</title><rect x="43.5" y="2037" width="0.2" height="15.0" fill="rgb(241,89,16)" rx="2" ry="2" />
<text  x="46.53" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (329 samples, 1.64%)</title><rect x="55.4" y="821" width="19.4" height="15.0" fill="rgb(215,72,40)" rx="2" ry="2" />
<text  x="58.38" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (106 samples, 0.53%)</title><rect x="196.4" y="1685" width="6.3" height="15.0" fill="rgb(239,176,54)" rx="2" ry="2" />
<text  x="199.41" y="1695.5" ></text>
</g>
<g >
<title>__asan::asan_memalign (2 samples, 0.01%)</title><rect x="617.9" y="1845" width="0.1" height="15.0" fill="rgb(236,219,47)" rx="2" ry="2" />
<text  x="620.92" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.02%)</title><rect x="183.3" y="1557" width="0.3" height="15.0" fill="rgb(242,209,31)" rx="2" ry="2" />
<text  x="186.33" y="1567.5" ></text>
</g>
<g >
<title>__schedule (5 samples, 0.02%)</title><rect x="128.0" y="1845" width="0.3" height="15.0" fill="rgb(242,9,28)" rx="2" ry="2" />
<text  x="130.99" y="1855.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::create&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt; const&amp;&gt; (2 samples, 0.01%)</title><rect x="519.9" y="1957" width="0.1" height="15.0" fill="rgb(224,193,45)" rx="2" ry="2" />
<text  x="522.91" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1186.5" y="757" width="0.4" height="15.0" fill="rgb(208,91,43)" rx="2" ry="2" />
<text  x="1189.52" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="156.0" y="1029" width="0.1" height="15.0" fill="rgb(252,204,15)" rx="2" ry="2" />
<text  x="158.98" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13 samples, 0.06%)</title><rect x="1187.0" y="501" width="0.8" height="15.0" fill="rgb(246,147,20)" rx="2" ry="2" />
<text  x="1189.99" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (5 samples, 0.02%)</title><rect x="1120.0" y="2053" width="0.3" height="15.0" fill="rgb(220,52,52)" rx="2" ry="2" />
<text  x="1122.99" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="155.9" y="1333" width="0.2" height="15.0" fill="rgb(224,182,9)" rx="2" ry="2" />
<text  x="158.86" y="1343.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.03%)</title><rect x="132.5" y="1557" width="0.4" height="15.0" fill="rgb(205,113,43)" rx="2" ry="2" />
<text  x="135.53" y="1567.5" ></text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::scan_number (2 samples, 0.01%)</title><rect x="120.4" y="1941" width="0.1" height="15.0" fill="rgb(248,21,54)" rx="2" ry="2" />
<text  x="123.39" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="155.9" y="677" width="0.1" height="15.0" fill="rgb(215,83,34)" rx="2" ry="2" />
<text  x="158.86" y="687.5" ></text>
</g>
<g >
<title>__handle_mm_fault (6 samples, 0.03%)</title><rect x="762.4" y="1957" width="0.4" height="15.0" fill="rgb(246,87,15)" rx="2" ry="2" />
<text  x="765.43" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (326 samples, 1.63%)</title><rect x="55.4" y="661" width="19.2" height="15.0" fill="rgb(245,59,35)" rx="2" ry="2" />
<text  x="58.38" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (13 samples, 0.06%)</title><rect x="1187.0" y="901" width="0.8" height="15.0" fill="rgb(222,19,11)" rx="2" ry="2" />
<text  x="1189.99" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.05%)</title><rect x="1185.8" y="1717" width="0.6" height="15.0" fill="rgb(226,139,10)" rx="2" ry="2" />
<text  x="1188.76" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (84 samples, 0.42%)</title><rect x="156.8" y="1685" width="5.0" height="15.0" fill="rgb(205,155,15)" rx="2" ry="2" />
<text  x="159.81" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (7 samples, 0.03%)</title><rect x="176.1" y="1781" width="0.5" height="15.0" fill="rgb(252,157,39)" rx="2" ry="2" />
<text  x="179.14" y="1791.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::push_back (6 samples, 0.03%)</title><rect x="519.7" y="2005" width="0.3" height="15.0" fill="rgb(239,135,43)" rx="2" ry="2" />
<text  x="522.67" y="2015.5" ></text>
</g>
<g >
<title>handle_mm_fault (4 samples, 0.02%)</title><rect x="1189.4" y="1973" width="0.2" height="15.0" fill="rgb(230,15,28)" rx="2" ry="2" />
<text  x="1192.35" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (12 samples, 0.06%)</title><rect x="1187.1" y="69" width="0.7" height="15.0" fill="rgb(245,94,51)" rx="2" ry="2" />
<text  x="1190.05" y="79.5" ></text>
</g>
<g >
<title>free_unref_page_list (2 samples, 0.01%)</title><rect x="767.3" y="1829" width="0.1" height="15.0" fill="rgb(243,46,27)" rx="2" ry="2" />
<text  x="770.26" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (13 samples, 0.06%)</title><rect x="1187.0" y="1381" width="0.8" height="15.0" fill="rgb(228,194,1)" rx="2" ry="2" />
<text  x="1189.99" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.07%)</title><rect x="1186.9" y="1989" width="0.9" height="15.0" fill="rgb(215,109,24)" rx="2" ry="2" />
<text  x="1189.88" y="1999.5" ></text>
</g>
<g >
<title>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::dump (6 samples, 0.03%)</title><rect x="518.7" y="1973" width="0.4" height="15.0" fill="rgb(243,52,10)" rx="2" ry="2" />
<text  x="521.73" y="1983.5" ></text>
</g>
<g >
<title>clear_page_erms (5 samples, 0.02%)</title><rect x="944.1" y="1893" width="0.3" height="15.0" fill="rgb(236,143,29)" rx="2" ry="2" />
<text  x="947.12" y="1903.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt; &gt;::_M_manager (2 samples, 0.01%)</title><rect x="129.0" y="1637" width="0.1" height="15.0" fill="rgb(228,146,46)" rx="2" ry="2" />
<text  x="131.99" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="155.9" y="581" width="0.1" height="15.0" fill="rgb(221,121,36)" rx="2" ry="2" />
<text  x="158.86" y="591.5" ></text>
</g>
<g >
<title>__do_munmap (2 samples, 0.01%)</title><rect x="90.0" y="1925" width="0.1" height="15.0" fill="rgb(254,30,51)" rx="2" ry="2" />
<text  x="92.98" y="1935.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.01%)</title><rect x="91.9" y="2021" width="0.1" height="15.0" fill="rgb(222,78,37)" rx="2" ry="2" />
<text  x="94.86" y="2031.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="182.7" y="1749" width="0.2" height="15.0" fill="rgb(208,102,14)" rx="2" ry="2" />
<text  x="185.74" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (72 samples, 0.36%)</title><rect x="187.0" y="1589" width="4.2" height="15.0" fill="rgb(224,137,10)" rx="2" ry="2" />
<text  x="189.98" y="1599.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;std::__detail::_State&lt;char&gt; const*, std::__detail::_State&lt;char&gt;*&gt; (6 samples, 0.03%)</title><rect x="186.0" y="1653" width="0.4" height="15.0" fill="rgb(225,12,5)" rx="2" ry="2" />
<text  x="189.04" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (2 samples, 0.01%)</title><rect x="214.7" y="1861" width="0.1" height="15.0" fill="rgb(205,78,54)" rx="2" ry="2" />
<text  x="217.68" y="1871.5" ></text>
</g>
<g >
<title>__split_vma (2 samples, 0.01%)</title><rect x="1102.0" y="1909" width="0.1" height="15.0" fill="rgb(245,143,6)" rx="2" ry="2" />
<text  x="1105.01" y="1919.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (52 samples, 0.26%)</title><rect x="168.3" y="1605" width="3.1" height="15.0" fill="rgb(233,19,30)" rx="2" ry="2" />
<text  x="171.30" y="1615.5" ></text>
</g>
<g >
<title>fasttext::Vector::zero (8 samples, 0.04%)</title><rect x="330.8" y="1973" width="0.5" height="15.0" fill="rgb(211,146,36)" rx="2" ry="2" />
<text  x="333.84" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (538 samples, 2.69%)</title><rect x="55.4" y="1877" width="31.7" height="15.0" fill="rgb(251,133,43)" rx="2" ry="2" />
<text  x="58.38" y="1887.5" >[u..</text>
</g>
<g >
<title>__vm_munmap (2 samples, 0.01%)</title><rect x="78.8" y="1285" width="0.2" height="15.0" fill="rgb(207,164,30)" rx="2" ry="2" />
<text  x="81.84" y="1295.5" ></text>
</g>
<g >
<title>lru_add_drain (3 samples, 0.01%)</title><rect x="766.2" y="1877" width="0.2" height="15.0" fill="rgb(215,38,48)" rx="2" ry="2" />
<text  x="769.20" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="215.9" y="1333" width="0.2" height="15.0" fill="rgb(208,89,14)" rx="2" ry="2" />
<text  x="218.86" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.02%)</title><rect x="183.3" y="1541" width="0.3" height="15.0" fill="rgb(221,84,6)" rx="2" ry="2" />
<text  x="186.33" y="1551.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (3 samples, 0.01%)</title><rect x="137.1" y="1589" width="0.1" height="15.0" fill="rgb(243,159,29)" rx="2" ry="2" />
<text  x="140.06" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="216.2" y="1445" width="0.1" height="15.0" fill="rgb(243,57,6)" rx="2" ry="2" />
<text  x="219.16" y="1455.5" ></text>
</g>
<g >
<title>fasttext::Vector::zero (8 samples, 0.04%)</title><rect x="497.0" y="1957" width="0.5" height="15.0" fill="rgb(235,72,27)" rx="2" ry="2" />
<text  x="500.04" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.05%)</title><rect x="1185.8" y="1845" width="0.6" height="15.0" fill="rgb(210,70,26)" rx="2" ry="2" />
<text  x="1188.76" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="812.1" y="2021" width="0.1" height="15.0" fill="rgb(248,113,48)" rx="2" ry="2" />
<text  x="815.11" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (2 samples, 0.01%)</title><rect x="196.2" y="1749" width="0.1" height="15.0" fill="rgb(242,208,21)" rx="2" ry="2" />
<text  x="199.18" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (4 samples, 0.02%)</title><rect x="176.7" y="1701" width="0.3" height="15.0" fill="rgb(205,164,32)" rx="2" ry="2" />
<text  x="179.73" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.02%)</title><rect x="155.9" y="1557" width="0.2" height="15.0" fill="rgb(251,50,17)" rx="2" ry="2" />
<text  x="158.86" y="1567.5" ></text>
</g>
<g >
<title>std::istream::sentry::sentry (2 samples, 0.01%)</title><rect x="516.7" y="1973" width="0.1" height="15.0" fill="rgb(224,43,33)" rx="2" ry="2" />
<text  x="519.72" y="1983.5" ></text>
</g>
<g >
<title>__x64_sys_futex (17 samples, 0.08%)</title><rect x="30.1" y="1957" width="1.0" height="15.0" fill="rgb(214,135,43)" rx="2" ry="2" />
<text  x="33.10" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="155.7" y="1125" width="0.2" height="15.0" fill="rgb(219,218,51)" rx="2" ry="2" />
<text  x="158.75" y="1135.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (6 samples, 0.03%)</title><rect x="512.1" y="1877" width="0.4" height="15.0" fill="rgb(227,7,7)" rx="2" ry="2" />
<text  x="515.13" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="216.2" y="1269" width="0.1" height="15.0" fill="rgb(205,127,35)" rx="2" ry="2" />
<text  x="219.21" y="1279.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (2 samples, 0.01%)</title><rect x="84.4" y="1733" width="0.2" height="15.0" fill="rgb(248,119,6)" rx="2" ry="2" />
<text  x="87.44" y="1743.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (2 samples, 0.01%)</title><rect x="80.5" y="1349" width="0.1" height="15.0" fill="rgb(229,162,35)" rx="2" ry="2" />
<text  x="83.49" y="1359.5" ></text>
</g>
<g >
<title>unmap_region (2 samples, 0.01%)</title><rect x="80.1" y="1349" width="0.2" height="15.0" fill="rgb(241,26,1)" rx="2" ry="2" />
<text  x="83.13" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt;,  (13 samples, 0.06%)</title><rect x="215.6" y="1957" width="0.7" height="15.0" fill="rgb(251,81,40)" rx="2" ry="2" />
<text  x="218.57" y="1967.5" ></text>
</g>
<g >
<title>__do_page_fault (28 samples, 0.14%)</title><rect x="500.6" y="1893" width="1.6" height="15.0" fill="rgb(210,115,37)" rx="2" ry="2" />
<text  x="503.58" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (2 samples, 0.01%)</title><rect x="182.7" y="1797" width="0.2" height="15.0" fill="rgb(234,152,2)" rx="2" ry="2" />
<text  x="185.74" y="1807.5" ></text>
</g>
<g >
<title>[libOpenNMTTokenizer.so] (3 samples, 0.01%)</title><rect x="650.5" y="1877" width="0.2" height="15.0" fill="rgb(246,181,11)" rx="2" ry="2" />
<text  x="653.51" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (85 samples, 0.42%)</title><rect x="176.6" y="1733" width="5.0" height="15.0" fill="rgb(253,189,4)" rx="2" ry="2" />
<text  x="179.61" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (449 samples, 2.24%)</title><rect x="128.8" y="1893" width="26.4" height="15.0" fill="rgb(228,50,24)" rx="2" ry="2" />
<text  x="131.75" y="1903.5" >s..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (85 samples, 0.42%)</title><rect x="161.8" y="1717" width="5.0" height="15.0" fill="rgb(250,128,5)" rx="2" ry="2" />
<text  x="164.76" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="183.3" y="1797" width="0.3" height="15.0" fill="rgb(212,130,37)" rx="2" ry="2" />
<text  x="186.27" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.03%)</title><rect x="215.7" y="1541" width="0.4" height="15.0" fill="rgb(224,7,46)" rx="2" ry="2" />
<text  x="218.68" y="1551.5" ></text>
</g>
<g >
<title>fasttext::Vector::addRow (5 samples, 0.02%)</title><rect x="801.7" y="2037" width="0.3" height="15.0" fill="rgb(223,62,10)" rx="2" ry="2" />
<text  x="804.74" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (84 samples, 0.42%)</title><rect x="144.4" y="1685" width="5.0" height="15.0" fill="rgb(228,46,48)" rx="2" ry="2" />
<text  x="147.43" y="1695.5" ></text>
</g>
<g >
<title>__pthread_getspecific (6 samples, 0.03%)</title><rect x="174.4" y="1621" width="0.3" height="15.0" fill="rgb(217,30,15)" rx="2" ry="2" />
<text  x="177.37" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1186.5" y="1029" width="0.4" height="15.0" fill="rgb(212,182,3)" rx="2" ry="2" />
<text  x="1189.52" y="1039.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (13 samples, 0.06%)</title><rect x="487.4" y="1925" width="0.8" height="15.0" fill="rgb(236,165,39)" rx="2" ry="2" />
<text  x="490.43" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (76 samples, 0.38%)</title><rect x="157.2" y="1573" width="4.4" height="15.0" fill="rgb(218,214,10)" rx="2" ry="2" />
<text  x="160.16" y="1583.5" ></text>
</g>
<g >
<title>fasttext::FastText::getDimension (31 samples, 0.15%)</title><rect x="512.6" y="1973" width="1.8" height="15.0" fill="rgb(206,156,33)" rx="2" ry="2" />
<text  x="515.60" y="1983.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (3 samples, 0.01%)</title><rect x="767.6" y="2005" width="0.2" height="15.0" fill="rgb(226,75,49)" rx="2" ry="2" />
<text  x="770.61" y="2015.5" ></text>
</g>
<g >
<title>__do_page_fault (8 samples, 0.04%)</title><rect x="103.1" y="1989" width="0.5" height="15.0" fill="rgb(224,64,52)" rx="2" ry="2" />
<text  x="106.12" y="1999.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (4 samples, 0.02%)</title><rect x="497.6" y="1957" width="0.3" height="15.0" fill="rgb(246,69,12)" rx="2" ry="2" />
<text  x="500.63" y="1967.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (2 samples, 0.01%)</title><rect x="79.1" y="1381" width="0.1" height="15.0" fill="rgb(220,74,29)" rx="2" ry="2" />
<text  x="82.07" y="1391.5" ></text>
</g>
<g >
<title>__asan::AsanThread::stack_top (2 samples, 0.01%)</title><rect x="141.7" y="1605" width="0.1" height="15.0" fill="rgb(225,161,5)" rx="2" ry="2" />
<text  x="144.66" y="1615.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotPut (10 samples, 0.05%)</title><rect x="1178.2" y="2037" width="0.6" height="15.0" fill="rgb(230,177,39)" rx="2" ry="2" />
<text  x="1181.21" y="2047.5" ></text>
</g>
<g >
<title>flush_tlb_mm_range (31 samples, 0.15%)</title><rect x="946.7" y="1909" width="1.8" height="15.0" fill="rgb(219,157,32)" rx="2" ry="2" />
<text  x="949.66" y="1919.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (3 samples, 0.01%)</title><rect x="130.9" y="1557" width="0.2" height="15.0" fill="rgb(221,147,2)" rx="2" ry="2" />
<text  x="133.93" y="1567.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::computeSubwords (11 samples, 0.05%)</title><rect x="538.7" y="1893" width="0.7" height="15.0" fill="rgb(237,147,11)" rx="2" ry="2" />
<text  x="541.71" y="1903.5" ></text>
</g>
<g >
<title>wake_up_q (2 samples, 0.01%)</title><rect x="766.8" y="1893" width="0.1" height="15.0" fill="rgb(236,166,2)" rx="2" ry="2" />
<text  x="769.79" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (8 samples, 0.04%)</title><rect x="1186.4" y="1797" width="0.5" height="15.0" fill="rgb(211,77,38)" rx="2" ry="2" />
<text  x="1189.40" y="1807.5" ></text>
</g>
<g >
<title>arch_tlb_finish_mmu (2 samples, 0.01%)</title><rect x="1102.2" y="1877" width="0.1" height="15.0" fill="rgb(233,42,32)" rx="2" ry="2" />
<text  x="1105.19" y="1887.5" ></text>
</g>
<g >
<title>__x64_sys_madvise (24 samples, 0.12%)</title><rect x="523.0" y="1989" width="1.4" height="15.0" fill="rgb(232,145,36)" rx="2" ry="2" />
<text  x="526.03" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.04%)</title><rect x="1185.9" y="1093" width="0.5" height="15.0" fill="rgb(239,194,37)" rx="2" ry="2" />
<text  x="1188.87" y="1103.5" ></text>
</g>
<g >
<title>clear_page_erms (2 samples, 0.01%)</title><rect x="654.6" y="1749" width="0.1" height="15.0" fill="rgb(228,62,30)" rx="2" ry="2" />
<text  x="657.57" y="1759.5" ></text>
</g>
<g >
<title>__asan::PoisonShadow (149 samples, 0.74%)</title><rect x="975.8" y="2053" width="8.8" height="15.0" fill="rgb(250,226,50)" rx="2" ry="2" />
<text  x="978.83" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (70 samples, 0.35%)</title><rect x="134.8" y="1621" width="4.1" height="15.0" fill="rgb(205,127,31)" rx="2" ry="2" />
<text  x="137.77" y="1631.5" ></text>
</g>
<g >
<title>__lsan::DisabledInThisThread (13 samples, 0.06%)</title><rect x="1006.9" y="2053" width="0.8" height="15.0" fill="rgb(236,113,52)" rx="2" ry="2" />
<text  x="1009.89" y="2063.5" ></text>
</g>
<g >
<title>__pthread_getspecific (3 samples, 0.01%)</title><rect x="482.5" y="1941" width="0.2" height="15.0" fill="rgb(210,35,48)" rx="2" ry="2" />
<text  x="485.54" y="1951.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (20 samples, 0.10%)</title><rect x="70.1" y="37" width="1.1" height="15.0" fill="rgb(248,203,34)" rx="2" ry="2" />
<text  x="73.05" y="47.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1186.5" y="69" width="0.4" height="15.0" fill="rgb(248,96,24)" rx="2" ry="2" />
<text  x="1189.52" y="79.5" ></text>
</g>
<g >
<title>fasttext::DenseMatrix::addRowToVector (1,346 samples, 6.72%)</title><rect x="400.7" y="1957" width="79.3" height="15.0" fill="rgb(207,216,28)" rx="2" ry="2" />
<text  x="403.68" y="1967.5" >fasttext:..</text>
</g>
<g >
<title>__softirqentry_text_start (3 samples, 0.01%)</title><rect x="479.8" y="1893" width="0.2" height="15.0" fill="rgb(253,30,33)" rx="2" ry="2" />
<text  x="482.83" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1185.6" y="1861" width="0.1" height="15.0" fill="rgb(247,54,29)" rx="2" ry="2" />
<text  x="1188.58" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1185.6" y="1733" width="0.1" height="15.0" fill="rgb(236,112,27)" rx="2" ry="2" />
<text  x="1188.58" y="1743.5" ></text>
</g>
<g >
<title>on_each_cpu_cond_mask (4 samples, 0.02%)</title><rect x="523.3" y="1877" width="0.2" height="15.0" fill="rgb(247,2,4)" rx="2" ry="2" />
<text  x="526.27" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.02%)</title><rect x="183.3" y="1365" width="0.3" height="15.0" fill="rgb(238,167,34)" rx="2" ry="2" />
<text  x="186.33" y="1375.5" ></text>
</g>
<g >
<title>handle_mm_fault (2 samples, 0.01%)</title><rect x="518.1" y="1893" width="0.1" height="15.0" fill="rgb(222,16,15)" rx="2" ry="2" />
<text  x="521.08" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (9 samples, 0.04%)</title><rect x="1185.9" y="53" width="0.5" height="15.0" fill="rgb(236,168,52)" rx="2" ry="2" />
<text  x="1188.87" y="63.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (10 samples, 0.05%)</title><rect x="578.5" y="1877" width="0.6" height="15.0" fill="rgb(219,122,53)" rx="2" ry="2" />
<text  x="581.55" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (14 samples, 0.07%)</title><rect x="182.3" y="1877" width="0.8" height="15.0" fill="rgb(237,75,20)" rx="2" ry="2" />
<text  x="185.27" y="1887.5" ></text>
</g>
<g >
<title>__interceptor_memcmp (133 samples, 0.66%)</title><rect x="1137.5" y="2037" width="7.9" height="15.0" fill="rgb(214,200,24)" rx="2" ry="2" />
<text  x="1140.55" y="2047.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (905 samples, 4.52%)</title><rect x="818.4" y="2005" width="53.4" height="15.0" fill="rgb(239,15,8)" rx="2" ry="2" />
<text  x="821.41" y="2015.5" >__san..</text>
</g>
<g >
<title>__asan::Allocator::Allocate (1,214 samples, 6.06%)</title><rect x="877.3" y="2053" width="71.6" height="15.0" fill="rgb(238,197,28)" rx="2" ry="2" />
<text  x="880.35" y="2063.5" >__asan::..</text>
</g>
<g >
<title>__vm_munmap (2 samples, 0.01%)</title><rect x="80.1" y="1381" width="0.2" height="15.0" fill="rgb(221,132,28)" rx="2" ry="2" />
<text  x="83.13" y="1391.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (2 samples, 0.01%)</title><rect x="755.9" y="1941" width="0.1" height="15.0" fill="rgb(253,177,32)" rx="2" ry="2" />
<text  x="758.88" y="1951.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (2 samples, 0.01%)</title><rect x="871.6" y="1989" width="0.2" height="15.0" fill="rgb(224,79,29)" rx="2" ry="2" />
<text  x="874.63" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (549 samples, 2.74%)</title><rect x="55.4" y="1909" width="32.3" height="15.0" fill="rgb(213,215,38)" rx="2" ry="2" />
<text  x="58.38" y="1919.5" >[u..</text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (90 samples, 0.45%)</title><rect x="196.9" y="1637" width="5.3" height="15.0" fill="rgb(208,183,28)" rx="2" ry="2" />
<text  x="199.94" y="1647.5" ></text>
</g>
<g >
<title>__asan::CanPoisonMemory (13 samples, 0.06%)</title><rect x="971.1" y="2053" width="0.8" height="15.0" fill="rgb(234,116,10)" rx="2" ry="2" />
<text  x="974.11" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (11 samples, 0.05%)</title><rect x="1185.8" y="1733" width="0.6" height="15.0" fill="rgb(207,93,42)" rx="2" ry="2" />
<text  x="1188.76" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="155.9" y="1637" width="0.2" height="15.0" fill="rgb(217,166,5)" rx="2" ry="2" />
<text  x="158.86" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (78 samples, 0.39%)</title><rect x="203.0" y="1717" width="4.6" height="15.0" fill="rgb(207,1,21)" rx="2" ry="2" />
<text  x="206.01" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (265 samples, 1.32%)</title><rect x="156.5" y="1765" width="15.6" height="15.0" fill="rgb(213,160,54)" rx="2" ry="2" />
<text  x="159.45" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (489 samples, 2.44%)</title><rect x="55.4" y="1733" width="28.8" height="15.0" fill="rgb(218,21,35)" rx="2" ry="2" />
<text  x="58.38" y="1743.5" >[u..</text>
</g>
<g >
<title>__sanitizer::BlockingMutex::Unlock (3 samples, 0.01%)</title><rect x="757.2" y="2037" width="0.2" height="15.0" fill="rgb(247,9,2)" rx="2" ry="2" />
<text  x="760.18" y="2047.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.03%)</title><rect x="128.0" y="1957" width="0.3" height="15.0" fill="rgb(209,194,51)" rx="2" ry="2" />
<text  x="130.99" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="183.4" y="805" width="0.1" height="15.0" fill="rgb(234,227,8)" rx="2" ry="2" />
<text  x="186.39" y="815.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;std::__detail::_State&lt;char&gt; const*, std::__detail::_State&lt;char&gt;*&gt; (2 samples, 0.01%)</title><rect x="214.9" y="1733" width="0.1" height="15.0" fill="rgb(238,147,33)" rx="2" ry="2" />
<text  x="217.92" y="1743.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (2 samples, 0.01%)</title><rect x="1120.6" y="2053" width="0.2" height="15.0" fill="rgb(226,2,29)" rx="2" ry="2" />
<text  x="1123.63" y="2063.5" ></text>
</g>
<g >
<title>on_each_cpu_mask (21 samples, 0.10%)</title><rect x="947.1" y="1861" width="1.2" height="15.0" fill="rgb(222,211,38)" rx="2" ry="2" />
<text  x="950.07" y="1871.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (2 samples, 0.01%)</title><rect x="159.1" y="1541" width="0.1" height="15.0" fill="rgb(239,213,33)" rx="2" ry="2" />
<text  x="162.11" y="1551.5" ></text>
</g>
<g >
<title>smp_call_function_many (2 samples, 0.01%)</title><rect x="55.1" y="1829" width="0.1" height="15.0" fill="rgb(245,112,25)" rx="2" ry="2" />
<text  x="58.09" y="1839.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::getLine (205 samples, 1.02%)</title><rect x="527.5" y="1925" width="12.1" height="15.0" fill="rgb(221,43,0)" rx="2" ry="2" />
<text  x="530.51" y="1935.5" ></text>
</g>
<g >
<title>fasttext::Model::predict (4 samples, 0.02%)</title><rect x="769.7" y="2037" width="0.3" height="15.0" fill="rgb(207,7,35)" rx="2" ry="2" />
<text  x="772.73" y="2047.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (24 samples, 0.12%)</title><rect x="1124.0" y="2053" width="1.4" height="15.0" fill="rgb(228,38,39)" rx="2" ry="2" />
<text  x="1126.99" y="2063.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::join_left (2 samples, 0.01%)</title><rect x="656.0" y="1877" width="0.2" height="15.0" fill="rgb(252,33,29)" rx="2" ry="2" />
<text  x="659.05" y="1887.5" ></text>
</g>
<g >
<title>boost::algorithm::join&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, char [2]&gt; (22 samples, 0.11%)</title><rect x="572.4" y="1941" width="1.3" height="15.0" fill="rgb(213,212,22)" rx="2" ry="2" />
<text  x="575.36" y="1951.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (2 samples, 0.01%)</title><rect x="76.8" y="1093" width="0.1" height="15.0" fill="rgb(222,142,20)" rx="2" ry="2" />
<text  x="79.77" y="1103.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (3 samples, 0.01%)</title><rect x="88.4" y="1941" width="0.2" height="15.0" fill="rgb(233,56,11)" rx="2" ry="2" />
<text  x="91.38" y="1951.5" ></text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (6 samples, 0.03%)</title><rect x="695.7" y="1765" width="0.4" height="15.0" fill="rgb(221,122,14)" rx="2" ry="2" />
<text  x="698.71" y="1775.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="539.4" y="1893" width="0.1" height="15.0" fill="rgb(229,116,35)" rx="2" ry="2" />
<text  x="542.36" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13 samples, 0.06%)</title><rect x="1187.0" y="197" width="0.8" height="15.0" fill="rgb(234,87,29)" rx="2" ry="2" />
<text  x="1189.99" y="207.5" ></text>
</g>
<g >
<title>__pthread_getspecific (2 samples, 0.01%)</title><rect x="607.3" y="1861" width="0.1" height="15.0" fill="rgb(238,212,37)" rx="2" ry="2" />
<text  x="610.31" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (329 samples, 1.64%)</title><rect x="55.4" y="773" width="19.4" height="15.0" fill="rgb(220,198,22)" rx="2" ry="2" />
<text  x="58.38" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_subexpr_begin (3 samples, 0.01%)</title><rect x="155.3" y="1877" width="0.2" height="15.0" fill="rgb(245,29,48)" rx="2" ry="2" />
<text  x="158.28" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (13 samples, 0.06%)</title><rect x="1187.0" y="1525" width="0.8" height="15.0" fill="rgb(248,4,15)" rx="2" ry="2" />
<text  x="1189.99" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (9 samples, 0.04%)</title><rect x="1185.9" y="1541" width="0.5" height="15.0" fill="rgb(241,219,6)" rx="2" ry="2" />
<text  x="1188.87" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.03%)</title><rect x="215.7" y="1589" width="0.4" height="15.0" fill="rgb(223,126,8)" rx="2" ry="2" />
<text  x="218.68" y="1599.5" ></text>
</g>
<g >
<title>__asan_memcpy (5 samples, 0.02%)</title><rect x="199.4" y="1605" width="0.3" height="15.0" fill="rgb(222,102,36)" rx="2" ry="2" />
<text  x="202.42" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (13 samples, 0.06%)</title><rect x="1187.0" y="1141" width="0.8" height="15.0" fill="rgb(218,171,42)" rx="2" ry="2" />
<text  x="1189.99" y="1151.5" ></text>
</g>
<g >
<title>__dynamic_cast (5 samples, 0.02%)</title><rect x="167.0" y="1621" width="0.3" height="15.0" fill="rgb(224,115,3)" rx="2" ry="2" />
<text  x="170.00" y="1631.5" ></text>
</g>
<g >
<title>__do_page_fault (12 samples, 0.06%)</title><rect x="762.2" y="1989" width="0.7" height="15.0" fill="rgb(234,103,12)" rx="2" ry="2" />
<text  x="765.19" y="1999.5" ></text>
</g>
<g >
<title>__handle_mm_fault (4 samples, 0.02%)</title><rect x="1189.4" y="1957" width="0.2" height="15.0" fill="rgb(206,97,3)" rx="2" ry="2" />
<text  x="1192.35" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.04%)</title><rect x="1185.9" y="405" width="0.5" height="15.0" fill="rgb(236,195,18)" rx="2" ry="2" />
<text  x="1188.87" y="415.5" ></text>
</g>
<g >
<title>__libc_read (3 samples, 0.01%)</title><rect x="1111.8" y="2037" width="0.2" height="15.0" fill="rgb(209,131,44)" rx="2" ry="2" />
<text  x="1114.79" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.02%)</title><rect x="183.3" y="1525" width="0.3" height="15.0" fill="rgb(250,95,38)" rx="2" ry="2" />
<text  x="186.33" y="1535.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (39 samples, 0.19%)</title><rect x="678.5" y="1861" width="2.3" height="15.0" fill="rgb(236,101,32)" rx="2" ry="2" />
<text  x="681.50" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1186.5" y="325" width="0.4" height="15.0" fill="rgb(218,86,27)" rx="2" ry="2" />
<text  x="1189.52" y="335.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (4 samples, 0.02%)</title><rect x="78.3" y="1333" width="0.2" height="15.0" fill="rgb(211,36,16)" rx="2" ry="2" />
<text  x="81.31" y="1343.5" ></text>
</g>
<g >
<title>handle_mm_fault (13 samples, 0.06%)</title><rect x="680.0" y="1797" width="0.8" height="15.0" fill="rgb(222,140,20)" rx="2" ry="2" />
<text  x="683.03" y="1807.5" ></text>
</g>
<g >
<title>page_fault (40 samples, 0.20%)</title><rect x="510.2" y="1957" width="2.3" height="15.0" fill="rgb(207,182,46)" rx="2" ry="2" />
<text  x="513.18" y="1967.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::emplace_back&lt;char const*&amp;, unsigned int&amp;&gt; (193 samples, 0.96%)</title><rect x="685.2" y="1861" width="11.3" height="15.0" fill="rgb(227,212,46)" rx="2" ry="2" />
<text  x="688.16" y="1871.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::json_value::destroy (3 samples, 0.01%)</title><rect x="119.5" y="1973" width="0.2" height="15.0" fill="rgb(218,81,51)" rx="2" ry="2" />
<text  x="122.50" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (905 samples, 4.52%)</title><rect x="818.4" y="2021" width="53.4" height="15.0" fill="rgb(220,185,38)" rx="2" ry="2" />
<text  x="821.41" y="2031.5" >[unkn..</text>
</g>
<g >
<title>__asan::asan_memalign (2 samples, 0.01%)</title><rect x="488.2" y="1925" width="0.1" height="15.0" fill="rgb(242,184,42)" rx="2" ry="2" />
<text  x="491.20" y="1935.5" ></text>
</g>
<g >
<title>operator delete (9 samples, 0.04%)</title><rect x="137.5" y="1589" width="0.5" height="15.0" fill="rgb(212,26,7)" rx="2" ry="2" />
<text  x="140.48" y="1599.5" ></text>
</g>
<g >
<title>page_remove_rmap (2 samples, 0.01%)</title><rect x="767.1" y="1877" width="0.2" height="15.0" fill="rgb(210,152,39)" rx="2" ry="2" />
<text  x="770.14" y="1887.5" ></text>
</g>
<g >
<title>fasttext::FastText::loadModel (8 samples, 0.04%)</title><rect x="517.7" y="1989" width="0.5" height="15.0" fill="rgb(225,68,14)" rx="2" ry="2" />
<text  x="520.73" y="1999.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.01%)</title><rect x="315.1" y="1909" width="0.1" height="15.0" fill="rgb(241,37,43)" rx="2" ry="2" />
<text  x="318.11" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (12 samples, 0.06%)</title><rect x="1187.1" y="53" width="0.7" height="15.0" fill="rgb(218,15,33)" rx="2" ry="2" />
<text  x="1190.05" y="63.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt; &gt;::_M_manager (12 samples, 0.06%)</title><rect x="810.9" y="2037" width="0.7" height="15.0" fill="rgb(248,121,51)" rx="2" ry="2" />
<text  x="813.87" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="156.0" y="757" width="0.1" height="15.0" fill="rgb(230,121,9)" rx="2" ry="2" />
<text  x="158.98" y="767.5" ></text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::scan (5 samples, 0.02%)</title><rect x="120.1" y="1941" width="0.3" height="15.0" fill="rgb(247,193,7)" rx="2" ry="2" />
<text  x="123.09" y="1951.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::addSubwords (450 samples, 2.25%)</title><rect x="543.7" y="1909" width="26.5" height="15.0" fill="rgb(222,67,48)" rx="2" ry="2" />
<text  x="546.66" y="1919.5" >f..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1185.6" y="1637" width="0.1" height="15.0" fill="rgb(236,116,43)" rx="2" ry="2" />
<text  x="1188.58" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="216.2" y="1573" width="0.1" height="15.0" fill="rgb(207,48,18)" rx="2" ry="2" />
<text  x="219.16" y="1583.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (2 samples, 0.01%)</title><rect x="680.7" y="1749" width="0.1" height="15.0" fill="rgb(252,208,18)" rx="2" ry="2" />
<text  x="683.68" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_BracketMatcher (2 samples, 0.01%)</title><rect x="871.8" y="2037" width="0.1" height="15.0" fill="rgb(231,57,45)" rx="2" ry="2" />
<text  x="874.75" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (98 samples, 0.49%)</title><rect x="208.2" y="1733" width="5.8" height="15.0" fill="rgb(219,193,42)" rx="2" ry="2" />
<text  x="211.20" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1185.6" y="1653" width="0.1" height="15.0" fill="rgb(252,58,45)" rx="2" ry="2" />
<text  x="1188.58" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="155.7" y="1589" width="0.2" height="15.0" fill="rgb(235,2,40)" rx="2" ry="2" />
<text  x="158.75" y="1599.5" ></text>
</g>
<g >
<title>__asan_memcpy@plt (2 samples, 0.01%)</title><rect x="581.4" y="1893" width="0.1" height="15.0" fill="rgb(215,33,30)" rx="2" ry="2" />
<text  x="584.38" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="183.3" y="1781" width="0.3" height="15.0" fill="rgb(243,56,2)" rx="2" ry="2" />
<text  x="186.27" y="1791.5" ></text>
</g>
<g >
<title>do_page_fault (11 samples, 0.05%)</title><rect x="654.3" y="1845" width="0.6" height="15.0" fill="rgb(254,7,17)" rx="2" ry="2" />
<text  x="657.28" y="1855.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (56 samples, 0.28%)</title><rect x="130.1" y="1573" width="3.3" height="15.0" fill="rgb(240,163,44)" rx="2" ry="2" />
<text  x="133.11" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14 samples, 0.07%)</title><rect x="1186.9" y="1925" width="0.9" height="15.0" fill="rgb(244,99,47)" rx="2" ry="2" />
<text  x="1189.94" y="1935.5" ></text>
</g>
<g >
<title>std::__move_merge&lt;__gnu_cxx::__normal_iterator&lt;TDocument*, std::vector&lt;TDocument, std::allocator&lt;TDocument&gt; &gt; &gt;, TDocument*, __gnu_cxx::__ops::_Iter_comp_iter&lt;main::$_1&gt; &gt; (2 samples, 0.01%)</title><rect x="520.5" y="1973" width="0.1" height="15.0" fill="rgb(235,1,36)" rx="2" ry="2" />
<text  x="523.50" y="1983.5" ></text>
</g>
<g >
<title>try_to_wake_up (2 samples, 0.01%)</title><rect x="766.8" y="1877" width="0.1" height="15.0" fill="rgb(222,56,12)" rx="2" ry="2" />
<text  x="769.79" y="1887.5" ></text>
</g>
<g >
<title>[tgnews] (209 samples, 1.04%)</title><rect x="31.2" y="2053" width="12.3" height="15.0" fill="rgb(217,102,18)" rx="2" ry="2" />
<text  x="34.22" y="2063.5" ></text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::next_byte_in_range (46 samples, 0.23%)</title><rect x="124.5" y="1925" width="2.7" height="15.0" fill="rgb(248,175,44)" rx="2" ry="2" />
<text  x="127.51" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.02%)</title><rect x="183.3" y="1589" width="0.3" height="15.0" fill="rgb(234,9,50)" rx="2" ry="2" />
<text  x="186.33" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.02%)</title><rect x="183.3" y="1413" width="0.3" height="15.0" fill="rgb(250,150,47)" rx="2" ry="2" />
<text  x="186.33" y="1423.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (5 samples, 0.02%)</title><rect x="331.0" y="1957" width="0.3" height="15.0" fill="rgb(253,195,5)" rx="2" ry="2" />
<text  x="334.02" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13 samples, 0.06%)</title><rect x="1187.0" y="1461" width="0.8" height="15.0" fill="rgb(205,7,28)" rx="2" ry="2" />
<text  x="1189.99" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="156.0" y="837" width="0.1" height="15.0" fill="rgb(238,164,2)" rx="2" ry="2" />
<text  x="158.98" y="847.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="1007.7" y="2037" width="0.1" height="15.0" fill="rgb(243,213,49)" rx="2" ry="2" />
<text  x="1010.65" y="2047.5" ></text>
</g>
<g >
<title>get_page_from_freelist (9 samples, 0.04%)</title><rect x="26.0" y="1925" width="0.6" height="15.0" fill="rgb(232,202,32)" rx="2" ry="2" />
<text  x="29.03" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13 samples, 0.06%)</title><rect x="1187.0" y="1013" width="0.8" height="15.0" fill="rgb(207,156,46)" rx="2" ry="2" />
<text  x="1189.99" y="1023.5" ></text>
</g>
<g >
<title>__x64_sys_read (3 samples, 0.01%)</title><rect x="118.3" y="1989" width="0.1" height="15.0" fill="rgb(220,30,8)" rx="2" ry="2" />
<text  x="121.26" y="1999.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotPut (2 samples, 0.01%)</title><rect x="170.1" y="1589" width="0.1" height="15.0" fill="rgb(238,141,19)" rx="2" ry="2" />
<text  x="173.07" y="1599.5" ></text>
</g>
<g >
<title>__lru_cache_add (6 samples, 0.03%)</title><rect x="695.7" y="1749" width="0.4" height="15.0" fill="rgb(243,39,20)" rx="2" ry="2" />
<text  x="698.71" y="1759.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (3 samples, 0.01%)</title><rect x="1103.4" y="1877" width="0.2" height="15.0" fill="rgb(252,76,8)" rx="2" ry="2" />
<text  x="1106.42" y="1887.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (20 samples, 0.10%)</title><rect x="27.5" y="1941" width="1.2" height="15.0" fill="rgb(246,220,31)" rx="2" ry="2" />
<text  x="30.50" y="1951.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (2 samples, 0.01%)</title><rect x="90.0" y="1893" width="0.1" height="15.0" fill="rgb(254,99,29)" rx="2" ry="2" />
<text  x="92.98" y="1903.5" ></text>
</g>
<g >
<title>__madvise (2 samples, 0.01%)</title><rect x="76.5" y="1189" width="0.2" height="15.0" fill="rgb(240,227,19)" rx="2" ry="2" />
<text  x="79.54" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="215.9" y="1381" width="0.2" height="15.0" fill="rgb(233,208,34)" rx="2" ry="2" />
<text  x="218.86" y="1391.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="74.9" y="917" width="0.1" height="15.0" fill="rgb(239,173,34)" rx="2" ry="2" />
<text  x="77.89" y="927.5" ></text>
</g>
<g >
<title>std::locale::~locale (2 samples, 0.01%)</title><rect x="517.3" y="1973" width="0.1" height="15.0" fill="rgb(213,148,16)" rx="2" ry="2" />
<text  x="520.26" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (85 samples, 0.42%)</title><rect x="161.8" y="1701" width="5.0" height="15.0" fill="rgb(210,54,49)" rx="2" ry="2" />
<text  x="164.76" y="1711.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.01%)</title><rect x="169.5" y="1589" width="0.2" height="15.0" fill="rgb(236,216,19)" rx="2" ry="2" />
<text  x="172.54" y="1599.5" ></text>
</g>
<g >
<title>__dynamic_cast (6 samples, 0.03%)</title><rect x="208.6" y="1701" width="0.4" height="15.0" fill="rgb(216,146,39)" rx="2" ry="2" />
<text  x="211.61" y="1711.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (22 samples, 0.11%)</title><rect x="765.6" y="1957" width="1.3" height="15.0" fill="rgb(232,64,32)" rx="2" ry="2" />
<text  x="768.61" y="1967.5" ></text>
</g>
<g >
<title>fasttext::Vector::norm (24 samples, 0.12%)</title><rect x="333.8" y="1989" width="1.5" height="15.0" fill="rgb(208,154,3)" rx="2" ry="2" />
<text  x="336.85" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1185.6" y="1573" width="0.1" height="15.0" fill="rgb(232,153,14)" rx="2" ry="2" />
<text  x="1188.58" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="216.2" y="1669" width="0.1" height="15.0" fill="rgb(245,13,53)" rx="2" ry="2" />
<text  x="219.16" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="183.4" y="901" width="0.1" height="15.0" fill="rgb(217,46,46)" rx="2" ry="2" />
<text  x="186.39" y="911.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (2 samples, 0.01%)</title><rect x="43.5" y="2005" width="0.2" height="15.0" fill="rgb(211,217,22)" rx="2" ry="2" />
<text  x="46.53" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1186.5" y="133" width="0.4" height="15.0" fill="rgb(225,58,33)" rx="2" ry="2" />
<text  x="1189.52" y="143.5" ></text>
</g>
<g >
<title>__x64_sys_madvise (2 samples, 0.01%)</title><rect x="76.5" y="1141" width="0.2" height="15.0" fill="rgb(217,185,48)" rx="2" ry="2" />
<text  x="79.54" y="1151.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (9 samples, 0.04%)</title><rect x="91.0" y="2021" width="0.6" height="15.0" fill="rgb(253,157,41)" rx="2" ry="2" />
<text  x="94.04" y="2031.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.01%)</title><rect x="327.1" y="1941" width="0.1" height="15.0" fill="rgb(212,115,45)" rx="2" ry="2" />
<text  x="330.07" y="1951.5" ></text>
</g>
<g >
<title>generic_file_read_iter (3 samples, 0.01%)</title><rect x="118.3" y="1893" width="0.1" height="15.0" fill="rgb(228,68,36)" rx="2" ry="2" />
<text  x="121.26" y="1903.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.01%)</title><rect x="179.3" y="1653" width="0.1" height="15.0" fill="rgb(205,85,14)" rx="2" ry="2" />
<text  x="182.26" y="1663.5" ></text>
</g>
<g >
<title>fasttext::ProductQuantizer::get_centroids (2 samples, 0.01%)</title><rect x="1104.5" y="2053" width="0.1" height="15.0" fill="rgb(226,94,5)" rx="2" ry="2" />
<text  x="1107.49" y="2063.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="171.7" y="1621" width="0.1" height="15.0" fill="rgb(211,206,52)" rx="2" ry="2" />
<text  x="174.66" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="155.7" y="1861" width="0.4" height="15.0" fill="rgb(231,52,30)" rx="2" ry="2" />
<text  x="158.75" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.02%)</title><rect x="183.3" y="1717" width="0.3" height="15.0" fill="rgb(247,64,16)" rx="2" ry="2" />
<text  x="186.33" y="1727.5" ></text>
</g>
<g >
<title>Rank (953 samples, 4.76%)</title><rect x="128.5" y="2005" width="56.2" height="15.0" fill="rgb(225,226,21)" rx="2" ry="2" />
<text  x="131.52" y="2015.5" >Rank</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="1185.5" y="1973" width="0.2" height="15.0" fill="rgb(247,148,39)" rx="2" ry="2" />
<text  x="1188.52" y="1983.5" ></text>
</g>
<g >
<title>__asan::Allocator::Deallocate (2 samples, 0.01%)</title><rect x="210.1" y="1669" width="0.2" height="15.0" fill="rgb(254,161,43)" rx="2" ry="2" />
<text  x="213.14" y="1679.5" ></text>
</g>
<g >
<title>__sanitizer::LargeMmapAllocator&lt;__asan::AsanMapUnmapCallback, __sanitizer::LargeMmapAllocatorPtrArrayDynamic&gt;::Allocate (5 samples, 0.02%)</title><rect x="1024.0" y="2053" width="0.3" height="15.0" fill="rgb(248,97,35)" rx="2" ry="2" />
<text  x="1027.04" y="2063.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsgetn (3 samples, 0.01%)</title><rect x="1187.8" y="2053" width="0.2" height="15.0" fill="rgb(252,176,5)" rx="2" ry="2" />
<text  x="1190.82" y="2063.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (2 samples, 0.01%)</title><rect x="138.7" y="1605" width="0.1" height="15.0" fill="rgb(243,41,32)" rx="2" ry="2" />
<text  x="141.71" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.05%)</title><rect x="215.7" y="1749" width="0.6" height="15.0" fill="rgb(225,200,50)" rx="2" ry="2" />
<text  x="218.68" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (322 samples, 1.61%)</title><rect x="55.4" y="533" width="19.0" height="15.0" fill="rgb(227,188,43)" rx="2" ry="2" />
<text  x="58.38" y="543.5" ></text>
</g>
<g >
<title>unmap_page_range (5 samples, 0.02%)</title><rect x="1103.3" y="1909" width="0.3" height="15.0" fill="rgb(238,186,31)" rx="2" ry="2" />
<text  x="1106.31" y="1919.5" ></text>
</g>
<g >
<title>Eigen::internal::general_matrix_vector_product&lt;long, float, Eigen::internal::const_blas_data_mapper&lt;float, long, 1&gt;, 1, false, float, Eigen::internal::const_blas_data_mapper&lt;float, long, 0&gt;, false, 0&gt;::run (326 samples, 1.63%)</title><rect x="381.4" y="1925" width="19.2" height="15.0" fill="rgb(230,4,26)" rx="2" ry="2" />
<text  x="384.35" y="1935.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.01%)</title><rect x="146.0" y="1653" width="0.1" height="15.0" fill="rgb(205,46,36)" rx="2" ry="2" />
<text  x="149.02" y="1663.5" ></text>
</g>
<g >
<title>x2apic_send_IPI (2 samples, 0.01%)</title><rect x="55.1" y="1765" width="0.1" height="15.0" fill="rgb(250,36,36)" rx="2" ry="2" />
<text  x="58.09" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="155.9" y="933" width="0.1" height="15.0" fill="rgb(240,122,45)" rx="2" ry="2" />
<text  x="158.86" y="943.5" ></text>
</g>
<g >
<title>alloc_pages_vma (13 samples, 0.06%)</title><rect x="694.9" y="1765" width="0.8" height="15.0" fill="rgb(229,7,38)" rx="2" ry="2" />
<text  x="697.94" y="1775.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (8 samples, 0.04%)</title><rect x="185.9" y="1669" width="0.5" height="15.0" fill="rgb(227,182,9)" rx="2" ry="2" />
<text  x="188.92" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="183.3" y="1253" width="0.2" height="15.0" fill="rgb(214,171,39)" rx="2" ry="2" />
<text  x="186.33" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14 samples, 0.07%)</title><rect x="1186.9" y="1701" width="0.9" height="15.0" fill="rgb(226,158,23)" rx="2" ry="2" />
<text  x="1189.94" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="155.9" y="1237" width="0.2" height="15.0" fill="rgb(225,64,30)" rx="2" ry="2" />
<text  x="158.86" y="1247.5" ></text>
</g>
<g >
<title>arch_tlb_finish_mmu (15 samples, 0.07%)</title><rect x="523.1" y="1941" width="0.9" height="15.0" fill="rgb(217,53,21)" rx="2" ry="2" />
<text  x="526.15" y="1951.5" ></text>
</g>
<g >
<title>__asan::AsanTSDGet (15 samples, 0.07%)</title><rect x="112.3" y="2037" width="0.8" height="15.0" fill="rgb(207,59,23)" rx="2" ry="2" />
<text  x="115.25" y="2047.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (17 samples, 0.08%)</title><rect x="945.2" y="1925" width="1.0" height="15.0" fill="rgb(242,110,25)" rx="2" ry="2" />
<text  x="948.18" y="1935.5" ></text>
</g>
<g >
<title>__dynamic_cast (54 samples, 0.27%)</title><rect x="1001.3" y="2053" width="3.2" height="15.0" fill="rgb(212,199,3)" rx="2" ry="2" />
<text  x="1004.29" y="2063.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.02%)</title><rect x="170.2" y="1589" width="0.3" height="15.0" fill="rgb(208,132,49)" rx="2" ry="2" />
<text  x="173.19" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (14,148 samples, 70.66%)</title><rect x="43.5" y="2053" width="833.8" height="15.0" fill="rgb(209,120,25)" rx="2" ry="2" />
<text  x="46.53" y="2063.5" >[unknown]</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (11 samples, 0.05%)</title><rect x="1185.8" y="1637" width="0.6" height="15.0" fill="rgb(216,179,41)" rx="2" ry="2" />
<text  x="1188.76" y="1647.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (3 samples, 0.01%)</title><rect x="76.4" y="1189" width="0.1" height="15.0" fill="rgb(254,50,38)" rx="2" ry="2" />
<text  x="79.36" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.05%)</title><rect x="1185.8" y="1701" width="0.6" height="15.0" fill="rgb(238,17,12)" rx="2" ry="2" />
<text  x="1188.76" y="1711.5" ></text>
</g>
<g >
<title>operator delete (7 samples, 0.03%)</title><rect x="132.1" y="1557" width="0.4" height="15.0" fill="rgb(220,132,38)" rx="2" ry="2" />
<text  x="135.11" y="1567.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (3 samples, 0.01%)</title><rect x="479.8" y="1941" width="0.2" height="15.0" fill="rgb(254,50,41)" rx="2" ry="2" />
<text  x="482.83" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.02%)</title><rect x="43.9" y="2021" width="0.3" height="15.0" fill="rgb(218,134,15)" rx="2" ry="2" />
<text  x="46.95" y="2031.5" ></text>
</g>
<g >
<title>try_to_wake_up (3 samples, 0.01%)</title><rect x="1102.8" y="1893" width="0.2" height="15.0" fill="rgb(228,51,30)" rx="2" ry="2" />
<text  x="1105.83" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.04%)</title><rect x="1185.9" y="1285" width="0.5" height="15.0" fill="rgb(216,155,21)" rx="2" ry="2" />
<text  x="1188.87" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (501 samples, 2.50%)</title><rect x="185.9" y="1909" width="29.5" height="15.0" fill="rgb(217,104,26)" rx="2" ry="2" />
<text  x="188.86" y="1919.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.04%)</title><rect x="1186.4" y="1973" width="0.5" height="15.0" fill="rgb(209,191,42)" rx="2" ry="2" />
<text  x="1189.40" y="1983.5" ></text>
</g>
<g >
<title>__asan_memmove (3 samples, 0.01%)</title><rect x="1188.8" y="2037" width="0.2" height="15.0" fill="rgb(241,204,42)" rx="2" ry="2" />
<text  x="1191.82" y="2047.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (47 samples, 0.23%)</title><rect x="178.3" y="1669" width="2.8" height="15.0" fill="rgb(225,101,25)" rx="2" ry="2" />
<text  x="181.32" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (440 samples, 2.20%)</title><rect x="55.4" y="1557" width="25.9" height="15.0" fill="rgb(223,11,7)" rx="2" ry="2" />
<text  x="58.38" y="1567.5" >[..</text>
</g>
<g >
<title>page_fault (110 samples, 0.55%)</title><rect x="22.6" y="2037" width="6.4" height="15.0" fill="rgb(216,203,8)" rx="2" ry="2" />
<text  x="25.55" y="2047.5" ></text>
</g>
<g >
<title>__sanitizer::ThreadContextBase::OnJoined (4 samples, 0.02%)</title><rect x="765.3" y="2037" width="0.2" height="15.0" fill="rgb(231,166,16)" rx="2" ry="2" />
<text  x="768.25" y="2047.5" ></text>
</g>
<g >
<title>std::__merge_sort_with_buffer&lt;__gnu_cxx::__normal_iterator&lt;TDocument*, std::vector&lt;TDocument, std::allocator&lt;TDocument&gt; &gt; &gt;, TDocument*, __gnu_cxx::__ops::_Iter_comp_iter&lt;main::$_1&gt; &gt; (5 samples, 0.02%)</title><rect x="520.3" y="1989" width="0.3" height="15.0" fill="rgb(226,37,16)" rx="2" ry="2" />
<text  x="523.32" y="1999.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (3 samples, 0.01%)</title><rect x="83.3" y="1685" width="0.2" height="15.0" fill="rgb(248,96,53)" rx="2" ry="2" />
<text  x="86.32" y="1695.5" ></text>
</g>
<g >
<title>on_each_cpu_mask (2 samples, 0.01%)</title><rect x="80.0" y="1269" width="0.1" height="15.0" fill="rgb(248,203,52)" rx="2" ry="2" />
<text  x="82.96" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14 samples, 0.07%)</title><rect x="1186.9" y="1749" width="0.9" height="15.0" fill="rgb(231,112,29)" rx="2" ry="2" />
<text  x="1189.94" y="1759.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::do_tolower (2 samples, 0.01%)</title><rect x="195.6" y="1605" width="0.1" height="15.0" fill="rgb(242,24,35)" rx="2" ry="2" />
<text  x="198.59" y="1615.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::Unwind (4 samples, 0.02%)</title><rect x="190.0" y="1557" width="0.3" height="15.0" fill="rgb(218,170,33)" rx="2" ry="2" />
<text  x="193.05" y="1567.5" ></text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.01%)</title><rect x="152.5" y="1669" width="0.2" height="15.0" fill="rgb(230,73,15)" rx="2" ry="2" />
<text  x="155.51" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (2 samples, 0.01%)</title><rect x="214.7" y="1829" width="0.1" height="15.0" fill="rgb(231,157,13)" rx="2" ry="2" />
<text  x="217.68" y="1839.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (6 samples, 0.03%)</title><rect x="501.3" y="1829" width="0.4" height="15.0" fill="rgb(231,111,45)" rx="2" ry="2" />
<text  x="504.34" y="1839.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="80.0" y="1413" width="0.1" height="15.0" fill="rgb(232,212,46)" rx="2" ry="2" />
<text  x="82.96" y="1423.5" ></text>
</g>
<g >
<title>release_pages (3 samples, 0.01%)</title><rect x="766.9" y="1845" width="0.2" height="15.0" fill="rgb(249,43,41)" rx="2" ry="2" />
<text  x="769.90" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="155.7" y="1205" width="0.2" height="15.0" fill="rgb(252,193,5)" rx="2" ry="2" />
<text  x="158.75" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1186.5" y="565" width="0.4" height="15.0" fill="rgb(228,107,27)" rx="2" ry="2" />
<text  x="1189.52" y="575.5" ></text>
</g>
<g >
<title>[unknown] (705 samples, 3.52%)</title><rect x="55.3" y="2037" width="41.5" height="15.0" fill="rgb(247,63,31)" rx="2" ry="2" />
<text  x="58.26" y="2047.5" >[un..</text>
</g>
<g >
<title>std::locale::~locale (3 samples, 0.01%)</title><rect x="335.7" y="1989" width="0.2" height="15.0" fill="rgb(240,107,7)" rx="2" ry="2" />
<text  x="338.73" y="1999.5" ></text>
</g>
<g >
<title>do_syscall_64 (19 samples, 0.09%)</title><rect x="30.1" y="1973" width="1.1" height="15.0" fill="rgb(247,64,42)" rx="2" ry="2" />
<text  x="33.10" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (445 samples, 2.22%)</title><rect x="128.9" y="1845" width="26.2" height="15.0" fill="rgb(212,171,51)" rx="2" ry="2" />
<text  x="131.87" y="1855.5" >s..</text>
</g>
<g >
<title>[libc-2.27.so] (2 samples, 0.01%)</title><rect x="96.1" y="2005" width="0.1" height="15.0" fill="rgb(248,145,26)" rx="2" ry="2" />
<text  x="99.10" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (2 samples, 0.01%)</title><rect x="871.9" y="2037" width="0.1" height="15.0" fill="rgb(205,38,54)" rx="2" ry="2" />
<text  x="874.87" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13 samples, 0.06%)</title><rect x="1187.0" y="1157" width="0.8" height="15.0" fill="rgb(250,203,24)" rx="2" ry="2" />
<text  x="1189.99" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.04%)</title><rect x="1186.4" y="1813" width="0.5" height="15.0" fill="rgb(236,159,30)" rx="2" ry="2" />
<text  x="1189.40" y="1823.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (2 samples, 0.01%)</title><rect x="1189.5" y="1925" width="0.1" height="15.0" fill="rgb(216,7,2)" rx="2" ry="2" />
<text  x="1192.47" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (3 samples, 0.01%)</title><rect x="182.4" y="1781" width="0.2" height="15.0" fill="rgb(208,29,54)" rx="2" ry="2" />
<text  x="185.44" y="1791.5" ></text>
</g>
<g >
<title>do_syscall_64 (3 samples, 0.01%)</title><rect x="87.9" y="1877" width="0.2" height="15.0" fill="rgb(235,6,48)" rx="2" ry="2" />
<text  x="90.91" y="1887.5" ></text>
</g>
<g >
<title>clear_page_erms (4 samples, 0.02%)</title><rect x="501.4" y="1813" width="0.2" height="15.0" fill="rgb(209,23,29)" rx="2" ry="2" />
<text  x="504.40" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (8 samples, 0.04%)</title><rect x="1186.4" y="1941" width="0.5" height="15.0" fill="rgb(239,118,36)" rx="2" ry="2" />
<text  x="1189.40" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="155.9" y="853" width="0.1" height="15.0" fill="rgb(252,37,23)" rx="2" ry="2" />
<text  x="158.86" y="863.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.02%)</title><rect x="148.1" y="1637" width="0.3" height="15.0" fill="rgb(254,36,31)" rx="2" ry="2" />
<text  x="151.14" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (19 samples, 0.09%)</title><rect x="875.5" y="2021" width="1.1" height="15.0" fill="rgb(206,114,10)" rx="2" ry="2" />
<text  x="878.52" y="2031.5" ></text>
</g>
<g >
<title>do_wp_page (86 samples, 0.43%)</title><rect x="943.4" y="1957" width="5.1" height="15.0" fill="rgb(225,105,48)" rx="2" ry="2" />
<text  x="946.42" y="1967.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (2 samples, 0.01%)</title><rect x="75.7" y="1141" width="0.1" height="15.0" fill="rgb(229,203,46)" rx="2" ry="2" />
<text  x="78.71" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="183.4" y="837" width="0.1" height="15.0" fill="rgb(225,166,54)" rx="2" ry="2" />
<text  x="186.39" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (14 samples, 0.07%)</title><rect x="1186.9" y="1621" width="0.9" height="15.0" fill="rgb(214,62,46)" rx="2" ry="2" />
<text  x="1189.94" y="1631.5" ></text>
</g>
<g >
<title>new_sync_read (3 samples, 0.01%)</title><rect x="118.3" y="1925" width="0.1" height="15.0" fill="rgb(220,220,2)" rx="2" ry="2" />
<text  x="121.26" y="1935.5" ></text>
</g>
<g >
<title>std::vector&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::allocator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;::reserve (2 samples, 0.01%)</title><rect x="518.4" y="1973" width="0.2" height="15.0" fill="rgb(236,24,12)" rx="2" ry="2" />
<text  x="521.43" y="1983.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::initNgrams (19 samples, 0.09%)</title><rect x="872.6" y="1973" width="1.1" height="15.0" fill="rgb(226,205,31)" rx="2" ry="2" />
<text  x="875.58" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (437 samples, 2.18%)</title><rect x="156.4" y="1861" width="25.7" height="15.0" fill="rgb(221,119,19)" rx="2" ry="2" />
<text  x="159.39" y="1871.5" >s..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (82 samples, 0.41%)</title><rect x="156.9" y="1637" width="4.8" height="15.0" fill="rgb(229,140,45)" rx="2" ry="2" />
<text  x="159.87" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="871.8" y="2021" width="0.1" height="15.0" fill="rgb(206,133,38)" rx="2" ry="2" />
<text  x="874.75" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="155.7" y="1397" width="0.2" height="15.0" fill="rgb(250,115,6)" rx="2" ry="2" />
<text  x="158.75" y="1407.5" ></text>
</g>
<g >
<title>clear_page_erms (3 samples, 0.01%)</title><rect x="1024.2" y="1925" width="0.1" height="15.0" fill="rgb(223,38,53)" rx="2" ry="2" />
<text  x="1027.16" y="1935.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (2 samples, 0.01%)</title><rect x="82.5" y="1621" width="0.1" height="15.0" fill="rgb(238,39,48)" rx="2" ry="2" />
<text  x="85.49" y="1631.5" ></text>
</g>
<g >
<title>onmt::unicode::is_letter (179 samples, 0.89%)</title><rect x="699.5" y="1861" width="10.5" height="15.0" fill="rgb(248,184,17)" rx="2" ry="2" />
<text  x="702.48" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (2 samples, 0.01%)</title><rect x="214.3" y="1765" width="0.1" height="15.0" fill="rgb(209,121,13)" rx="2" ry="2" />
<text  x="217.27" y="1775.5" ></text>
</g>
<g >
<title>vm_area_dup (3 samples, 0.01%)</title><rect x="765.8" y="1877" width="0.2" height="15.0" fill="rgb(214,89,24)" rx="2" ry="2" />
<text  x="768.78" y="1887.5" ></text>
</g>
<g >
<title>do_wp_page (3 samples, 0.01%)</title><rect x="1099.6" y="1957" width="0.2" height="15.0" fill="rgb(253,111,38)" rx="2" ry="2" />
<text  x="1102.59" y="1967.5" ></text>
</g>
<g >
<title>__dynamic_cast (4 samples, 0.02%)</title><rect x="129.8" y="1573" width="0.2" height="15.0" fill="rgb(232,78,31)" rx="2" ry="2" />
<text  x="132.76" y="1583.5" ></text>
</g>
<g >
<title>Eigen::DenseBase&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; &gt;::setConstant (3 samples, 0.01%)</title><rect x="222.0" y="1957" width="0.2" height="15.0" fill="rgb(216,66,45)" rx="2" ry="2" />
<text  x="225.05" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (335 samples, 1.67%)</title><rect x="55.4" y="949" width="19.7" height="15.0" fill="rgb(232,22,27)" rx="2" ry="2" />
<text  x="58.38" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="183.3" y="1205" width="0.2" height="15.0" fill="rgb(217,151,39)" rx="2" ry="2" />
<text  x="186.33" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1186.5" y="933" width="0.4" height="15.0" fill="rgb(214,189,4)" rx="2" ry="2" />
<text  x="1189.52" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (2 samples, 0.01%)</title><rect x="214.9" y="1765" width="0.1" height="15.0" fill="rgb(249,25,3)" rx="2" ry="2" />
<text  x="217.92" y="1775.5" ></text>
</g>
<g >
<title>__lsan::LsanMetadata::allocated (6 samples, 0.03%)</title><rect x="521.9" y="2037" width="0.4" height="15.0" fill="rgb(212,33,33)" rx="2" ry="2" />
<text  x="524.91" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.04%)</title><rect x="1185.9" y="1429" width="0.5" height="15.0" fill="rgb(241,79,40)" rx="2" ry="2" />
<text  x="1188.87" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_try_char (2 samples, 0.01%)</title><rect x="196.2" y="1733" width="0.1" height="15.0" fill="rgb(250,168,12)" rx="2" ry="2" />
<text  x="199.18" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="155.9" y="981" width="0.1" height="15.0" fill="rgb(254,210,9)" rx="2" ry="2" />
<text  x="158.86" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.04%)</title><rect x="1185.9" y="949" width="0.5" height="15.0" fill="rgb(234,140,2)" rx="2" ry="2" />
<text  x="1188.87" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1185.6" y="1349" width="0.1" height="15.0" fill="rgb(210,84,43)" rx="2" ry="2" />
<text  x="1188.58" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.04%)</title><rect x="1185.9" y="181" width="0.5" height="15.0" fill="rgb(236,64,23)" rx="2" ry="2" />
<text  x="1188.87" y="191.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.01%)</title><rect x="755.0" y="1909" width="0.1" height="15.0" fill="rgb(218,211,5)" rx="2" ry="2" />
<text  x="758.00" y="1919.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.02%)</title><rect x="212.1" y="1669" width="0.3" height="15.0" fill="rgb(238,216,14)" rx="2" ry="2" />
<text  x="215.09" y="1679.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_emplace_unique&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; (2 samples, 0.01%)</title><rect x="518.6" y="1989" width="0.1" height="15.0" fill="rgb(240,159,14)" rx="2" ry="2" />
<text  x="521.55" y="1999.5" ></text>
</g>
<g >
<title>TAgencyRating::ScoreUrl (473 samples, 2.36%)</title><rect x="156.1" y="1973" width="27.9" height="15.0" fill="rgb(240,76,35)" rx="2" ry="2" />
<text  x="159.10" y="1983.5" >T..</text>
</g>
<g >
<title>__do_page_fault (3 samples, 0.01%)</title><rect x="518.0" y="1909" width="0.2" height="15.0" fill="rgb(226,1,27)" rx="2" ry="2" />
<text  x="521.02" y="1919.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (2 samples, 0.01%)</title><rect x="165.0" y="1573" width="0.1" height="15.0" fill="rgb(217,132,26)" rx="2" ry="2" />
<text  x="168.00" y="1583.5" ></text>
</g>
<g >
<title>onmt::Tokenizer::tokenize (2,963 samples, 14.80%)</title><rect x="580.3" y="1909" width="174.6" height="15.0" fill="rgb(245,166,17)" rx="2" ry="2" />
<text  x="583.32" y="1919.5" >onmt::Tokenizer::token..</text>
</g>
<g >
<title>onmt::unicode::get_lower (13 samples, 0.06%)</title><rect x="620.0" y="1877" width="0.7" height="15.0" fill="rgb(227,85,36)" rx="2" ry="2" />
<text  x="622.98" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (4 samples, 0.02%)</title><rect x="214.3" y="1797" width="0.2" height="15.0" fill="rgb(253,123,11)" rx="2" ry="2" />
<text  x="217.27" y="1807.5" ></text>
</g>
<g >
<title>__pthread_getspecific (4 samples, 0.02%)</title><rect x="147.4" y="1637" width="0.3" height="15.0" fill="rgb(213,36,45)" rx="2" ry="2" />
<text  x="150.44" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (410 samples, 2.05%)</title><rect x="55.4" y="1413" width="24.1" height="15.0" fill="rgb(210,173,1)" rx="2" ry="2" />
<text  x="58.38" y="1423.5" >[..</text>
</g>
<g >
<title>[libc-2.27.so] (20 samples, 0.10%)</title><rect x="1150.2" y="2037" width="1.1" height="15.0" fill="rgb(226,156,34)" rx="2" ry="2" />
<text  x="1153.16" y="2047.5" ></text>
</g>
<g >
<title>unmap_page_range (2 samples, 0.01%)</title><rect x="1102.3" y="1861" width="0.1" height="15.0" fill="rgb(245,33,11)" rx="2" ry="2" />
<text  x="1105.30" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (5 samples, 0.02%)</title><rect x="156.5" y="1669" width="0.3" height="15.0" fill="rgb(221,221,12)" rx="2" ry="2" />
<text  x="159.51" y="1679.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::Unwind (2 samples, 0.01%)</title><rect x="206.2" y="1637" width="0.1" height="15.0" fill="rgb(218,125,54)" rx="2" ry="2" />
<text  x="209.20" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13 samples, 0.06%)</title><rect x="1187.0" y="357" width="0.8" height="15.0" fill="rgb(209,87,21)" rx="2" ry="2" />
<text  x="1189.99" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (3 samples, 0.01%)</title><rect x="182.7" y="1813" width="0.2" height="15.0" fill="rgb(231,205,15)" rx="2" ry="2" />
<text  x="185.74" y="1823.5" ></text>
</g>
<g >
<title>vm_area_dup (2 samples, 0.01%)</title><rect x="1102.0" y="1893" width="0.1" height="15.0" fill="rgb(250,144,43)" rx="2" ry="2" />
<text  x="1105.01" y="1903.5" ></text>
</g>
<g >
<title>operator delete[] (58 samples, 0.29%)</title><rect x="1179.2" y="2037" width="3.4" height="15.0" fill="rgb(213,187,53)" rx="2" ry="2" />
<text  x="1182.21" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (13 samples, 0.06%)</title><rect x="1187.0" y="853" width="0.8" height="15.0" fill="rgb(207,2,30)" rx="2" ry="2" />
<text  x="1189.99" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1186.5" y="453" width="0.4" height="15.0" fill="rgb(254,9,43)" rx="2" ry="2" />
<text  x="1189.52" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1185.6" y="1781" width="0.1" height="15.0" fill="rgb(231,99,5)" rx="2" ry="2" />
<text  x="1188.58" y="1791.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (3 samples, 0.01%)</title><rect x="79.3" y="1397" width="0.2" height="15.0" fill="rgb(228,109,39)" rx="2" ry="2" />
<text  x="82.31" y="1407.5" ></text>
</g>
<g >
<title>__asan_memcpy (4 samples, 0.02%)</title><rect x="585.3" y="1877" width="0.3" height="15.0" fill="rgb(243,42,27)" rx="2" ry="2" />
<text  x="588.33" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (462 samples, 2.31%)</title><rect x="55.4" y="1637" width="27.2" height="15.0" fill="rgb(223,24,49)" rx="2" ry="2" />
<text  x="58.38" y="1647.5" >[..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="216.0" y="1221" width="0.1" height="15.0" fill="rgb(242,210,54)" rx="2" ry="2" />
<text  x="218.98" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1186.5" y="1013" width="0.4" height="15.0" fill="rgb(222,175,24)" rx="2" ry="2" />
<text  x="1189.52" y="1023.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt; &gt;::_M_manager (2 samples, 0.01%)</title><rect x="207.9" y="1701" width="0.1" height="15.0" fill="rgb(231,94,24)" rx="2" ry="2" />
<text  x="210.90" y="1711.5" ></text>
</g>
<g >
<title>nlohmann::detail::input_stream_adapter::get_character (8 samples, 0.04%)</title><rect x="126.8" y="1893" width="0.4" height="15.0" fill="rgb(214,77,37)" rx="2" ry="2" />
<text  x="129.75" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (15 samples, 0.07%)</title><rect x="1186.9" y="2053" width="0.9" height="15.0" fill="rgb(228,218,20)" rx="2" ry="2" />
<text  x="1189.88" y="2063.5" ></text>
</g>
<g >
<title>__x64_sys_madvise (2 samples, 0.01%)</title><rect x="80.0" y="1397" width="0.1" height="15.0" fill="rgb(253,21,0)" rx="2" ry="2" />
<text  x="82.96" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="155.9" y="1397" width="0.2" height="15.0" fill="rgb(245,182,27)" rx="2" ry="2" />
<text  x="158.86" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.04%)</title><rect x="1185.9" y="133" width="0.5" height="15.0" fill="rgb(211,174,16)" rx="2" ry="2" />
<text  x="1188.87" y="143.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (9 samples, 0.04%)</title><rect x="523.5" y="1893" width="0.5" height="15.0" fill="rgb(231,113,32)" rx="2" ry="2" />
<text  x="526.50" y="1903.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (2 samples, 0.01%)</title><rect x="871.9" y="2005" width="0.1" height="15.0" fill="rgb(209,152,18)" rx="2" ry="2" />
<text  x="874.87" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.02%)</title><rect x="183.3" y="1669" width="0.3" height="15.0" fill="rgb(247,66,31)" rx="2" ry="2" />
<text  x="186.33" y="1679.5" ></text>
</g>
<g >
<title>__asan_memcpy (3 samples, 0.01%)</title><rect x="179.1" y="1653" width="0.2" height="15.0" fill="rgb(214,74,54)" rx="2" ry="2" />
<text  x="182.09" y="1663.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (2 samples, 0.01%)</title><rect x="765.8" y="1861" width="0.1" height="15.0" fill="rgb(229,113,16)" rx="2" ry="2" />
<text  x="768.78" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="155.7" y="1701" width="0.2" height="15.0" fill="rgb(233,143,12)" rx="2" ry="2" />
<text  x="158.75" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (319 samples, 1.59%)</title><rect x="55.4" y="357" width="18.8" height="15.0" fill="rgb(233,122,5)" rx="2" ry="2" />
<text  x="58.38" y="367.5" ></text>
</g>
<g >
<title>std::operator&gt;&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (4 samples, 0.02%)</title><rect x="336.0" y="1989" width="0.2" height="15.0" fill="rgb(214,224,35)" rx="2" ry="2" />
<text  x="338.97" y="1999.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (136 samples, 0.68%)</title><rect x="1129.5" y="2037" width="8.0" height="15.0" fill="rgb(206,4,39)" rx="2" ry="2" />
<text  x="1132.53" y="2047.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (2 samples, 0.01%)</title><rect x="810.8" y="2005" width="0.1" height="15.0" fill="rgb(235,52,21)" rx="2" ry="2" />
<text  x="813.75" y="2015.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (3 samples, 0.01%)</title><rect x="188.9" y="1557" width="0.2" height="15.0" fill="rgb(251,210,17)" rx="2" ry="2" />
<text  x="191.93" y="1567.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (2 samples, 0.01%)</title><rect x="1102.2" y="1829" width="0.1" height="15.0" fill="rgb(214,46,34)" rx="2" ry="2" />
<text  x="1105.19" y="1839.5" ></text>
</g>
<g >
<title>__lsan::MarkInvalidPCCb (5 samples, 0.02%)</title><rect x="522.4" y="2037" width="0.3" height="15.0" fill="rgb(226,23,39)" rx="2" ry="2" />
<text  x="525.44" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="216.0" y="1189" width="0.1" height="15.0" fill="rgb(250,120,14)" rx="2" ry="2" />
<text  x="218.98" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.02%)</title><rect x="183.3" y="1285" width="0.3" height="15.0" fill="rgb(234,140,45)" rx="2" ry="2" />
<text  x="186.33" y="1295.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.01%)</title><rect x="315.1" y="1925" width="0.1" height="15.0" fill="rgb(211,177,20)" rx="2" ry="2" />
<text  x="318.11" y="1935.5" ></text>
</g>
<g >
<title>smp_call_function_single (2 samples, 0.01%)</title><rect x="80.0" y="1237" width="0.1" height="15.0" fill="rgb(244,226,20)" rx="2" ry="2" />
<text  x="82.96" y="1247.5" ></text>
</g>
<g >
<title>__interceptor_memcpy (35 samples, 0.17%)</title><rect x="1117.6" y="2037" width="2.0" height="15.0" fill="rgb(213,71,14)" rx="2" ry="2" />
<text  x="1120.57" y="2047.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.02%)</title><rect x="194.8" y="1589" width="0.3" height="15.0" fill="rgb(235,164,19)" rx="2" ry="2" />
<text  x="197.82" y="1599.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="89.4" y="2005" width="0.1" height="15.0" fill="rgb(222,115,2)" rx="2" ry="2" />
<text  x="92.39" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13 samples, 0.06%)</title><rect x="1187.0" y="453" width="0.8" height="15.0" fill="rgb(217,164,47)" rx="2" ry="2" />
<text  x="1189.99" y="463.5" ></text>
</g>
<g >
<title>__asan::Allocator::GetAsanChunkByAddrFastLocked (8 samples, 0.04%)</title><rect x="90.6" y="2021" width="0.4" height="15.0" fill="rgb(235,221,47)" rx="2" ry="2" />
<text  x="93.56" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1186.5" y="965" width="0.4" height="15.0" fill="rgb(226,122,13)" rx="2" ry="2" />
<text  x="1189.52" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (74 samples, 0.37%)</title><rect x="191.8" y="1653" width="4.4" height="15.0" fill="rgb(236,127,49)" rx="2" ry="2" />
<text  x="194.82" y="1663.5" ></text>
</g>
<g >
<title>__asan_memcpy (2 samples, 0.01%)</title><rect x="136.7" y="1589" width="0.1" height="15.0" fill="rgb(239,132,50)" rx="2" ry="2" />
<text  x="139.65" y="1599.5" ></text>
</g>
<g >
<title>__dynamic_cast (8 samples, 0.04%)</title><rect x="198.0" y="1621" width="0.5" height="15.0" fill="rgb(226,137,53)" rx="2" ry="2" />
<text  x="201.00" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1186.5" y="709" width="0.4" height="15.0" fill="rgb(223,143,43)" rx="2" ry="2" />
<text  x="1189.52" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (12 samples, 0.06%)</title><rect x="1187.1" y="37" width="0.7" height="15.0" fill="rgb(216,54,3)" rx="2" ry="2" />
<text  x="1190.05" y="47.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (453 samples, 2.26%)</title><rect x="128.8" y="1909" width="26.7" height="15.0" fill="rgb(239,112,37)" rx="2" ry="2" />
<text  x="131.75" y="1919.5" >s..</text>
</g>
<g >
<title>__pthread_getspecific (119 samples, 0.59%)</title><rect x="1007.8" y="2053" width="7.0" height="15.0" fill="rgb(210,124,38)" rx="2" ry="2" />
<text  x="1010.77" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="156.0" y="789" width="0.1" height="15.0" fill="rgb(240,182,26)" rx="2" ry="2" />
<text  x="158.98" y="799.5" ></text>
</g>
<g >
<title>operator delete (6 samples, 0.03%)</title><rect x="165.2" y="1573" width="0.3" height="15.0" fill="rgb(248,226,4)" rx="2" ry="2" />
<text  x="168.18" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (103 samples, 0.51%)</title><rect x="208.1" y="1797" width="6.1" height="15.0" fill="rgb(220,207,42)" rx="2" ry="2" />
<text  x="211.08" y="1807.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (5 samples, 0.02%)</title><rect x="156.5" y="1653" width="0.3" height="15.0" fill="rgb(243,211,10)" rx="2" ry="2" />
<text  x="159.51" y="1663.5" ></text>
</g>
<g >
<title>sqrtf32 (2 samples, 0.01%)</title><rect x="516.5" y="1973" width="0.2" height="15.0" fill="rgb(206,78,38)" rx="2" ry="2" />
<text  x="519.55" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="155.9" y="485" width="0.1" height="15.0" fill="rgb(218,147,51)" rx="2" ry="2" />
<text  x="158.86" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.04%)</title><rect x="1186.4" y="1733" width="0.5" height="15.0" fill="rgb(243,162,20)" rx="2" ry="2" />
<text  x="1189.40" y="1743.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;TThreadPool::TThreadPool (25 samples, 0.12%)</title><rect x="29.7" y="2037" width="1.5" height="15.0" fill="rgb(216,27,8)" rx="2" ry="2" />
<text  x="32.74" y="2047.5" ></text>
</g>
<g >
<title>unmap_single_vma (5 samples, 0.02%)</title><rect x="767.1" y="1909" width="0.3" height="15.0" fill="rgb(206,120,43)" rx="2" ry="2" />
<text  x="770.08" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1185.6" y="1365" width="0.1" height="15.0" fill="rgb(207,86,35)" rx="2" ry="2" />
<text  x="1188.58" y="1375.5" ></text>
</g>
<g >
<title>unmap_page_range (7 samples, 0.03%)</title><rect x="524.0" y="1941" width="0.4" height="15.0" fill="rgb(254,91,14)" rx="2" ry="2" />
<text  x="527.03" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (2 samples, 0.01%)</title><rect x="214.4" y="1781" width="0.1" height="15.0" fill="rgb(229,110,27)" rx="2" ry="2" />
<text  x="217.39" y="1791.5" ></text>
</g>
<g >
<title>unmap_single_vma (2 samples, 0.01%)</title><rect x="1102.3" y="1877" width="0.1" height="15.0" fill="rgb(228,145,22)" rx="2" ry="2" />
<text  x="1105.30" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (88 samples, 0.44%)</title><rect x="144.3" y="1701" width="5.1" height="15.0" fill="rgb(253,184,18)" rx="2" ry="2" />
<text  x="147.25" y="1711.5" ></text>
</g>
<g >
<title>onmt::unicode::is_number (17 samples, 0.08%)</title><rect x="723.0" y="1877" width="1.0" height="15.0" fill="rgb(245,198,27)" rx="2" ry="2" />
<text  x="726.00" y="1887.5" ></text>
</g>
<g >
<title>std::vector&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::allocator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;::_M_realloc_insert&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; const&amp;&gt; (2 samples, 0.01%)</title><rect x="519.9" y="1989" width="0.1" height="15.0" fill="rgb(212,26,30)" rx="2" ry="2" />
<text  x="522.91" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (331 samples, 1.65%)</title><rect x="55.4" y="917" width="19.5" height="15.0" fill="rgb(223,113,19)" rx="2" ry="2" />
<text  x="58.38" y="927.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::readWord (6 samples, 0.03%)</title><rect x="539.6" y="1925" width="0.3" height="15.0" fill="rgb(231,123,25)" rx="2" ry="2" />
<text  x="542.59" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14 samples, 0.07%)</title><rect x="1186.9" y="1733" width="0.9" height="15.0" fill="rgb(216,177,39)" rx="2" ry="2" />
<text  x="1189.94" y="1743.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::computeSubwords (441 samples, 2.20%)</title><rect x="544.0" y="1893" width="26.0" height="15.0" fill="rgb(250,129,12)" rx="2" ry="2" />
<text  x="547.01" y="1903.5" >f..</text>
</g>
<g >
<title>tlb_finish_mmu (2 samples, 0.01%)</title><rect x="80.0" y="1365" width="0.1" height="15.0" fill="rgb(222,40,31)" rx="2" ry="2" />
<text  x="82.96" y="1375.5" ></text>
</g>
<g >
<title>fasttext::QuantMatrix::addRowToVector (2 samples, 0.01%)</title><rect x="801.4" y="2037" width="0.1" height="15.0" fill="rgb(205,56,36)" rx="2" ry="2" />
<text  x="804.38" y="2047.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::basic_json (2 samples, 0.01%)</title><rect x="519.9" y="1893" width="0.1" height="15.0" fill="rgb(235,20,17)" rx="2" ry="2" />
<text  x="522.91" y="1903.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (3 samples, 0.01%)</title><rect x="141.8" y="1605" width="0.2" height="15.0" fill="rgb(233,218,38)" rx="2" ry="2" />
<text  x="144.84" y="1615.5" ></text>
</g>
<g >
<title>__do_munmap (7 samples, 0.03%)</title><rect x="1102.0" y="1925" width="0.4" height="15.0" fill="rgb(208,203,53)" rx="2" ry="2" />
<text  x="1105.01" y="1935.5" ></text>
</g>
<g >
<title>TAgencyRating::ScoreUrl (530 samples, 2.65%)</title><rect x="185.3" y="1989" width="31.2" height="15.0" fill="rgb(221,76,22)" rx="2" ry="2" />
<text  x="188.27" y="1999.5" >TA..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.01%)</title><rect x="216.2" y="1557" width="0.1" height="15.0" fill="rgb(226,164,32)" rx="2" ry="2" />
<text  x="219.16" y="1567.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.02%)</title><rect x="1189.7" y="2037" width="0.2" height="15.0" fill="rgb(241,19,4)" rx="2" ry="2" />
<text  x="1192.71" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="155.7" y="1717" width="0.2" height="15.0" fill="rgb(235,63,31)" rx="2" ry="2" />
<text  x="158.75" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1186.5" y="1349" width="0.4" height="15.0" fill="rgb(238,74,2)" rx="2" ry="2" />
<text  x="1189.46" y="1359.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (267 samples, 1.33%)</title><rect x="737.7" y="1893" width="15.8" height="15.0" fill="rgb(229,158,46)" rx="2" ry="2" />
<text  x="740.73" y="1903.5" ></text>
</g>
<g >
<title>__do_munmap (15 samples, 0.07%)</title><rect x="765.6" y="1909" width="0.9" height="15.0" fill="rgb(226,165,6)" rx="2" ry="2" />
<text  x="768.61" y="1919.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (19 samples, 0.09%)</title><rect x="30.1" y="1989" width="1.1" height="15.0" fill="rgb(251,107,23)" rx="2" ry="2" />
<text  x="33.10" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="155.9" y="917" width="0.1" height="15.0" fill="rgb(226,113,43)" rx="2" ry="2" />
<text  x="158.86" y="927.5" ></text>
</g>
<g >
<title>[unknown] (530 samples, 2.65%)</title><rect x="55.4" y="1861" width="31.2" height="15.0" fill="rgb(230,66,35)" rx="2" ry="2" />
<text  x="58.38" y="1871.5" >[u..</text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (3 samples, 0.01%)</title><rect x="86.3" y="1845" width="0.1" height="15.0" fill="rgb(244,126,34)" rx="2" ry="2" />
<text  x="89.26" y="1855.5" ></text>
</g>
<g >
<title>fasttext::Vector::Vector (4 samples, 0.02%)</title><rect x="801.5" y="2037" width="0.2" height="15.0" fill="rgb(237,204,9)" rx="2" ry="2" />
<text  x="804.50" y="2047.5" ></text>
</g>
<g >
<title>__asan::asan_memalign (32 samples, 0.16%)</title><rect x="996.3" y="2053" width="1.9" height="15.0" fill="rgb(251,125,49)" rx="2" ry="2" />
<text  x="999.28" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (103 samples, 0.51%)</title><rect x="208.1" y="1781" width="6.1" height="15.0" fill="rgb(222,97,15)" rx="2" ry="2" />
<text  x="211.08" y="1791.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.01%)</title><rect x="172.4" y="1653" width="0.1" height="15.0" fill="rgb(231,127,40)" rx="2" ry="2" />
<text  x="175.43" y="1663.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (2 samples, 0.01%)</title><rect x="88.1" y="1925" width="0.2" height="15.0" fill="rgb(206,155,44)" rx="2" ry="2" />
<text  x="91.15" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.04%)</title><rect x="1186.4" y="1765" width="0.5" height="15.0" fill="rgb(241,210,29)" rx="2" ry="2" />
<text  x="1189.40" y="1775.5" ></text>
</g>
<g >
<title>native_set_pte_at (2 samples, 0.01%)</title><rect x="943.4" y="1941" width="0.1" height="15.0" fill="rgb(211,9,5)" rx="2" ry="2" />
<text  x="946.42" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="183.2" y="1877" width="0.4" height="15.0" fill="rgb(213,157,18)" rx="2" ry="2" />
<text  x="186.21" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (320 samples, 1.60%)</title><rect x="55.4" y="421" width="18.8" height="15.0" fill="rgb(217,224,40)" rx="2" ry="2" />
<text  x="58.38" y="431.5" ></text>
</g>
<g >
<title>x2apic_send_IPI (18 samples, 0.09%)</title><rect x="947.2" y="1781" width="1.1" height="15.0" fill="rgb(252,35,39)" rx="2" ry="2" />
<text  x="950.25" y="1791.5" ></text>
</g>
<g >
<title>new_sync_read (3 samples, 0.01%)</title><rect x="1111.8" y="1925" width="0.2" height="15.0" fill="rgb(232,214,45)" rx="2" ry="2" />
<text  x="1114.79" y="1935.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;std::unique_ptr&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;  (3,910 samples, 19.53%)</title><rect x="526.6" y="2005" width="230.4" height="15.0" fill="rgb(250,85,2)" rx="2" ry="2" />
<text  x="529.57" y="2015.5" >std::_Function_handler&lt;std::un..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="155.9" y="1621" width="0.2" height="15.0" fill="rgb(241,3,13)" rx="2" ry="2" />
<text  x="158.86" y="1631.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (2 samples, 0.01%)</title><rect x="875.0" y="2021" width="0.1" height="15.0" fill="rgb(208,105,40)" rx="2" ry="2" />
<text  x="877.99" y="2031.5" ></text>
</g>
<g >
<title>arch_tlb_finish_mmu (2 samples, 0.01%)</title><rect x="90.0" y="1877" width="0.1" height="15.0" fill="rgb(213,145,28)" rx="2" ry="2" />
<text  x="92.98" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (12 samples, 0.06%)</title><rect x="810.9" y="2021" width="0.7" height="15.0" fill="rgb(236,43,0)" rx="2" ry="2" />
<text  x="813.87" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (86 samples, 0.43%)</title><rect x="176.6" y="1781" width="5.0" height="15.0" fill="rgb(218,193,31)" rx="2" ry="2" />
<text  x="179.55" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="155.7" y="1189" width="0.2" height="15.0" fill="rgb(224,15,29)" rx="2" ry="2" />
<text  x="158.75" y="1199.5" ></text>
</g>
<g >
<title>clear_page_erms (8 samples, 0.04%)</title><rect x="694.9" y="1733" width="0.5" height="15.0" fill="rgb(237,146,5)" rx="2" ry="2" />
<text  x="697.94" y="1743.5" ></text>
</g>
<g >
<title>wake_up_q (3 samples, 0.01%)</title><rect x="1102.8" y="1909" width="0.2" height="15.0" fill="rgb(217,8,31)" rx="2" ry="2" />
<text  x="1105.83" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (445 samples, 2.22%)</title><rect x="128.9" y="1861" width="26.2" height="15.0" fill="rgb(210,129,41)" rx="2" ry="2" />
<text  x="131.87" y="1871.5" >s..</text>
</g>
<g >
<title>__x64_sys_futex (6 samples, 0.03%)</title><rect x="128.0" y="1925" width="0.3" height="15.0" fill="rgb(206,82,3)" rx="2" ry="2" />
<text  x="130.99" y="1935.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;std::__detail::_StateSeq&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::allocator&lt;std::__detail::_StateSeq&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt; &gt;::_M_create_nodes (2 samples, 0.01%)</title><rect x="810.8" y="2037" width="0.1" height="15.0" fill="rgb(224,54,54)" rx="2" ry="2" />
<text  x="813.75" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="183.4" y="997" width="0.1" height="15.0" fill="rgb(223,155,7)" rx="2" ry="2" />
<text  x="186.39" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (80 samples, 0.40%)</title><rect x="129.1" y="1685" width="4.7" height="15.0" fill="rgb(210,124,53)" rx="2" ry="2" />
<text  x="132.11" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="155.7" y="1637" width="0.2" height="15.0" fill="rgb(231,172,29)" rx="2" ry="2" />
<text  x="158.75" y="1647.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (5 samples, 0.02%)</title><rect x="1103.3" y="2021" width="0.3" height="15.0" fill="rgb(228,146,1)" rx="2" ry="2" />
<text  x="1106.31" y="2031.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::_Bind&lt;Annotate (3,907 samples, 19.51%)</title><rect x="526.7" y="1989" width="230.3" height="15.0" fill="rgb(241,48,10)" rx="2" ry="2" />
<text  x="529.74" y="1999.5" >std::__invoke&lt;std::_Bind&lt;Annot..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="155.9" y="1045" width="0.2" height="15.0" fill="rgb(223,40,52)" rx="2" ry="2" />
<text  x="158.86" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13 samples, 0.06%)</title><rect x="215.6" y="1909" width="0.7" height="15.0" fill="rgb(253,132,50)" rx="2" ry="2" />
<text  x="218.57" y="1919.5" ></text>
</g>
<g >
<title>__handle_mm_fault (2 samples, 0.01%)</title><rect x="518.1" y="1877" width="0.1" height="15.0" fill="rgb(224,185,23)" rx="2" ry="2" />
<text  x="521.08" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.01%)</title><rect x="216.2" y="1461" width="0.1" height="15.0" fill="rgb(245,6,14)" rx="2" ry="2" />
<text  x="219.16" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="216.0" y="1269" width="0.1" height="15.0" fill="rgb(212,160,13)" rx="2" ry="2" />
<text  x="218.98" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="155.9" y="965" width="0.1" height="15.0" fill="rgb(225,222,21)" rx="2" ry="2" />
<text  x="158.86" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13 samples, 0.06%)</title><rect x="1187.0" y="1317" width="0.8" height="15.0" fill="rgb(240,6,37)" rx="2" ry="2" />
<text  x="1189.99" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_BracketMatcher (2 samples, 0.01%)</title><rect x="176.4" y="1669" width="0.2" height="15.0" fill="rgb(239,85,20)" rx="2" ry="2" />
<text  x="179.43" y="1679.5" ></text>
</g>
<g >
<title>fasttext::Vector::addRow (22 samples, 0.11%)</title><rect x="495.7" y="1957" width="1.3" height="15.0" fill="rgb(247,222,51)" rx="2" ry="2" />
<text  x="498.74" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14 samples, 0.07%)</title><rect x="1186.9" y="1845" width="0.9" height="15.0" fill="rgb(221,219,31)" rx="2" ry="2" />
<text  x="1189.94" y="1855.5" ></text>
</g>
<g >
<title>futex_wake (17 samples, 0.08%)</title><rect x="30.1" y="1925" width="1.0" height="15.0" fill="rgb(208,221,45)" rx="2" ry="2" />
<text  x="33.10" y="1935.5" ></text>
</g>
<g >
<title>__interceptor_malloc (3 samples, 0.01%)</title><rect x="381.1" y="1925" width="0.2" height="15.0" fill="rgb(231,196,6)" rx="2" ry="2" />
<text  x="384.11" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="216.2" y="1701" width="0.1" height="15.0" fill="rgb(230,44,51)" rx="2" ry="2" />
<text  x="219.16" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.02%)</title><rect x="183.3" y="1269" width="0.3" height="15.0" fill="rgb(224,58,31)" rx="2" ry="2" />
<text  x="186.33" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1185.6" y="1717" width="0.1" height="15.0" fill="rgb(222,118,33)" rx="2" ry="2" />
<text  x="1188.58" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.01%)</title><rect x="29.4" y="2037" width="0.1" height="15.0" fill="rgb(240,139,30)" rx="2" ry="2" />
<text  x="32.39" y="2047.5" ></text>
</g>
<g >
<title>fasttext::NegativeSamplingLoss::NegativeSamplingLoss (8 samples, 0.04%)</title><rect x="517.7" y="1957" width="0.5" height="15.0" fill="rgb(223,15,15)" rx="2" ry="2" />
<text  x="520.73" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="155.9" y="1157" width="0.2" height="15.0" fill="rgb(245,168,42)" rx="2" ry="2" />
<text  x="158.86" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (2 samples, 0.01%)</title><rect x="149.4" y="1781" width="0.2" height="15.0" fill="rgb(207,79,17)" rx="2" ry="2" />
<text  x="152.44" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (86 samples, 0.43%)</title><rect x="176.6" y="1765" width="5.0" height="15.0" fill="rgb(218,214,2)" rx="2" ry="2" />
<text  x="179.55" y="1775.5" ></text>
</g>
<g >
<title>arch_tlb_finish_mmu (2 samples, 0.01%)</title><rect x="76.8" y="1077" width="0.1" height="15.0" fill="rgb(233,21,12)" rx="2" ry="2" />
<text  x="79.77" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.04%)</title><rect x="1185.9" y="469" width="0.5" height="15.0" fill="rgb(205,151,2)" rx="2" ry="2" />
<text  x="1188.87" y="479.5" ></text>
</g>
<g >
<title>__schedule (2 samples, 0.01%)</title><rect x="31.1" y="1925" width="0.1" height="15.0" fill="rgb(210,82,22)" rx="2" ry="2" />
<text  x="34.10" y="1935.5" ></text>
</g>
<g >
<title>schedule (2 samples, 0.01%)</title><rect x="31.1" y="1941" width="0.1" height="15.0" fill="rgb(217,22,36)" rx="2" ry="2" />
<text  x="34.10" y="1951.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.03%)</title><rect x="1123.6" y="2037" width="0.3" height="15.0" fill="rgb(220,102,37)" rx="2" ry="2" />
<text  x="1126.58" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (13 samples, 0.06%)</title><rect x="1187.0" y="757" width="0.8" height="15.0" fill="rgb(206,207,1)" rx="2" ry="2" />
<text  x="1189.99" y="767.5" ></text>
</g>
<g >
<title>onmt::unicode::is_separator@plt (3 samples, 0.01%)</title><rect x="736.4" y="1893" width="0.2" height="15.0" fill="rgb(244,8,52)" rx="2" ry="2" />
<text  x="739.38" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.04%)</title><rect x="1186.4" y="1781" width="0.5" height="15.0" fill="rgb(236,207,16)" rx="2" ry="2" />
<text  x="1189.40" y="1791.5" ></text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::get (2 samples, 0.01%)</title><rect x="120.4" y="1925" width="0.1" height="15.0" fill="rgb(254,18,36)" rx="2" ry="2" />
<text  x="123.39" y="1935.5" ></text>
</g>
<g >
<title>__lsan::LsanMetadata::LsanMetadata (4 samples, 0.02%)</title><rect x="521.7" y="2037" width="0.2" height="15.0" fill="rgb(218,160,35)" rx="2" ry="2" />
<text  x="524.68" y="2047.5" ></text>
</g>
<g >
<title>std::vector&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::allocator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;::vector (2 samples, 0.01%)</title><rect x="519.9" y="1861" width="0.1" height="15.0" fill="rgb(210,42,36)" rx="2" ry="2" />
<text  x="522.91" y="1871.5" ></text>
</g>
<g >
<title>Eigen::internal::generic_product_impl&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt;, Eigen::DenseShape, Eigen::DenseShape, 8&gt;::scaleAndAddTo&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt; (135 samples, 0.67%)</title><rect x="502.2" y="1941" width="8.0" height="15.0" fill="rgb(205,30,48)" rx="2" ry="2" />
<text  x="505.23" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (81 samples, 0.40%)</title><rect x="139.4" y="1733" width="4.8" height="15.0" fill="rgb(206,145,20)" rx="2" ry="2" />
<text  x="142.42" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13 samples, 0.06%)</title><rect x="215.6" y="1941" width="0.7" height="15.0" fill="rgb(230,229,14)" rx="2" ry="2" />
<text  x="218.57" y="1951.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::basic_regex&lt;char const*&gt; (511 samples, 2.55%)</title><rect x="185.5" y="1957" width="30.1" height="15.0" fill="rgb(210,227,53)" rx="2" ry="2" />
<text  x="188.45" y="1967.5" >st..</text>
</g>
<g >
<title>[unknown] (3 samples, 0.01%)</title><rect x="767.6" y="2021" width="0.2" height="15.0" fill="rgb(254,124,18)" rx="2" ry="2" />
<text  x="770.61" y="2031.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::create&lt;std::vector&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::allocator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, nlohmann::detail::json_ref&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; const*, nlohmann::detail::json_ref&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; const*&gt; (3 samples, 0.01%)</title><rect x="518.2" y="1989" width="0.2" height="15.0" fill="rgb(220,38,14)" rx="2" ry="2" />
<text  x="521.20" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="156.0" y="773" width="0.1" height="15.0" fill="rgb(222,155,34)" rx="2" ry="2" />
<text  x="158.98" y="783.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::json_value::destroy (9 samples, 0.04%)</title><rect x="519.1" y="2005" width="0.5" height="15.0" fill="rgb(210,157,36)" rx="2" ry="2" />
<text  x="522.08" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (80 samples, 0.40%)</title><rect x="139.4" y="1669" width="4.7" height="15.0" fill="rgb(228,164,51)" rx="2" ry="2" />
<text  x="142.42" y="1679.5" ></text>
</g>
<g >
<title>__asan::Allocator::Deallocate (5 samples, 0.02%)</title><rect x="592.8" y="1877" width="0.2" height="15.0" fill="rgb(243,148,53)" rx="2" ry="2" />
<text  x="595.75" y="1887.5" ></text>
</g>
<g >
<title>unmap_single_vma (7 samples, 0.03%)</title><rect x="524.0" y="1957" width="0.4" height="15.0" fill="rgb(239,91,15)" rx="2" ry="2" />
<text  x="527.03" y="1967.5" ></text>
</g>
<g >
<title>mmap_region (14 samples, 0.07%)</title><rect x="1101.9" y="1941" width="0.8" height="15.0" fill="rgb(214,85,29)" rx="2" ry="2" />
<text  x="1104.89" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14 samples, 0.07%)</title><rect x="1186.9" y="1829" width="0.9" height="15.0" fill="rgb(206,76,5)" rx="2" ry="2" />
<text  x="1189.94" y="1839.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (91 samples, 0.45%)</title><rect x="729.0" y="1877" width="5.4" height="15.0" fill="rgb(208,18,51)" rx="2" ry="2" />
<text  x="732.01" y="1887.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::emplace_back&lt;char const*&amp;, unsigned int&amp;&gt; (7 samples, 0.03%)</title><rect x="734.4" y="1877" width="0.4" height="15.0" fill="rgb(229,59,28)" rx="2" ry="2" />
<text  x="737.37" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="156.0" y="853" width="0.1" height="15.0" fill="rgb(222,184,6)" rx="2" ry="2" />
<text  x="158.98" y="863.5" ></text>
</g>
<g >
<title>__do_munmap (2 samples, 0.01%)</title><rect x="80.1" y="1365" width="0.2" height="15.0" fill="rgb(253,207,17)" rx="2" ry="2" />
<text  x="83.13" y="1375.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (9 samples, 0.04%)</title><rect x="27.7" y="1925" width="0.6" height="15.0" fill="rgb(249,46,3)" rx="2" ry="2" />
<text  x="30.74" y="1935.5" ></text>
</g>
<g >
<title>__dynamic_cast (7 samples, 0.03%)</title><rect x="189.4" y="1557" width="0.4" height="15.0" fill="rgb(245,137,7)" rx="2" ry="2" />
<text  x="192.40" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (434 samples, 2.17%)</title><rect x="55.4" y="1525" width="25.6" height="15.0" fill="rgb(234,36,18)" rx="2" ry="2" />
<text  x="58.38" y="1535.5" >[..</text>
</g>
<g >
<title>__sanitizer_weak_hook_memcmp (9 samples, 0.04%)</title><rect x="1145.4" y="2037" width="0.5" height="15.0" fill="rgb(239,9,20)" rx="2" ry="2" />
<text  x="1148.39" y="2047.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (5 samples, 0.02%)</title><rect x="754.4" y="1893" width="0.2" height="15.0" fill="rgb(236,215,47)" rx="2" ry="2" />
<text  x="757.35" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="156.0" y="1013" width="0.1" height="15.0" fill="rgb(239,192,36)" rx="2" ry="2" />
<text  x="158.98" y="1023.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::basic_json (2 samples, 0.01%)</title><rect x="519.7" y="1989" width="0.1" height="15.0" fill="rgb(233,180,49)" rx="2" ry="2" />
<text  x="522.67" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (82 samples, 0.41%)</title><rect x="156.9" y="1605" width="4.8" height="15.0" fill="rgb(246,205,35)" rx="2" ry="2" />
<text  x="159.87" y="1615.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (2 samples, 0.01%)</title><rect x="90.0" y="1861" width="0.1" height="15.0" fill="rgb(218,92,2)" rx="2" ry="2" />
<text  x="92.98" y="1871.5" ></text>
</g>
<g >
<title>try_to_wake_up (2 samples, 0.01%)</title><rect x="948.7" y="1925" width="0.1" height="15.0" fill="rgb(252,211,48)" rx="2" ry="2" />
<text  x="951.66" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (99 samples, 0.49%)</title><rect x="185.9" y="1733" width="5.9" height="15.0" fill="rgb(233,127,6)" rx="2" ry="2" />
<text  x="188.92" y="1743.5" ></text>
</g>
<g >
<title>operator delete (6 samples, 0.03%)</title><rect x="160.5" y="1541" width="0.3" height="15.0" fill="rgb(226,72,29)" rx="2" ry="2" />
<text  x="163.46" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (555 samples, 2.77%)</title><rect x="55.4" y="1925" width="32.7" height="15.0" fill="rgb(253,13,49)" rx="2" ry="2" />
<text  x="58.38" y="1935.5" >[u..</text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (16 samples, 0.08%)</title><rect x="651.6" y="1877" width="0.9" height="15.0" fill="rgb(234,101,3)" rx="2" ry="2" />
<text  x="654.57" y="1887.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (5 samples, 0.02%)</title><rect x="183.7" y="1957" width="0.3" height="15.0" fill="rgb(219,26,53)" rx="2" ry="2" />
<text  x="186.68" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.04%)</title><rect x="1185.9" y="885" width="0.5" height="15.0" fill="rgb(254,12,38)" rx="2" ry="2" />
<text  x="1188.87" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.02%)</title><rect x="183.3" y="1317" width="0.3" height="15.0" fill="rgb(244,133,15)" rx="2" ry="2" />
<text  x="186.33" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="1185.5" y="1941" width="0.2" height="15.0" fill="rgb(221,5,16)" rx="2" ry="2" />
<text  x="1188.52" y="1951.5" ></text>
</g>
<g >
<title>alloc_pages_vma (2 samples, 0.01%)</title><rect x="580.0" y="1797" width="0.1" height="15.0" fill="rgb(231,94,47)" rx="2" ry="2" />
<text  x="583.02" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1186.5" y="517" width="0.4" height="15.0" fill="rgb(219,54,50)" rx="2" ry="2" />
<text  x="1189.52" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (84 samples, 0.42%)</title><rect x="156.8" y="1669" width="5.0" height="15.0" fill="rgb(216,182,47)" rx="2" ry="2" />
<text  x="159.81" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (81 samples, 0.40%)</title><rect x="139.4" y="1749" width="4.8" height="15.0" fill="rgb(242,24,27)" rx="2" ry="2" />
<text  x="142.42" y="1759.5" ></text>
</g>
<g >
<title>nlohmann::detail::parser&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::sax_parse_internal&lt;nlohmann::detail::json_sax_dom_parser&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; (133 samples, 0.66%)</title><rect x="119.7" y="1957" width="7.8" height="15.0" fill="rgb(238,96,1)" rx="2" ry="2" />
<text  x="122.68" y="1967.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::Recycle (3 samples, 0.01%)</title><rect x="757.4" y="2037" width="0.2" height="15.0" fill="rgb(245,221,50)" rx="2" ry="2" />
<text  x="760.42" y="2047.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="143.7" y="1621" width="0.1" height="15.0" fill="rgb(236,184,25)" rx="2" ry="2" />
<text  x="146.66" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (2 samples, 0.01%)</title><rect x="214.9" y="1781" width="0.1" height="15.0" fill="rgb(236,194,16)" rx="2" ry="2" />
<text  x="217.92" y="1791.5" ></text>
</g>
<g >
<title>__x64_sys_read (3 samples, 0.01%)</title><rect x="1111.8" y="1989" width="0.2" height="15.0" fill="rgb(243,50,48)" rx="2" ry="2" />
<text  x="1114.79" y="1999.5" ></text>
</g>
<g >
<title>rwsem_wake (3 samples, 0.01%)</title><rect x="1102.8" y="1925" width="0.2" height="15.0" fill="rgb(221,21,15)" rx="2" ry="2" />
<text  x="1105.83" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (311 samples, 1.55%)</title><rect x="55.4" y="133" width="18.3" height="15.0" fill="rgb(215,228,25)" rx="2" ry="2" />
<text  x="58.38" y="143.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (2 samples, 0.01%)</title><rect x="130.6" y="1557" width="0.1" height="15.0" fill="rgb(216,12,41)" rx="2" ry="2" />
<text  x="133.58" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (82 samples, 0.41%)</title><rect x="156.9" y="1621" width="4.8" height="15.0" fill="rgb(237,59,47)" rx="2" ry="2" />
<text  x="159.87" y="1631.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="76.8" y="1173" width="0.1" height="15.0" fill="rgb(223,92,38)" rx="2" ry="2" />
<text  x="79.77" y="1183.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (2 samples, 0.01%)</title><rect x="1102.2" y="1861" width="0.1" height="15.0" fill="rgb(231,145,32)" rx="2" ry="2" />
<text  x="1105.19" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.02%)</title><rect x="183.3" y="1733" width="0.3" height="15.0" fill="rgb(225,13,48)" rx="2" ry="2" />
<text  x="186.33" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="155.9" y="1301" width="0.2" height="15.0" fill="rgb(249,25,30)" rx="2" ry="2" />
<text  x="158.86" y="1311.5" ></text>
</g>
<g >
<title>__vfs_read (3 samples, 0.01%)</title><rect x="118.3" y="1941" width="0.1" height="15.0" fill="rgb(248,75,51)" rx="2" ry="2" />
<text  x="121.26" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.04%)</title><rect x="1186.4" y="1685" width="0.5" height="15.0" fill="rgb(214,148,29)" rx="2" ry="2" />
<text  x="1189.40" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (13 samples, 0.06%)</title><rect x="1187.0" y="1477" width="0.8" height="15.0" fill="rgb(213,185,11)" rx="2" ry="2" />
<text  x="1189.99" y="1487.5" ></text>
</g>
<g >
<title>__pthread_getspecific (4 samples, 0.02%)</title><rect x="152.7" y="1669" width="0.2" height="15.0" fill="rgb(236,191,21)" rx="2" ry="2" />
<text  x="155.68" y="1679.5" ></text>
</g>
<g >
<title>__asan::Allocator::Deallocate (2 samples, 0.01%)</title><rect x="168.6" y="1589" width="0.1" height="15.0" fill="rgb(233,74,35)" rx="2" ry="2" />
<text  x="171.59" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (319 samples, 1.59%)</title><rect x="55.4" y="405" width="18.8" height="15.0" fill="rgb(225,76,17)" rx="2" ry="2" />
<text  x="58.38" y="415.5" ></text>
</g>
<g >
<title>clear_page_erms (17 samples, 0.08%)</title><rect x="511.0" y="1845" width="1.0" height="15.0" fill="rgb(236,200,42)" rx="2" ry="2" />
<text  x="514.01" y="1855.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (4 samples, 0.02%)</title><rect x="696.2" y="1749" width="0.2" height="15.0" fill="rgb(213,167,52)" rx="2" ry="2" />
<text  x="699.18" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (389 samples, 1.94%)</title><rect x="55.4" y="1333" width="22.9" height="15.0" fill="rgb(253,6,9)" rx="2" ry="2" />
<text  x="58.38" y="1343.5" >[..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (22 samples, 0.11%)</title><rect x="765.6" y="2021" width="1.3" height="15.0" fill="rgb(231,123,23)" rx="2" ry="2" />
<text  x="768.61" y="2031.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (2 samples, 0.01%)</title><rect x="812.1" y="2005" width="0.1" height="15.0" fill="rgb(221,68,23)" rx="2" ry="2" />
<text  x="815.11" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.04%)</title><rect x="1185.9" y="1317" width="0.5" height="15.0" fill="rgb(218,200,53)" rx="2" ry="2" />
<text  x="1188.87" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.05%)</title><rect x="1185.8" y="1669" width="0.6" height="15.0" fill="rgb(252,119,46)" rx="2" ry="2" />
<text  x="1188.76" y="1679.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (2 samples, 0.01%)</title><rect x="54.8" y="1877" width="0.2" height="15.0" fill="rgb(205,117,51)" rx="2" ry="2" />
<text  x="57.85" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="183.4" y="869" width="0.1" height="15.0" fill="rgb(227,173,2)" rx="2" ry="2" />
<text  x="186.39" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.03%)</title><rect x="1186.5" y="1269" width="0.4" height="15.0" fill="rgb(214,15,29)" rx="2" ry="2" />
<text  x="1189.46" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (2 samples, 0.01%)</title><rect x="214.9" y="1813" width="0.1" height="15.0" fill="rgb(241,222,43)" rx="2" ry="2" />
<text  x="217.92" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="216.2" y="1301" width="0.1" height="15.0" fill="rgb(251,91,47)" rx="2" ry="2" />
<text  x="219.16" y="1311.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (7 samples, 0.03%)</title><rect x="148.4" y="1637" width="0.5" height="15.0" fill="rgb(205,220,25)" rx="2" ry="2" />
<text  x="151.44" y="1647.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (2 samples, 0.01%)</title><rect x="96.6" y="2021" width="0.2" height="15.0" fill="rgb(213,23,15)" rx="2" ry="2" />
<text  x="99.63" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13 samples, 0.06%)</title><rect x="1187.0" y="821" width="0.8" height="15.0" fill="rgb(220,140,33)" rx="2" ry="2" />
<text  x="1189.99" y="831.5" ></text>
</g>
<g >
<title>handle_mm_fault (3 samples, 0.01%)</title><rect x="1103.8" y="1973" width="0.2" height="15.0" fill="rgb(227,74,5)" rx="2" ry="2" />
<text  x="1106.84" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.05%)</title><rect x="1185.8" y="1653" width="0.6" height="15.0" fill="rgb(222,213,12)" rx="2" ry="2" />
<text  x="1188.76" y="1663.5" ></text>
</g>
<g >
<title>__dynamic_cast (8 samples, 0.04%)</title><rect x="158.0" y="1557" width="0.5" height="15.0" fill="rgb(245,209,14)" rx="2" ry="2" />
<text  x="161.05" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (326 samples, 1.63%)</title><rect x="55.4" y="629" width="19.2" height="15.0" fill="rgb(246,86,5)" rx="2" ry="2" />
<text  x="58.38" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.03%)</title><rect x="1186.5" y="1557" width="0.4" height="15.0" fill="rgb(206,225,17)" rx="2" ry="2" />
<text  x="1189.46" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (335 samples, 1.67%)</title><rect x="55.4" y="997" width="19.7" height="15.0" fill="rgb(221,108,21)" rx="2" ry="2" />
<text  x="58.38" y="1007.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="79.5" y="1413" width="0.2" height="15.0" fill="rgb(210,45,48)" rx="2" ry="2" />
<text  x="82.54" y="1423.5" ></text>
</g>
<g >
<title>Eigen::PlainObjectBase&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; &gt;::resize (4 samples, 0.02%)</title><rect x="43.7" y="2037" width="0.2" height="15.0" fill="rgb(221,193,5)" rx="2" ry="2" />
<text  x="46.65" y="2047.5" ></text>
</g>
<g >
<title>TDocument::TDocument (11 samples, 0.05%)</title><rect x="756.1" y="1973" width="0.6" height="15.0" fill="rgb(251,9,18)" rx="2" ry="2" />
<text  x="759.06" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (5 samples, 0.02%)</title><rect x="207.7" y="1781" width="0.3" height="15.0" fill="rgb(242,169,16)" rx="2" ry="2" />
<text  x="210.73" y="1791.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (13 samples, 0.06%)</title><rect x="536.3" y="1909" width="0.8" height="15.0" fill="rgb(237,196,44)" rx="2" ry="2" />
<text  x="539.29" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (330 samples, 1.65%)</title><rect x="55.4" y="853" width="19.4" height="15.0" fill="rgb(214,96,36)" rx="2" ry="2" />
<text  x="58.38" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1186.5" y="1093" width="0.4" height="15.0" fill="rgb(254,207,33)" rx="2" ry="2" />
<text  x="1189.52" y="1103.5" ></text>
</g>
<g >
<title>[unknown] (319 samples, 1.59%)</title><rect x="55.4" y="325" width="18.8" height="15.0" fill="rgb(230,229,5)" rx="2" ry="2" />
<text  x="58.38" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="156.0" y="869" width="0.1" height="15.0" fill="rgb(241,79,54)" rx="2" ry="2" />
<text  x="158.98" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="155.9" y="1653" width="0.2" height="15.0" fill="rgb(208,199,4)" rx="2" ry="2" />
<text  x="158.86" y="1663.5" ></text>
</g>
<g >
<title>__libc_start_main (6,825 samples, 34.09%)</title><rect x="118.4" y="2037" width="402.3" height="15.0" fill="rgb(232,98,44)" rx="2" ry="2" />
<text  x="121.44" y="2047.5" >__libc_start_main</text>
</g>
<g >
<title>mmap_region (20 samples, 0.10%)</title><rect x="765.6" y="1925" width="1.2" height="15.0" fill="rgb(243,112,12)" rx="2" ry="2" />
<text  x="768.61" y="1935.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="80.0" y="1429" width="0.1" height="15.0" fill="rgb(234,181,51)" rx="2" ry="2" />
<text  x="82.96" y="1439.5" ></text>
</g>
<g >
<title>__do_munmap (3 samples, 0.01%)</title><rect x="87.9" y="1829" width="0.2" height="15.0" fill="rgb(250,79,19)" rx="2" ry="2" />
<text  x="90.91" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.01%)</title><rect x="183.3" y="1141" width="0.2" height="15.0" fill="rgb(243,160,45)" rx="2" ry="2" />
<text  x="186.33" y="1151.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (2 samples, 0.01%)</title><rect x="90.0" y="1957" width="0.1" height="15.0" fill="rgb(215,226,3)" rx="2" ry="2" />
<text  x="92.98" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.04%)</title><rect x="1185.9" y="741" width="0.5" height="15.0" fill="rgb(237,90,51)" rx="2" ry="2" />
<text  x="1188.87" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (6 samples, 0.03%)</title><rect x="181.7" y="1797" width="0.4" height="15.0" fill="rgb(245,113,27)" rx="2" ry="2" />
<text  x="184.74" y="1807.5" ></text>
</g>
<g >
<title>Preprocess (3,136 samples, 15.66%)</title><rect x="571.2" y="1957" width="184.9" height="15.0" fill="rgb(221,210,47)" rx="2" ry="2" />
<text  x="574.24" y="1967.5" >Preprocess</text>
</g>
<g >
<title>__vm_munmap (2 samples, 0.01%)</title><rect x="84.8" y="1685" width="0.2" height="15.0" fill="rgb(241,75,9)" rx="2" ry="2" />
<text  x="87.85" y="1695.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.02%)</title><rect x="138.0" y="1589" width="0.3" height="15.0" fill="rgb(250,6,6)" rx="2" ry="2" />
<text  x="141.01" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.01%)</title><rect x="216.2" y="1365" width="0.1" height="15.0" fill="rgb(216,219,50)" rx="2" ry="2" />
<text  x="219.16" y="1375.5" ></text>
</g>
<g >
<title>onmt::CaseModifier::extract_case_type (3 samples, 0.01%)</title><rect x="574.8" y="1909" width="0.2" height="15.0" fill="rgb(235,122,29)" rx="2" ry="2" />
<text  x="577.83" y="1919.5" ></text>
</g>
<g >
<title>up_write (3 samples, 0.01%)</title><rect x="1102.8" y="1957" width="0.2" height="15.0" fill="rgb(235,27,22)" rx="2" ry="2" />
<text  x="1105.83" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.04%)</title><rect x="155.6" y="1925" width="0.5" height="15.0" fill="rgb(215,202,41)" rx="2" ry="2" />
<text  x="158.57" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (6 samples, 0.03%)</title><rect x="207.7" y="1797" width="0.3" height="15.0" fill="rgb(219,16,42)" rx="2" ry="2" />
<text  x="210.67" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.04%)</title><rect x="1186.4" y="1717" width="0.5" height="15.0" fill="rgb(232,178,10)" rx="2" ry="2" />
<text  x="1189.40" y="1727.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (2 samples, 0.01%)</title><rect x="207.8" y="1701" width="0.1" height="15.0" fill="rgb(216,102,43)" rx="2" ry="2" />
<text  x="210.79" y="1711.5" ></text>
</g>
<g >
<title>__do_page_fault (11 samples, 0.05%)</title><rect x="654.3" y="1829" width="0.6" height="15.0" fill="rgb(238,135,23)" rx="2" ry="2" />
<text  x="657.28" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1185.6" y="1669" width="0.1" height="15.0" fill="rgb(227,33,1)" rx="2" ry="2" />
<text  x="1188.58" y="1679.5" ></text>
</g>
<g >
<title>__libc_read (3 samples, 0.01%)</title><rect x="118.3" y="2037" width="0.1" height="15.0" fill="rgb(234,112,35)" rx="2" ry="2" />
<text  x="121.26" y="2047.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (3 samples, 0.01%)</title><rect x="1146.7" y="2037" width="0.2" height="15.0" fill="rgb(232,166,52)" rx="2" ry="2" />
<text  x="1149.74" y="2047.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::getLine (5 samples, 0.02%)</title><rect x="767.8" y="2037" width="0.3" height="15.0" fill="rgb(249,42,2)" rx="2" ry="2" />
<text  x="770.79" y="2047.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::do_tolower (2 samples, 0.01%)</title><rect x="175.7" y="1637" width="0.1" height="15.0" fill="rgb(224,205,53)" rx="2" ry="2" />
<text  x="178.67" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1186.5" y="85" width="0.4" height="15.0" fill="rgb(213,152,20)" rx="2" ry="2" />
<text  x="1189.52" y="95.5" ></text>
</g>
<g >
<title>__asan::Allocator::Deallocate (2 samples, 0.01%)</title><rect x="205.1" y="1637" width="0.1" height="15.0" fill="rgb(224,76,28)" rx="2" ry="2" />
<text  x="208.08" y="1647.5" ></text>
</g>
<g >
<title>__vm_munmap (2 samples, 0.01%)</title><rect x="90.0" y="1941" width="0.1" height="15.0" fill="rgb(234,116,16)" rx="2" ry="2" />
<text  x="92.98" y="1951.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::operator= (2 samples, 0.01%)</title><rect x="119.8" y="1925" width="0.1" height="15.0" fill="rgb(240,171,24)" rx="2" ry="2" />
<text  x="122.80" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="155.9" y="821" width="0.1" height="15.0" fill="rgb(236,209,27)" rx="2" ry="2" />
<text  x="158.86" y="831.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (5 samples, 0.02%)</title><rect x="756.2" y="1957" width="0.3" height="15.0" fill="rgb(249,216,5)" rx="2" ry="2" />
<text  x="759.24" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_quantifier (2 samples, 0.01%)</title><rect x="191.6" y="1717" width="0.2" height="15.0" fill="rgb(210,181,2)" rx="2" ry="2" />
<text  x="194.64" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13 samples, 0.06%)</title><rect x="1187.0" y="213" width="0.8" height="15.0" fill="rgb(231,145,26)" rx="2" ry="2" />
<text  x="1189.99" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (48 samples, 0.24%)</title><rect x="146.1" y="1653" width="2.9" height="15.0" fill="rgb(254,10,1)" rx="2" ry="2" />
<text  x="149.14" y="1663.5" ></text>
</g>
<g >
<title>onmt::Tokenizer::tokenize_text (1,710 samples, 8.54%)</title><rect x="634.1" y="1893" width="100.7" height="15.0" fill="rgb(244,19,15)" rx="2" ry="2" />
<text  x="637.06" y="1903.5" >onmt::Tokeni..</text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&gt;::ReturnToAllocator (14 samples, 0.07%)</title><rect x="1027.5" y="2053" width="0.8" height="15.0" fill="rgb(220,105,33)" rx="2" ry="2" />
<text  x="1030.46" y="2063.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (199 samples, 0.99%)</title><rect x="31.2" y="2037" width="11.7" height="15.0" fill="rgb(242,212,51)" rx="2" ry="2" />
<text  x="34.22" y="2047.5" ></text>
</g>
<g >
<title>page_fault (12 samples, 0.06%)</title><rect x="762.2" y="2021" width="0.7" height="15.0" fill="rgb(254,100,40)" rx="2" ry="2" />
<text  x="765.19" y="2031.5" ></text>
</g>
<g >
<title>unmap_region (5 samples, 0.02%)</title><rect x="1102.1" y="1909" width="0.3" height="15.0" fill="rgb(238,224,32)" rx="2" ry="2" />
<text  x="1105.13" y="1919.5" ></text>
</g>
<g >
<title>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::dump (3 samples, 0.01%)</title><rect x="518.8" y="1909" width="0.2" height="15.0" fill="rgb(243,112,19)" rx="2" ry="2" />
<text  x="521.85" y="1919.5" ></text>
</g>
<g >
<title>on_each_cpu_cond_mask (2 samples, 0.01%)</title><rect x="80.0" y="1285" width="0.1" height="15.0" fill="rgb(236,98,37)" rx="2" ry="2" />
<text  x="82.96" y="1295.5" ></text>
</g>
<g >
<title>__x64_sys_madvise (2 samples, 0.01%)</title><rect x="1007.7" y="2005" width="0.1" height="15.0" fill="rgb(208,136,25)" rx="2" ry="2" />
<text  x="1010.65" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (67 samples, 0.33%)</title><rect x="172.1" y="1717" width="4.0" height="15.0" fill="rgb(210,121,28)" rx="2" ry="2" />
<text  x="175.13" y="1727.5" ></text>
</g>
<g >
<title>onmt::unicode::explode_utf8_with_marks (634 samples, 3.17%)</title><rect x="659.2" y="1877" width="37.4" height="15.0" fill="rgb(231,188,27)" rx="2" ry="2" />
<text  x="662.23" y="1887.5" >onm..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="216.2" y="1285" width="0.1" height="15.0" fill="rgb(222,216,22)" rx="2" ry="2" />
<text  x="219.16" y="1295.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (2 samples, 0.01%)</title><rect x="76.2" y="1173" width="0.2" height="15.0" fill="rgb(230,148,34)" rx="2" ry="2" />
<text  x="79.24" y="1183.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="212.6" y="1669" width="0.1" height="15.0" fill="rgb(247,83,43)" rx="2" ry="2" />
<text  x="215.56" y="1679.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="569.8" y="1845" width="0.1" height="15.0" fill="rgb(217,128,12)" rx="2" ry="2" />
<text  x="572.83" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13 samples, 0.06%)</title><rect x="1187.0" y="581" width="0.8" height="15.0" fill="rgb(226,201,15)" rx="2" ry="2" />
<text  x="1189.99" y="591.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.02%)</title><rect x="153.6" y="1669" width="0.3" height="15.0" fill="rgb(247,153,0)" rx="2" ry="2" />
<text  x="156.63" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (14 samples, 0.07%)</title><rect x="1186.9" y="1573" width="0.9" height="15.0" fill="rgb(236,156,12)" rx="2" ry="2" />
<text  x="1189.94" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1186.5" y="1237" width="0.4" height="15.0" fill="rgb(228,143,19)" rx="2" ry="2" />
<text  x="1189.46" y="1247.5" ></text>
</g>
<g >
<title>__do_page_fault (39 samples, 0.19%)</title><rect x="694.2" y="1813" width="2.3" height="15.0" fill="rgb(222,208,9)" rx="2" ry="2" />
<text  x="697.24" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.02%)</title><rect x="215.9" y="1349" width="0.2" height="15.0" fill="rgb(209,42,51)" rx="2" ry="2" />
<text  x="218.86" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (10 samples, 0.05%)</title><rect x="182.3" y="1829" width="0.6" height="15.0" fill="rgb(252,108,29)" rx="2" ry="2" />
<text  x="185.33" y="1839.5" ></text>
</g>
<g >
<title>__do_page_fault (3 samples, 0.01%)</title><rect x="580.0" y="1845" width="0.1" height="15.0" fill="rgb(211,181,42)" rx="2" ry="2" />
<text  x="582.96" y="1855.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::reserve (61 samples, 0.30%)</title><rect x="616.4" y="1861" width="3.6" height="15.0" fill="rgb(247,166,1)" rx="2" ry="2" />
<text  x="619.38" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (2 samples, 0.01%)</title><rect x="215.0" y="1829" width="0.2" height="15.0" fill="rgb(211,37,8)" rx="2" ry="2" />
<text  x="218.04" y="1839.5" ></text>
</g>
<g >
<title>__sanitizer::mem_is_zero (3 samples, 0.01%)</title><rect x="1103.1" y="2053" width="0.2" height="15.0" fill="rgb(211,45,27)" rx="2" ry="2" />
<text  x="1106.13" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13 samples, 0.06%)</title><rect x="1187.0" y="1029" width="0.8" height="15.0" fill="rgb(252,222,1)" rx="2" ry="2" />
<text  x="1189.99" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.04%)</title><rect x="1185.9" y="901" width="0.5" height="15.0" fill="rgb(217,161,37)" rx="2" ry="2" />
<text  x="1188.87" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="155.9" y="1285" width="0.2" height="15.0" fill="rgb(211,217,42)" rx="2" ry="2" />
<text  x="158.86" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1186.5" y="213" width="0.4" height="15.0" fill="rgb(209,155,9)" rx="2" ry="2" />
<text  x="1189.52" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (7 samples, 0.03%)</title><rect x="176.1" y="1733" width="0.5" height="15.0" fill="rgb(220,156,22)" rx="2" ry="2" />
<text  x="179.14" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (79 samples, 0.39%)</title><rect x="129.1" y="1653" width="4.7" height="15.0" fill="rgb(220,124,20)" rx="2" ry="2" />
<text  x="132.11" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1185.6" y="1893" width="0.1" height="15.0" fill="rgb(222,176,38)" rx="2" ry="2" />
<text  x="1188.58" y="1903.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (2 samples, 0.01%)</title><rect x="88.0" y="1797" width="0.1" height="15.0" fill="rgb(234,187,14)" rx="2" ry="2" />
<text  x="90.97" y="1807.5" ></text>
</g>
<g >
<title>onmt::unicode::get_case (3 samples, 0.01%)</title><rect x="735.0" y="1893" width="0.2" height="15.0" fill="rgb(221,8,47)" rx="2" ry="2" />
<text  x="738.02" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_Compiler (457 samples, 2.28%)</title><rect x="128.6" y="1941" width="27.0" height="15.0" fill="rgb(240,20,16)" rx="2" ry="2" />
<text  x="131.64" y="1951.5" >s..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (85 samples, 0.42%)</title><rect x="166.8" y="1669" width="5.0" height="15.0" fill="rgb(212,177,27)" rx="2" ry="2" />
<text  x="169.83" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13 samples, 0.06%)</title><rect x="1187.0" y="933" width="0.8" height="15.0" fill="rgb(227,46,54)" rx="2" ry="2" />
<text  x="1189.99" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (96 samples, 0.48%)</title><rect x="185.9" y="1717" width="5.7" height="15.0" fill="rgb(211,62,23)" rx="2" ry="2" />
<text  x="188.92" y="1727.5" ></text>
</g>
<g >
<title>__interceptor_strlen (6 samples, 0.03%)</title><rect x="573.3" y="1925" width="0.4" height="15.0" fill="rgb(220,58,20)" rx="2" ry="2" />
<text  x="576.30" y="1935.5" ></text>
</g>
<g >
<title>__sanitizer::internal_munmap (2 samples, 0.01%)</title><rect x="84.8" y="1749" width="0.2" height="15.0" fill="rgb(247,107,45)" rx="2" ry="2" />
<text  x="87.85" y="1759.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::computeSubwords (29 samples, 0.14%)</title><rect x="491.7" y="1925" width="1.7" height="15.0" fill="rgb(235,47,48)" rx="2" ry="2" />
<text  x="494.74" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (597 samples, 2.98%)</title><rect x="55.4" y="2021" width="35.2" height="15.0" fill="rgb(226,21,54)" rx="2" ry="2" />
<text  x="58.38" y="2031.5" >[u..</text>
</g>
<g >
<title>[unknown] (313 samples, 1.56%)</title><rect x="55.4" y="229" width="18.4" height="15.0" fill="rgb(237,66,2)" rx="2" ry="2" />
<text  x="58.38" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.04%)</title><rect x="1186.4" y="1669" width="0.5" height="15.0" fill="rgb(222,107,33)" rx="2" ry="2" />
<text  x="1189.40" y="1679.5" ></text>
</g>
<g >
<title>__split_vma (5 samples, 0.02%)</title><rect x="765.7" y="1893" width="0.3" height="15.0" fill="rgb(210,87,27)" rx="2" ry="2" />
<text  x="768.67" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (486 samples, 2.43%)</title><rect x="185.9" y="1845" width="28.6" height="15.0" fill="rgb(206,99,48)" rx="2" ry="2" />
<text  x="188.86" y="1855.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.05%)</title><rect x="1185.8" y="1989" width="0.6" height="15.0" fill="rgb(222,175,14)" rx="2" ry="2" />
<text  x="1188.76" y="1999.5" ></text>
</g>
<g >
<title>__do_page_fault (4 samples, 0.02%)</title><rect x="1103.8" y="1989" width="0.2" height="15.0" fill="rgb(234,155,16)" rx="2" ry="2" />
<text  x="1106.78" y="1999.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (8 samples, 0.04%)</title><rect x="1124.6" y="2037" width="0.5" height="15.0" fill="rgb(222,110,50)" rx="2" ry="2" />
<text  x="1127.58" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (11 samples, 0.05%)</title><rect x="817.4" y="2005" width="0.7" height="15.0" fill="rgb(228,147,22)" rx="2" ry="2" />
<text  x="820.41" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14 samples, 0.07%)</title><rect x="1186.9" y="1541" width="0.9" height="15.0" fill="rgb(254,75,38)" rx="2" ry="2" />
<text  x="1189.94" y="1551.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (905 samples, 4.52%)</title><rect x="818.4" y="2037" width="53.4" height="15.0" fill="rgb(208,85,10)" rx="2" ry="2" />
<text  x="821.41" y="2047.5" >std::..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="155.7" y="1221" width="0.2" height="15.0" fill="rgb(239,21,7)" rx="2" ry="2" />
<text  x="158.75" y="1231.5" ></text>
</g>
<g >
<title>fasttext::FastText::createLoss (8 samples, 0.04%)</title><rect x="517.7" y="1973" width="0.5" height="15.0" fill="rgb(224,19,46)" rx="2" ry="2" />
<text  x="520.73" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14 samples, 0.07%)</title><rect x="1186.9" y="1605" width="0.9" height="15.0" fill="rgb(215,85,21)" rx="2" ry="2" />
<text  x="1189.94" y="1615.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (3 samples, 0.01%)</title><rect x="96.1" y="2021" width="0.2" height="15.0" fill="rgb(242,180,22)" rx="2" ry="2" />
<text  x="99.10" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (2 samples, 0.01%)</title><rect x="214.3" y="1781" width="0.1" height="15.0" fill="rgb(250,117,50)" rx="2" ry="2" />
<text  x="217.27" y="1791.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (7 samples, 0.03%)</title><rect x="680.2" y="1749" width="0.4" height="15.0" fill="rgb(216,62,34)" rx="2" ry="2" />
<text  x="683.15" y="1759.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (22 samples, 0.11%)</title><rect x="113.1" y="2037" width="1.3" height="15.0" fill="rgb(239,130,54)" rx="2" ry="2" />
<text  x="116.14" y="2047.5" ></text>
</g>
<g >
<title>__asan::RZSize2Log (91 samples, 0.45%)</title><rect x="990.9" y="2053" width="5.4" height="15.0" fill="rgb(230,209,25)" rx="2" ry="2" />
<text  x="993.92" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (400 samples, 2.00%)</title><rect x="55.4" y="1381" width="23.6" height="15.0" fill="rgb(227,58,43)" rx="2" ry="2" />
<text  x="58.38" y="1391.5" >[..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="215.7" y="1477" width="0.4" height="15.0" fill="rgb(242,43,40)" rx="2" ry="2" />
<text  x="218.74" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1185.6" y="1685" width="0.1" height="15.0" fill="rgb(218,44,8)" rx="2" ry="2" />
<text  x="1188.58" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (90 samples, 0.45%)</title><rect x="166.8" y="1749" width="5.3" height="15.0" fill="rgb(237,23,35)" rx="2" ry="2" />
<text  x="169.77" y="1759.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::create&lt;std::vector&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::allocator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::vector&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::allocator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; const&amp;&gt; (2 samples, 0.01%)</title><rect x="519.9" y="1877" width="0.1" height="15.0" fill="rgb(225,102,43)" rx="2" ry="2" />
<text  x="522.91" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="155.9" y="1205" width="0.2" height="15.0" fill="rgb(209,191,10)" rx="2" ry="2" />
<text  x="158.86" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="156.0" y="901" width="0.1" height="15.0" fill="rgb(247,154,36)" rx="2" ry="2" />
<text  x="158.98" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1186.5" y="1541" width="0.4" height="15.0" fill="rgb(252,146,35)" rx="2" ry="2" />
<text  x="1189.46" y="1551.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="91.7" y="2021" width="0.2" height="15.0" fill="rgb(222,166,33)" rx="2" ry="2" />
<text  x="94.74" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1186.5" y="901" width="0.4" height="15.0" fill="rgb(219,38,54)" rx="2" ry="2" />
<text  x="1189.52" y="911.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="75.5" y="1125" width="0.1" height="15.0" fill="rgb(237,222,4)" rx="2" ry="2" />
<text  x="78.48" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1185.6" y="1813" width="0.1" height="15.0" fill="rgb(205,99,22)" rx="2" ry="2" />
<text  x="1188.58" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.04%)</title><rect x="1185.9" y="1141" width="0.5" height="15.0" fill="rgb(222,19,15)" rx="2" ry="2" />
<text  x="1188.87" y="1151.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::Unwind (3 samples, 0.01%)</title><rect x="169.9" y="1589" width="0.2" height="15.0" fill="rgb(208,5,13)" rx="2" ry="2" />
<text  x="172.89" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_expression_term&lt;false, false&gt; (2 samples, 0.01%)</title><rect x="181.5" y="1701" width="0.1" height="15.0" fill="rgb(245,119,27)" rx="2" ry="2" />
<text  x="184.50" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (9 samples, 0.04%)</title><rect x="1185.9" y="1061" width="0.5" height="15.0" fill="rgb(231,15,36)" rx="2" ry="2" />
<text  x="1188.87" y="1071.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; const*, std::vector&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::allocator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;*&gt; (2 samples, 0.01%)</title><rect x="519.9" y="1845" width="0.1" height="15.0" fill="rgb(215,136,2)" rx="2" ry="2" />
<text  x="522.91" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.04%)</title><rect x="1185.9" y="1381" width="0.5" height="15.0" fill="rgb(239,7,29)" rx="2" ry="2" />
<text  x="1188.87" y="1391.5" ></text>
</g>
<g >
<title>[unknown] (310 samples, 1.55%)</title><rect x="55.4" y="101" width="18.2" height="15.0" fill="rgb(234,32,20)" rx="2" ry="2" />
<text  x="58.38" y="111.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (90 samples, 0.45%)</title><rect x="149.7" y="1797" width="5.3" height="15.0" fill="rgb(218,53,20)" rx="2" ry="2" />
<text  x="152.68" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.02%)</title><rect x="155.9" y="1269" width="0.2" height="15.0" fill="rgb(253,134,8)" rx="2" ry="2" />
<text  x="158.86" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13 samples, 0.06%)</title><rect x="1187.0" y="677" width="0.8" height="15.0" fill="rgb(243,174,42)" rx="2" ry="2" />
<text  x="1189.99" y="687.5" ></text>
</g>
<g >
<title>unmap_page_range (5 samples, 0.02%)</title><rect x="767.1" y="1893" width="0.3" height="15.0" fill="rgb(208,49,18)" rx="2" ry="2" />
<text  x="770.08" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1186.5" y="725" width="0.4" height="15.0" fill="rgb(236,113,33)" rx="2" ry="2" />
<text  x="1189.52" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (13 samples, 0.06%)</title><rect x="1187.0" y="613" width="0.8" height="15.0" fill="rgb(242,142,35)" rx="2" ry="2" />
<text  x="1189.99" y="623.5" ></text>
</g>
<g >
<title>__interceptor_strlen (24 samples, 0.12%)</title><rect x="1169.8" y="2037" width="1.4" height="15.0" fill="rgb(224,123,37)" rx="2" ry="2" />
<text  x="1172.79" y="2047.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (2 samples, 0.01%)</title><rect x="76.8" y="1061" width="0.1" height="15.0" fill="rgb(250,85,11)" rx="2" ry="2" />
<text  x="79.77" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="183.5" y="1253" width="0.1" height="15.0" fill="rgb(243,67,24)" rx="2" ry="2" />
<text  x="186.51" y="1263.5" ></text>
</g>
<g >
<title>irq_exit (3 samples, 0.01%)</title><rect x="479.8" y="1909" width="0.2" height="15.0" fill="rgb(248,137,13)" rx="2" ry="2" />
<text  x="482.83" y="1919.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (12 samples, 0.06%)</title><rect x="810.9" y="2005" width="0.7" height="15.0" fill="rgb(254,99,7)" rx="2" ry="2" />
<text  x="813.87" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="155.9" y="1493" width="0.2" height="15.0" fill="rgb(211,129,21)" rx="2" ry="2" />
<text  x="158.86" y="1503.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct (6 samples, 0.03%)</title><rect x="1120.3" y="2053" width="0.3" height="15.0" fill="rgb(205,86,40)" rx="2" ry="2" />
<text  x="1123.28" y="2063.5" ></text>
</g>
<g >
<title>__sanitizer::mem_is_zero (2 samples, 0.01%)</title><rect x="1189.6" y="2037" width="0.1" height="15.0" fill="rgb(238,170,19)" rx="2" ry="2" />
<text  x="1192.59" y="2047.5" ></text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (3 samples, 0.01%)</title><rect x="944.8" y="1925" width="0.1" height="15.0" fill="rgb(253,99,49)" rx="2" ry="2" />
<text  x="947.77" y="1935.5" ></text>
</g>
<g >
<title>native_write_msr (17 samples, 0.08%)</title><rect x="947.3" y="1765" width="1.0" height="15.0" fill="rgb(219,198,50)" rx="2" ry="2" />
<text  x="950.30" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (56 samples, 0.28%)</title><rect x="172.5" y="1653" width="3.3" height="15.0" fill="rgb(223,87,8)" rx="2" ry="2" />
<text  x="175.54" y="1663.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::emplace_back&lt;char const*&amp;, unsigned int&amp;&gt; (10 samples, 0.05%)</title><rect x="633.4" y="1877" width="0.6" height="15.0" fill="rgb(233,20,29)" rx="2" ry="2" />
<text  x="636.42" y="1887.5" ></text>
</g>
<g >
<title>operator delete (3 samples, 0.01%)</title><rect x="148.0" y="1637" width="0.1" height="15.0" fill="rgb(244,118,51)" rx="2" ry="2" />
<text  x="150.97" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.01%)</title><rect x="216.2" y="1413" width="0.1" height="15.0" fill="rgb(239,219,17)" rx="2" ry="2" />
<text  x="219.16" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="183.2" y="1909" width="0.4" height="15.0" fill="rgb(241,116,44)" rx="2" ry="2" />
<text  x="186.21" y="1919.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (2 samples, 0.01%)</title><rect x="193.8" y="1589" width="0.1" height="15.0" fill="rgb(246,190,29)" rx="2" ry="2" />
<text  x="196.76" y="1599.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::emplace_back&lt;char const*&amp;, unsigned int&amp;&gt; (103 samples, 0.51%)</title><rect x="610.3" y="1861" width="6.1" height="15.0" fill="rgb(238,2,52)" rx="2" ry="2" />
<text  x="613.31" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="183.3" y="1077" width="0.2" height="15.0" fill="rgb(237,42,37)" rx="2" ry="2" />
<text  x="186.33" y="1087.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::Unwind (2 samples, 0.01%)</title><rect x="131.9" y="1557" width="0.2" height="15.0" fill="rgb(208,181,4)" rx="2" ry="2" />
<text  x="134.94" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.02%)</title><rect x="183.3" y="1429" width="0.3" height="15.0" fill="rgb(216,99,21)" rx="2" ry="2" />
<text  x="186.33" y="1439.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (5 samples, 0.02%)</title><rect x="190.8" y="1557" width="0.2" height="15.0" fill="rgb(218,221,41)" rx="2" ry="2" />
<text  x="193.75" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.04%)</title><rect x="1185.9" y="1461" width="0.5" height="15.0" fill="rgb(227,190,48)" rx="2" ry="2" />
<text  x="1188.87" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (13 samples, 0.06%)</title><rect x="1187.0" y="661" width="0.8" height="15.0" fill="rgb(242,51,3)" rx="2" ry="2" />
<text  x="1189.99" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (71 samples, 0.35%)</title><rect x="191.9" y="1637" width="4.2" height="15.0" fill="rgb(228,57,29)" rx="2" ry="2" />
<text  x="194.93" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="183.3" y="1109" width="0.2" height="15.0" fill="rgb(228,77,22)" rx="2" ry="2" />
<text  x="186.33" y="1119.5" ></text>
</g>
<g >
<title>ksys_read (3 samples, 0.01%)</title><rect x="118.3" y="1973" width="0.1" height="15.0" fill="rgb(224,111,22)" rx="2" ry="2" />
<text  x="121.26" y="1983.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::_Identity&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_insert_&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::_Identity&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_Alloc_node&gt; (2 samples, 0.01%)</title><rect x="184.2" y="1973" width="0.1" height="15.0" fill="rgb(206,7,33)" rx="2" ry="2" />
<text  x="187.21" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="183.5" y="1205" width="0.1" height="15.0" fill="rgb(244,158,12)" rx="2" ry="2" />
<text  x="186.51" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="155.9" y="373" width="0.1" height="15.0" fill="rgb(225,94,16)" rx="2" ry="2" />
<text  x="158.86" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (13 samples, 0.06%)</title><rect x="182.3" y="1861" width="0.7" height="15.0" fill="rgb(243,66,40)" rx="2" ry="2" />
<text  x="185.27" y="1871.5" ></text>
</g>
<g >
<title>unmap_region (2 samples, 0.01%)</title><rect x="78.8" y="1253" width="0.2" height="15.0" fill="rgb(234,59,37)" rx="2" ry="2" />
<text  x="81.84" y="1263.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (16 samples, 0.08%)</title><rect x="488.7" y="1925" width="1.0" height="15.0" fill="rgb(254,192,52)" rx="2" ry="2" />
<text  x="491.73" y="1935.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_Alloc_node&gt; (2 samples, 0.01%)</title><rect x="519.9" y="1925" width="0.1" height="15.0" fill="rgb(219,154,28)" rx="2" ry="2" />
<text  x="522.91" y="1935.5" ></text>
</g>
<g >
<title>__sanitizer::internal_munmap (2 samples, 0.01%)</title><rect x="78.8" y="1349" width="0.2" height="15.0" fill="rgb(251,33,53)" rx="2" ry="2" />
<text  x="81.84" y="1359.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="80.1" y="1413" width="0.2" height="15.0" fill="rgb(228,47,39)" rx="2" ry="2" />
<text  x="83.13" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (2 samples, 0.01%)</title><rect x="214.9" y="1829" width="0.1" height="15.0" fill="rgb(236,187,46)" rx="2" ry="2" />
<text  x="217.92" y="1839.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::pushHash (341 samples, 1.70%)</title><rect x="549.8" y="1877" width="20.1" height="15.0" fill="rgb(206,67,11)" rx="2" ry="2" />
<text  x="552.85" y="1887.5" ></text>
</g>
<g >
<title>__handle_mm_fault (6 samples, 0.03%)</title><rect x="1027.9" y="1973" width="0.4" height="15.0" fill="rgb(209,154,33)" rx="2" ry="2" />
<text  x="1030.93" y="1983.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (2 samples, 0.01%)</title><rect x="141.5" y="1605" width="0.1" height="15.0" fill="rgb(229,125,37)" rx="2" ry="2" />
<text  x="144.48" y="1615.5" ></text>
</g>
<g >
<title>clear_page_erms (15 samples, 0.07%)</title><rect x="25.1" y="1925" width="0.9" height="15.0" fill="rgb(244,74,3)" rx="2" ry="2" />
<text  x="28.15" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (12 samples, 0.06%)</title><rect x="1187.1" y="133" width="0.7" height="15.0" fill="rgb(253,218,27)" rx="2" ry="2" />
<text  x="1190.05" y="143.5" ></text>
</g>
<g >
<title>zap_page_range (2 samples, 0.01%)</title><rect x="80.0" y="1381" width="0.1" height="15.0" fill="rgb(226,25,19)" rx="2" ry="2" />
<text  x="82.96" y="1391.5" ></text>
</g>
<g >
<title>onmt::is_alphabet (2 samples, 0.01%)</title><rect x="734.8" y="1893" width="0.2" height="15.0" fill="rgb(235,60,14)" rx="2" ry="2" />
<text  x="737.84" y="1903.5" ></text>
</g>
<g >
<title>lru_add_drain_cpu (3 samples, 0.01%)</title><rect x="766.2" y="1861" width="0.2" height="15.0" fill="rgb(231,104,9)" rx="2" ry="2" />
<text  x="769.20" y="1871.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (3 samples, 0.01%)</title><rect x="81.7" y="1589" width="0.2" height="15.0" fill="rgb(217,185,39)" rx="2" ry="2" />
<text  x="84.72" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13 samples, 0.06%)</title><rect x="1187.0" y="1077" width="0.8" height="15.0" fill="rgb(206,48,13)" rx="2" ry="2" />
<text  x="1189.99" y="1087.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="79.0" y="1381" width="0.1" height="15.0" fill="rgb(210,77,29)" rx="2" ry="2" />
<text  x="81.95" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (491 samples, 2.45%)</title><rect x="185.9" y="1893" width="28.9" height="15.0" fill="rgb(234,3,44)" rx="2" ry="2" />
<text  x="188.86" y="1903.5" >st..</text>
</g>
<g >
<title>zap_page_range (2 samples, 0.01%)</title><rect x="85.7" y="1749" width="0.1" height="15.0" fill="rgb(247,153,11)" rx="2" ry="2" />
<text  x="88.67" y="1759.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="191.0" y="1557" width="0.2" height="15.0" fill="rgb(214,55,44)" rx="2" ry="2" />
<text  x="194.05" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (330 samples, 1.65%)</title><rect x="55.4" y="869" width="19.4" height="15.0" fill="rgb(253,144,53)" rx="2" ry="2" />
<text  x="58.38" y="879.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (4 samples, 0.02%)</title><rect x="171.1" y="1589" width="0.3" height="15.0" fill="rgb(246,23,30)" rx="2" ry="2" />
<text  x="174.13" y="1599.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (2 samples, 0.01%)</title><rect x="766.8" y="1861" width="0.1" height="15.0" fill="rgb(237,198,36)" rx="2" ry="2" />
<text  x="769.79" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (87 samples, 0.43%)</title><rect x="186.4" y="1685" width="5.1" height="15.0" fill="rgb(251,14,9)" rx="2" ry="2" />
<text  x="189.39" y="1695.5" ></text>
</g>
<g >
<title>flush_tlb_mm_range (2 samples, 0.01%)</title><rect x="88.0" y="1749" width="0.1" height="15.0" fill="rgb(235,96,12)" rx="2" ry="2" />
<text  x="90.97" y="1759.5" ></text>
</g>
<g >
<title>do_mmap (20 samples, 0.10%)</title><rect x="765.6" y="1941" width="1.2" height="15.0" fill="rgb(241,86,50)" rx="2" ry="2" />
<text  x="768.61" y="1951.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.02%)</title><rect x="165.5" y="1573" width="0.3" height="15.0" fill="rgb(207,212,2)" rx="2" ry="2" />
<text  x="168.53" y="1583.5" ></text>
</g>
<g >
<title>__handle_mm_fault (5 samples, 0.02%)</title><rect x="651.1" y="1797" width="0.3" height="15.0" fill="rgb(214,22,54)" rx="2" ry="2" />
<text  x="654.10" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (9 samples, 0.04%)</title><rect x="1185.9" y="725" width="0.5" height="15.0" fill="rgb(212,225,27)" rx="2" ry="2" />
<text  x="1188.87" y="735.5" ></text>
</g>
<g >
<title>__madvise (2 samples, 0.01%)</title><rect x="80.0" y="1445" width="0.1" height="15.0" fill="rgb(242,163,33)" rx="2" ry="2" />
<text  x="82.96" y="1455.5" ></text>
</g>
<g >
<title>Eigen::internal::general_matrix_vector_product&lt;long, float, Eigen::internal::const_blas_data_mapper&lt;float, long, 0&gt;, 0, false, float, Eigen::internal::const_blas_data_mapper&lt;float, long, 1&gt;, false, 0&gt;::run (3 samples, 0.01%)</title><rect x="185.0" y="1973" width="0.2" height="15.0" fill="rgb(239,67,26)" rx="2" ry="2" />
<text  x="188.04" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (90 samples, 0.45%)</title><rect x="149.7" y="1813" width="5.3" height="15.0" fill="rgb(253,76,45)" rx="2" ry="2" />
<text  x="152.68" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.03%)</title><rect x="1186.5" y="1461" width="0.4" height="15.0" fill="rgb(241,189,29)" rx="2" ry="2" />
<text  x="1189.46" y="1471.5" ></text>
</g>
<g >
<title>mem_cgroup_commit_charge (4 samples, 0.02%)</title><rect x="944.9" y="1925" width="0.3" height="15.0" fill="rgb(223,23,46)" rx="2" ry="2" />
<text  x="947.95" y="1935.5" ></text>
</g>
<g >
<title>__asan_memset (2 samples, 0.01%)</title><rect x="330.9" y="1957" width="0.1" height="15.0" fill="rgb(226,10,9)" rx="2" ry="2" />
<text  x="333.90" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (326 samples, 1.63%)</title><rect x="55.4" y="613" width="19.2" height="15.0" fill="rgb(232,153,22)" rx="2" ry="2" />
<text  x="58.38" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="155.9" y="837" width="0.1" height="15.0" fill="rgb(240,185,48)" rx="2" ry="2" />
<text  x="158.86" y="847.5" ></text>
</g>
<g >
<title>onmt::CaseModifier::type_to_char (3 samples, 0.01%)</title><rect x="576.4" y="1893" width="0.2" height="15.0" fill="rgb(229,137,15)" rx="2" ry="2" />
<text  x="579.43" y="1903.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="85.7" y="1781" width="0.1" height="15.0" fill="rgb(223,201,17)" rx="2" ry="2" />
<text  x="88.67" y="1791.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (5 samples, 0.02%)</title><rect x="205.6" y="1637" width="0.3" height="15.0" fill="rgb(234,149,53)" rx="2" ry="2" />
<text  x="208.61" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (83 samples, 0.41%)</title><rect x="161.8" y="1621" width="4.9" height="15.0" fill="rgb(228,169,29)" rx="2" ry="2" />
<text  x="164.82" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.04%)</title><rect x="1185.9" y="789" width="0.5" height="15.0" fill="rgb(210,209,52)" rx="2" ry="2" />
<text  x="1188.87" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (75 samples, 0.37%)</title><rect x="191.8" y="1733" width="4.4" height="15.0" fill="rgb(205,207,32)" rx="2" ry="2" />
<text  x="194.76" y="1743.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (3 samples, 0.01%)</title><rect x="876.7" y="2037" width="0.2" height="15.0" fill="rgb(216,135,32)" rx="2" ry="2" />
<text  x="879.70" y="2047.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::_M_do_set (3,910 samples, 19.53%)</title><rect x="526.6" y="2021" width="230.4" height="15.0" fill="rgb(219,102,31)" rx="2" ry="2" />
<text  x="529.57" y="2031.5" >std::__future_base::_State_bas..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (84 samples, 0.42%)</title><rect x="156.8" y="1653" width="5.0" height="15.0" fill="rgb(231,18,7)" rx="2" ry="2" />
<text  x="159.81" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1186.5" y="1189" width="0.4" height="15.0" fill="rgb(215,18,42)" rx="2" ry="2" />
<text  x="1189.46" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (12 samples, 0.06%)</title><rect x="215.6" y="1893" width="0.7" height="15.0" fill="rgb(220,66,41)" rx="2" ry="2" />
<text  x="218.62" y="1903.5" ></text>
</g>
<g >
<title>onmt::unicode::explode_utf8 (32 samples, 0.16%)</title><rect x="808.9" y="2037" width="1.9" height="15.0" fill="rgb(226,97,28)" rx="2" ry="2" />
<text  x="811.87" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.03%)</title><rect x="1186.5" y="1173" width="0.4" height="15.0" fill="rgb(207,110,14)" rx="2" ry="2" />
<text  x="1189.46" y="1183.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.01%)</title><rect x="206.1" y="1637" width="0.1" height="15.0" fill="rgb(251,175,4)" rx="2" ry="2" />
<text  x="209.08" y="1647.5" ></text>
</g>
<g >
<title>tlb_flush_mmu_free (9 samples, 0.04%)</title><rect x="523.5" y="1909" width="0.5" height="15.0" fill="rgb(251,72,23)" rx="2" ry="2" />
<text  x="526.50" y="1919.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (3 samples, 0.01%)</title><rect x="169.0" y="1589" width="0.2" height="15.0" fill="rgb(227,192,34)" rx="2" ry="2" />
<text  x="172.01" y="1599.5" ></text>
</g>
<g >
<title>onmt::unicode::is_letter (220 samples, 1.10%)</title><rect x="710.0" y="1877" width="13.0" height="15.0" fill="rgb(247,92,49)" rx="2" ry="2" />
<text  x="713.03" y="1887.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.02%)</title><rect x="633.2" y="1877" width="0.2" height="15.0" fill="rgb(236,218,5)" rx="2" ry="2" />
<text  x="636.18" y="1887.5" ></text>
</g>
<g >
<title>__pthread_getspecific (4 samples, 0.02%)</title><rect x="189.8" y="1557" width="0.2" height="15.0" fill="rgb(225,145,50)" rx="2" ry="2" />
<text  x="192.81" y="1567.5" ></text>
</g>
<g >
<title>unmapped_area_topdown (4 samples, 0.02%)</title><rect x="1101.7" y="1909" width="0.2" height="15.0" fill="rgb(222,31,1)" rx="2" ry="2" />
<text  x="1104.66" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.04%)</title><rect x="1186.4" y="2005" width="0.5" height="15.0" fill="rgb(251,220,54)" rx="2" ry="2" />
<text  x="1189.40" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1186.5" y="245" width="0.4" height="15.0" fill="rgb(220,122,43)" rx="2" ry="2" />
<text  x="1189.52" y="255.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (3 samples, 0.01%)</title><rect x="81.9" y="1605" width="0.2" height="15.0" fill="rgb(240,177,43)" rx="2" ry="2" />
<text  x="84.90" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1185.6" y="1829" width="0.1" height="15.0" fill="rgb(214,0,54)" rx="2" ry="2" />
<text  x="1188.58" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14 samples, 0.07%)</title><rect x="1186.9" y="1941" width="0.9" height="15.0" fill="rgb(249,194,31)" rx="2" ry="2" />
<text  x="1189.94" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (322 samples, 1.61%)</title><rect x="55.4" y="501" width="19.0" height="15.0" fill="rgb(239,225,51)" rx="2" ry="2" />
<text  x="58.38" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.02%)</title><rect x="155.9" y="1077" width="0.2" height="15.0" fill="rgb(240,32,53)" rx="2" ry="2" />
<text  x="158.86" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (8 samples, 0.04%)</title><rect x="1186.4" y="1845" width="0.5" height="15.0" fill="rgb(254,144,46)" rx="2" ry="2" />
<text  x="1189.40" y="1855.5" ></text>
</g>
<g >
<title>clear_page_erms (2 samples, 0.01%)</title><rect x="580.0" y="1765" width="0.1" height="15.0" fill="rgb(231,62,49)" rx="2" ry="2" />
<text  x="583.02" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="155.9" y="1589" width="0.2" height="15.0" fill="rgb(233,17,42)" rx="2" ry="2" />
<text  x="158.86" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.04%)</title><rect x="1186.4" y="1589" width="0.5" height="15.0" fill="rgb(210,209,4)" rx="2" ry="2" />
<text  x="1189.40" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (307 samples, 1.53%)</title><rect x="55.4" y="53" width="18.1" height="15.0" fill="rgb(208,98,52)" rx="2" ry="2" />
<text  x="58.38" y="63.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (19 samples, 0.09%)</title><rect x="875.5" y="2005" width="1.1" height="15.0" fill="rgb(214,23,32)" rx="2" ry="2" />
<text  x="878.52" y="2015.5" ></text>
</g>
<g >
<title>TFastTextEmbedder::GetSentenceEmbedding (2,083 samples, 10.40%)</title><rect x="375.1" y="1973" width="122.8" height="15.0" fill="rgb(244,169,8)" rx="2" ry="2" />
<text  x="378.10" y="1983.5" >TFastTextEmbedd..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1186.5" y="373" width="0.4" height="15.0" fill="rgb(227,168,13)" rx="2" ry="2" />
<text  x="1189.52" y="383.5" ></text>
</g>
<g >
<title>[unknown] (327 samples, 1.63%)</title><rect x="55.4" y="709" width="19.3" height="15.0" fill="rgb(214,187,3)" rx="2" ry="2" />
<text  x="58.38" y="719.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (135 samples, 0.67%)</title><rect x="1112.0" y="2053" width="7.9" height="15.0" fill="rgb(229,192,17)" rx="2" ry="2" />
<text  x="1114.97" y="2063.5" ></text>
</g>
<g >
<title>handle_mm_fault (2 samples, 0.01%)</title><rect x="580.0" y="1829" width="0.1" height="15.0" fill="rgb(242,97,18)" rx="2" ry="2" />
<text  x="583.02" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.04%)</title><rect x="1185.9" y="309" width="0.5" height="15.0" fill="rgb(246,102,10)" rx="2" ry="2" />
<text  x="1188.87" y="319.5" ></text>
</g>
<g >
<title>main (6,824 samples, 34.08%)</title><rect x="118.4" y="2021" width="402.2" height="15.0" fill="rgb(230,1,51)" rx="2" ry="2" />
<text  x="121.44" y="2031.5" >main</text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (78 samples, 0.39%)</title><rect x="129.2" y="1605" width="4.6" height="15.0" fill="rgb(240,3,23)" rx="2" ry="2" />
<text  x="132.17" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (438 samples, 2.19%)</title><rect x="55.4" y="1541" width="25.8" height="15.0" fill="rgb(226,74,27)" rx="2" ry="2" />
<text  x="58.38" y="1551.5" >[..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (81 samples, 0.40%)</title><rect x="202.8" y="1765" width="4.8" height="15.0" fill="rgb(213,189,29)" rx="2" ry="2" />
<text  x="205.84" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_try_char (2 samples, 0.01%)</title><rect x="182.5" y="1765" width="0.1" height="15.0" fill="rgb(244,124,35)" rx="2" ry="2" />
<text  x="185.50" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="155.9" y="885" width="0.1" height="15.0" fill="rgb(253,99,52)" rx="2" ry="2" />
<text  x="158.86" y="895.5" ></text>
</g>
<g >
<title>syscall (19 samples, 0.09%)</title><rect x="30.1" y="2005" width="1.1" height="15.0" fill="rgb(217,216,9)" rx="2" ry="2" />
<text  x="33.10" y="2015.5" ></text>
</g>
<g >
<title>operator new (3 samples, 0.01%)</title><rect x="190.6" y="1557" width="0.2" height="15.0" fill="rgb(234,7,1)" rx="2" ry="2" />
<text  x="193.58" y="1567.5" ></text>
</g>
<g >
<title>unmap_vmas (5 samples, 0.02%)</title><rect x="767.1" y="1925" width="0.3" height="15.0" fill="rgb(216,19,4)" rx="2" ry="2" />
<text  x="770.08" y="1935.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (81 samples, 0.40%)</title><rect x="1156.8" y="2037" width="4.7" height="15.0" fill="rgb(246,89,52)" rx="2" ry="2" />
<text  x="1159.76" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="155.7" y="1877" width="0.4" height="15.0" fill="rgb(242,27,42)" rx="2" ry="2" />
<text  x="158.75" y="1887.5" ></text>
</g>
<g >
<title>do_syscall_64 (22 samples, 0.11%)</title><rect x="765.6" y="2005" width="1.3" height="15.0" fill="rgb(214,207,36)" rx="2" ry="2" />
<text  x="768.61" y="2015.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::readWord (59 samples, 0.29%)</title><rect x="92.6" y="2021" width="3.4" height="15.0" fill="rgb(239,192,53)" rx="2" ry="2" />
<text  x="95.57" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (11 samples, 0.05%)</title><rect x="1185.8" y="1685" width="0.6" height="15.0" fill="rgb(248,226,41)" rx="2" ry="2" />
<text  x="1188.76" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_expression_term&lt;false, false&gt; (2 samples, 0.01%)</title><rect x="202.4" y="1653" width="0.1" height="15.0" fill="rgb(206,143,28)" rx="2" ry="2" />
<text  x="205.42" y="1663.5" ></text>
</g>
<g >
<title>do_page_fault (18 samples, 0.09%)</title><rect x="679.7" y="1829" width="1.1" height="15.0" fill="rgb(243,197,37)" rx="2" ry="2" />
<text  x="682.74" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="216.2" y="1349" width="0.1" height="15.0" fill="rgb(206,72,26)" rx="2" ry="2" />
<text  x="219.16" y="1359.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::~Dictionary (3 samples, 0.01%)</title><rect x="520.0" y="1989" width="0.2" height="15.0" fill="rgb(245,190,44)" rx="2" ry="2" />
<text  x="523.02" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (11 samples, 0.05%)</title><rect x="182.3" y="1845" width="0.7" height="15.0" fill="rgb(220,145,53)" rx="2" ry="2" />
<text  x="185.33" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.02%)</title><rect x="183.3" y="1621" width="0.3" height="15.0" fill="rgb(235,188,17)" rx="2" ry="2" />
<text  x="186.33" y="1631.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.01%)</title><rect x="163.1" y="1589" width="0.1" height="15.0" fill="rgb(239,61,2)" rx="2" ry="2" />
<text  x="166.11" y="1599.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (2 samples, 0.01%)</title><rect x="76.5" y="1077" width="0.2" height="15.0" fill="rgb(217,88,3)" rx="2" ry="2" />
<text  x="79.54" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1186.5" y="981" width="0.4" height="15.0" fill="rgb(231,32,51)" rx="2" ry="2" />
<text  x="1189.52" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1185.6" y="1333" width="0.1" height="15.0" fill="rgb(248,122,24)" rx="2" ry="2" />
<text  x="1188.58" y="1343.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotPut (26 samples, 0.13%)</title><rect x="1099.9" y="2053" width="1.6" height="15.0" fill="rgb(222,128,5)" rx="2" ry="2" />
<text  x="1102.95" y="2063.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (107 samples, 0.53%)</title><rect x="984.6" y="2053" width="6.3" height="15.0" fill="rgb(219,212,44)" rx="2" ry="2" />
<text  x="987.61" y="2063.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (3 samples, 0.01%)</title><rect x="654.6" y="1765" width="0.2" height="15.0" fill="rgb(214,191,15)" rx="2" ry="2" />
<text  x="657.57" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.04%)</title><rect x="1186.4" y="2021" width="0.5" height="15.0" fill="rgb(218,130,10)" rx="2" ry="2" />
<text  x="1189.40" y="2031.5" ></text>
</g>
<g >
<title>try_to_wake_up (13 samples, 0.06%)</title><rect x="30.3" y="1893" width="0.8" height="15.0" fill="rgb(225,25,15)" rx="2" ry="2" />
<text  x="33.33" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (465 samples, 2.32%)</title><rect x="55.4" y="1653" width="27.4" height="15.0" fill="rgb(222,18,13)" rx="2" ry="2" />
<text  x="58.38" y="1663.5" >[..</text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (69 samples, 0.34%)</title><rect x="209.0" y="1701" width="4.1" height="15.0" fill="rgb(242,158,0)" rx="2" ry="2" />
<text  x="212.02" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="216.2" y="1397" width="0.1" height="15.0" fill="rgb(209,209,45)" rx="2" ry="2" />
<text  x="219.16" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="155.7" y="1509" width="0.2" height="15.0" fill="rgb(243,213,37)" rx="2" ry="2" />
<text  x="158.75" y="1519.5" ></text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.01%)</title><rect x="193.2" y="1605" width="0.2" height="15.0" fill="rgb(248,130,19)" rx="2" ry="2" />
<text  x="196.23" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (12 samples, 0.06%)</title><rect x="1187.1" y="101" width="0.7" height="15.0" fill="rgb(208,226,48)" rx="2" ry="2" />
<text  x="1190.05" y="111.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.04%)</title><rect x="1185.9" y="421" width="0.5" height="15.0" fill="rgb(231,114,34)" rx="2" ry="2" />
<text  x="1188.87" y="431.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (4 samples, 0.02%)</title><rect x="573.1" y="1925" width="0.2" height="15.0" fill="rgb(208,222,26)" rx="2" ry="2" />
<text  x="576.07" y="1935.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (7 samples, 0.03%)</title><rect x="811.7" y="2037" width="0.4" height="15.0" fill="rgb(241,212,18)" rx="2" ry="2" />
<text  x="814.70" y="2047.5" ></text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.01%)</title><rect x="173.3" y="1637" width="0.1" height="15.0" fill="rgb(211,51,42)" rx="2" ry="2" />
<text  x="176.25" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (345 samples, 1.72%)</title><rect x="55.4" y="1141" width="20.3" height="15.0" fill="rgb(226,36,47)" rx="2" ry="2" />
<text  x="58.38" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="155.7" y="1333" width="0.2" height="15.0" fill="rgb(214,82,6)" rx="2" ry="2" />
<text  x="158.75" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (4 samples, 0.02%)</title><rect x="155.2" y="1893" width="0.3" height="15.0" fill="rgb(220,218,32)" rx="2" ry="2" />
<text  x="158.22" y="1903.5" ></text>
</g>
<g >
<title>Eigen::internal::gemv_dense_selector&lt;2, 1, true&gt;::run&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; &gt; (327 samples, 1.63%)</title><rect x="381.3" y="1941" width="19.3" height="15.0" fill="rgb(233,146,14)" rx="2" ry="2" />
<text  x="384.29" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (85 samples, 0.42%)</title><rect x="166.8" y="1653" width="5.0" height="15.0" fill="rgb(225,119,49)" rx="2" ry="2" />
<text  x="169.83" y="1663.5" ></text>
</g>
<g >
<title>__handle_mm_fault (4 samples, 0.02%)</title><rect x="728.8" y="1813" width="0.2" height="15.0" fill="rgb(253,37,27)" rx="2" ry="2" />
<text  x="731.77" y="1823.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (2 samples, 0.01%)</title><rect x="119.0" y="1973" width="0.1" height="15.0" fill="rgb(233,172,29)" rx="2" ry="2" />
<text  x="121.97" y="1983.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (6 samples, 0.03%)</title><rect x="695.7" y="1733" width="0.4" height="15.0" fill="rgb(241,73,39)" rx="2" ry="2" />
<text  x="698.71" y="1743.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (3 samples, 0.01%)</title><rect x="195.9" y="1621" width="0.2" height="15.0" fill="rgb(244,48,26)" rx="2" ry="2" />
<text  x="198.94" y="1631.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (4 samples, 0.02%)</title><rect x="80.3" y="1461" width="0.2" height="15.0" fill="rgb(234,128,2)" rx="2" ry="2" />
<text  x="83.25" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_expression_term&lt;false, false&gt; (3 samples, 0.01%)</title><rect x="213.8" y="1717" width="0.2" height="15.0" fill="rgb(240,217,21)" rx="2" ry="2" />
<text  x="216.80" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (488 samples, 2.44%)</title><rect x="185.9" y="1861" width="28.7" height="15.0" fill="rgb(216,76,35)" rx="2" ry="2" />
<text  x="188.86" y="1871.5" >st..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (4 samples, 0.02%)</title><rect x="181.8" y="1765" width="0.2" height="15.0" fill="rgb(234,207,45)" rx="2" ry="2" />
<text  x="184.80" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="183.5" y="1173" width="0.1" height="15.0" fill="rgb(242,1,50)" rx="2" ry="2" />
<text  x="186.51" y="1183.5" ></text>
</g>
<g >
<title>fasttext::Vector::mul (2 samples, 0.01%)</title><rect x="514.8" y="1973" width="0.1" height="15.0" fill="rgb(228,99,33)" rx="2" ry="2" />
<text  x="517.78" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (85 samples, 0.42%)</title><rect x="161.8" y="1685" width="5.0" height="15.0" fill="rgb(225,124,54)" rx="2" ry="2" />
<text  x="164.76" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (506 samples, 2.53%)</title><rect x="55.4" y="1781" width="29.8" height="15.0" fill="rgb(244,87,47)" rx="2" ry="2" />
<text  x="58.38" y="1791.5" >[u..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="216.0" y="1237" width="0.1" height="15.0" fill="rgb(251,42,22)" rx="2" ry="2" />
<text  x="218.98" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (9 samples, 0.04%)</title><rect x="1185.9" y="581" width="0.5" height="15.0" fill="rgb(215,117,23)" rx="2" ry="2" />
<text  x="1188.87" y="591.5" ></text>
</g>
<g >
<title>do_page_fault (3 samples, 0.01%)</title><rect x="580.0" y="1861" width="0.1" height="15.0" fill="rgb(222,88,50)" rx="2" ry="2" />
<text  x="582.96" y="1871.5" ></text>
</g>
<g >
<title>__do_page_fault (18 samples, 0.09%)</title><rect x="679.7" y="1813" width="1.1" height="15.0" fill="rgb(240,188,5)" rx="2" ry="2" />
<text  x="682.74" y="1823.5" ></text>
</g>
<g >
<title>handle_mm_fault (16 samples, 0.08%)</title><rect x="54.3" y="1973" width="1.0" height="15.0" fill="rgb(222,67,17)" rx="2" ry="2" />
<text  x="57.32" y="1983.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (85 samples, 0.42%)</title><rect x="743.9" y="1877" width="5.0" height="15.0" fill="rgb(211,125,37)" rx="2" ry="2" />
<text  x="746.86" y="1887.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (2 samples, 0.01%)</title><rect x="948.7" y="1909" width="0.1" height="15.0" fill="rgb(215,38,44)" rx="2" ry="2" />
<text  x="951.66" y="1919.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;, std::tuple&lt;&gt; &gt; (3 samples, 0.01%)</title><rect x="127.3" y="1925" width="0.2" height="15.0" fill="rgb(230,116,21)" rx="2" ry="2" />
<text  x="130.28" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="183.4" y="965" width="0.1" height="15.0" fill="rgb(232,59,39)" rx="2" ry="2" />
<text  x="186.39" y="975.5" ></text>
</g>
<g >
<title>onmt::unicode::cp_to_utf8[abi:cxx11] (11 samples, 0.05%)</title><rect x="599.4" y="1877" width="0.7" height="15.0" fill="rgb(229,102,17)" rx="2" ry="2" />
<text  x="602.41" y="1887.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (3 samples, 0.01%)</title><rect x="479.8" y="1925" width="0.2" height="15.0" fill="rgb(238,46,6)" rx="2" ry="2" />
<text  x="482.83" y="1935.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.01%)</title><rect x="569.8" y="1829" width="0.1" height="15.0" fill="rgb(246,202,47)" rx="2" ry="2" />
<text  x="572.83" y="1839.5" ></text>
</g>
<g >
<title>unmap_region (2 samples, 0.01%)</title><rect x="76.8" y="1109" width="0.1" height="15.0" fill="rgb(232,190,39)" rx="2" ry="2" />
<text  x="79.77" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.05%)</title><rect x="1185.8" y="1573" width="0.6" height="15.0" fill="rgb(250,124,6)" rx="2" ry="2" />
<text  x="1188.82" y="1583.5" ></text>
</g>
<g >
<title>__x64_sys_madvise (2 samples, 0.01%)</title><rect x="80.5" y="1413" width="0.1" height="15.0" fill="rgb(208,209,45)" rx="2" ry="2" />
<text  x="83.49" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="183.4" y="933" width="0.1" height="15.0" fill="rgb(213,169,51)" rx="2" ry="2" />
<text  x="186.39" y="943.5" ></text>
</g>
<g >
<title>handle_mm_fault (78 samples, 0.39%)</title><rect x="24.2" y="1989" width="4.6" height="15.0" fill="rgb(225,124,29)" rx="2" ry="2" />
<text  x="27.20" y="1999.5" ></text>
</g>
<g >
<title>arch_tlb_finish_mmu (2 samples, 0.01%)</title><rect x="80.5" y="1365" width="0.1" height="15.0" fill="rgb(225,74,17)" rx="2" ry="2" />
<text  x="83.49" y="1375.5" ></text>
</g>
<g >
<title>alloc_pages_vma (2 samples, 0.01%)</title><rect x="54.4" y="1941" width="0.1" height="15.0" fill="rgb(239,129,24)" rx="2" ry="2" />
<text  x="57.38" y="1951.5" ></text>
</g>
<g >
<title>__do_page_fault (139 samples, 0.69%)</title><rect x="940.7" y="2005" width="8.2" height="15.0" fill="rgb(236,50,36)" rx="2" ry="2" />
<text  x="943.70" y="2015.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (13 samples, 0.06%)</title><rect x="694.9" y="1749" width="0.8" height="15.0" fill="rgb(212,200,12)" rx="2" ry="2" />
<text  x="697.94" y="1759.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (2 samples, 0.01%)</title><rect x="184.4" y="1989" width="0.2" height="15.0" fill="rgb(229,228,16)" rx="2" ry="2" />
<text  x="187.45" y="1999.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (2 samples, 0.01%)</title><rect x="78.8" y="1237" width="0.2" height="15.0" fill="rgb(233,75,2)" rx="2" ry="2" />
<text  x="81.84" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (82 samples, 0.41%)</title><rect x="166.9" y="1637" width="4.9" height="15.0" fill="rgb(244,124,31)" rx="2" ry="2" />
<text  x="169.94" y="1647.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (3 samples, 0.01%)</title><rect x="766.2" y="1845" width="0.2" height="15.0" fill="rgb(237,87,24)" rx="2" ry="2" />
<text  x="769.20" y="1855.5" ></text>
</g>
<g >
<title>__asan::AsanTSDGet (17 samples, 0.08%)</title><rect x="1153.2" y="2037" width="1.0" height="15.0" fill="rgb(220,65,50)" rx="2" ry="2" />
<text  x="1156.22" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="155.7" y="1493" width="0.2" height="15.0" fill="rgb(237,133,52)" rx="2" ry="2" />
<text  x="158.75" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (100 samples, 0.50%)</title><rect x="208.1" y="1749" width="5.9" height="15.0" fill="rgb(229,187,23)" rx="2" ry="2" />
<text  x="211.08" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="215.7" y="1461" width="0.4" height="15.0" fill="rgb(250,87,36)" rx="2" ry="2" />
<text  x="218.74" y="1471.5" ></text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (6 samples, 0.03%)</title><rect x="26.6" y="1957" width="0.3" height="15.0" fill="rgb(217,203,20)" rx="2" ry="2" />
<text  x="29.56" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.04%)</title><rect x="1185.9" y="1221" width="0.5" height="15.0" fill="rgb(210,168,35)" rx="2" ry="2" />
<text  x="1188.87" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (9 samples, 0.04%)</title><rect x="1185.9" y="293" width="0.5" height="15.0" fill="rgb(236,44,43)" rx="2" ry="2" />
<text  x="1188.87" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (13 samples, 0.06%)</title><rect x="1187.0" y="229" width="0.8" height="15.0" fill="rgb(245,221,16)" rx="2" ry="2" />
<text  x="1189.99" y="239.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2 samples, 0.01%)</title><rect x="510.7" y="1877" width="0.1" height="15.0" fill="rgb(250,138,3)" rx="2" ry="2" />
<text  x="513.71" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.04%)</title><rect x="1185.9" y="853" width="0.5" height="15.0" fill="rgb(240,55,46)" rx="2" ry="2" />
<text  x="1188.87" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1185.6" y="1589" width="0.1" height="15.0" fill="rgb(228,10,47)" rx="2" ry="2" />
<text  x="1188.58" y="1599.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (2 samples, 0.01%)</title><rect x="85.7" y="1733" width="0.1" height="15.0" fill="rgb(209,168,44)" rx="2" ry="2" />
<text  x="88.67" y="1743.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (4 samples, 0.02%)</title><rect x="523.6" y="1861" width="0.2" height="15.0" fill="rgb(228,208,32)" rx="2" ry="2" />
<text  x="526.56" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.04%)</title><rect x="1186.4" y="1573" width="0.5" height="15.0" fill="rgb(219,129,10)" rx="2" ry="2" />
<text  x="1189.40" y="1583.5" ></text>
</g>
<g >
<title>clear_page_erms (7 samples, 0.03%)</title><rect x="680.2" y="1733" width="0.4" height="15.0" fill="rgb(215,88,36)" rx="2" ry="2" />
<text  x="683.15" y="1743.5" ></text>
</g>
<g >
<title>operator new (9 samples, 0.04%)</title><rect x="180.3" y="1653" width="0.5" height="15.0" fill="rgb(236,106,10)" rx="2" ry="2" />
<text  x="183.26" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14 samples, 0.07%)</title><rect x="1186.9" y="1877" width="0.9" height="15.0" fill="rgb(236,227,21)" rx="2" ry="2" />
<text  x="1189.94" y="1887.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (2 samples, 0.01%)</title><rect x="1102.2" y="1893" width="0.1" height="15.0" fill="rgb(239,207,9)" rx="2" ry="2" />
<text  x="1105.19" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="155.9" y="1669" width="0.2" height="15.0" fill="rgb(249,89,10)" rx="2" ry="2" />
<text  x="158.86" y="1679.5" ></text>
</g>
<g >
<title>__pthread_once_slow (3,911 samples, 19.53%)</title><rect x="526.5" y="2037" width="230.5" height="15.0" fill="rgb(220,77,48)" rx="2" ry="2" />
<text  x="529.51" y="2047.5" >__pthread_once_slow</text>
</g>
<g >
<title>fasttext::FastText::predict (2 samples, 0.01%)</title><rect x="570.2" y="1925" width="0.2" height="15.0" fill="rgb(230,127,32)" rx="2" ry="2" />
<text  x="573.24" y="1935.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (2 samples, 0.01%)</title><rect x="211.6" y="1669" width="0.1" height="15.0" fill="rgb(251,126,3)" rx="2" ry="2" />
<text  x="214.62" y="1679.5" ></text>
</g>
<g >
<title>Eigen::DenseCoeffsBase&lt;Eigen::Transpose&lt;Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_sum_op&lt;float, float&gt;, Eigen::Product&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0&gt; const, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const&gt;, 0&gt;::coeff (333 samples, 1.66%)</title><rect x="221.9" y="1973" width="19.7" height="15.0" fill="rgb(205,67,3)" rx="2" ry="2" />
<text  x="224.93" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (456 samples, 2.28%)</title><rect x="55.4" y="1621" width="26.9" height="15.0" fill="rgb(222,120,33)" rx="2" ry="2" />
<text  x="58.38" y="1631.5" >[..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="216.2" y="1381" width="0.1" height="15.0" fill="rgb(243,95,43)" rx="2" ry="2" />
<text  x="219.16" y="1391.5" ></text>
</g>
<g >
<title>__handle_mm_fault (31 samples, 0.15%)</title><rect x="510.7" y="1893" width="1.8" height="15.0" fill="rgb(227,98,30)" rx="2" ry="2" />
<text  x="513.65" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13 samples, 0.06%)</title><rect x="1187.0" y="549" width="0.8" height="15.0" fill="rgb(210,129,26)" rx="2" ry="2" />
<text  x="1189.99" y="559.5" ></text>
</g>
<g >
<title>__sanitizer::internal_munmap (8 samples, 0.04%)</title><rect x="766.9" y="2037" width="0.5" height="15.0" fill="rgb(214,1,18)" rx="2" ry="2" />
<text  x="769.90" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="155.7" y="1301" width="0.2" height="15.0" fill="rgb(238,67,52)" rx="2" ry="2" />
<text  x="158.75" y="1311.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (66 samples, 0.33%)</title><rect x="813.5" y="2037" width="3.9" height="15.0" fill="rgb(230,68,4)" rx="2" ry="2" />
<text  x="816.52" y="2047.5" ></text>
</g>
<g >
<title>nlohmann::detail::json_sax_dom_parser&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::handle_value&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (3 samples, 0.01%)</title><rect x="119.7" y="1941" width="0.2" height="15.0" fill="rgb(230,152,13)" rx="2" ry="2" />
<text  x="122.74" y="1951.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (3 samples, 0.01%)</title><rect x="75.8" y="1157" width="0.2" height="15.0" fill="rgb(210,206,7)" rx="2" ry="2" />
<text  x="78.83" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (13 samples, 0.06%)</title><rect x="1187.0" y="373" width="0.8" height="15.0" fill="rgb(228,164,51)" rx="2" ry="2" />
<text  x="1189.99" y="383.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::Unwind (2 samples, 0.01%)</title><rect x="211.5" y="1669" width="0.1" height="15.0" fill="rgb(242,91,28)" rx="2" ry="2" />
<text  x="214.50" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.01%)</title><rect x="216.2" y="1317" width="0.1" height="15.0" fill="rgb(253,36,1)" rx="2" ry="2" />
<text  x="219.16" y="1327.5" ></text>
</g>
<g >
<title>[unknown] (329 samples, 1.64%)</title><rect x="55.4" y="789" width="19.4" height="15.0" fill="rgb(250,88,13)" rx="2" ry="2" />
<text  x="58.38" y="799.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::reserve (2 samples, 0.01%)</title><rect x="580.1" y="1893" width="0.2" height="15.0" fill="rgb(216,79,28)" rx="2" ry="2" />
<text  x="583.14" y="1903.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (3 samples, 0.01%)</title><rect x="190.3" y="1557" width="0.2" height="15.0" fill="rgb(236,94,33)" rx="2" ry="2" />
<text  x="193.28" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.04%)</title><rect x="1185.9" y="597" width="0.5" height="15.0" fill="rgb(241,35,5)" rx="2" ry="2" />
<text  x="1188.87" y="607.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (14 samples, 0.07%)</title><rect x="523.2" y="1925" width="0.8" height="15.0" fill="rgb(221,148,2)" rx="2" ry="2" />
<text  x="526.21" y="1935.5" ></text>
</g>
<g >
<title>fasttext::HierarchicalSoftmaxLoss::predict (11 samples, 0.05%)</title><rect x="570.4" y="1925" width="0.6" height="15.0" fill="rgb(216,78,9)" rx="2" ry="2" />
<text  x="573.36" y="1935.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::dump (6 samples, 0.03%)</title><rect x="518.7" y="2005" width="0.4" height="15.0" fill="rgb(225,61,33)" rx="2" ry="2" />
<text  x="521.73" y="2015.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (25 samples, 0.12%)</title><rect x="523.0" y="2021" width="1.4" height="15.0" fill="rgb(230,46,14)" rx="2" ry="2" />
<text  x="525.97" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.02%)</title><rect x="183.3" y="1461" width="0.3" height="15.0" fill="rgb(222,191,12)" rx="2" ry="2" />
<text  x="186.33" y="1471.5" ></text>
</g>
<g >
<title>[unknown] (311 samples, 1.55%)</title><rect x="55.4" y="149" width="18.3" height="15.0" fill="rgb(245,109,26)" rx="2" ry="2" />
<text  x="58.38" y="159.5" ></text>
</g>
<g >
<title>__interceptor_free (2 samples, 0.01%)</title><rect x="381.0" y="1925" width="0.1" height="15.0" fill="rgb(226,217,45)" rx="2" ry="2" />
<text  x="384.00" y="1935.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (7 samples, 0.03%)</title><rect x="153.9" y="1669" width="0.4" height="15.0" fill="rgb(242,85,24)" rx="2" ry="2" />
<text  x="156.92" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1186.5" y="1253" width="0.4" height="15.0" fill="rgb(246,89,53)" rx="2" ry="2" />
<text  x="1189.46" y="1263.5" ></text>
</g>
<g >
<title>[unknown] (450 samples, 2.25%)</title><rect x="55.4" y="1605" width="26.5" height="15.0" fill="rgb(207,181,11)" rx="2" ry="2" />
<text  x="58.38" y="1615.5" >[..</text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.01%)</title><rect x="569.8" y="1813" width="0.1" height="15.0" fill="rgb(241,66,28)" rx="2" ry="2" />
<text  x="572.83" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (89 samples, 0.44%)</title><rect x="166.8" y="1733" width="5.2" height="15.0" fill="rgb(250,182,32)" rx="2" ry="2" />
<text  x="169.77" y="1743.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (2 samples, 0.01%)</title><rect x="1124.5" y="2037" width="0.1" height="15.0" fill="rgb(223,74,3)" rx="2" ry="2" />
<text  x="1127.46" y="2047.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::getSubwords (180 samples, 0.90%)</title><rect x="483.0" y="1941" width="10.6" height="15.0" fill="rgb(224,227,52)" rx="2" ry="2" />
<text  x="485.95" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.02%)</title><rect x="183.3" y="1301" width="0.3" height="15.0" fill="rgb(234,114,9)" rx="2" ry="2" />
<text  x="186.33" y="1311.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (13 samples, 0.06%)</title><rect x="945.4" y="1909" width="0.8" height="15.0" fill="rgb(218,127,28)" rx="2" ry="2" />
<text  x="948.42" y="1919.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (13 samples, 0.06%)</title><rect x="30.3" y="1877" width="0.8" height="15.0" fill="rgb(241,76,24)" rx="2" ry="2" />
<text  x="33.33" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (4 samples, 0.02%)</title><rect x="214.3" y="1813" width="0.2" height="15.0" fill="rgb(248,123,51)" rx="2" ry="2" />
<text  x="217.27" y="1823.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (6 samples, 0.03%)</title><rect x="696.1" y="1765" width="0.3" height="15.0" fill="rgb(248,153,27)" rx="2" ry="2" />
<text  x="699.06" y="1775.5" ></text>
</g>
<g >
<title>Eigen::DenseBase&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt;::setConstant (36 samples, 0.18%)</title><rect x="500.1" y="1941" width="2.1" height="15.0" fill="rgb(251,40,8)" rx="2" ry="2" />
<text  x="503.10" y="1951.5" ></text>
</g>
<g >
<title>do_syscall_64 (6 samples, 0.03%)</title><rect x="128.0" y="1941" width="0.3" height="15.0" fill="rgb(223,173,39)" rx="2" ry="2" />
<text  x="130.99" y="1951.5" ></text>
</g>
<g >
<title>copy_page_to_iter (2 samples, 0.01%)</title><rect x="1111.9" y="1877" width="0.1" height="15.0" fill="rgb(237,73,36)" rx="2" ry="2" />
<text  x="1114.85" y="1887.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::Unwind (2 samples, 0.01%)</title><rect x="607.7" y="1861" width="0.1" height="15.0" fill="rgb(217,22,37)" rx="2" ry="2" />
<text  x="610.72" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1186.5" y="149" width="0.4" height="15.0" fill="rgb(232,28,41)" rx="2" ry="2" />
<text  x="1189.52" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="155.7" y="1349" width="0.2" height="15.0" fill="rgb(226,136,11)" rx="2" ry="2" />
<text  x="158.75" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="155.7" y="1813" width="0.4" height="15.0" fill="rgb(240,24,23)" rx="2" ry="2" />
<text  x="158.75" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (77 samples, 0.38%)</title><rect x="177.0" y="1701" width="4.5" height="15.0" fill="rgb(249,125,17)" rx="2" ry="2" />
<text  x="179.96" y="1711.5" ></text>
</g>
<g >
<title>syscall (7 samples, 0.03%)</title><rect x="127.9" y="1973" width="0.4" height="15.0" fill="rgb(230,76,27)" rx="2" ry="2" />
<text  x="130.93" y="1983.5" ></text>
</g>
<g >
<title>__handle_mm_fault (21 samples, 0.10%)</title><rect x="501.0" y="1861" width="1.2" height="15.0" fill="rgb(246,176,17)" rx="2" ry="2" />
<text  x="503.99" y="1871.5" ></text>
</g>
<g >
<title>__asan::asan_memalign (2 samples, 0.01%)</title><rect x="1122.3" y="2037" width="0.1" height="15.0" fill="rgb(246,205,40)" rx="2" ry="2" />
<text  x="1125.28" y="2047.5" ></text>
</g>
<g >
<title>__x64_sys_madvise (2 samples, 0.01%)</title><rect x="85.7" y="1765" width="0.1" height="15.0" fill="rgb(224,206,48)" rx="2" ry="2" />
<text  x="88.67" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.01%)</title><rect x="874.8" y="2021" width="0.1" height="15.0" fill="rgb(216,150,28)" rx="2" ry="2" />
<text  x="877.76" y="2031.5" ></text>
</g>
<g >
<title>do_page_fault (2 samples, 0.01%)</title><rect x="119.2" y="1957" width="0.1" height="15.0" fill="rgb(228,72,45)" rx="2" ry="2" />
<text  x="122.21" y="1967.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (2 samples, 0.01%)</title><rect x="651.3" y="1781" width="0.1" height="15.0" fill="rgb(251,110,52)" rx="2" ry="2" />
<text  x="654.27" y="1791.5" ></text>
</g>
<g >
<title>__pthread_getspecific (3 samples, 0.01%)</title><rect x="169.7" y="1589" width="0.1" height="15.0" fill="rgb(220,44,41)" rx="2" ry="2" />
<text  x="172.66" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13 samples, 0.06%)</title><rect x="1187.0" y="885" width="0.8" height="15.0" fill="rgb(208,96,34)" rx="2" ry="2" />
<text  x="1189.99" y="895.5" ></text>
</g>
<g >
<title>page_fault (11 samples, 0.05%)</title><rect x="654.3" y="1861" width="0.6" height="15.0" fill="rgb(238,187,39)" rx="2" ry="2" />
<text  x="657.28" y="1871.5" ></text>
</g>
<g >
<title>handle_mm_fault (6 samples, 0.03%)</title><rect x="1027.9" y="1989" width="0.4" height="15.0" fill="rgb(245,150,6)" rx="2" ry="2" />
<text  x="1030.93" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="183.5" y="1237" width="0.1" height="15.0" fill="rgb(225,135,9)" rx="2" ry="2" />
<text  x="186.51" y="1247.5" ></text>
</g>
<g >
<title>arch_tlb_finish_mmu (2 samples, 0.01%)</title><rect x="76.5" y="1093" width="0.2" height="15.0" fill="rgb(253,15,11)" rx="2" ry="2" />
<text  x="79.54" y="1103.5" ></text>
</g>
<g >
<title>__asan_memcpy (22 samples, 0.11%)</title><rect x="692.9" y="1845" width="1.3" height="15.0" fill="rgb(225,103,39)" rx="2" ry="2" />
<text  x="695.88" y="1855.5" ></text>
</g>
<g >
<title>clear_page_erms (2 samples, 0.01%)</title><rect x="54.4" y="1909" width="0.1" height="15.0" fill="rgb(253,85,21)" rx="2" ry="2" />
<text  x="57.38" y="1919.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="80.1" y="1429" width="0.2" height="15.0" fill="rgb(249,45,40)" rx="2" ry="2" />
<text  x="83.13" y="1439.5" ></text>
</g>
<g >
<title>__sanitizer::BlockingMutex::Lock (2 samples, 0.01%)</title><rect x="1014.8" y="2053" width="0.1" height="15.0" fill="rgb(254,185,41)" rx="2" ry="2" />
<text  x="1017.79" y="2063.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="78.8" y="1317" width="0.2" height="15.0" fill="rgb(238,149,49)" rx="2" ry="2" />
<text  x="81.84" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1185.6" y="1381" width="0.1" height="15.0" fill="rgb(224,27,46)" rx="2" ry="2" />
<text  x="1188.58" y="1391.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (3 samples, 0.01%)</title><rect x="138.5" y="1605" width="0.2" height="15.0" fill="rgb(235,115,45)" rx="2" ry="2" />
<text  x="141.54" y="1615.5" ></text>
</g>
<g >
<title>fasttext::QuantMatrix::addRowToVector (45 samples, 0.22%)</title><rect x="1104.6" y="2053" width="2.7" height="15.0" fill="rgb(250,36,51)" rx="2" ry="2" />
<text  x="1107.60" y="2063.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (5 samples, 0.02%)</title><rect x="128.0" y="1877" width="0.3" height="15.0" fill="rgb(231,187,35)" rx="2" ry="2" />
<text  x="130.99" y="1887.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="76.5" y="1173" width="0.2" height="15.0" fill="rgb(245,221,8)" rx="2" ry="2" />
<text  x="79.54" y="1183.5" ></text>
</g>
<g >
<title>__interceptor_memchr (7 samples, 0.03%)</title><rect x="1146.9" y="2037" width="0.4" height="15.0" fill="rgb(214,76,48)" rx="2" ry="2" />
<text  x="1149.92" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.05%)</title><rect x="1185.8" y="2005" width="0.6" height="15.0" fill="rgb(236,200,52)" rx="2" ry="2" />
<text  x="1188.76" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1186.5" y="1477" width="0.4" height="15.0" fill="rgb(252,128,29)" rx="2" ry="2" />
<text  x="1189.46" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (13 samples, 0.06%)</title><rect x="1187.0" y="1285" width="0.8" height="15.0" fill="rgb(211,73,10)" rx="2" ry="2" />
<text  x="1189.99" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.04%)</title><rect x="1185.9" y="453" width="0.5" height="15.0" fill="rgb(235,129,17)" rx="2" ry="2" />
<text  x="1188.87" y="463.5" ></text>
</g>
<g >
<title>[unknown] (335 samples, 1.67%)</title><rect x="55.4" y="1013" width="19.7" height="15.0" fill="rgb(249,170,7)" rx="2" ry="2" />
<text  x="58.38" y="1023.5" ></text>
</g>
<g >
<title>ptep_clear_flush (32 samples, 0.16%)</title><rect x="946.6" y="1925" width="1.9" height="15.0" fill="rgb(233,23,25)" rx="2" ry="2" />
<text  x="949.60" y="1935.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::load (28 samples, 0.14%)</title><rect x="872.1" y="1989" width="1.7" height="15.0" fill="rgb(216,70,45)" rx="2" ry="2" />
<text  x="875.10" y="1999.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="570.1" y="1893" width="0.1" height="15.0" fill="rgb(249,94,1)" rx="2" ry="2" />
<text  x="573.06" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="183.2" y="1893" width="0.4" height="15.0" fill="rgb(224,228,28)" rx="2" ry="2" />
<text  x="186.21" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="215.7" y="1621" width="0.4" height="15.0" fill="rgb(214,210,14)" rx="2" ry="2" />
<text  x="218.68" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13 samples, 0.06%)</title><rect x="1187.0" y="1061" width="0.8" height="15.0" fill="rgb(218,140,38)" rx="2" ry="2" />
<text  x="1189.99" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1185.6" y="1285" width="0.1" height="15.0" fill="rgb(231,79,41)" rx="2" ry="2" />
<text  x="1188.58" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (2 samples, 0.01%)</title><rect x="182.7" y="1781" width="0.2" height="15.0" fill="rgb(253,196,8)" rx="2" ry="2" />
<text  x="185.74" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="155.7" y="1093" width="0.2" height="15.0" fill="rgb(207,200,49)" rx="2" ry="2" />
<text  x="158.75" y="1103.5" ></text>
</g>
<g >
<title>__interceptor_strcmp (9 samples, 0.04%)</title><rect x="42.9" y="2037" width="0.6" height="15.0" fill="rgb(213,41,6)" rx="2" ry="2" />
<text  x="45.94" y="2047.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (2 samples, 0.01%)</title><rect x="205.5" y="1637" width="0.1" height="15.0" fill="rgb(229,120,23)" rx="2" ry="2" />
<text  x="208.49" y="1647.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (26 samples, 0.13%)</title><rect x="1176.7" y="2037" width="1.5" height="15.0" fill="rgb(245,102,38)" rx="2" ry="2" />
<text  x="1179.68" y="2047.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (19 samples, 0.09%)</title><rect x="691.8" y="1845" width="1.1" height="15.0" fill="rgb(249,120,9)" rx="2" ry="2" />
<text  x="694.76" y="1855.5" ></text>
</g>
<g >
<title>__lsan::CollectIgnoredCb (2 samples, 0.01%)</title><rect x="520.7" y="2037" width="0.1" height="15.0" fill="rgb(254,89,41)" rx="2" ry="2" />
<text  x="523.67" y="2047.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="85.7" y="1797" width="0.1" height="15.0" fill="rgb(226,224,39)" rx="2" ry="2" />
<text  x="88.67" y="1807.5" ></text>
</g>
<g >
<title>unmap_region (5 samples, 0.02%)</title><rect x="766.1" y="1893" width="0.3" height="15.0" fill="rgb(235,155,13)" rx="2" ry="2" />
<text  x="769.14" y="1903.5" ></text>
</g>
<g >
<title>do_exit (5 samples, 0.02%)</title><rect x="1103.3" y="1989" width="0.3" height="15.0" fill="rgb(252,95,43)" rx="2" ry="2" />
<text  x="1106.31" y="1999.5" ></text>
</g>
<g >
<title>nlohmann::detail::input_stream_adapter::get_character (2 samples, 0.01%)</title><rect x="121.8" y="1925" width="0.1" height="15.0" fill="rgb(222,76,17)" rx="2" ry="2" />
<text  x="124.80" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.02%)</title><rect x="155.9" y="1365" width="0.2" height="15.0" fill="rgb(212,194,23)" rx="2" ry="2" />
<text  x="158.86" y="1375.5" ></text>
</g>
<g >
<title>operator delete[] (2 samples, 0.01%)</title><rect x="1111.2" y="2053" width="0.1" height="15.0" fill="rgb(244,64,13)" rx="2" ry="2" />
<text  x="1114.20" y="2063.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.01%)</title><rect x="140.8" y="1621" width="0.2" height="15.0" fill="rgb(239,222,36)" rx="2" ry="2" />
<text  x="143.84" y="1631.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (2 samples, 0.01%)</title><rect x="212.7" y="1685" width="0.1" height="15.0" fill="rgb(244,204,3)" rx="2" ry="2" />
<text  x="215.68" y="1695.5" ></text>
</g>
<g >
<title>__lru_cache_add (2 samples, 0.01%)</title><rect x="680.6" y="1749" width="0.1" height="15.0" fill="rgb(218,208,41)" rx="2" ry="2" />
<text  x="683.56" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.04%)</title><rect x="1185.9" y="117" width="0.5" height="15.0" fill="rgb(240,212,37)" rx="2" ry="2" />
<text  x="1188.87" y="127.5" ></text>
</g>
<g >
<title>__asan_memcpy (13 samples, 0.06%)</title><rect x="615.4" y="1845" width="0.8" height="15.0" fill="rgb(244,85,46)" rx="2" ry="2" />
<text  x="618.44" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="155.9" y="1381" width="0.2" height="15.0" fill="rgb(222,201,1)" rx="2" ry="2" />
<text  x="158.86" y="1391.5" ></text>
</g>
<g >
<title>do_page_fault (40 samples, 0.20%)</title><rect x="510.2" y="1941" width="2.3" height="15.0" fill="rgb(230,117,1)" rx="2" ry="2" />
<text  x="513.18" y="1951.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (3 samples, 0.01%)</title><rect x="1024.2" y="1941" width="0.1" height="15.0" fill="rgb(249,72,20)" rx="2" ry="2" />
<text  x="1027.16" y="1951.5" ></text>
</g>
<g >
<title>__dynamic_cast (5 samples, 0.02%)</title><rect x="159.8" y="1541" width="0.2" height="15.0" fill="rgb(234,214,19)" rx="2" ry="2" />
<text  x="162.75" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1186.5" y="1045" width="0.4" height="15.0" fill="rgb(241,110,23)" rx="2" ry="2" />
<text  x="1189.52" y="1055.5" ></text>
</g>
<g >
<title>[unknown] (496 samples, 2.48%)</title><rect x="55.4" y="1749" width="29.2" height="15.0" fill="rgb(244,39,16)" rx="2" ry="2" />
<text  x="58.38" y="1759.5" >[u..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (453 samples, 2.26%)</title><rect x="156.4" y="1893" width="26.7" height="15.0" fill="rgb(227,120,48)" rx="2" ry="2" />
<text  x="159.39" y="1903.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.07%)</title><rect x="1186.9" y="1973" width="0.9" height="15.0" fill="rgb(207,100,4)" rx="2" ry="2" />
<text  x="1189.88" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (85 samples, 0.42%)</title><rect x="176.6" y="1749" width="5.0" height="15.0" fill="rgb(211,75,48)" rx="2" ry="2" />
<text  x="179.61" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.04%)</title><rect x="1185.9" y="261" width="0.5" height="15.0" fill="rgb(237,226,18)" rx="2" ry="2" />
<text  x="1188.87" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_quantifier (2 samples, 0.01%)</title><rect x="139.2" y="1685" width="0.1" height="15.0" fill="rgb(251,188,30)" rx="2" ry="2" />
<text  x="142.19" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1186.5" y="197" width="0.4" height="15.0" fill="rgb(221,197,52)" rx="2" ry="2" />
<text  x="1189.52" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (68 samples, 0.34%)</title><rect x="172.1" y="1749" width="4.0" height="15.0" fill="rgb(214,176,4)" rx="2" ry="2" />
<text  x="175.13" y="1759.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (6 samples, 0.03%)</title><rect x="146.3" y="1637" width="0.4" height="15.0" fill="rgb(216,56,29)" rx="2" ry="2" />
<text  x="149.32" y="1647.5" ></text>
</g>
<g >
<title>page_fault (8 samples, 0.04%)</title><rect x="103.1" y="2021" width="0.5" height="15.0" fill="rgb(244,111,19)" rx="2" ry="2" />
<text  x="106.12" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (5 samples, 0.02%)</title><rect x="207.7" y="1765" width="0.3" height="15.0" fill="rgb(228,80,16)" rx="2" ry="2" />
<text  x="210.73" y="1775.5" ></text>
</g>
<g >
<title>std::__future_base::_Task_state&lt;std::_Bind&lt;Annotate (22 samples, 0.11%)</title><rect x="29.9" y="2021" width="1.3" height="15.0" fill="rgb(252,224,7)" rx="2" ry="2" />
<text  x="32.92" y="2031.5" ></text>
</g>
<g >
<title>try_charge (2 samples, 0.01%)</title><rect x="946.1" y="1893" width="0.1" height="15.0" fill="rgb(233,207,48)" rx="2" ry="2" />
<text  x="949.07" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (406 samples, 2.03%)</title><rect x="55.4" y="1397" width="23.9" height="15.0" fill="rgb(246,73,0)" rx="2" ry="2" />
<text  x="58.38" y="1407.5" >[..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.04%)</title><rect x="1185.9" y="837" width="0.5" height="15.0" fill="rgb(210,146,25)" rx="2" ry="2" />
<text  x="1188.87" y="847.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (6 samples, 0.03%)</title><rect x="26.6" y="1909" width="0.3" height="15.0" fill="rgb(224,58,16)" rx="2" ry="2" />
<text  x="29.56" y="1919.5" ></text>
</g>
<g >
<title>futex_wait (6 samples, 0.03%)</title><rect x="128.0" y="1893" width="0.3" height="15.0" fill="rgb(242,117,38)" rx="2" ry="2" />
<text  x="130.99" y="1903.5" ></text>
</g>
<g >
<title>__interceptor_memcpy (14 samples, 0.07%)</title><rect x="1005.7" y="2053" width="0.8" height="15.0" fill="rgb(206,212,19)" rx="2" ry="2" />
<text  x="1008.65" y="2063.5" ></text>
</g>
<g >
<title>__sanitizer::StackTrace::GetCurrentPc (6 samples, 0.03%)</title><rect x="1178.8" y="2037" width="0.4" height="15.0" fill="rgb(253,92,44)" rx="2" ry="2" />
<text  x="1181.80" y="2047.5" ></text>
</g>
<g >
<title>__interceptor_strlen (7 samples, 0.03%)</title><rect x="1006.5" y="2053" width="0.4" height="15.0" fill="rgb(239,108,36)" rx="2" ry="2" />
<text  x="1009.48" y="2063.5" ></text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.01%)</title><rect x="147.3" y="1637" width="0.1" height="15.0" fill="rgb(248,101,47)" rx="2" ry="2" />
<text  x="150.26" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.04%)</title><rect x="1185.9" y="565" width="0.5" height="15.0" fill="rgb(253,105,39)" rx="2" ry="2" />
<text  x="1188.87" y="575.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (3 samples, 0.01%)</title><rect x="651.1" y="1765" width="0.2" height="15.0" fill="rgb(252,67,27)" rx="2" ry="2" />
<text  x="654.10" y="1775.5" ></text>
</g>
<g >
<title>Eigen::DenseCoeffsBase&lt;Eigen::Transpose&lt;Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_sum_op&lt;float, float&gt;, Eigen::Product&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0&gt; const, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const&gt; const&gt;, 0&gt;::coeff (337 samples, 1.68%)</title><rect x="380.8" y="1957" width="19.9" height="15.0" fill="rgb(217,171,21)" rx="2" ry="2" />
<text  x="383.82" y="1967.5" ></text>
</g>
<g >
<title>arch_tlb_finish_mmu (2 samples, 0.01%)</title><rect x="78.8" y="1221" width="0.2" height="15.0" fill="rgb(238,199,48)" rx="2" ry="2" />
<text  x="81.84" y="1231.5" ></text>
</g>
<g >
<title>wake_up_q (2 samples, 0.01%)</title><rect x="948.7" y="1941" width="0.1" height="15.0" fill="rgb(235,26,26)" rx="2" ry="2" />
<text  x="951.66" y="1951.5" ></text>
</g>
<g >
<title>arch_tlb_finish_mmu (2 samples, 0.01%)</title><rect x="80.0" y="1349" width="0.1" height="15.0" fill="rgb(229,37,29)" rx="2" ry="2" />
<text  x="82.96" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="183.5" y="1109" width="0.1" height="15.0" fill="rgb(235,38,16)" rx="2" ry="2" />
<text  x="186.51" y="1119.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (2 samples, 0.01%)</title><rect x="1189.5" y="1941" width="0.1" height="15.0" fill="rgb(214,8,48)" rx="2" ry="2" />
<text  x="1192.47" y="1951.5" ></text>
</g>
<g >
<title>Eigen::internal::product_evaluator&lt;Eigen::Product&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt;, 0&gt;, 8, Eigen::DenseShape, Eigen::DenseShape, float, float&gt;::product_evaluator (171 samples, 0.85%)</title><rect x="500.1" y="1957" width="10.1" height="15.0" fill="rgb(235,134,26)" rx="2" ry="2" />
<text  x="503.10" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.04%)</title><rect x="155.6" y="1893" width="0.5" height="15.0" fill="rgb(227,118,40)" rx="2" ry="2" />
<text  x="158.57" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.02%)</title><rect x="183.3" y="1333" width="0.3" height="15.0" fill="rgb(215,119,35)" rx="2" ry="2" />
<text  x="186.33" y="1343.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (15 samples, 0.07%)</title><rect x="736.8" y="1893" width="0.9" height="15.0" fill="rgb(247,34,43)" rx="2" ry="2" />
<text  x="739.79" y="1903.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (47 samples, 0.23%)</title><rect x="209.9" y="1685" width="2.8" height="15.0" fill="rgb(248,115,6)" rx="2" ry="2" />
<text  x="212.91" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.04%)</title><rect x="1185.9" y="85" width="0.5" height="15.0" fill="rgb(231,17,36)" rx="2" ry="2" />
<text  x="1188.87" y="95.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (4 samples, 0.02%)</title><rect x="199.2" y="1605" width="0.2" height="15.0" fill="rgb(247,67,2)" rx="2" ry="2" />
<text  x="202.18" y="1615.5" ></text>
</g>
<g >
<title>get_user_pages_fast (3 samples, 0.01%)</title><rect x="30.1" y="1893" width="0.2" height="15.0" fill="rgb(250,110,47)" rx="2" ry="2" />
<text  x="33.10" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (331 samples, 1.65%)</title><rect x="55.4" y="901" width="19.5" height="15.0" fill="rgb(243,34,27)" rx="2" ry="2" />
<text  x="58.38" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="155.9" y="949" width="0.1" height="15.0" fill="rgb(230,192,33)" rx="2" ry="2" />
<text  x="158.86" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (13 samples, 0.06%)</title><rect x="1187.0" y="1045" width="0.8" height="15.0" fill="rgb(252,44,51)" rx="2" ry="2" />
<text  x="1189.99" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (9 samples, 0.04%)</title><rect x="1185.9" y="245" width="0.5" height="15.0" fill="rgb(248,180,10)" rx="2" ry="2" />
<text  x="1188.87" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_BracketMatcher (2 samples, 0.01%)</title><rect x="207.9" y="1685" width="0.1" height="15.0" fill="rgb(234,109,16)" rx="2" ry="2" />
<text  x="210.90" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="156.0" y="965" width="0.1" height="15.0" fill="rgb(215,113,37)" rx="2" ry="2" />
<text  x="158.98" y="975.5" ></text>
</g>
<g >
<title>memcpy (17 samples, 0.08%)</title><rect x="653.9" y="1877" width="1.0" height="15.0" fill="rgb(247,66,5)" rx="2" ry="2" />
<text  x="656.93" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="155.9" y="549" width="0.1" height="15.0" fill="rgb(224,116,24)" rx="2" ry="2" />
<text  x="158.86" y="559.5" ></text>
</g>
<g >
<title>__do_page_fault (6 samples, 0.03%)</title><rect x="1027.9" y="2005" width="0.4" height="15.0" fill="rgb(243,168,18)" rx="2" ry="2" />
<text  x="1030.93" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.04%)</title><rect x="1186.4" y="1877" width="0.5" height="15.0" fill="rgb(251,211,1)" rx="2" ry="2" />
<text  x="1189.40" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="215.7" y="1653" width="0.4" height="15.0" fill="rgb(227,113,11)" rx="2" ry="2" />
<text  x="218.68" y="1663.5" ></text>
</g>
<g >
<title>vfs_read (3 samples, 0.01%)</title><rect x="118.3" y="1957" width="0.1" height="15.0" fill="rgb(231,98,33)" rx="2" ry="2" />
<text  x="121.26" y="1967.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (3 samples, 0.01%)</title><rect x="1188.6" y="2037" width="0.2" height="15.0" fill="rgb(235,147,49)" rx="2" ry="2" />
<text  x="1191.64" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (8 samples, 0.04%)</title><rect x="1186.4" y="2037" width="0.5" height="15.0" fill="rgb(246,114,47)" rx="2" ry="2" />
<text  x="1189.40" y="2047.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::~collate (17 samples, 0.08%)</title><rect x="817.4" y="2037" width="1.0" height="15.0" fill="rgb(218,94,1)" rx="2" ry="2" />
<text  x="820.41" y="2047.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (2 samples, 0.01%)</title><rect x="175.4" y="1621" width="0.1" height="15.0" fill="rgb(213,45,54)" rx="2" ry="2" />
<text  x="178.43" y="1631.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (46 samples, 0.23%)</title><rect x="998.6" y="2053" width="2.7" height="15.0" fill="rgb(228,190,27)" rx="2" ry="2" />
<text  x="1001.58" y="2063.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (14 samples, 0.07%)</title><rect x="614.6" y="1845" width="0.8" height="15.0" fill="rgb(207,227,41)" rx="2" ry="2" />
<text  x="617.62" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.02%)</title><rect x="1186.5" y="37" width="0.3" height="15.0" fill="rgb(216,98,34)" rx="2" ry="2" />
<text  x="1189.52" y="47.5" ></text>
</g>
<g >
<title>__strxfrm_l (31 samples, 0.15%)</title><rect x="1168.0" y="2021" width="1.8" height="15.0" fill="rgb(218,39,17)" rx="2" ry="2" />
<text  x="1170.96" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (309 samples, 1.54%)</title><rect x="55.4" y="85" width="18.2" height="15.0" fill="rgb(218,50,32)" rx="2" ry="2" />
<text  x="58.38" y="95.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="81.5" y="1573" width="0.2" height="15.0" fill="rgb(218,101,39)" rx="2" ry="2" />
<text  x="84.55" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="155.9" y="1685" width="0.2" height="15.0" fill="rgb(244,134,17)" rx="2" ry="2" />
<text  x="158.86" y="1695.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (2 samples, 0.01%)</title><rect x="1103.8" y="1925" width="0.2" height="15.0" fill="rgb(223,217,49)" rx="2" ry="2" />
<text  x="1106.84" y="1935.5" ></text>
</g>
<g >
<title>__mod_node_page_state (2 samples, 0.01%)</title><rect x="946.4" y="1909" width="0.1" height="15.0" fill="rgb(208,47,50)" rx="2" ry="2" />
<text  x="949.42" y="1919.5" ></text>
</g>
<g >
<title>perf_event_mmap (3 samples, 0.01%)</title><rect x="766.6" y="1909" width="0.1" height="15.0" fill="rgb(244,192,23)" rx="2" ry="2" />
<text  x="769.55" y="1919.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="1007.7" y="2021" width="0.1" height="15.0" fill="rgb(248,30,11)" rx="2" ry="2" />
<text  x="1010.65" y="2031.5" ></text>
</g>
<g >
<title>onmt::CaseModifier::extract_case_type (59 samples, 0.29%)</title><rect x="805.0" y="2037" width="3.5" height="15.0" fill="rgb(211,124,40)" rx="2" ry="2" />
<text  x="807.98" y="2047.5" ></text>
</g>
<g >
<title>__asan::Allocator::QuarantineChunk (3 samples, 0.01%)</title><rect x="765.3" y="1989" width="0.2" height="15.0" fill="rgb(230,216,53)" rx="2" ry="2" />
<text  x="768.31" y="1999.5" ></text>
</g>
<g >
<title>__asan::GetMallocContextSize (8 samples, 0.04%)</title><rect x="1156.3" y="2037" width="0.5" height="15.0" fill="rgb(227,117,49)" rx="2" ry="2" />
<text  x="1159.29" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (322 samples, 1.61%)</title><rect x="55.4" y="565" width="19.0" height="15.0" fill="rgb(251,140,48)" rx="2" ry="2" />
<text  x="58.38" y="575.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (27 samples, 0.13%)</title><rect x="1127.9" y="2037" width="1.6" height="15.0" fill="rgb(237,25,7)" rx="2" ry="2" />
<text  x="1130.94" y="2047.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (2 samples, 0.01%)</title><rect x="767.3" y="1861" width="0.1" height="15.0" fill="rgb(220,212,32)" rx="2" ry="2" />
<text  x="770.26" y="1871.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (2 samples, 0.01%)</title><rect x="875.2" y="2021" width="0.1" height="15.0" fill="rgb(217,229,15)" rx="2" ry="2" />
<text  x="878.23" y="2031.5" ></text>
</g>
<g >
<title>__asan_memcpy (3 samples, 0.01%)</title><rect x="581.2" y="1893" width="0.2" height="15.0" fill="rgb(247,76,25)" rx="2" ry="2" />
<text  x="584.20" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14 samples, 0.07%)</title><rect x="1186.9" y="1893" width="0.9" height="15.0" fill="rgb(222,113,17)" rx="2" ry="2" />
<text  x="1189.94" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.02%)</title><rect x="155.9" y="1173" width="0.2" height="15.0" fill="rgb(235,179,10)" rx="2" ry="2" />
<text  x="158.86" y="1183.5" ></text>
</g>
<g >
<title>fasttext::Vector::addRow (14 samples, 0.07%)</title><rect x="330.0" y="1973" width="0.8" height="15.0" fill="rgb(248,22,39)" rx="2" ry="2" />
<text  x="333.02" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (65 samples, 0.32%)</title><rect x="145.3" y="1669" width="3.8" height="15.0" fill="rgb(241,22,11)" rx="2" ry="2" />
<text  x="148.32" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1186.5" y="357" width="0.4" height="15.0" fill="rgb(244,217,26)" rx="2" ry="2" />
<text  x="1189.52" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (75 samples, 0.37%)</title><rect x="191.8" y="1717" width="4.4" height="15.0" fill="rgb(244,142,39)" rx="2" ry="2" />
<text  x="194.76" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (107 samples, 0.53%)</title><rect x="196.4" y="1701" width="6.3" height="15.0" fill="rgb(215,203,43)" rx="2" ry="2" />
<text  x="199.35" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="183.3" y="1125" width="0.2" height="15.0" fill="rgb(237,155,6)" rx="2" ry="2" />
<text  x="186.33" y="1135.5" ></text>
</g>
<g >
<title>handle_mm_fault (8 samples, 0.04%)</title><rect x="654.5" y="1813" width="0.4" height="15.0" fill="rgb(216,86,7)" rx="2" ry="2" />
<text  x="657.46" y="1823.5" ></text>
</g>
<g >
<title>__vm_munmap (2 samples, 0.01%)</title><rect x="76.8" y="1141" width="0.1" height="15.0" fill="rgb(227,114,34)" rx="2" ry="2" />
<text  x="79.77" y="1151.5" ></text>
</g>
<g >
<title>[unknown] (447 samples, 2.23%)</title><rect x="55.4" y="1589" width="26.3" height="15.0" fill="rgb(232,129,26)" rx="2" ry="2" />
<text  x="58.38" y="1599.5" >[..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (342 samples, 1.71%)</title><rect x="156.4" y="1797" width="20.2" height="15.0" fill="rgb(211,47,19)" rx="2" ry="2" />
<text  x="159.39" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1186.5" y="789" width="0.4" height="15.0" fill="rgb(229,42,15)" rx="2" ry="2" />
<text  x="1189.52" y="799.5" ></text>
</g>
<g >
<title>__do_page_fault (6 samples, 0.03%)</title><rect x="728.7" y="1845" width="0.3" height="15.0" fill="rgb(233,9,54)" rx="2" ry="2" />
<text  x="731.66" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (12 samples, 0.06%)</title><rect x="768.1" y="2021" width="0.7" height="15.0" fill="rgb(245,122,30)" rx="2" ry="2" />
<text  x="771.08" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.04%)</title><rect x="1185.9" y="693" width="0.5" height="15.0" fill="rgb(244,33,44)" rx="2" ry="2" />
<text  x="1188.87" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (85 samples, 0.42%)</title><rect x="128.9" y="1717" width="5.0" height="15.0" fill="rgb(225,26,23)" rx="2" ry="2" />
<text  x="131.87" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (12 samples, 0.06%)</title><rect x="1187.1" y="181" width="0.7" height="15.0" fill="rgb(210,177,7)" rx="2" ry="2" />
<text  x="1190.05" y="191.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (2 samples, 0.01%)</title><rect x="84.8" y="1701" width="0.2" height="15.0" fill="rgb(215,74,50)" rx="2" ry="2" />
<text  x="87.85" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (2 samples, 0.01%)</title><rect x="182.1" y="1861" width="0.2" height="15.0" fill="rgb(236,183,33)" rx="2" ry="2" />
<text  x="185.15" y="1871.5" ></text>
</g>
<g >
<title>[unknown] (395 samples, 1.97%)</title><rect x="55.4" y="1349" width="23.3" height="15.0" fill="rgb(213,41,47)" rx="2" ry="2" />
<text  x="58.38" y="1359.5" >[..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="155.7" y="1429" width="0.2" height="15.0" fill="rgb(231,37,17)" rx="2" ry="2" />
<text  x="158.75" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.02%)</title><rect x="183.3" y="1653" width="0.3" height="15.0" fill="rgb(220,69,52)" rx="2" ry="2" />
<text  x="186.33" y="1663.5" ></text>
</g>
<g >
<title>tlb_flush_mmu_free (2 samples, 0.01%)</title><rect x="1102.2" y="1845" width="0.1" height="15.0" fill="rgb(230,160,43)" rx="2" ry="2" />
<text  x="1105.19" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="155.9" y="501" width="0.1" height="15.0" fill="rgb(252,162,36)" rx="2" ry="2" />
<text  x="158.86" y="511.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::set (38 samples, 0.19%)</title><rect x="583.4" y="1893" width="2.2" height="15.0" fill="rgb(229,102,6)" rx="2" ry="2" />
<text  x="586.38" y="1903.5" ></text>
</g>
<g >
<title>__asan::AsanChunk::UsedSize (46 samples, 0.23%)</title><rect x="966.2" y="2053" width="2.7" height="15.0" fill="rgb(220,156,22)" rx="2" ry="2" />
<text  x="969.16" y="2063.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.01%)</title><rect x="174.3" y="1621" width="0.1" height="15.0" fill="rgb(210,203,47)" rx="2" ry="2" />
<text  x="177.25" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14 samples, 0.07%)</title><rect x="1186.9" y="1685" width="0.9" height="15.0" fill="rgb(219,98,1)" rx="2" ry="2" />
<text  x="1189.94" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13 samples, 0.06%)</title><rect x="1187.0" y="725" width="0.8" height="15.0" fill="rgb(215,105,48)" rx="2" ry="2" />
<text  x="1189.99" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.04%)</title><rect x="1185.9" y="1029" width="0.5" height="15.0" fill="rgb(231,152,30)" rx="2" ry="2" />
<text  x="1188.87" y="1039.5" ></text>
</g>
<g >
<title>__do_munmap (2 samples, 0.01%)</title><rect x="78.8" y="1269" width="0.2" height="15.0" fill="rgb(237,107,8)" rx="2" ry="2" />
<text  x="81.84" y="1279.5" ></text>
</g>
<g >
<title>__interceptor_memcmp (5 samples, 0.02%)</title><rect x="537.1" y="1909" width="0.3" height="15.0" fill="rgb(213,160,25)" rx="2" ry="2" />
<text  x="540.12" y="1919.5" ></text>
</g>
<g >
<title>__asan_memcpy (4 samples, 0.02%)</title><rect x="210.8" y="1669" width="0.2" height="15.0" fill="rgb(241,8,9)" rx="2" ry="2" />
<text  x="213.79" y="1679.5" ></text>
</g>
<g >
<title>__asan::asan_memalign (2 samples, 0.01%)</title><rect x="607.1" y="1861" width="0.1" height="15.0" fill="rgb(217,156,32)" rx="2" ry="2" />
<text  x="610.07" y="1871.5" ></text>
</g>
<g >
<title>fasttext::FastText::loadModel (8 samples, 0.04%)</title><rect x="517.7" y="2005" width="0.5" height="15.0" fill="rgb(246,51,47)" rx="2" ry="2" />
<text  x="520.73" y="2015.5" ></text>
</g>
<g >
<title>__interceptor_strcmp (82 samples, 0.41%)</title><rect x="38.1" y="2021" width="4.8" height="15.0" fill="rgb(233,33,32)" rx="2" ry="2" />
<text  x="41.11" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (17 samples, 0.08%)</title><rect x="817.4" y="2021" width="1.0" height="15.0" fill="rgb(243,100,29)" rx="2" ry="2" />
<text  x="820.41" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1186.5" y="1157" width="0.4" height="15.0" fill="rgb(252,113,7)" rx="2" ry="2" />
<text  x="1189.46" y="1167.5" ></text>
</g>
<g >
<title>mem_cgroup_throttle_swaprate (5 samples, 0.02%)</title><rect x="27.2" y="1941" width="0.3" height="15.0" fill="rgb(237,89,20)" rx="2" ry="2" />
<text  x="30.21" y="1951.5" ></text>
</g>
<g >
<title>DetectLanguage[abi:cxx11] (516 samples, 2.58%)</title><rect x="540.7" y="1973" width="30.4" height="15.0" fill="rgb(253,44,50)" rx="2" ry="2" />
<text  x="543.71" y="1983.5" >De..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="155.9" y="389" width="0.1" height="15.0" fill="rgb(233,81,37)" rx="2" ry="2" />
<text  x="158.86" y="399.5" ></text>
</g>
<g >
<title>__pthread_getspecific (19 samples, 0.09%)</title><rect x="596.9" y="1877" width="1.2" height="15.0" fill="rgb(245,154,21)" rx="2" ry="2" />
<text  x="599.94" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="216.2" y="1685" width="0.1" height="15.0" fill="rgb(213,101,32)" rx="2" ry="2" />
<text  x="219.16" y="1695.5" ></text>
</g>
<g >
<title>fasttext::Vector::addVector (6 samples, 0.03%)</title><rect x="514.4" y="1973" width="0.4" height="15.0" fill="rgb(210,142,39)" rx="2" ry="2" />
<text  x="517.43" y="1983.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (3 samples, 0.01%)</title><rect x="876.7" y="2005" width="0.2" height="15.0" fill="rgb(209,100,42)" rx="2" ry="2" />
<text  x="879.70" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13 samples, 0.06%)</title><rect x="1187.0" y="1173" width="0.8" height="15.0" fill="rgb(241,154,24)" rx="2" ry="2" />
<text  x="1189.99" y="1183.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::operator[] (4 samples, 0.02%)</title><rect x="127.3" y="1941" width="0.2" height="15.0" fill="rgb(252,167,21)" rx="2" ry="2" />
<text  x="130.28" y="1951.5" ></text>
</g>
<g >
<title>__asan::Allocator::Deallocate (2 samples, 0.01%)</title><rect x="178.6" y="1653" width="0.1" height="15.0" fill="rgb(218,212,46)" rx="2" ry="2" />
<text  x="181.61" y="1663.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find (24 samples, 0.12%)</title><rect x="1145.9" y="2053" width="1.4" height="15.0" fill="rgb(231,153,8)" rx="2" ry="2" />
<text  x="1148.92" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (90 samples, 0.45%)</title><rect x="133.9" y="1653" width="5.3" height="15.0" fill="rgb(218,158,2)" rx="2" ry="2" />
<text  x="136.88" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1186.5" y="229" width="0.4" height="15.0" fill="rgb(205,172,4)" rx="2" ry="2" />
<text  x="1189.52" y="239.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="84.0" y="1717" width="0.1" height="15.0" fill="rgb(253,10,32)" rx="2" ry="2" />
<text  x="86.96" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.04%)</title><rect x="1185.9" y="1525" width="0.5" height="15.0" fill="rgb(242,73,21)" rx="2" ry="2" />
<text  x="1188.87" y="1535.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (3 samples, 0.01%)</title><rect x="86.0" y="1829" width="0.1" height="15.0" fill="rgb(207,210,50)" rx="2" ry="2" />
<text  x="88.97" y="1839.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (13 samples, 0.06%)</title><rect x="584.6" y="1877" width="0.7" height="15.0" fill="rgb(228,189,14)" rx="2" ry="2" />
<text  x="587.56" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (9 samples, 0.04%)</title><rect x="1185.9" y="1013" width="0.5" height="15.0" fill="rgb(221,175,12)" rx="2" ry="2" />
<text  x="1188.87" y="1023.5" ></text>
</g>
<g >
<title>[unknown] (312 samples, 1.56%)</title><rect x="55.4" y="197" width="18.4" height="15.0" fill="rgb(210,106,35)" rx="2" ry="2" />
<text  x="58.38" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (76 samples, 0.38%)</title><rect x="203.1" y="1685" width="4.5" height="15.0" fill="rgb(251,187,20)" rx="2" ry="2" />
<text  x="206.07" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (7 samples, 0.03%)</title><rect x="176.1" y="1765" width="0.5" height="15.0" fill="rgb(230,20,13)" rx="2" ry="2" />
<text  x="179.14" y="1775.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (6 samples, 0.03%)</title><rect x="161.0" y="1541" width="0.3" height="15.0" fill="rgb(237,199,21)" rx="2" ry="2" />
<text  x="163.99" y="1551.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (8 samples, 0.04%)</title><rect x="753.9" y="1893" width="0.5" height="15.0" fill="rgb(252,130,3)" rx="2" ry="2" />
<text  x="756.88" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (87 samples, 0.43%)</title><rect x="186.4" y="1669" width="5.1" height="15.0" fill="rgb(211,166,43)" rx="2" ry="2" />
<text  x="189.39" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (5 samples, 0.02%)</title><rect x="877.1" y="2021" width="0.2" height="15.0" fill="rgb(223,138,27)" rx="2" ry="2" />
<text  x="880.05" y="2031.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;std::__detail::_State&lt;char&gt; const*, std::__detail::_State&lt;char&gt;*&gt; (5 samples, 0.02%)</title><rect x="207.7" y="1717" width="0.3" height="15.0" fill="rgb(240,75,28)" rx="2" ry="2" />
<text  x="210.73" y="1727.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (49 samples, 0.24%)</title><rect x="158.6" y="1557" width="2.9" height="15.0" fill="rgb(242,101,37)" rx="2" ry="2" />
<text  x="161.63" y="1567.5" ></text>
</g>
<g >
<title>flush_tlb_mm_range (2 samples, 0.01%)</title><rect x="80.0" y="1317" width="0.1" height="15.0" fill="rgb(237,209,1)" rx="2" ry="2" />
<text  x="82.96" y="1327.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (2 samples, 0.01%)</title><rect x="580.0" y="1781" width="0.1" height="15.0" fill="rgb(240,158,13)" rx="2" ry="2" />
<text  x="583.02" y="1791.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::basic_json (8 samples, 0.04%)</title><rect x="518.2" y="2005" width="0.5" height="15.0" fill="rgb(233,174,51)" rx="2" ry="2" />
<text  x="521.20" y="2015.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (2 samples, 0.01%)</title><rect x="80.5" y="1381" width="0.1" height="15.0" fill="rgb(208,149,9)" rx="2" ry="2" />
<text  x="83.49" y="1391.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (3 samples, 0.01%)</title><rect x="216.3" y="1973" width="0.2" height="15.0" fill="rgb(251,58,26)" rx="2" ry="2" />
<text  x="219.33" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.01%)</title><rect x="216.2" y="1509" width="0.1" height="15.0" fill="rgb(215,108,12)" rx="2" ry="2" />
<text  x="219.16" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="216.2" y="1637" width="0.1" height="15.0" fill="rgb(242,93,37)" rx="2" ry="2" />
<text  x="219.16" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (502 samples, 2.51%)</title><rect x="185.8" y="1925" width="29.6" height="15.0" fill="rgb(224,183,24)" rx="2" ry="2" />
<text  x="188.80" y="1935.5" >st..</text>
</g>
<g >
<title>unmap_region (2 samples, 0.01%)</title><rect x="88.0" y="1813" width="0.1" height="15.0" fill="rgb(252,170,41)" rx="2" ry="2" />
<text  x="90.97" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1186.5" y="501" width="0.4" height="15.0" fill="rgb(221,72,2)" rx="2" ry="2" />
<text  x="1189.52" y="511.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::getSubwords (168 samples, 0.84%)</title><rect x="317.3" y="1957" width="9.9" height="15.0" fill="rgb(240,223,42)" rx="2" ry="2" />
<text  x="320.35" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (78 samples, 0.39%)</title><rect x="203.0" y="1733" width="4.6" height="15.0" fill="rgb(209,139,23)" rx="2" ry="2" />
<text  x="206.01" y="1743.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (3 samples, 0.01%)</title><rect x="89.0" y="1973" width="0.1" height="15.0" fill="rgb(238,93,11)" rx="2" ry="2" />
<text  x="91.97" y="1983.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="76.1" y="1173" width="0.1" height="15.0" fill="rgb(228,31,0)" rx="2" ry="2" />
<text  x="79.13" y="1183.5" ></text>
</g>
<g >
<title>[unknown] (328 samples, 1.64%)</title><rect x="55.4" y="741" width="19.3" height="15.0" fill="rgb(251,68,29)" rx="2" ry="2" />
<text  x="58.38" y="751.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (3 samples, 0.01%)</title><rect x="154.7" y="1701" width="0.2" height="15.0" fill="rgb(225,120,32)" rx="2" ry="2" />
<text  x="157.74" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (74 samples, 0.37%)</title><rect x="191.8" y="1669" width="4.4" height="15.0" fill="rgb(211,121,28)" rx="2" ry="2" />
<text  x="194.82" y="1679.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (8 samples, 0.04%)</title><rect x="766.9" y="2021" width="0.5" height="15.0" fill="rgb(214,213,14)" rx="2" ry="2" />
<text  x="769.90" y="2031.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (2 samples, 0.01%)</title><rect x="680.6" y="1733" width="0.1" height="15.0" fill="rgb(229,213,26)" rx="2" ry="2" />
<text  x="683.56" y="1743.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (32 samples, 0.16%)</title><rect x="808.9" y="2005" width="1.9" height="15.0" fill="rgb(214,200,28)" rx="2" ry="2" />
<text  x="811.87" y="2015.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt; &gt;::_M_manager (2 samples, 0.01%)</title><rect x="176.4" y="1685" width="0.2" height="15.0" fill="rgb(251,47,30)" rx="2" ry="2" />
<text  x="179.43" y="1695.5" ></text>
</g>
<g >
<title>strlen@plt (5 samples, 0.02%)</title><rect x="754.6" y="1893" width="0.3" height="15.0" fill="rgb(216,37,52)" rx="2" ry="2" />
<text  x="757.65" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="156.0" y="933" width="0.1" height="15.0" fill="rgb(242,107,45)" rx="2" ry="2" />
<text  x="158.98" y="943.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_realloc_insert&lt;int&gt; (16 samples, 0.08%)</title><rect x="874.5" y="2037" width="1.0" height="15.0" fill="rgb(214,160,13)" rx="2" ry="2" />
<text  x="877.52" y="2047.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (5 samples, 0.02%)</title><rect x="207.7" y="1733" width="0.3" height="15.0" fill="rgb(219,43,19)" rx="2" ry="2" />
<text  x="210.73" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (110 samples, 0.55%)</title><rect x="196.3" y="1733" width="6.5" height="15.0" fill="rgb(217,96,15)" rx="2" ry="2" />
<text  x="199.29" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (347 samples, 1.73%)</title><rect x="55.4" y="1157" width="20.4" height="15.0" fill="rgb(245,197,5)" rx="2" ry="2" />
<text  x="58.38" y="1167.5" ></text>
</g>
<g >
<title>page_fault (6 samples, 0.03%)</title><rect x="728.7" y="1877" width="0.3" height="15.0" fill="rgb(244,115,47)" rx="2" ry="2" />
<text  x="731.66" y="1887.5" ></text>
</g>
<g >
<title>__sanitizer::internal_memmove (35 samples, 0.17%)</title><rect x="323.3" y="1941" width="2.1" height="15.0" fill="rgb(241,140,34)" rx="2" ry="2" />
<text  x="326.30" y="1951.5" ></text>
</g>
<g >
<title>onmt::unicode::is_letter@plt (3 samples, 0.01%)</title><rect x="735.7" y="1893" width="0.1" height="15.0" fill="rgb(213,125,50)" rx="2" ry="2" />
<text  x="738.67" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (11 samples, 0.05%)</title><rect x="1185.8" y="2021" width="0.6" height="15.0" fill="rgb(217,118,20)" rx="2" ry="2" />
<text  x="1188.76" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.02%)</title><rect x="183.3" y="1685" width="0.3" height="15.0" fill="rgb(247,100,34)" rx="2" ry="2" />
<text  x="186.33" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (13 samples, 0.06%)</title><rect x="1187.0" y="1189" width="0.8" height="15.0" fill="rgb(222,75,26)" rx="2" ry="2" />
<text  x="1189.99" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (11 samples, 0.05%)</title><rect x="1185.8" y="1973" width="0.6" height="15.0" fill="rgb(234,170,39)" rx="2" ry="2" />
<text  x="1188.76" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="215.7" y="1733" width="0.4" height="15.0" fill="rgb(254,129,47)" rx="2" ry="2" />
<text  x="218.68" y="1743.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThreadStats (29 samples, 0.14%)</title><rect x="974.1" y="2053" width="1.7" height="15.0" fill="rgb(247,218,37)" rx="2" ry="2" />
<text  x="977.12" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.04%)</title><rect x="1185.9" y="373" width="0.5" height="15.0" fill="rgb(220,82,39)" rx="2" ry="2" />
<text  x="1188.87" y="383.5" ></text>
</g>
<g >
<title>__do_munmap (2 samples, 0.01%)</title><rect x="84.8" y="1669" width="0.2" height="15.0" fill="rgb(219,69,51)" rx="2" ry="2" />
<text  x="87.85" y="1679.5" ></text>
</g>
<g >
<title>generic_file_read_iter (3 samples, 0.01%)</title><rect x="1111.8" y="1893" width="0.2" height="15.0" fill="rgb(232,201,11)" rx="2" ry="2" />
<text  x="1114.79" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="155.7" y="1141" width="0.2" height="15.0" fill="rgb(248,67,26)" rx="2" ry="2" />
<text  x="158.75" y="1151.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::set (5 samples, 0.02%)</title><rect x="574.5" y="1909" width="0.3" height="15.0" fill="rgb(206,186,23)" rx="2" ry="2" />
<text  x="577.54" y="1919.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (2 samples, 0.01%)</title><rect x="31.1" y="1957" width="0.1" height="15.0" fill="rgb(236,47,0)" rx="2" ry="2" />
<text  x="34.10" y="1967.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find (13 samples, 0.06%)</title><rect x="755.1" y="1909" width="0.8" height="15.0" fill="rgb(252,113,30)" rx="2" ry="2" />
<text  x="758.12" y="1919.5" ></text>
</g>
<g >
<title>std::operator&gt;&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (3 samples, 0.01%)</title><rect x="517.4" y="1973" width="0.1" height="15.0" fill="rgb(243,137,47)" rx="2" ry="2" />
<text  x="520.37" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (12 samples, 0.06%)</title><rect x="1187.1" y="149" width="0.7" height="15.0" fill="rgb(244,77,41)" rx="2" ry="2" />
<text  x="1190.05" y="159.5" ></text>
</g>
<g >
<title>__asan_memcpy (6 samples, 0.03%)</title><rect x="152.2" y="1669" width="0.3" height="15.0" fill="rgb(206,223,44)" rx="2" ry="2" />
<text  x="155.15" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1186.5" y="101" width="0.4" height="15.0" fill="rgb(237,100,41)" rx="2" ry="2" />
<text  x="1189.52" y="111.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="156.0" y="997" width="0.1" height="15.0" fill="rgb(206,124,2)" rx="2" ry="2" />
<text  x="158.98" y="1007.5" ></text>
</g>
<g >
<title>__sanitizer::BlockingMutex::Lock (3 samples, 0.01%)</title><rect x="757.0" y="2037" width="0.2" height="15.0" fill="rgb(229,90,17)" rx="2" ry="2" />
<text  x="760.00" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1186.5" y="165" width="0.4" height="15.0" fill="rgb(213,228,13)" rx="2" ry="2" />
<text  x="1189.52" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (90 samples, 0.45%)</title><rect x="156.5" y="1717" width="5.3" height="15.0" fill="rgb(249,175,12)" rx="2" ry="2" />
<text  x="159.45" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (13 samples, 0.06%)</title><rect x="1187.0" y="997" width="0.8" height="15.0" fill="rgb(205,40,54)" rx="2" ry="2" />
<text  x="1189.99" y="1007.5" ></text>
</g>
<g >
<title>fasttext::Vector::norm (27 samples, 0.13%)</title><rect x="514.9" y="1973" width="1.6" height="15.0" fill="rgb(205,207,8)" rx="2" ry="2" />
<text  x="517.90" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="155.9" y="1525" width="0.2" height="15.0" fill="rgb(211,9,28)" rx="2" ry="2" />
<text  x="158.86" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (9 samples, 0.04%)</title><rect x="1185.9" y="1205" width="0.5" height="15.0" fill="rgb(209,6,49)" rx="2" ry="2" />
<text  x="1188.87" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13 samples, 0.06%)</title><rect x="1187.0" y="1109" width="0.8" height="15.0" fill="rgb(251,205,22)" rx="2" ry="2" />
<text  x="1189.99" y="1119.5" ></text>
</g>
<g >
<title>get_page_from_freelist (5 samples, 0.02%)</title><rect x="695.4" y="1733" width="0.3" height="15.0" fill="rgb(230,68,40)" rx="2" ry="2" />
<text  x="698.42" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.04%)</title><rect x="1186.4" y="1829" width="0.5" height="15.0" fill="rgb(220,108,28)" rx="2" ry="2" />
<text  x="1189.40" y="1839.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (2 samples, 0.01%)</title><rect x="160.3" y="1541" width="0.1" height="15.0" fill="rgb(232,24,15)" rx="2" ry="2" />
<text  x="163.28" y="1551.5" ></text>
</g>
<g >
<title>__clock_gettime (7 samples, 0.03%)</title><rect x="117.9" y="2037" width="0.4" height="15.0" fill="rgb(223,51,36)" rx="2" ry="2" />
<text  x="120.85" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (376 samples, 1.88%)</title><rect x="55.4" y="1269" width="22.1" height="15.0" fill="rgb(222,81,2)" rx="2" ry="2" />
<text  x="58.38" y="1279.5" >[..</text>
</g>
<g >
<title>free_unref_page_list (2 samples, 0.01%)</title><rect x="767.0" y="1829" width="0.1" height="15.0" fill="rgb(227,152,11)" rx="2" ry="2" />
<text  x="769.96" y="1839.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&gt;::GetFromAllocator (25 samples, 0.12%)</title><rect x="763.7" y="2037" width="1.5" height="15.0" fill="rgb(213,115,0)" rx="2" ry="2" />
<text  x="766.72" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="1185.5" y="2005" width="0.3" height="15.0" fill="rgb(253,148,3)" rx="2" ry="2" />
<text  x="1188.52" y="2015.5" ></text>
</g>
<g >
<title>GetHost (468 samples, 2.34%)</title><rect x="128.5" y="1973" width="27.6" height="15.0" fill="rgb(219,192,46)" rx="2" ry="2" />
<text  x="131.52" y="1983.5" >G..</text>
</g>
<g >
<title>[libc-2.27.so] (4 samples, 0.02%)</title><rect x="320.4" y="1941" width="0.2" height="15.0" fill="rgb(238,215,29)" rx="2" ry="2" />
<text  x="323.41" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13 samples, 0.06%)</title><rect x="1187.0" y="1253" width="0.8" height="15.0" fill="rgb(243,85,28)" rx="2" ry="2" />
<text  x="1189.99" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.04%)</title><rect x="1185.9" y="165" width="0.5" height="15.0" fill="rgb(243,147,11)" rx="2" ry="2" />
<text  x="1188.87" y="175.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (2 samples, 0.01%)</title><rect x="680.7" y="1765" width="0.1" height="15.0" fill="rgb(254,59,15)" rx="2" ry="2" />
<text  x="683.68" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.04%)</title><rect x="1185.9" y="1365" width="0.5" height="15.0" fill="rgb(216,148,28)" rx="2" ry="2" />
<text  x="1188.87" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (79 samples, 0.39%)</title><rect x="129.1" y="1637" width="4.7" height="15.0" fill="rgb(212,35,42)" rx="2" ry="2" />
<text  x="132.11" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (8 samples, 0.04%)</title><rect x="1186.4" y="1925" width="0.5" height="15.0" fill="rgb(246,108,25)" rx="2" ry="2" />
<text  x="1189.40" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (88 samples, 0.44%)</title><rect x="133.9" y="1637" width="5.2" height="15.0" fill="rgb(206,103,32)" rx="2" ry="2" />
<text  x="136.94" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (453 samples, 2.26%)</title><rect x="128.8" y="1925" width="26.7" height="15.0" fill="rgb(223,59,52)" rx="2" ry="2" />
<text  x="131.75" y="1935.5" >s..</text>
</g>
<g >
<title>[unknown] (380 samples, 1.90%)</title><rect x="55.4" y="1285" width="22.4" height="15.0" fill="rgb(215,139,45)" rx="2" ry="2" />
<text  x="58.38" y="1295.5" >[..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (88 samples, 0.44%)</title><rect x="166.8" y="1701" width="5.2" height="15.0" fill="rgb(251,33,38)" rx="2" ry="2" />
<text  x="169.77" y="1711.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.01%)</title><rect x="194.7" y="1589" width="0.1" height="15.0" fill="rgb(243,190,21)" rx="2" ry="2" />
<text  x="197.70" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="1185.5" y="2021" width="0.3" height="15.0" fill="rgb(252,81,30)" rx="2" ry="2" />
<text  x="1188.52" y="2031.5" ></text>
</g>
<g >
<title>mem_cgroup_from_task (2 samples, 0.01%)</title><rect x="28.8" y="1989" width="0.1" height="15.0" fill="rgb(225,51,5)" rx="2" ry="2" />
<text  x="31.80" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="155.9" y="1445" width="0.2" height="15.0" fill="rgb(211,89,35)" rx="2" ry="2" />
<text  x="158.86" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (2 samples, 0.01%)</title><rect x="215.0" y="1797" width="0.2" height="15.0" fill="rgb(239,80,13)" rx="2" ry="2" />
<text  x="218.04" y="1807.5" ></text>
</g>
<g >
<title>fasttext::Vector::addVector (56 samples, 0.28%)</title><rect x="1107.4" y="2053" width="3.3" height="15.0" fill="rgb(240,53,30)" rx="2" ry="2" />
<text  x="1110.43" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.02%)</title><rect x="183.3" y="1637" width="0.3" height="15.0" fill="rgb(235,173,10)" rx="2" ry="2" />
<text  x="186.33" y="1647.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.01%)</title><rect x="877.1" y="2005" width="0.1" height="15.0" fill="rgb(234,133,38)" rx="2" ry="2" />
<text  x="880.11" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.03%)</title><rect x="1186.5" y="1413" width="0.4" height="15.0" fill="rgb(214,183,30)" rx="2" ry="2" />
<text  x="1189.46" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (90 samples, 0.45%)</title><rect x="149.7" y="1733" width="5.3" height="15.0" fill="rgb(236,87,22)" rx="2" ry="2" />
<text  x="152.68" y="1743.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="166.2" y="1573" width="0.2" height="15.0" fill="rgb(238,91,10)" rx="2" ry="2" />
<text  x="169.24" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.05%)</title><rect x="1185.8" y="1941" width="0.6" height="15.0" fill="rgb(229,120,13)" rx="2" ry="2" />
<text  x="1188.76" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (543 samples, 2.71%)</title><rect x="55.4" y="1893" width="32.0" height="15.0" fill="rgb(223,213,24)" rx="2" ry="2" />
<text  x="58.38" y="1903.5" >[u..</text>
</g>
<g >
<title>do_page_fault (5 samples, 0.02%)</title><rect x="1024.0" y="2021" width="0.3" height="15.0" fill="rgb(233,14,29)" rx="2" ry="2" />
<text  x="1027.04" y="2031.5" ></text>
</g>
<g >
<title>TDocument::PreprocessTextFields (3,138 samples, 15.67%)</title><rect x="571.1" y="1973" width="185.0" height="15.0" fill="rgb(245,113,51)" rx="2" ry="2" />
<text  x="574.12" y="1983.5" >TDocument::PreprocessTex..</text>
</g>
<g >
<title>vfs_read (3 samples, 0.01%)</title><rect x="1111.8" y="1957" width="0.2" height="15.0" fill="rgb(250,123,46)" rx="2" ry="2" />
<text  x="1114.79" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="155.9" y="789" width="0.1" height="15.0" fill="rgb(227,65,30)" rx="2" ry="2" />
<text  x="158.86" y="799.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (2 samples, 0.01%)</title><rect x="599.6" y="1861" width="0.2" height="15.0" fill="rgb(221,184,19)" rx="2" ry="2" />
<text  x="602.65" y="1871.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_stringbuf (21 samples, 0.10%)</title><rect x="812.3" y="2037" width="1.2" height="15.0" fill="rgb(252,88,29)" rx="2" ry="2" />
<text  x="815.28" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="155.7" y="1525" width="0.2" height="15.0" fill="rgb(220,133,35)" rx="2" ry="2" />
<text  x="158.75" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt;,  (7 samples, 0.03%)</title><rect x="183.2" y="1941" width="0.4" height="15.0" fill="rgb(251,116,11)" rx="2" ry="2" />
<text  x="186.21" y="1951.5" ></text>
</g>
<g >
<title>try_charge (7 samples, 0.03%)</title><rect x="28.3" y="1925" width="0.4" height="15.0" fill="rgb(242,207,23)" rx="2" ry="2" />
<text  x="31.27" y="1935.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (16 samples, 0.08%)</title><rect x="322.2" y="1941" width="0.9" height="15.0" fill="rgb(216,216,46)" rx="2" ry="2" />
<text  x="325.18" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="183.5" y="1141" width="0.1" height="15.0" fill="rgb(218,177,8)" rx="2" ry="2" />
<text  x="186.51" y="1151.5" ></text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::get (25 samples, 0.12%)</title><rect x="125.7" y="1909" width="1.5" height="15.0" fill="rgb(207,50,16)" rx="2" ry="2" />
<text  x="128.75" y="1919.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (3 samples, 0.01%)</title><rect x="81.3" y="1557" width="0.2" height="15.0" fill="rgb(206,123,21)" rx="2" ry="2" />
<text  x="84.31" y="1567.5" ></text>
</g>
<g >
<title>__pthread_getspecific (2 samples, 0.01%)</title><rect x="1122.9" y="2037" width="0.1" height="15.0" fill="rgb(249,9,14)" rx="2" ry="2" />
<text  x="1125.93" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1186.5" y="1333" width="0.4" height="15.0" fill="rgb(248,24,9)" rx="2" ry="2" />
<text  x="1189.46" y="1343.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (2 samples, 0.01%)</title><rect x="55.3" y="2021" width="0.1" height="15.0" fill="rgb(205,201,20)" rx="2" ry="2" />
<text  x="58.26" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="156.0" y="885" width="0.1" height="15.0" fill="rgb(223,91,11)" rx="2" ry="2" />
<text  x="158.98" y="895.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="207.4" y="1653" width="0.1" height="15.0" fill="rgb(211,157,17)" rx="2" ry="2" />
<text  x="210.37" y="1663.5" ></text>
</g>
<g >
<title>__asan::GetMallocContextSize (4 samples, 0.02%)</title><rect x="594.5" y="1877" width="0.2" height="15.0" fill="rgb(232,121,48)" rx="2" ry="2" />
<text  x="597.46" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1186.5" y="1061" width="0.4" height="15.0" fill="rgb(219,133,44)" rx="2" ry="2" />
<text  x="1189.52" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (453 samples, 2.26%)</title><rect x="156.4" y="1909" width="26.7" height="15.0" fill="rgb(220,175,21)" rx="2" ry="2" />
<text  x="159.39" y="1919.5" >s..</text>
</g>
<g >
<title>__do_page_fault (2 samples, 0.01%)</title><rect x="119.2" y="1941" width="0.1" height="15.0" fill="rgb(240,207,21)" rx="2" ry="2" />
<text  x="122.21" y="1951.5" ></text>
</g>
<g >
<title>onmt::unicode::explode_utf8 (338 samples, 1.69%)</title><rect x="600.1" y="1877" width="19.9" height="15.0" fill="rgb(229,140,30)" rx="2" ry="2" />
<text  x="603.06" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (23 samples, 0.11%)</title><rect x="1185.5" y="2053" width="1.4" height="15.0" fill="rgb(253,223,8)" rx="2" ry="2" />
<text  x="1188.52" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="1186.5" y="1397" width="0.4" height="15.0" fill="rgb(226,97,47)" rx="2" ry="2" />
<text  x="1189.46" y="1407.5" ></text>
</g>
<g >
<title>nlohmann::operator&gt;&gt; (133 samples, 0.66%)</title><rect x="119.7" y="1989" width="7.8" height="15.0" fill="rgb(222,197,50)" rx="2" ry="2" />
<text  x="122.68" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (2 samples, 0.01%)</title><rect x="182.3" y="1781" width="0.1" height="15.0" fill="rgb(213,166,28)" rx="2" ry="2" />
<text  x="185.33" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.02%)</title><rect x="183.3" y="1493" width="0.3" height="15.0" fill="rgb(240,82,37)" rx="2" ry="2" />
<text  x="186.33" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1186.5" y="661" width="0.4" height="15.0" fill="rgb(239,103,38)" rx="2" ry="2" />
<text  x="1189.52" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="216.0" y="1301" width="0.1" height="15.0" fill="rgb(220,105,43)" rx="2" ry="2" />
<text  x="218.98" y="1311.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (8 samples, 0.04%)</title><rect x="614.1" y="1845" width="0.5" height="15.0" fill="rgb(217,198,12)" rx="2" ry="2" />
<text  x="617.14" y="1855.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::Unwind (2 samples, 0.01%)</title><rect x="323.2" y="1941" width="0.1" height="15.0" fill="rgb(242,147,24)" rx="2" ry="2" />
<text  x="326.18" y="1951.5" ></text>
</g>
<g >
<title>find_vma (2 samples, 0.01%)</title><rect x="766.0" y="1893" width="0.1" height="15.0" fill="rgb(215,88,34)" rx="2" ry="2" />
<text  x="768.96" y="1903.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (74 samples, 0.37%)</title><rect x="33.8" y="2021" width="4.3" height="15.0" fill="rgb(242,17,42)" rx="2" ry="2" />
<text  x="36.75" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13 samples, 0.06%)</title><rect x="1187.0" y="533" width="0.8" height="15.0" fill="rgb(211,111,15)" rx="2" ry="2" />
<text  x="1189.99" y="543.5" ></text>
</g>
<g >
<title>__interceptor_memcpy (6 samples, 0.03%)</title><rect x="1122.6" y="2037" width="0.3" height="15.0" fill="rgb(223,176,10)" rx="2" ry="2" />
<text  x="1125.58" y="2047.5" ></text>
</g>
<g >
<title>alloc_pages_vma (29 samples, 0.14%)</title><rect x="24.9" y="1957" width="1.7" height="15.0" fill="rgb(208,203,48)" rx="2" ry="2" />
<text  x="27.85" y="1967.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (3 samples, 0.01%)</title><rect x="54.8" y="1893" width="0.2" height="15.0" fill="rgb(222,38,36)" rx="2" ry="2" />
<text  x="57.79" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1185.6" y="1541" width="0.1" height="15.0" fill="rgb(248,142,23)" rx="2" ry="2" />
<text  x="1188.58" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (90 samples, 0.45%)</title><rect x="149.7" y="1765" width="5.3" height="15.0" fill="rgb(222,33,20)" rx="2" ry="2" />
<text  x="152.68" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (15 samples, 0.07%)</title><rect x="1185.5" y="2037" width="0.9" height="15.0" fill="rgb(243,30,30)" rx="2" ry="2" />
<text  x="1188.52" y="2047.5" ></text>
</g>
<g >
<title>__do_page_fault (110 samples, 0.55%)</title><rect x="22.6" y="2005" width="6.4" height="15.0" fill="rgb(240,90,30)" rx="2" ry="2" />
<text  x="25.55" y="2015.5" ></text>
</g>
<g >
<title>__madvise (2 samples, 0.01%)</title><rect x="80.5" y="1461" width="0.1" height="15.0" fill="rgb(218,99,14)" rx="2" ry="2" />
<text  x="83.49" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="156.0" y="949" width="0.1" height="15.0" fill="rgb(242,81,2)" rx="2" ry="2" />
<text  x="158.98" y="959.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (2 samples, 0.01%)</title><rect x="315.1" y="1957" width="0.1" height="15.0" fill="rgb(239,165,44)" rx="2" ry="2" />
<text  x="318.11" y="1967.5" ></text>
</g>
<g >
<title>tlb_flush_mmu_free (3 samples, 0.01%)</title><rect x="1103.4" y="1893" width="0.2" height="15.0" fill="rgb(220,191,46)" rx="2" ry="2" />
<text  x="1106.42" y="1903.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="90.0" y="1989" width="0.1" height="15.0" fill="rgb(235,43,18)" rx="2" ry="2" />
<text  x="92.98" y="1999.5" ></text>
</g>
<g >
<title>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::dump (6 samples, 0.03%)</title><rect x="518.7" y="1957" width="0.4" height="15.0" fill="rgb(225,48,54)" rx="2" ry="2" />
<text  x="521.73" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (28 samples, 0.14%)</title><rect x="872.1" y="2021" width="1.7" height="15.0" fill="rgb(206,91,3)" rx="2" ry="2" />
<text  x="875.10" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (321 samples, 1.60%)</title><rect x="55.4" y="437" width="18.9" height="15.0" fill="rgb(227,157,41)" rx="2" ry="2" />
<text  x="58.38" y="447.5" ></text>
</g>
<g >
<title>[unknown] (467 samples, 2.33%)</title><rect x="55.4" y="1669" width="27.5" height="15.0" fill="rgb(209,108,21)" rx="2" ry="2" />
<text  x="58.38" y="1679.5" >[..</text>
</g>
<g >
<title>GetHost (527 samples, 2.63%)</title><rect x="185.3" y="1973" width="31.0" height="15.0" fill="rgb(235,221,40)" rx="2" ry="2" />
<text  x="188.27" y="1983.5" >Ge..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.04%)</title><rect x="1185.9" y="1509" width="0.5" height="15.0" fill="rgb(235,63,8)" rx="2" ry="2" />
<text  x="1188.87" y="1519.5" ></text>
</g>
<g >
<title>Eigen::internal::general_matrix_vector_product&lt;long, float, Eigen::internal::const_blas_data_mapper&lt;float, long, 1&gt;, 1, false, float, Eigen::internal::const_blas_data_mapper&lt;float, long, 0&gt;, false, 0&gt;::run (307 samples, 1.53%)</title><rect x="223.1" y="1941" width="18.0" height="15.0" fill="rgb(229,198,44)" rx="2" ry="2" />
<text  x="226.05" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="215.7" y="1605" width="0.4" height="15.0" fill="rgb(231,12,27)" rx="2" ry="2" />
<text  x="218.68" y="1615.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (3 samples, 0.01%)</title><rect x="79.7" y="1429" width="0.2" height="15.0" fill="rgb(254,199,24)" rx="2" ry="2" />
<text  x="82.72" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="215.7" y="1509" width="0.4" height="15.0" fill="rgb(244,126,26)" rx="2" ry="2" />
<text  x="218.68" y="1519.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.25] (35 samples, 0.17%)</title><rect x="29.2" y="2053" width="2.0" height="15.0" fill="rgb(241,115,19)" rx="2" ry="2" />
<text  x="32.15" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (339 samples, 1.69%)</title><rect x="55.4" y="1093" width="20.0" height="15.0" fill="rgb(247,172,8)" rx="2" ry="2" />
<text  x="58.38" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (81 samples, 0.40%)</title><rect x="129.1" y="1701" width="4.8" height="15.0" fill="rgb(217,128,3)" rx="2" ry="2" />
<text  x="132.11" y="1711.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.01%)</title><rect x="497.5" y="1957" width="0.1" height="15.0" fill="rgb(241,199,38)" rx="2" ry="2" />
<text  x="500.51" y="1967.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (21 samples, 0.10%)</title><rect x="510.8" y="1861" width="1.3" height="15.0" fill="rgb(233,156,10)" rx="2" ry="2" />
<text  x="513.83" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (85 samples, 0.42%)</title><rect x="128.9" y="1733" width="5.0" height="15.0" fill="rgb(245,228,19)" rx="2" ry="2" />
<text  x="131.87" y="1743.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (5 samples, 0.02%)</title><rect x="1103.7" y="2037" width="0.3" height="15.0" fill="rgb(249,43,14)" rx="2" ry="2" />
<text  x="1106.72" y="2047.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (3 samples, 0.01%)</title><rect x="118.3" y="1909" width="0.1" height="15.0" fill="rgb(224,186,1)" rx="2" ry="2" />
<text  x="121.26" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (329 samples, 1.64%)</title><rect x="55.4" y="837" width="19.4" height="15.0" fill="rgb(241,175,23)" rx="2" ry="2" />
<text  x="58.38" y="847.5" ></text>
</g>
<g >
<title>__sanitizer::BlockingMutex::Unlock (9 samples, 0.04%)</title><rect x="69.5" y="37" width="0.6" height="15.0" fill="rgb(235,153,29)" rx="2" ry="2" />
<text  x="72.52" y="47.5" ></text>
</g>
<g >
<title>finish_task_switch (5 samples, 0.02%)</title><rect x="128.0" y="1829" width="0.3" height="15.0" fill="rgb(225,139,21)" rx="2" ry="2" />
<text  x="130.99" y="1839.5" ></text>
</g>
<g >
<title>__sanitizer::internal_munmap (3 samples, 0.01%)</title><rect x="87.9" y="1909" width="0.2" height="15.0" fill="rgb(252,161,16)" rx="2" ry="2" />
<text  x="90.91" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (80 samples, 0.40%)</title><rect x="139.4" y="1701" width="4.7" height="15.0" fill="rgb(217,143,19)" rx="2" ry="2" />
<text  x="142.42" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (8 samples, 0.04%)</title><rect x="1186.4" y="1605" width="0.5" height="15.0" fill="rgb(206,175,38)" rx="2" ry="2" />
<text  x="1189.40" y="1615.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (6 samples, 0.03%)</title><rect x="26.6" y="1925" width="0.3" height="15.0" fill="rgb(228,37,11)" rx="2" ry="2" />
<text  x="29.56" y="1935.5" ></text>
</g>
<g >
<title>fasttext::FastText::predictLine (510 samples, 2.55%)</title><rect x="540.9" y="1941" width="30.1" height="15.0" fill="rgb(242,109,13)" rx="2" ry="2" />
<text  x="543.95" y="1951.5" >fa..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="155.9" y="725" width="0.1" height="15.0" fill="rgb(237,143,25)" rx="2" ry="2" />
<text  x="158.86" y="735.5" ></text>
</g>
<g >
<title>__dynamic_cast (5 samples, 0.02%)</title><rect x="192.1" y="1621" width="0.2" height="15.0" fill="rgb(223,186,25)" rx="2" ry="2" />
<text  x="195.05" y="1631.5" ></text>
</g>
<g >
<title>fasttext::DenseMatrix::addRowToVector (1,250 samples, 6.24%)</title><rect x="241.6" y="1973" width="73.6" height="15.0" fill="rgb(245,139,35)" rx="2" ry="2" />
<text  x="244.56" y="1983.5" >fasttext..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="155.7" y="1733" width="0.2" height="15.0" fill="rgb(235,38,52)" rx="2" ry="2" />
<text  x="158.75" y="1743.5" ></text>
</g>
<g >
<title>Eigen::PlainObjectBase&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; &gt;::resize (8 samples, 0.04%)</title><rect x="380.8" y="1941" width="0.5" height="15.0" fill="rgb(233,168,21)" rx="2" ry="2" />
<text  x="383.82" y="1951.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (3 samples, 0.01%)</title><rect x="92.3" y="2021" width="0.2" height="15.0" fill="rgb(230,151,33)" rx="2" ry="2" />
<text  x="95.27" y="2031.5" ></text>
</g>
<g >
<title>expf32x (2 samples, 0.01%)</title><rect x="184.1" y="1973" width="0.1" height="15.0" fill="rgb(228,88,39)" rx="2" ry="2" />
<text  x="187.09" y="1983.5" ></text>
</g>
<g >
<title>generic_exec_single (20 samples, 0.10%)</title><rect x="947.1" y="1813" width="1.2" height="15.0" fill="rgb(237,90,21)" rx="2" ry="2" />
<text  x="950.13" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1185.6" y="1397" width="0.1" height="15.0" fill="rgb(236,45,19)" rx="2" ry="2" />
<text  x="1188.58" y="1407.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (3 samples, 0.01%)</title><rect x="143.9" y="1637" width="0.2" height="15.0" fill="rgb(237,151,22)" rx="2" ry="2" />
<text  x="146.90" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="156.0" y="805" width="0.1" height="15.0" fill="rgb(241,180,14)" rx="2" ry="2" />
<text  x="158.98" y="815.5" ></text>
</g>
<g >
<title>onmt::unicode::is_letter (8 samples, 0.04%)</title><rect x="735.2" y="1893" width="0.5" height="15.0" fill="rgb(238,172,27)" rx="2" ry="2" />
<text  x="738.20" y="1903.5" ></text>
</g>
<g >
<title>__asan::Allocator::Allocate (20 samples, 0.10%)</title><rect x="96.8" y="2037" width="1.2" height="15.0" fill="rgb(222,224,39)" rx="2" ry="2" />
<text  x="99.81" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="156.0" y="821" width="0.1" height="15.0" fill="rgb(231,187,5)" rx="2" ry="2" />
<text  x="158.98" y="831.5" ></text>
</g>
<g >
<title>smp_call_function_many (21 samples, 0.10%)</title><rect x="947.1" y="1845" width="1.2" height="15.0" fill="rgb(251,56,16)" rx="2" ry="2" />
<text  x="950.07" y="1855.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (2 samples, 0.01%)</title><rect x="138.4" y="1589" width="0.1" height="15.0" fill="rgb(246,192,42)" rx="2" ry="2" />
<text  x="141.36" y="1599.5" ></text>
</g>
<g >
<title>__asan::AsanThread::stack_bottom (2 samples, 0.01%)</title><rect x="607.0" y="1861" width="0.1" height="15.0" fill="rgb(209,17,14)" rx="2" ry="2" />
<text  x="609.95" y="1871.5" ></text>
</g>
<g >
<title>wake_up_q (13 samples, 0.06%)</title><rect x="30.3" y="1909" width="0.8" height="15.0" fill="rgb(232,0,35)" rx="2" ry="2" />
<text  x="33.33" y="1919.5" ></text>
</g>
<g >
<title>Eigen::internal::gemv_dense_selector&lt;2, 1, true&gt;::run&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; &gt; (317 samples, 1.58%)</title><rect x="222.5" y="1957" width="18.6" height="15.0" fill="rgb(232,97,21)" rx="2" ry="2" />
<text  x="225.46" y="1967.5" ></text>
</g>
<g >
<title>__dynamic_cast (5 samples, 0.02%)</title><rect x="162.1" y="1605" width="0.3" height="15.0" fill="rgb(237,103,44)" rx="2" ry="2" />
<text  x="165.11" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (336 samples, 1.68%)</title><rect x="55.4" y="1045" width="19.8" height="15.0" fill="rgb(254,161,53)" rx="2" ry="2" />
<text  x="58.38" y="1055.5" ></text>
</g>
<g >
<title>perf_event_mmap (2 samples, 0.01%)</title><rect x="1102.5" y="1925" width="0.1" height="15.0" fill="rgb(227,33,26)" rx="2" ry="2" />
<text  x="1105.48" y="1935.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (2 samples, 0.01%)</title><rect x="74.5" y="597" width="0.1" height="15.0" fill="rgb(228,70,20)" rx="2" ry="2" />
<text  x="77.48" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (9 samples, 0.04%)</title><rect x="1185.9" y="773" width="0.5" height="15.0" fill="rgb(207,227,52)" rx="2" ry="2" />
<text  x="1188.87" y="783.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt;,  (9 samples, 0.04%)</title><rect x="155.6" y="1957" width="0.5" height="15.0" fill="rgb(248,20,51)" rx="2" ry="2" />
<text  x="158.57" y="1967.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (4 samples, 0.02%)</title><rect x="54.7" y="1909" width="0.3" height="15.0" fill="rgb(253,190,14)" rx="2" ry="2" />
<text  x="57.73" y="1919.5" ></text>
</g>
<g >
<title>do_syscall_64 (3 samples, 0.01%)</title><rect x="1111.8" y="2005" width="0.2" height="15.0" fill="rgb(220,109,43)" rx="2" ry="2" />
<text  x="1114.79" y="2015.5" ></text>
</g>
<g >
<title>__asan_memcpy (7 samples, 0.03%)</title><rect x="579.1" y="1877" width="0.4" height="15.0" fill="rgb(210,78,21)" rx="2" ry="2" />
<text  x="582.14" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="155.9" y="805" width="0.1" height="15.0" fill="rgb(246,111,41)" rx="2" ry="2" />
<text  x="158.86" y="815.5" ></text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::get (44 samples, 0.22%)</title><rect x="121.9" y="1925" width="2.6" height="15.0" fill="rgb(217,145,0)" rx="2" ry="2" />
<text  x="124.92" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="215.9" y="1317" width="0.2" height="15.0" fill="rgb(230,45,41)" rx="2" ry="2" />
<text  x="218.92" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1185.6" y="1605" width="0.1" height="15.0" fill="rgb(239,154,10)" rx="2" ry="2" />
<text  x="1188.58" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="155.7" y="1077" width="0.2" height="15.0" fill="rgb(230,54,43)" rx="2" ry="2" />
<text  x="158.75" y="1087.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (28 samples, 0.14%)</title><rect x="1115.9" y="2037" width="1.6" height="15.0" fill="rgb(236,93,28)" rx="2" ry="2" />
<text  x="1118.86" y="2047.5" ></text>
</g>
<g >
<title>arch_get_unmapped_area_topdown (4 samples, 0.02%)</title><rect x="1101.7" y="1925" width="0.2" height="15.0" fill="rgb(214,56,9)" rx="2" ry="2" />
<text  x="1104.66" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (9 samples, 0.04%)</title><rect x="1185.9" y="149" width="0.5" height="15.0" fill="rgb(211,18,54)" rx="2" ry="2" />
<text  x="1188.87" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13 samples, 0.06%)</title><rect x="1187.0" y="405" width="0.8" height="15.0" fill="rgb(238,227,13)" rx="2" ry="2" />
<text  x="1189.99" y="415.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (10 samples, 0.05%)</title><rect x="213.2" y="1701" width="0.6" height="15.0" fill="rgb(246,72,29)" rx="2" ry="2" />
<text  x="216.21" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (14 samples, 0.07%)</title><rect x="1186.9" y="1557" width="0.9" height="15.0" fill="rgb(228,48,24)" rx="2" ry="2" />
<text  x="1189.94" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (4 samples, 0.02%)</title><rect x="128.9" y="1701" width="0.2" height="15.0" fill="rgb(235,92,39)" rx="2" ry="2" />
<text  x="131.87" y="1711.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (27 samples, 0.13%)</title><rect x="1101.5" y="2037" width="1.6" height="15.0" fill="rgb(243,79,50)" rx="2" ry="2" />
<text  x="1104.48" y="2047.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="195.5" y="1589" width="0.1" height="15.0" fill="rgb(210,72,15)" rx="2" ry="2" />
<text  x="198.47" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1186.5" y="53" width="0.4" height="15.0" fill="rgb(227,194,37)" rx="2" ry="2" />
<text  x="1189.52" y="63.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (4 samples, 0.02%)</title><rect x="592.5" y="1877" width="0.3" height="15.0" fill="rgb(223,98,27)" rx="2" ry="2" />
<text  x="595.52" y="1887.5" ></text>
</g>
<g >
<title>fasttext::HierarchicalSoftmaxLoss::dfs (4 samples, 0.02%)</title><rect x="570.8" y="1909" width="0.2" height="15.0" fill="rgb(205,0,36)" rx="2" ry="2" />
<text  x="573.77" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="155.7" y="1173" width="0.2" height="15.0" fill="rgb(242,44,8)" rx="2" ry="2" />
<text  x="158.75" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="155.9" y="693" width="0.1" height="15.0" fill="rgb(249,4,24)" rx="2" ry="2" />
<text  x="158.86" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1186.5" y="821" width="0.4" height="15.0" fill="rgb(250,166,25)" rx="2" ry="2" />
<text  x="1189.52" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1186.5" y="885" width="0.4" height="15.0" fill="rgb(251,153,15)" rx="2" ry="2" />
<text  x="1189.52" y="895.5" ></text>
</g>
<g >
<title>tlb_flush_mmu_free (2 samples, 0.01%)</title><rect x="767.3" y="1877" width="0.1" height="15.0" fill="rgb(234,161,14)" rx="2" ry="2" />
<text  x="770.26" y="1887.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.01%)</title><rect x="875.3" y="2021" width="0.2" height="15.0" fill="rgb(245,185,5)" rx="2" ry="2" />
<text  x="878.35" y="2031.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.01%)</title><rect x="801.3" y="2021" width="0.1" height="15.0" fill="rgb(225,78,11)" rx="2" ry="2" />
<text  x="804.26" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (85 samples, 0.42%)</title><rect x="161.8" y="1653" width="5.0" height="15.0" fill="rgb(234,86,31)" rx="2" ry="2" />
<text  x="164.76" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.02%)</title><rect x="183.3" y="1605" width="0.3" height="15.0" fill="rgb(234,227,5)" rx="2" ry="2" />
<text  x="186.33" y="1615.5" ></text>
</g>
<g >
<title>__pthread_getspecific (35 samples, 0.17%)</title><rect x="524.4" y="2037" width="2.1" height="15.0" fill="rgb(230,98,40)" rx="2" ry="2" />
<text  x="527.45" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1185.6" y="1493" width="0.1" height="15.0" fill="rgb(217,158,19)" rx="2" ry="2" />
<text  x="1188.58" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (13 samples, 0.06%)</title><rect x="1187.0" y="1237" width="0.8" height="15.0" fill="rgb(243,144,31)" rx="2" ry="2" />
<text  x="1189.99" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.01%)</title><rect x="216.2" y="1541" width="0.1" height="15.0" fill="rgb(224,63,17)" rx="2" ry="2" />
<text  x="219.16" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13 samples, 0.06%)</title><rect x="1187.0" y="389" width="0.8" height="15.0" fill="rgb(220,1,51)" rx="2" ry="2" />
<text  x="1189.99" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="155.7" y="1605" width="0.2" height="15.0" fill="rgb(249,192,28)" rx="2" ry="2" />
<text  x="158.75" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (7 samples, 0.03%)</title><rect x="214.9" y="1861" width="0.4" height="15.0" fill="rgb(226,101,11)" rx="2" ry="2" />
<text  x="217.92" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="1186.5" y="805" width="0.4" height="15.0" fill="rgb(237,65,12)" rx="2" ry="2" />
<text  x="1189.52" y="815.5" ></text>
</g>
<g >
<title>__pthread_mutex_lock (2 samples, 0.01%)</title><rect x="29.5" y="2037" width="0.1" height="15.0" fill="rgb(235,14,19)" rx="2" ry="2" />
<text  x="32.51" y="2047.5" ></text>
</g>
<g >
<title>fasttext::FastText::predict (3 samples, 0.01%)</title><rect x="539.9" y="1925" width="0.2" height="15.0" fill="rgb(239,127,19)" rx="2" ry="2" />
<text  x="542.95" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (9 samples, 0.04%)</title><rect x="1185.9" y="757" width="0.5" height="15.0" fill="rgb(208,109,49)" rx="2" ry="2" />
<text  x="1188.87" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (4 samples, 0.02%)</title><rect x="214.9" y="1845" width="0.3" height="15.0" fill="rgb(237,226,33)" rx="2" ry="2" />
<text  x="217.92" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.03%)</title><rect x="1186.5" y="1509" width="0.4" height="15.0" fill="rgb(206,71,43)" rx="2" ry="2" />
<text  x="1189.46" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (105 samples, 0.52%)</title><rect x="196.4" y="1669" width="6.2" height="15.0" fill="rgb(210,4,37)" rx="2" ry="2" />
<text  x="199.41" y="1679.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (11 samples, 0.05%)</title><rect x="817.4" y="1973" width="0.7" height="15.0" fill="rgb(243,48,53)" rx="2" ry="2" />
<text  x="820.41" y="1983.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (641 samples, 3.20%)</title><rect x="1147.7" y="2053" width="37.8" height="15.0" fill="rgb(224,68,27)" rx="2" ry="2" />
<text  x="1150.74" y="2063.5" >std..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (2 samples, 0.01%)</title><rect x="149.4" y="1797" width="0.2" height="15.0" fill="rgb(227,31,5)" rx="2" ry="2" />
<text  x="152.44" y="1807.5" ></text>
</g>
<g >
<title>smp_call_function_many (3 samples, 0.01%)</title><rect x="523.3" y="1845" width="0.1" height="15.0" fill="rgb(236,72,40)" rx="2" ry="2" />
<text  x="526.27" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (13 samples, 0.06%)</title><rect x="1187.0" y="277" width="0.8" height="15.0" fill="rgb(219,15,23)" rx="2" ry="2" />
<text  x="1189.99" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_subexpr_begin (2 samples, 0.01%)</title><rect x="183.1" y="1909" width="0.1" height="15.0" fill="rgb(254,83,2)" rx="2" ry="2" />
<text  x="186.09" y="1919.5" ></text>
</g>
<g >
<title>__dynamic_cast (4 samples, 0.02%)</title><rect x="199.7" y="1605" width="0.2" height="15.0" fill="rgb(251,198,7)" rx="2" ry="2" />
<text  x="202.71" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (5 samples, 0.02%)</title><rect x="182.3" y="1797" width="0.3" height="15.0" fill="rgb(224,109,7)" rx="2" ry="2" />
<text  x="185.33" y="1807.5" ></text>
</g>
<g >
<title>do_page_fault (28 samples, 0.14%)</title><rect x="500.6" y="1909" width="1.6" height="15.0" fill="rgb(249,127,18)" rx="2" ry="2" />
<text  x="503.58" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="215.7" y="1701" width="0.4" height="15.0" fill="rgb(223,43,39)" rx="2" ry="2" />
<text  x="218.68" y="1711.5" ></text>
</g>
<g >
<title>arch_tlb_finish_mmu (3 samples, 0.01%)</title><rect x="766.9" y="1909" width="0.2" height="15.0" fill="rgb(251,216,35)" rx="2" ry="2" />
<text  x="769.90" y="1919.5" ></text>
</g>
<g >
<title>__asan_memcpy (4 samples, 0.02%)</title><rect x="189.2" y="1557" width="0.2" height="15.0" fill="rgb(225,31,32)" rx="2" ry="2" />
<text  x="192.16" y="1567.5" ></text>
</g>
<g >
<title>__handle_mm_fault (29 samples, 0.14%)</title><rect x="694.8" y="1781" width="1.7" height="15.0" fill="rgb(231,130,10)" rx="2" ry="2" />
<text  x="697.77" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.02%)</title><rect x="155.9" y="1733" width="0.2" height="15.0" fill="rgb(214,3,16)" rx="2" ry="2" />
<text  x="158.86" y="1743.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (2 samples, 0.01%)</title><rect x="1123.0" y="2037" width="0.2" height="15.0" fill="rgb(233,201,50)" rx="2" ry="2" />
<text  x="1126.05" y="2047.5" ></text>
</g>
<g >
<title>RunFasttextClf (515 samples, 2.57%)</title><rect x="540.7" y="1957" width="30.4" height="15.0" fill="rgb(243,213,44)" rx="2" ry="2" />
<text  x="543.71" y="1967.5" >Ru..</text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (7 samples, 0.03%)</title><rect x="176.1" y="1749" width="0.5" height="15.0" fill="rgb(219,165,43)" rx="2" ry="2" />
<text  x="179.14" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1185.6" y="1797" width="0.1" height="15.0" fill="rgb(237,63,1)" rx="2" ry="2" />
<text  x="1188.58" y="1807.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::Unwind (2 samples, 0.01%)</title><rect x="194.4" y="1589" width="0.1" height="15.0" fill="rgb(208,190,2)" rx="2" ry="2" />
<text  x="197.41" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (6 samples, 0.03%)</title><rect x="155.7" y="1765" width="0.4" height="15.0" fill="rgb(226,187,23)" rx="2" ry="2" />
<text  x="158.75" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="155.9" y="453" width="0.1" height="15.0" fill="rgb(230,119,44)" rx="2" ry="2" />
<text  x="158.86" y="463.5" ></text>
</g>
<g >
<title>__dynamic_cast (8 samples, 0.04%)</title><rect x="203.3" y="1669" width="0.5" height="15.0" fill="rgb(208,157,52)" rx="2" ry="2" />
<text  x="206.31" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (11 samples, 0.05%)</title><rect x="215.7" y="1781" width="0.6" height="15.0" fill="rgb(239,213,44)" rx="2" ry="2" />
<text  x="218.68" y="1791.5" ></text>
</g>
<g >
<title>onmt::ITokenizer::tokenize (3,092 samples, 15.44%)</title><rect x="573.7" y="1941" width="182.2" height="15.0" fill="rgb(208,107,34)" rx="2" ry="2" />
<text  x="576.66" y="1951.5" >onmt::ITokenizer::token..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.01%)</title><rect x="1185.6" y="1301" width="0.1" height="15.0" fill="rgb(232,107,44)" rx="2" ry="2" />
<text  x="1188.58" y="1311.5" ></text>
</g>
<g >
<title>[libm-2.27.so] (4 samples, 0.02%)</title><rect x="1104.1" y="2037" width="0.2" height="15.0" fill="rgb(247,54,48)" rx="2" ry="2" />
<text  x="1107.07" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (369 samples, 1.84%)</title><rect x="55.4" y="1237" width="21.7" height="15.0" fill="rgb(239,108,22)" rx="2" ry="2" />
<text  x="58.38" y="1247.5" >[..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="216.0" y="1173" width="0.1" height="15.0" fill="rgb(214,73,18)" rx="2" ry="2" />
<text  x="218.98" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (78 samples, 0.39%)</title><rect x="203.0" y="1701" width="4.6" height="15.0" fill="rgb(244,146,53)" rx="2" ry="2" />
<text  x="206.01" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="155.9" y="1701" width="0.2" height="15.0" fill="rgb(223,166,28)" rx="2" ry="2" />
<text  x="158.86" y="1711.5" ></text>
</g>
<g >
<title>TSlinkClustering::ClusterBatch (3,067 samples, 15.32%)</title><rect x="336.9" y="1989" width="180.7" height="15.0" fill="rgb(219,117,20)" rx="2" ry="2" />
<text  x="339.85" y="1999.5" >TSlinkClustering::Clust..</text>
</g>
<g >
<title>TDocument::FromJson (2 samples, 0.01%)</title><rect x="118.8" y="1973" width="0.1" height="15.0" fill="rgb(233,124,6)" rx="2" ry="2" />
<text  x="121.79" y="1983.5" ></text>
</g>
<g >
<title>memcpy (6 samples, 0.03%)</title><rect x="579.6" y="1877" width="0.4" height="15.0" fill="rgb(249,82,21)" rx="2" ry="2" />
<text  x="582.61" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (328 samples, 1.64%)</title><rect x="55.4" y="725" width="19.3" height="15.0" fill="rgb(221,185,34)" rx="2" ry="2" />
<text  x="58.38" y="735.5" ></text>
</g>
<g >
<title>page_fault (4 samples, 0.02%)</title><rect x="1103.8" y="2021" width="0.2" height="15.0" fill="rgb(231,27,30)" rx="2" ry="2" />
<text  x="1106.78" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (5 samples, 0.02%)</title><rect x="183.3" y="1397" width="0.3" height="15.0" fill="rgb(209,208,21)" rx="2" ry="2" />
<text  x="186.33" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (9 samples, 0.04%)</title><rect x="1185.9" y="1349" width="0.5" height="15.0" fill="rgb(250,67,14)" rx="2" ry="2" />
<text  x="1188.87" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.02%)</title><rect x="155.9" y="1061" width="0.2" height="15.0" fill="rgb(217,157,48)" rx="2" ry="2" />
<text  x="158.86" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="1185.6" y="1621" width="0.1" height="15.0" fill="rgb(220,58,40)" rx="2" ry="2" />
<text  x="1188.58" y="1631.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (2 samples, 0.01%)</title><rect x="186.2" y="1637" width="0.1" height="15.0" fill="rgb(245,209,13)" rx="2" ry="2" />
<text  x="189.16" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (9 samples, 0.04%)</title><rect x="1185.9" y="1493" width="0.5" height="15.0" fill="rgb(254,33,25)" rx="2" ry="2" />
<text  x="1188.87" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (7 samples, 0.03%)</title><rect x="215.7" y="1557" width="0.4" height="15.0" fill="rgb(213,2,9)" rx="2" ry="2" />
<text  x="218.68" y="1567.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.01%)</title><rect x="80.5" y="1445" width="0.1" height="15.0" fill="rgb(217,61,23)" rx="2" ry="2" />
<text  x="83.49" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="155.9" y="565" width="0.1" height="15.0" fill="rgb(211,151,29)" rx="2" ry="2" />
<text  x="158.86" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (82 samples, 0.41%)</title><rect x="202.8" y="1781" width="4.9" height="15.0" fill="rgb(217,225,43)" rx="2" ry="2" />
<text  x="205.84" y="1791.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (2 samples, 0.01%)</title><rect x="168.8" y="1589" width="0.1" height="15.0" fill="rgb(227,33,0)" rx="2" ry="2" />
<text  x="171.83" y="1599.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (26 samples, 0.13%)</title><rect x="1101.5" y="2005" width="1.6" height="15.0" fill="rgb(224,192,29)" rx="2" ry="2" />
<text  x="1104.54" y="2015.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform_primary&lt;char const*&gt; (44 samples, 0.22%)</title><rect x="204.8" y="1653" width="2.6" height="15.0" fill="rgb(230,25,54)" rx="2" ry="2" />
<text  x="207.78" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (5 samples, 0.02%)</title><rect x="207.7" y="1749" width="0.3" height="15.0" fill="rgb(232,84,16)" rx="2" ry="2" />
<text  x="210.73" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (11 samples, 0.05%)</title><rect x="1185.8" y="1781" width="0.6" height="15.0" fill="rgb(240,93,40)" rx="2" ry="2" />
<text  x="1188.76" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="155.9" y="613" width="0.1" height="15.0" fill="rgb(237,148,9)" rx="2" ry="2" />
<text  x="158.86" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (7 samples, 0.03%)</title><rect x="1186.5" y="1221" width="0.4" height="15.0" fill="rgb(222,57,37)" rx="2" ry="2" />
<text  x="1189.46" y="1231.5" ></text>
</g>
<g >
<title>std::operator&gt;&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (13 samples, 0.06%)</title><rect x="812.8" y="2005" width="0.7" height="15.0" fill="rgb(254,151,47)" rx="2" ry="2" />
<text  x="815.76" y="2015.5" ></text>
</g>
<g >
<title>arch_tlb_finish_mmu (2 samples, 0.01%)</title><rect x="85.7" y="1717" width="0.1" height="15.0" fill="rgb(205,153,49)" rx="2" ry="2" />
<text  x="88.67" y="1727.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (3 samples, 0.01%)</title><rect x="82.3" y="1621" width="0.1" height="15.0" fill="rgb(246,194,20)" rx="2" ry="2" />
<text  x="85.25" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (90 samples, 0.45%)</title><rect x="149.7" y="1781" width="5.3" height="15.0" fill="rgb(232,55,23)" rx="2" ry="2" />
<text  x="152.68" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (7 samples, 0.03%)</title><rect x="182.3" y="1813" width="0.4" height="15.0" fill="rgb(239,214,45)" rx="2" ry="2" />
<text  x="185.33" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (174 samples, 0.87%)</title><rect x="185.9" y="1749" width="10.3" height="15.0" fill="rgb(239,73,23)" rx="2" ry="2" />
<text  x="188.92" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (10 samples, 0.05%)</title><rect x="1185.8" y="1557" width="0.6" height="15.0" fill="rgb(226,0,7)" rx="2" ry="2" />
<text  x="1188.82" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (2 samples, 0.01%)</title><rect x="182.1" y="1845" width="0.2" height="15.0" fill="rgb(223,104,26)" rx="2" ry="2" />
<text  x="185.15" y="1855.5" ></text>
</g>
<g >
<title>release_pages (3 samples, 0.01%)</title><rect x="1103.4" y="1861" width="0.2" height="15.0" fill="rgb(225,118,53)" rx="2" ry="2" />
<text  x="1106.42" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (6 samples, 0.03%)</title><rect x="1186.5" y="1125" width="0.4" height="15.0" fill="rgb(211,11,47)" rx="2" ry="2" />
<text  x="1189.52" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (13 samples, 0.06%)</title><rect x="1187.0" y="693" width="0.8" height="15.0" fill="rgb(225,29,15)" rx="2" ry="2" />
<text  x="1189.99" y="703.5" ></text>
</g>
<g >
<title>do_page_fault (110 samples, 0.55%)</title><rect x="22.6" y="2021" width="6.4" height="15.0" fill="rgb(231,202,46)" rx="2" ry="2" />
<text  x="25.55" y="2031.5" ></text>
</g>
<g >
<title>__asan::QuarantineCallback::Recycle (2 samples, 0.01%)</title><rect x="80.7" y="1493" width="0.1" height="15.0" fill="rgb(208,222,20)" rx="2" ry="2" />
<text  x="83.72" y="1503.5" ></text>
</g>
<g >
<title>__do_munmap (2 samples, 0.01%)</title><rect x="76.8" y="1125" width="0.1" height="15.0" fill="rgb(243,88,45)" rx="2" ry="2" />
<text  x="79.77" y="1135.5" ></text>
</g>
<g >
<title>[unknown] (335 samples, 1.67%)</title><rect x="55.4" y="981" width="19.7" height="15.0" fill="rgb(239,45,27)" rx="2" ry="2" />
<text  x="58.38" y="991.5" ></text>
</g>
<g >
<title>__asan::QuickCheckForUnpoisonedRegion (7 samples, 0.03%)</title><rect x="1121.9" y="2037" width="0.4" height="15.0" fill="rgb(215,68,16)" rx="2" ry="2" />
<text  x="1124.87" y="2047.5" ></text>
</g>
<g >
<title>_raw_spin_lock (4 samples, 0.02%)</title><rect x="501.1" y="1845" width="0.2" height="15.0" fill="rgb(226,113,47)" rx="2" ry="2" />
<text  x="504.11" y="1855.5" ></text>
</g>
<g >
<title>do_page_fault (4 samples, 0.02%)</title><rect x="1189.4" y="2005" width="0.2" height="15.0" fill="rgb(252,215,53)" rx="2" ry="2" />
<text  x="1192.35" y="2015.5" ></text>
</g>
<g >
<title>__madvise (2 samples, 0.01%)</title><rect x="1007.7" y="2053" width="0.1" height="15.0" fill="rgb(246,54,33)" rx="2" ry="2" />
<text  x="1010.65" y="2063.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::basic_json (2 samples, 0.01%)</title><rect x="519.9" y="1829" width="0.1" height="15.0" fill="rgb(249,117,12)" rx="2" ry="2" />
<text  x="522.91" y="1839.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (5 samples, 0.02%)</title><rect x="512.2" y="1861" width="0.3" height="15.0" fill="rgb(209,183,37)" rx="2" ry="2" />
<text  x="515.19" y="1871.5" ></text>
</g>
<g >
<title>fasttext::Vector::mul (49 samples, 0.24%)</title><rect x="802.0" y="2037" width="2.9" height="15.0" fill="rgb(205,19,52)" rx="2" ry="2" />
<text  x="805.03" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (474 samples, 2.37%)</title><rect x="55.4" y="1685" width="27.9" height="15.0" fill="rgb(215,107,45)" rx="2" ry="2" />
<text  x="58.38" y="1695.5" >[..</text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::DoRecycle (2 samples, 0.01%)</title><rect x="82.1" y="1605" width="0.1" height="15.0" fill="rgb(242,11,42)" rx="2" ry="2" />
<text  x="85.08" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (59 samples, 0.29%)</title><rect x="805.0" y="2021" width="3.5" height="15.0" fill="rgb(254,130,1)" rx="2" ry="2" />
<text  x="807.98" y="2031.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (10 samples, 0.05%)</title><rect x="201.4" y="1605" width="0.6" height="15.0" fill="rgb(217,197,26)" rx="2" ry="2" />
<text  x="204.42" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.01%)</title><rect x="155.7" y="1285" width="0.2" height="15.0" fill="rgb(254,85,9)" rx="2" ry="2" />
<text  x="158.75" y="1295.5" ></text>
</g>
<g >
<title>[unknown] (319 samples, 1.59%)</title><rect x="55.4" y="389" width="18.8" height="15.0" fill="rgb(247,66,34)" rx="2" ry="2" />
<text  x="58.38" y="399.5" ></text>
</g>
<g >
<title>unmap_single_vma (5 samples, 0.02%)</title><rect x="1103.3" y="1925" width="0.3" height="15.0" fill="rgb(254,201,38)" rx="2" ry="2" />
<text  x="1106.31" y="1935.5" ></text>
</g>
<g >
<title>native_flush_tlb_others (23 samples, 0.11%)</title><rect x="947.1" y="1893" width="1.3" height="15.0" fill="rgb(245,87,31)" rx="2" ry="2" />
<text  x="950.07" y="1903.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (6 samples, 0.03%)</title><rect x="691.4" y="1845" width="0.4" height="15.0" fill="rgb(243,80,16)" rx="2" ry="2" />
<text  x="694.41" y="1855.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (2 samples, 0.01%)</title><rect x="154.4" y="1669" width="0.1" height="15.0" fill="rgb(246,198,1)" rx="2" ry="2" />
<text  x="157.39" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (369 samples, 1.84%)</title><rect x="185.9" y="1797" width="21.8" height="15.0" fill="rgb(230,223,12)" rx="2" ry="2" />
<text  x="188.92" y="1807.5" >s..</text>
</g>
<g >
<title>operator delete (4 samples, 0.02%)</title><rect x="736.6" y="1893" width="0.2" height="15.0" fill="rgb(235,167,23)" rx="2" ry="2" />
<text  x="739.55" y="1903.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.01%)</title><rect x="76.5" y="1157" width="0.2" height="15.0" fill="rgb(235,16,47)" rx="2" ry="2" />
<text  x="79.54" y="1167.5" ></text>
</g>
<g >
<title>page_fault (2 samples, 0.01%)</title><rect x="119.2" y="1973" width="0.1" height="15.0" fill="rgb(209,7,13)" rx="2" ry="2" />
<text  x="122.21" y="1983.5" ></text>
</g>
<g >
<title>__asan::AsanThread::stack_bottom (2 samples, 0.01%)</title><rect x="241.1" y="1957" width="0.2" height="15.0" fill="rgb(224,17,36)" rx="2" ry="2" />
<text  x="244.14" y="1967.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id@plt (2 samples, 0.01%)</title><rect x="195.4" y="1589" width="0.1" height="15.0" fill="rgb(212,176,46)" rx="2" ry="2" />
<text  x="198.35" y="1599.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (19 samples, 0.09%)</title><rect x="1155.2" y="2037" width="1.1" height="15.0" fill="rgb(230,212,50)" rx="2" ry="2" />
<text  x="1158.17" y="2047.5" ></text>
</g>
<g >
<title>fasttext::Matrix::size (42 samples, 0.21%)</title><rect x="327.5" y="1973" width="2.5" height="15.0" fill="rgb(240,165,27)" rx="2" ry="2" />
<text  x="330.54" y="1983.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::FastUnwindStack (2 samples, 0.01%)</title><rect x="152.9" y="1669" width="0.1" height="15.0" fill="rgb(235,80,42)" rx="2" ry="2" />
<text  x="155.92" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (524 samples, 2.62%)</title><rect x="55.4" y="1845" width="30.9" height="15.0" fill="rgb(226,170,50)" rx="2" ry="2" />
<text  x="58.38" y="1855.5" >[u..</text>
</g>
<g >
<title>page_fault (4 samples, 0.02%)</title><rect x="1189.4" y="2021" width="0.2" height="15.0" fill="rgb(237,90,27)" rx="2" ry="2" />
<text  x="1192.35" y="2031.5" ></text>
</g>
<g >
<title>__lsan::CollectLeaksCb (3 samples, 0.01%)</title><rect x="520.8" y="2037" width="0.2" height="15.0" fill="rgb(238,48,3)" rx="2" ry="2" />
<text  x="523.79" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (430 samples, 2.15%)</title><rect x="156.4" y="1813" width="25.3" height="15.0" fill="rgb(242,0,15)" rx="2" ry="2" />
<text  x="159.39" y="1823.5" >s..</text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (81 samples, 0.40%)</title><rect x="156.9" y="1589" width="4.8" height="15.0" fill="rgb(227,87,34)" rx="2" ry="2" />
<text  x="159.93" y="1599.5" ></text>
</g>
<g >
<title>native_flush_tlb_others (4 samples, 0.02%)</title><rect x="523.3" y="1893" width="0.2" height="15.0" fill="rgb(221,47,46)" rx="2" ry="2" />
<text  x="526.27" y="1903.5" ></text>
</g>
<g >
<title>Preprocess (5 samples, 0.02%)</title><rect x="43.9" y="2037" width="0.3" height="15.0" fill="rgb(229,99,41)" rx="2" ry="2" />
<text  x="46.95" y="2047.5" ></text>
</g>
</g>
</svg>
