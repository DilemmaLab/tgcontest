<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="2134" onload="init(evt)" viewBox="0 0 1200 2134" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="2134.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="2117" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="2117" > </text>
<g id="frames">
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="213.2" y="1189" width="0.2" height="15.0" fill="rgb(229,193,49)" rx="2" ry="2" />
<text  x="216.19" y="1199.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="741" width="0.4" height="15.0" fill="rgb(232,126,39)" rx="2" ry="2" />
<text  x="87.22" y="751.5" ></text>
</g>
<g >
<title>[unknown] (17 samples, 0.28%)</title><rect x="871.7" y="2021" width="3.3" height="15.0" fill="rgb(231,77,49)" rx="2" ry="2" />
<text  x="874.67" y="2031.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_Alloc_node&gt; (1 samples, 0.02%)</title><rect x="585.3" y="1829" width="0.2" height="15.0" fill="rgb(211,8,49)" rx="2" ry="2" />
<text  x="588.29" y="1839.5" ></text>
</g>
<g >
<title>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::dump (1 samples, 0.02%)</title><rect x="584.5" y="1989" width="0.2" height="15.0" fill="rgb(210,69,45)" rx="2" ry="2" />
<text  x="587.51" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (87 samples, 1.44%)</title><rect x="138.8" y="1765" width="16.9" height="15.0" fill="rgb(247,112,13)" rx="2" ry="2" />
<text  x="141.77" y="1775.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (8 samples, 0.13%)</title><rect x="84.8" y="2005" width="1.6" height="15.0" fill="rgb(232,43,23)" rx="2" ry="2" />
<text  x="87.81" y="2015.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="748.4" y="1845" width="0.1" height="15.0" fill="rgb(217,130,51)" rx="2" ry="2" />
<text  x="751.35" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.6" y="1717" width="0.2" height="15.0" fill="rgb(210,128,43)" rx="2" ry="2" />
<text  x="141.58" y="1727.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (5 samples, 0.08%)</title><rect x="165.5" y="1669" width="0.9" height="15.0" fill="rgb(208,2,48)" rx="2" ry="2" />
<text  x="168.46" y="1679.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;std::unique_ptr&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;  (1,396 samples, 23.05%)</title><rect x="585.9" y="2005" width="271.9" height="15.0" fill="rgb(245,191,30)" rx="2" ry="2" />
<text  x="588.88" y="2015.5" >std::_Function_handler&lt;std::unique_p..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.1" y="981" width="0.2" height="15.0" fill="rgb(226,122,24)" rx="2" ry="2" />
<text  x="1167.09" y="991.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.03%)</title><rect x="116.0" y="1605" width="0.4" height="15.0" fill="rgb(231,63,41)" rx="2" ry="2" />
<text  x="118.98" y="1615.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (1 samples, 0.02%)</title><rect x="203.1" y="1669" width="0.2" height="15.0" fill="rgb(239,51,33)" rx="2" ry="2" />
<text  x="206.06" y="1679.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (1 samples, 0.02%)</title><rect x="860.6" y="1941" width="0.2" height="15.0" fill="rgb(216,63,46)" rx="2" ry="2" />
<text  x="863.57" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="1253" width="0.4" height="15.0" fill="rgb(253,136,11)" rx="2" ry="2" />
<text  x="87.22" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_assertion (1 samples, 0.02%)</title><rect x="155.7" y="1701" width="0.2" height="15.0" fill="rgb(220,213,46)" rx="2" ry="2" />
<text  x="158.72" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1164.5" y="1557" width="0.6" height="15.0" fill="rgb(251,137,20)" rx="2" ry="2" />
<text  x="1167.48" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_quantifier (1 samples, 0.02%)</title><rect x="211.8" y="1797" width="0.2" height="15.0" fill="rgb(250,197,5)" rx="2" ry="2" />
<text  x="214.83" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.1" y="293" width="0.2" height="15.0" fill="rgb(209,81,13)" rx="2" ry="2" />
<text  x="1167.09" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.1" y="917" width="0.2" height="15.0" fill="rgb(242,224,21)" rx="2" ry="2" />
<text  x="1168.06" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (36 samples, 0.59%)</title><rect x="196.2" y="1701" width="7.1" height="15.0" fill="rgb(218,121,28)" rx="2" ry="2" />
<text  x="199.24" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1164.5" y="197" width="0.6" height="15.0" fill="rgb(240,136,12)" rx="2" ry="2" />
<text  x="1167.48" y="207.5" ></text>
</g>
<g >
<title>__do_page_fault (33 samples, 0.54%)</title><rect x="426.9" y="1909" width="6.4" height="15.0" fill="rgb(248,137,15)" rx="2" ry="2" />
<text  x="429.91" y="1919.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="711.1" y="1749" width="0.2" height="15.0" fill="rgb(238,98,23)" rx="2" ry="2" />
<text  x="714.14" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.3" y="725" width="0.2" height="15.0" fill="rgb(214,188,54)" rx="2" ry="2" />
<text  x="1167.28" y="735.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="345.7" y="1941" width="0.2" height="15.0" fill="rgb(236,130,31)" rx="2" ry="2" />
<text  x="348.67" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.2" y="837" width="0.2" height="15.0" fill="rgb(250,84,18)" rx="2" ry="2" />
<text  x="13.19" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1164.5" y="1525" width="0.6" height="15.0" fill="rgb(213,2,24)" rx="2" ry="2" />
<text  x="1167.48" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (1 samples, 0.02%)</title><rect x="168.2" y="1877" width="0.2" height="15.0" fill="rgb(206,171,20)" rx="2" ry="2" />
<text  x="171.19" y="1887.5" ></text>
</g>
<g >
<title>cfree (3 samples, 0.05%)</title><rect x="106.4" y="1589" width="0.6" height="15.0" fill="rgb(245,36,50)" rx="2" ry="2" />
<text  x="109.43" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.5" y="965" width="0.1" height="15.0" fill="rgb(211,93,0)" rx="2" ry="2" />
<text  x="1168.45" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1164.5" y="821" width="0.6" height="15.0" fill="rgb(212,160,18)" rx="2" ry="2" />
<text  x="1167.48" y="831.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="1045" width="0.4" height="15.0" fill="rgb(205,102,48)" rx="2" ry="2" />
<text  x="87.22" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.1" y="1605" width="0.2" height="15.0" fill="rgb(236,121,11)" rx="2" ry="2" />
<text  x="1167.09" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (46 samples, 0.76%)</title><rect x="170.3" y="1717" width="9.0" height="15.0" fill="rgb(245,137,0)" rx="2" ry="2" />
<text  x="173.33" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (1 samples, 0.02%)</title><rect x="131.6" y="1749" width="0.2" height="15.0" fill="rgb(216,207,10)" rx="2" ry="2" />
<text  x="134.57" y="1759.5" ></text>
</g>
<g >
<title>handle_mm_fault (2 samples, 0.03%)</title><rect x="676.7" y="1813" width="0.3" height="15.0" fill="rgb(229,144,12)" rx="2" ry="2" />
<text  x="679.66" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.2" y="1701" width="0.2" height="15.0" fill="rgb(231,196,31)" rx="2" ry="2" />
<text  x="13.19" y="1711.5" ></text>
</g>
<g >
<title>__libc_start_main (2,548 samples, 42.07%)</title><rect x="89.1" y="2037" width="496.4" height="15.0" fill="rgb(210,47,7)" rx="2" ry="2" />
<text  x="92.10" y="2047.5" >__libc_start_main</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="213.4" y="1605" width="0.2" height="15.0" fill="rgb(241,166,26)" rx="2" ry="2" />
<text  x="216.39" y="1615.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (2 samples, 0.03%)</title><rect x="201.7" y="1653" width="0.4" height="15.0" fill="rgb(215,118,29)" rx="2" ry="2" />
<text  x="204.70" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.2" y="469" width="0.2" height="15.0" fill="rgb(245,25,5)" rx="2" ry="2" />
<text  x="13.19" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.6" y="693" width="0.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="141.58" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_subexpr_begin (1 samples, 0.02%)</title><rect x="196.0" y="1749" width="0.2" height="15.0" fill="rgb(236,57,40)" rx="2" ry="2" />
<text  x="199.05" y="1759.5" ></text>
</g>
<g >
<title>fasttext::Loss::predict (1 samples, 0.02%)</title><rect x="84.6" y="2005" width="0.2" height="15.0" fill="rgb(243,78,37)" rx="2" ry="2" />
<text  x="87.61" y="2015.5" ></text>
</g>
<g >
<title>malloc (10 samples, 0.17%)</title><rect x="868.0" y="2037" width="1.9" height="15.0" fill="rgb(208,187,26)" rx="2" ry="2" />
<text  x="870.97" y="2047.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.02%)</title><rect x="228.8" y="1989" width="0.2" height="15.0" fill="rgb(217,78,6)" rx="2" ry="2" />
<text  x="231.78" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="169.0" y="1477" width="0.2" height="15.0" fill="rgb(221,100,35)" rx="2" ry="2" />
<text  x="171.97" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.3" y="725" width="0.2" height="15.0" fill="rgb(231,133,19)" rx="2" ry="2" />
<text  x="1168.26" y="735.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="949" width="0.4" height="15.0" fill="rgb(248,81,7)" rx="2" ry="2" />
<text  x="87.22" y="959.5" ></text>
</g>
<g >
<title>do_page_fault (3 samples, 0.05%)</title><rect x="860.2" y="2005" width="0.6" height="15.0" fill="rgb(226,35,2)" rx="2" ry="2" />
<text  x="863.18" y="2015.5" ></text>
</g>
<g >
<title>onmt::unicode::get_case@plt (5 samples, 0.08%)</title><rect x="754.6" y="1893" width="1.0" height="15.0" fill="rgb(205,201,47)" rx="2" ry="2" />
<text  x="757.59" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.3" y="1557" width="0.2" height="15.0" fill="rgb(232,182,1)" rx="2" ry="2" />
<text  x="1168.26" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.3" y="1141" width="0.2" height="15.0" fill="rgb(208,44,3)" rx="2" ry="2" />
<text  x="1167.28" y="1151.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::getSubwords (8 samples, 0.13%)</title><rect x="558.4" y="1973" width="1.6" height="15.0" fill="rgb(246,169,0)" rx="2" ry="2" />
<text  x="561.41" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="213.4" y="1445" width="0.2" height="15.0" fill="rgb(228,87,50)" rx="2" ry="2" />
<text  x="216.39" y="1455.5" ></text>
</g>
<g >
<title>ksys_read (5 samples, 0.08%)</title><rect x="88.1" y="1973" width="1.0" height="15.0" fill="rgb(218,223,4)" rx="2" ry="2" />
<text  x="91.12" y="1983.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (32 samples, 0.53%)</title><rect x="1150.6" y="2037" width="6.3" height="15.0" fill="rgb(215,126,44)" rx="2" ry="2" />
<text  x="1153.65" y="2047.5" ></text>
</g>
<g >
<title>futex_wait (2 samples, 0.03%)</title><rect x="103.5" y="1893" width="0.4" height="15.0" fill="rgb(212,3,45)" rx="2" ry="2" />
<text  x="106.51" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.2" y="213" width="0.2" height="15.0" fill="rgb(219,138,3)" rx="2" ry="2" />
<text  x="13.19" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.3" y="165" width="0.2" height="15.0" fill="rgb(217,209,46)" rx="2" ry="2" />
<text  x="1168.26" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.1" y="1525" width="0.2" height="15.0" fill="rgb(251,2,52)" rx="2" ry="2" />
<text  x="1167.09" y="1535.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (2 samples, 0.03%)</title><rect x="846.7" y="1893" width="0.4" height="15.0" fill="rgb(213,216,40)" rx="2" ry="2" />
<text  x="849.73" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.5" y="853" width="0.1" height="15.0" fill="rgb(235,204,40)" rx="2" ry="2" />
<text  x="1168.45" y="863.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="997" width="0.4" height="15.0" fill="rgb(219,203,27)" rx="2" ry="2" />
<text  x="87.22" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_try_char (1 samples, 0.02%)</title><rect x="118.9" y="1733" width="0.2" height="15.0" fill="rgb(240,46,19)" rx="2" ry="2" />
<text  x="121.90" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.5" y="565" width="0.1" height="15.0" fill="rgb(241,126,50)" rx="2" ry="2" />
<text  x="1168.45" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="168.4" y="1749" width="0.4" height="15.0" fill="rgb(248,114,33)" rx="2" ry="2" />
<text  x="171.39" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (152 samples, 2.51%)</title><rect x="138.8" y="1893" width="29.6" height="15.0" fill="rgb(221,71,16)" rx="2" ry="2" />
<text  x="141.77" y="1903.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.1" y="101" width="0.2" height="15.0" fill="rgb(241,173,54)" rx="2" ry="2" />
<text  x="1167.09" y="111.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="117" width="0.4" height="15.0" fill="rgb(249,64,33)" rx="2" ry="2" />
<text  x="87.22" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1164.5" y="885" width="0.6" height="15.0" fill="rgb(248,48,13)" rx="2" ry="2" />
<text  x="1167.48" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.5" y="1653" width="0.1" height="15.0" fill="rgb(206,193,51)" rx="2" ry="2" />
<text  x="1168.45" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="213.4" y="1621" width="0.2" height="15.0" fill="rgb(219,177,42)" rx="2" ry="2" />
<text  x="216.39" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.2" y="853" width="0.2" height="15.0" fill="rgb(219,178,16)" rx="2" ry="2" />
<text  x="13.19" y="863.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="1365" width="0.4" height="15.0" fill="rgb(215,97,48)" rx="2" ry="2" />
<text  x="87.22" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.5" y="1381" width="0.1" height="15.0" fill="rgb(231,136,37)" rx="2" ry="2" />
<text  x="1168.45" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="213.2" y="1077" width="0.2" height="15.0" fill="rgb(233,83,29)" rx="2" ry="2" />
<text  x="216.19" y="1087.5" ></text>
</g>
<g >
<title>__do_munmap (1 samples, 0.02%)</title><rect x="583.1" y="1909" width="0.2" height="15.0" fill="rgb(221,91,51)" rx="2" ry="2" />
<text  x="586.15" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1165.1" y="1877" width="0.4" height="15.0" fill="rgb(207,74,4)" rx="2" ry="2" />
<text  x="1168.06" y="1887.5" ></text>
</g>
<g >
<title>__dynamic_cast (8 samples, 0.13%)</title><rect x="112.1" y="1621" width="1.5" height="15.0" fill="rgb(233,84,2)" rx="2" ry="2" />
<text  x="115.08" y="1631.5" ></text>
</g>
<g >
<title>std::istream::sentry::sentry (1 samples, 0.02%)</title><rect x="872.3" y="2005" width="0.2" height="15.0" fill="rgb(248,11,41)" rx="2" ry="2" />
<text  x="875.26" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="213.0" y="1845" width="0.6" height="15.0" fill="rgb(228,222,34)" rx="2" ry="2" />
<text  x="216.00" y="1855.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (2 samples, 0.03%)</title><rect x="160.2" y="1637" width="0.4" height="15.0" fill="rgb(216,115,19)" rx="2" ry="2" />
<text  x="163.20" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.3" y="437" width="0.2" height="15.0" fill="rgb(244,152,13)" rx="2" ry="2" />
<text  x="1168.26" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.3" y="1429" width="0.2" height="15.0" fill="rgb(220,39,22)" rx="2" ry="2" />
<text  x="1168.26" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (1 samples, 0.02%)</title><rect x="168.0" y="1765" width="0.2" height="15.0" fill="rgb(213,155,18)" rx="2" ry="2" />
<text  x="171.00" y="1775.5" ></text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.05%)</title><rect x="192.3" y="1621" width="0.6" height="15.0" fill="rgb(218,125,38)" rx="2" ry="2" />
<text  x="195.35" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.3" y="853" width="0.2" height="15.0" fill="rgb(242,136,31)" rx="2" ry="2" />
<text  x="1167.28" y="863.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="159.4" y="1653" width="0.2" height="15.0" fill="rgb(245,173,47)" rx="2" ry="2" />
<text  x="162.42" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.1" y="1573" width="0.2" height="15.0" fill="rgb(248,204,31)" rx="2" ry="2" />
<text  x="1167.09" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="169.0" y="981" width="0.2" height="15.0" fill="rgb(252,119,28)" rx="2" ry="2" />
<text  x="171.97" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="213.4" y="837" width="0.2" height="15.0" fill="rgb(205,65,19)" rx="2" ry="2" />
<text  x="216.39" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.5" y="837" width="0.1" height="15.0" fill="rgb(244,74,23)" rx="2" ry="2" />
<text  x="1168.45" y="847.5" ></text>
</g>
<g >
<title>handle_mm_fault (3 samples, 0.05%)</title><rect x="82.9" y="1973" width="0.5" height="15.0" fill="rgb(219,108,33)" rx="2" ry="2" />
<text  x="85.86" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (38 samples, 0.63%)</title><rect x="179.3" y="1733" width="7.4" height="15.0" fill="rgb(208,185,49)" rx="2" ry="2" />
<text  x="182.30" y="1743.5" ></text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (1 samples, 0.02%)</title><rect x="41.2" y="1957" width="0.2" height="15.0" fill="rgb(243,24,34)" rx="2" ry="2" />
<text  x="44.17" y="1967.5" ></text>
</g>
<g >
<title>onmt::Tokenizer::tokenize_text (547 samples, 9.03%)</title><rect x="642.0" y="1893" width="106.5" height="15.0" fill="rgb(248,40,38)" rx="2" ry="2" />
<text  x="644.98" y="1903.5" >onmt::Tokeniz..</text>
</g>
<g >
<title>std::operator&gt;&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;@plt (2 samples, 0.03%)</title><rect x="582.8" y="1973" width="0.3" height="15.0" fill="rgb(249,27,23)" rx="2" ry="2" />
<text  x="585.76" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="1349" width="0.4" height="15.0" fill="rgb(252,111,51)" rx="2" ry="2" />
<text  x="87.22" y="1359.5" ></text>
</g>
<g >
<title>__do_page_fault (12 samples, 0.20%)</title><rect x="709.4" y="1829" width="2.3" height="15.0" fill="rgb(236,127,42)" rx="2" ry="2" />
<text  x="712.39" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;fasttext::FastText, std::default_delete&lt;fasttext::FastText&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unique_ptr&lt;fasttext::FastText, std::default_delete&lt;fasttext::FastText&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (1 samples, 0.02%)</title><rect x="857.6" y="1973" width="0.2" height="15.0" fill="rgb(230,217,7)" rx="2" ry="2" />
<text  x="860.64" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.5" y="1461" width="0.1" height="15.0" fill="rgb(253,224,16)" rx="2" ry="2" />
<text  x="1168.45" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1164.5" y="1157" width="0.6" height="15.0" fill="rgb(225,65,47)" rx="2" ry="2" />
<text  x="1167.48" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.2" y="1445" width="0.2" height="15.0" fill="rgb(205,62,6)" rx="2" ry="2" />
<text  x="13.19" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.3" y="1717" width="0.2" height="15.0" fill="rgb(254,114,22)" rx="2" ry="2" />
<text  x="1167.28" y="1727.5" ></text>
</g>
<g >
<title>pmd_page_vaddr (1 samples, 0.02%)</title><rect x="433.1" y="1877" width="0.2" height="15.0" fill="rgb(227,159,25)" rx="2" ry="2" />
<text  x="436.14" y="1887.5" ></text>
</g>
<g >
<title>page_fault (20 samples, 0.33%)</title><rect x="39.2" y="2037" width="3.9" height="15.0" fill="rgb(218,81,4)" rx="2" ry="2" />
<text  x="42.22" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.6" y="1205" width="0.2" height="15.0" fill="rgb(218,209,1)" rx="2" ry="2" />
<text  x="141.58" y="1215.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="84.0" y="1829" width="0.6" height="15.0" fill="rgb(215,79,35)" rx="2" ry="2" />
<text  x="87.03" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.07%)</title><rect x="212.8" y="1877" width="0.8" height="15.0" fill="rgb(213,155,19)" rx="2" ry="2" />
<text  x="215.80" y="1887.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (3 samples, 0.05%)</title><rect x="42.3" y="1925" width="0.6" height="15.0" fill="rgb(228,67,31)" rx="2" ry="2" />
<text  x="45.34" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.1" y="1733" width="0.2" height="15.0" fill="rgb(214,23,39)" rx="2" ry="2" />
<text  x="1167.09" y="1743.5" ></text>
</g>
<g >
<title>nlohmann::operator&gt;&gt; (65 samples, 1.07%)</title><rect x="90.8" y="1989" width="12.7" height="15.0" fill="rgb(229,124,32)" rx="2" ry="2" />
<text  x="93.85" y="1999.5" ></text>
</g>
<g >
<title>memcpy@plt (1 samples, 0.02%)</title><rect x="628.0" y="1877" width="0.2" height="15.0" fill="rgb(213,86,48)" rx="2" ry="2" />
<text  x="630.96" y="1887.5" ></text>
</g>
<g >
<title>fasttext::ProductQuantizer::get_centroids (2 samples, 0.03%)</title><rect x="1088.9" y="2053" width="0.4" height="15.0" fill="rgb(244,152,28)" rx="2" ry="2" />
<text  x="1091.89" y="2063.5" ></text>
</g>
<g >
<title>fasttext::Vector::addVector (17 samples, 0.28%)</title><rect x="567.0" y="1973" width="3.3" height="15.0" fill="rgb(215,212,36)" rx="2" ry="2" />
<text  x="569.98" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (26 samples, 0.43%)</title><rect x="150.7" y="1749" width="5.0" height="15.0" fill="rgb(210,41,51)" rx="2" ry="2" />
<text  x="153.66" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (47 samples, 0.78%)</title><rect x="186.9" y="1733" width="9.1" height="15.0" fill="rgb(250,222,41)" rx="2" ry="2" />
<text  x="189.89" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="213.2" y="1269" width="0.2" height="15.0" fill="rgb(233,123,44)" rx="2" ry="2" />
<text  x="216.19" y="1279.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_Alloc_node&gt; (2 samples, 0.03%)</title><rect x="585.1" y="1845" width="0.4" height="15.0" fill="rgb(249,212,6)" rx="2" ry="2" />
<text  x="588.10" y="1855.5" ></text>
</g>
<g >
<title>fasttext::ProductQuantizer::addcode (206 samples, 3.40%)</title><rect x="1048.8" y="2053" width="40.1" height="15.0" fill="rgb(240,100,13)" rx="2" ry="2" />
<text  x="1051.76" y="2063.5" >fas..</text>
</g>
<g >
<title>nlohmann::operator== (1 samples, 0.02%)</title><rect x="89.3" y="1925" width="0.2" height="15.0" fill="rgb(221,34,32)" rx="2" ry="2" />
<text  x="92.29" y="1935.5" ></text>
</g>
<g >
<title>page_fault (2 samples, 0.03%)</title><rect x="676.7" y="1861" width="0.3" height="15.0" fill="rgb(246,228,37)" rx="2" ry="2" />
<text  x="679.66" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="213.4" y="1157" width="0.2" height="15.0" fill="rgb(247,90,18)" rx="2" ry="2" />
<text  x="216.39" y="1167.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1 samples, 0.02%)</title><rect x="45.3" y="2037" width="0.2" height="15.0" fill="rgb(223,90,21)" rx="2" ry="2" />
<text  x="48.26" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.2" y="1797" width="0.2" height="15.0" fill="rgb(238,66,50)" rx="2" ry="2" />
<text  x="13.19" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="169.0" y="1461" width="0.2" height="15.0" fill="rgb(218,118,39)" rx="2" ry="2" />
<text  x="171.97" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.1" y="485" width="0.2" height="15.0" fill="rgb(229,0,19)" rx="2" ry="2" />
<text  x="1167.09" y="495.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (1 samples, 0.02%)</title><rect x="129.6" y="1653" width="0.2" height="15.0" fill="rgb(251,178,24)" rx="2" ry="2" />
<text  x="132.62" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.6" y="821" width="0.2" height="15.0" fill="rgb(227,54,29)" rx="2" ry="2" />
<text  x="141.58" y="831.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (1 samples, 0.02%)</title><rect x="933.4" y="2021" width="0.2" height="15.0" fill="rgb(251,74,28)" rx="2" ry="2" />
<text  x="936.43" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1164.5" y="501" width="0.6" height="15.0" fill="rgb(250,204,36)" rx="2" ry="2" />
<text  x="1167.48" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (1 samples, 0.02%)</title><rect x="210.5" y="1781" width="0.2" height="15.0" fill="rgb(232,106,45)" rx="2" ry="2" />
<text  x="213.47" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="213.2" y="1749" width="0.2" height="15.0" fill="rgb(229,90,6)" rx="2" ry="2" />
<text  x="216.19" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.2" y="1285" width="0.2" height="15.0" fill="rgb(222,124,28)" rx="2" ry="2" />
<text  x="13.19" y="1295.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="581" width="0.4" height="15.0" fill="rgb(223,163,5)" rx="2" ry="2" />
<text  x="87.22" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.2" y="597" width="0.2" height="15.0" fill="rgb(206,104,18)" rx="2" ry="2" />
<text  x="13.19" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="213.4" y="805" width="0.2" height="15.0" fill="rgb(222,201,44)" rx="2" ry="2" />
<text  x="216.39" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.6" y="1477" width="0.2" height="15.0" fill="rgb(248,13,21)" rx="2" ry="2" />
<text  x="141.58" y="1487.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="84.0" y="1909" width="0.6" height="15.0" fill="rgb(213,107,18)" rx="2" ry="2" />
<text  x="87.03" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="169.0" y="1253" width="0.2" height="15.0" fill="rgb(206,38,28)" rx="2" ry="2" />
<text  x="171.97" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.3" y="1125" width="0.2" height="15.0" fill="rgb(253,229,10)" rx="2" ry="2" />
<text  x="1167.28" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.2" y="1781" width="0.2" height="15.0" fill="rgb(252,197,5)" rx="2" ry="2" />
<text  x="13.19" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (1 samples, 0.02%)</title><rect x="125.7" y="1701" width="0.2" height="15.0" fill="rgb(222,220,52)" rx="2" ry="2" />
<text  x="128.72" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.1" y="1429" width="0.2" height="15.0" fill="rgb(220,120,41)" rx="2" ry="2" />
<text  x="1167.09" y="1439.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="1701" width="0.4" height="15.0" fill="rgb(246,137,49)" rx="2" ry="2" />
<text  x="87.22" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="169.0" y="1045" width="0.2" height="15.0" fill="rgb(248,219,26)" rx="2" ry="2" />
<text  x="171.97" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.5" y="1493" width="0.1" height="15.0" fill="rgb(245,10,20)" rx="2" ry="2" />
<text  x="1168.45" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1165.1" y="1733" width="0.4" height="15.0" fill="rgb(239,197,26)" rx="2" ry="2" />
<text  x="1168.06" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.1" y="1541" width="0.2" height="15.0" fill="rgb(228,181,5)" rx="2" ry="2" />
<text  x="1168.06" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="169.0" y="1429" width="0.2" height="15.0" fill="rgb(210,134,30)" rx="2" ry="2" />
<text  x="171.97" y="1439.5" ></text>
</g>
<g >
<title>scsi_finish_command (1 samples, 0.02%)</title><rect x="323.3" y="1877" width="0.2" height="15.0" fill="rgb(241,28,38)" rx="2" ry="2" />
<text  x="326.26" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="213.4" y="1221" width="0.2" height="15.0" fill="rgb(237,182,19)" rx="2" ry="2" />
<text  x="216.39" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.1" y="629" width="0.2" height="15.0" fill="rgb(247,62,45)" rx="2" ry="2" />
<text  x="1167.09" y="639.5" ></text>
</g>
<g >
<title>unmap_single_vma (1 samples, 0.02%)</title><rect x="456.9" y="1845" width="0.2" height="15.0" fill="rgb(241,92,35)" rx="2" ry="2" />
<text  x="459.91" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="169.0" y="1173" width="0.2" height="15.0" fill="rgb(248,176,1)" rx="2" ry="2" />
<text  x="171.97" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (1 samples, 0.02%)</title><rect x="168.0" y="1733" width="0.2" height="15.0" fill="rgb(248,168,28)" rx="2" ry="2" />
<text  x="171.00" y="1743.5" ></text>
</g>
<g >
<title>operator new@plt (1 samples, 0.02%)</title><rect x="342.2" y="1989" width="0.2" height="15.0" fill="rgb(218,59,36)" rx="2" ry="2" />
<text  x="345.16" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.6" y="1669" width="0.2" height="15.0" fill="rgb(224,135,32)" rx="2" ry="2" />
<text  x="141.58" y="1679.5" ></text>
</g>
<g >
<title>fasttext::Model::predict (3 samples, 0.05%)</title><rect x="86.4" y="2021" width="0.6" height="15.0" fill="rgb(231,24,30)" rx="2" ry="2" />
<text  x="89.37" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="213.4" y="1653" width="0.2" height="15.0" fill="rgb(214,23,18)" rx="2" ry="2" />
<text  x="216.39" y="1663.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="585.7" y="2021" width="0.2" height="15.0" fill="rgb(216,93,37)" rx="2" ry="2" />
<text  x="588.68" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (1 samples, 0.02%)</title><rect x="195.7" y="1653" width="0.2" height="15.0" fill="rgb(249,93,7)" rx="2" ry="2" />
<text  x="198.66" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (151 samples, 2.49%)</title><rect x="138.8" y="1829" width="29.4" height="15.0" fill="rgb(239,120,17)" rx="2" ry="2" />
<text  x="141.77" y="1839.5" >st..</text>
</g>
<g >
<title>std::locale::~locale (1 samples, 0.02%)</title><rect x="118.9" y="1717" width="0.2" height="15.0" fill="rgb(251,91,44)" rx="2" ry="2" />
<text  x="121.90" y="1727.5" ></text>
</g>
<g >
<title>_raw_spin_lock (2 samples, 0.03%)</title><rect x="435.7" y="1877" width="0.4" height="15.0" fill="rgb(232,43,31)" rx="2" ry="2" />
<text  x="438.67" y="1887.5" ></text>
</g>
<g >
<title>fasttext::DenseMatrix::dotRow (2 samples, 0.03%)</title><rect x="933.6" y="2053" width="0.4" height="15.0" fill="rgb(207,6,38)" rx="2" ry="2" />
<text  x="936.62" y="2063.5" ></text>
</g>
<g >
<title>cfree (5 samples, 0.08%)</title><rect x="189.2" y="1637" width="1.0" height="15.0" fill="rgb(216,203,19)" rx="2" ry="2" />
<text  x="192.23" y="1647.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id@plt (1 samples, 0.02%)</title><rect x="185.7" y="1621" width="0.2" height="15.0" fill="rgb(224,114,24)" rx="2" ry="2" />
<text  x="188.72" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="213.2" y="1125" width="0.2" height="15.0" fill="rgb(243,100,15)" rx="2" ry="2" />
<text  x="216.19" y="1135.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="1477" width="0.4" height="15.0" fill="rgb(206,66,14)" rx="2" ry="2" />
<text  x="87.22" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (141 samples, 2.33%)</title><rect x="104.5" y="1813" width="27.5" height="15.0" fill="rgb(232,200,35)" rx="2" ry="2" />
<text  x="107.49" y="1823.5" >s..</text>
</g>
<g >
<title>cfree (3 samples, 0.05%)</title><rect x="158.8" y="1653" width="0.6" height="15.0" fill="rgb(248,103,11)" rx="2" ry="2" />
<text  x="161.84" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.3" y="501" width="0.2" height="15.0" fill="rgb(218,164,41)" rx="2" ry="2" />
<text  x="1168.26" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.6" y="997" width="0.2" height="15.0" fill="rgb(216,56,40)" rx="2" ry="2" />
<text  x="141.58" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.3" y="149" width="0.2" height="15.0" fill="rgb(223,82,49)" rx="2" ry="2" />
<text  x="1167.28" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.6" y="645" width="0.2" height="15.0" fill="rgb(214,152,10)" rx="2" ry="2" />
<text  x="141.58" y="655.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="325" width="0.4" height="15.0" fill="rgb(221,138,8)" rx="2" ry="2" />
<text  x="87.22" y="335.5" ></text>
</g>
<g >
<title>__dynamic_cast (54 samples, 0.89%)</title><rect x="896.0" y="2053" width="10.5" height="15.0" fill="rgb(247,92,8)" rx="2" ry="2" />
<text  x="899.02" y="2063.5" ></text>
</g>
<g >
<title>cfree (2 samples, 0.03%)</title><rect x="589.8" y="1909" width="0.4" height="15.0" fill="rgb(231,163,19)" rx="2" ry="2" />
<text  x="592.77" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="901" width="0.4" height="15.0" fill="rgb(207,109,15)" rx="2" ry="2" />
<text  x="87.22" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (24 samples, 0.40%)</title><rect x="150.9" y="1637" width="4.6" height="15.0" fill="rgb(242,30,18)" rx="2" ry="2" />
<text  x="153.85" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.3" y="405" width="0.2" height="15.0" fill="rgb(232,161,46)" rx="2" ry="2" />
<text  x="1167.28" y="415.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.12%)</title><rect x="1115.8" y="2053" width="1.3" height="15.0" fill="rgb(246,91,37)" rx="2" ry="2" />
<text  x="1118.78" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.1" y="149" width="0.2" height="15.0" fill="rgb(236,44,41)" rx="2" ry="2" />
<text  x="1167.09" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (34 samples, 0.56%)</title><rect x="119.3" y="1765" width="6.6" height="15.0" fill="rgb(214,212,23)" rx="2" ry="2" />
<text  x="122.29" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.5" y="437" width="0.1" height="15.0" fill="rgb(213,63,41)" rx="2" ry="2" />
<text  x="1168.45" y="447.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.02%)</title><rect x="200.7" y="1653" width="0.2" height="15.0" fill="rgb(220,39,25)" rx="2" ry="2" />
<text  x="203.72" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1165.1" y="2037" width="0.4" height="15.0" fill="rgb(243,73,35)" rx="2" ry="2" />
<text  x="1168.06" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (12 samples, 0.20%)</title><rect x="140.3" y="1573" width="2.4" height="15.0" fill="rgb(230,44,34)" rx="2" ry="2" />
<text  x="143.33" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (1 samples, 0.02%)</title><rect x="211.4" y="1765" width="0.2" height="15.0" fill="rgb(251,220,29)" rx="2" ry="2" />
<text  x="214.44" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.3" y="181" width="0.2" height="15.0" fill="rgb(219,116,33)" rx="2" ry="2" />
<text  x="1168.26" y="191.5" ></text>
</g>
<g >
<title>new_sync_write (1 samples, 0.02%)</title><rect x="883.4" y="1925" width="0.2" height="15.0" fill="rgb(207,86,17)" rx="2" ry="2" />
<text  x="886.36" y="1935.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="677.0" y="1781" width="0.2" height="15.0" fill="rgb(248,109,29)" rx="2" ry="2" />
<text  x="680.05" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="213.4" y="949" width="0.2" height="15.0" fill="rgb(205,82,21)" rx="2" ry="2" />
<text  x="216.39" y="959.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="208.3" y="1653" width="0.2" height="15.0" fill="rgb(215,140,18)" rx="2" ry="2" />
<text  x="211.32" y="1663.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (1 samples, 0.02%)</title><rect x="176.6" y="1573" width="0.2" height="15.0" fill="rgb(222,1,41)" rx="2" ry="2" />
<text  x="179.57" y="1583.5" ></text>
</g>
<g >
<title>std::locale::~locale (2 samples, 0.03%)</title><rect x="582.2" y="1973" width="0.4" height="15.0" fill="rgb(242,152,38)" rx="2" ry="2" />
<text  x="585.17" y="1983.5" ></text>
</g>
<g >
<title>do_exit (1 samples, 0.02%)</title><rect x="933.4" y="1989" width="0.2" height="15.0" fill="rgb(215,62,15)" rx="2" ry="2" />
<text  x="936.43" y="1999.5" ></text>
</g>
<g >
<title>std::num_get&lt;char, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_extract_int&lt;long&gt; (1 samples, 0.02%)</title><rect x="882.4" y="2005" width="0.2" height="15.0" fill="rgb(225,189,13)" rx="2" ry="2" />
<text  x="885.39" y="2015.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::do_tolower (1 samples, 0.02%)</title><rect x="160.8" y="1653" width="0.2" height="15.0" fill="rgb(236,73,18)" rx="2" ry="2" />
<text  x="163.79" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.5" y="1253" width="0.1" height="15.0" fill="rgb(244,127,54)" rx="2" ry="2" />
<text  x="1168.45" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1164.5" y="1189" width="0.6" height="15.0" fill="rgb(251,26,52)" rx="2" ry="2" />
<text  x="1167.48" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (151 samples, 2.49%)</title><rect x="138.8" y="1861" width="29.4" height="15.0" fill="rgb(236,185,43)" rx="2" ry="2" />
<text  x="141.77" y="1871.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.3" y="1237" width="0.2" height="15.0" fill="rgb(224,44,17)" rx="2" ry="2" />
<text  x="1167.28" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="168.6" y="1493" width="0.2" height="15.0" fill="rgb(231,45,17)" rx="2" ry="2" />
<text  x="171.58" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.07%)</title><rect x="168.4" y="1909" width="0.8" height="15.0" fill="rgb(240,10,41)" rx="2" ry="2" />
<text  x="171.39" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="773" width="0.4" height="15.0" fill="rgb(240,205,7)" rx="2" ry="2" />
<text  x="87.22" y="783.5" ></text>
</g>
<g >
<title>std::__stable_sort_adaptive&lt;__gnu_cxx::__normal_iterator&lt;TDocument*, std::vector&lt;TDocument, std::allocator&lt;TDocument&gt; &gt; &gt;, TDocument*, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;main::$_0&gt; &gt; (2 samples, 0.03%)</title><rect x="584.7" y="2005" width="0.4" height="15.0" fill="rgb(245,64,2)" rx="2" ry="2" />
<text  x="587.71" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.3" y="1509" width="0.2" height="15.0" fill="rgb(249,195,30)" rx="2" ry="2" />
<text  x="1167.28" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.6" y="1109" width="0.2" height="15.0" fill="rgb(208,67,53)" rx="2" ry="2" />
<text  x="141.58" y="1119.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::create&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt; const&amp;&gt; (2 samples, 0.03%)</title><rect x="585.1" y="1861" width="0.4" height="15.0" fill="rgb(251,37,44)" rx="2" ry="2" />
<text  x="588.10" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.1" y="1205" width="0.2" height="15.0" fill="rgb(254,82,43)" rx="2" ry="2" />
<text  x="1167.09" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.6" y="1061" width="0.2" height="15.0" fill="rgb(214,62,30)" rx="2" ry="2" />
<text  x="141.58" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (31 samples, 0.51%)</title><rect x="155.7" y="1765" width="6.1" height="15.0" fill="rgb(237,90,19)" rx="2" ry="2" />
<text  x="158.72" y="1775.5" ></text>
</g>
<g >
<title>mem_cgroup_uncharge_list (1 samples, 0.02%)</title><rect x="583.1" y="1781" width="0.2" height="15.0" fill="rgb(220,41,12)" rx="2" ry="2" />
<text  x="586.15" y="1791.5" ></text>
</g>
<g >
<title>do_page_fault (45 samples, 0.74%)</title><rect x="433.5" y="1941" width="8.8" height="15.0" fill="rgb(238,29,41)" rx="2" ry="2" />
<text  x="436.53" y="1951.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="146.4" y="1605" width="0.2" height="15.0" fill="rgb(248,194,52)" rx="2" ry="2" />
<text  x="149.37" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.1" y="1109" width="0.2" height="15.0" fill="rgb(229,74,15)" rx="2" ry="2" />
<text  x="1167.09" y="1119.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.02%)</title><rect x="48.0" y="1941" width="0.2" height="15.0" fill="rgb(240,3,10)" rx="2" ry="2" />
<text  x="50.99" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1165.1" y="1781" width="0.4" height="15.0" fill="rgb(247,114,32)" rx="2" ry="2" />
<text  x="1168.06" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="133" width="0.4" height="15.0" fill="rgb(216,198,13)" rx="2" ry="2" />
<text  x="87.22" y="143.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.3" y="1653" width="0.2" height="15.0" fill="rgb(236,50,30)" rx="2" ry="2" />
<text  x="1167.28" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_Compiler (152 samples, 2.51%)</title><rect x="138.8" y="1925" width="29.6" height="15.0" fill="rgb(246,19,17)" rx="2" ry="2" />
<text  x="141.77" y="1935.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.1" y="389" width="0.2" height="15.0" fill="rgb(233,194,34)" rx="2" ry="2" />
<text  x="1168.06" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="213.4" y="1717" width="0.2" height="15.0" fill="rgb(243,160,26)" rx="2" ry="2" />
<text  x="216.39" y="1727.5" ></text>
</g>
<g >
<title>__dynamic_cast (5 samples, 0.08%)</title><rect x="179.5" y="1621" width="1.0" height="15.0" fill="rgb(233,61,54)" rx="2" ry="2" />
<text  x="182.49" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.1" y="197" width="0.2" height="15.0" fill="rgb(235,16,6)" rx="2" ry="2" />
<text  x="1167.09" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.3" y="965" width="0.2" height="15.0" fill="rgb(244,71,32)" rx="2" ry="2" />
<text  x="1168.26" y="975.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (2 samples, 0.03%)</title><rect x="202.5" y="1669" width="0.4" height="15.0" fill="rgb(218,225,39)" rx="2" ry="2" />
<text  x="205.48" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.1" y="277" width="0.2" height="15.0" fill="rgb(208,144,3)" rx="2" ry="2" />
<text  x="1167.09" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_repeat (1 samples, 0.02%)</title><rect x="119.1" y="1733" width="0.2" height="15.0" fill="rgb(216,12,16)" rx="2" ry="2" />
<text  x="122.10" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.5" y="661" width="0.1" height="15.0" fill="rgb(244,15,23)" rx="2" ry="2" />
<text  x="1168.45" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.3" y="661" width="0.2" height="15.0" fill="rgb(253,190,18)" rx="2" ry="2" />
<text  x="1168.26" y="671.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (56 samples, 0.92%)</title><rect x="885.1" y="2053" width="10.9" height="15.0" fill="rgb(229,67,46)" rx="2" ry="2" />
<text  x="888.11" y="2063.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (1 samples, 0.02%)</title><rect x="109.4" y="1573" width="0.2" height="15.0" fill="rgb(208,138,22)" rx="2" ry="2" />
<text  x="112.36" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.6" y="933" width="0.2" height="15.0" fill="rgb(241,72,43)" rx="2" ry="2" />
<text  x="141.58" y="943.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (1 samples, 0.02%)</title><rect x="160.6" y="1653" width="0.2" height="15.0" fill="rgb(247,178,23)" rx="2" ry="2" />
<text  x="163.59" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.6" y="709" width="0.2" height="15.0" fill="rgb(207,19,31)" rx="2" ry="2" />
<text  x="141.58" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.1" y="885" width="0.2" height="15.0" fill="rgb(253,73,34)" rx="2" ry="2" />
<text  x="1167.09" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.2" y="1221" width="0.2" height="15.0" fill="rgb(219,87,45)" rx="2" ry="2" />
<text  x="13.19" y="1231.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::append (4 samples, 0.07%)</title><rect x="613.3" y="1893" width="0.8" height="15.0" fill="rgb(219,24,21)" rx="2" ry="2" />
<text  x="616.34" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_subexpr_begin (1 samples, 0.02%)</title><rect x="203.3" y="1765" width="0.2" height="15.0" fill="rgb(237,155,9)" rx="2" ry="2" />
<text  x="206.26" y="1775.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::pushHash (240 samples, 3.96%)</title><rect x="992.1" y="2053" width="46.7" height="15.0" fill="rgb(216,205,0)" rx="2" ry="2" />
<text  x="995.07" y="2063.5" >fast..</text>
</g>
<g >
<title>onmt::ITokenizer::tokenize (1 samples, 0.02%)</title><rect x="856.5" y="1957" width="0.2" height="15.0" fill="rgb(226,134,7)" rx="2" ry="2" />
<text  x="859.48" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_repeat (1 samples, 0.02%)</title><rect x="210.7" y="1813" width="0.2" height="15.0" fill="rgb(228,7,15)" rx="2" ry="2" />
<text  x="213.66" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.2" y="1637" width="0.2" height="15.0" fill="rgb(216,127,52)" rx="2" ry="2" />
<text  x="13.19" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.5" y="1445" width="0.1" height="15.0" fill="rgb(254,176,31)" rx="2" ry="2" />
<text  x="1168.45" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="213.4" y="885" width="0.2" height="15.0" fill="rgb(230,83,22)" rx="2" ry="2" />
<text  x="216.39" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.3" y="869" width="0.2" height="15.0" fill="rgb(220,37,12)" rx="2" ry="2" />
<text  x="1168.26" y="879.5" ></text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.02%)</title><rect x="345.7" y="1909" width="0.2" height="15.0" fill="rgb(231,8,11)" rx="2" ry="2" />
<text  x="348.67" y="1919.5" ></text>
</g>
<g >
<title>onmt::unicode::explode_utf8 (68 samples, 1.12%)</title><rect x="628.2" y="1877" width="13.2" height="15.0" fill="rgb(217,105,18)" rx="2" ry="2" />
<text  x="631.15" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.6" y="1589" width="0.2" height="15.0" fill="rgb(211,13,34)" rx="2" ry="2" />
<text  x="141.58" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (36 samples, 0.59%)</title><rect x="104.7" y="1637" width="7.0" height="15.0" fill="rgb(229,45,4)" rx="2" ry="2" />
<text  x="107.68" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1164.5" y="101" width="0.6" height="15.0" fill="rgb(215,219,33)" rx="2" ry="2" />
<text  x="1167.48" y="111.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.1" y="1493" width="0.2" height="15.0" fill="rgb(219,154,34)" rx="2" ry="2" />
<text  x="1168.06" y="1503.5" ></text>
</g>
<g >
<title>page_remove_rmap (1 samples, 0.02%)</title><rect x="933.4" y="1893" width="0.2" height="15.0" fill="rgb(240,187,45)" rx="2" ry="2" />
<text  x="936.43" y="1903.5" ></text>
</g>
<g >
<title>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::dump (1 samples, 0.02%)</title><rect x="584.5" y="1941" width="0.2" height="15.0" fill="rgb(246,158,34)" rx="2" ry="2" />
<text  x="587.51" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.2" y="1813" width="0.2" height="15.0" fill="rgb(227,72,22)" rx="2" ry="2" />
<text  x="13.19" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.3" y="53" width="0.2" height="15.0" fill="rgb(207,113,46)" rx="2" ry="2" />
<text  x="1167.28" y="63.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1164.5" y="1509" width="0.6" height="15.0" fill="rgb(222,169,11)" rx="2" ry="2" />
<text  x="1167.48" y="1519.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id@plt (1 samples, 0.02%)</title><rect x="117.7" y="1621" width="0.2" height="15.0" fill="rgb(217,196,14)" rx="2" ry="2" />
<text  x="120.73" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (217 samples, 3.58%)</title><rect x="170.1" y="1909" width="42.3" height="15.0" fill="rgb(210,118,29)" rx="2" ry="2" />
<text  x="173.14" y="1919.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.1" y="869" width="0.2" height="15.0" fill="rgb(216,23,25)" rx="2" ry="2" />
<text  x="1167.09" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.2" y="1541" width="0.2" height="15.0" fill="rgb(236,211,18)" rx="2" ry="2" />
<text  x="13.19" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.1" y="693" width="0.2" height="15.0" fill="rgb(238,220,26)" rx="2" ry="2" />
<text  x="1167.09" y="703.5" ></text>
</g>
<g >
<title>syscall (11 samples, 0.18%)</title><rect x="46.0" y="2021" width="2.2" height="15.0" fill="rgb(222,221,45)" rx="2" ry="2" />
<text  x="49.04" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.1" y="197" width="0.2" height="15.0" fill="rgb(243,56,1)" rx="2" ry="2" />
<text  x="1168.06" y="207.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (2 samples, 0.03%)</title><rect x="711.3" y="1765" width="0.4" height="15.0" fill="rgb(244,20,30)" rx="2" ry="2" />
<text  x="714.34" y="1775.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.25] (1 samples, 0.02%)</title><rect x="83.4" y="2037" width="0.2" height="15.0" fill="rgb(212,123,19)" rx="2" ry="2" />
<text  x="86.45" y="2047.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::readWord (1 samples, 0.02%)</title><rect x="586.8" y="1957" width="0.2" height="15.0" fill="rgb(210,9,17)" rx="2" ry="2" />
<text  x="589.85" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Scanner&lt;char&gt;::_M_scan_normal (1 samples, 0.02%)</title><rect x="210.9" y="1813" width="0.2" height="15.0" fill="rgb(218,48,6)" rx="2" ry="2" />
<text  x="213.86" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.1" y="341" width="0.2" height="15.0" fill="rgb(253,120,36)" rx="2" ry="2" />
<text  x="1167.09" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (1 samples, 0.02%)</title><rect x="137.6" y="1845" width="0.2" height="15.0" fill="rgb(239,200,15)" rx="2" ry="2" />
<text  x="140.60" y="1855.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_Alloc_node&gt; (2 samples, 0.03%)</title><rect x="585.1" y="1957" width="0.4" height="15.0" fill="rgb(242,6,11)" rx="2" ry="2" />
<text  x="588.10" y="1967.5" ></text>
</g>
<g >
<title>wake_up_q (7 samples, 0.12%)</title><rect x="46.6" y="1925" width="1.4" height="15.0" fill="rgb(252,25,2)" rx="2" ry="2" />
<text  x="49.63" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="1205" width="0.4" height="15.0" fill="rgb(230,97,16)" rx="2" ry="2" />
<text  x="87.22" y="1215.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="293" width="0.4" height="15.0" fill="rgb(248,68,10)" rx="2" ry="2" />
<text  x="87.22" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="213.2" y="1317" width="0.2" height="15.0" fill="rgb(234,210,3)" rx="2" ry="2" />
<text  x="216.19" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (3 samples, 0.05%)</title><rect x="210.1" y="1829" width="0.6" height="15.0" fill="rgb(245,228,49)" rx="2" ry="2" />
<text  x="213.08" y="1839.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find (14 samples, 0.23%)</title><rect x="852.6" y="1909" width="2.7" height="15.0" fill="rgb(224,188,33)" rx="2" ry="2" />
<text  x="855.58" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.3" y="1637" width="0.2" height="15.0" fill="rgb(205,161,8)" rx="2" ry="2" />
<text  x="1168.26" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (33 samples, 0.54%)</title><rect x="144.2" y="1701" width="6.5" height="15.0" fill="rgb(245,72,18)" rx="2" ry="2" />
<text  x="147.23" y="1711.5" ></text>
</g>
<g >
<title>vfs_write (1 samples, 0.02%)</title><rect x="883.4" y="1957" width="0.2" height="15.0" fill="rgb(230,165,36)" rx="2" ry="2" />
<text  x="886.36" y="1967.5" ></text>
</g>
<g >
<title>Summarize (904 samples, 14.92%)</title><rect x="169.4" y="2005" width="176.1" height="15.0" fill="rgb(241,211,24)" rx="2" ry="2" />
<text  x="172.36" y="2015.5" >Summarize</text>
</g>
<g >
<title>fasttext::Dictionary::getId (1 samples, 0.02%)</title><rect x="558.2" y="1973" width="0.2" height="15.0" fill="rgb(236,26,13)" rx="2" ry="2" />
<text  x="561.21" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.1" y="1349" width="0.2" height="15.0" fill="rgb(232,124,0)" rx="2" ry="2" />
<text  x="1168.06" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="169.0" y="789" width="0.2" height="15.0" fill="rgb(219,132,41)" rx="2" ry="2" />
<text  x="171.97" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1164.5" y="1269" width="0.6" height="15.0" fill="rgb(240,47,15)" rx="2" ry="2" />
<text  x="1167.48" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="213.4" y="1525" width="0.2" height="15.0" fill="rgb(247,157,36)" rx="2" ry="2" />
<text  x="216.39" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.3" y="261" width="0.2" height="15.0" fill="rgb(248,85,27)" rx="2" ry="2" />
<text  x="1168.26" y="271.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (25 samples, 0.41%)</title><rect x="436.1" y="1861" width="4.8" height="15.0" fill="rgb(225,132,1)" rx="2" ry="2" />
<text  x="439.06" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.5" y="517" width="0.1" height="15.0" fill="rgb(234,66,33)" rx="2" ry="2" />
<text  x="1168.45" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1164.5" y="1413" width="0.6" height="15.0" fill="rgb(244,66,7)" rx="2" ry="2" />
<text  x="1167.48" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.1" y="2037" width="0.2" height="15.0" fill="rgb(253,4,12)" rx="2" ry="2" />
<text  x="1167.09" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (210 samples, 3.47%)</title><rect x="170.3" y="1877" width="40.9" height="15.0" fill="rgb(242,159,15)" rx="2" ry="2" />
<text  x="173.33" y="1887.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="168.4" y="1653" width="0.4" height="15.0" fill="rgb(205,25,4)" rx="2" ry="2" />
<text  x="171.39" y="1663.5" ></text>
</g>
<g >
<title>Eigen::PlainObjectBase&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt;::PlainObjectBase&lt;Eigen::Product&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt;, 0&gt; &gt; (1 samples, 0.02%)</title><rect x="169.7" y="1989" width="0.2" height="15.0" fill="rgb(228,18,19)" rx="2" ry="2" />
<text  x="172.75" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.3" y="1589" width="0.2" height="15.0" fill="rgb(205,22,47)" rx="2" ry="2" />
<text  x="1167.28" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.3" y="1173" width="0.2" height="15.0" fill="rgb(238,78,45)" rx="2" ry="2" />
<text  x="1168.26" y="1183.5" ></text>
</g>
<g >
<title>__pthread_once_slow (1,398 samples, 23.08%)</title><rect x="585.5" y="2037" width="272.3" height="15.0" fill="rgb(220,224,49)" rx="2" ry="2" />
<text  x="588.49" y="2047.5" >__pthread_once_slow</text>
</g>
<g >
<title>onmt::Tokenizer::finalize_tokens (25 samples, 0.41%)</title><rect x="591.9" y="1909" width="4.9" height="15.0" fill="rgb(234,133,14)" rx="2" ry="2" />
<text  x="594.92" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.3" y="549" width="0.2" height="15.0" fill="rgb(248,70,9)" rx="2" ry="2" />
<text  x="1167.28" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.1" y="693" width="0.2" height="15.0" fill="rgb(254,170,36)" rx="2" ry="2" />
<text  x="1168.06" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.3" y="1013" width="0.2" height="15.0" fill="rgb(207,227,25)" rx="2" ry="2" />
<text  x="1168.26" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (174 samples, 2.87%)</title><rect x="104.3" y="1925" width="33.9" height="15.0" fill="rgb(248,205,42)" rx="2" ry="2" />
<text  x="107.29" y="1935.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.2" y="1269" width="0.2" height="15.0" fill="rgb(236,142,53)" rx="2" ry="2" />
<text  x="13.19" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.1" y="1285" width="0.2" height="15.0" fill="rgb(252,123,10)" rx="2" ry="2" />
<text  x="1167.09" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.3" y="613" width="0.2" height="15.0" fill="rgb(253,19,38)" rx="2" ry="2" />
<text  x="1168.26" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.1" y="85" width="0.2" height="15.0" fill="rgb(218,86,10)" rx="2" ry="2" />
<text  x="1167.09" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.5" y="917" width="0.1" height="15.0" fill="rgb(247,150,21)" rx="2" ry="2" />
<text  x="1168.45" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.1" y="1829" width="0.2" height="15.0" fill="rgb(218,89,50)" rx="2" ry="2" />
<text  x="1167.09" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.1" y="1861" width="0.2" height="15.0" fill="rgb(245,142,42)" rx="2" ry="2" />
<text  x="1167.09" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.1" y="1413" width="0.2" height="15.0" fill="rgb(220,175,1)" rx="2" ry="2" />
<text  x="1167.09" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (36 samples, 0.59%)</title><rect x="111.9" y="1653" width="7.0" height="15.0" fill="rgb(231,154,35)" rx="2" ry="2" />
<text  x="114.89" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.1" y="1525" width="0.2" height="15.0" fill="rgb(233,13,44)" rx="2" ry="2" />
<text  x="1168.06" y="1535.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.03%)</title><rect x="831.3" y="1893" width="0.4" height="15.0" fill="rgb(237,222,31)" rx="2" ry="2" />
<text  x="834.34" y="1903.5" ></text>
</g>
<g >
<title>clear_page_erms (2 samples, 0.03%)</title><rect x="676.7" y="1749" width="0.3" height="15.0" fill="rgb(212,123,6)" rx="2" ry="2" />
<text  x="679.66" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.5" y="1797" width="0.1" height="15.0" fill="rgb(223,213,17)" rx="2" ry="2" />
<text  x="1168.45" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.5" y="277" width="0.1" height="15.0" fill="rgb(228,220,48)" rx="2" ry="2" />
<text  x="1168.45" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; const&amp;&gt; (2 samples, 0.03%)</title><rect x="585.1" y="1941" width="0.4" height="15.0" fill="rgb(205,57,32)" rx="2" ry="2" />
<text  x="588.10" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.07%)</title><rect x="1164.3" y="1861" width="0.8" height="15.0" fill="rgb(245,159,9)" rx="2" ry="2" />
<text  x="1167.28" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt;,  (4 samples, 0.07%)</title><rect x="168.4" y="1941" width="0.8" height="15.0" fill="rgb(250,229,28)" rx="2" ry="2" />
<text  x="171.39" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (1 samples, 0.02%)</title><rect x="211.1" y="1829" width="0.1" height="15.0" fill="rgb(248,148,21)" rx="2" ry="2" />
<text  x="214.05" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (36 samples, 0.59%)</title><rect x="111.9" y="1701" width="7.0" height="15.0" fill="rgb(244,161,18)" rx="2" ry="2" />
<text  x="114.89" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="169.0" y="853" width="0.2" height="15.0" fill="rgb(213,202,39)" rx="2" ry="2" />
<text  x="171.97" y="863.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="89.9" y="1941" width="0.2" height="15.0" fill="rgb(207,76,5)" rx="2" ry="2" />
<text  x="92.87" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.1" y="1045" width="0.2" height="15.0" fill="rgb(226,57,52)" rx="2" ry="2" />
<text  x="1167.09" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.2" y="37" width="0.2" height="15.0" fill="rgb(232,214,30)" rx="2" ry="2" />
<text  x="13.19" y="47.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="883.0" y="2021" width="0.4" height="15.0" fill="rgb(243,75,7)" rx="2" ry="2" />
<text  x="885.97" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="213.2" y="853" width="0.2" height="15.0" fill="rgb(228,72,12)" rx="2" ry="2" />
<text  x="216.19" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1164.5" y="517" width="0.6" height="15.0" fill="rgb(248,116,21)" rx="2" ry="2" />
<text  x="1167.48" y="527.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.02%)</title><rect x="742.1" y="1861" width="0.2" height="15.0" fill="rgb(231,83,33)" rx="2" ry="2" />
<text  x="745.12" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.2" y="917" width="0.2" height="15.0" fill="rgb(218,39,31)" rx="2" ry="2" />
<text  x="13.19" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="169.0" y="1397" width="0.2" height="15.0" fill="rgb(206,132,20)" rx="2" ry="2" />
<text  x="171.97" y="1407.5" ></text>
</g>
<g >
<title>__vm_munmap (1 samples, 0.02%)</title><rect x="583.1" y="1925" width="0.2" height="15.0" fill="rgb(226,14,39)" rx="2" ry="2" />
<text  x="586.15" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.5" y="261" width="0.1" height="15.0" fill="rgb(247,191,48)" rx="2" ry="2" />
<text  x="1168.45" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="213.4" y="933" width="0.2" height="15.0" fill="rgb(206,65,9)" rx="2" ry="2" />
<text  x="216.39" y="943.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="1301" width="0.4" height="15.0" fill="rgb(224,7,51)" rx="2" ry="2" />
<text  x="87.22" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.1" y="949" width="0.2" height="15.0" fill="rgb(251,12,7)" rx="2" ry="2" />
<text  x="1167.09" y="959.5" ></text>
</g>
<g >
<title>__generic_file_write_iter (1 samples, 0.02%)</title><rect x="883.4" y="1893" width="0.2" height="15.0" fill="rgb(225,47,42)" rx="2" ry="2" />
<text  x="886.36" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1165.1" y="1941" width="0.4" height="15.0" fill="rgb(205,131,35)" rx="2" ry="2" />
<text  x="1168.06" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (29 samples, 0.48%)</title><rect x="125.9" y="1717" width="5.7" height="15.0" fill="rgb(230,134,18)" rx="2" ry="2" />
<text  x="128.92" y="1727.5" ></text>
</g>
<g >
<title>mmput (1 samples, 0.02%)</title><rect x="933.4" y="1973" width="0.2" height="15.0" fill="rgb(210,83,3)" rx="2" ry="2" />
<text  x="936.43" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_expression_term&lt;false, false&gt; (1 samples, 0.02%)</title><rect x="111.5" y="1605" width="0.2" height="15.0" fill="rgb(215,205,29)" rx="2" ry="2" />
<text  x="114.50" y="1615.5" ></text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::scan (1 samples, 0.02%)</title><rect x="91.2" y="1941" width="0.2" height="15.0" fill="rgb(223,203,50)" rx="2" ry="2" />
<text  x="94.24" y="1951.5" ></text>
</g>
<g >
<title>std::vector&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::allocator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;::vector (1 samples, 0.02%)</title><rect x="585.1" y="1797" width="0.2" height="15.0" fill="rgb(245,106,3)" rx="2" ry="2" />
<text  x="588.10" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.1" y="1765" width="0.2" height="15.0" fill="rgb(226,220,31)" rx="2" ry="2" />
<text  x="1167.09" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1165.1" y="1893" width="0.4" height="15.0" fill="rgb(227,126,13)" rx="2" ry="2" />
<text  x="1168.06" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.2" y="629" width="0.2" height="15.0" fill="rgb(205,11,14)" rx="2" ry="2" />
<text  x="13.19" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="168.8" y="1701" width="0.4" height="15.0" fill="rgb(226,207,34)" rx="2" ry="2" />
<text  x="171.77" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.5" y="1189" width="0.1" height="15.0" fill="rgb(244,149,26)" rx="2" ry="2" />
<text  x="1168.45" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (25 samples, 0.41%)</title><rect x="139.4" y="1589" width="4.8" height="15.0" fill="rgb(221,165,23)" rx="2" ry="2" />
<text  x="142.36" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="245" width="0.4" height="15.0" fill="rgb(240,224,39)" rx="2" ry="2" />
<text  x="87.22" y="255.5" ></text>
</g>
<g >
<title>std::__merge_sort_with_buffer&lt;__gnu_cxx::__normal_iterator&lt;TWeightedDoc*, std::vector&lt;TWeightedDoc, std::allocator&lt;TWeightedDoc&gt; &gt; &gt;, TWeightedDoc*, __gnu_cxx::__ops::_Iter_comp_iter&lt;TNewsCluster::SortByWeights (1 samples, 0.02%)</title><rect x="224.7" y="1957" width="0.2" height="15.0" fill="rgb(213,80,2)" rx="2" ry="2" />
<text  x="227.69" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="421" width="0.4" height="15.0" fill="rgb(250,176,22)" rx="2" ry="2" />
<text  x="87.22" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="213.2" y="1605" width="0.2" height="15.0" fill="rgb(254,34,24)" rx="2" ry="2" />
<text  x="216.19" y="1615.5" ></text>
</g>
<g >
<title>ComputeClusterWeight (336 samples, 5.55%)</title><rect x="103.9" y="1989" width="65.5" height="15.0" fill="rgb(246,23,47)" rx="2" ry="2" />
<text  x="106.90" y="1999.5" >Compute..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.3" y="1093" width="0.2" height="15.0" fill="rgb(212,137,27)" rx="2" ry="2" />
<text  x="1168.26" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1164.5" y="725" width="0.6" height="15.0" fill="rgb(238,25,22)" rx="2" ry="2" />
<text  x="1167.48" y="735.5" ></text>
</g>
<g >
<title>cfree (1 samples, 0.02%)</title><rect x="120.5" y="1637" width="0.2" height="15.0" fill="rgb(232,36,48)" rx="2" ry="2" />
<text  x="123.46" y="1647.5" ></text>
</g>
<g >
<title>ksys_write (1 samples, 0.02%)</title><rect x="883.4" y="1973" width="0.2" height="15.0" fill="rgb(228,36,23)" rx="2" ry="2" />
<text  x="886.36" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.1" y="1077" width="0.2" height="15.0" fill="rgb(210,97,16)" rx="2" ry="2" />
<text  x="1168.06" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_expression_term&lt;false, false&gt; (1 samples, 0.02%)</title><rect x="161.6" y="1669" width="0.2" height="15.0" fill="rgb(227,167,10)" rx="2" ry="2" />
<text  x="164.57" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.2" y="2005" width="0.2" height="15.0" fill="rgb(229,152,46)" rx="2" ry="2" />
<text  x="13.19" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.5" y="773" width="0.1" height="15.0" fill="rgb(224,64,3)" rx="2" ry="2" />
<text  x="1168.45" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.3" y="1461" width="0.2" height="15.0" fill="rgb(230,161,4)" rx="2" ry="2" />
<text  x="1168.26" y="1471.5" ></text>
</g>
<g >
<title>__strxfrm_l (1 samples, 0.02%)</title><rect x="906.5" y="2053" width="0.2" height="15.0" fill="rgb(220,199,11)" rx="2" ry="2" />
<text  x="909.54" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.2" y="1877" width="0.2" height="15.0" fill="rgb(234,49,25)" rx="2" ry="2" />
<text  x="13.19" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="84.0" y="1941" width="0.6" height="15.0" fill="rgb(205,172,47)" rx="2" ry="2" />
<text  x="87.03" y="1951.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;std::__detail::_State&lt;char&gt; const*, std::__detail::_State&lt;char&gt;*&gt; (1 samples, 0.02%)</title><rect x="137.6" y="1797" width="0.2" height="15.0" fill="rgb(231,82,10)" rx="2" ry="2" />
<text  x="140.60" y="1807.5" ></text>
</g>
<g >
<title>__dynamic_cast (8 samples, 0.13%)</title><rect x="104.9" y="1589" width="1.5" height="15.0" fill="rgb(227,140,41)" rx="2" ry="2" />
<text  x="107.88" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.5" y="1877" width="0.1" height="15.0" fill="rgb(246,144,41)" rx="2" ry="2" />
<text  x="1168.45" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.3" y="741" width="0.2" height="15.0" fill="rgb(218,137,9)" rx="2" ry="2" />
<text  x="1168.26" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (152 samples, 2.51%)</title><rect x="138.8" y="1909" width="29.6" height="15.0" fill="rgb(215,106,1)" rx="2" ry="2" />
<text  x="141.77" y="1919.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.6" y="661" width="0.2" height="15.0" fill="rgb(210,197,28)" rx="2" ry="2" />
<text  x="141.58" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.1" y="789" width="0.2" height="15.0" fill="rgb(234,167,5)" rx="2" ry="2" />
<text  x="1168.06" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.1" y="213" width="0.2" height="15.0" fill="rgb(244,10,26)" rx="2" ry="2" />
<text  x="1168.06" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.5" y="2021" width="0.1" height="15.0" fill="rgb(248,162,15)" rx="2" ry="2" />
<text  x="1168.45" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.3" y="1349" width="0.2" height="15.0" fill="rgb(246,229,22)" rx="2" ry="2" />
<text  x="1167.28" y="1359.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::str[abi:cxx11] (2 samples, 0.03%)</title><rect x="590.7" y="1909" width="0.4" height="15.0" fill="rgb(253,25,0)" rx="2" ry="2" />
<text  x="593.75" y="1919.5" ></text>
</g>
<g >
<title>DetectCategory (7 samples, 0.12%)</title><rect x="586.1" y="1973" width="1.3" height="15.0" fill="rgb(235,168,30)" rx="2" ry="2" />
<text  x="589.07" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.2" y="1909" width="0.2" height="15.0" fill="rgb(220,86,29)" rx="2" ry="2" />
<text  x="13.19" y="1919.5" ></text>
</g>
<g >
<title>std::istream::_M_extract&lt;long&gt; (1 samples, 0.02%)</title><rect x="186.7" y="1717" width="0.2" height="15.0" fill="rgb(223,179,7)" rx="2" ry="2" />
<text  x="189.70" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.2" y="677" width="0.2" height="15.0" fill="rgb(222,64,20)" rx="2" ry="2" />
<text  x="13.19" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.2" y="933" width="0.2" height="15.0" fill="rgb(228,80,22)" rx="2" ry="2" />
<text  x="13.19" y="943.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::getLine (110 samples, 1.82%)</title><rect x="970.4" y="2053" width="21.5" height="15.0" fill="rgb(211,130,17)" rx="2" ry="2" />
<text  x="973.44" y="2063.5" >f..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1164.5" y="997" width="0.6" height="15.0" fill="rgb(229,203,9)" rx="2" ry="2" />
<text  x="1167.48" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (29 samples, 0.48%)</title><rect x="162.2" y="1701" width="5.6" height="15.0" fill="rgb(252,220,31)" rx="2" ry="2" />
<text  x="165.15" y="1711.5" ></text>
</g>
<g >
<title>std::future&lt;boost::optional&lt;TDocument&gt; &gt;::get (2 samples, 0.03%)</title><rect x="103.5" y="1989" width="0.4" height="15.0" fill="rgb(222,41,27)" rx="2" ry="2" />
<text  x="106.51" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="1077" width="0.4" height="15.0" fill="rgb(247,130,22)" rx="2" ry="2" />
<text  x="87.22" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (31 samples, 0.51%)</title><rect x="155.7" y="1749" width="6.1" height="15.0" fill="rgb(253,8,10)" rx="2" ry="2" />
<text  x="158.72" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="168.4" y="1669" width="0.4" height="15.0" fill="rgb(212,103,5)" rx="2" ry="2" />
<text  x="171.39" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.2" y="1477" width="0.2" height="15.0" fill="rgb(245,199,36)" rx="2" ry="2" />
<text  x="13.19" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (74 samples, 1.22%)</title><rect x="104.5" y="1749" width="14.4" height="15.0" fill="rgb(251,80,46)" rx="2" ry="2" />
<text  x="107.49" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="213.4" y="997" width="0.2" height="15.0" fill="rgb(246,27,11)" rx="2" ry="2" />
<text  x="216.39" y="1007.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="1189" width="0.4" height="15.0" fill="rgb(215,80,39)" rx="2" ry="2" />
<text  x="87.22" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (28 samples, 0.46%)</title><rect x="132.1" y="1717" width="5.5" height="15.0" fill="rgb(235,15,8)" rx="2" ry="2" />
<text  x="135.15" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.3" y="1765" width="0.2" height="15.0" fill="rgb(232,52,44)" rx="2" ry="2" />
<text  x="1167.28" y="1775.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (3 samples, 0.05%)</title><rect x="136.4" y="1685" width="0.6" height="15.0" fill="rgb(205,122,11)" rx="2" ry="2" />
<text  x="139.44" y="1695.5" ></text>
</g>
<g >
<title>do_page_fault (20 samples, 0.33%)</title><rect x="39.2" y="2021" width="3.9" height="15.0" fill="rgb(241,137,28)" rx="2" ry="2" />
<text  x="42.22" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1165.1" y="1701" width="0.4" height="15.0" fill="rgb(211,86,1)" rx="2" ry="2" />
<text  x="1168.06" y="1711.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::create&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="584.3" y="2005" width="0.2" height="15.0" fill="rgb(206,135,27)" rx="2" ry="2" />
<text  x="587.32" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.3" y="1445" width="0.2" height="15.0" fill="rgb(225,225,48)" rx="2" ry="2" />
<text  x="1167.28" y="1455.5" ></text>
</g>
<g >
<title>operator new[] (4 samples, 0.07%)</title><rect x="1117.3" y="2053" width="0.8" height="15.0" fill="rgb(247,210,23)" rx="2" ry="2" />
<text  x="1120.33" y="2063.5" ></text>
</g>
<g >
<title>operator delete (2 samples, 0.03%)</title><rect x="139.9" y="1573" width="0.4" height="15.0" fill="rgb(216,61,29)" rx="2" ry="2" />
<text  x="142.94" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.6" y="1173" width="0.2" height="15.0" fill="rgb(234,216,49)" rx="2" ry="2" />
<text  x="141.58" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1164.5" y="53" width="0.6" height="15.0" fill="rgb(211,7,36)" rx="2" ry="2" />
<text  x="1167.48" y="63.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (3 samples, 0.05%)</title><rect x="131.0" y="1669" width="0.6" height="15.0" fill="rgb(226,207,31)" rx="2" ry="2" />
<text  x="133.98" y="1679.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt;@plt (2 samples, 0.03%)</title><rect x="150.3" y="1605" width="0.4" height="15.0" fill="rgb(216,203,53)" rx="2" ry="2" />
<text  x="153.27" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.07%)</title><rect x="168.4" y="1813" width="0.8" height="15.0" fill="rgb(229,204,12)" rx="2" ry="2" />
<text  x="171.39" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.3" y="757" width="0.2" height="15.0" fill="rgb(222,213,49)" rx="2" ry="2" />
<text  x="1167.28" y="767.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="565" width="0.4" height="15.0" fill="rgb(245,103,25)" rx="2" ry="2" />
<text  x="87.22" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (2 samples, 0.03%)</title><rect x="116.6" y="1605" width="0.4" height="15.0" fill="rgb(214,149,26)" rx="2" ry="2" />
<text  x="119.56" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.3" y="325" width="0.2" height="15.0" fill="rgb(231,30,12)" rx="2" ry="2" />
<text  x="1168.26" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.1" y="613" width="0.2" height="15.0" fill="rgb(239,190,46)" rx="2" ry="2" />
<text  x="1167.09" y="623.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="1317" width="0.4" height="15.0" fill="rgb(233,91,4)" rx="2" ry="2" />
<text  x="87.22" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.07%)</title><rect x="168.4" y="1845" width="0.8" height="15.0" fill="rgb(215,203,21)" rx="2" ry="2" />
<text  x="171.39" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.1" y="1013" width="0.2" height="15.0" fill="rgb(245,3,22)" rx="2" ry="2" />
<text  x="1167.09" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.1" y="1045" width="0.2" height="15.0" fill="rgb(227,122,52)" rx="2" ry="2" />
<text  x="1168.06" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.1" y="1461" width="0.2" height="15.0" fill="rgb(234,194,40)" rx="2" ry="2" />
<text  x="1167.09" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (1 samples, 0.02%)</title><rect x="167.8" y="1765" width="0.2" height="15.0" fill="rgb(223,222,38)" rx="2" ry="2" />
<text  x="170.80" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.1" y="1957" width="0.2" height="15.0" fill="rgb(207,152,1)" rx="2" ry="2" />
<text  x="1167.09" y="1967.5" ></text>
</g>
<g >
<title>operator new@plt (1 samples, 0.02%)</title><rect x="1117.1" y="2053" width="0.2" height="15.0" fill="rgb(213,98,22)" rx="2" ry="2" />
<text  x="1120.14" y="2063.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="845.8" y="1845" width="0.2" height="15.0" fill="rgb(233,51,28)" rx="2" ry="2" />
<text  x="848.76" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.1" y="1285" width="0.2" height="15.0" fill="rgb(217,188,22)" rx="2" ry="2" />
<text  x="1168.06" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.5" y="757" width="0.1" height="15.0" fill="rgb(209,177,42)" rx="2" ry="2" />
<text  x="1168.45" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.5" y="1941" width="0.1" height="15.0" fill="rgb(246,150,52)" rx="2" ry="2" />
<text  x="1168.45" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.2" y="1349" width="0.2" height="15.0" fill="rgb(217,86,44)" rx="2" ry="2" />
<text  x="13.19" y="1359.5" ></text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::get (2 samples, 0.03%)</title><rect x="90.8" y="1941" width="0.4" height="15.0" fill="rgb(236,172,47)" rx="2" ry="2" />
<text  x="93.85" y="1951.5" ></text>
</g>
<g >
<title>__do_munmap (1 samples, 0.02%)</title><rect x="456.9" y="1893" width="0.2" height="15.0" fill="rgb(240,53,37)" rx="2" ry="2" />
<text  x="459.91" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (1 samples, 0.02%)</title><rect x="210.3" y="1781" width="0.2" height="15.0" fill="rgb(229,92,36)" rx="2" ry="2" />
<text  x="213.27" y="1791.5" ></text>
</g>
<g >
<title>page_fault (45 samples, 0.74%)</title><rect x="433.5" y="1957" width="8.8" height="15.0" fill="rgb(217,60,4)" rx="2" ry="2" />
<text  x="436.53" y="1967.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (3 samples, 0.05%)</title><rect x="1134.5" y="2053" width="0.6" height="15.0" fill="rgb(227,128,37)" rx="2" ry="2" />
<text  x="1137.48" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (38 samples, 0.63%)</title><rect x="179.3" y="1701" width="7.4" height="15.0" fill="rgb(221,153,4)" rx="2" ry="2" />
<text  x="182.30" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (32 samples, 0.53%)</title><rect x="203.8" y="1797" width="6.3" height="15.0" fill="rgb(254,193,29)" rx="2" ry="2" />
<text  x="206.84" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.3" y="693" width="0.2" height="15.0" fill="rgb(225,42,17)" rx="2" ry="2" />
<text  x="1168.26" y="703.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (1 samples, 0.02%)</title><rect x="194.5" y="1637" width="0.2" height="15.0" fill="rgb(246,213,8)" rx="2" ry="2" />
<text  x="197.49" y="1647.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (6 samples, 0.10%)</title><rect x="183.6" y="1605" width="1.1" height="15.0" fill="rgb(215,132,46)" rx="2" ry="2" />
<text  x="186.58" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.07%)</title><rect x="168.4" y="1829" width="0.8" height="15.0" fill="rgb(210,105,28)" rx="2" ry="2" />
<text  x="171.39" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.1" y="1509" width="0.2" height="15.0" fill="rgb(209,171,49)" rx="2" ry="2" />
<text  x="1168.06" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="168.6" y="1397" width="0.2" height="15.0" fill="rgb(246,80,29)" rx="2" ry="2" />
<text  x="171.58" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.3" y="1157" width="0.2" height="15.0" fill="rgb(218,91,15)" rx="2" ry="2" />
<text  x="1167.28" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.2" y="53" width="0.2" height="15.0" fill="rgb(253,93,29)" rx="2" ry="2" />
<text  x="13.19" y="63.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="84.0" y="1797" width="0.6" height="15.0" fill="rgb(247,40,50)" rx="2" ry="2" />
<text  x="87.03" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.3" y="1221" width="0.2" height="15.0" fill="rgb(251,110,43)" rx="2" ry="2" />
<text  x="1167.28" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.3" y="1205" width="0.2" height="15.0" fill="rgb(232,129,24)" rx="2" ry="2" />
<text  x="1168.26" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (36 samples, 0.59%)</title><rect x="196.2" y="1717" width="7.1" height="15.0" fill="rgb(233,122,2)" rx="2" ry="2" />
<text  x="199.24" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.2" y="693" width="0.2" height="15.0" fill="rgb(235,76,31)" rx="2" ry="2" />
<text  x="13.19" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="169.0" y="1381" width="0.2" height="15.0" fill="rgb(235,93,35)" rx="2" ry="2" />
<text  x="171.97" y="1391.5" ></text>
</g>
<g >
<title>test_clear_page_writeback (1 samples, 0.02%)</title><rect x="323.3" y="1749" width="0.2" height="15.0" fill="rgb(254,3,1)" rx="2" ry="2" />
<text  x="326.26" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.1" y="1173" width="0.2" height="15.0" fill="rgb(208,151,54)" rx="2" ry="2" />
<text  x="1167.09" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.3" y="1493" width="0.2" height="15.0" fill="rgb(240,35,11)" rx="2" ry="2" />
<text  x="1167.28" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (29 samples, 0.48%)</title><rect x="162.2" y="1733" width="5.6" height="15.0" fill="rgb(229,84,20)" rx="2" ry="2" />
<text  x="165.15" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (1 samples, 0.02%)</title><rect x="138.0" y="1797" width="0.2" height="15.0" fill="rgb(254,205,34)" rx="2" ry="2" />
<text  x="140.99" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.1" y="725" width="0.2" height="15.0" fill="rgb(233,195,22)" rx="2" ry="2" />
<text  x="1168.06" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="213.4" y="1301" width="0.2" height="15.0" fill="rgb(251,106,35)" rx="2" ry="2" />
<text  x="216.39" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.1" y="1173" width="0.2" height="15.0" fill="rgb(240,212,39)" rx="2" ry="2" />
<text  x="1168.06" y="1183.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt;@plt (1 samples, 0.02%)</title><rect x="209.9" y="1701" width="0.2" height="15.0" fill="rgb(249,31,36)" rx="2" ry="2" />
<text  x="212.88" y="1711.5" ></text>
</g>
<g >
<title>onmt::unicode::explode_utf8_with_marks (177 samples, 2.92%)</title><rect x="677.2" y="1877" width="34.5" height="15.0" fill="rgb(216,77,50)" rx="2" ry="2" />
<text  x="680.24" y="1887.5" >on..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.1" y="181" width="0.2" height="15.0" fill="rgb(214,102,6)" rx="2" ry="2" />
<text  x="1167.09" y="191.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1109.2" y="2021" width="0.1" height="15.0" fill="rgb(227,92,6)" rx="2" ry="2" />
<text  x="1112.15" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (46 samples, 0.76%)</title><rect x="170.3" y="1701" width="9.0" height="15.0" fill="rgb(230,197,16)" rx="2" ry="2" />
<text  x="173.33" y="1711.5" ></text>
</g>
<g >
<title>virtual thunk to std::__cxx11::basic_istringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_istringstream (2 samples, 0.03%)</title><rect x="883.0" y="2037" width="0.4" height="15.0" fill="rgb(220,167,33)" rx="2" ry="2" />
<text  x="885.97" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.1" y="213" width="0.2" height="15.0" fill="rgb(254,152,37)" rx="2" ry="2" />
<text  x="1167.09" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.3" y="1189" width="0.2" height="15.0" fill="rgb(233,117,8)" rx="2" ry="2" />
<text  x="1167.28" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="213.4" y="1045" width="0.2" height="15.0" fill="rgb(243,162,29)" rx="2" ry="2" />
<text  x="216.39" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="169.0" y="1237" width="0.2" height="15.0" fill="rgb(206,147,11)" rx="2" ry="2" />
<text  x="171.97" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.3" y="933" width="0.2" height="15.0" fill="rgb(212,151,32)" rx="2" ry="2" />
<text  x="1168.26" y="943.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="1653" width="0.4" height="15.0" fill="rgb(227,56,31)" rx="2" ry="2" />
<text  x="87.22" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.3" y="661" width="0.2" height="15.0" fill="rgb(246,119,7)" rx="2" ry="2" />
<text  x="1167.28" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.2" y="1013" width="0.2" height="15.0" fill="rgb(234,66,26)" rx="2" ry="2" />
<text  x="13.19" y="1023.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="137.6" y="1813" width="0.2" height="15.0" fill="rgb(240,176,47)" rx="2" ry="2" />
<text  x="140.60" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="213.4" y="1109" width="0.2" height="15.0" fill="rgb(234,78,37)" rx="2" ry="2" />
<text  x="216.39" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.5" y="1989" width="0.1" height="15.0" fill="rgb(219,216,25)" rx="2" ry="2" />
<text  x="1168.45" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.1" y="677" width="0.2" height="15.0" fill="rgb(243,221,19)" rx="2" ry="2" />
<text  x="1167.09" y="687.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id@plt (1 samples, 0.02%)</title><rect x="111.1" y="1589" width="0.2" height="15.0" fill="rgb(236,167,10)" rx="2" ry="2" />
<text  x="114.11" y="1599.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::load (2 samples, 0.03%)</title><rect x="84.2" y="37" width="0.4" height="15.0" fill="rgb(231,190,3)" rx="2" ry="2" />
<text  x="87.22" y="47.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="213.0" y="1781" width="0.6" height="15.0" fill="rgb(246,205,32)" rx="2" ry="2" />
<text  x="216.00" y="1791.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="933" width="0.4" height="15.0" fill="rgb(228,44,54)" rx="2" ry="2" />
<text  x="87.22" y="943.5" ></text>
</g>
<g >
<title>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::dump_escaped (1 samples, 0.02%)</title><rect x="584.5" y="1909" width="0.2" height="15.0" fill="rgb(246,164,42)" rx="2" ry="2" />
<text  x="587.51" y="1919.5" ></text>
</g>
<g >
<title>TAgencyRating::ScoreUrl (1 samples, 0.02%)</title><rect x="10.2" y="2053" width="0.2" height="15.0" fill="rgb(246,87,41)" rx="2" ry="2" />
<text  x="13.19" y="2063.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; const*, std::vector&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::allocator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;*&gt; (2 samples, 0.03%)</title><rect x="585.1" y="1893" width="0.4" height="15.0" fill="rgb(245,109,48)" rx="2" ry="2" />
<text  x="588.10" y="1903.5" ></text>
</g>
<g >
<title>handle_mm_fault (10 samples, 0.17%)</title><rect x="709.8" y="1813" width="1.9" height="15.0" fill="rgb(206,215,2)" rx="2" ry="2" />
<text  x="712.78" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.5" y="85" width="0.1" height="15.0" fill="rgb(205,150,0)" rx="2" ry="2" />
<text  x="1168.45" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (170 samples, 2.81%)</title><rect x="170.3" y="1797" width="33.2" height="15.0" fill="rgb(254,179,34)" rx="2" ry="2" />
<text  x="173.33" y="1807.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.1" y="1989" width="0.2" height="15.0" fill="rgb(236,26,0)" rx="2" ry="2" />
<text  x="1167.09" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (170 samples, 2.81%)</title><rect x="104.5" y="1845" width="33.1" height="15.0" fill="rgb(207,57,35)" rx="2" ry="2" />
<text  x="107.49" y="1855.5" >st..</text>
</g>
<g >
<title>__dynamic_cast (6 samples, 0.10%)</title><rect x="144.8" y="1605" width="1.2" height="15.0" fill="rgb(251,223,33)" rx="2" ry="2" />
<text  x="147.81" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1164.5" y="293" width="0.6" height="15.0" fill="rgb(236,194,28)" rx="2" ry="2" />
<text  x="1167.48" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1164.5" y="933" width="0.6" height="15.0" fill="rgb(249,98,25)" rx="2" ry="2" />
<text  x="1167.48" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.5" y="229" width="0.1" height="15.0" fill="rgb(254,67,18)" rx="2" ry="2" />
<text  x="1168.45" y="239.5" ></text>
</g>
<g >
<title>__strxfrm_l (37 samples, 0.61%)</title><rect x="1156.9" y="2037" width="7.2" height="15.0" fill="rgb(235,172,11)" rx="2" ry="2" />
<text  x="1159.88" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.2" y="1845" width="0.2" height="15.0" fill="rgb(227,32,27)" rx="2" ry="2" />
<text  x="13.19" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Scanner&lt;char&gt;::_Scanner (1 samples, 0.02%)</title><rect x="212.4" y="1925" width="0.2" height="15.0" fill="rgb(205,24,29)" rx="2" ry="2" />
<text  x="215.41" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (211 samples, 3.48%)</title><rect x="170.1" y="1893" width="41.1" height="15.0" fill="rgb(253,159,30)" rx="2" ry="2" />
<text  x="173.14" y="1903.5" >std..</text>
</g>
<g >
<title>[libc-2.27.so] (2 samples, 0.03%)</title><rect x="586.1" y="1957" width="0.4" height="15.0" fill="rgb(215,25,11)" rx="2" ry="2" />
<text  x="589.07" y="1967.5" ></text>
</g>
<g >
<title>cfree (2 samples, 0.03%)</title><rect x="146.0" y="1605" width="0.4" height="15.0" fill="rgb(247,196,53)" rx="2" ry="2" />
<text  x="148.98" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.6" y="1077" width="0.2" height="15.0" fill="rgb(209,211,21)" rx="2" ry="2" />
<text  x="141.58" y="1087.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::do_tolower (1 samples, 0.02%)</title><rect x="137.0" y="1701" width="0.2" height="15.0" fill="rgb(253,186,27)" rx="2" ry="2" />
<text  x="140.02" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.2" y="1893" width="0.2" height="15.0" fill="rgb(211,123,29)" rx="2" ry="2" />
<text  x="13.19" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="1749" width="0.4" height="15.0" fill="rgb(249,164,37)" rx="2" ry="2" />
<text  x="87.22" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1164.5" y="213" width="0.6" height="15.0" fill="rgb(229,57,36)" rx="2" ry="2" />
<text  x="1167.48" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1164.5" y="581" width="0.6" height="15.0" fill="rgb(251,216,9)" rx="2" ry="2" />
<text  x="1167.48" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1164.5" y="1237" width="0.6" height="15.0" fill="rgb(241,106,36)" rx="2" ry="2" />
<text  x="1167.48" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.2" y="1093" width="0.2" height="15.0" fill="rgb(230,193,16)" rx="2" ry="2" />
<text  x="13.19" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1165.1" y="1797" width="0.4" height="15.0" fill="rgb(234,128,10)" rx="2" ry="2" />
<text  x="1168.06" y="1807.5" ></text>
</g>
<g >
<title>unmap_region (1 samples, 0.02%)</title><rect x="456.9" y="1877" width="0.2" height="15.0" fill="rgb(216,146,53)" rx="2" ry="2" />
<text  x="459.91" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="168.8" y="1653" width="0.4" height="15.0" fill="rgb(244,146,10)" rx="2" ry="2" />
<text  x="171.77" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="169.0" y="1317" width="0.2" height="15.0" fill="rgb(228,162,45)" rx="2" ry="2" />
<text  x="171.97" y="1327.5" ></text>
</g>
<g >
<title>get_vma_policy.part.36 (1 samples, 0.02%)</title><rect x="41.0" y="1941" width="0.2" height="15.0" fill="rgb(244,94,29)" rx="2" ry="2" />
<text  x="43.98" y="1951.5" ></text>
</g>
<g >
<title>memcpy@plt (1 samples, 0.02%)</title><rect x="613.2" y="1893" width="0.1" height="15.0" fill="rgb(225,195,49)" rx="2" ry="2" />
<text  x="616.15" y="1903.5" ></text>
</g>
<g >
<title>unmap_vmas (1 samples, 0.02%)</title><rect x="583.1" y="1877" width="0.2" height="15.0" fill="rgb(226,52,6)" rx="2" ry="2" />
<text  x="586.15" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="1429" width="0.4" height="15.0" fill="rgb(216,143,54)" rx="2" ry="2" />
<text  x="87.22" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="169.0" y="1349" width="0.2" height="15.0" fill="rgb(250,212,46)" rx="2" ry="2" />
<text  x="171.97" y="1359.5" ></text>
</g>
<g >
<title>__dynamic_cast (6 samples, 0.10%)</title><rect x="174.2" y="1573" width="1.2" height="15.0" fill="rgb(219,51,7)" rx="2" ry="2" />
<text  x="177.23" y="1583.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="583.1" y="1957" width="0.2" height="15.0" fill="rgb(219,72,27)" rx="2" ry="2" />
<text  x="586.15" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="168.4" y="1733" width="0.4" height="15.0" fill="rgb(238,23,26)" rx="2" ry="2" />
<text  x="171.39" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.2" y="1925" width="0.2" height="15.0" fill="rgb(232,38,50)" rx="2" ry="2" />
<text  x="13.19" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.1" y="1237" width="0.2" height="15.0" fill="rgb(206,114,10)" rx="2" ry="2" />
<text  x="1167.09" y="1247.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::_M_transform@plt (2 samples, 0.03%)</title><rect x="1143.8" y="2053" width="0.4" height="15.0" fill="rgb(207,145,13)" rx="2" ry="2" />
<text  x="1146.83" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="485" width="0.4" height="15.0" fill="rgb(225,87,3)" rx="2" ry="2" />
<text  x="87.22" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (4 samples, 0.07%)</title><rect x="211.4" y="1829" width="0.8" height="15.0" fill="rgb(233,60,5)" rx="2" ry="2" />
<text  x="214.44" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="1237" width="0.4" height="15.0" fill="rgb(253,77,14)" rx="2" ry="2" />
<text  x="87.22" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.2" y="1157" width="0.2" height="15.0" fill="rgb(205,125,32)" rx="2" ry="2" />
<text  x="13.19" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="169.0" y="1061" width="0.2" height="15.0" fill="rgb(216,55,30)" rx="2" ry="2" />
<text  x="171.97" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (85 samples, 1.40%)</title><rect x="170.3" y="1765" width="16.6" height="15.0" fill="rgb(206,83,41)" rx="2" ry="2" />
<text  x="173.33" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.3" y="1077" width="0.2" height="15.0" fill="rgb(227,24,15)" rx="2" ry="2" />
<text  x="1168.26" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.3" y="245" width="0.2" height="15.0" fill="rgb(219,63,29)" rx="2" ry="2" />
<text  x="1168.26" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1164.5" y="1637" width="0.6" height="15.0" fill="rgb(225,193,6)" rx="2" ry="2" />
<text  x="1167.48" y="1647.5" ></text>
</g>
<g >
<title>onmt::CaseModifier::type_to_char@plt (1 samples, 0.02%)</title><rect x="593.7" y="1893" width="0.2" height="15.0" fill="rgb(218,153,46)" rx="2" ry="2" />
<text  x="596.67" y="1903.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="431.8" y="1813" width="0.2" height="15.0" fill="rgb(215,179,47)" rx="2" ry="2" />
<text  x="434.78" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.5" y="1349" width="0.1" height="15.0" fill="rgb(223,135,41)" rx="2" ry="2" />
<text  x="1168.45" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1164.5" y="1365" width="0.6" height="15.0" fill="rgb(230,113,49)" rx="2" ry="2" />
<text  x="1167.48" y="1375.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::do_tolower (2 samples, 0.03%)</title><rect x="194.7" y="1637" width="0.4" height="15.0" fill="rgb(217,225,2)" rx="2" ry="2" />
<text  x="197.69" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.07%)</title><rect x="168.4" y="1797" width="0.8" height="15.0" fill="rgb(212,188,32)" rx="2" ry="2" />
<text  x="171.39" y="1807.5" ></text>
</g>
<g >
<title>ext4_finish_bio (1 samples, 0.02%)</title><rect x="323.3" y="1781" width="0.2" height="15.0" fill="rgb(235,192,30)" rx="2" ry="2" />
<text  x="326.26" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.2" y="1029" width="0.2" height="15.0" fill="rgb(243,228,30)" rx="2" ry="2" />
<text  x="13.19" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.1" y="677" width="0.2" height="15.0" fill="rgb(249,153,51)" rx="2" ry="2" />
<text  x="1168.06" y="687.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="1589" width="0.4" height="15.0" fill="rgb(239,181,23)" rx="2" ry="2" />
<text  x="87.22" y="1599.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="323.3" y="1941" width="0.2" height="15.0" fill="rgb(213,75,40)" rx="2" ry="2" />
<text  x="326.26" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (1 samples, 0.02%)</title><rect x="186.9" y="1701" width="0.2" height="15.0" fill="rgb(234,147,31)" rx="2" ry="2" />
<text  x="189.89" y="1711.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (3 samples, 0.05%)</title><rect x="201.1" y="1653" width="0.6" height="15.0" fill="rgb(207,37,39)" rx="2" ry="2" />
<text  x="204.11" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (1 samples, 0.02%)</title><rect x="139.2" y="1589" width="0.2" height="15.0" fill="rgb(229,187,19)" rx="2" ry="2" />
<text  x="142.16" y="1599.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (11 samples, 0.18%)</title><rect x="46.0" y="2005" width="2.2" height="15.0" fill="rgb(241,190,30)" rx="2" ry="2" />
<text  x="49.04" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.1" y="325" width="0.2" height="15.0" fill="rgb(250,84,20)" rx="2" ry="2" />
<text  x="1167.09" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::basic_regex&lt;char const*&gt; (152 samples, 2.51%)</title><rect x="138.8" y="1941" width="29.6" height="15.0" fill="rgb(247,118,38)" rx="2" ry="2" />
<text  x="141.77" y="1951.5" >st..</text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::scan_string (62 samples, 1.02%)</title><rect x="91.4" y="1941" width="12.1" height="15.0" fill="rgb(235,117,6)" rx="2" ry="2" />
<text  x="94.43" y="1951.5" ></text>
</g>
<g >
<title>alloc_pages_vma (8 samples, 0.13%)</title><rect x="709.8" y="1781" width="1.5" height="15.0" fill="rgb(215,143,40)" rx="2" ry="2" />
<text  x="712.78" y="1791.5" ></text>
</g>
<g >
<title>handle_mm_fault (23 samples, 0.38%)</title><rect x="428.9" y="1893" width="4.4" height="15.0" fill="rgb(228,173,27)" rx="2" ry="2" />
<text  x="431.85" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.3" y="1333" width="0.2" height="15.0" fill="rgb(254,88,10)" rx="2" ry="2" />
<text  x="1167.28" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.5" y="549" width="0.1" height="15.0" fill="rgb(224,139,24)" rx="2" ry="2" />
<text  x="1168.45" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.1" y="965" width="0.2" height="15.0" fill="rgb(243,17,36)" rx="2" ry="2" />
<text  x="1167.09" y="975.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (2 samples, 0.03%)</title><rect x="209.1" y="1685" width="0.4" height="15.0" fill="rgb(244,142,12)" rx="2" ry="2" />
<text  x="212.10" y="1695.5" ></text>
</g>
<g >
<title>GetHost (224 samples, 3.70%)</title><rect x="169.9" y="1973" width="43.7" height="15.0" fill="rgb(213,174,17)" rx="2" ry="2" />
<text  x="172.94" y="1983.5" >GetH..</text>
</g>
<g >
<title>tgnews (6,057 samples, 100.00%)</title><rect x="10.0" y="2069" width="1180.0" height="15.0" fill="rgb(226,100,12)" rx="2" ry="2" />
<text  x="13.00" y="2079.5" >tgnews</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.1" y="1381" width="0.2" height="15.0" fill="rgb(254,31,20)" rx="2" ry="2" />
<text  x="1167.09" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.3" y="949" width="0.2" height="15.0" fill="rgb(228,151,23)" rx="2" ry="2" />
<text  x="1167.28" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.6" y="1301" width="0.2" height="15.0" fill="rgb(213,33,6)" rx="2" ry="2" />
<text  x="141.58" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="213.2" y="1157" width="0.2" height="15.0" fill="rgb(221,45,42)" rx="2" ry="2" />
<text  x="216.19" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1164.5" y="1109" width="0.6" height="15.0" fill="rgb(219,12,18)" rx="2" ry="2" />
<text  x="1167.48" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (30 samples, 0.50%)</title><rect x="155.9" y="1701" width="5.9" height="15.0" fill="rgb(210,145,40)" rx="2" ry="2" />
<text  x="158.92" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.5" y="165" width="0.1" height="15.0" fill="rgb(224,58,11)" rx="2" ry="2" />
<text  x="1168.45" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.1" y="1589" width="0.2" height="15.0" fill="rgb(247,69,48)" rx="2" ry="2" />
<text  x="1168.06" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.3" y="261" width="0.2" height="15.0" fill="rgb(236,10,46)" rx="2" ry="2" />
<text  x="1167.28" y="271.5" ></text>
</g>
<g >
<title>unmap_single_vma (1 samples, 0.02%)</title><rect x="583.1" y="1861" width="0.2" height="15.0" fill="rgb(237,229,52)" rx="2" ry="2" />
<text  x="586.15" y="1871.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::_M_default_append (1 samples, 0.02%)</title><rect x="169.2" y="1941" width="0.2" height="15.0" fill="rgb(227,33,7)" rx="2" ry="2" />
<text  x="172.16" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1164.5" y="1573" width="0.6" height="15.0" fill="rgb(229,109,6)" rx="2" ry="2" />
<text  x="1167.48" y="1583.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="1413" width="0.4" height="15.0" fill="rgb(224,29,0)" rx="2" ry="2" />
<text  x="87.22" y="1423.5" ></text>
</g>
<g >
<title>do_page_fault (34 samples, 0.56%)</title><rect x="426.9" y="1925" width="6.6" height="15.0" fill="rgb(238,149,20)" rx="2" ry="2" />
<text  x="429.91" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.3" y="629" width="0.2" height="15.0" fill="rgb(220,149,39)" rx="2" ry="2" />
<text  x="1168.26" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_try_char (1 samples, 0.02%)</title><rect x="125.5" y="1637" width="0.2" height="15.0" fill="rgb(220,149,26)" rx="2" ry="2" />
<text  x="128.53" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.6" y="1637" width="0.2" height="15.0" fill="rgb(216,35,11)" rx="2" ry="2" />
<text  x="141.58" y="1647.5" ></text>
</g>
<g >
<title>cfree (1 samples, 0.02%)</title><rect x="103.9" y="1941" width="0.2" height="15.0" fill="rgb(236,222,13)" rx="2" ry="2" />
<text  x="106.90" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.07%)</title><rect x="212.8" y="1861" width="0.8" height="15.0" fill="rgb(223,153,49)" rx="2" ry="2" />
<text  x="215.80" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.2" y="1717" width="0.2" height="15.0" fill="rgb(246,30,34)" rx="2" ry="2" />
<text  x="13.19" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.1" y="821" width="0.2" height="15.0" fill="rgb(254,19,25)" rx="2" ry="2" />
<text  x="1167.09" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="213.2" y="1557" width="0.2" height="15.0" fill="rgb(249,37,5)" rx="2" ry="2" />
<text  x="216.19" y="1567.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.07%)</title><rect x="639.3" y="1861" width="0.7" height="15.0" fill="rgb(220,99,26)" rx="2" ry="2" />
<text  x="642.26" y="1871.5" ></text>
</g>
<g >
<title>end_page_writeback (1 samples, 0.02%)</title><rect x="323.3" y="1765" width="0.2" height="15.0" fill="rgb(246,4,21)" rx="2" ry="2" />
<text  x="326.26" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.2" y="981" width="0.2" height="15.0" fill="rgb(208,211,41)" rx="2" ry="2" />
<text  x="13.19" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.3" y="309" width="0.2" height="15.0" fill="rgb(212,54,34)" rx="2" ry="2" />
<text  x="1167.28" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1164.5" y="1333" width="0.6" height="15.0" fill="rgb(233,220,52)" rx="2" ry="2" />
<text  x="1167.48" y="1343.5" ></text>
</g>
<g >
<title>unmap_page_range (1 samples, 0.02%)</title><rect x="933.4" y="1909" width="0.2" height="15.0" fill="rgb(211,60,26)" rx="2" ry="2" />
<text  x="936.43" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.3" y="117" width="0.2" height="15.0" fill="rgb(217,74,24)" rx="2" ry="2" />
<text  x="1168.26" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.5" y="997" width="0.1" height="15.0" fill="rgb(233,68,7)" rx="2" ry="2" />
<text  x="1168.45" y="1007.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::reserve (7 samples, 0.12%)</title><rect x="640.0" y="1861" width="1.4" height="15.0" fill="rgb(252,170,15)" rx="2" ry="2" />
<text  x="643.03" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.1" y="1669" width="0.2" height="15.0" fill="rgb(249,153,47)" rx="2" ry="2" />
<text  x="1167.09" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.1" y="469" width="0.2" height="15.0" fill="rgb(229,180,9)" rx="2" ry="2" />
<text  x="1168.06" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.6" y="869" width="0.2" height="15.0" fill="rgb(219,103,3)" rx="2" ry="2" />
<text  x="141.58" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1164.5" y="853" width="0.6" height="15.0" fill="rgb(233,145,12)" rx="2" ry="2" />
<text  x="1167.48" y="863.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="677.0" y="1797" width="0.2" height="15.0" fill="rgb(242,12,40)" rx="2" ry="2" />
<text  x="680.05" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (46 samples, 0.76%)</title><rect x="170.3" y="1669" width="9.0" height="15.0" fill="rgb(207,54,27)" rx="2" ry="2" />
<text  x="173.33" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_expression_term&lt;false, false&gt; (1 samples, 0.02%)</title><rect x="203.1" y="1685" width="0.2" height="15.0" fill="rgb(239,50,2)" rx="2" ry="2" />
<text  x="206.06" y="1695.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (2 samples, 0.03%)</title><rect x="161.8" y="1717" width="0.4" height="15.0" fill="rgb(246,190,22)" rx="2" ry="2" />
<text  x="164.76" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="213.4" y="1429" width="0.2" height="15.0" fill="rgb(215,142,16)" rx="2" ry="2" />
<text  x="216.39" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (26 samples, 0.43%)</title><rect x="139.2" y="1669" width="5.0" height="15.0" fill="rgb(208,60,47)" rx="2" ry="2" />
<text  x="142.16" y="1679.5" ></text>
</g>
<g >
<title>__vm_munmap (1 samples, 0.02%)</title><rect x="456.9" y="1909" width="0.2" height="15.0" fill="rgb(205,187,42)" rx="2" ry="2" />
<text  x="459.91" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (3 samples, 0.05%)</title><rect x="210.1" y="1813" width="0.6" height="15.0" fill="rgb(238,114,14)" rx="2" ry="2" />
<text  x="213.08" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="213.2" y="789" width="0.2" height="15.0" fill="rgb(234,193,8)" rx="2" ry="2" />
<text  x="216.19" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.2" y="965" width="0.2" height="15.0" fill="rgb(225,54,54)" rx="2" ry="2" />
<text  x="13.19" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.1" y="1269" width="0.2" height="15.0" fill="rgb(228,210,2)" rx="2" ry="2" />
<text  x="1167.09" y="1279.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1109.3" y="2005" width="0.2" height="15.0" fill="rgb(215,119,11)" rx="2" ry="2" />
<text  x="1112.35" y="2015.5" ></text>
</g>
<g >
<title>uncharge_page (1 samples, 0.02%)</title><rect x="583.1" y="1765" width="0.2" height="15.0" fill="rgb(210,2,36)" rx="2" ry="2" />
<text  x="586.15" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.07%)</title><rect x="1164.3" y="1797" width="0.8" height="15.0" fill="rgb(249,8,20)" rx="2" ry="2" />
<text  x="1167.28" y="1807.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (4 samples, 0.07%)</title><rect x="88.3" y="1861" width="0.8" height="15.0" fill="rgb(250,179,40)" rx="2" ry="2" />
<text  x="91.32" y="1871.5" ></text>
</g>
<g >
<title>onmt::unicode::is_number (8 samples, 0.13%)</title><rect x="817.9" y="1893" width="1.6" height="15.0" fill="rgb(249,14,8)" rx="2" ry="2" />
<text  x="820.90" y="1903.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (41 samples, 0.68%)</title><rect x="425.5" y="1957" width="8.0" height="15.0" fill="rgb(212,84,11)" rx="2" ry="2" />
<text  x="428.54" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.1" y="501" width="0.2" height="15.0" fill="rgb(226,18,5)" rx="2" ry="2" />
<text  x="1167.09" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (29 samples, 0.48%)</title><rect x="125.9" y="1781" width="5.7" height="15.0" fill="rgb(211,36,43)" rx="2" ry="2" />
<text  x="128.92" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="213.4" y="1573" width="0.2" height="15.0" fill="rgb(224,48,37)" rx="2" ry="2" />
<text  x="216.39" y="1583.5" ></text>
</g>
<g >
<title>__handle_mm_fault (14 samples, 0.23%)</title><rect x="40.2" y="1973" width="2.7" height="15.0" fill="rgb(244,180,24)" rx="2" ry="2" />
<text  x="43.20" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (210 samples, 3.47%)</title><rect x="170.3" y="1861" width="40.9" height="15.0" fill="rgb(211,55,38)" rx="2" ry="2" />
<text  x="173.33" y="1871.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.5" y="405" width="0.1" height="15.0" fill="rgb(242,166,53)" rx="2" ry="2" />
<text  x="1168.45" y="415.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::str[abi:cxx11]@plt (3 samples, 0.05%)</title><rect x="591.1" y="1909" width="0.6" height="15.0" fill="rgb(215,150,25)" rx="2" ry="2" />
<text  x="594.14" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (35 samples, 0.58%)</title><rect x="196.2" y="1685" width="6.9" height="15.0" fill="rgb(220,23,35)" rx="2" ry="2" />
<text  x="199.24" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.5" y="1061" width="0.1" height="15.0" fill="rgb(205,205,18)" rx="2" ry="2" />
<text  x="1168.45" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1164.5" y="1733" width="0.6" height="15.0" fill="rgb(216,201,21)" rx="2" ry="2" />
<text  x="1167.48" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="213.2" y="821" width="0.2" height="15.0" fill="rgb(240,164,29)" rx="2" ry="2" />
<text  x="216.19" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.1" y="741" width="0.2" height="15.0" fill="rgb(248,13,18)" rx="2" ry="2" />
<text  x="1167.09" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.5" y="789" width="0.1" height="15.0" fill="rgb(231,218,16)" rx="2" ry="2" />
<text  x="1168.45" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.5" y="2005" width="0.1" height="15.0" fill="rgb(242,143,44)" rx="2" ry="2" />
<text  x="1168.45" y="2015.5" ></text>
</g>
<g >
<title>std::istream::sentry::sentry (2 samples, 0.03%)</title><rect x="581.0" y="1973" width="0.4" height="15.0" fill="rgb(236,86,45)" rx="2" ry="2" />
<text  x="584.01" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1164.5" y="629" width="0.6" height="15.0" fill="rgb(210,43,0)" rx="2" ry="2" />
<text  x="1167.48" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (14 samples, 0.23%)</title><rect x="114.4" y="1621" width="2.7" height="15.0" fill="rgb(253,118,48)" rx="2" ry="2" />
<text  x="117.42" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.1" y="1717" width="0.2" height="15.0" fill="rgb(246,92,54)" rx="2" ry="2" />
<text  x="1167.09" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (2 samples, 0.03%)</title><rect x="138.8" y="1669" width="0.4" height="15.0" fill="rgb(239,1,14)" rx="2" ry="2" />
<text  x="141.77" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="84.0" y="1973" width="0.6" height="15.0" fill="rgb(220,207,47)" rx="2" ry="2" />
<text  x="87.03" y="1983.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="181.2" y="1621" width="0.2" height="15.0" fill="rgb(211,144,16)" rx="2" ry="2" />
<text  x="184.24" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (26 samples, 0.43%)</title><rect x="139.2" y="1653" width="5.0" height="15.0" fill="rgb(234,79,52)" rx="2" ry="2" />
<text  x="142.16" y="1663.5" ></text>
</g>
<g >
<title>TDocument::TDocument (1 samples, 0.02%)</title><rect x="345.7" y="2005" width="0.2" height="15.0" fill="rgb(226,80,53)" rx="2" ry="2" />
<text  x="348.67" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="213.2" y="1637" width="0.2" height="15.0" fill="rgb(222,209,30)" rx="2" ry="2" />
<text  x="216.19" y="1647.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::dump (1 samples, 0.02%)</title><rect x="584.5" y="2005" width="0.2" height="15.0" fill="rgb(246,86,45)" rx="2" ry="2" />
<text  x="587.51" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="168.4" y="1717" width="0.4" height="15.0" fill="rgb(209,36,8)" rx="2" ry="2" />
<text  x="171.39" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.5" y="1045" width="0.1" height="15.0" fill="rgb(211,24,43)" rx="2" ry="2" />
<text  x="1168.45" y="1055.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="261" width="0.4" height="15.0" fill="rgb(245,148,43)" rx="2" ry="2" />
<text  x="87.22" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.2" y="69" width="0.2" height="15.0" fill="rgb(245,53,50)" rx="2" ry="2" />
<text  x="13.19" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="169.0" y="1509" width="0.2" height="15.0" fill="rgb(250,6,39)" rx="2" ry="2" />
<text  x="171.97" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.2" y="789" width="0.2" height="15.0" fill="rgb(215,74,37)" rx="2" ry="2" />
<text  x="13.19" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="213.2" y="805" width="0.2" height="15.0" fill="rgb(241,71,6)" rx="2" ry="2" />
<text  x="216.19" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (32 samples, 0.53%)</title><rect x="119.3" y="1653" width="6.2" height="15.0" fill="rgb(245,91,50)" rx="2" ry="2" />
<text  x="122.29" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1164.5" y="1461" width="0.6" height="15.0" fill="rgb(219,42,17)" rx="2" ry="2" />
<text  x="1167.48" y="1471.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="111.3" y="1589" width="0.2" height="15.0" fill="rgb(235,115,47)" rx="2" ry="2" />
<text  x="114.30" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_expression_term&lt;false, false&gt; (1 samples, 0.02%)</title><rect x="125.5" y="1653" width="0.2" height="15.0" fill="rgb(210,83,28)" rx="2" ry="2" />
<text  x="128.53" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="1269" width="0.4" height="15.0" fill="rgb(254,48,47)" rx="2" ry="2" />
<text  x="87.22" y="1279.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="345.5" y="1957" width="0.2" height="15.0" fill="rgb(218,45,45)" rx="2" ry="2" />
<text  x="348.47" y="1967.5" ></text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.02%)</title><rect x="860.4" y="1941" width="0.2" height="15.0" fill="rgb(232,94,47)" rx="2" ry="2" />
<text  x="863.37" y="1951.5" ></text>
</g>
<g >
<title>release_pages (1 samples, 0.02%)</title><rect x="456.9" y="1781" width="0.2" height="15.0" fill="rgb(227,45,39)" rx="2" ry="2" />
<text  x="459.91" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="138.4" y="1749" width="0.4" height="15.0" fill="rgb(211,196,33)" rx="2" ry="2" />
<text  x="141.38" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.3" y="1301" width="0.2" height="15.0" fill="rgb(249,191,41)" rx="2" ry="2" />
<text  x="1168.26" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1164.5" y="1765" width="0.6" height="15.0" fill="rgb(241,37,34)" rx="2" ry="2" />
<text  x="1167.48" y="1775.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::getSubwords (4 samples, 0.07%)</title><rect x="323.7" y="1989" width="0.7" height="15.0" fill="rgb(249,213,45)" rx="2" ry="2" />
<text  x="326.65" y="1999.5" ></text>
</g>
<g >
<title>main (2,548 samples, 42.07%)</title><rect x="89.1" y="2021" width="496.4" height="15.0" fill="rgb(237,114,8)" rx="2" ry="2" />
<text  x="92.10" y="2031.5" >main</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.3" y="709" width="0.2" height="15.0" fill="rgb(249,199,25)" rx="2" ry="2" />
<text  x="1167.28" y="719.5" ></text>
</g>
<g >
<title>unmap_page_range (1 samples, 0.02%)</title><rect x="456.9" y="1829" width="0.2" height="15.0" fill="rgb(210,182,54)" rx="2" ry="2" />
<text  x="459.91" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (151 samples, 2.49%)</title><rect x="138.8" y="1845" width="29.4" height="15.0" fill="rgb(235,166,41)" rx="2" ry="2" />
<text  x="141.77" y="1855.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.2" y="1605" width="0.2" height="15.0" fill="rgb(215,77,33)" rx="2" ry="2" />
<text  x="13.19" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="213.4" y="1237" width="0.2" height="15.0" fill="rgb(209,89,49)" rx="2" ry="2" />
<text  x="216.39" y="1247.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace_aux (1 samples, 0.02%)</title><rect x="203.6" y="1797" width="0.2" height="15.0" fill="rgb(223,153,44)" rx="2" ry="2" />
<text  x="206.65" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (36 samples, 0.59%)</title><rect x="104.7" y="1685" width="7.0" height="15.0" fill="rgb(226,129,46)" rx="2" ry="2" />
<text  x="107.68" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.3" y="1365" width="0.2" height="15.0" fill="rgb(220,63,44)" rx="2" ry="2" />
<text  x="1167.28" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (32 samples, 0.53%)</title><rect x="203.8" y="1765" width="6.3" height="15.0" fill="rgb(224,182,17)" rx="2" ry="2" />
<text  x="206.84" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="213.2" y="1653" width="0.2" height="15.0" fill="rgb(223,87,25)" rx="2" ry="2" />
<text  x="216.19" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (29 samples, 0.48%)</title><rect x="162.2" y="1717" width="5.6" height="15.0" fill="rgb(225,105,24)" rx="2" ry="2" />
<text  x="165.15" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.1" y="1605" width="0.2" height="15.0" fill="rgb(220,96,4)" rx="2" ry="2" />
<text  x="1168.06" y="1615.5" ></text>
</g>
<g >
<title>page_fault (34 samples, 0.56%)</title><rect x="426.9" y="1941" width="6.6" height="15.0" fill="rgb(248,222,37)" rx="2" ry="2" />
<text  x="429.91" y="1951.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::set (3 samples, 0.05%)</title><rect x="614.5" y="1893" width="0.6" height="15.0" fill="rgb(241,72,19)" rx="2" ry="2" />
<text  x="617.51" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="169.0" y="997" width="0.2" height="15.0" fill="rgb(228,202,15)" rx="2" ry="2" />
<text  x="171.97" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (6 samples, 0.10%)</title><rect x="211.2" y="1877" width="1.2" height="15.0" fill="rgb(216,181,22)" rx="2" ry="2" />
<text  x="214.24" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.3" y="37" width="0.2" height="15.0" fill="rgb(212,68,30)" rx="2" ry="2" />
<text  x="1167.28" y="47.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.1" y="1301" width="0.2" height="15.0" fill="rgb(232,200,37)" rx="2" ry="2" />
<text  x="1167.09" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.6" y="1253" width="0.2" height="15.0" fill="rgb(212,9,35)" rx="2" ry="2" />
<text  x="141.58" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1165.1" y="2021" width="0.4" height="15.0" fill="rgb(209,162,14)" rx="2" ry="2" />
<text  x="1168.06" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.2" y="501" width="0.2" height="15.0" fill="rgb(216,51,13)" rx="2" ry="2" />
<text  x="13.19" y="511.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.03%)</title><rect x="205.6" y="1701" width="0.4" height="15.0" fill="rgb(215,178,10)" rx="2" ry="2" />
<text  x="208.60" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_Compiler (175 samples, 2.89%)</title><rect x="104.1" y="1941" width="34.1" height="15.0" fill="rgb(231,17,6)" rx="2" ry="2" />
<text  x="107.10" y="1951.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.5" y="581" width="0.1" height="15.0" fill="rgb(230,90,29)" rx="2" ry="2" />
<text  x="1168.45" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.1" y="405" width="0.2" height="15.0" fill="rgb(251,142,34)" rx="2" ry="2" />
<text  x="1167.09" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (150 samples, 2.48%)</title><rect x="138.8" y="1813" width="29.2" height="15.0" fill="rgb(236,64,47)" rx="2" ry="2" />
<text  x="141.77" y="1823.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.1" y="725" width="0.2" height="15.0" fill="rgb(214,83,21)" rx="2" ry="2" />
<text  x="1167.09" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.3" y="1477" width="0.2" height="15.0" fill="rgb(223,76,48)" rx="2" ry="2" />
<text  x="1168.26" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (1 samples, 0.02%)</title><rect x="168.2" y="1765" width="0.2" height="15.0" fill="rgb(212,164,30)" rx="2" ry="2" />
<text  x="171.19" y="1775.5" ></text>
</g>
<g >
<title>malloc@plt (1 samples, 0.02%)</title><rect x="152.4" y="1621" width="0.2" height="15.0" fill="rgb(253,141,11)" rx="2" ry="2" />
<text  x="155.41" y="1631.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::should_preserve@plt (1 samples, 0.02%)</title><rect x="590.6" y="1909" width="0.1" height="15.0" fill="rgb(224,27,30)" rx="2" ry="2" />
<text  x="593.55" y="1919.5" ></text>
</g>
<g >
<title>memcpy@plt (3 samples, 0.05%)</title><rect x="1112.5" y="2053" width="0.5" height="15.0" fill="rgb(254,57,48)" rx="2" ry="2" />
<text  x="1115.46" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="1733" width="0.4" height="15.0" fill="rgb(247,168,47)" rx="2" ry="2" />
<text  x="87.22" y="1743.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (15 samples, 0.25%)</title><rect x="875.0" y="2037" width="2.9" height="15.0" fill="rgb(227,202,10)" rx="2" ry="2" />
<text  x="877.98" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="169.0" y="885" width="0.2" height="15.0" fill="rgb(231,164,25)" rx="2" ry="2" />
<text  x="171.97" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="213.2" y="1701" width="0.2" height="15.0" fill="rgb(243,15,35)" rx="2" ry="2" />
<text  x="216.19" y="1711.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="585.3" y="1813" width="0.2" height="15.0" fill="rgb(213,114,47)" rx="2" ry="2" />
<text  x="588.29" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.1" y="453" width="0.2" height="15.0" fill="rgb(217,89,21)" rx="2" ry="2" />
<text  x="1168.06" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (1 samples, 0.02%)</title><rect x="168.2" y="1829" width="0.2" height="15.0" fill="rgb(235,191,15)" rx="2" ry="2" />
<text  x="171.19" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.5" y="1733" width="0.1" height="15.0" fill="rgb(212,5,17)" rx="2" ry="2" />
<text  x="1168.45" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.2" y="1973" width="0.2" height="15.0" fill="rgb(237,206,0)" rx="2" ry="2" />
<text  x="13.19" y="1983.5" ></text>
</g>
<g >
<title>nlohmann::detail::parser&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::sax_parse_internal&lt;nlohmann::detail::json_sax_dom_parser&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; (65 samples, 1.07%)</title><rect x="90.8" y="1957" width="12.7" height="15.0" fill="rgb(216,141,26)" rx="2" ry="2" />
<text  x="93.85" y="1967.5" ></text>
</g>
<g >
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="585.7" y="1989" width="0.2" height="15.0" fill="rgb(226,58,2)" rx="2" ry="2" />
<text  x="588.68" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (1 samples, 0.02%)</title><rect x="138.0" y="1765" width="0.2" height="15.0" fill="rgb(228,103,52)" rx="2" ry="2" />
<text  x="140.99" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.2" y="1189" width="0.2" height="15.0" fill="rgb(245,143,31)" rx="2" ry="2" />
<text  x="13.19" y="1199.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::_M_do_set (1,396 samples, 23.05%)</title><rect x="585.9" y="2021" width="271.9" height="15.0" fill="rgb(251,213,43)" rx="2" ry="2" />
<text  x="588.88" y="2031.5" >std::__future_base::_State_baseV2::_..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1164.5" y="1493" width="0.6" height="15.0" fill="rgb(254,212,45)" rx="2" ry="2" />
<text  x="1167.48" y="1503.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="933.4" y="2053" width="0.2" height="15.0" fill="rgb(250,26,46)" rx="2" ry="2" />
<text  x="936.43" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1164.5" y="149" width="0.6" height="15.0" fill="rgb(253,166,33)" rx="2" ry="2" />
<text  x="1167.48" y="159.5" ></text>
</g>
<g >
<title>unmap_page_range (1 samples, 0.02%)</title><rect x="583.1" y="1845" width="0.2" height="15.0" fill="rgb(251,62,0)" rx="2" ry="2" />
<text  x="586.15" y="1855.5" ></text>
</g>
<g >
<title>unmap_region (1 samples, 0.02%)</title><rect x="583.1" y="1893" width="0.2" height="15.0" fill="rgb(218,200,39)" rx="2" ry="2" />
<text  x="586.15" y="1903.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (6 samples, 0.10%)</title><rect x="441.1" y="1861" width="1.2" height="15.0" fill="rgb(246,92,12)" rx="2" ry="2" />
<text  x="444.13" y="1871.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (1 samples, 0.02%)</title><rect x="142.5" y="1557" width="0.2" height="15.0" fill="rgb(218,165,54)" rx="2" ry="2" />
<text  x="145.47" y="1567.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (3 samples, 0.05%)</title><rect x="141.7" y="1557" width="0.6" height="15.0" fill="rgb(210,91,17)" rx="2" ry="2" />
<text  x="144.70" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.5" y="1557" width="0.1" height="15.0" fill="rgb(215,76,40)" rx="2" ry="2" />
<text  x="1168.45" y="1567.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="580.6" y="1973" width="0.2" height="15.0" fill="rgb(246,171,50)" rx="2" ry="2" />
<text  x="583.62" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.1" y="933" width="0.2" height="15.0" fill="rgb(244,143,5)" rx="2" ry="2" />
<text  x="1167.09" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (133 samples, 2.20%)</title><rect x="170.3" y="1781" width="25.9" height="15.0" fill="rgb(215,61,7)" rx="2" ry="2" />
<text  x="173.33" y="1791.5" >s..</text>
</g>
<g >
<title>free_pages_and_swap_cache (1 samples, 0.02%)</title><rect x="456.9" y="1797" width="0.2" height="15.0" fill="rgb(239,153,15)" rx="2" ry="2" />
<text  x="459.91" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (2 samples, 0.03%)</title><rect x="137.8" y="1893" width="0.4" height="15.0" fill="rgb(245,0,29)" rx="2" ry="2" />
<text  x="140.80" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="677" width="0.4" height="15.0" fill="rgb(223,85,10)" rx="2" ry="2" />
<text  x="87.22" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (3 samples, 0.05%)</title><rect x="869.9" y="2037" width="0.6" height="15.0" fill="rgb(237,16,37)" rx="2" ry="2" />
<text  x="872.92" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.6" y="1701" width="0.2" height="15.0" fill="rgb(207,163,53)" rx="2" ry="2" />
<text  x="141.58" y="1711.5" ></text>
</g>
<g >
<title>futex_wake (10 samples, 0.17%)</title><rect x="46.0" y="1941" width="2.0" height="15.0" fill="rgb(213,102,17)" rx="2" ry="2" />
<text  x="49.04" y="1951.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="742.1" y="1781" width="0.2" height="15.0" fill="rgb(231,161,41)" rx="2" ry="2" />
<text  x="745.12" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.3" y="1733" width="0.2" height="15.0" fill="rgb(229,152,49)" rx="2" ry="2" />
<text  x="1167.28" y="1743.5" ></text>
</g>
<g >
<title>std::vector&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::allocator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;::vector (2 samples, 0.03%)</title><rect x="585.1" y="1909" width="0.4" height="15.0" fill="rgb(224,24,38)" rx="2" ry="2" />
<text  x="588.10" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1164.5" y="613" width="0.6" height="15.0" fill="rgb(254,2,5)" rx="2" ry="2" />
<text  x="1167.48" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.5" y="1365" width="0.1" height="15.0" fill="rgb(244,96,12)" rx="2" ry="2" />
<text  x="1168.45" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="213.4" y="1173" width="0.2" height="15.0" fill="rgb(248,24,44)" rx="2" ry="2" />
<text  x="216.39" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.1" y="1413" width="0.2" height="15.0" fill="rgb(252,42,5)" rx="2" ry="2" />
<text  x="1168.06" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_quantifier (1 samples, 0.02%)</title><rect x="119.1" y="1749" width="0.2" height="15.0" fill="rgb(205,29,10)" rx="2" ry="2" />
<text  x="122.10" y="1759.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (1 samples, 0.02%)</title><rect x="179.3" y="1685" width="0.2" height="15.0" fill="rgb(211,224,39)" rx="2" ry="2" />
<text  x="182.30" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="53" width="0.4" height="15.0" fill="rgb(220,220,0)" rx="2" ry="2" />
<text  x="87.22" y="63.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (1 samples, 0.02%)</title><rect x="104.5" y="1685" width="0.2" height="15.0" fill="rgb(239,61,51)" rx="2" ry="2" />
<text  x="107.49" y="1695.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (2 samples, 0.03%)</title><rect x="153.6" y="1605" width="0.4" height="15.0" fill="rgb(237,4,52)" rx="2" ry="2" />
<text  x="156.58" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="213.2" y="1525" width="0.2" height="15.0" fill="rgb(214,117,17)" rx="2" ry="2" />
<text  x="216.19" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (11 samples, 0.18%)</title><rect x="127.7" y="1669" width="2.1" height="15.0" fill="rgb(207,103,21)" rx="2" ry="2" />
<text  x="130.67" y="1679.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (69 samples, 1.14%)</title><rect x="597.6" y="1893" width="13.4" height="15.0" fill="rgb(229,67,54)" rx="2" ry="2" />
<text  x="600.56" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.6" y="1525" width="0.2" height="15.0" fill="rgb(251,44,28)" rx="2" ry="2" />
<text  x="141.58" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (1 samples, 0.02%)</title><rect x="138.0" y="1813" width="0.2" height="15.0" fill="rgb(227,135,26)" rx="2" ry="2" />
<text  x="140.99" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="169.0" y="1205" width="0.2" height="15.0" fill="rgb(226,75,8)" rx="2" ry="2" />
<text  x="171.97" y="1215.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="757" width="0.4" height="15.0" fill="rgb(207,155,37)" rx="2" ry="2" />
<text  x="87.22" y="767.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="110.9" y="1573" width="0.2" height="15.0" fill="rgb(233,195,37)" rx="2" ry="2" />
<text  x="113.91" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.5" y="1125" width="0.1" height="15.0" fill="rgb(209,47,33)" rx="2" ry="2" />
<text  x="1168.45" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.2" y="1765" width="0.2" height="15.0" fill="rgb(207,160,15)" rx="2" ry="2" />
<text  x="13.19" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.1" y="853" width="0.2" height="15.0" fill="rgb(222,118,13)" rx="2" ry="2" />
<text  x="1168.06" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_assertion (1 samples, 0.02%)</title><rect x="212.0" y="1813" width="0.2" height="15.0" fill="rgb(250,120,33)" rx="2" ry="2" />
<text  x="215.02" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="837" width="0.4" height="15.0" fill="rgb(245,57,23)" rx="2" ry="2" />
<text  x="87.22" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.3" y="1621" width="0.2" height="15.0" fill="rgb(213,111,38)" rx="2" ry="2" />
<text  x="1167.28" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.5" y="1749" width="0.1" height="15.0" fill="rgb(252,163,11)" rx="2" ry="2" />
<text  x="1168.45" y="1759.5" ></text>
</g>
<g >
<title>get_page_from_freelist (2 samples, 0.03%)</title><rect x="440.5" y="1845" width="0.4" height="15.0" fill="rgb(229,228,45)" rx="2" ry="2" />
<text  x="443.54" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="169.0" y="1141" width="0.2" height="15.0" fill="rgb(245,211,37)" rx="2" ry="2" />
<text  x="171.97" y="1151.5" ></text>
</g>
<g >
<title>page_fault (12 samples, 0.20%)</title><rect x="709.4" y="1861" width="2.3" height="15.0" fill="rgb(207,35,17)" rx="2" ry="2" />
<text  x="712.39" y="1871.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="748.4" y="1829" width="0.1" height="15.0" fill="rgb(243,147,31)" rx="2" ry="2" />
<text  x="751.35" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (4,288 samples, 70.79%)</title><rect x="48.2" y="2053" width="835.4" height="15.0" fill="rgb(238,138,9)" rx="2" ry="2" />
<text  x="51.18" y="2063.5" >[unknown]</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (1 samples, 0.02%)</title><rect x="1134.3" y="2053" width="0.2" height="15.0" fill="rgb(221,148,20)" rx="2" ry="2" />
<text  x="1137.28" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="805" width="0.4" height="15.0" fill="rgb(218,207,13)" rx="2" ry="2" />
<text  x="87.22" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="168.8" y="1605" width="0.4" height="15.0" fill="rgb(241,184,45)" rx="2" ry="2" />
<text  x="171.77" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="138.4" y="1781" width="0.4" height="15.0" fill="rgb(243,169,31)" rx="2" ry="2" />
<text  x="141.38" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.6" y="1461" width="0.2" height="15.0" fill="rgb(251,145,42)" rx="2" ry="2" />
<text  x="141.58" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.5" y="725" width="0.1" height="15.0" fill="rgb(253,96,14)" rx="2" ry="2" />
<text  x="1168.45" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.07%)</title><rect x="1164.3" y="1909" width="0.8" height="15.0" fill="rgb(217,14,39)" rx="2" ry="2" />
<text  x="1167.28" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (29 samples, 0.48%)</title><rect x="162.2" y="1765" width="5.6" height="15.0" fill="rgb(219,64,26)" rx="2" ry="2" />
<text  x="165.15" y="1775.5" ></text>
</g>
<g >
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="208.3" y="1605" width="0.2" height="15.0" fill="rgb(234,166,26)" rx="2" ry="2" />
<text  x="211.32" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="213.4" y="917" width="0.2" height="15.0" fill="rgb(243,203,16)" rx="2" ry="2" />
<text  x="216.39" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.2" y="517" width="0.2" height="15.0" fill="rgb(247,92,11)" rx="2" ry="2" />
<text  x="13.19" y="527.5" ></text>
</g>
<g >
<title>onmt::is_alphabet@plt (3 samples, 0.05%)</title><rect x="751.9" y="1893" width="0.5" height="15.0" fill="rgb(219,145,46)" rx="2" ry="2" />
<text  x="754.86" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.6" y="1541" width="0.2" height="15.0" fill="rgb(236,2,2)" rx="2" ry="2" />
<text  x="141.58" y="1551.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::do_tolower (1 samples, 0.02%)</title><rect x="185.5" y="1621" width="0.2" height="15.0" fill="rgb(205,119,0)" rx="2" ry="2" />
<text  x="188.53" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.1" y="1013" width="0.2" height="15.0" fill="rgb(232,7,4)" rx="2" ry="2" />
<text  x="1168.06" y="1023.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.02%)</title><rect x="754.4" y="1829" width="0.2" height="15.0" fill="rgb(228,220,35)" rx="2" ry="2" />
<text  x="757.39" y="1839.5" ></text>
</g>
<g >
<title>nlohmann::detail::input_stream_adapter::get_character (5 samples, 0.08%)</title><rect x="99.6" y="1909" width="1.0" height="15.0" fill="rgb(219,14,44)" rx="2" ry="2" />
<text  x="102.62" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="357" width="0.4" height="15.0" fill="rgb(218,52,45)" rx="2" ry="2" />
<text  x="87.22" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (1 samples, 0.02%)</title><rect x="116.4" y="1605" width="0.2" height="15.0" fill="rgb(236,24,51)" rx="2" ry="2" />
<text  x="119.37" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1164.5" y="277" width="0.6" height="15.0" fill="rgb(249,159,22)" rx="2" ry="2" />
<text  x="1167.48" y="287.5" ></text>
</g>
<g >
<title>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::dump (1 samples, 0.02%)</title><rect x="584.5" y="1973" width="0.2" height="15.0" fill="rgb(240,188,5)" rx="2" ry="2" />
<text  x="587.51" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.3" y="1109" width="0.2" height="15.0" fill="rgb(228,95,40)" rx="2" ry="2" />
<text  x="1167.28" y="1119.5" ></text>
</g>
<g >
<title>__libc_read (6 samples, 0.10%)</title><rect x="87.9" y="2037" width="1.2" height="15.0" fill="rgb(210,215,35)" rx="2" ry="2" />
<text  x="90.93" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.1" y="1557" width="0.2" height="15.0" fill="rgb(208,52,15)" rx="2" ry="2" />
<text  x="1168.06" y="1567.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="345.3" y="1989" width="0.2" height="15.0" fill="rgb(224,53,30)" rx="2" ry="2" />
<text  x="348.28" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.3" y="981" width="0.2" height="15.0" fill="rgb(234,51,1)" rx="2" ry="2" />
<text  x="1168.26" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.3" y="917" width="0.2" height="15.0" fill="rgb(210,38,8)" rx="2" ry="2" />
<text  x="1167.28" y="927.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::basic_json (1 samples, 0.02%)</title><rect x="585.3" y="1797" width="0.2" height="15.0" fill="rgb(233,182,15)" rx="2" ry="2" />
<text  x="588.29" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.5" y="245" width="0.1" height="15.0" fill="rgb(207,217,15)" rx="2" ry="2" />
<text  x="1168.45" y="255.5" ></text>
</g>
<g >
<title>onmt::unicode::explode_utf8 (2 samples, 0.03%)</title><rect x="752.4" y="1893" width="0.4" height="15.0" fill="rgb(247,146,6)" rx="2" ry="2" />
<text  x="755.44" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1164.5" y="917" width="0.6" height="15.0" fill="rgb(216,183,47)" rx="2" ry="2" />
<text  x="1167.48" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.5" y="885" width="0.1" height="15.0" fill="rgb(206,60,23)" rx="2" ry="2" />
<text  x="1168.45" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.3" y="1029" width="0.2" height="15.0" fill="rgb(228,52,14)" rx="2" ry="2" />
<text  x="1167.28" y="1039.5" ></text>
</g>
<g >
<title>onmt::unicode::get_case (8 samples, 0.13%)</title><rect x="753.0" y="1893" width="1.6" height="15.0" fill="rgb(217,115,52)" rx="2" ry="2" />
<text  x="756.03" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1164.5" y="389" width="0.6" height="15.0" fill="rgb(246,85,9)" rx="2" ry="2" />
<text  x="1167.48" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="168.4" y="1589" width="0.4" height="15.0" fill="rgb(219,62,19)" rx="2" ry="2" />
<text  x="171.39" y="1599.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.02%)</title><rect x="345.7" y="1973" width="0.2" height="15.0" fill="rgb(241,85,54)" rx="2" ry="2" />
<text  x="348.67" y="1983.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (3 samples, 0.05%)</title><rect x="124.4" y="1621" width="0.5" height="15.0" fill="rgb(206,13,13)" rx="2" ry="2" />
<text  x="127.36" y="1631.5" ></text>
</g>
<g >
<title>mem_cgroup_throttle_swaprate (1 samples, 0.02%)</title><rect x="83.3" y="1941" width="0.1" height="15.0" fill="rgb(215,99,37)" rx="2" ry="2" />
<text  x="86.25" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (1 samples, 0.02%)</title><rect x="125.7" y="1717" width="0.2" height="15.0" fill="rgb(220,84,20)" rx="2" ry="2" />
<text  x="128.72" y="1727.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (1 samples, 0.02%)</title><rect x="178.1" y="1589" width="0.2" height="15.0" fill="rgb(227,77,29)" rx="2" ry="2" />
<text  x="181.13" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.3" y="1365" width="0.2" height="15.0" fill="rgb(224,165,44)" rx="2" ry="2" />
<text  x="1168.26" y="1375.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="323.3" y="1925" width="0.2" height="15.0" fill="rgb(252,50,53)" rx="2" ry="2" />
<text  x="326.26" y="1935.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (1 samples, 0.02%)</title><rect x="860.6" y="1925" width="0.2" height="15.0" fill="rgb(237,209,51)" rx="2" ry="2" />
<text  x="863.57" y="1935.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (2 samples, 0.03%)</title><rect x="137.2" y="1701" width="0.4" height="15.0" fill="rgb(221,85,37)" rx="2" ry="2" />
<text  x="140.21" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.1" y="1813" width="0.2" height="15.0" fill="rgb(239,81,48)" rx="2" ry="2" />
<text  x="1167.09" y="1823.5" ></text>
</g>
<g >
<title>memcmp@plt (10 samples, 0.17%)</title><rect x="1110.5" y="2053" width="2.0" height="15.0" fill="rgb(216,9,0)" rx="2" ry="2" />
<text  x="1113.52" y="2063.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (2 samples, 0.03%)</title><rect x="431.8" y="1829" width="0.4" height="15.0" fill="rgb(224,68,12)" rx="2" ry="2" />
<text  x="434.78" y="1839.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::addSubwords (5 samples, 0.08%)</title><rect x="934.0" y="2053" width="1.0" height="15.0" fill="rgb(254,141,50)" rx="2" ry="2" />
<text  x="937.01" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.07%)</title><rect x="212.8" y="1925" width="0.8" height="15.0" fill="rgb(214,35,43)" rx="2" ry="2" />
<text  x="215.80" y="1935.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (20 samples, 0.33%)</title><rect x="224.9" y="1989" width="3.9" height="15.0" fill="rgb(213,36,37)" rx="2" ry="2" />
<text  x="227.88" y="1999.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt;@plt (1 samples, 0.02%)</title><rect x="178.9" y="1589" width="0.2" height="15.0" fill="rgb(233,177,38)" rx="2" ry="2" />
<text  x="181.91" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (34 samples, 0.56%)</title><rect x="119.3" y="1733" width="6.6" height="15.0" fill="rgb(244,30,34)" rx="2" ry="2" />
<text  x="122.29" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1165.1" y="1925" width="0.4" height="15.0" fill="rgb(235,22,5)" rx="2" ry="2" />
<text  x="1168.06" y="1935.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (5 samples, 0.08%)</title><rect x="192.9" y="1621" width="1.0" height="15.0" fill="rgb(234,79,23)" rx="2" ry="2" />
<text  x="195.93" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.1" y="149" width="0.2" height="15.0" fill="rgb(213,21,1)" rx="2" ry="2" />
<text  x="1168.06" y="159.5" ></text>
</g>
<g >
<title>get_futex_key (2 samples, 0.03%)</title><rect x="46.2" y="1925" width="0.4" height="15.0" fill="rgb(223,68,23)" rx="2" ry="2" />
<text  x="49.24" y="1935.5" ></text>
</g>
<g >
<title>operator new@plt (1 samples, 0.02%)</title><rect x="190.6" y="1637" width="0.2" height="15.0" fill="rgb(254,75,2)" rx="2" ry="2" />
<text  x="193.59" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.3" y="197" width="0.2" height="15.0" fill="rgb(236,15,16)" rx="2" ry="2" />
<text  x="1168.26" y="207.5" ></text>
</g>
<g >
<title>__vfs_write (1 samples, 0.02%)</title><rect x="883.4" y="1941" width="0.2" height="15.0" fill="rgb(223,130,2)" rx="2" ry="2" />
<text  x="886.36" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.1" y="1317" width="0.2" height="15.0" fill="rgb(227,99,51)" rx="2" ry="2" />
<text  x="1168.06" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.1" y="709" width="0.2" height="15.0" fill="rgb(235,160,49)" rx="2" ry="2" />
<text  x="1168.06" y="719.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (4 samples, 0.07%)</title><rect x="148.7" y="1589" width="0.8" height="15.0" fill="rgb(210,5,44)" rx="2" ry="2" />
<text  x="151.71" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="169.0" y="869" width="0.2" height="15.0" fill="rgb(237,34,1)" rx="2" ry="2" />
<text  x="171.97" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="213.4" y="1253" width="0.2" height="15.0" fill="rgb(223,166,34)" rx="2" ry="2" />
<text  x="216.39" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt;,  (1 samples, 0.02%)</title><rect x="1165.5" y="2053" width="0.1" height="15.0" fill="rgb(238,45,22)" rx="2" ry="2" />
<text  x="1168.45" y="2063.5" ></text>
</g>
<g >
<title>fasttext::Vector::mul (19 samples, 0.31%)</title><rect x="570.3" y="1973" width="3.7" height="15.0" fill="rgb(210,208,25)" rx="2" ry="2" />
<text  x="573.29" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="168.6" y="1557" width="0.2" height="15.0" fill="rgb(229,131,41)" rx="2" ry="2" />
<text  x="171.58" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="213.4" y="821" width="0.2" height="15.0" fill="rgb(243,163,1)" rx="2" ry="2" />
<text  x="216.39" y="831.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="1013" width="0.4" height="15.0" fill="rgb(244,20,19)" rx="2" ry="2" />
<text  x="87.22" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.3" y="357" width="0.2" height="15.0" fill="rgb(251,148,40)" rx="2" ry="2" />
<text  x="1167.28" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="213.2" y="1109" width="0.2" height="15.0" fill="rgb(230,118,39)" rx="2" ry="2" />
<text  x="216.19" y="1119.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::reserve (3 samples, 0.05%)</title><rect x="641.4" y="1877" width="0.6" height="15.0" fill="rgb(242,86,43)" rx="2" ry="2" />
<text  x="644.40" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.5" y="645" width="0.1" height="15.0" fill="rgb(210,8,20)" rx="2" ry="2" />
<text  x="1168.45" y="655.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="1573" width="0.4" height="15.0" fill="rgb(216,34,53)" rx="2" ry="2" />
<text  x="87.22" y="1583.5" ></text>
</g>
<g >
<title>onmt::ITokenizer::tokenize (1,370 samples, 22.62%)</title><rect x="588.8" y="1941" width="266.9" height="15.0" fill="rgb(212,223,37)" rx="2" ry="2" />
<text  x="591.80" y="1951.5" >onmt::ITokenizer::tokenize</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.1" y="965" width="0.2" height="15.0" fill="rgb(205,15,33)" rx="2" ry="2" />
<text  x="1168.06" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="213.2" y="997" width="0.2" height="15.0" fill="rgb(221,175,27)" rx="2" ry="2" />
<text  x="216.19" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (37 samples, 0.61%)</title><rect x="179.5" y="1653" width="7.2" height="15.0" fill="rgb(253,31,20)" rx="2" ry="2" />
<text  x="182.49" y="1663.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="1637" width="0.4" height="15.0" fill="rgb(205,50,38)" rx="2" ry="2" />
<text  x="87.22" y="1647.5" ></text>
</g>
<g >
<title>__dynamic_cast (7 samples, 0.12%)</title><rect x="125.9" y="1669" width="1.4" height="15.0" fill="rgb(242,134,53)" rx="2" ry="2" />
<text  x="128.92" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (217 samples, 3.58%)</title><rect x="170.1" y="1925" width="42.3" height="15.0" fill="rgb(235,202,20)" rx="2" ry="2" />
<text  x="173.14" y="1935.5" >std..</text>
</g>
<g >
<title>Eigen::internal::generic_product_impl&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt;, Eigen::DenseShape, Eigen::DenseShape, 8&gt;::evalTo&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt; (27 samples, 0.45%)</title><rect x="420.3" y="1957" width="5.2" height="15.0" fill="rgb(254,149,34)" rx="2" ry="2" />
<text  x="423.28" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (1 samples, 0.02%)</title><rect x="168.2" y="1861" width="0.2" height="15.0" fill="rgb(221,16,42)" rx="2" ry="2" />
<text  x="171.19" y="1871.5" ></text>
</g>
<g >
<title>TDocument::PreprocessTextFields (1,382 samples, 22.82%)</title><rect x="587.4" y="1973" width="269.3" height="15.0" fill="rgb(208,201,3)" rx="2" ry="2" />
<text  x="590.43" y="1983.5" >TDocument::PreprocessTextFields</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.1" y="981" width="0.2" height="15.0" fill="rgb(216,207,10)" rx="2" ry="2" />
<text  x="1168.06" y="991.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.02%)</title><rect x="153.4" y="1605" width="0.2" height="15.0" fill="rgb(212,120,16)" rx="2" ry="2" />
<text  x="156.38" y="1615.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="171.9" y="1589" width="0.2" height="15.0" fill="rgb(242,127,39)" rx="2" ry="2" />
<text  x="174.89" y="1599.5" ></text>
</g>
<g >
<title>std::__merge_without_buffer&lt;__gnu_cxx::__normal_iterator&lt;TWeightedDoc*, std::vector&lt;TWeightedDoc, std::allocator&lt;TWeightedDoc&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;TNewsCluster::SortByWeights (116 samples, 1.92%)</title><rect x="1165.6" y="2053" width="22.6" height="15.0" fill="rgb(223,0,33)" rx="2" ry="2" />
<text  x="1168.65" y="2063.5" >s..</text>
</g>
<g >
<title>alloc_pages_vma (25 samples, 0.41%)</title><rect x="436.1" y="1877" width="4.8" height="15.0" fill="rgb(216,111,3)" rx="2" ry="2" />
<text  x="439.06" y="1887.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="89.9" y="1925" width="0.2" height="15.0" fill="rgb(220,80,48)" rx="2" ry="2" />
<text  x="92.87" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.1" y="1445" width="0.2" height="15.0" fill="rgb(254,112,17)" rx="2" ry="2" />
<text  x="1168.06" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.2" y="229" width="0.2" height="15.0" fill="rgb(247,202,3)" rx="2" ry="2" />
<text  x="13.19" y="239.5" ></text>
</g>
<g >
<title>blk_update_request (1 samples, 0.02%)</title><rect x="323.3" y="1829" width="0.2" height="15.0" fill="rgb(239,124,11)" rx="2" ry="2" />
<text  x="326.26" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1164.5" y="1429" width="0.6" height="15.0" fill="rgb(242,136,27)" rx="2" ry="2" />
<text  x="1167.48" y="1439.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="1173" width="0.4" height="15.0" fill="rgb(220,45,50)" rx="2" ry="2" />
<text  x="87.22" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.3" y="1253" width="0.2" height="15.0" fill="rgb(230,158,9)" rx="2" ry="2" />
<text  x="1168.26" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1164.5" y="1717" width="0.6" height="15.0" fill="rgb(224,219,6)" rx="2" ry="2" />
<text  x="1167.48" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="213.2" y="1253" width="0.2" height="15.0" fill="rgb(225,103,37)" rx="2" ry="2" />
<text  x="216.19" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.3" y="1285" width="0.2" height="15.0" fill="rgb(254,203,1)" rx="2" ry="2" />
<text  x="1167.28" y="1295.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::computeSubwords (1 samples, 0.02%)</title><rect x="857.8" y="2037" width="0.2" height="15.0" fill="rgb(254,58,43)" rx="2" ry="2" />
<text  x="860.84" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="84.0" y="1813" width="0.6" height="15.0" fill="rgb(213,50,3)" rx="2" ry="2" />
<text  x="87.03" y="1823.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_construct_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; const&amp;&gt; (1 samples, 0.02%)</title><rect x="585.1" y="1829" width="0.2" height="15.0" fill="rgb(212,26,54)" rx="2" ry="2" />
<text  x="588.10" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.1" y="1221" width="0.2" height="15.0" fill="rgb(231,212,38)" rx="2" ry="2" />
<text  x="1168.06" y="1231.5" ></text>
</g>
<g >
<title>TFastTextEmbedder::GetSentenceEmbedding (57 samples, 0.94%)</title><rect x="442.3" y="1973" width="11.1" height="15.0" fill="rgb(208,219,18)" rx="2" ry="2" />
<text  x="445.30" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (21 samples, 0.35%)</title><rect x="181.4" y="1621" width="4.1" height="15.0" fill="rgb(210,156,22)" rx="2" ry="2" />
<text  x="184.44" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.3" y="1157" width="0.2" height="15.0" fill="rgb(235,170,22)" rx="2" ry="2" />
<text  x="1168.26" y="1167.5" ></text>
</g>
<g >
<title>fasttext::Vector::addVector (14 samples, 0.23%)</title><rect x="329.7" y="1989" width="2.7" height="15.0" fill="rgb(210,124,33)" rx="2" ry="2" />
<text  x="332.69" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.1" y="949" width="0.2" height="15.0" fill="rgb(247,15,15)" rx="2" ry="2" />
<text  x="1168.06" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.1" y="837" width="0.2" height="15.0" fill="rgb(208,45,47)" rx="2" ry="2" />
<text  x="1168.06" y="847.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="742.1" y="1829" width="0.2" height="15.0" fill="rgb(224,71,26)" rx="2" ry="2" />
<text  x="745.12" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.6" y="613" width="0.2" height="15.0" fill="rgb(224,145,42)" rx="2" ry="2" />
<text  x="141.58" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.3" y="901" width="0.2" height="15.0" fill="rgb(247,90,3)" rx="2" ry="2" />
<text  x="1167.28" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1164.5" y="373" width="0.6" height="15.0" fill="rgb(253,198,21)" rx="2" ry="2" />
<text  x="1167.48" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="213.4" y="901" width="0.2" height="15.0" fill="rgb(233,14,52)" rx="2" ry="2" />
<text  x="216.39" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (151 samples, 2.49%)</title><rect x="138.8" y="1877" width="29.4" height="15.0" fill="rgb(244,76,38)" rx="2" ry="2" />
<text  x="141.77" y="1887.5" >st..</text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="816.5" y="1877" width="0.2" height="15.0" fill="rgb(218,216,24)" rx="2" ry="2" />
<text  x="819.54" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1164.5" y="469" width="0.6" height="15.0" fill="rgb(239,80,33)" rx="2" ry="2" />
<text  x="1167.48" y="479.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="84.0" y="1765" width="0.6" height="15.0" fill="rgb(254,100,28)" rx="2" ry="2" />
<text  x="87.03" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.3" y="597" width="0.2" height="15.0" fill="rgb(246,60,3)" rx="2" ry="2" />
<text  x="1168.26" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.1" y="373" width="0.2" height="15.0" fill="rgb(241,138,32)" rx="2" ry="2" />
<text  x="1167.09" y="383.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (6 samples, 0.10%)</title><rect x="441.1" y="1877" width="1.2" height="15.0" fill="rgb(226,198,20)" rx="2" ry="2" />
<text  x="444.13" y="1887.5" ></text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.02%)</title><rect x="742.1" y="1765" width="0.2" height="15.0" fill="rgb(223,33,3)" rx="2" ry="2" />
<text  x="745.12" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="213.2" y="981" width="0.2" height="15.0" fill="rgb(253,107,48)" rx="2" ry="2" />
<text  x="216.19" y="991.5" ></text>
</g>
<g >
<title>exit_mmap (1 samples, 0.02%)</title><rect x="933.4" y="1957" width="0.2" height="15.0" fill="rgb(216,40,50)" rx="2" ry="2" />
<text  x="936.43" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.3" y="149" width="0.2" height="15.0" fill="rgb(226,178,28)" rx="2" ry="2" />
<text  x="1168.26" y="159.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="84.0" y="1781" width="0.6" height="15.0" fill="rgb(239,139,25)" rx="2" ry="2" />
<text  x="87.03" y="1791.5" ></text>
</g>
<g >
<title>std::istream::sentry::sentry (2 samples, 0.03%)</title><rect x="1189.2" y="2053" width="0.4" height="15.0" fill="rgb(219,225,2)" rx="2" ry="2" />
<text  x="1192.22" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (45 samples, 0.74%)</title><rect x="187.1" y="1669" width="8.8" height="15.0" fill="rgb(235,27,20)" rx="2" ry="2" />
<text  x="190.09" y="1679.5" ></text>
</g>
<g >
<title>__dynamic_cast (13 samples, 0.21%)</title><rect x="156.3" y="1653" width="2.5" height="15.0" fill="rgb(239,143,13)" rx="2" ry="2" />
<text  x="159.31" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="168.4" y="1637" width="0.4" height="15.0" fill="rgb(253,143,50)" rx="2" ry="2" />
<text  x="171.39" y="1647.5" ></text>
</g>
<g >
<title>onmt::unicode::get_case (2 samples, 0.03%)</title><rect x="711.7" y="1877" width="0.4" height="15.0" fill="rgb(248,93,36)" rx="2" ry="2" />
<text  x="714.73" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (170 samples, 2.81%)</title><rect x="104.5" y="1877" width="33.1" height="15.0" fill="rgb(247,205,34)" rx="2" ry="2" />
<text  x="107.49" y="1887.5" >st..</text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="1541" width="0.4" height="15.0" fill="rgb(213,188,11)" rx="2" ry="2" />
<text  x="87.22" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (1 samples, 0.02%)</title><rect x="168.0" y="1781" width="0.2" height="15.0" fill="rgb(236,74,23)" rx="2" ry="2" />
<text  x="171.00" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.3" y="373" width="0.2" height="15.0" fill="rgb(227,208,38)" rx="2" ry="2" />
<text  x="1167.28" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="213.2" y="773" width="0.2" height="15.0" fill="rgb(253,162,33)" rx="2" ry="2" />
<text  x="216.19" y="783.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="845.8" y="1877" width="0.2" height="15.0" fill="rgb(236,203,11)" rx="2" ry="2" />
<text  x="848.76" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (35 samples, 0.58%)</title><rect x="104.7" y="1605" width="6.8" height="15.0" fill="rgb(250,90,48)" rx="2" ry="2" />
<text  x="107.68" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_quantifier (1 samples, 0.02%)</title><rect x="179.1" y="1653" width="0.2" height="15.0" fill="rgb(212,49,33)" rx="2" ry="2" />
<text  x="182.10" y="1663.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.03%)</title><rect x="148.3" y="1589" width="0.4" height="15.0" fill="rgb(212,155,24)" rx="2" ry="2" />
<text  x="151.32" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.2" y="565" width="0.2" height="15.0" fill="rgb(224,83,1)" rx="2" ry="2" />
<text  x="13.19" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.6" y="1573" width="0.2" height="15.0" fill="rgb(245,148,41)" rx="2" ry="2" />
<text  x="141.58" y="1583.5" ></text>
</g>
<g >
<title>cfree (1 samples, 0.02%)</title><rect x="137.8" y="1877" width="0.2" height="15.0" fill="rgb(254,72,4)" rx="2" ry="2" />
<text  x="140.80" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.3" y="1317" width="0.2" height="15.0" fill="rgb(237,220,45)" rx="2" ry="2" />
<text  x="1167.28" y="1327.5" ></text>
</g>
<g >
<title>malloc (4 samples, 0.07%)</title><rect x="120.9" y="1637" width="0.7" height="15.0" fill="rgb(252,72,28)" rx="2" ry="2" />
<text  x="123.85" y="1647.5" ></text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.02%)</title><rect x="860.4" y="1909" width="0.2" height="15.0" fill="rgb(238,58,5)" rx="2" ry="2" />
<text  x="863.37" y="1919.5" ></text>
</g>
<g >
<title>operator delete@plt (3 samples, 0.05%)</title><rect x="1114.2" y="2053" width="0.6" height="15.0" fill="rgb(247,151,14)" rx="2" ry="2" />
<text  x="1117.22" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.3" y="293" width="0.2" height="15.0" fill="rgb(252,66,47)" rx="2" ry="2" />
<text  x="1168.26" y="303.5" ></text>
</g>
<g >
<title>__dynamic_cast (4 samples, 0.07%)</title><rect x="119.5" y="1637" width="0.8" height="15.0" fill="rgb(235,109,39)" rx="2" ry="2" />
<text  x="122.49" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (209 samples, 3.45%)</title><rect x="170.3" y="1845" width="40.8" height="15.0" fill="rgb(242,101,31)" rx="2" ry="2" />
<text  x="173.33" y="1855.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.6" y="1333" width="0.2" height="15.0" fill="rgb(239,27,46)" rx="2" ry="2" />
<text  x="141.58" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.1" y="1477" width="0.2" height="15.0" fill="rgb(239,114,32)" rx="2" ry="2" />
<text  x="1168.06" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1164.5" y="1045" width="0.6" height="15.0" fill="rgb(243,135,48)" rx="2" ry="2" />
<text  x="1167.48" y="1055.5" ></text>
</g>
<g >
<title>handle_mm_fault (15 samples, 0.25%)</title><rect x="40.2" y="1989" width="2.9" height="15.0" fill="rgb(213,79,38)" rx="2" ry="2" />
<text  x="43.20" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.3" y="805" width="0.2" height="15.0" fill="rgb(216,202,42)" rx="2" ry="2" />
<text  x="1168.26" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.1" y="629" width="0.2" height="15.0" fill="rgb(240,157,25)" rx="2" ry="2" />
<text  x="1168.06" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="138.4" y="1877" width="0.4" height="15.0" fill="rgb(241,28,12)" rx="2" ry="2" />
<text  x="141.38" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="169.0" y="901" width="0.2" height="15.0" fill="rgb(226,189,53)" rx="2" ry="2" />
<text  x="171.97" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.3" y="1573" width="0.2" height="15.0" fill="rgb(220,14,53)" rx="2" ry="2" />
<text  x="1168.26" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.2" y="901" width="0.2" height="15.0" fill="rgb(206,105,9)" rx="2" ry="2" />
<text  x="13.19" y="911.5" ></text>
</g>
<g >
<title>[unknown] (22 samples, 0.36%)</title><rect x="877.9" y="2021" width="4.3" height="15.0" fill="rgb(239,72,25)" rx="2" ry="2" />
<text  x="880.90" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.3" y="1189" width="0.2" height="15.0" fill="rgb(215,194,50)" rx="2" ry="2" />
<text  x="1168.26" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.3" y="213" width="0.2" height="15.0" fill="rgb(241,178,16)" rx="2" ry="2" />
<text  x="1168.26" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.6" y="1045" width="0.2" height="15.0" fill="rgb(226,44,14)" rx="2" ry="2" />
<text  x="141.58" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.3" y="533" width="0.2" height="15.0" fill="rgb(219,29,39)" rx="2" ry="2" />
<text  x="1167.28" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (36 samples, 0.59%)</title><rect x="104.7" y="1669" width="7.0" height="15.0" fill="rgb(225,142,28)" rx="2" ry="2" />
<text  x="107.68" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="453" width="0.4" height="15.0" fill="rgb(206,178,5)" rx="2" ry="2" />
<text  x="87.22" y="463.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="114.2" y="1621" width="0.2" height="15.0" fill="rgb(218,227,29)" rx="2" ry="2" />
<text  x="117.23" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (36 samples, 0.59%)</title><rect x="111.9" y="1637" width="7.0" height="15.0" fill="rgb(222,6,21)" rx="2" ry="2" />
<text  x="114.89" y="1647.5" ></text>
</g>
<g >
<title>Eigen::internal::general_matrix_matrix_product&lt;long, float, 0, false, float, 1, false, 0, 1&gt;::run (27 samples, 0.45%)</title><rect x="420.3" y="1925" width="5.2" height="15.0" fill="rgb(229,20,34)" rx="2" ry="2" />
<text  x="423.28" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1164.5" y="437" width="0.6" height="15.0" fill="rgb(238,116,18)" rx="2" ry="2" />
<text  x="1167.48" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="213.2" y="1333" width="0.2" height="15.0" fill="rgb(212,57,19)" rx="2" ry="2" />
<text  x="216.19" y="1343.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (8 samples, 0.13%)</title><rect x="883.6" y="2053" width="1.5" height="15.0" fill="rgb(251,198,50)" rx="2" ry="2" />
<text  x="886.55" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.3" y="741" width="0.2" height="15.0" fill="rgb(247,104,51)" rx="2" ry="2" />
<text  x="1167.28" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="168.8" y="1573" width="0.4" height="15.0" fill="rgb(251,111,5)" rx="2" ry="2" />
<text  x="171.77" y="1583.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::do_tolower (2 samples, 0.03%)</title><rect x="117.1" y="1621" width="0.4" height="15.0" fill="rgb(210,164,48)" rx="2" ry="2" />
<text  x="120.15" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1164.5" y="1781" width="0.6" height="15.0" fill="rgb(248,179,7)" rx="2" ry="2" />
<text  x="1167.48" y="1791.5" ></text>
</g>
<g >
<title>schedule (2 samples, 0.03%)</title><rect x="103.5" y="1861" width="0.4" height="15.0" fill="rgb(227,127,39)" rx="2" ry="2" />
<text  x="106.51" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.3" y="581" width="0.2" height="15.0" fill="rgb(227,173,18)" rx="2" ry="2" />
<text  x="1168.26" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (19 samples, 0.31%)</title><rect x="190.8" y="1637" width="3.7" height="15.0" fill="rgb(254,44,11)" rx="2" ry="2" />
<text  x="193.79" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.1" y="1189" width="0.2" height="15.0" fill="rgb(241,216,22)" rx="2" ry="2" />
<text  x="1168.06" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (1 samples, 0.02%)</title><rect x="195.7" y="1637" width="0.2" height="15.0" fill="rgb(236,19,30)" rx="2" ry="2" />
<text  x="198.66" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.5" y="1205" width="0.1" height="15.0" fill="rgb(211,187,36)" rx="2" ry="2" />
<text  x="1168.45" y="1215.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id@plt (1 samples, 0.02%)</title><rect x="125.1" y="1637" width="0.2" height="15.0" fill="rgb(218,148,3)" rx="2" ry="2" />
<text  x="128.14" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.1" y="1333" width="0.2" height="15.0" fill="rgb(211,141,26)" rx="2" ry="2" />
<text  x="1168.06" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.2" y="1653" width="0.2" height="15.0" fill="rgb(220,202,53)" rx="2" ry="2" />
<text  x="13.19" y="1663.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct (5 samples, 0.08%)</title><rect x="1133.3" y="2053" width="1.0" height="15.0" fill="rgb(216,166,39)" rx="2" ry="2" />
<text  x="1136.31" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (25 samples, 0.41%)</title><rect x="150.7" y="1701" width="4.8" height="15.0" fill="rgb(228,10,47)" rx="2" ry="2" />
<text  x="153.66" y="1711.5" ></text>
</g>
<g >
<title>std::__move_merge&lt;__gnu_cxx::__normal_iterator&lt;TDocument*, std::vector&lt;TDocument, std::allocator&lt;TDocument&gt; &gt; &gt;, TDocument*, __gnu_cxx::__ops::_Iter_comp_iter&lt;main::$_0&gt; &gt; (1 samples, 0.02%)</title><rect x="584.9" y="1973" width="0.2" height="15.0" fill="rgb(249,205,51)" rx="2" ry="2" />
<text  x="587.90" y="1983.5" ></text>
</g>
<g >
<title>malloc (4 samples, 0.07%)</title><rect x="197.8" y="1669" width="0.8" height="15.0" fill="rgb(212,109,0)" rx="2" ry="2" />
<text  x="200.80" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="213.4" y="1333" width="0.2" height="15.0" fill="rgb(252,161,28)" rx="2" ry="2" />
<text  x="216.39" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.07%)</title><rect x="168.4" y="1893" width="0.8" height="15.0" fill="rgb(228,10,12)" rx="2" ry="2" />
<text  x="171.39" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.3" y="453" width="0.2" height="15.0" fill="rgb(239,3,48)" rx="2" ry="2" />
<text  x="1168.26" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (17 samples, 0.28%)</title><rect x="121.8" y="1637" width="3.3" height="15.0" fill="rgb(224,150,30)" rx="2" ry="2" />
<text  x="124.82" y="1647.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (2 samples, 0.03%)</title><rect x="124.0" y="1621" width="0.4" height="15.0" fill="rgb(240,211,40)" rx="2" ry="2" />
<text  x="126.97" y="1631.5" ></text>
</g>
<g >
<title>malloc@plt (1 samples, 0.02%)</title><rect x="139.0" y="1605" width="0.2" height="15.0" fill="rgb(231,201,12)" rx="2" ry="2" />
<text  x="141.97" y="1615.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (4 samples, 0.07%)</title><rect x="432.4" y="1845" width="0.7" height="15.0" fill="rgb(245,24,47)" rx="2" ry="2" />
<text  x="435.36" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="168.6" y="1445" width="0.2" height="15.0" fill="rgb(208,84,13)" rx="2" ry="2" />
<text  x="171.58" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (28 samples, 0.46%)</title><rect x="132.1" y="1749" width="5.5" height="15.0" fill="rgb(208,216,27)" rx="2" ry="2" />
<text  x="135.15" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (1 samples, 0.02%)</title><rect x="131.6" y="1765" width="0.2" height="15.0" fill="rgb(245,220,20)" rx="2" ry="2" />
<text  x="134.57" y="1775.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct@plt (1 samples, 0.02%)</title><rect x="596.6" y="1893" width="0.2" height="15.0" fill="rgb(229,105,20)" rx="2" ry="2" />
<text  x="599.59" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.2" y="1253" width="0.2" height="15.0" fill="rgb(245,150,39)" rx="2" ry="2" />
<text  x="13.19" y="1263.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="84.0" y="1861" width="0.6" height="15.0" fill="rgb(227,4,14)" rx="2" ry="2" />
<text  x="87.03" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.2" y="725" width="0.2" height="15.0" fill="rgb(221,102,25)" rx="2" ry="2" />
<text  x="13.19" y="735.5" ></text>
</g>
<g >
<title>__handle_mm_fault (10 samples, 0.17%)</title><rect x="709.8" y="1797" width="1.9" height="15.0" fill="rgb(205,97,20)" rx="2" ry="2" />
<text  x="712.78" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.1" y="1141" width="0.2" height="15.0" fill="rgb(231,21,39)" rx="2" ry="2" />
<text  x="1168.06" y="1151.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (1 samples, 0.02%)</title><rect x="166.8" y="1669" width="0.2" height="15.0" fill="rgb(221,123,40)" rx="2" ry="2" />
<text  x="169.83" y="1679.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (28 samples, 0.46%)</title><rect x="78.0" y="2037" width="5.4" height="15.0" fill="rgb(251,194,48)" rx="2" ry="2" />
<text  x="80.99" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.5" y="933" width="0.1" height="15.0" fill="rgb(251,154,37)" rx="2" ry="2" />
<text  x="1168.45" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.2" y="1669" width="0.2" height="15.0" fill="rgb(237,177,38)" rx="2" ry="2" />
<text  x="13.19" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_Compiler (218 samples, 3.60%)</title><rect x="170.1" y="1941" width="42.5" height="15.0" fill="rgb(237,56,1)" rx="2" ry="2" />
<text  x="173.14" y="1951.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.6" y="917" width="0.2" height="15.0" fill="rgb(251,71,18)" rx="2" ry="2" />
<text  x="141.58" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (19 samples, 0.31%)</title><rect x="206.0" y="1701" width="3.7" height="15.0" fill="rgb(236,120,18)" rx="2" ry="2" />
<text  x="208.98" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="373" width="0.4" height="15.0" fill="rgb(223,216,41)" rx="2" ry="2" />
<text  x="87.22" y="383.5" ></text>
</g>
<g >
<title>__do_page_fault (20 samples, 0.33%)</title><rect x="39.2" y="2005" width="3.9" height="15.0" fill="rgb(254,91,49)" rx="2" ry="2" />
<text  x="42.22" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.5" y="389" width="0.1" height="15.0" fill="rgb(216,129,30)" rx="2" ry="2" />
<text  x="1168.45" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (32 samples, 0.53%)</title><rect x="144.4" y="1637" width="6.3" height="15.0" fill="rgb(240,105,15)" rx="2" ry="2" />
<text  x="147.42" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.5" y="101" width="0.1" height="15.0" fill="rgb(208,69,1)" rx="2" ry="2" />
<text  x="1168.45" y="111.5" ></text>
</g>
<g >
<title>onmt::Tokenizer::tokenize (1,312 samples, 21.66%)</title><rect x="596.8" y="1909" width="255.6" height="15.0" fill="rgb(229,177,6)" rx="2" ry="2" />
<text  x="599.79" y="1919.5" >onmt::Tokenizer::tokenize</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="168.6" y="1413" width="0.2" height="15.0" fill="rgb(205,50,15)" rx="2" ry="2" />
<text  x="171.58" y="1423.5" ></text>
</g>
<g >
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="754.4" y="1797" width="0.2" height="15.0" fill="rgb(250,180,23)" rx="2" ry="2" />
<text  x="757.39" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.07%)</title><rect x="1164.3" y="1925" width="0.8" height="15.0" fill="rgb(243,107,24)" rx="2" ry="2" />
<text  x="1167.28" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.1" y="1477" width="0.2" height="15.0" fill="rgb(253,108,38)" rx="2" ry="2" />
<text  x="1167.09" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.6" y="1365" width="0.2" height="15.0" fill="rgb(216,106,24)" rx="2" ry="2" />
<text  x="141.58" y="1375.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="1397" width="0.4" height="15.0" fill="rgb(211,222,24)" rx="2" ry="2" />
<text  x="87.22" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1164.5" y="1317" width="0.6" height="15.0" fill="rgb(249,169,53)" rx="2" ry="2" />
<text  x="1167.48" y="1327.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="613" width="0.4" height="15.0" fill="rgb(244,161,39)" rx="2" ry="2" />
<text  x="87.22" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.2" y="1173" width="0.2" height="15.0" fill="rgb(241,200,36)" rx="2" ry="2" />
<text  x="13.19" y="1183.5" ></text>
</g>
<g >
<title>fasttext::Vector::norm (24 samples, 0.40%)</title><rect x="337.5" y="1989" width="4.7" height="15.0" fill="rgb(232,110,43)" rx="2" ry="2" />
<text  x="340.49" y="1999.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="816.5" y="1845" width="0.2" height="15.0" fill="rgb(250,200,9)" rx="2" ry="2" />
<text  x="819.54" y="1855.5" ></text>
</g>
<g >
<title>strlen@plt (16 samples, 0.26%)</title><rect x="849.3" y="1893" width="3.1" height="15.0" fill="rgb(236,184,40)" rx="2" ry="2" />
<text  x="852.27" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.5" y="1845" width="0.1" height="15.0" fill="rgb(215,195,28)" rx="2" ry="2" />
<text  x="1168.45" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="213.2" y="1237" width="0.2" height="15.0" fill="rgb(229,229,54)" rx="2" ry="2" />
<text  x="216.19" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="169.0" y="949" width="0.2" height="15.0" fill="rgb(231,224,40)" rx="2" ry="2" />
<text  x="171.97" y="959.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (1 samples, 0.02%)</title><rect x="41.4" y="1957" width="0.2" height="15.0" fill="rgb(207,89,42)" rx="2" ry="2" />
<text  x="44.37" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (29 samples, 0.48%)</title><rect x="125.9" y="1701" width="5.7" height="15.0" fill="rgb(254,98,12)" rx="2" ry="2" />
<text  x="128.92" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (46 samples, 0.76%)</title><rect x="170.3" y="1733" width="9.0" height="15.0" fill="rgb(241,32,32)" rx="2" ry="2" />
<text  x="173.33" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="213.4" y="1509" width="0.2" height="15.0" fill="rgb(233,223,10)" rx="2" ry="2" />
<text  x="216.39" y="1519.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::basic_json (1 samples, 0.02%)</title><rect x="585.1" y="1765" width="0.2" height="15.0" fill="rgb(231,98,12)" rx="2" ry="2" />
<text  x="588.10" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="213.2" y="1413" width="0.2" height="15.0" fill="rgb(215,30,20)" rx="2" ry="2" />
<text  x="216.19" y="1423.5" ></text>
</g>
<g >
<title>malloc (7 samples, 0.12%)</title><rect x="626.4" y="1877" width="1.4" height="15.0" fill="rgb(240,77,23)" rx="2" ry="2" />
<text  x="629.40" y="1887.5" ></text>
</g>
<g >
<title>cfree (2 samples, 0.03%)</title><rect x="113.6" y="1621" width="0.4" height="15.0" fill="rgb(239,119,11)" rx="2" ry="2" />
<text  x="116.64" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.3" y="421" width="0.2" height="15.0" fill="rgb(209,130,23)" rx="2" ry="2" />
<text  x="1168.26" y="431.5" ></text>
</g>
<g >
<title>std::locale::locale (4 samples, 0.07%)</title><rect x="581.4" y="1973" width="0.8" height="15.0" fill="rgb(250,25,5)" rx="2" ry="2" />
<text  x="584.40" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="341" width="0.4" height="15.0" fill="rgb(226,135,54)" rx="2" ry="2" />
<text  x="87.22" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.2" y="133" width="0.2" height="15.0" fill="rgb(249,8,0)" rx="2" ry="2" />
<text  x="13.19" y="143.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (25 samples, 0.41%)</title><rect x="150.7" y="1733" width="4.8" height="15.0" fill="rgb(254,82,16)" rx="2" ry="2" />
<text  x="153.66" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.6" y="1445" width="0.2" height="15.0" fill="rgb(252,75,28)" rx="2" ry="2" />
<text  x="141.58" y="1455.5" ></text>
</g>
<g >
<title>cfree (2 samples, 0.03%)</title><rect x="229.0" y="1989" width="0.4" height="15.0" fill="rgb(229,60,39)" rx="2" ry="2" />
<text  x="231.97" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (1 samples, 0.02%)</title><rect x="138.0" y="1829" width="0.2" height="15.0" fill="rgb(214,18,29)" rx="2" ry="2" />
<text  x="140.99" y="1839.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (3 samples, 0.05%)</title><rect x="90.1" y="1989" width="0.6" height="15.0" fill="rgb(211,28,32)" rx="2" ry="2" />
<text  x="93.07" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.5" y="133" width="0.1" height="15.0" fill="rgb(217,49,24)" rx="2" ry="2" />
<text  x="1168.45" y="143.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="169.0" y="965" width="0.2" height="15.0" fill="rgb(249,116,5)" rx="2" ry="2" />
<text  x="171.97" y="975.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt;@plt (1 samples, 0.02%)</title><rect x="849.1" y="1893" width="0.2" height="15.0" fill="rgb(244,127,37)" rx="2" ry="2" />
<text  x="852.07" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="213.2" y="1205" width="0.2" height="15.0" fill="rgb(207,64,52)" rx="2" ry="2" />
<text  x="216.19" y="1215.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="869" width="0.4" height="15.0" fill="rgb(225,71,11)" rx="2" ry="2" />
<text  x="87.22" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.2" y="1301" width="0.2" height="15.0" fill="rgb(225,57,16)" rx="2" ry="2" />
<text  x="13.19" y="1311.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;TThreadPool::TThreadPool (14 samples, 0.23%)</title><rect x="45.5" y="2037" width="2.7" height="15.0" fill="rgb(225,228,32)" rx="2" ry="2" />
<text  x="48.46" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="437" width="0.4" height="15.0" fill="rgb(210,215,54)" rx="2" ry="2" />
<text  x="87.22" y="447.5" ></text>
</g>
<g >
<title>nlohmann::detail::parser&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::parse (65 samples, 1.07%)</title><rect x="90.8" y="1973" width="12.7" height="15.0" fill="rgb(230,112,24)" rx="2" ry="2" />
<text  x="93.85" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.1" y="2005" width="0.2" height="15.0" fill="rgb(240,108,34)" rx="2" ry="2" />
<text  x="1167.09" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.3" y="1221" width="0.2" height="15.0" fill="rgb(218,154,54)" rx="2" ry="2" />
<text  x="1168.26" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.3" y="1333" width="0.2" height="15.0" fill="rgb(234,211,22)" rx="2" ry="2" />
<text  x="1168.26" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.5" y="1333" width="0.1" height="15.0" fill="rgb(252,20,0)" rx="2" ry="2" />
<text  x="1168.45" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.3" y="677" width="0.2" height="15.0" fill="rgb(225,112,12)" rx="2" ry="2" />
<text  x="1167.28" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.2" y="1493" width="0.2" height="15.0" fill="rgb(217,181,18)" rx="2" ry="2" />
<text  x="13.19" y="1503.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.02%)</title><rect x="89.9" y="1973" width="0.2" height="15.0" fill="rgb(217,91,36)" rx="2" ry="2" />
<text  x="92.87" y="1983.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (2 samples, 0.03%)</title><rect x="1132.9" y="2053" width="0.4" height="15.0" fill="rgb(225,122,17)" rx="2" ry="2" />
<text  x="1135.92" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.1" y="1093" width="0.2" height="15.0" fill="rgb(232,67,42)" rx="2" ry="2" />
<text  x="1167.09" y="1103.5" ></text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.05%)</title><rect x="108.8" y="1573" width="0.6" height="15.0" fill="rgb(218,59,35)" rx="2" ry="2" />
<text  x="111.77" y="1583.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::readWord (51 samples, 0.84%)</title><rect x="1038.8" y="2053" width="10.0" height="15.0" fill="rgb(215,45,46)" rx="2" ry="2" />
<text  x="1041.82" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="169.0" y="1557" width="0.2" height="15.0" fill="rgb(238,229,13)" rx="2" ry="2" />
<text  x="171.97" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="981" width="0.4" height="15.0" fill="rgb(221,13,43)" rx="2" ry="2" />
<text  x="87.22" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="213.4" y="1701" width="0.2" height="15.0" fill="rgb(211,108,36)" rx="2" ry="2" />
<text  x="216.39" y="1711.5" ></text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::get (27 samples, 0.45%)</title><rect x="95.3" y="1925" width="5.3" height="15.0" fill="rgb(246,211,10)" rx="2" ry="2" />
<text  x="98.33" y="1935.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare@plt (4 samples, 0.07%)</title><rect x="846.0" y="1893" width="0.7" height="15.0" fill="rgb(237,38,45)" rx="2" ry="2" />
<text  x="848.96" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="168.8" y="1621" width="0.4" height="15.0" fill="rgb(226,215,18)" rx="2" ry="2" />
<text  x="171.77" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="1461" width="0.4" height="15.0" fill="rgb(240,78,19)" rx="2" ry="2" />
<text  x="87.22" y="1471.5" ></text>
</g>
<g >
<title>alloc_pages_vma (1 samples, 0.02%)</title><rect x="742.1" y="1797" width="0.2" height="15.0" fill="rgb(243,170,34)" rx="2" ry="2" />
<text  x="745.12" y="1807.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (2 samples, 0.03%)</title><rect x="138.8" y="1653" width="0.4" height="15.0" fill="rgb(216,36,14)" rx="2" ry="2" />
<text  x="141.77" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="168.6" y="1509" width="0.2" height="15.0" fill="rgb(229,173,28)" rx="2" ry="2" />
<text  x="171.58" y="1519.5" ></text>
</g>
<g >
<title>malloc@plt (5 samples, 0.08%)</title><rect x="1109.5" y="2053" width="1.0" height="15.0" fill="rgb(223,41,5)" rx="2" ry="2" />
<text  x="1112.54" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.2" y="389" width="0.2" height="15.0" fill="rgb(249,177,54)" rx="2" ry="2" />
<text  x="13.19" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.1" y="245" width="0.2" height="15.0" fill="rgb(214,19,27)" rx="2" ry="2" />
<text  x="1168.06" y="255.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (3 samples, 0.05%)</title><rect x="178.3" y="1589" width="0.6" height="15.0" fill="rgb(209,145,54)" rx="2" ry="2" />
<text  x="181.32" y="1599.5" ></text>
</g>
<g >
<title>__dynamic_cast (4 samples, 0.07%)</title><rect x="132.1" y="1701" width="0.8" height="15.0" fill="rgb(231,218,28)" rx="2" ry="2" />
<text  x="135.15" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (36 samples, 0.59%)</title><rect x="104.7" y="1653" width="7.0" height="15.0" fill="rgb(228,64,34)" rx="2" ry="2" />
<text  x="107.68" y="1663.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::computeSubwords (82 samples, 1.35%)</title><rect x="935.0" y="2053" width="16.0" height="15.0" fill="rgb(243,196,45)" rx="2" ry="2" />
<text  x="937.99" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="213.2" y="965" width="0.2" height="15.0" fill="rgb(229,29,31)" rx="2" ry="2" />
<text  x="216.19" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.5" y="533" width="0.1" height="15.0" fill="rgb(251,70,52)" rx="2" ry="2" />
<text  x="1168.45" y="543.5" ></text>
</g>
<g >
<title>onmt::Tokenizer::tokenize (1,369 samples, 22.60%)</title><rect x="589.0" y="1925" width="266.7" height="15.0" fill="rgb(222,43,47)" rx="2" ry="2" />
<text  x="591.99" y="1935.5" >onmt::Tokenizer::tokenize</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.1" y="1893" width="0.2" height="15.0" fill="rgb(225,44,46)" rx="2" ry="2" />
<text  x="1167.09" y="1903.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (10 samples, 0.17%)</title><rect x="1135.1" y="2053" width="1.9" height="15.0" fill="rgb(250,154,44)" rx="2" ry="2" />
<text  x="1138.06" y="2063.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; const*, std::vector&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::allocator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;*&gt; (1 samples, 0.02%)</title><rect x="585.1" y="1781" width="0.2" height="15.0" fill="rgb(234,133,0)" rx="2" ry="2" />
<text  x="588.10" y="1791.5" ></text>
</g>
<g >
<title>std::__invoke&lt;std::_Bind&lt;Annotate (1,396 samples, 23.05%)</title><rect x="585.9" y="1989" width="271.9" height="15.0" fill="rgb(254,210,6)" rx="2" ry="2" />
<text  x="588.88" y="1999.5" >std::__invoke&lt;std::_Bind&lt;Annotate</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.5" y="1413" width="0.1" height="15.0" fill="rgb(229,153,54)" rx="2" ry="2" />
<text  x="1168.45" y="1423.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (2 samples, 0.03%)</title><rect x="432.8" y="1829" width="0.3" height="15.0" fill="rgb(245,2,52)" rx="2" ry="2" />
<text  x="435.75" y="1839.5" ></text>
</g>
<g >
<title>__dynamic_cast (8 samples, 0.13%)</title><rect x="196.2" y="1669" width="1.6" height="15.0" fill="rgb(251,93,8)" rx="2" ry="2" />
<text  x="199.24" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (32 samples, 0.53%)</title><rect x="203.8" y="1781" width="6.3" height="15.0" fill="rgb(236,187,51)" rx="2" ry="2" />
<text  x="206.84" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="169.0" y="837" width="0.2" height="15.0" fill="rgb(210,215,50)" rx="2" ry="2" />
<text  x="171.97" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="213.4" y="1477" width="0.2" height="15.0" fill="rgb(233,45,3)" rx="2" ry="2" />
<text  x="216.39" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1165.1" y="1861" width="0.4" height="15.0" fill="rgb(229,176,19)" rx="2" ry="2" />
<text  x="1168.06" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.3" y="133" width="0.2" height="15.0" fill="rgb(232,28,39)" rx="2" ry="2" />
<text  x="1167.28" y="143.5" ></text>
</g>
<g >
<title>try_charge (4 samples, 0.07%)</title><rect x="441.5" y="1845" width="0.8" height="15.0" fill="rgb(230,42,3)" rx="2" ry="2" />
<text  x="444.52" y="1855.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::pushHash (7 samples, 0.12%)</title><rect x="858.2" y="2037" width="1.4" height="15.0" fill="rgb(207,140,1)" rx="2" ry="2" />
<text  x="861.23" y="2047.5" ></text>
</g>
<g >
<title>__lru_cache_add (1 samples, 0.02%)</title><rect x="41.2" y="1941" width="0.2" height="15.0" fill="rgb(238,222,2)" rx="2" ry="2" />
<text  x="44.17" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.2" y="325" width="0.2" height="15.0" fill="rgb(231,198,39)" rx="2" ry="2" />
<text  x="13.19" y="335.5" ></text>
</g>
<g >
<title>syscall (2 samples, 0.03%)</title><rect x="103.5" y="1973" width="0.4" height="15.0" fill="rgb(242,178,32)" rx="2" ry="2" />
<text  x="106.51" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.5" y="341" width="0.1" height="15.0" fill="rgb(242,141,6)" rx="2" ry="2" />
<text  x="1168.45" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1164.5" y="117" width="0.6" height="15.0" fill="rgb(251,181,14)" rx="2" ry="2" />
<text  x="1167.48" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.1" y="293" width="0.2" height="15.0" fill="rgb(224,174,1)" rx="2" ry="2" />
<text  x="1168.06" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="169.0" y="1269" width="0.2" height="15.0" fill="rgb(206,224,49)" rx="2" ry="2" />
<text  x="171.97" y="1279.5" ></text>
</g>
<g >
<title>std::istream::read (1 samples, 0.02%)</title><rect x="1189.0" y="2053" width="0.2" height="15.0" fill="rgb(215,130,23)" rx="2" ry="2" />
<text  x="1192.03" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.07%)</title><rect x="168.4" y="1781" width="0.8" height="15.0" fill="rgb(242,86,38)" rx="2" ry="2" />
<text  x="171.39" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="169.0" y="773" width="0.2" height="15.0" fill="rgb(212,135,11)" rx="2" ry="2" />
<text  x="171.97" y="783.5" ></text>
</g>
<g >
<title>alloc_pages_vma (2 samples, 0.03%)</title><rect x="676.7" y="1781" width="0.3" height="15.0" fill="rgb(212,144,31)" rx="2" ry="2" />
<text  x="679.66" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.1" y="757" width="0.2" height="15.0" fill="rgb(251,77,15)" rx="2" ry="2" />
<text  x="1167.09" y="767.5" ></text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (2 samples, 0.03%)</title><rect x="431.8" y="1861" width="0.4" height="15.0" fill="rgb(216,203,29)" rx="2" ry="2" />
<text  x="434.78" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.2" y="805" width="0.2" height="15.0" fill="rgb(216,36,33)" rx="2" ry="2" />
<text  x="13.19" y="815.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (4 samples, 0.07%)</title><rect x="128.8" y="1653" width="0.8" height="15.0" fill="rgb(238,29,33)" rx="2" ry="2" />
<text  x="131.84" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.3" y="1749" width="0.2" height="15.0" fill="rgb(216,143,9)" rx="2" ry="2" />
<text  x="1167.28" y="1759.5" ></text>
</g>
<g >
<title>TDocument::TDocument (5 samples, 0.08%)</title><rect x="89.1" y="1989" width="1.0" height="15.0" fill="rgb(222,90,14)" rx="2" ry="2" />
<text  x="92.10" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (1 samples, 0.02%)</title><rect x="211.6" y="1765" width="0.2" height="15.0" fill="rgb(223,222,8)" rx="2" ry="2" />
<text  x="214.63" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (1 samples, 0.02%)</title><rect x="210.5" y="1749" width="0.2" height="15.0" fill="rgb(209,107,22)" rx="2" ry="2" />
<text  x="213.47" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.1" y="1637" width="0.2" height="15.0" fill="rgb(227,144,1)" rx="2" ry="2" />
<text  x="1168.06" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1164.5" y="805" width="0.6" height="15.0" fill="rgb(234,26,8)" rx="2" ry="2" />
<text  x="1167.48" y="815.5" ></text>
</g>
<g >
<title>strcmp@plt (5 samples, 0.08%)</title><rect x="1187.3" y="2037" width="0.9" height="15.0" fill="rgb(236,160,11)" rx="2" ry="2" />
<text  x="1190.27" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_assertion (1 samples, 0.02%)</title><rect x="186.9" y="1685" width="0.2" height="15.0" fill="rgb(247,73,49)" rx="2" ry="2" />
<text  x="189.89" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="213.2" y="1013" width="0.2" height="15.0" fill="rgb(233,40,50)" rx="2" ry="2" />
<text  x="216.19" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (171 samples, 2.82%)</title><rect x="104.5" y="1893" width="33.3" height="15.0" fill="rgb(209,227,46)" rx="2" ry="2" />
<text  x="107.49" y="1903.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.2" y="1829" width="0.2" height="15.0" fill="rgb(250,99,3)" rx="2" ry="2" />
<text  x="13.19" y="1839.5" ></text>
</g>
<g >
<title>do_page_fault (6 samples, 0.10%)</title><rect x="82.3" y="2005" width="1.1" height="15.0" fill="rgb(243,173,29)" rx="2" ry="2" />
<text  x="85.28" y="2015.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.08%)</title><rect x="88.1" y="2021" width="1.0" height="15.0" fill="rgb(221,146,42)" rx="2" ry="2" />
<text  x="91.12" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.1" y="1381" width="0.2" height="15.0" fill="rgb(213,127,27)" rx="2" ry="2" />
<text  x="1168.06" y="1391.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="693" width="0.4" height="15.0" fill="rgb(212,9,31)" rx="2" ry="2" />
<text  x="87.22" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.1" y="597" width="0.2" height="15.0" fill="rgb(242,140,45)" rx="2" ry="2" />
<text  x="1168.06" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_try_char (1 samples, 0.02%)</title><rect x="168.0" y="1701" width="0.2" height="15.0" fill="rgb(233,166,30)" rx="2" ry="2" />
<text  x="171.00" y="1711.5" ></text>
</g>
<g >
<title>fasttext::QuantMatrix::addRowToVector (23 samples, 0.38%)</title><rect x="1089.3" y="2053" width="4.5" height="15.0" fill="rgb(238,119,53)" rx="2" ry="2" />
<text  x="1092.28" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (2 samples, 0.03%)</title><rect x="138.8" y="1685" width="0.4" height="15.0" fill="rgb(254,209,54)" rx="2" ry="2" />
<text  x="141.77" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="213.4" y="1061" width="0.2" height="15.0" fill="rgb(217,100,0)" rx="2" ry="2" />
<text  x="216.39" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.6" y="981" width="0.2" height="15.0" fill="rgb(246,26,46)" rx="2" ry="2" />
<text  x="141.58" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.3" y="437" width="0.2" height="15.0" fill="rgb(214,99,15)" rx="2" ry="2" />
<text  x="1167.28" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (17 samples, 0.28%)</title><rect x="199.0" y="1669" width="3.3" height="15.0" fill="rgb(254,101,27)" rx="2" ry="2" />
<text  x="201.97" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1164.5" y="1589" width="0.6" height="15.0" fill="rgb(213,123,28)" rx="2" ry="2" />
<text  x="1167.48" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.6" y="1221" width="0.2" height="15.0" fill="rgb(236,93,48)" rx="2" ry="2" />
<text  x="141.58" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.2" y="741" width="0.2" height="15.0" fill="rgb(214,189,49)" rx="2" ry="2" />
<text  x="13.19" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="213.2" y="1301" width="0.2" height="15.0" fill="rgb(227,66,15)" rx="2" ry="2" />
<text  x="216.19" y="1311.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1109.3" y="2021" width="0.2" height="15.0" fill="rgb(239,66,38)" rx="2" ry="2" />
<text  x="1112.35" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.5" y="197" width="0.1" height="15.0" fill="rgb(242,84,23)" rx="2" ry="2" />
<text  x="1168.45" y="207.5" ></text>
</g>
<g >
<title>handle_mm_fault (2 samples, 0.03%)</title><rect x="860.4" y="1973" width="0.4" height="15.0" fill="rgb(226,135,36)" rx="2" ry="2" />
<text  x="863.37" y="1983.5" ></text>
</g>
<g >
<title>__dynamic_cast (9 samples, 0.15%)</title><rect x="187.5" y="1637" width="1.7" height="15.0" fill="rgb(207,77,24)" rx="2" ry="2" />
<text  x="190.48" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.3" y="549" width="0.2" height="15.0" fill="rgb(227,210,15)" rx="2" ry="2" />
<text  x="1168.26" y="559.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::do_tolower (1 samples, 0.02%)</title><rect x="149.5" y="1605" width="0.2" height="15.0" fill="rgb(225,190,7)" rx="2" ry="2" />
<text  x="152.49" y="1615.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="883.4" y="2005" width="0.2" height="15.0" fill="rgb(212,70,44)" rx="2" ry="2" />
<text  x="886.36" y="2015.5" ></text>
</g>
<g >
<title>tlb_flush_mmu_free (1 samples, 0.02%)</title><rect x="456.9" y="1813" width="0.2" height="15.0" fill="rgb(248,157,35)" rx="2" ry="2" />
<text  x="459.91" y="1823.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (1 samples, 0.02%)</title><rect x="583.1" y="1813" width="0.2" height="15.0" fill="rgb(225,57,21)" rx="2" ry="2" />
<text  x="586.15" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.3" y="1781" width="0.2" height="15.0" fill="rgb(249,137,19)" rx="2" ry="2" />
<text  x="1167.28" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (1 samples, 0.02%)</title><rect x="168.2" y="1797" width="0.2" height="15.0" fill="rgb(226,157,2)" rx="2" ry="2" />
<text  x="171.19" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (1 samples, 0.02%)</title><rect x="195.9" y="1701" width="0.1" height="15.0" fill="rgb(229,96,18)" rx="2" ry="2" />
<text  x="198.85" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (2 samples, 0.03%)</title><rect x="161.8" y="1765" width="0.4" height="15.0" fill="rgb(254,223,31)" rx="2" ry="2" />
<text  x="164.76" y="1775.5" ></text>
</g>
<g >
<title>page_fault (3 samples, 0.05%)</title><rect x="860.2" y="2021" width="0.6" height="15.0" fill="rgb(253,10,36)" rx="2" ry="2" />
<text  x="863.18" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (29 samples, 0.48%)</title><rect x="132.0" y="1813" width="5.6" height="15.0" fill="rgb(224,186,15)" rx="2" ry="2" />
<text  x="134.95" y="1823.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace@plt (1 samples, 0.02%)</title><rect x="856.3" y="1941" width="0.2" height="15.0" fill="rgb(227,184,13)" rx="2" ry="2" />
<text  x="859.28" y="1951.5" ></text>
</g>
<g >
<title>cfree (2 samples, 0.03%)</title><rect x="139.4" y="1573" width="0.3" height="15.0" fill="rgb(217,34,47)" rx="2" ry="2" />
<text  x="142.36" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="213.2" y="1477" width="0.2" height="15.0" fill="rgb(213,68,52)" rx="2" ry="2" />
<text  x="216.19" y="1487.5" ></text>
</g>
<g >
<title>operator delete[] (5 samples, 0.08%)</title><rect x="1114.8" y="2053" width="1.0" height="15.0" fill="rgb(205,155,11)" rx="2" ry="2" />
<text  x="1117.80" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.3" y="453" width="0.2" height="15.0" fill="rgb(252,70,31)" rx="2" ry="2" />
<text  x="1167.28" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.5" y="1509" width="0.1" height="15.0" fill="rgb(213,202,43)" rx="2" ry="2" />
<text  x="1168.45" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="213.4" y="773" width="0.2" height="15.0" fill="rgb(228,26,27)" rx="2" ry="2" />
<text  x="216.39" y="783.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="194.3" y="1621" width="0.2" height="15.0" fill="rgb(221,154,53)" rx="2" ry="2" />
<text  x="197.30" y="1631.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="213" width="0.4" height="15.0" fill="rgb(210,179,11)" rx="2" ry="2" />
<text  x="87.22" y="223.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="163.5" y="1685" width="0.2" height="15.0" fill="rgb(229,153,45)" rx="2" ry="2" />
<text  x="166.51" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.3" y="933" width="0.2" height="15.0" fill="rgb(207,125,26)" rx="2" ry="2" />
<text  x="1167.28" y="943.5" ></text>
</g>
<g >
<title>__x64_sys_futex (10 samples, 0.17%)</title><rect x="46.0" y="1973" width="2.0" height="15.0" fill="rgb(210,23,17)" rx="2" ry="2" />
<text  x="49.04" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.3" y="501" width="0.2" height="15.0" fill="rgb(250,186,50)" rx="2" ry="2" />
<text  x="1167.28" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.3" y="1477" width="0.2" height="15.0" fill="rgb(249,138,14)" rx="2" ry="2" />
<text  x="1167.28" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.1" y="1237" width="0.2" height="15.0" fill="rgb(222,136,28)" rx="2" ry="2" />
<text  x="1168.06" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (1 samples, 0.02%)</title><rect x="168.2" y="1813" width="0.2" height="15.0" fill="rgb(238,88,15)" rx="2" ry="2" />
<text  x="171.19" y="1823.5" ></text>
</g>
<g >
<title>std::operator&gt;&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (3 samples, 0.05%)</title><rect x="344.7" y="1989" width="0.6" height="15.0" fill="rgb(252,191,13)" rx="2" ry="2" />
<text  x="347.69" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="169.0" y="1189" width="0.2" height="15.0" fill="rgb(215,186,25)" rx="2" ry="2" />
<text  x="171.97" y="1199.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="1525" width="0.4" height="15.0" fill="rgb(229,199,34)" rx="2" ry="2" />
<text  x="87.22" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.5" y="821" width="0.1" height="15.0" fill="rgb(217,51,22)" rx="2" ry="2" />
<text  x="1168.45" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.1" y="933" width="0.2" height="15.0" fill="rgb(248,130,19)" rx="2" ry="2" />
<text  x="1168.06" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.1" y="1621" width="0.2" height="15.0" fill="rgb(210,34,1)" rx="2" ry="2" />
<text  x="1167.09" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="213.2" y="901" width="0.2" height="15.0" fill="rgb(243,104,42)" rx="2" ry="2" />
<text  x="216.19" y="911.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.25] (19 samples, 0.31%)</title><rect x="44.5" y="2053" width="3.7" height="15.0" fill="rgb(229,15,14)" rx="2" ry="2" />
<text  x="47.48" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.6" y="1685" width="0.2" height="15.0" fill="rgb(209,1,47)" rx="2" ry="2" />
<text  x="141.58" y="1695.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="583.1" y="1973" width="0.2" height="15.0" fill="rgb(238,120,28)" rx="2" ry="2" />
<text  x="586.15" y="1983.5" ></text>
</g>
<g >
<title>unmap_vmas (1 samples, 0.02%)</title><rect x="456.9" y="1861" width="0.2" height="15.0" fill="rgb(236,214,2)" rx="2" ry="2" />
<text  x="459.91" y="1871.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (1 samples, 0.02%)</title><rect x="200.9" y="1653" width="0.2" height="15.0" fill="rgb(243,32,20)" rx="2" ry="2" />
<text  x="203.92" y="1663.5" ></text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::get (1 samples, 0.02%)</title><rect x="91.2" y="1925" width="0.2" height="15.0" fill="rgb(231,160,24)" rx="2" ry="2" />
<text  x="94.24" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.5" y="1285" width="0.1" height="15.0" fill="rgb(245,225,6)" rx="2" ry="2" />
<text  x="1168.45" y="1295.5" ></text>
</g>
<g >
<title>free_unref_page_list (1 samples, 0.02%)</title><rect x="456.9" y="1765" width="0.2" height="15.0" fill="rgb(247,41,37)" rx="2" ry="2" />
<text  x="459.91" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.5" y="1317" width="0.1" height="15.0" fill="rgb(216,4,51)" rx="2" ry="2" />
<text  x="1168.45" y="1327.5" ></text>
</g>
<g >
<title>fasttext::entry::entry (1 samples, 0.02%)</title><rect x="1093.8" y="2053" width="0.2" height="15.0" fill="rgb(233,48,21)" rx="2" ry="2" />
<text  x="1096.76" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.2" y="1573" width="0.2" height="15.0" fill="rgb(219,207,1)" rx="2" ry="2" />
<text  x="13.19" y="1583.5" ></text>
</g>
<g >
<title>__handle_mm_fault (21 samples, 0.35%)</title><rect x="429.0" y="1877" width="4.1" height="15.0" fill="rgb(218,181,8)" rx="2" ry="2" />
<text  x="432.05" y="1887.5" ></text>
</g>
<g >
<title>finish_task_switch (2 samples, 0.03%)</title><rect x="103.5" y="1829" width="0.4" height="15.0" fill="rgb(240,151,41)" rx="2" ry="2" />
<text  x="106.51" y="1839.5" ></text>
</g>
<g >
<title>__munmap (1 samples, 0.02%)</title><rect x="456.9" y="1973" width="0.2" height="15.0" fill="rgb(216,204,53)" rx="2" ry="2" />
<text  x="459.91" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (139 samples, 2.29%)</title><rect x="104.5" y="1797" width="27.1" height="15.0" fill="rgb(248,216,36)" rx="2" ry="2" />
<text  x="107.49" y="1807.5" >s..</text>
</g>
<g >
<title>std::istream::get (1 samples, 0.02%)</title><rect x="1188.8" y="2053" width="0.2" height="15.0" fill="rgb(237,103,1)" rx="2" ry="2" />
<text  x="1191.83" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.1" y="741" width="0.2" height="15.0" fill="rgb(215,175,42)" rx="2" ry="2" />
<text  x="1168.06" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.6" y="1493" width="0.2" height="15.0" fill="rgb(212,158,1)" rx="2" ry="2" />
<text  x="141.58" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.5" y="37" width="0.1" height="15.0" fill="rgb(254,154,52)" rx="2" ry="2" />
<text  x="1168.45" y="47.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="1125" width="0.4" height="15.0" fill="rgb(212,44,34)" rx="2" ry="2" />
<text  x="87.22" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.1" y="613" width="0.2" height="15.0" fill="rgb(237,35,9)" rx="2" ry="2" />
<text  x="1168.06" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (5 samples, 0.08%)</title><rect x="109.6" y="1573" width="0.9" height="15.0" fill="rgb(246,11,14)" rx="2" ry="2" />
<text  x="112.55" y="1583.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="585.3" y="1781" width="0.2" height="15.0" fill="rgb(235,138,38)" rx="2" ry="2" />
<text  x="588.29" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.2" y="757" width="0.2" height="15.0" fill="rgb(227,106,25)" rx="2" ry="2" />
<text  x="13.19" y="767.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="172.1" y="1589" width="0.2" height="15.0" fill="rgb(221,52,20)" rx="2" ry="2" />
<text  x="175.09" y="1599.5" ></text>
</g>
<g >
<title>fasttext::FastText::getDimension (7 samples, 0.12%)</title><rect x="324.4" y="1989" width="1.4" height="15.0" fill="rgb(226,185,25)" rx="2" ry="2" />
<text  x="327.43" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="645" width="0.4" height="15.0" fill="rgb(205,27,48)" rx="2" ry="2" />
<text  x="87.22" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.5" y="981" width="0.1" height="15.0" fill="rgb(205,103,6)" rx="2" ry="2" />
<text  x="1168.45" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="213.2" y="1685" width="0.2" height="15.0" fill="rgb(209,62,54)" rx="2" ry="2" />
<text  x="216.19" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="169.0" y="1541" width="0.2" height="15.0" fill="rgb(213,96,53)" rx="2" ry="2" />
<text  x="171.97" y="1551.5" ></text>
</g>
<g >
<title>Eigen::internal::general_matrix_vector_product&lt;long, float, Eigen::internal::const_blas_data_mapper&lt;float, long, 1&gt;, 1, false, float, Eigen::internal::const_blas_data_mapper&lt;float, long, 0&gt;, false, 0&gt;::run (153 samples, 2.53%)</title><rect x="48.2" y="2037" width="29.8" height="15.0" fill="rgb(219,54,36)" rx="2" ry="2" />
<text  x="51.18" y="2047.5" >Ei..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_try_char (1 samples, 0.02%)</title><rect x="186.7" y="1733" width="0.2" height="15.0" fill="rgb(228,28,22)" rx="2" ry="2" />
<text  x="189.70" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="213.0" y="1797" width="0.6" height="15.0" fill="rgb(230,209,25)" rx="2" ry="2" />
<text  x="216.00" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (1 samples, 0.02%)</title><rect x="138.0" y="1781" width="0.2" height="15.0" fill="rgb(246,227,29)" rx="2" ry="2" />
<text  x="140.99" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="213.2" y="837" width="0.2" height="15.0" fill="rgb(236,105,2)" rx="2" ry="2" />
<text  x="216.19" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="169.0" y="1221" width="0.2" height="15.0" fill="rgb(249,165,24)" rx="2" ry="2" />
<text  x="171.97" y="1231.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 0.02%)</title><rect x="169.9" y="1941" width="0.2" height="15.0" fill="rgb(243,21,27)" rx="2" ry="2" />
<text  x="172.94" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.5" y="597" width="0.1" height="15.0" fill="rgb(214,149,32)" rx="2" ry="2" />
<text  x="1168.45" y="607.5" ></text>
</g>
<g >
<title>onmt::add_final_token&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (13 samples, 0.21%)</title><rect x="593.9" y="1893" width="2.5" height="15.0" fill="rgb(250,151,38)" rx="2" ry="2" />
<text  x="596.86" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (173 samples, 2.86%)</title><rect x="104.5" y="1909" width="33.7" height="15.0" fill="rgb(252,63,28)" rx="2" ry="2" />
<text  x="107.49" y="1919.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1164.5" y="1125" width="0.6" height="15.0" fill="rgb(236,94,26)" rx="2" ry="2" />
<text  x="1167.48" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.07%)</title><rect x="1164.3" y="1973" width="0.8" height="15.0" fill="rgb(211,72,0)" rx="2" ry="2" />
<text  x="1167.28" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.1" y="533" width="0.2" height="15.0" fill="rgb(221,215,2)" rx="2" ry="2" />
<text  x="1168.06" y="543.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="1221" width="0.4" height="15.0" fill="rgb(212,167,30)" rx="2" ry="2" />
<text  x="87.22" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.3" y="357" width="0.2" height="15.0" fill="rgb(223,39,40)" rx="2" ry="2" />
<text  x="1168.26" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (1 samples, 0.02%)</title><rect x="155.7" y="1717" width="0.2" height="15.0" fill="rgb(214,25,8)" rx="2" ry="2" />
<text  x="158.72" y="1727.5" ></text>
</g>
<g >
<title>Rank (336 samples, 5.55%)</title><rect x="103.9" y="2005" width="65.5" height="15.0" fill="rgb(216,98,41)" rx="2" ry="2" />
<text  x="106.90" y="2015.5" >Rank</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.5" y="901" width="0.1" height="15.0" fill="rgb(251,190,45)" rx="2" ry="2" />
<text  x="1168.45" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.6" y="1381" width="0.2" height="15.0" fill="rgb(231,12,37)" rx="2" ry="2" />
<text  x="141.58" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (1 samples, 0.02%)</title><rect x="138.0" y="1861" width="0.2" height="15.0" fill="rgb(220,53,29)" rx="2" ry="2" />
<text  x="140.99" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.2" y="149" width="0.2" height="15.0" fill="rgb(207,84,21)" rx="2" ry="2" />
<text  x="13.19" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="213.4" y="1381" width="0.2" height="15.0" fill="rgb(238,1,35)" rx="2" ry="2" />
<text  x="216.39" y="1391.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="883.4" y="2021" width="0.2" height="15.0" fill="rgb(254,183,45)" rx="2" ry="2" />
<text  x="886.36" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="138.2" y="1925" width="0.6" height="15.0" fill="rgb(236,47,26)" rx="2" ry="2" />
<text  x="141.19" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.3" y="885" width="0.2" height="15.0" fill="rgb(213,93,0)" rx="2" ry="2" />
<text  x="1167.28" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.3" y="101" width="0.2" height="15.0" fill="rgb(223,31,29)" rx="2" ry="2" />
<text  x="1167.28" y="111.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.07%)</title><rect x="1164.3" y="2037" width="0.8" height="15.0" fill="rgb(239,30,50)" rx="2" ry="2" />
<text  x="1167.28" y="2047.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="345.7" y="1925" width="0.2" height="15.0" fill="rgb(216,56,36)" rx="2" ry="2" />
<text  x="348.67" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.3" y="821" width="0.2" height="15.0" fill="rgb(218,202,6)" rx="2" ry="2" />
<text  x="1168.26" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.5" y="709" width="0.1" height="15.0" fill="rgb(233,29,39)" rx="2" ry="2" />
<text  x="1168.45" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.5" y="805" width="0.1" height="15.0" fill="rgb(253,193,21)" rx="2" ry="2" />
<text  x="1168.45" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.1" y="165" width="0.2" height="15.0" fill="rgb(247,33,44)" rx="2" ry="2" />
<text  x="1168.06" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.3" y="853" width="0.2" height="15.0" fill="rgb(229,174,38)" rx="2" ry="2" />
<text  x="1168.26" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="213.2" y="917" width="0.2" height="15.0" fill="rgb(239,209,8)" rx="2" ry="2" />
<text  x="216.19" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.5" y="213" width="0.1" height="15.0" fill="rgb(253,152,28)" rx="2" ry="2" />
<text  x="1168.45" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (1 samples, 0.02%)</title><rect x="168.2" y="1845" width="0.2" height="15.0" fill="rgb(222,132,7)" rx="2" ry="2" />
<text  x="171.19" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.3" y="389" width="0.2" height="15.0" fill="rgb(239,152,26)" rx="2" ry="2" />
<text  x="1168.26" y="399.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::append@plt (2 samples, 0.03%)</title><rect x="614.1" y="1893" width="0.4" height="15.0" fill="rgb(241,6,34)" rx="2" ry="2" />
<text  x="617.12" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.2" y="1205" width="0.2" height="15.0" fill="rgb(221,140,17)" rx="2" ry="2" />
<text  x="13.19" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1164.5" y="1205" width="0.6" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="1167.48" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="213.2" y="1397" width="0.2" height="15.0" fill="rgb(205,133,53)" rx="2" ry="2" />
<text  x="216.19" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="168.8" y="1589" width="0.4" height="15.0" fill="rgb(220,209,12)" rx="2" ry="2" />
<text  x="171.77" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="405" width="0.4" height="15.0" fill="rgb(215,161,26)" rx="2" ry="2" />
<text  x="87.22" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1164.5" y="181" width="0.6" height="15.0" fill="rgb(241,9,40)" rx="2" ry="2" />
<text  x="1167.48" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.3" y="1621" width="0.2" height="15.0" fill="rgb(245,80,36)" rx="2" ry="2" />
<text  x="1168.26" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="169.0" y="1493" width="0.2" height="15.0" fill="rgb(249,74,14)" rx="2" ry="2" />
<text  x="171.97" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.1" y="1621" width="0.2" height="15.0" fill="rgb(226,84,32)" rx="2" ry="2" />
<text  x="1168.06" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Scanner&lt;char&gt;::_M_eat_escape_ecma (1 samples, 0.02%)</title><rect x="210.3" y="1733" width="0.2" height="15.0" fill="rgb(244,127,7)" rx="2" ry="2" />
<text  x="213.27" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="169.0" y="1525" width="0.2" height="15.0" fill="rgb(242,32,35)" rx="2" ry="2" />
<text  x="171.97" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.3" y="69" width="0.2" height="15.0" fill="rgb(220,53,20)" rx="2" ry="2" />
<text  x="1167.28" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (4 samples, 0.07%)</title><rect x="211.4" y="1861" width="0.8" height="15.0" fill="rgb(238,172,47)" rx="2" ry="2" />
<text  x="214.44" y="1871.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::getLine (2 samples, 0.03%)</title><rect x="586.5" y="1957" width="0.3" height="15.0" fill="rgb(247,81,48)" rx="2" ry="2" />
<text  x="589.46" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Scanner&lt;char&gt;::_M_scan_in_bracket (1 samples, 0.02%)</title><rect x="125.5" y="1621" width="0.2" height="15.0" fill="rgb(205,57,28)" rx="2" ry="2" />
<text  x="128.53" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (37 samples, 0.61%)</title><rect x="104.7" y="1701" width="7.2" height="15.0" fill="rgb(222,124,5)" rx="2" ry="2" />
<text  x="107.68" y="1711.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (2 samples, 0.03%)</title><rect x="82.9" y="1925" width="0.4" height="15.0" fill="rgb(221,107,51)" rx="2" ry="2" />
<text  x="85.86" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="213.0" y="1813" width="0.6" height="15.0" fill="rgb(206,212,26)" rx="2" ry="2" />
<text  x="216.00" y="1823.5" ></text>
</g>
<g >
<title>do_syscall_64 (11 samples, 0.18%)</title><rect x="46.0" y="1989" width="2.2" height="15.0" fill="rgb(233,127,31)" rx="2" ry="2" />
<text  x="49.04" y="1999.5" ></text>
</g>
<g >
<title>onmt::is_alphabet (16 samples, 0.26%)</title><rect x="748.7" y="1893" width="3.2" height="15.0" fill="rgb(238,33,15)" rx="2" ry="2" />
<text  x="751.74" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.3" y="645" width="0.2" height="15.0" fill="rgb(231,26,42)" rx="2" ry="2" />
<text  x="1168.26" y="655.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (5 samples, 0.08%)</title><rect x="587.4" y="1941" width="1.0" height="15.0" fill="rgb(243,92,13)" rx="2" ry="2" />
<text  x="590.43" y="1951.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve (1 samples, 0.02%)</title><rect x="871.5" y="2037" width="0.2" height="15.0" fill="rgb(216,75,23)" rx="2" ry="2" />
<text  x="874.48" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (1 samples, 0.02%)</title><rect x="211.6" y="1781" width="0.2" height="15.0" fill="rgb(244,112,8)" rx="2" ry="2" />
<text  x="214.63" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.2" y="1861" width="0.2" height="15.0" fill="rgb(225,96,13)" rx="2" ry="2" />
<text  x="13.19" y="1871.5" ></text>
</g>
<g >
<title>TAgencyRating::ScoreUrl (157 samples, 2.59%)</title><rect x="138.8" y="1973" width="30.6" height="15.0" fill="rgb(249,107,24)" rx="2" ry="2" />
<text  x="141.77" y="1983.5" >TA..</text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="84.0" y="1925" width="0.6" height="15.0" fill="rgb(245,29,28)" rx="2" ry="2" />
<text  x="87.03" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.5" y="453" width="0.1" height="15.0" fill="rgb(238,133,51)" rx="2" ry="2" />
<text  x="1168.45" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (15 samples, 0.25%)</title><rect x="146.6" y="1605" width="2.9" height="15.0" fill="rgb(209,178,5)" rx="2" ry="2" />
<text  x="149.57" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (110 samples, 1.82%)</title><rect x="104.5" y="1781" width="21.4" height="15.0" fill="rgb(236,211,16)" rx="2" ry="2" />
<text  x="107.49" y="1791.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.1" y="1125" width="0.2" height="15.0" fill="rgb(253,9,17)" rx="2" ry="2" />
<text  x="1167.09" y="1135.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="1509" width="0.4" height="15.0" fill="rgb(228,83,6)" rx="2" ry="2" />
<text  x="87.22" y="1519.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;std::__detail::_State&lt;char&gt; const*, std::__detail::_State&lt;char&gt;*&gt; (1 samples, 0.02%)</title><rect x="168.2" y="1733" width="0.2" height="15.0" fill="rgb(245,149,12)" rx="2" ry="2" />
<text  x="171.19" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (37 samples, 0.61%)</title><rect x="179.5" y="1685" width="7.2" height="15.0" fill="rgb(210,195,50)" rx="2" ry="2" />
<text  x="182.49" y="1695.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="181.0" y="1621" width="0.2" height="15.0" fill="rgb(209,41,37)" rx="2" ry="2" />
<text  x="184.05" y="1631.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (1 samples, 0.02%)</title><rect x="117.5" y="1621" width="0.2" height="15.0" fill="rgb(207,218,30)" rx="2" ry="2" />
<text  x="120.54" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="213.4" y="1541" width="0.2" height="15.0" fill="rgb(219,186,20)" rx="2" ry="2" />
<text  x="216.39" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="1061" width="0.4" height="15.0" fill="rgb(221,27,0)" rx="2" ry="2" />
<text  x="87.22" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.1" y="1445" width="0.2" height="15.0" fill="rgb(250,88,15)" rx="2" ry="2" />
<text  x="1167.09" y="1455.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="754.4" y="1877" width="0.2" height="15.0" fill="rgb(238,12,6)" rx="2" ry="2" />
<text  x="757.39" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.6" y="901" width="0.2" height="15.0" fill="rgb(237,96,52)" rx="2" ry="2" />
<text  x="141.58" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (1 samples, 0.02%)</title><rect x="211.1" y="1845" width="0.1" height="15.0" fill="rgb(223,132,33)" rx="2" ry="2" />
<text  x="214.05" y="1855.5" ></text>
</g>
<g >
<title>std::operator&gt;&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="582.6" y="1973" width="0.2" height="15.0" fill="rgb(254,47,39)" rx="2" ry="2" />
<text  x="585.56" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.6" y="789" width="0.2" height="15.0" fill="rgb(239,112,18)" rx="2" ry="2" />
<text  x="141.58" y="799.5" ></text>
</g>
<g >
<title>vfs_read (5 samples, 0.08%)</title><rect x="88.1" y="1957" width="1.0" height="15.0" fill="rgb(234,82,52)" rx="2" ry="2" />
<text  x="91.12" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1165.1" y="1829" width="0.4" height="15.0" fill="rgb(222,204,35)" rx="2" ry="2" />
<text  x="1168.06" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.5" y="1029" width="0.1" height="15.0" fill="rgb(221,135,15)" rx="2" ry="2" />
<text  x="1168.45" y="1039.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (8 samples, 0.13%)</title><rect x="624.8" y="1877" width="1.6" height="15.0" fill="rgb(229,183,11)" rx="2" ry="2" />
<text  x="627.84" y="1887.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (1 samples, 0.02%)</title><rect x="142.9" y="1573" width="0.2" height="15.0" fill="rgb(219,180,10)" rx="2" ry="2" />
<text  x="145.86" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_subexpr_end (1 samples, 0.02%)</title><rect x="155.5" y="1733" width="0.2" height="15.0" fill="rgb(212,157,35)" rx="2" ry="2" />
<text  x="158.53" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.1" y="885" width="0.2" height="15.0" fill="rgb(211,129,16)" rx="2" ry="2" />
<text  x="1168.06" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="213.2" y="885" width="0.2" height="15.0" fill="rgb(234,98,43)" rx="2" ry="2" />
<text  x="216.19" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.2" y="1141" width="0.2" height="15.0" fill="rgb(251,169,54)" rx="2" ry="2" />
<text  x="13.19" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.3" y="405" width="0.2" height="15.0" fill="rgb(251,4,30)" rx="2" ry="2" />
<text  x="1168.26" y="415.5" ></text>
</g>
<g >
<title>onmt::unicode::is_letter (154 samples, 2.54%)</title><rect x="712.1" y="1877" width="30.0" height="15.0" fill="rgb(228,186,48)" rx="2" ry="2" />
<text  x="715.12" y="1887.5" >on..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.6" y="1269" width="0.2" height="15.0" fill="rgb(239,164,35)" rx="2" ry="2" />
<text  x="141.58" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.1" y="1637" width="0.2" height="15.0" fill="rgb(210,134,26)" rx="2" ry="2" />
<text  x="1167.09" y="1647.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (6 samples, 0.10%)</title><rect x="175.4" y="1573" width="1.2" height="15.0" fill="rgb(231,173,36)" rx="2" ry="2" />
<text  x="178.40" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1164.5" y="789" width="0.6" height="15.0" fill="rgb(241,140,7)" rx="2" ry="2" />
<text  x="1167.48" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="168.4" y="1605" width="0.4" height="15.0" fill="rgb(243,28,39)" rx="2" ry="2" />
<text  x="171.39" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (3 samples, 0.05%)</title><rect x="211.4" y="1813" width="0.6" height="15.0" fill="rgb(247,101,5)" rx="2" ry="2" />
<text  x="214.44" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="213.2" y="1733" width="0.2" height="15.0" fill="rgb(227,5,11)" rx="2" ry="2" />
<text  x="216.19" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1164.5" y="1253" width="0.6" height="15.0" fill="rgb(230,169,31)" rx="2" ry="2" />
<text  x="1167.48" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.5" y="1525" width="0.1" height="15.0" fill="rgb(207,183,19)" rx="2" ry="2" />
<text  x="1168.45" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.3" y="309" width="0.2" height="15.0" fill="rgb(220,207,34)" rx="2" ry="2" />
<text  x="1168.26" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (1 samples, 0.02%)</title><rect x="186.5" y="1637" width="0.2" height="15.0" fill="rgb(235,130,35)" rx="2" ry="2" />
<text  x="189.50" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (32 samples, 0.53%)</title><rect x="144.4" y="1669" width="6.3" height="15.0" fill="rgb(210,29,35)" rx="2" ry="2" />
<text  x="147.42" y="1679.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="111.5" y="1589" width="0.2" height="15.0" fill="rgb(250,229,33)" rx="2" ry="2" />
<text  x="114.50" y="1599.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="190.4" y="1637" width="0.2" height="15.0" fill="rgb(213,148,25)" rx="2" ry="2" />
<text  x="193.40" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (30 samples, 0.50%)</title><rect x="162.2" y="1797" width="5.8" height="15.0" fill="rgb(223,207,5)" rx="2" ry="2" />
<text  x="165.15" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.3" y="1045" width="0.2" height="15.0" fill="rgb(232,203,18)" rx="2" ry="2" />
<text  x="1168.26" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.1" y="1077" width="0.2" height="15.0" fill="rgb(222,203,26)" rx="2" ry="2" />
<text  x="1167.09" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (33 samples, 0.54%)</title><rect x="119.3" y="1717" width="6.4" height="15.0" fill="rgb(247,173,21)" rx="2" ry="2" />
<text  x="122.29" y="1727.5" ></text>
</g>
<g >
<title>ext4_end_bio (1 samples, 0.02%)</title><rect x="323.3" y="1797" width="0.2" height="15.0" fill="rgb(211,229,33)" rx="2" ry="2" />
<text  x="326.26" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.2" y="1061" width="0.2" height="15.0" fill="rgb(236,86,16)" rx="2" ry="2" />
<text  x="13.19" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.6" y="1509" width="0.2" height="15.0" fill="rgb(218,43,46)" rx="2" ry="2" />
<text  x="141.58" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1164.5" y="1653" width="0.6" height="15.0" fill="rgb(229,228,21)" rx="2" ry="2" />
<text  x="1167.48" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.1" y="501" width="0.2" height="15.0" fill="rgb(232,47,48)" rx="2" ry="2" />
<text  x="1168.06" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.5" y="1077" width="0.1" height="15.0" fill="rgb(230,118,47)" rx="2" ry="2" />
<text  x="1168.45" y="1087.5" ></text>
</g>
<g >
<title>fasttext::ProductQuantizer::addcode (3 samples, 0.05%)</title><rect x="87.0" y="2021" width="0.5" height="15.0" fill="rgb(217,116,34)" rx="2" ry="2" />
<text  x="89.95" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (1 samples, 0.02%)</title><rect x="168.0" y="1797" width="0.2" height="15.0" fill="rgb(209,128,36)" rx="2" ry="2" />
<text  x="171.00" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1164.5" y="773" width="0.6" height="15.0" fill="rgb(238,13,34)" rx="2" ry="2" />
<text  x="1167.48" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.3" y="277" width="0.2" height="15.0" fill="rgb(205,177,18)" rx="2" ry="2" />
<text  x="1167.28" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_quantifier (2 samples, 0.03%)</title><rect x="210.7" y="1829" width="0.4" height="15.0" fill="rgb(234,39,29)" rx="2" ry="2" />
<text  x="213.66" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.1" y="133" width="0.2" height="15.0" fill="rgb(253,166,26)" rx="2" ry="2" />
<text  x="1168.06" y="143.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.1" y="1253" width="0.2" height="15.0" fill="rgb(206,114,19)" rx="2" ry="2" />
<text  x="1167.09" y="1263.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.03%)</title><rect x="141.1" y="1557" width="0.4" height="15.0" fill="rgb(229,118,19)" rx="2" ry="2" />
<text  x="144.11" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.2" y="453" width="0.2" height="15.0" fill="rgb(224,202,20)" rx="2" ry="2" />
<text  x="13.19" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.1" y="997" width="0.2" height="15.0" fill="rgb(252,33,4)" rx="2" ry="2" />
<text  x="1167.09" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.3" y="1269" width="0.2" height="15.0" fill="rgb(225,13,54)" rx="2" ry="2" />
<text  x="1167.28" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.1" y="1701" width="0.2" height="15.0" fill="rgb(232,67,24)" rx="2" ry="2" />
<text  x="1167.09" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1164.5" y="1477" width="0.6" height="15.0" fill="rgb(211,227,4)" rx="2" ry="2" />
<text  x="1167.48" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.1" y="917" width="0.2" height="15.0" fill="rgb(221,89,38)" rx="2" ry="2" />
<text  x="1167.09" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.3" y="1557" width="0.2" height="15.0" fill="rgb(247,54,48)" rx="2" ry="2" />
<text  x="1167.28" y="1567.5" ></text>
</g>
<g >
<title>TSlinkClustering::Cluster (1,219 samples, 20.13%)</title><rect x="345.9" y="2005" width="237.4" height="15.0" fill="rgb(224,155,21)" rx="2" ry="2" />
<text  x="348.86" y="2015.5" >TSlinkClustering::Cluster</text>
</g>
<g >
<title>__handle_mm_fault (2 samples, 0.03%)</title><rect x="860.4" y="1957" width="0.4" height="15.0" fill="rgb(253,61,15)" rx="2" ry="2" />
<text  x="863.37" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.2" y="341" width="0.2" height="15.0" fill="rgb(223,81,16)" rx="2" ry="2" />
<text  x="13.19" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (37 samples, 0.61%)</title><rect x="196.2" y="1781" width="7.3" height="15.0" fill="rgb(246,65,16)" rx="2" ry="2" />
<text  x="199.24" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.3" y="885" width="0.2" height="15.0" fill="rgb(235,228,3)" rx="2" ry="2" />
<text  x="1168.26" y="895.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (1 samples, 0.02%)</title><rect x="130.4" y="1669" width="0.2" height="15.0" fill="rgb(222,121,15)" rx="2" ry="2" />
<text  x="133.40" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (6 samples, 0.10%)</title><rect x="211.2" y="1893" width="1.2" height="15.0" fill="rgb(243,201,16)" rx="2" ry="2" />
<text  x="214.24" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.2" y="581" width="0.2" height="15.0" fill="rgb(223,191,25)" rx="2" ry="2" />
<text  x="13.19" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.5" y="1109" width="0.1" height="15.0" fill="rgb(249,172,42)" rx="2" ry="2" />
<text  x="1168.45" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="168.8" y="1717" width="0.4" height="15.0" fill="rgb(210,123,31)" rx="2" ry="2" />
<text  x="171.77" y="1727.5" ></text>
</g>
<g >
<title>std::vector&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::allocator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;::_M_realloc_insert&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; const&amp;&gt; (2 samples, 0.03%)</title><rect x="585.1" y="2005" width="0.4" height="15.0" fill="rgb(237,112,54)" rx="2" ry="2" />
<text  x="588.10" y="2015.5" ></text>
</g>
<g >
<title>malloc@plt (1 samples, 0.02%)</title><rect x="163.7" y="1685" width="0.2" height="15.0" fill="rgb(240,99,21)" rx="2" ry="2" />
<text  x="166.71" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.2" y="1589" width="0.2" height="15.0" fill="rgb(232,0,31)" rx="2" ry="2" />
<text  x="13.19" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.3" y="1077" width="0.2" height="15.0" fill="rgb(215,30,45)" rx="2" ry="2" />
<text  x="1167.28" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (1 samples, 0.02%)</title><rect x="138.0" y="1733" width="0.2" height="15.0" fill="rgb(213,0,5)" rx="2" ry="2" />
<text  x="140.99" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_quantifier (1 samples, 0.02%)</title><rect x="131.8" y="1797" width="0.2" height="15.0" fill="rgb(220,93,43)" rx="2" ry="2" />
<text  x="134.76" y="1807.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="114.0" y="1621" width="0.2" height="15.0" fill="rgb(228,93,5)" rx="2" ry="2" />
<text  x="117.03" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (48 samples, 0.79%)</title><rect x="186.9" y="1765" width="9.3" height="15.0" fill="rgb(253,69,10)" rx="2" ry="2" />
<text  x="189.89" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="213.2" y="1285" width="0.2" height="15.0" fill="rgb(222,83,10)" rx="2" ry="2" />
<text  x="216.19" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (120 samples, 1.98%)</title><rect x="138.8" y="1797" width="23.4" height="15.0" fill="rgb(253,114,38)" rx="2" ry="2" />
<text  x="141.77" y="1807.5" >s..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (28 samples, 0.46%)</title><rect x="138.8" y="1717" width="5.4" height="15.0" fill="rgb(220,46,36)" rx="2" ry="2" />
<text  x="141.77" y="1727.5" ></text>
</g>
<g >
<title>__vfs_read (5 samples, 0.08%)</title><rect x="88.1" y="1941" width="1.0" height="15.0" fill="rgb(245,13,41)" rx="2" ry="2" />
<text  x="91.12" y="1951.5" ></text>
</g>
<g >
<title>scsi_io_completion (1 samples, 0.02%)</title><rect x="323.3" y="1861" width="0.2" height="15.0" fill="rgb(231,72,0)" rx="2" ry="2" />
<text  x="326.26" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (29 samples, 0.48%)</title><rect x="125.9" y="1685" width="5.7" height="15.0" fill="rgb(238,130,5)" rx="2" ry="2" />
<text  x="128.92" y="1695.5" ></text>
</g>
<g >
<title>TDocument::operator= (1 samples, 0.02%)</title><rect x="584.9" y="1957" width="0.2" height="15.0" fill="rgb(206,225,17)" rx="2" ry="2" />
<text  x="587.90" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.5" y="1477" width="0.1" height="15.0" fill="rgb(246,13,6)" rx="2" ry="2" />
<text  x="1168.45" y="1487.5" ></text>
</g>
<g >
<title>__handle_mm_fault (2 samples, 0.03%)</title><rect x="676.7" y="1797" width="0.3" height="15.0" fill="rgb(243,47,21)" rx="2" ry="2" />
<text  x="679.66" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (1 samples, 0.02%)</title><rect x="210.5" y="1765" width="0.2" height="15.0" fill="rgb(254,138,19)" rx="2" ry="2" />
<text  x="213.47" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1164.5" y="245" width="0.6" height="15.0" fill="rgb(240,98,47)" rx="2" ry="2" />
<text  x="1167.48" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.1" y="1029" width="0.2" height="15.0" fill="rgb(215,127,44)" rx="2" ry="2" />
<text  x="1168.06" y="1039.5" ></text>
</g>
<g >
<title>cfree (3 samples, 0.05%)</title><rect x="132.9" y="1701" width="0.6" height="15.0" fill="rgb(233,173,25)" rx="2" ry="2" />
<text  x="135.93" y="1711.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (2 samples, 0.03%)</title><rect x="110.5" y="1573" width="0.4" height="15.0" fill="rgb(233,15,25)" rx="2" ry="2" />
<text  x="113.53" y="1583.5" ></text>
</g>
<g >
<title>Eigen::internal::product_evaluator&lt;Eigen::Product&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0&gt;, 7, Eigen::DenseShape, Eigen::DenseShape, float, float&gt;::product_evaluator (5 samples, 0.08%)</title><rect x="452.0" y="1957" width="1.0" height="15.0" fill="rgb(247,52,12)" rx="2" ry="2" />
<text  x="455.04" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.2" y="661" width="0.2" height="15.0" fill="rgb(254,125,28)" rx="2" ry="2" />
<text  x="13.19" y="671.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="549" width="0.4" height="15.0" fill="rgb(209,58,16)" rx="2" ry="2" />
<text  x="87.22" y="559.5" ></text>
</g>
<g >
<title>cfree (137 samples, 2.26%)</title><rect x="906.7" y="2053" width="26.7" height="15.0" fill="rgb(233,127,45)" rx="2" ry="2" />
<text  x="909.74" y="2063.5" >c..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.5" y="1589" width="0.1" height="15.0" fill="rgb(243,160,12)" rx="2" ry="2" />
<text  x="1168.45" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="213.4" y="1685" width="0.2" height="15.0" fill="rgb(227,16,6)" rx="2" ry="2" />
<text  x="216.39" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.1" y="645" width="0.2" height="15.0" fill="rgb(205,57,0)" rx="2" ry="2" />
<text  x="1168.06" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="213.4" y="1189" width="0.2" height="15.0" fill="rgb(207,33,24)" rx="2" ry="2" />
<text  x="216.39" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.1" y="581" width="0.2" height="15.0" fill="rgb(209,183,1)" rx="2" ry="2" />
<text  x="1168.06" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.1" y="1141" width="0.2" height="15.0" fill="rgb(207,66,52)" rx="2" ry="2" />
<text  x="1167.09" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.5" y="741" width="0.1" height="15.0" fill="rgb(239,121,19)" rx="2" ry="2" />
<text  x="1168.45" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.3" y="1317" width="0.2" height="15.0" fill="rgb(233,168,7)" rx="2" ry="2" />
<text  x="1168.26" y="1327.5" ></text>
</g>
<g >
<title>up_read (1 samples, 0.02%)</title><rect x="433.3" y="1909" width="0.2" height="15.0" fill="rgb(253,40,2)" rx="2" ry="2" />
<text  x="436.33" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.2" y="1461" width="0.2" height="15.0" fill="rgb(206,167,8)" rx="2" ry="2" />
<text  x="13.19" y="1471.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__detail::_State&lt;char&gt;, std::allocator&lt;std::__detail::_State&lt;char&gt; &gt; &gt;::_M_realloc_insert&lt;std::__detail::_State&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="168.2" y="1749" width="0.2" height="15.0" fill="rgb(243,114,52)" rx="2" ry="2" />
<text  x="171.19" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="725" width="0.4" height="15.0" fill="rgb(217,145,11)" rx="2" ry="2" />
<text  x="87.22" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.1" y="805" width="0.2" height="15.0" fill="rgb(210,33,22)" rx="2" ry="2" />
<text  x="1168.06" y="815.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::_M_transform (5 samples, 0.08%)</title><rect x="1142.9" y="2053" width="0.9" height="15.0" fill="rgb(216,90,3)" rx="2" ry="2" />
<text  x="1145.85" y="2063.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::push_back (2 samples, 0.03%)</title><rect x="882.6" y="2037" width="0.4" height="15.0" fill="rgb(245,46,39)" rx="2" ry="2" />
<text  x="885.58" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.07%)</title><rect x="1164.3" y="1845" width="0.8" height="15.0" fill="rgb(207,29,12)" rx="2" ry="2" />
<text  x="1167.28" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.3" y="869" width="0.2" height="15.0" fill="rgb(230,221,49)" rx="2" ry="2" />
<text  x="1167.28" y="879.5" ></text>
</g>
<g >
<title>Eigen::internal::general_matrix_vector_product&lt;long, float, Eigen::internal::const_blas_data_mapper&lt;float, long, 1&gt;, 1, false, float, Eigen::internal::const_blas_data_mapper&lt;float, long, 0&gt;, false, 0&gt;::run (1 samples, 0.02%)</title><rect x="452.8" y="1941" width="0.2" height="15.0" fill="rgb(219,73,7)" rx="2" ry="2" />
<text  x="455.82" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.3" y="389" width="0.2" height="15.0" fill="rgb(251,197,42)" rx="2" ry="2" />
<text  x="1167.28" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.5" y="1637" width="0.1" height="15.0" fill="rgb(218,203,36)" rx="2" ry="2" />
<text  x="1168.45" y="1647.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id@plt (2 samples, 0.03%)</title><rect x="130.6" y="1669" width="0.4" height="15.0" fill="rgb(205,178,45)" rx="2" ry="2" />
<text  x="133.59" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.6" y="677" width="0.2" height="15.0" fill="rgb(211,165,40)" rx="2" ry="2" />
<text  x="141.58" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1165.1" y="1717" width="0.4" height="15.0" fill="rgb(239,165,32)" rx="2" ry="2" />
<text  x="1168.06" y="1727.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="205.4" y="1701" width="0.2" height="15.0" fill="rgb(207,25,14)" rx="2" ry="2" />
<text  x="208.40" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="149" width="0.4" height="15.0" fill="rgb(248,167,25)" rx="2" ry="2" />
<text  x="87.22" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1164.5" y="1749" width="0.6" height="15.0" fill="rgb(205,82,51)" rx="2" ry="2" />
<text  x="1167.48" y="1759.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="84.0" y="1893" width="0.6" height="15.0" fill="rgb(232,145,1)" rx="2" ry="2" />
<text  x="87.03" y="1903.5" ></text>
</g>
<g >
<title>TSlinkClustering::ClusterBatch (1,218 samples, 20.11%)</title><rect x="345.9" y="1989" width="237.2" height="15.0" fill="rgb(237,188,23)" rx="2" ry="2" />
<text  x="348.86" y="1999.5" >TSlinkClustering::ClusterBatch</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.1" y="1909" width="0.2" height="15.0" fill="rgb(227,100,18)" rx="2" ry="2" />
<text  x="1167.09" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.1" y="549" width="0.2" height="15.0" fill="rgb(229,90,46)" rx="2" ry="2" />
<text  x="1167.09" y="559.5" ></text>
</g>
<g >
<title>futex_wake (1 samples, 0.02%)</title><rect x="585.7" y="1957" width="0.2" height="15.0" fill="rgb(250,190,52)" rx="2" ry="2" />
<text  x="588.68" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1164.5" y="1077" width="0.6" height="15.0" fill="rgb(211,140,44)" rx="2" ry="2" />
<text  x="1167.48" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.2" y="1557" width="0.2" height="15.0" fill="rgb(229,58,18)" rx="2" ry="2" />
<text  x="13.19" y="1567.5" ></text>
</g>
<g >
<title>__do_page_fault (3 samples, 0.05%)</title><rect x="860.2" y="1989" width="0.6" height="15.0" fill="rgb(216,13,47)" rx="2" ry="2" />
<text  x="863.18" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="169.0" y="1365" width="0.2" height="15.0" fill="rgb(244,195,2)" rx="2" ry="2" />
<text  x="171.97" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.5" y="1781" width="0.1" height="15.0" fill="rgb(252,61,9)" rx="2" ry="2" />
<text  x="1168.45" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.3" y="1237" width="0.2" height="15.0" fill="rgb(229,158,53)" rx="2" ry="2" />
<text  x="1168.26" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.3" y="1301" width="0.2" height="15.0" fill="rgb(213,200,20)" rx="2" ry="2" />
<text  x="1167.28" y="1311.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1109.2" y="2037" width="0.1" height="15.0" fill="rgb(219,202,20)" rx="2" ry="2" />
<text  x="1112.15" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.5" y="1829" width="0.1" height="15.0" fill="rgb(216,29,53)" rx="2" ry="2" />
<text  x="1168.45" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.2" y="1509" width="0.2" height="15.0" fill="rgb(239,114,2)" rx="2" ry="2" />
<text  x="13.19" y="1519.5" ></text>
</g>
<g >
<title>do_futex (2 samples, 0.03%)</title><rect x="103.5" y="1909" width="0.4" height="15.0" fill="rgb(225,204,54)" rx="2" ry="2" />
<text  x="106.51" y="1919.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="208.3" y="1589" width="0.2" height="15.0" fill="rgb(217,59,32)" rx="2" ry="2" />
<text  x="211.32" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="213.2" y="1029" width="0.2" height="15.0" fill="rgb(222,214,35)" rx="2" ry="2" />
<text  x="216.19" y="1039.5" ></text>
</g>
<g >
<title>fasttext::Vector::zero (1 samples, 0.02%)</title><rect x="580.4" y="1973" width="0.2" height="15.0" fill="rgb(217,171,30)" rx="2" ry="2" />
<text  x="583.42" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.6" y="1429" width="0.2" height="15.0" fill="rgb(219,16,40)" rx="2" ry="2" />
<text  x="141.58" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.6" y="949" width="0.2" height="15.0" fill="rgb(234,165,34)" rx="2" ry="2" />
<text  x="141.58" y="959.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (4 samples, 0.07%)</title><rect x="42.1" y="1941" width="0.8" height="15.0" fill="rgb(208,17,43)" rx="2" ry="2" />
<text  x="45.14" y="1951.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (1 samples, 0.02%)</title><rect x="142.3" y="1557" width="0.2" height="15.0" fill="rgb(225,158,0)" rx="2" ry="2" />
<text  x="145.28" y="1567.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.02%)</title><rect x="48.0" y="1957" width="0.2" height="15.0" fill="rgb(217,45,43)" rx="2" ry="2" />
<text  x="50.99" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.6" y="1349" width="0.2" height="15.0" fill="rgb(227,42,7)" rx="2" ry="2" />
<text  x="141.58" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (32 samples, 0.53%)</title><rect x="203.8" y="1749" width="6.3" height="15.0" fill="rgb(221,27,39)" rx="2" ry="2" />
<text  x="206.84" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.1" y="1253" width="0.2" height="15.0" fill="rgb(214,216,20)" rx="2" ry="2" />
<text  x="1168.06" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (25 samples, 0.41%)</title><rect x="150.7" y="1653" width="4.8" height="15.0" fill="rgb(251,218,52)" rx="2" ry="2" />
<text  x="153.66" y="1663.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, double&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (2 samples, 0.03%)</title><rect x="213.6" y="1973" width="0.4" height="15.0" fill="rgb(210,211,40)" rx="2" ry="2" />
<text  x="216.58" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.6" y="741" width="0.2" height="15.0" fill="rgb(230,130,47)" rx="2" ry="2" />
<text  x="141.58" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="213.4" y="1013" width="0.2" height="15.0" fill="rgb(206,8,30)" rx="2" ry="2" />
<text  x="216.39" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (1 samples, 0.02%)</title><rect x="211.1" y="1813" width="0.1" height="15.0" fill="rgb(213,128,42)" rx="2" ry="2" />
<text  x="214.05" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.2" y="197" width="0.2" height="15.0" fill="rgb(233,167,47)" rx="2" ry="2" />
<text  x="13.19" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (1 samples, 0.02%)</title><rect x="211.6" y="1749" width="0.2" height="15.0" fill="rgb(205,135,38)" rx="2" ry="2" />
<text  x="214.63" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.1" y="645" width="0.2" height="15.0" fill="rgb(217,80,40)" rx="2" ry="2" />
<text  x="1167.09" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.1" y="1925" width="0.2" height="15.0" fill="rgb(236,92,12)" rx="2" ry="2" />
<text  x="1167.09" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (38 samples, 0.63%)</title><rect x="104.5" y="1717" width="7.4" height="15.0" fill="rgb(234,83,8)" rx="2" ry="2" />
<text  x="107.49" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.3" y="1573" width="0.2" height="15.0" fill="rgb(228,172,23)" rx="2" ry="2" />
<text  x="1167.28" y="1583.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="345.7" y="1957" width="0.2" height="15.0" fill="rgb(242,61,53)" rx="2" ry="2" />
<text  x="348.67" y="1967.5" ></text>
</g>
<g >
<title>onmt::unicode::is_letter@plt (6 samples, 0.10%)</title><rect x="816.7" y="1893" width="1.2" height="15.0" fill="rgb(245,174,31)" rx="2" ry="2" />
<text  x="819.73" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (28 samples, 0.46%)</title><rect x="132.1" y="1733" width="5.5" height="15.0" fill="rgb(243,213,45)" rx="2" ry="2" />
<text  x="135.15" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.3" y="117" width="0.2" height="15.0" fill="rgb(228,100,0)" rx="2" ry="2" />
<text  x="1167.28" y="127.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="677.0" y="1877" width="0.2" height="15.0" fill="rgb(220,51,20)" rx="2" ry="2" />
<text  x="680.05" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1164.5" y="309" width="0.6" height="15.0" fill="rgb(210,196,39)" rx="2" ry="2" />
<text  x="1167.48" y="319.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="84.0" y="1989" width="0.6" height="15.0" fill="rgb(217,152,26)" rx="2" ry="2" />
<text  x="87.03" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.5" y="1701" width="0.1" height="15.0" fill="rgb(242,107,28)" rx="2" ry="2" />
<text  x="1168.45" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (1 samples, 0.02%)</title><rect x="138.0" y="1749" width="0.2" height="15.0" fill="rgb(223,9,26)" rx="2" ry="2" />
<text  x="140.99" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.2" y="1109" width="0.2" height="15.0" fill="rgb(234,216,48)" rx="2" ry="2" />
<text  x="13.19" y="1119.5" ></text>
</g>
<g >
<title>cfree (1 samples, 0.02%)</title><rect x="171.7" y="1589" width="0.2" height="15.0" fill="rgb(217,117,49)" rx="2" ry="2" />
<text  x="174.70" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.1" y="597" width="0.2" height="15.0" fill="rgb(223,49,10)" rx="2" ry="2" />
<text  x="1167.09" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="169.0" y="805" width="0.2" height="15.0" fill="rgb(230,175,45)" rx="2" ry="2" />
<text  x="171.97" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.2" y="277" width="0.2" height="15.0" fill="rgb(253,165,31)" rx="2" ry="2" />
<text  x="13.19" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (1 samples, 0.02%)</title><rect x="119.1" y="1717" width="0.2" height="15.0" fill="rgb(216,107,4)" rx="2" ry="2" />
<text  x="122.10" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.2" y="549" width="0.2" height="15.0" fill="rgb(205,185,19)" rx="2" ry="2" />
<text  x="13.19" y="559.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (17 samples, 0.28%)</title><rect x="832.1" y="1893" width="3.3" height="15.0" fill="rgb(223,120,22)" rx="2" ry="2" />
<text  x="835.12" y="1903.5" ></text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.05%)</title><rect x="204.8" y="1701" width="0.6" height="15.0" fill="rgb(211,58,34)" rx="2" ry="2" />
<text  x="207.82" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.1" y="69" width="0.2" height="15.0" fill="rgb(245,45,6)" rx="2" ry="2" />
<text  x="1167.09" y="79.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (5 samples, 0.08%)</title><rect x="583.3" y="2005" width="1.0" height="15.0" fill="rgb(227,224,30)" rx="2" ry="2" />
<text  x="586.34" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="138.4" y="1797" width="0.4" height="15.0" fill="rgb(215,142,50)" rx="2" ry="2" />
<text  x="141.38" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.2" y="293" width="0.2" height="15.0" fill="rgb(226,216,47)" rx="2" ry="2" />
<text  x="13.19" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.2" y="1621" width="0.2" height="15.0" fill="rgb(209,58,54)" rx="2" ry="2" />
<text  x="13.19" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (2 samples, 0.03%)</title><rect x="161.8" y="1749" width="0.4" height="15.0" fill="rgb(216,196,33)" rx="2" ry="2" />
<text  x="164.76" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.1" y="1845" width="0.2" height="15.0" fill="rgb(205,210,38)" rx="2" ry="2" />
<text  x="1167.09" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (13 samples, 0.21%)</title><rect x="164.5" y="1685" width="2.5" height="15.0" fill="rgb(239,29,21)" rx="2" ry="2" />
<text  x="167.49" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="169.0" y="1109" width="0.2" height="15.0" fill="rgb(243,145,31)" rx="2" ry="2" />
<text  x="171.97" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (2 samples, 0.03%)</title><rect x="210.3" y="1797" width="0.4" height="15.0" fill="rgb(227,15,41)" rx="2" ry="2" />
<text  x="213.27" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1164.5" y="741" width="0.6" height="15.0" fill="rgb(249,225,25)" rx="2" ry="2" />
<text  x="1167.48" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.3" y="341" width="0.2" height="15.0" fill="rgb(254,225,2)" rx="2" ry="2" />
<text  x="1168.26" y="351.5" ></text>
</g>
<g >
<title>boost::algorithm::split&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::algorithm::detail::is_any_ofF&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="345.5" y="1989" width="0.2" height="15.0" fill="rgb(249,12,44)" rx="2" ry="2" />
<text  x="348.47" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.6" y="837" width="0.2" height="15.0" fill="rgb(211,118,15)" rx="2" ry="2" />
<text  x="141.58" y="847.5" ></text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::get (6 samples, 0.10%)</title><rect x="102.3" y="1909" width="1.2" height="15.0" fill="rgb(253,176,33)" rx="2" ry="2" />
<text  x="105.34" y="1919.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (5 samples, 0.08%)</title><rect x="143.1" y="1573" width="0.9" height="15.0" fill="rgb(213,187,21)" rx="2" ry="2" />
<text  x="146.06" y="1583.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (2 samples, 0.03%)</title><rect x="185.9" y="1621" width="0.4" height="15.0" fill="rgb(238,158,48)" rx="2" ry="2" />
<text  x="188.92" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="169.0" y="1125" width="0.2" height="15.0" fill="rgb(225,0,52)" rx="2" ry="2" />
<text  x="171.97" y="1135.5" ></text>
</g>
<g >
<title>TDocument::FromJson (3 samples, 0.05%)</title><rect x="89.3" y="1973" width="0.6" height="15.0" fill="rgb(226,162,29)" rx="2" ry="2" />
<text  x="92.29" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.5" y="1909" width="0.1" height="15.0" fill="rgb(214,31,33)" rx="2" ry="2" />
<text  x="1168.45" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="213.2" y="1221" width="0.2" height="15.0" fill="rgb(214,63,34)" rx="2" ry="2" />
<text  x="216.19" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (1 samples, 0.02%)</title><rect x="211.4" y="1781" width="0.2" height="15.0" fill="rgb(237,26,0)" rx="2" ry="2" />
<text  x="214.44" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1165.1" y="1973" width="0.4" height="15.0" fill="rgb(253,224,42)" rx="2" ry="2" />
<text  x="1168.06" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="1093" width="0.4" height="15.0" fill="rgb(214,228,2)" rx="2" ry="2" />
<text  x="87.22" y="1103.5" ></text>
</g>
<g >
<title>handle_mm_fault (38 samples, 0.63%)</title><rect x="434.9" y="1909" width="7.4" height="15.0" fill="rgb(231,26,52)" rx="2" ry="2" />
<text  x="437.89" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="213.2" y="1669" width="0.2" height="15.0" fill="rgb(215,184,45)" rx="2" ry="2" />
<text  x="216.19" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1164.5" y="37" width="0.6" height="15.0" fill="rgb(249,31,6)" rx="2" ry="2" />
<text  x="1167.48" y="47.5" ></text>
</g>
<g >
<title>generic_file_read_iter (5 samples, 0.08%)</title><rect x="88.1" y="1893" width="1.0" height="15.0" fill="rgb(249,162,1)" rx="2" ry="2" />
<text  x="91.12" y="1903.5" ></text>
</g>
<g >
<title>TNewsCluster::SortByWeights (1 samples, 0.02%)</title><rect x="224.7" y="1989" width="0.2" height="15.0" fill="rgb(228,175,15)" rx="2" ry="2" />
<text  x="227.69" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.2" y="997" width="0.2" height="15.0" fill="rgb(242,226,17)" rx="2" ry="2" />
<text  x="13.19" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="213.2" y="1445" width="0.2" height="15.0" fill="rgb(221,27,41)" rx="2" ry="2" />
<text  x="216.19" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.3" y="1141" width="0.2" height="15.0" fill="rgb(238,7,4)" rx="2" ry="2" />
<text  x="1168.26" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.6" y="1141" width="0.2" height="15.0" fill="rgb(235,61,53)" rx="2" ry="2" />
<text  x="141.58" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.07%)</title><rect x="1164.3" y="1941" width="0.8" height="15.0" fill="rgb(208,152,34)" rx="2" ry="2" />
<text  x="1167.28" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (29 samples, 0.48%)</title><rect x="125.9" y="1733" width="5.7" height="15.0" fill="rgb(234,100,39)" rx="2" ry="2" />
<text  x="128.92" y="1743.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (2 samples, 0.03%)</title><rect x="40.6" y="1941" width="0.4" height="15.0" fill="rgb(225,71,43)" rx="2" ry="2" />
<text  x="43.59" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.5" y="1301" width="0.1" height="15.0" fill="rgb(237,50,20)" rx="2" ry="2" />
<text  x="1168.45" y="1311.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.2" y="117" width="0.2" height="15.0" fill="rgb(219,181,49)" rx="2" ry="2" />
<text  x="13.19" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (28 samples, 0.46%)</title><rect x="132.1" y="1781" width="5.5" height="15.0" fill="rgb(220,152,17)" rx="2" ry="2" />
<text  x="135.15" y="1791.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (1 samples, 0.02%)</title><rect x="583.1" y="1941" width="0.2" height="15.0" fill="rgb(235,63,5)" rx="2" ry="2" />
<text  x="586.15" y="1951.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="125.3" y="1637" width="0.2" height="15.0" fill="rgb(212,56,7)" rx="2" ry="2" />
<text  x="128.33" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.07%)</title><rect x="212.8" y="1909" width="0.8" height="15.0" fill="rgb(222,158,35)" rx="2" ry="2" />
<text  x="215.80" y="1919.5" ></text>
</g>
<g >
<title>clear_page_erms (12 samples, 0.20%)</title><rect x="429.4" y="1829" width="2.4" height="15.0" fill="rgb(248,73,19)" rx="2" ry="2" />
<text  x="432.44" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="138.4" y="1765" width="0.4" height="15.0" fill="rgb(222,8,53)" rx="2" ry="2" />
<text  x="141.38" y="1775.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsgetn (1 samples, 0.02%)</title><rect x="1188.2" y="2053" width="0.2" height="15.0" fill="rgb(235,52,36)" rx="2" ry="2" />
<text  x="1191.25" y="2063.5" ></text>
</g>
<g >
<title>onmt::unicode::is_separator (60 samples, 0.99%)</title><rect x="819.5" y="1893" width="11.6" height="15.0" fill="rgb(224,23,39)" rx="2" ry="2" />
<text  x="822.46" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (1 samples, 0.02%)</title><rect x="210.3" y="1765" width="0.2" height="15.0" fill="rgb(252,178,39)" rx="2" ry="2" />
<text  x="213.27" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.3" y="757" width="0.2" height="15.0" fill="rgb(226,215,44)" rx="2" ry="2" />
<text  x="1168.26" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.1" y="1029" width="0.2" height="15.0" fill="rgb(221,138,42)" rx="2" ry="2" />
<text  x="1167.09" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.1" y="1365" width="0.2" height="15.0" fill="rgb(211,222,45)" rx="2" ry="2" />
<text  x="1168.06" y="1375.5" ></text>
</g>
<g >
<title>TAgencyRating::ScoreUrl (226 samples, 3.73%)</title><rect x="169.9" y="1989" width="44.1" height="15.0" fill="rgb(248,165,11)" rx="2" ry="2" />
<text  x="172.94" y="1999.5" >TAge..</text>
</g>
<g >
<title>onmt::CaseModifier::extract_case_type (1 samples, 0.02%)</title><rect x="591.7" y="1909" width="0.2" height="15.0" fill="rgb(225,223,45)" rx="2" ry="2" />
<text  x="594.72" y="1919.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="103.5" y="1957" width="0.4" height="15.0" fill="rgb(211,66,43)" rx="2" ry="2" />
<text  x="106.51" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="213.4" y="1589" width="0.2" height="15.0" fill="rgb(218,5,44)" rx="2" ry="2" />
<text  x="216.39" y="1599.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (2 samples, 0.03%)</title><rect x="195.1" y="1637" width="0.4" height="15.0" fill="rgb(252,69,4)" rx="2" ry="2" />
<text  x="198.08" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.1" y="1557" width="0.2" height="15.0" fill="rgb(239,68,19)" rx="2" ry="2" />
<text  x="1167.09" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (1 samples, 0.02%)</title><rect x="168.0" y="1749" width="0.2" height="15.0" fill="rgb(252,130,38)" rx="2" ry="2" />
<text  x="171.00" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.3" y="773" width="0.2" height="15.0" fill="rgb(251,13,47)" rx="2" ry="2" />
<text  x="1167.28" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.3" y="229" width="0.2" height="15.0" fill="rgb(215,184,22)" rx="2" ry="2" />
<text  x="1168.26" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.5" y="501" width="0.1" height="15.0" fill="rgb(230,161,33)" rx="2" ry="2" />
<text  x="1168.45" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.6" y="1621" width="0.2" height="15.0" fill="rgb(244,135,49)" rx="2" ry="2" />
<text  x="141.58" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.1" y="661" width="0.2" height="15.0" fill="rgb(220,78,16)" rx="2" ry="2" />
<text  x="1167.09" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1165.1" y="1653" width="0.4" height="15.0" fill="rgb(245,45,7)" rx="2" ry="2" />
<text  x="1168.06" y="1663.5" ></text>
</g>
<g >
<title>__x64_sys_read (5 samples, 0.08%)</title><rect x="88.1" y="1989" width="1.0" height="15.0" fill="rgb(236,137,6)" rx="2" ry="2" />
<text  x="91.12" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.2" y="869" width="0.2" height="15.0" fill="rgb(226,191,30)" rx="2" ry="2" />
<text  x="13.19" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.3" y="629" width="0.2" height="15.0" fill="rgb(250,80,27)" rx="2" ry="2" />
<text  x="1167.28" y="639.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="1493" width="0.4" height="15.0" fill="rgb(207,22,28)" rx="2" ry="2" />
<text  x="87.22" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1164.5" y="261" width="0.6" height="15.0" fill="rgb(251,163,47)" rx="2" ry="2" />
<text  x="1167.48" y="271.5" ></text>
</g>
<g >
<title>Eigen::internal::generic_product_impl&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt;, Eigen::DenseShape, Eigen::DenseShape, 8&gt;::scaleAndAddTo&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt; (27 samples, 0.45%)</title><rect x="420.3" y="1941" width="5.2" height="15.0" fill="rgb(219,148,38)" rx="2" ry="2" />
<text  x="423.28" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (1 samples, 0.02%)</title><rect x="125.7" y="1685" width="0.2" height="15.0" fill="rgb(254,12,9)" rx="2" ry="2" />
<text  x="128.72" y="1695.5" ></text>
</g>
<g >
<title>std::vector&lt;fasttext::entry, std::allocator&lt;fasttext::entry&gt; &gt;::_M_realloc_insert&lt;fasttext::entry const&amp;&gt; (1 samples, 0.02%)</title><rect x="87.7" y="2021" width="0.2" height="15.0" fill="rgb(219,50,24)" rx="2" ry="2" />
<text  x="90.73" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (10 samples, 0.17%)</title><rect x="152.6" y="1621" width="2.0" height="15.0" fill="rgb(215,147,24)" rx="2" ry="2" />
<text  x="155.61" y="1631.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="845.8" y="1861" width="0.2" height="15.0" fill="rgb(237,190,50)" rx="2" ry="2" />
<text  x="848.76" y="1871.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (1 samples, 0.02%)</title><rect x="141.5" y="1557" width="0.2" height="15.0" fill="rgb(250,138,52)" rx="2" ry="2" />
<text  x="144.50" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.3" y="1701" width="0.2" height="15.0" fill="rgb(235,225,1)" rx="2" ry="2" />
<text  x="1167.28" y="1711.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="277" width="0.4" height="15.0" fill="rgb(236,193,2)" rx="2" ry="2" />
<text  x="87.22" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.2" y="1957" width="0.2" height="15.0" fill="rgb(214,76,10)" rx="2" ry="2" />
<text  x="13.19" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.3" y="1253" width="0.2" height="15.0" fill="rgb(228,133,49)" rx="2" ry="2" />
<text  x="1167.28" y="1263.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (1 samples, 0.02%)</title><rect x="138.0" y="1877" width="0.2" height="15.0" fill="rgb(233,45,49)" rx="2" ry="2" />
<text  x="140.99" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (32 samples, 0.53%)</title><rect x="144.4" y="1653" width="6.3" height="15.0" fill="rgb(252,38,35)" rx="2" ry="2" />
<text  x="147.42" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.3" y="565" width="0.2" height="15.0" fill="rgb(220,163,39)" rx="2" ry="2" />
<text  x="1168.26" y="575.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="198.8" y="1669" width="0.2" height="15.0" fill="rgb(252,48,13)" rx="2" ry="2" />
<text  x="201.78" y="1679.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="933.2" y="2005" width="0.2" height="15.0" fill="rgb(225,204,40)" rx="2" ry="2" />
<text  x="936.23" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.5" y="1957" width="0.1" height="15.0" fill="rgb(237,2,25)" rx="2" ry="2" />
<text  x="1168.45" y="1967.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="742.1" y="1845" width="0.2" height="15.0" fill="rgb(225,120,6)" rx="2" ry="2" />
<text  x="745.12" y="1855.5" ></text>
</g>
<g >
<title>__handle_mm_fault (38 samples, 0.63%)</title><rect x="434.9" y="1893" width="7.4" height="15.0" fill="rgb(233,88,30)" rx="2" ry="2" />
<text  x="437.89" y="1903.5" ></text>
</g>
<g >
<title>cfree (1 samples, 0.02%)</title><rect x="163.3" y="1685" width="0.2" height="15.0" fill="rgb(207,74,30)" rx="2" ry="2" />
<text  x="166.32" y="1695.5" ></text>
</g>
<g >
<title>__handle_mm_fault (3 samples, 0.05%)</title><rect x="82.9" y="1957" width="0.5" height="15.0" fill="rgb(214,25,36)" rx="2" ry="2" />
<text  x="85.86" y="1967.5" ></text>
</g>
<g >
<title>clear_page_erms (23 samples, 0.38%)</title><rect x="436.1" y="1845" width="4.4" height="15.0" fill="rgb(254,103,50)" rx="2" ry="2" />
<text  x="439.06" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="84.0" y="2005" width="0.6" height="15.0" fill="rgb(253,129,29)" rx="2" ry="2" />
<text  x="87.03" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (1 samples, 0.02%)</title><rect x="144.2" y="1653" width="0.2" height="15.0" fill="rgb(207,163,4)" rx="2" ry="2" />
<text  x="147.23" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.1" y="837" width="0.2" height="15.0" fill="rgb(210,222,23)" rx="2" ry="2" />
<text  x="1167.09" y="847.5" ></text>
</g>
<g >
<title>TDocument::operator= (1 samples, 0.02%)</title><rect x="584.7" y="1973" width="0.2" height="15.0" fill="rgb(230,23,11)" rx="2" ry="2" />
<text  x="587.71" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.5" y="1973" width="0.1" height="15.0" fill="rgb(236,21,50)" rx="2" ry="2" />
<text  x="1168.45" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="1445" width="0.4" height="15.0" fill="rgb(241,24,10)" rx="2" ry="2" />
<text  x="87.22" y="1455.5" ></text>
</g>
<g >
<title>cfree (1 samples, 0.02%)</title><rect x="457.1" y="1973" width="0.2" height="15.0" fill="rgb(244,101,41)" rx="2" ry="2" />
<text  x="460.10" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="169.0" y="917" width="0.2" height="15.0" fill="rgb(217,178,37)" rx="2" ry="2" />
<text  x="171.97" y="927.5" ></text>
</g>
<g >
<title>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::dump (1 samples, 0.02%)</title><rect x="584.5" y="1925" width="0.2" height="15.0" fill="rgb(223,10,27)" rx="2" ry="2" />
<text  x="587.51" y="1935.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="816.5" y="1861" width="0.2" height="15.0" fill="rgb(241,158,19)" rx="2" ry="2" />
<text  x="819.54" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.6" y="965" width="0.2" height="15.0" fill="rgb(206,52,54)" rx="2" ry="2" />
<text  x="141.58" y="975.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (2 samples, 0.03%)</title><rect x="453.0" y="1957" width="0.4" height="15.0" fill="rgb(230,215,4)" rx="2" ry="2" />
<text  x="456.01" y="1967.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (2 samples, 0.03%)</title><rect x="166.4" y="1669" width="0.4" height="15.0" fill="rgb(232,120,8)" rx="2" ry="2" />
<text  x="169.44" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.1" y="757" width="0.2" height="15.0" fill="rgb(232,110,18)" rx="2" ry="2" />
<text  x="1168.06" y="767.5" ></text>
</g>
<g >
<title>__do_page_fault (6 samples, 0.10%)</title><rect x="82.3" y="1989" width="1.1" height="15.0" fill="rgb(221,160,53)" rx="2" ry="2" />
<text  x="85.28" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_matcher (1 samples, 0.02%)</title><rect x="168.2" y="1781" width="0.2" height="15.0" fill="rgb(237,33,30)" rx="2" ry="2" />
<text  x="171.19" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (1 samples, 0.02%)</title><rect x="150.7" y="1637" width="0.2" height="15.0" fill="rgb(210,224,40)" rx="2" ry="2" />
<text  x="153.66" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.2" y="373" width="0.2" height="15.0" fill="rgb(238,213,28)" rx="2" ry="2" />
<text  x="13.19" y="383.5" ></text>
</g>
<g >
<title>std::istream::sentry::sentry (1 samples, 0.02%)</title><rect x="342.6" y="1989" width="0.1" height="15.0" fill="rgb(206,126,18)" rx="2" ry="2" />
<text  x="345.55" y="1999.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::at (2 samples, 0.03%)</title><rect x="89.5" y="1957" width="0.4" height="15.0" fill="rgb(234,59,51)" rx="2" ry="2" />
<text  x="92.48" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.1" y="1973" width="0.2" height="15.0" fill="rgb(241,81,20)" rx="2" ry="2" />
<text  x="1167.09" y="1983.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;std::__detail::_State&lt;char&gt; const*, std::__detail::_State&lt;char&gt;*&gt; (1 samples, 0.02%)</title><rect x="162.0" y="1701" width="0.2" height="15.0" fill="rgb(205,106,38)" rx="2" ry="2" />
<text  x="164.96" y="1711.5" ></text>
</g>
<g >
<title>from_json&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; (1 samples, 0.02%)</title><rect x="587.0" y="1957" width="0.2" height="15.0" fill="rgb(253,60,25)" rx="2" ry="2" />
<text  x="590.04" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="213.2" y="1173" width="0.2" height="15.0" fill="rgb(220,101,41)" rx="2" ry="2" />
<text  x="216.19" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (17 samples, 0.28%)</title><rect x="133.7" y="1701" width="3.3" height="15.0" fill="rgb(222,211,26)" rx="2" ry="2" />
<text  x="136.71" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="168.8" y="1685" width="0.4" height="15.0" fill="rgb(239,29,33)" rx="2" ry="2" />
<text  x="171.77" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (1 samples, 0.02%)</title><rect x="131.8" y="1781" width="0.2" height="15.0" fill="rgb(243,220,52)" rx="2" ry="2" />
<text  x="134.76" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1164.5" y="709" width="0.6" height="15.0" fill="rgb(210,185,39)" rx="2" ry="2" />
<text  x="1167.48" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.2" y="357" width="0.2" height="15.0" fill="rgb(222,113,40)" rx="2" ry="2" />
<text  x="13.19" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.1" y="869" width="0.2" height="15.0" fill="rgb(234,47,3)" rx="2" ry="2" />
<text  x="1168.06" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="213.4" y="1397" width="0.2" height="15.0" fill="rgb(208,121,35)" rx="2" ry="2" />
<text  x="216.39" y="1407.5" ></text>
</g>
<g >
<title>std::operator&gt;&gt;&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (13 samples, 0.21%)</title><rect x="872.5" y="2005" width="2.5" height="15.0" fill="rgb(242,166,51)" rx="2" ry="2" />
<text  x="875.45" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="168.6" y="1525" width="0.2" height="15.0" fill="rgb(247,100,44)" rx="2" ry="2" />
<text  x="171.58" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.1" y="1653" width="0.2" height="15.0" fill="rgb(243,149,38)" rx="2" ry="2" />
<text  x="1167.09" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (47 samples, 0.78%)</title><rect x="186.9" y="1749" width="9.1" height="15.0" fill="rgb(239,228,17)" rx="2" ry="2" />
<text  x="189.89" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.6" y="853" width="0.2" height="15.0" fill="rgb(248,34,25)" rx="2" ry="2" />
<text  x="141.58" y="863.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (2 samples, 0.03%)</title><rect x="711.3" y="1781" width="0.4" height="15.0" fill="rgb(222,78,27)" rx="2" ry="2" />
<text  x="714.34" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.3" y="485" width="0.2" height="15.0" fill="rgb(227,219,21)" rx="2" ry="2" />
<text  x="1168.26" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1164.5" y="1013" width="0.6" height="15.0" fill="rgb(225,55,36)" rx="2" ry="2" />
<text  x="1167.48" y="1023.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (12 samples, 0.20%)</title><rect x="879.9" y="2005" width="2.3" height="15.0" fill="rgb(222,15,21)" rx="2" ry="2" />
<text  x="882.85" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="882.2" y="2021" width="0.4" height="15.0" fill="rgb(215,108,47)" rx="2" ry="2" />
<text  x="885.19" y="2031.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (18 samples, 0.30%)</title><rect x="453.4" y="1973" width="3.5" height="15.0" fill="rgb(243,52,40)" rx="2" ry="2" />
<text  x="456.40" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.6" y="725" width="0.2" height="15.0" fill="rgb(208,21,24)" rx="2" ry="2" />
<text  x="141.58" y="735.5" ></text>
</g>
<g >
<title>scsi_softirq_done (1 samples, 0.02%)</title><rect x="323.3" y="1893" width="0.2" height="15.0" fill="rgb(233,171,32)" rx="2" ry="2" />
<text  x="326.26" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (36 samples, 0.59%)</title><rect x="104.7" y="1621" width="7.0" height="15.0" fill="rgb(228,109,22)" rx="2" ry="2" />
<text  x="107.68" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.1" y="1429" width="0.2" height="15.0" fill="rgb(242,127,11)" rx="2" ry="2" />
<text  x="1168.06" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.2" y="645" width="0.2" height="15.0" fill="rgb(205,204,44)" rx="2" ry="2" />
<text  x="13.19" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.3" y="469" width="0.2" height="15.0" fill="rgb(242,69,22)" rx="2" ry="2" />
<text  x="1167.28" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="213.4" y="1269" width="0.2" height="15.0" fill="rgb(210,34,15)" rx="2" ry="2" />
<text  x="216.39" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (45 samples, 0.74%)</title><rect x="187.1" y="1685" width="8.8" height="15.0" fill="rgb(247,183,2)" rx="2" ry="2" />
<text  x="190.09" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.6" y="1013" width="0.2" height="15.0" fill="rgb(229,211,45)" rx="2" ry="2" />
<text  x="141.58" y="1023.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::load (1 samples, 0.02%)</title><rect x="991.9" y="2053" width="0.2" height="15.0" fill="rgb(252,115,46)" rx="2" ry="2" />
<text  x="994.87" y="2063.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="754.4" y="1845" width="0.2" height="15.0" fill="rgb(250,94,21)" rx="2" ry="2" />
<text  x="757.39" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="168.8" y="1749" width="0.4" height="15.0" fill="rgb(248,114,20)" rx="2" ry="2" />
<text  x="171.77" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.3" y="421" width="0.2" height="15.0" fill="rgb(250,166,45)" rx="2" ry="2" />
<text  x="1167.28" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="169.0" y="757" width="0.2" height="15.0" fill="rgb(211,98,38)" rx="2" ry="2" />
<text  x="171.97" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.3" y="53" width="0.2" height="15.0" fill="rgb(221,170,3)" rx="2" ry="2" />
<text  x="1168.26" y="63.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="168.4" y="1701" width="0.4" height="15.0" fill="rgb(242,193,1)" rx="2" ry="2" />
<text  x="171.39" y="1711.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="190.2" y="1637" width="0.2" height="15.0" fill="rgb(205,50,42)" rx="2" ry="2" />
<text  x="193.20" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.2" y="421" width="0.2" height="15.0" fill="rgb(232,211,2)" rx="2" ry="2" />
<text  x="13.19" y="431.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (1 samples, 0.02%)</title><rect x="1188.4" y="2053" width="0.2" height="15.0" fill="rgb(250,51,39)" rx="2" ry="2" />
<text  x="1191.44" y="2063.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (50 samples, 0.83%)</title><rect x="836.2" y="1893" width="9.8" height="15.0" fill="rgb(221,57,45)" rx="2" ry="2" />
<text  x="839.21" y="1903.5" ></text>
</g>
<g >
<title>release_pages (1 samples, 0.02%)</title><rect x="432.0" y="1813" width="0.2" height="15.0" fill="rgb(241,192,5)" rx="2" ry="2" />
<text  x="434.97" y="1823.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (2 samples, 0.03%)</title><rect x="185.1" y="1605" width="0.4" height="15.0" fill="rgb(237,92,44)" rx="2" ry="2" />
<text  x="188.14" y="1615.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (2 samples, 0.03%)</title><rect x="154.0" y="1605" width="0.4" height="15.0" fill="rgb(208,40,25)" rx="2" ry="2" />
<text  x="156.97" y="1615.5" ></text>
</g>
<g >
<title>operator new (2 samples, 0.03%)</title><rect x="164.1" y="1685" width="0.4" height="15.0" fill="rgb(254,101,37)" rx="2" ry="2" />
<text  x="167.10" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.1" y="709" width="0.2" height="15.0" fill="rgb(209,33,48)" rx="2" ry="2" />
<text  x="1167.09" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.6" y="1157" width="0.2" height="15.0" fill="rgb(235,88,7)" rx="2" ry="2" />
<text  x="141.58" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (170 samples, 2.81%)</title><rect x="170.3" y="1813" width="33.2" height="15.0" fill="rgb(211,4,25)" rx="2" ry="2" />
<text  x="173.33" y="1823.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.1" y="309" width="0.2" height="15.0" fill="rgb(227,173,15)" rx="2" ry="2" />
<text  x="1168.06" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.1" y="1093" width="0.2" height="15.0" fill="rgb(254,223,22)" rx="2" ry="2" />
<text  x="1168.06" y="1103.5" ></text>
</g>
<g >
<title>fasttext::ProductQuantizer::addcode (37 samples, 0.61%)</title><rect x="860.8" y="2037" width="7.2" height="15.0" fill="rgb(230,29,10)" rx="2" ry="2" />
<text  x="863.76" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.1" y="1573" width="0.2" height="15.0" fill="rgb(232,85,25)" rx="2" ry="2" />
<text  x="1168.06" y="1583.5" ></text>
</g>
<g >
<title>std::__stable_sort_adaptive&lt;__gnu_cxx::__normal_iterator&lt;TWeightedDoc*, std::vector&lt;TWeightedDoc, std::allocator&lt;TWeightedDoc&gt; &gt; &gt;, TWeightedDoc*, long, __gnu_cxx::__ops::_Iter_comp_iter&lt;TNewsCluster::SortByWeights (1 samples, 0.02%)</title><rect x="224.7" y="1973" width="0.2" height="15.0" fill="rgb(242,211,30)" rx="2" ry="2" />
<text  x="227.69" y="1983.5" ></text>
</g>
<g >
<title>all (6,057 samples, 100%)</title><rect x="10.0" y="2085" width="1180.0" height="15.0" fill="rgb(209,46,49)" rx="2" ry="2" />
<text  x="13.00" y="2095.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.1" y="437" width="0.2" height="15.0" fill="rgb(209,131,23)" rx="2" ry="2" />
<text  x="1168.06" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (45 samples, 0.74%)</title><rect x="170.3" y="1621" width="8.8" height="15.0" fill="rgb(235,50,1)" rx="2" ry="2" />
<text  x="173.33" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.1" y="1061" width="0.2" height="15.0" fill="rgb(241,88,35)" rx="2" ry="2" />
<text  x="1168.06" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.1" y="821" width="0.2" height="15.0" fill="rgb(222,8,47)" rx="2" ry="2" />
<text  x="1168.06" y="831.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="1029" width="0.4" height="15.0" fill="rgb(243,150,8)" rx="2" ry="2" />
<text  x="87.22" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.5" y="469" width="0.1" height="15.0" fill="rgb(231,23,3)" rx="2" ry="2" />
<text  x="1168.45" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (61 samples, 1.01%)</title><rect x="138.8" y="1733" width="11.9" height="15.0" fill="rgb(230,79,22)" rx="2" ry="2" />
<text  x="141.77" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.5" y="69" width="0.1" height="15.0" fill="rgb(213,157,52)" rx="2" ry="2" />
<text  x="1168.45" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="138.4" y="1861" width="0.4" height="15.0" fill="rgb(224,137,4)" rx="2" ry="2" />
<text  x="141.38" y="1871.5" ></text>
</g>
<g >
<title>malloc (78 samples, 1.29%)</title><rect x="1094.3" y="2053" width="15.2" height="15.0" fill="rgb(230,186,38)" rx="2" ry="2" />
<text  x="1097.35" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1164.5" y="1605" width="0.6" height="15.0" fill="rgb(247,98,23)" rx="2" ry="2" />
<text  x="1167.48" y="1615.5" ></text>
</g>
<g >
<title>get_task_policy.part.32 (1 samples, 0.02%)</title><rect x="41.0" y="1925" width="0.2" height="15.0" fill="rgb(222,206,47)" rx="2" ry="2" />
<text  x="43.98" y="1935.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (2 samples, 0.03%)</title><rect x="193.9" y="1621" width="0.4" height="15.0" fill="rgb(219,193,44)" rx="2" ry="2" />
<text  x="196.91" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.3" y="597" width="0.2" height="15.0" fill="rgb(231,30,9)" rx="2" ry="2" />
<text  x="1167.28" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="213.4" y="757" width="0.2" height="15.0" fill="rgb(245,145,2)" rx="2" ry="2" />
<text  x="216.39" y="767.5" ></text>
</g>
<g >
<title>get_user_pages_fast (2 samples, 0.03%)</title><rect x="46.2" y="1909" width="0.4" height="15.0" fill="rgb(218,30,5)" rx="2" ry="2" />
<text  x="49.24" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.2" y="165" width="0.2" height="15.0" fill="rgb(225,60,47)" rx="2" ry="2" />
<text  x="13.19" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="169.0" y="1301" width="0.2" height="15.0" fill="rgb(206,146,21)" rx="2" ry="2" />
<text  x="171.97" y="1311.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="208.3" y="1637" width="0.2" height="15.0" fill="rgb(249,66,30)" rx="2" ry="2" />
<text  x="211.32" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (34 samples, 0.56%)</title><rect x="119.3" y="1749" width="6.6" height="15.0" fill="rgb(216,185,43)" rx="2" ry="2" />
<text  x="122.29" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (1 samples, 0.02%)</title><rect x="168.0" y="1813" width="0.2" height="15.0" fill="rgb(224,25,6)" rx="2" ry="2" />
<text  x="171.00" y="1823.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.03%)</title><rect x="883.0" y="2005" width="0.4" height="15.0" fill="rgb(236,144,10)" rx="2" ry="2" />
<text  x="885.97" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="965" width="0.4" height="15.0" fill="rgb(210,227,15)" rx="2" ry="2" />
<text  x="87.22" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1164.5" y="1173" width="0.6" height="15.0" fill="rgb(236,154,50)" rx="2" ry="2" />
<text  x="1167.48" y="1183.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (1 samples, 0.02%)</title><rect x="440.9" y="1845" width="0.2" height="15.0" fill="rgb(222,107,9)" rx="2" ry="2" />
<text  x="443.93" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="1333" width="0.4" height="15.0" fill="rgb(211,195,46)" rx="2" ry="2" />
<text  x="87.22" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="169.0" y="1333" width="0.2" height="15.0" fill="rgb(211,26,51)" rx="2" ry="2" />
<text  x="171.97" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="213.2" y="1493" width="0.2" height="15.0" fill="rgb(231,210,43)" rx="2" ry="2" />
<text  x="216.19" y="1503.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.02%)</title><rect x="456.9" y="1957" width="0.2" height="15.0" fill="rgb(242,110,5)" rx="2" ry="2" />
<text  x="459.91" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.5" y="1429" width="0.1" height="15.0" fill="rgb(208,173,3)" rx="2" ry="2" />
<text  x="1168.45" y="1439.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::getId (100 samples, 1.65%)</title><rect x="951.0" y="2053" width="19.4" height="15.0" fill="rgb(237,145,14)" rx="2" ry="2" />
<text  x="953.96" y="2063.5" ></text>
</g>
<g >
<title>scsi_end_request (1 samples, 0.02%)</title><rect x="323.3" y="1845" width="0.2" height="15.0" fill="rgb(245,212,8)" rx="2" ry="2" />
<text  x="326.26" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="213.2" y="949" width="0.2" height="15.0" fill="rgb(212,191,22)" rx="2" ry="2" />
<text  x="216.19" y="959.5" ></text>
</g>
<g >
<title>do_futex (1 samples, 0.02%)</title><rect x="585.7" y="1973" width="0.2" height="15.0" fill="rgb(247,136,45)" rx="2" ry="2" />
<text  x="588.68" y="1983.5" ></text>
</g>
<g >
<title>page_fault (6 samples, 0.10%)</title><rect x="82.3" y="2021" width="1.1" height="15.0" fill="rgb(247,73,16)" rx="2" ry="2" />
<text  x="85.28" y="2031.5" ></text>
</g>
<g >
<title>std::__numpunct_cache&lt;char&gt;::~__numpunct_cache (2 samples, 0.03%)</title><rect x="882.2" y="2037" width="0.4" height="15.0" fill="rgb(243,105,42)" rx="2" ry="2" />
<text  x="885.19" y="2047.5" ></text>
</g>
<g >
<title>unmap_single_vma (1 samples, 0.02%)</title><rect x="933.4" y="1925" width="0.2" height="15.0" fill="rgb(209,85,47)" rx="2" ry="2" />
<text  x="936.43" y="1935.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (74 samples, 1.22%)</title><rect x="1118.1" y="2053" width="14.4" height="15.0" fill="rgb(254,172,14)" rx="2" ry="2" />
<text  x="1121.11" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (118 samples, 1.95%)</title><rect x="138.8" y="1781" width="23.0" height="15.0" fill="rgb(232,99,30)" rx="2" ry="2" />
<text  x="141.77" y="1791.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1164.5" y="69" width="0.6" height="15.0" fill="rgb(223,24,15)" rx="2" ry="2" />
<text  x="1167.48" y="79.5" ></text>
</g>
<g >
<title>free@plt (2 samples, 0.03%)</title><rect x="1094.0" y="2053" width="0.3" height="15.0" fill="rgb(233,96,47)" rx="2" ry="2" />
<text  x="1096.96" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (1 samples, 0.02%)</title><rect x="186.7" y="1749" width="0.2" height="15.0" fill="rgb(208,0,10)" rx="2" ry="2" />
<text  x="189.70" y="1759.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="127.5" y="1669" width="0.2" height="15.0" fill="rgb(214,142,1)" rx="2" ry="2" />
<text  x="130.47" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (26 samples, 0.43%)</title><rect x="139.2" y="1637" width="5.0" height="15.0" fill="rgb(234,164,41)" rx="2" ry="2" />
<text  x="142.16" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1164.5" y="133" width="0.6" height="15.0" fill="rgb(225,157,49)" rx="2" ry="2" />
<text  x="1167.48" y="143.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (1 samples, 0.02%)</title><rect x="210.3" y="1749" width="0.2" height="15.0" fill="rgb(237,99,5)" rx="2" ry="2" />
<text  x="213.27" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (36 samples, 0.59%)</title><rect x="196.2" y="1733" width="7.1" height="15.0" fill="rgb(228,212,40)" rx="2" ry="2" />
<text  x="199.24" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (1 samples, 0.02%)</title><rect x="111.7" y="1669" width="0.2" height="15.0" fill="rgb(239,57,53)" rx="2" ry="2" />
<text  x="114.69" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.1" y="229" width="0.2" height="15.0" fill="rgb(206,156,46)" rx="2" ry="2" />
<text  x="1168.06" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (1 samples, 0.02%)</title><rect x="137.6" y="1877" width="0.2" height="15.0" fill="rgb(233,63,15)" rx="2" ry="2" />
<text  x="140.60" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1164.5" y="1349" width="0.6" height="15.0" fill="rgb(242,176,26)" rx="2" ry="2" />
<text  x="1167.48" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1164.5" y="165" width="0.6" height="15.0" fill="rgb(211,118,32)" rx="2" ry="2" />
<text  x="1167.48" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.07%)</title><rect x="1164.3" y="2021" width="0.8" height="15.0" fill="rgb(242,6,10)" rx="2" ry="2" />
<text  x="1167.28" y="2031.5" ></text>
</g>
<g >
<title>alloc_pages_vma (2 samples, 0.03%)</title><rect x="82.9" y="1941" width="0.4" height="15.0" fill="rgb(233,117,4)" rx="2" ry="2" />
<text  x="85.86" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1165.1" y="1845" width="0.4" height="15.0" fill="rgb(214,147,34)" rx="2" ry="2" />
<text  x="1168.06" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (45 samples, 0.74%)</title><rect x="170.3" y="1653" width="8.8" height="15.0" fill="rgb(210,155,37)" rx="2" ry="2" />
<text  x="173.33" y="1663.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (2 samples, 0.03%)</title><rect x="676.7" y="1765" width="0.3" height="15.0" fill="rgb(240,181,13)" rx="2" ry="2" />
<text  x="679.66" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (2 samples, 0.03%)</title><rect x="161.8" y="1781" width="0.4" height="15.0" fill="rgb(252,187,23)" rx="2" ry="2" />
<text  x="164.76" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1164.5" y="661" width="0.6" height="15.0" fill="rgb(230,219,24)" rx="2" ry="2" />
<text  x="1167.48" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="213.2" y="869" width="0.2" height="15.0" fill="rgb(211,0,41)" rx="2" ry="2" />
<text  x="216.19" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.5" y="309" width="0.1" height="15.0" fill="rgb(221,30,44)" rx="2" ry="2" />
<text  x="1168.45" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.1" y="1589" width="0.2" height="15.0" fill="rgb(224,150,16)" rx="2" ry="2" />
<text  x="1167.09" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1164.5" y="1669" width="0.6" height="15.0" fill="rgb(226,28,49)" rx="2" ry="2" />
<text  x="1167.48" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1164.5" y="325" width="0.6" height="15.0" fill="rgb(238,160,11)" rx="2" ry="2" />
<text  x="1167.48" y="335.5" ></text>
</g>
<g >
<title>__dynamic_cast@plt (1 samples, 0.02%)</title><rect x="120.3" y="1637" width="0.2" height="15.0" fill="rgb(253,194,46)" rx="2" ry="2" />
<text  x="123.27" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.3" y="165" width="0.2" height="15.0" fill="rgb(230,202,24)" rx="2" ry="2" />
<text  x="1167.28" y="175.5" ></text>
</g>
<g >
<title>onmt::CaseModifier::extract_case_type (138 samples, 2.28%)</title><rect x="615.1" y="1893" width="26.9" height="15.0" fill="rgb(244,13,11)" rx="2" ry="2" />
<text  x="618.10" y="1903.5" >o..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.2" y="773" width="0.2" height="15.0" fill="rgb(222,75,33)" rx="2" ry="2" />
<text  x="13.19" y="783.5" ></text>
</g>
<g >
<title>[unknown] (12 samples, 0.20%)</title><rect x="84.0" y="2021" width="2.4" height="15.0" fill="rgb(218,29,6)" rx="2" ry="2" />
<text  x="87.03" y="2031.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (2 samples, 0.03%)</title><rect x="176.8" y="1573" width="0.4" height="15.0" fill="rgb(238,133,35)" rx="2" ry="2" />
<text  x="179.76" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.5" y="325" width="0.1" height="15.0" fill="rgb(246,42,40)" rx="2" ry="2" />
<text  x="1168.45" y="335.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::at (2 samples, 0.03%)</title><rect x="89.5" y="1941" width="0.4" height="15.0" fill="rgb(227,51,43)" rx="2" ry="2" />
<text  x="92.48" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.1" y="1221" width="0.2" height="15.0" fill="rgb(230,171,39)" rx="2" ry="2" />
<text  x="1167.09" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="213.4" y="1317" width="0.2" height="15.0" fill="rgb(240,74,49)" rx="2" ry="2" />
<text  x="216.39" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="169.0" y="1285" width="0.2" height="15.0" fill="rgb(240,105,3)" rx="2" ry="2" />
<text  x="171.97" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.6" y="1125" width="0.2" height="15.0" fill="rgb(251,123,22)" rx="2" ry="2" />
<text  x="141.58" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.1" y="85" width="0.2" height="15.0" fill="rgb(211,152,27)" rx="2" ry="2" />
<text  x="1168.06" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.1" y="1157" width="0.2" height="15.0" fill="rgb(231,23,1)" rx="2" ry="2" />
<text  x="1168.06" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.2" y="181" width="0.2" height="15.0" fill="rgb(226,28,44)" rx="2" ry="2" />
<text  x="13.19" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (33 samples, 0.54%)</title><rect x="119.3" y="1669" width="6.4" height="15.0" fill="rgb(206,35,33)" rx="2" ry="2" />
<text  x="122.29" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="85" width="0.4" height="15.0" fill="rgb(209,228,46)" rx="2" ry="2" />
<text  x="87.22" y="95.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::basic_json (2 samples, 0.03%)</title><rect x="585.1" y="1925" width="0.4" height="15.0" fill="rgb(222,125,7)" rx="2" ry="2" />
<text  x="588.10" y="1935.5" ></text>
</g>
<g >
<title>clear_page_erms (7 samples, 0.12%)</title><rect x="709.8" y="1749" width="1.3" height="15.0" fill="rgb(251,223,52)" rx="2" ry="2" />
<text  x="712.78" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (36 samples, 0.59%)</title><rect x="111.9" y="1685" width="7.0" height="15.0" fill="rgb(213,34,21)" rx="2" ry="2" />
<text  x="114.89" y="1695.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;, std::allocator&lt;std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt; &gt;,  (1 samples, 0.02%)</title><rect x="103.9" y="1957" width="0.2" height="15.0" fill="rgb(236,157,4)" rx="2" ry="2" />
<text  x="106.90" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.5" y="1013" width="0.1" height="15.0" fill="rgb(216,8,6)" rx="2" ry="2" />
<text  x="1168.45" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.2" y="885" width="0.2" height="15.0" fill="rgb(210,101,51)" rx="2" ry="2" />
<text  x="13.19" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="168.4" y="1573" width="0.4" height="15.0" fill="rgb(232,113,37)" rx="2" ry="2" />
<text  x="171.39" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.5" y="1893" width="0.1" height="15.0" fill="rgb(213,66,54)" rx="2" ry="2" />
<text  x="1168.45" y="1903.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="677.0" y="1829" width="0.2" height="15.0" fill="rgb(232,151,1)" rx="2" ry="2" />
<text  x="680.05" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.5" y="293" width="0.1" height="15.0" fill="rgb(248,174,25)" rx="2" ry="2" />
<text  x="1168.45" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.3" y="613" width="0.2" height="15.0" fill="rgb(254,4,19)" rx="2" ry="2" />
<text  x="1167.28" y="623.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; &gt; &gt;::_Alloc_node&gt; (2 samples, 0.03%)</title><rect x="585.1" y="1973" width="0.4" height="15.0" fill="rgb(222,49,28)" rx="2" ry="2" />
<text  x="588.10" y="1983.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale@plt (1 samples, 0.02%)</title><rect x="1188.6" y="2053" width="0.2" height="15.0" fill="rgb(245,180,51)" rx="2" ry="2" />
<text  x="1191.64" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.5" y="1541" width="0.1" height="15.0" fill="rgb(218,101,11)" rx="2" ry="2" />
<text  x="1168.45" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.2" y="1333" width="0.2" height="15.0" fill="rgb(231,222,2)" rx="2" ry="2" />
<text  x="13.19" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="213.4" y="1077" width="0.2" height="15.0" fill="rgb(215,64,36)" rx="2" ry="2" />
<text  x="216.39" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.3" y="837" width="0.2" height="15.0" fill="rgb(227,134,2)" rx="2" ry="2" />
<text  x="1168.26" y="847.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (2 samples, 0.03%)</title><rect x="184.7" y="1605" width="0.4" height="15.0" fill="rgb(232,126,24)" rx="2" ry="2" />
<text  x="187.75" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.6" y="1237" width="0.2" height="15.0" fill="rgb(236,180,13)" rx="2" ry="2" />
<text  x="141.58" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.07%)</title><rect x="1164.3" y="1829" width="0.8" height="15.0" fill="rgb(249,94,41)" rx="2" ry="2" />
<text  x="1167.28" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.1" y="373" width="0.2" height="15.0" fill="rgb(207,33,2)" rx="2" ry="2" />
<text  x="1168.06" y="383.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::getId (1 samples, 0.02%)</title><rect x="323.5" y="1989" width="0.2" height="15.0" fill="rgb(210,157,51)" rx="2" ry="2" />
<text  x="326.46" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="213.4" y="1557" width="0.2" height="15.0" fill="rgb(207,60,27)" rx="2" ry="2" />
<text  x="216.39" y="1567.5" ></text>
</g>
<g >
<title>__do_page_fault (45 samples, 0.74%)</title><rect x="433.5" y="1925" width="8.8" height="15.0" fill="rgb(205,156,43)" rx="2" ry="2" />
<text  x="436.53" y="1935.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="742.1" y="1813" width="0.2" height="15.0" fill="rgb(227,85,51)" rx="2" ry="2" />
<text  x="745.12" y="1823.5" ></text>
</g>
<g >
<title>operator delete (6 samples, 0.10%)</title><rect x="1113.0" y="2053" width="1.2" height="15.0" fill="rgb(240,105,24)" rx="2" ry="2" />
<text  x="1116.05" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="917" width="0.4" height="15.0" fill="rgb(231,141,11)" rx="2" ry="2" />
<text  x="87.22" y="927.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.02%)</title><rect x="89.9" y="1957" width="0.2" height="15.0" fill="rgb(245,227,14)" rx="2" ry="2" />
<text  x="92.87" y="1967.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (5 samples, 0.08%)</title><rect x="154.6" y="1621" width="0.9" height="15.0" fill="rgb(229,163,12)" rx="2" ry="2" />
<text  x="157.55" y="1631.5" ></text>
</g>
<g >
<title>operator delete@plt (1 samples, 0.02%)</title><rect x="198.6" y="1669" width="0.2" height="15.0" fill="rgb(222,162,15)" rx="2" ry="2" />
<text  x="201.58" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.3" y="85" width="0.2" height="15.0" fill="rgb(226,76,9)" rx="2" ry="2" />
<text  x="1167.28" y="95.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (1 samples, 0.02%)</title><rect x="202.3" y="1669" width="0.2" height="15.0" fill="rgb(238,165,38)" rx="2" ry="2" />
<text  x="205.28" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1164.5" y="1141" width="0.6" height="15.0" fill="rgb(227,183,53)" rx="2" ry="2" />
<text  x="1167.48" y="1151.5" ></text>
</g>
<g >
<title>onmt::unicode::get_lower (11 samples, 0.18%)</title><rect x="755.6" y="1893" width="2.1" height="15.0" fill="rgb(252,211,46)" rx="2" ry="2" />
<text  x="758.56" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="69" width="0.4" height="15.0" fill="rgb(212,62,2)" rx="2" ry="2" />
<text  x="87.22" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1164.5" y="1381" width="0.6" height="15.0" fill="rgb(254,42,44)" rx="2" ry="2" />
<text  x="1167.48" y="1391.5" ></text>
</g>
<g >
<title>do_group_exit (1 samples, 0.02%)</title><rect x="933.4" y="2005" width="0.2" height="15.0" fill="rgb(235,20,1)" rx="2" ry="2" />
<text  x="936.43" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.3" y="837" width="0.2" height="15.0" fill="rgb(251,161,46)" rx="2" ry="2" />
<text  x="1167.28" y="847.5" ></text>
</g>
<g >
<title>Eigen::internal::gebp_kernel&lt;float, float, long, Eigen::internal::blas_data_mapper&lt;float, long, 0, 0, 1&gt;, 48, 4, false, false&gt;::operator (27 samples, 0.45%)</title><rect x="420.3" y="1909" width="5.2" height="15.0" fill="rgb(251,2,14)" rx="2" ry="2" />
<text  x="423.28" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.1" y="1189" width="0.2" height="15.0" fill="rgb(233,191,7)" rx="2" ry="2" />
<text  x="1167.09" y="1199.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.1" y="773" width="0.2" height="15.0" fill="rgb(251,206,23)" rx="2" ry="2" />
<text  x="1168.06" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.5" y="1237" width="0.1" height="15.0" fill="rgb(218,200,46)" rx="2" ry="2" />
<text  x="1168.45" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (38 samples, 0.63%)</title><rect x="179.3" y="1717" width="7.4" height="15.0" fill="rgb(243,47,26)" rx="2" ry="2" />
<text  x="182.30" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1164.5" y="357" width="0.6" height="15.0" fill="rgb(230,92,1)" rx="2" ry="2" />
<text  x="1167.48" y="367.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="748.4" y="1861" width="0.1" height="15.0" fill="rgb(208,159,54)" rx="2" ry="2" />
<text  x="751.35" y="1871.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt; &gt;::_M_manager (1 samples, 0.02%)</title><rect x="139.0" y="1621" width="0.2" height="15.0" fill="rgb(229,23,39)" rx="2" ry="2" />
<text  x="141.97" y="1631.5" ></text>
</g>
<g >
<title>write (1 samples, 0.02%)</title><rect x="883.4" y="2037" width="0.2" height="15.0" fill="rgb(221,203,40)" rx="2" ry="2" />
<text  x="886.36" y="2047.5" ></text>
</g>
<g >
<title>GetHost (179 samples, 2.96%)</title><rect x="103.9" y="1973" width="34.9" height="15.0" fill="rgb(251,120,6)" rx="2" ry="2" />
<text  x="106.90" y="1983.5" >Ge..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.3" y="1669" width="0.2" height="15.0" fill="rgb(240,148,52)" rx="2" ry="2" />
<text  x="1167.28" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.1" y="53" width="0.2" height="15.0" fill="rgb(244,56,15)" rx="2" ry="2" />
<text  x="1168.06" y="63.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (1 samples, 0.02%)</title><rect x="167.4" y="1685" width="0.2" height="15.0" fill="rgb(232,62,30)" rx="2" ry="2" />
<text  x="170.41" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.1" y="581" width="0.2" height="15.0" fill="rgb(246,225,28)" rx="2" ry="2" />
<text  x="1167.09" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.5" y="53" width="0.1" height="15.0" fill="rgb(240,189,54)" rx="2" ry="2" />
<text  x="1168.45" y="63.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="677.0" y="1813" width="0.2" height="15.0" fill="rgb(227,185,41)" rx="2" ry="2" />
<text  x="680.05" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.6" y="1285" width="0.2" height="15.0" fill="rgb(231,161,30)" rx="2" ry="2" />
<text  x="141.58" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.1" y="1509" width="0.2" height="15.0" fill="rgb(228,88,37)" rx="2" ry="2" />
<text  x="1167.09" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="213.2" y="1589" width="0.2" height="15.0" fill="rgb(249,125,43)" rx="2" ry="2" />
<text  x="216.19" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (25 samples, 0.41%)</title><rect x="150.7" y="1669" width="4.8" height="15.0" fill="rgb(221,25,40)" rx="2" ry="2" />
<text  x="153.66" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="213.2" y="1621" width="0.2" height="15.0" fill="rgb(254,152,51)" rx="2" ry="2" />
<text  x="216.19" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.2" y="1125" width="0.2" height="15.0" fill="rgb(242,168,28)" rx="2" ry="2" />
<text  x="13.19" y="1135.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::basic_regex&lt;char const*&gt; (219 samples, 3.62%)</title><rect x="169.9" y="1957" width="42.7" height="15.0" fill="rgb(228,30,29)" rx="2" ry="2" />
<text  x="172.94" y="1967.5" >std:..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1164.5" y="485" width="0.6" height="15.0" fill="rgb(222,180,39)" rx="2" ry="2" />
<text  x="1167.48" y="495.5" ></text>
</g>
<g >
<title>generic_perform_write (1 samples, 0.02%)</title><rect x="883.4" y="1877" width="0.2" height="15.0" fill="rgb(207,138,28)" rx="2" ry="2" />
<text  x="886.36" y="1887.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="208.3" y="1621" width="0.2" height="15.0" fill="rgb(239,112,33)" rx="2" ry="2" />
<text  x="211.32" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.1" y="773" width="0.2" height="15.0" fill="rgb(254,121,43)" rx="2" ry="2" />
<text  x="1167.09" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (44 samples, 0.73%)</title><rect x="187.1" y="1653" width="8.6" height="15.0" fill="rgb(239,96,31)" rx="2" ry="2" />
<text  x="190.09" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.1" y="1365" width="0.2" height="15.0" fill="rgb(235,23,19)" rx="2" ry="2" />
<text  x="1167.09" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.1" y="517" width="0.2" height="15.0" fill="rgb(244,57,27)" rx="2" ry="2" />
<text  x="1168.06" y="527.5" ></text>
</g>
<g >
<title>tlb_flush_mmu_free (1 samples, 0.02%)</title><rect x="583.1" y="1829" width="0.2" height="15.0" fill="rgb(215,123,7)" rx="2" ry="2" />
<text  x="586.15" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="169.0" y="1077" width="0.2" height="15.0" fill="rgb(230,98,50)" rx="2" ry="2" />
<text  x="171.97" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (29 samples, 0.48%)</title><rect x="162.2" y="1781" width="5.6" height="15.0" fill="rgb(251,87,43)" rx="2" ry="2" />
<text  x="165.15" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.2" y="485" width="0.2" height="15.0" fill="rgb(225,151,51)" rx="2" ry="2" />
<text  x="13.19" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="213.2" y="1381" width="0.2" height="15.0" fill="rgb(238,199,17)" rx="2" ry="2" />
<text  x="216.19" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="169.0" y="1413" width="0.2" height="15.0" fill="rgb(211,76,22)" rx="2" ry="2" />
<text  x="171.97" y="1423.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="629" width="0.4" height="15.0" fill="rgb(229,156,27)" rx="2" ry="2" />
<text  x="87.22" y="639.5" ></text>
</g>
<g >
<title>new_sync_read (5 samples, 0.08%)</title><rect x="88.1" y="1925" width="1.0" height="15.0" fill="rgb(234,121,18)" rx="2" ry="2" />
<text  x="91.12" y="1935.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (5 samples, 0.08%)</title><rect x="88.1" y="1909" width="1.0" height="15.0" fill="rgb(239,197,11)" rx="2" ry="2" />
<text  x="91.12" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1164.5" y="949" width="0.6" height="15.0" fill="rgb(249,103,0)" rx="2" ry="2" />
<text  x="1167.48" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.6" y="1557" width="0.2" height="15.0" fill="rgb(224,74,23)" rx="2" ry="2" />
<text  x="141.58" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.2" y="101" width="0.2" height="15.0" fill="rgb(205,116,30)" rx="2" ry="2" />
<text  x="13.19" y="111.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (32 samples, 0.53%)</title><rect x="203.8" y="1733" width="6.3" height="15.0" fill="rgb(209,117,48)" rx="2" ry="2" />
<text  x="206.84" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.6" y="597" width="0.2" height="15.0" fill="rgb(233,76,43)" rx="2" ry="2" />
<text  x="141.58" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="213.4" y="981" width="0.2" height="15.0" fill="rgb(240,139,8)" rx="2" ry="2" />
<text  x="216.39" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.5" y="629" width="0.1" height="15.0" fill="rgb(233,215,25)" rx="2" ry="2" />
<text  x="1168.45" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (34 samples, 0.56%)</title><rect x="203.5" y="1813" width="6.6" height="15.0" fill="rgb(220,109,6)" rx="2" ry="2" />
<text  x="206.45" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (76 samples, 1.25%)</title><rect x="104.5" y="1765" width="14.8" height="15.0" fill="rgb(217,140,34)" rx="2" ry="2" />
<text  x="107.49" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="213.0" y="1765" width="0.4" height="15.0" fill="rgb(233,128,28)" rx="2" ry="2" />
<text  x="216.00" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.6" y="1189" width="0.2" height="15.0" fill="rgb(217,136,6)" rx="2" ry="2" />
<text  x="141.58" y="1199.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (3 samples, 0.05%)</title><rect x="149.7" y="1605" width="0.6" height="15.0" fill="rgb(238,99,20)" rx="2" ry="2" />
<text  x="152.68" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="168.8" y="1733" width="0.4" height="15.0" fill="rgb(245,12,3)" rx="2" ry="2" />
<text  x="171.77" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (22 samples, 0.36%)</title><rect x="83.6" y="2037" width="4.3" height="15.0" fill="rgb(226,7,32)" rx="2" ry="2" />
<text  x="86.64" y="2047.5" ></text>
</g>
<g >
<title>alloc_pages_vma (3 samples, 0.05%)</title><rect x="40.6" y="1957" width="0.6" height="15.0" fill="rgb(213,35,53)" rx="2" ry="2" />
<text  x="43.59" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (28 samples, 0.46%)</title><rect x="132.1" y="1797" width="5.5" height="15.0" fill="rgb(217,92,3)" rx="2" ry="2" />
<text  x="135.15" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.5" y="1157" width="0.1" height="15.0" fill="rgb(232,155,20)" rx="2" ry="2" />
<text  x="1168.45" y="1167.5" ></text>
</g>
<g >
<title>mem_cgroup_throttle_swaprate (3 samples, 0.05%)</title><rect x="41.6" y="1941" width="0.5" height="15.0" fill="rgb(247,139,33)" rx="2" ry="2" />
<text  x="44.56" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.2" y="1317" width="0.2" height="15.0" fill="rgb(231,147,19)" rx="2" ry="2" />
<text  x="13.19" y="1327.5" ></text>
</g>
<g >
<title>fasttext::Vector::addRow (7 samples, 0.12%)</title><rect x="565.6" y="1973" width="1.4" height="15.0" fill="rgb(227,47,31)" rx="2" ry="2" />
<text  x="568.61" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (1 samples, 0.02%)</title><rect x="211.6" y="1797" width="0.2" height="15.0" fill="rgb(231,177,51)" rx="2" ry="2" />
<text  x="214.63" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.3" y="341" width="0.2" height="15.0" fill="rgb(243,64,49)" rx="2" ry="2" />
<text  x="1167.28" y="351.5" ></text>
</g>
<g >
<title>free@plt (1 samples, 0.02%)</title><rect x="180.9" y="1621" width="0.1" height="15.0" fill="rgb(211,157,37)" rx="2" ry="2" />
<text  x="183.85" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="213.2" y="1093" width="0.2" height="15.0" fill="rgb(215,11,40)" rx="2" ry="2" />
<text  x="216.19" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.5" y="1141" width="0.1" height="15.0" fill="rgb(224,22,17)" rx="2" ry="2" />
<text  x="1168.45" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.5" y="357" width="0.1" height="15.0" fill="rgb(232,163,24)" rx="2" ry="2" />
<text  x="1168.45" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.2" y="1749" width="0.2" height="15.0" fill="rgb(248,89,2)" rx="2" ry="2" />
<text  x="13.19" y="1759.5" ></text>
</g>
<g >
<title>fasttext::NegativeSamplingLoss::NegativeSamplingLoss (6 samples, 0.10%)</title><rect x="859.6" y="2037" width="1.2" height="15.0" fill="rgb(211,59,5)" rx="2" ry="2" />
<text  x="862.59" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="138.4" y="1813" width="0.4" height="15.0" fill="rgb(237,165,38)" rx="2" ry="2" />
<text  x="141.38" y="1823.5" ></text>
</g>
<g >
<title>fasttext::Dictionary::getLine (1 samples, 0.02%)</title><rect x="858.0" y="2037" width="0.2" height="15.0" fill="rgb(232,56,30)" rx="2" ry="2" />
<text  x="861.03" y="2047.5" ></text>
</g>
<g >
<title>__x64_sys_write (1 samples, 0.02%)</title><rect x="883.4" y="1989" width="0.2" height="15.0" fill="rgb(207,8,31)" rx="2" ry="2" />
<text  x="886.36" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="138.2" y="1893" width="0.6" height="15.0" fill="rgb(216,52,17)" rx="2" ry="2" />
<text  x="141.19" y="1903.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (102 samples, 1.68%)</title><rect x="1144.2" y="2053" width="19.9" height="15.0" fill="rgb(208,171,38)" rx="2" ry="2" />
<text  x="1147.22" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.1" y="661" width="0.2" height="15.0" fill="rgb(248,160,19)" rx="2" ry="2" />
<text  x="1168.06" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.5" y="1925" width="0.1" height="15.0" fill="rgb(224,107,49)" rx="2" ry="2" />
<text  x="1168.45" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.3" y="581" width="0.2" height="15.0" fill="rgb(208,145,4)" rx="2" ry="2" />
<text  x="1167.28" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.3" y="1061" width="0.2" height="15.0" fill="rgb(218,68,51)" rx="2" ry="2" />
<text  x="1168.26" y="1071.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt;@plt (1 samples, 0.02%)</title><rect x="202.9" y="1669" width="0.2" height="15.0" fill="rgb(246,74,3)" rx="2" ry="2" />
<text  x="205.87" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.3" y="1541" width="0.2" height="15.0" fill="rgb(213,209,12)" rx="2" ry="2" />
<text  x="1167.28" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.3" y="821" width="0.2" height="15.0" fill="rgb(231,96,40)" rx="2" ry="2" />
<text  x="1167.28" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="213.4" y="1461" width="0.2" height="15.0" fill="rgb(232,200,29)" rx="2" ry="2" />
<text  x="216.39" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.5" y="949" width="0.1" height="15.0" fill="rgb(254,70,25)" rx="2" ry="2" />
<text  x="1168.45" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1164.5" y="1093" width="0.6" height="15.0" fill="rgb(228,113,12)" rx="2" ry="2" />
<text  x="1167.48" y="1103.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::do_tolower (2 samples, 0.03%)</title><rect x="167.0" y="1685" width="0.4" height="15.0" fill="rgb(212,97,38)" rx="2" ry="2" />
<text  x="170.02" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (1 samples, 0.02%)</title><rect x="168.0" y="1717" width="0.2" height="15.0" fill="rgb(220,3,24)" rx="2" ry="2" />
<text  x="171.00" y="1727.5" ></text>
</g>
<g >
<title>__dynamic_cast (5 samples, 0.08%)</title><rect x="170.7" y="1589" width="1.0" height="15.0" fill="rgb(226,8,31)" rx="2" ry="2" />
<text  x="173.72" y="1599.5" ></text>
</g>
<g >
<title>from_json&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; (1 samples, 0.02%)</title><rect x="89.3" y="1957" width="0.2" height="15.0" fill="rgb(250,128,31)" rx="2" ry="2" />
<text  x="92.29" y="1967.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (3 samples, 0.05%)</title><rect x="161.0" y="1653" width="0.6" height="15.0" fill="rgb(237,191,23)" rx="2" ry="2" />
<text  x="163.98" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1164.5" y="85" width="0.6" height="15.0" fill="rgb(225,209,0)" rx="2" ry="2" />
<text  x="1167.48" y="95.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (5 samples, 0.08%)</title><rect x="117.9" y="1621" width="1.0" height="15.0" fill="rgb(226,187,49)" rx="2" ry="2" />
<text  x="120.93" y="1631.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct (1 samples, 0.02%)</title><rect x="596.4" y="1893" width="0.2" height="15.0" fill="rgb(216,121,43)" rx="2" ry="2" />
<text  x="599.40" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1164.5" y="1221" width="0.6" height="15.0" fill="rgb(207,67,1)" rx="2" ry="2" />
<text  x="1167.48" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.3" y="293" width="0.2" height="15.0" fill="rgb(222,148,29)" rx="2" ry="2" />
<text  x="1167.28" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.1" y="2021" width="0.2" height="15.0" fill="rgb(220,141,51)" rx="2" ry="2" />
<text  x="1167.09" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1164.5" y="533" width="0.6" height="15.0" fill="rgb(220,164,31)" rx="2" ry="2" />
<text  x="1167.48" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="138.2" y="1941" width="0.6" height="15.0" fill="rgb(209,20,7)" rx="2" ry="2" />
<text  x="141.19" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.1" y="1797" width="0.2" height="15.0" fill="rgb(253,64,31)" rx="2" ry="2" />
<text  x="1167.09" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.3" y="789" width="0.2" height="15.0" fill="rgb(242,33,42)" rx="2" ry="2" />
<text  x="1168.26" y="799.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="1109" width="0.4" height="15.0" fill="rgb(229,24,2)" rx="2" ry="2" />
<text  x="87.22" y="1119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.5" y="1861" width="0.1" height="15.0" fill="rgb(236,160,28)" rx="2" ry="2" />
<text  x="1168.45" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (36 samples, 0.59%)</title><rect x="111.9" y="1669" width="7.0" height="15.0" fill="rgb(219,129,53)" rx="2" ry="2" />
<text  x="114.89" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1165.1" y="2053" width="0.4" height="15.0" fill="rgb(230,16,3)" rx="2" ry="2" />
<text  x="1168.06" y="2063.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (7 samples, 0.12%)</title><rect x="46.6" y="1893" width="1.4" height="15.0" fill="rgb(216,137,34)" rx="2" ry="2" />
<text  x="49.63" y="1903.5" ></text>
</g>
<g >
<title>blk_done_softirq (1 samples, 0.02%)</title><rect x="323.3" y="1909" width="0.2" height="15.0" fill="rgb(251,170,28)" rx="2" ry="2" />
<text  x="326.26" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1164.5" y="965" width="0.6" height="15.0" fill="rgb(254,115,44)" rx="2" ry="2" />
<text  x="1167.48" y="975.5" ></text>
</g>
<g >
<title>alloc_pages_vma (12 samples, 0.20%)</title><rect x="429.4" y="1861" width="2.4" height="15.0" fill="rgb(239,15,53)" rx="2" ry="2" />
<text  x="432.44" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.1" y="277" width="0.2" height="15.0" fill="rgb(233,35,10)" rx="2" ry="2" />
<text  x="1168.06" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.1" y="421" width="0.2" height="15.0" fill="rgb(241,188,54)" rx="2" ry="2" />
<text  x="1167.09" y="431.5" ></text>
</g>
<g >
<title>fasttext::DenseMatrix::addRowToVector (483 samples, 7.97%)</title><rect x="229.4" y="1989" width="94.1" height="15.0" fill="rgb(252,110,3)" rx="2" ry="2" />
<text  x="232.36" y="1999.5" >fasttext::D..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.5" y="2037" width="0.1" height="15.0" fill="rgb(237,162,51)" rx="2" ry="2" />
<text  x="1168.45" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.1" y="1941" width="0.2" height="15.0" fill="rgb(206,213,51)" rx="2" ry="2" />
<text  x="1167.09" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1164.5" y="565" width="0.6" height="15.0" fill="rgb(226,44,4)" rx="2" ry="2" />
<text  x="1167.48" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (3 samples, 0.05%)</title><rect x="871.7" y="2005" width="0.6" height="15.0" fill="rgb(214,40,54)" rx="2" ry="2" />
<text  x="874.67" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.2" y="1397" width="0.2" height="15.0" fill="rgb(249,1,0)" rx="2" ry="2" />
<text  x="13.19" y="1407.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="139.7" y="1573" width="0.2" height="15.0" fill="rgb(215,88,46)" rx="2" ry="2" />
<text  x="142.75" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.6" y="1093" width="0.2" height="15.0" fill="rgb(208,26,11)" rx="2" ry="2" />
<text  x="141.58" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.1" y="405" width="0.2" height="15.0" fill="rgb(232,7,20)" rx="2" ry="2" />
<text  x="1168.06" y="415.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="754.4" y="1861" width="0.2" height="15.0" fill="rgb(224,192,39)" rx="2" ry="2" />
<text  x="757.39" y="1871.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="167.6" y="1685" width="0.2" height="15.0" fill="rgb(232,32,41)" rx="2" ry="2" />
<text  x="170.61" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.3" y="1445" width="0.2" height="15.0" fill="rgb(241,185,53)" rx="2" ry="2" />
<text  x="1168.26" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (28 samples, 0.46%)</title><rect x="132.1" y="1765" width="5.5" height="15.0" fill="rgb(210,51,33)" rx="2" ry="2" />
<text  x="135.15" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.2" y="1941" width="0.2" height="15.0" fill="rgb(211,144,13)" rx="2" ry="2" />
<text  x="13.19" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.6" y="805" width="0.2" height="15.0" fill="rgb(247,228,15)" rx="2" ry="2" />
<text  x="141.58" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.3" y="1461" width="0.2" height="15.0" fill="rgb(208,194,31)" rx="2" ry="2" />
<text  x="1167.28" y="1471.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="202.1" y="1653" width="0.2" height="15.0" fill="rgb(240,141,1)" rx="2" ry="2" />
<text  x="205.09" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="213.2" y="1045" width="0.2" height="15.0" fill="rgb(216,74,14)" rx="2" ry="2" />
<text  x="216.19" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1164.5" y="341" width="0.6" height="15.0" fill="rgb(246,157,26)" rx="2" ry="2" />
<text  x="1167.48" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.6" y="1397" width="0.2" height="15.0" fill="rgb(221,91,27)" rx="2" ry="2" />
<text  x="141.58" y="1407.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="933.2" y="2021" width="0.2" height="15.0" fill="rgb(247,143,25)" rx="2" ry="2" />
<text  x="936.23" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="169.0" y="1029" width="0.2" height="15.0" fill="rgb(209,196,45)" rx="2" ry="2" />
<text  x="171.97" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="213.2" y="1573" width="0.2" height="15.0" fill="rgb(235,228,16)" rx="2" ry="2" />
<text  x="216.19" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (45 samples, 0.74%)</title><rect x="170.3" y="1637" width="8.8" height="15.0" fill="rgb(216,197,9)" rx="2" ry="2" />
<text  x="173.33" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.3" y="805" width="0.2" height="15.0" fill="rgb(253,176,3)" rx="2" ry="2" />
<text  x="1167.28" y="815.5" ></text>
</g>
<g >
<title>onmt::unicode::is_separator@plt (1 samples, 0.02%)</title><rect x="831.1" y="1893" width="0.2" height="15.0" fill="rgb(247,162,32)" rx="2" ry="2" />
<text  x="834.15" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.1" y="1749" width="0.2" height="15.0" fill="rgb(245,127,39)" rx="2" ry="2" />
<text  x="1167.09" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.3" y="1429" width="0.2" height="15.0" fill="rgb(232,69,51)" rx="2" ry="2" />
<text  x="1167.28" y="1439.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt;@plt (1 samples, 0.02%)</title><rect x="186.3" y="1621" width="0.2" height="15.0" fill="rgb(231,121,41)" rx="2" ry="2" />
<text  x="189.31" y="1631.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (56 samples, 0.92%)</title><rect x="1165.6" y="2037" width="11.0" height="15.0" fill="rgb(233,16,6)" rx="2" ry="2" />
<text  x="1168.65" y="2047.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (5 samples, 0.08%)</title><rect x="856.7" y="1973" width="0.9" height="15.0" fill="rgb(208,223,38)" rx="2" ry="2" />
<text  x="859.67" y="1983.5" ></text>
</g>
<g >
<title>clear_page_erms (2 samples, 0.03%)</title><rect x="40.6" y="1925" width="0.4" height="15.0" fill="rgb(208,7,53)" rx="2" ry="2" />
<text  x="43.59" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1164.5" y="837" width="0.6" height="15.0" fill="rgb(251,222,52)" rx="2" ry="2" />
<text  x="1167.48" y="847.5" ></text>
</g>
<g >
<title>__dynamic_cast (4 samples, 0.07%)</title><rect x="123.2" y="1621" width="0.8" height="15.0" fill="rgb(249,18,9)" rx="2" ry="2" />
<text  x="126.19" y="1631.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.02%)</title><rect x="742.1" y="1877" width="0.2" height="15.0" fill="rgb(227,77,10)" rx="2" ry="2" />
<text  x="745.12" y="1887.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="1188.4" y="2037" width="0.2" height="15.0" fill="rgb(231,163,42)" rx="2" ry="2" />
<text  x="1191.44" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.3" y="1381" width="0.2" height="15.0" fill="rgb(207,33,29)" rx="2" ry="2" />
<text  x="1168.26" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (1 samples, 0.02%)</title><rect x="212.2" y="1861" width="0.2" height="15.0" fill="rgb(240,17,12)" rx="2" ry="2" />
<text  x="215.22" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.3" y="1269" width="0.2" height="15.0" fill="rgb(219,156,9)" rx="2" ry="2" />
<text  x="1168.26" y="1279.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (31 samples, 0.51%)</title><rect x="204.0" y="1717" width="6.1" height="15.0" fill="rgb(217,220,33)" rx="2" ry="2" />
<text  x="207.04" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1164.5" y="981" width="0.6" height="15.0" fill="rgb(251,108,48)" rx="2" ry="2" />
<text  x="1167.48" y="991.5" ></text>
</g>
<g >
<title>std::__merge_adaptive&lt;__gnu_cxx::__normal_iterator&lt;TDocument*, std::vector&lt;TDocument, std::allocator&lt;TDocument&gt; &gt; &gt;, long, TDocument*, __gnu_cxx::__ops::_Iter_comp_iter&lt;main::$_0&gt; &gt; (1 samples, 0.02%)</title><rect x="584.7" y="1989" width="0.2" height="15.0" fill="rgb(242,110,36)" rx="2" ry="2" />
<text  x="587.71" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.3" y="373" width="0.2" height="15.0" fill="rgb(230,78,26)" rx="2" ry="2" />
<text  x="1168.26" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (2 samples, 0.03%)</title><rect x="136.0" y="1685" width="0.4" height="15.0" fill="rgb(247,181,38)" rx="2" ry="2" />
<text  x="139.05" y="1695.5" ></text>
</g>
<g >
<title>__dynamic_cast (4 samples, 0.07%)</title><rect x="151.4" y="1621" width="0.8" height="15.0" fill="rgb(228,5,33)" rx="2" ry="2" />
<text  x="154.44" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.6" y="1317" width="0.2" height="15.0" fill="rgb(245,224,43)" rx="2" ry="2" />
<text  x="141.58" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.3" y="485" width="0.2" height="15.0" fill="rgb(222,127,25)" rx="2" ry="2" />
<text  x="1167.28" y="495.5" ></text>
</g>
<g >
<title>try_to_wake_up (7 samples, 0.12%)</title><rect x="46.6" y="1909" width="1.4" height="15.0" fill="rgb(208,76,4)" rx="2" ry="2" />
<text  x="49.63" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.5" y="1221" width="0.1" height="15.0" fill="rgb(210,196,51)" rx="2" ry="2" />
<text  x="1168.45" y="1231.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (36 samples, 0.59%)</title><rect x="196.2" y="1765" width="7.1" height="15.0" fill="rgb(242,57,54)" rx="2" ry="2" />
<text  x="199.24" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.5" y="869" width="0.1" height="15.0" fill="rgb(243,147,8)" rx="2" ry="2" />
<text  x="1168.45" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (170 samples, 2.81%)</title><rect x="104.5" y="1829" width="33.1" height="15.0" fill="rgb(253,140,17)" rx="2" ry="2" />
<text  x="107.49" y="1839.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="168.6" y="1429" width="0.2" height="15.0" fill="rgb(229,146,10)" rx="2" ry="2" />
<text  x="171.58" y="1439.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (1 samples, 0.02%)</title><rect x="142.7" y="1573" width="0.2" height="15.0" fill="rgb(211,116,52)" rx="2" ry="2" />
<text  x="145.67" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (28 samples, 0.46%)</title><rect x="138.8" y="1701" width="5.4" height="15.0" fill="rgb(233,10,22)" rx="2" ry="2" />
<text  x="141.77" y="1711.5" ></text>
</g>
<g >
<title>std::istream::peek (1 samples, 0.02%)</title><rect x="587.2" y="1957" width="0.2" height="15.0" fill="rgb(230,125,4)" rx="2" ry="2" />
<text  x="590.24" y="1967.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_stringbuf (17 samples, 0.28%)</title><rect x="871.7" y="2037" width="3.3" height="15.0" fill="rgb(228,132,28)" rx="2" ry="2" />
<text  x="874.67" y="2047.5" ></text>
</g>
<g >
<title>std::__future_base::_Task_state&lt;std::_Bind&lt;Annotate (1 samples, 0.02%)</title><rect x="45.8" y="2021" width="0.2" height="15.0" fill="rgb(233,227,5)" rx="2" ry="2" />
<text  x="48.85" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="789" width="0.4" height="15.0" fill="rgb(251,129,50)" rx="2" ry="2" />
<text  x="87.22" y="799.5" ></text>
</g>
<g >
<title>do_syscall_64 (5 samples, 0.08%)</title><rect x="88.1" y="2005" width="1.0" height="15.0" fill="rgb(232,157,17)" rx="2" ry="2" />
<text  x="91.12" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.5" y="181" width="0.1" height="15.0" fill="rgb(220,39,44)" rx="2" ry="2" />
<text  x="1168.45" y="191.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="533" width="0.4" height="15.0" fill="rgb(240,31,3)" rx="2" ry="2" />
<text  x="87.22" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.1" y="37" width="0.2" height="15.0" fill="rgb(216,126,11)" rx="2" ry="2" />
<text  x="1167.09" y="47.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.1" y="853" width="0.2" height="15.0" fill="rgb(218,7,27)" rx="2" ry="2" />
<text  x="1167.09" y="863.5" ></text>
</g>
<g >
<title>__lru_cache_add (2 samples, 0.03%)</title><rect x="431.8" y="1845" width="0.4" height="15.0" fill="rgb(244,104,4)" rx="2" ry="2" />
<text  x="434.78" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.1" y="1541" width="0.2" height="15.0" fill="rgb(239,200,27)" rx="2" ry="2" />
<text  x="1167.09" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1164.5" y="1541" width="0.6" height="15.0" fill="rgb(209,98,28)" rx="2" ry="2" />
<text  x="1167.48" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.1" y="341" width="0.2" height="15.0" fill="rgb(219,49,48)" rx="2" ry="2" />
<text  x="1168.06" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (25 samples, 0.41%)</title><rect x="150.7" y="1685" width="4.8" height="15.0" fill="rgb(213,51,27)" rx="2" ry="2" />
<text  x="153.66" y="1695.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id@plt (1 samples, 0.02%)</title><rect x="124.9" y="1621" width="0.2" height="15.0" fill="rgb(247,61,27)" rx="2" ry="2" />
<text  x="127.94" y="1631.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find@plt (2 samples, 0.03%)</title><rect x="855.3" y="1909" width="0.4" height="15.0" fill="rgb(234,159,27)" rx="2" ry="2" />
<text  x="858.31" y="1919.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="1285" width="0.4" height="15.0" fill="rgb(225,167,27)" rx="2" ry="2" />
<text  x="87.22" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.3" y="1397" width="0.2" height="15.0" fill="rgb(233,71,35)" rx="2" ry="2" />
<text  x="1167.28" y="1407.5" ></text>
</g>
<g >
<title>__lru_cache_add (1 samples, 0.02%)</title><rect x="440.9" y="1861" width="0.2" height="15.0" fill="rgb(235,124,1)" rx="2" ry="2" />
<text  x="443.93" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.1" y="37" width="0.2" height="15.0" fill="rgb(231,43,46)" rx="2" ry="2" />
<text  x="1168.06" y="47.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.3" y="1413" width="0.2" height="15.0" fill="rgb(205,8,7)" rx="2" ry="2" />
<text  x="1168.26" y="1423.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (1 samples, 0.02%)</title><rect x="183.4" y="1605" width="0.2" height="15.0" fill="rgb(211,190,16)" rx="2" ry="2" />
<text  x="186.39" y="1615.5" ></text>
</g>
<g >
<title>std::locale::locale (5 samples, 0.08%)</title><rect x="343.1" y="1989" width="1.0" height="15.0" fill="rgb(215,9,33)" rx="2" ry="2" />
<text  x="346.14" y="1999.5" ></text>
</g>
<g >
<title>malloc@plt (1 samples, 0.02%)</title><rect x="627.8" y="1877" width="0.2" height="15.0" fill="rgb(230,177,47)" rx="2" ry="2" />
<text  x="630.76" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="213.4" y="1349" width="0.2" height="15.0" fill="rgb(254,6,52)" rx="2" ry="2" />
<text  x="216.39" y="1359.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="677.0" y="1861" width="0.2" height="15.0" fill="rgb(213,110,20)" rx="2" ry="2" />
<text  x="680.05" y="1871.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="933.4" y="2037" width="0.2" height="15.0" fill="rgb(214,133,20)" rx="2" ry="2" />
<text  x="936.43" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.07%)</title><rect x="1164.3" y="1877" width="0.8" height="15.0" fill="rgb(240,72,16)" rx="2" ry="2" />
<text  x="1167.28" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="213.4" y="869" width="0.2" height="15.0" fill="rgb(253,107,31)" rx="2" ry="2" />
<text  x="216.39" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.5" y="1573" width="0.1" height="15.0" fill="rgb(212,205,27)" rx="2" ry="2" />
<text  x="1168.45" y="1583.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (5 samples, 0.08%)</title><rect x="432.2" y="1861" width="0.9" height="15.0" fill="rgb(209,140,23)" rx="2" ry="2" />
<text  x="435.17" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.1" y="901" width="0.2" height="15.0" fill="rgb(233,81,5)" rx="2" ry="2" />
<text  x="1168.06" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.5" y="613" width="0.1" height="15.0" fill="rgb(205,82,42)" rx="2" ry="2" />
<text  x="1168.45" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.3" y="1125" width="0.2" height="15.0" fill="rgb(235,136,36)" rx="2" ry="2" />
<text  x="1168.26" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1164.5" y="693" width="0.6" height="15.0" fill="rgb(241,68,28)" rx="2" ry="2" />
<text  x="1167.48" y="703.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="133.5" y="1701" width="0.2" height="15.0" fill="rgb(222,10,41)" rx="2" ry="2" />
<text  x="136.51" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (31 samples, 0.51%)</title><rect x="155.7" y="1733" width="6.1" height="15.0" fill="rgb(218,214,30)" rx="2" ry="2" />
<text  x="158.72" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1165.1" y="1909" width="0.4" height="15.0" fill="rgb(229,75,7)" rx="2" ry="2" />
<text  x="1168.06" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.3" y="1093" width="0.2" height="15.0" fill="rgb(227,113,45)" rx="2" ry="2" />
<text  x="1167.28" y="1103.5" ></text>
</g>
<g >
<title>lru_cache_add_active_or_unevictable (1 samples, 0.02%)</title><rect x="440.9" y="1877" width="0.2" height="15.0" fill="rgb(242,70,50)" rx="2" ry="2" />
<text  x="443.93" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="213.2" y="1541" width="0.2" height="15.0" fill="rgb(222,103,15)" rx="2" ry="2" />
<text  x="216.19" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (1 samples, 0.02%)</title><rect x="118.9" y="1749" width="0.2" height="15.0" fill="rgb(233,105,44)" rx="2" ry="2" />
<text  x="121.90" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.3" y="181" width="0.2" height="15.0" fill="rgb(254,194,34)" rx="2" ry="2" />
<text  x="1167.28" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (29 samples, 0.48%)</title><rect x="162.2" y="1749" width="5.6" height="15.0" fill="rgb(251,28,49)" rx="2" ry="2" />
<text  x="165.15" y="1759.5" ></text>
</g>
<g >
<title>std::operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (2 samples, 0.03%)</title><rect x="1189.6" y="2053" width="0.4" height="15.0" fill="rgb(237,130,21)" rx="2" ry="2" />
<text  x="1192.61" y="2063.5" ></text>
</g>
<g >
<title>nlohmann::detail::input_stream_adapter::get_character (1 samples, 0.02%)</title><rect x="103.3" y="1893" width="0.2" height="15.0" fill="rgb(209,133,17)" rx="2" ry="2" />
<text  x="106.32" y="1903.5" ></text>
</g>
<g >
<title>TFastTextEmbedder::GetSentenceEmbedding (55 samples, 0.91%)</title><rect x="214.0" y="1989" width="10.7" height="15.0" fill="rgb(216,70,14)" rx="2" ry="2" />
<text  x="216.97" y="1999.5" ></text>
</g>
<g >
<title>__dynamic_cast (2 samples, 0.03%)</title><rect x="183.0" y="1605" width="0.4" height="15.0" fill="rgb(228,180,26)" rx="2" ry="2" />
<text  x="186.00" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.6" y="629" width="0.2" height="15.0" fill="rgb(254,45,27)" rx="2" ry="2" />
<text  x="141.58" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.3" y="245" width="0.2" height="15.0" fill="rgb(251,57,43)" rx="2" ry="2" />
<text  x="1167.28" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::underflow@plt (1 samples, 0.02%)</title><rect x="882.2" y="2005" width="0.2" height="15.0" fill="rgb(218,199,1)" rx="2" ry="2" />
<text  x="885.19" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1164.5" y="1301" width="0.6" height="15.0" fill="rgb(253,43,29)" rx="2" ry="2" />
<text  x="1167.48" y="1311.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::construct&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; const&amp;&gt; (2 samples, 0.03%)</title><rect x="585.1" y="1989" width="0.4" height="15.0" fill="rgb(242,122,46)" rx="2" ry="2" />
<text  x="588.10" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.3" y="1509" width="0.2" height="15.0" fill="rgb(221,42,26)" rx="2" ry="2" />
<text  x="1168.26" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="213.4" y="1413" width="0.2" height="15.0" fill="rgb(251,103,5)" rx="2" ry="2" />
<text  x="216.39" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1164.5" y="1397" width="0.6" height="15.0" fill="rgb(241,69,54)" rx="2" ry="2" />
<text  x="1167.48" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.5" y="1621" width="0.1" height="15.0" fill="rgb(222,137,39)" rx="2" ry="2" />
<text  x="1168.45" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.2" y="1077" width="0.2" height="15.0" fill="rgb(211,16,10)" rx="2" ry="2" />
<text  x="13.19" y="1087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.2" y="1685" width="0.2" height="15.0" fill="rgb(249,127,28)" rx="2" ry="2" />
<text  x="13.19" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.3" y="533" width="0.2" height="15.0" fill="rgb(212,223,54)" rx="2" ry="2" />
<text  x="1168.26" y="543.5" ></text>
</g>
<g >
<title>do_futex (10 samples, 0.17%)</title><rect x="46.0" y="1957" width="2.0" height="15.0" fill="rgb(227,13,32)" rx="2" ry="2" />
<text  x="49.04" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt;,  (1 samples, 0.02%)</title><rect x="10.2" y="2021" width="0.2" height="15.0" fill="rgb(254,5,6)" rx="2" ry="2" />
<text  x="13.19" y="2031.5" ></text>
</g>
<g >
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="323.3" y="1973" width="0.2" height="15.0" fill="rgb(212,72,18)" rx="2" ry="2" />
<text  x="326.26" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="138.4" y="1845" width="0.4" height="15.0" fill="rgb(221,101,30)" rx="2" ry="2" />
<text  x="141.38" y="1855.5" ></text>
</g>
<g >
<title>fasttext::FastText::getWordVector (14 samples, 0.23%)</title><rect x="325.8" y="1989" width="2.7" height="15.0" fill="rgb(231,70,37)" rx="2" ry="2" />
<text  x="328.80" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.3" y="1029" width="0.2" height="15.0" fill="rgb(226,66,52)" rx="2" ry="2" />
<text  x="1168.26" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_subexpr_begin (1 samples, 0.02%)</title><rect x="167.8" y="1781" width="0.2" height="15.0" fill="rgb(242,154,36)" rx="2" ry="2" />
<text  x="170.80" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.1" y="117" width="0.2" height="15.0" fill="rgb(223,192,18)" rx="2" ry="2" />
<text  x="1168.06" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (1 samples, 0.02%)</title><rect x="131.6" y="1781" width="0.2" height="15.0" fill="rgb(241,157,24)" rx="2" ry="2" />
<text  x="134.57" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.6" y="757" width="0.2" height="15.0" fill="rgb(249,146,8)" rx="2" ry="2" />
<text  x="141.58" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1164.5" y="645" width="0.6" height="15.0" fill="rgb(235,114,17)" rx="2" ry="2" />
<text  x="1167.48" y="655.5" ></text>
</g>
<g >
<title>onmt::get_alphabet_id (1 samples, 0.02%)</title><rect x="748.5" y="1893" width="0.2" height="15.0" fill="rgb(242,87,23)" rx="2" ry="2" />
<text  x="751.55" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.2" y="1365" width="0.2" height="15.0" fill="rgb(243,169,3)" rx="2" ry="2" />
<text  x="13.19" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.1" y="1877" width="0.2" height="15.0" fill="rgb(223,117,21)" rx="2" ry="2" />
<text  x="1167.09" y="1887.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::~collate (22 samples, 0.36%)</title><rect x="877.9" y="2037" width="4.3" height="15.0" fill="rgb(241,31,12)" rx="2" ry="2" />
<text  x="880.90" y="2047.5" ></text>
</g>
<g >
<title>release_pages (1 samples, 0.02%)</title><rect x="583.1" y="1797" width="0.2" height="15.0" fill="rgb(224,81,52)" rx="2" ry="2" />
<text  x="586.15" y="1807.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1164.5" y="405" width="0.6" height="15.0" fill="rgb(232,85,4)" rx="2" ry="2" />
<text  x="1167.48" y="415.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (2 samples, 0.03%)</title><rect x="342.7" y="1989" width="0.4" height="15.0" fill="rgb(252,143,5)" rx="2" ry="2" />
<text  x="345.75" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (61 samples, 1.01%)</title><rect x="138.8" y="1749" width="11.9" height="15.0" fill="rgb(216,163,38)" rx="2" ry="2" />
<text  x="141.77" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.1" y="245" width="0.2" height="15.0" fill="rgb(219,63,12)" rx="2" ry="2" />
<text  x="1167.09" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.5" y="117" width="0.1" height="15.0" fill="rgb(252,141,6)" rx="2" ry="2" />
<text  x="1168.45" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.3" y="997" width="0.2" height="15.0" fill="rgb(211,11,38)" rx="2" ry="2" />
<text  x="1168.26" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.1" y="1493" width="0.2" height="15.0" fill="rgb(212,216,48)" rx="2" ry="2" />
<text  x="1167.09" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="169.0" y="1093" width="0.2" height="15.0" fill="rgb(241,36,42)" rx="2" ry="2" />
<text  x="171.97" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.1" y="325" width="0.2" height="15.0" fill="rgb(232,136,54)" rx="2" ry="2" />
<text  x="1168.06" y="335.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="933.2" y="2037" width="0.2" height="15.0" fill="rgb(244,124,27)" rx="2" ry="2" />
<text  x="936.23" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.3" y="1109" width="0.2" height="15.0" fill="rgb(252,130,3)" rx="2" ry="2" />
<text  x="1168.26" y="1119.5" ></text>
</g>
<g >
<title>cfree (2 samples, 0.03%)</title><rect x="180.5" y="1621" width="0.4" height="15.0" fill="rgb(229,38,3)" rx="2" ry="2" />
<text  x="183.46" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.3" y="1045" width="0.2" height="15.0" fill="rgb(208,70,11)" rx="2" ry="2" />
<text  x="1167.28" y="1055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.1" y="357" width="0.2" height="15.0" fill="rgb(211,193,11)" rx="2" ry="2" />
<text  x="1167.09" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.3" y="69" width="0.2" height="15.0" fill="rgb(217,148,10)" rx="2" ry="2" />
<text  x="1168.26" y="79.5" ></text>
</g>
<g >
<title>Preprocess (1,381 samples, 22.80%)</title><rect x="587.4" y="1957" width="269.1" height="15.0" fill="rgb(237,139,20)" rx="2" ry="2" />
<text  x="590.43" y="1967.5" >Preprocess</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.1" y="1333" width="0.2" height="15.0" fill="rgb(247,157,34)" rx="2" ry="2" />
<text  x="1167.09" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (4 samples, 0.07%)</title><rect x="211.4" y="1845" width="0.8" height="15.0" fill="rgb(230,19,9)" rx="2" ry="2" />
<text  x="214.44" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="213.2" y="1509" width="0.2" height="15.0" fill="rgb(251,29,36)" rx="2" ry="2" />
<text  x="216.19" y="1519.5" ></text>
</g>
<g >
<title>fasttext::DenseMatrix::addRowToVector (518 samples, 8.55%)</title><rect x="457.3" y="1973" width="100.9" height="15.0" fill="rgb(219,37,22)" rx="2" ry="2" />
<text  x="460.30" y="1983.5" >fasttext::De..</text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_subexpr_begin (1 samples, 0.02%)</title><rect x="111.7" y="1685" width="0.2" height="15.0" fill="rgb(216,4,0)" rx="2" ry="2" />
<text  x="114.69" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (25 samples, 0.41%)</title><rect x="150.7" y="1717" width="4.8" height="15.0" fill="rgb(219,138,5)" rx="2" ry="2" />
<text  x="153.66" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1165.1" y="1669" width="0.4" height="15.0" fill="rgb(253,68,29)" rx="2" ry="2" />
<text  x="1168.06" y="1679.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="585.7" y="2005" width="0.2" height="15.0" fill="rgb(253,143,51)" rx="2" ry="2" />
<text  x="588.68" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.3" y="645" width="0.2" height="15.0" fill="rgb(214,225,22)" rx="2" ry="2" />
<text  x="1167.28" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::find (1 samples, 0.02%)</title><rect x="1142.7" y="2053" width="0.2" height="15.0" fill="rgb(206,97,44)" rx="2" ry="2" />
<text  x="1145.66" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1164.5" y="1445" width="0.6" height="15.0" fill="rgb(248,173,35)" rx="2" ry="2" />
<text  x="1167.48" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.5" y="1669" width="0.1" height="15.0" fill="rgb(229,128,17)" rx="2" ry="2" />
<text  x="1168.45" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Scanner&lt;char&gt;::_M_scan_normal (1 samples, 0.02%)</title><rect x="212.4" y="1909" width="0.2" height="15.0" fill="rgb(227,117,11)" rx="2" ry="2" />
<text  x="215.41" y="1919.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (10 samples, 0.17%)</title><rect x="847.1" y="1893" width="2.0" height="15.0" fill="rgb(214,160,6)" rx="2" ry="2" />
<text  x="850.12" y="1903.5" ></text>
</g>
<g >
<title>GetHost (1 samples, 0.02%)</title><rect x="10.2" y="2037" width="0.2" height="15.0" fill="rgb(236,112,2)" rx="2" ry="2" />
<text  x="13.19" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (10 samples, 0.17%)</title><rect x="877.9" y="2005" width="2.0" height="15.0" fill="rgb(246,119,54)" rx="2" ry="2" />
<text  x="880.90" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (30 samples, 0.50%)</title><rect x="155.9" y="1717" width="5.9" height="15.0" fill="rgb(243,99,46)" rx="2" ry="2" />
<text  x="158.92" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (36 samples, 0.59%)</title><rect x="196.2" y="1749" width="7.1" height="15.0" fill="rgb(247,135,36)" rx="2" ry="2" />
<text  x="199.24" y="1759.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.02%)</title><rect x="456.9" y="1941" width="0.2" height="15.0" fill="rgb(238,60,12)" rx="2" ry="2" />
<text  x="459.91" y="1951.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (1 samples, 0.02%)</title><rect x="883.4" y="1861" width="0.2" height="15.0" fill="rgb(237,167,3)" rx="2" ry="2" />
<text  x="886.36" y="1871.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (45 samples, 0.74%)</title><rect x="187.1" y="1701" width="8.8" height="15.0" fill="rgb(247,109,3)" rx="2" ry="2" />
<text  x="190.09" y="1711.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::basic_json (1 samples, 0.02%)</title><rect x="585.1" y="1813" width="0.2" height="15.0" fill="rgb(250,158,21)" rx="2" ry="2" />
<text  x="588.10" y="1823.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1109.2" y="1989" width="0.1" height="15.0" fill="rgb(234,85,27)" rx="2" ry="2" />
<text  x="1112.15" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="213.2" y="1365" width="0.2" height="15.0" fill="rgb(246,142,5)" rx="2" ry="2" />
<text  x="216.19" y="1375.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="1621" width="0.4" height="15.0" fill="rgb(238,168,23)" rx="2" ry="2" />
<text  x="87.22" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.07%)</title><rect x="1164.3" y="1813" width="0.8" height="15.0" fill="rgb(215,140,20)" rx="2" ry="2" />
<text  x="1167.28" y="1823.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt;@plt (1 samples, 0.02%)</title><rect x="195.5" y="1637" width="0.2" height="15.0" fill="rgb(240,80,48)" rx="2" ry="2" />
<text  x="198.46" y="1647.5" ></text>
</g>
<g >
<title>boost::algorithm::join&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, char [2]&gt; (2 samples, 0.03%)</title><rect x="588.4" y="1941" width="0.4" height="15.0" fill="rgb(246,155,19)" rx="2" ry="2" />
<text  x="591.41" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.1" y="117" width="0.2" height="15.0" fill="rgb(233,87,14)" rx="2" ry="2" />
<text  x="1167.09" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (26 samples, 0.43%)</title><rect x="139.2" y="1685" width="5.0" height="15.0" fill="rgb(243,222,37)" rx="2" ry="2" />
<text  x="142.16" y="1695.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="48.0" y="1973" width="0.2" height="15.0" fill="rgb(228,171,24)" rx="2" ry="2" />
<text  x="50.99" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.3" y="997" width="0.2" height="15.0" fill="rgb(213,19,9)" rx="2" ry="2" />
<text  x="1167.28" y="1007.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="709" width="0.4" height="15.0" fill="rgb(243,185,5)" rx="2" ry="2" />
<text  x="87.22" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.1" y="565" width="0.2" height="15.0" fill="rgb(213,175,0)" rx="2" ry="2" />
<text  x="1168.06" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.2" y="85" width="0.2" height="15.0" fill="rgb(246,12,28)" rx="2" ry="2" />
<text  x="13.19" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.1" y="437" width="0.2" height="15.0" fill="rgb(249,160,54)" rx="2" ry="2" />
<text  x="1167.09" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt;,  (5 samples, 0.08%)</title><rect x="212.6" y="1957" width="1.0" height="15.0" fill="rgb(231,211,47)" rx="2" ry="2" />
<text  x="215.61" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.3" y="693" width="0.2" height="15.0" fill="rgb(252,7,36)" rx="2" ry="2" />
<text  x="1167.28" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_quantifier (1 samples, 0.02%)</title><rect x="195.9" y="1717" width="0.1" height="15.0" fill="rgb(229,197,49)" rx="2" ry="2" />
<text  x="198.85" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.6" y="1733" width="0.2" height="15.0" fill="rgb(225,145,54)" rx="2" ry="2" />
<text  x="141.58" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="389" width="0.4" height="15.0" fill="rgb(225,0,26)" rx="2" ry="2" />
<text  x="87.22" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1164.5" y="549" width="0.6" height="15.0" fill="rgb(229,193,45)" rx="2" ry="2" />
<text  x="1167.48" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (46 samples, 0.76%)</title><rect x="186.9" y="1717" width="9.0" height="15.0" fill="rgb(240,121,22)" rx="2" ry="2" />
<text  x="189.89" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1165.1" y="1765" width="0.4" height="15.0" fill="rgb(233,145,50)" rx="2" ry="2" />
<text  x="1168.06" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="169.0" y="1013" width="0.2" height="15.0" fill="rgb(241,183,1)" rx="2" ry="2" />
<text  x="171.97" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.3" y="1061" width="0.2" height="15.0" fill="rgb(219,33,14)" rx="2" ry="2" />
<text  x="1167.28" y="1071.5" ></text>
</g>
<g >
<title>operator delete@plt (1 samples, 0.02%)</title><rect x="45.7" y="2021" width="0.1" height="15.0" fill="rgb(249,56,19)" rx="2" ry="2" />
<text  x="48.65" y="2031.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (4 samples, 0.07%)</title><rect x="177.2" y="1573" width="0.7" height="15.0" fill="rgb(218,137,44)" rx="2" ry="2" />
<text  x="180.15" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (21 samples, 0.35%)</title><rect x="107.0" y="1589" width="4.1" height="15.0" fill="rgb(239,12,30)" rx="2" ry="2" />
<text  x="110.02" y="1599.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="209.7" y="1701" width="0.2" height="15.0" fill="rgb(249,168,50)" rx="2" ry="2" />
<text  x="212.69" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.3" y="917" width="0.2" height="15.0" fill="rgb(213,162,4)" rx="2" ry="2" />
<text  x="1168.26" y="927.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (8 samples, 0.13%)</title><rect x="709.8" y="1765" width="1.5" height="15.0" fill="rgb(248,227,11)" rx="2" ry="2" />
<text  x="712.78" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (29 samples, 0.48%)</title><rect x="125.9" y="1765" width="5.7" height="15.0" fill="rgb(237,229,28)" rx="2" ry="2" />
<text  x="128.92" y="1775.5" ></text>
</g>
<g >
<title>TAgencyRating::Load (1 samples, 0.02%)</title><rect x="345.5" y="2005" width="0.2" height="15.0" fill="rgb(225,190,3)" rx="2" ry="2" />
<text  x="348.47" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_char_matcher&lt;false, false&gt; (1 samples, 0.02%)</title><rect x="137.6" y="1861" width="0.2" height="15.0" fill="rgb(208,224,10)" rx="2" ry="2" />
<text  x="140.60" y="1871.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="169.7" y="1973" width="0.2" height="15.0" fill="rgb(236,35,39)" rx="2" ry="2" />
<text  x="172.75" y="1983.5" ></text>
</g>
<g >
<title>copy_page_to_iter (4 samples, 0.07%)</title><rect x="88.3" y="1877" width="0.8" height="15.0" fill="rgb(230,41,50)" rx="2" ry="2" />
<text  x="91.32" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="229" width="0.4" height="15.0" fill="rgb(251,160,20)" rx="2" ry="2" />
<text  x="87.22" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.5" y="1765" width="0.1" height="15.0" fill="rgb(245,45,2)" rx="2" ry="2" />
<text  x="1168.45" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1165.1" y="1685" width="0.4" height="15.0" fill="rgb(238,133,11)" rx="2" ry="2" />
<text  x="1168.06" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="168.4" y="1685" width="0.4" height="15.0" fill="rgb(228,1,39)" rx="2" ry="2" />
<text  x="171.39" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (33 samples, 0.54%)</title><rect x="119.3" y="1701" width="6.4" height="15.0" fill="rgb(238,136,2)" rx="2" ry="2" />
<text  x="122.29" y="1711.5" ></text>
</g>
<g >
<title>std::__cxx11::collate&lt;char&gt;::do_transform (1 samples, 0.02%)</title><rect x="135.9" y="1685" width="0.1" height="15.0" fill="rgb(244,192,19)" rx="2" ry="2" />
<text  x="138.85" y="1695.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt;@plt (5 samples, 0.08%)</title><rect x="870.5" y="2037" width="1.0" height="15.0" fill="rgb(223,137,21)" rx="2" ry="2" />
<text  x="873.50" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1164.5" y="597" width="0.6" height="15.0" fill="rgb(206,121,26)" rx="2" ry="2" />
<text  x="1167.48" y="607.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (1 samples, 0.02%)</title><rect x="117.0" y="1605" width="0.1" height="15.0" fill="rgb(225,215,43)" rx="2" ry="2" />
<text  x="119.95" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.1" y="565" width="0.2" height="15.0" fill="rgb(227,150,25)" rx="2" ry="2" />
<text  x="1167.09" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.07%)</title><rect x="168.4" y="1925" width="0.8" height="15.0" fill="rgb(208,21,15)" rx="2" ry="2" />
<text  x="171.39" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.6" y="1029" width="0.2" height="15.0" fill="rgb(241,212,47)" rx="2" ry="2" />
<text  x="141.58" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="213.2" y="933" width="0.2" height="15.0" fill="rgb(227,180,16)" rx="2" ry="2" />
<text  x="216.19" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.3" y="197" width="0.2" height="15.0" fill="rgb(235,56,17)" rx="2" ry="2" />
<text  x="1167.28" y="207.5" ></text>
</g>
<g >
<title>cfree (11 samples, 0.18%)</title><rect x="611.0" y="1893" width="2.2" height="15.0" fill="rgb(214,16,23)" rx="2" ry="2" />
<text  x="614.01" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.3" y="773" width="0.2" height="15.0" fill="rgb(243,67,54)" rx="2" ry="2" />
<text  x="1168.26" y="783.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (168 samples, 2.77%)</title><rect x="10.4" y="2053" width="32.7" height="15.0" fill="rgb(217,177,5)" rx="2" ry="2" />
<text  x="13.39" y="2063.5" >[l..</text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (1 samples, 0.02%)</title><rect x="211.4" y="1797" width="0.2" height="15.0" fill="rgb(228,226,4)" rx="2" ry="2" />
<text  x="214.44" y="1807.5" ></text>
</g>
<g >
<title>cfree (1 samples, 0.02%)</title><rect x="152.2" y="1621" width="0.2" height="15.0" fill="rgb(251,155,33)" rx="2" ry="2" />
<text  x="155.22" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.1" y="421" width="0.2" height="15.0" fill="rgb(242,155,49)" rx="2" ry="2" />
<text  x="1168.06" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="213.4" y="1365" width="0.2" height="15.0" fill="rgb(229,207,5)" rx="2" ry="2" />
<text  x="216.39" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.3" y="213" width="0.2" height="15.0" fill="rgb(236,129,22)" rx="2" ry="2" />
<text  x="1167.28" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.3" y="1605" width="0.2" height="15.0" fill="rgb(227,87,19)" rx="2" ry="2" />
<text  x="1168.26" y="1615.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="860.4" y="1925" width="0.2" height="15.0" fill="rgb(217,147,7)" rx="2" ry="2" />
<text  x="863.37" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.1" y="1205" width="0.2" height="15.0" fill="rgb(236,143,40)" rx="2" ry="2" />
<text  x="1168.06" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.1" y="181" width="0.2" height="15.0" fill="rgb(235,15,34)" rx="2" ry="2" />
<text  x="1168.06" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.07%)</title><rect x="1164.3" y="1893" width="0.8" height="15.0" fill="rgb(217,138,46)" rx="2" ry="2" />
<text  x="1167.28" y="1903.5" ></text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (2 samples, 0.03%)</title><rect x="129.8" y="1669" width="0.4" height="15.0" fill="rgb(252,214,31)" rx="2" ry="2" />
<text  x="132.81" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.1" y="1397" width="0.2" height="15.0" fill="rgb(231,229,7)" rx="2" ry="2" />
<text  x="1168.06" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.3" y="949" width="0.2" height="15.0" fill="rgb(221,229,32)" rx="2" ry="2" />
<text  x="1168.26" y="959.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="84.0" y="1845" width="0.6" height="15.0" fill="rgb(242,67,31)" rx="2" ry="2" />
<text  x="87.03" y="1855.5" ></text>
</g>
<g >
<title>fasttext::FastText::getWordVector (18 samples, 0.30%)</title><rect x="562.1" y="1973" width="3.5" height="15.0" fill="rgb(231,151,48)" rx="2" ry="2" />
<text  x="565.11" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (37 samples, 0.61%)</title><rect x="179.5" y="1669" width="7.2" height="15.0" fill="rgb(216,113,39)" rx="2" ry="2" />
<text  x="182.49" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="213.4" y="1205" width="0.2" height="15.0" fill="rgb(219,94,49)" rx="2" ry="2" />
<text  x="216.39" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="213.4" y="789" width="0.2" height="15.0" fill="rgb(244,202,27)" rx="2" ry="2" />
<text  x="216.39" y="799.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="208.3" y="1669" width="0.2" height="15.0" fill="rgb(229,111,10)" rx="2" ry="2" />
<text  x="211.32" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.1" y="165" width="0.2" height="15.0" fill="rgb(206,226,38)" rx="2" ry="2" />
<text  x="1167.09" y="175.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="883.4" y="1813" width="0.2" height="15.0" fill="rgb(216,144,34)" rx="2" ry="2" />
<text  x="886.36" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (1 samples, 0.02%)</title><rect x="131.6" y="1797" width="0.2" height="15.0" fill="rgb(206,10,0)" rx="2" ry="2" />
<text  x="134.57" y="1807.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="821" width="0.4" height="15.0" fill="rgb(211,56,1)" rx="2" ry="2" />
<text  x="87.22" y="831.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (3 samples, 0.05%)</title><rect x="855.7" y="1941" width="0.6" height="15.0" fill="rgb(237,17,31)" rx="2" ry="2" />
<text  x="858.70" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.3" y="965" width="0.2" height="15.0" fill="rgb(237,130,5)" rx="2" ry="2" />
<text  x="1167.28" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.6" y="885" width="0.2" height="15.0" fill="rgb(207,194,7)" rx="2" ry="2" />
<text  x="141.58" y="895.5" ></text>
</g>
<g >
<title>do_page_fault (2 samples, 0.03%)</title><rect x="676.7" y="1845" width="0.3" height="15.0" fill="rgb(238,44,0)" rx="2" ry="2" />
<text  x="679.66" y="1855.5" ></text>
</g>
<g >
<title>free@plt (1 samples, 0.02%)</title><rect x="120.7" y="1637" width="0.2" height="15.0" fill="rgb(215,105,27)" rx="2" ry="2" />
<text  x="123.66" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1164.5" y="1685" width="0.6" height="15.0" fill="rgb(233,28,19)" rx="2" ry="2" />
<text  x="1167.48" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (5 samples, 0.08%)</title><rect x="159.6" y="1653" width="1.0" height="15.0" fill="rgb(232,183,35)" rx="2" ry="2" />
<text  x="162.62" y="1663.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="103.5" y="1941" width="0.4" height="15.0" fill="rgb(252,212,43)" rx="2" ry="2" />
<text  x="106.51" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="168.6" y="1477" width="0.2" height="15.0" fill="rgb(218,207,52)" rx="2" ry="2" />
<text  x="171.58" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.3" y="517" width="0.2" height="15.0" fill="rgb(254,156,12)" rx="2" ry="2" />
<text  x="1167.28" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_apply (29 samples, 0.48%)</title><rect x="172.3" y="1589" width="5.6" height="15.0" fill="rgb(215,181,13)" rx="2" ry="2" />
<text  x="175.28" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.3" y="1605" width="0.2" height="15.0" fill="rgb(241,185,54)" rx="2" ry="2" />
<text  x="1167.28" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.2" y="1045" width="0.2" height="15.0" fill="rgb(214,169,46)" rx="2" ry="2" />
<text  x="13.19" y="1055.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="208.3" y="1685" width="0.2" height="15.0" fill="rgb(208,87,27)" rx="2" ry="2" />
<text  x="211.32" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.2" y="1989" width="0.2" height="15.0" fill="rgb(209,78,2)" rx="2" ry="2" />
<text  x="13.19" y="1999.5" ></text>
</g>
<g >
<title>pmd_page_vaddr (1 samples, 0.02%)</title><rect x="42.9" y="1973" width="0.2" height="15.0" fill="rgb(210,36,20)" rx="2" ry="2" />
<text  x="45.92" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="213.4" y="1493" width="0.2" height="15.0" fill="rgb(208,11,6)" rx="2" ry="2" />
<text  x="216.39" y="1503.5" ></text>
</g>
<g >
<title>onmt::AnnotatedToken::set (2 samples, 0.03%)</title><rect x="590.2" y="1909" width="0.4" height="15.0" fill="rgb(246,44,41)" rx="2" ry="2" />
<text  x="593.16" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.5" y="1397" width="0.1" height="15.0" fill="rgb(222,229,20)" rx="2" ry="2" />
<text  x="1168.45" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.3" y="1541" width="0.2" height="15.0" fill="rgb(245,25,42)" rx="2" ry="2" />
<text  x="1168.26" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.6" y="773" width="0.2" height="15.0" fill="rgb(207,29,19)" rx="2" ry="2" />
<text  x="141.58" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.5" y="1605" width="0.1" height="15.0" fill="rgb(244,206,20)" rx="2" ry="2" />
<text  x="1168.45" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.2" y="1413" width="0.2" height="15.0" fill="rgb(234,89,0)" rx="2" ry="2" />
<text  x="13.19" y="1423.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="101" width="0.4" height="15.0" fill="rgb(225,184,8)" rx="2" ry="2" />
<text  x="87.22" y="111.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (1 samples, 0.02%)</title><rect x="342.4" y="1989" width="0.2" height="15.0" fill="rgb(240,199,37)" rx="2" ry="2" />
<text  x="345.36" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.07%)</title><rect x="212.8" y="1893" width="0.8" height="15.0" fill="rgb(229,150,43)" rx="2" ry="2" />
<text  x="215.80" y="1903.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::json_value::destroy (1 samples, 0.02%)</title><rect x="90.7" y="1989" width="0.1" height="15.0" fill="rgb(253,198,0)" rx="2" ry="2" />
<text  x="93.65" y="1999.5" ></text>
</g>
<g >
<title>onmt::unicode::explode_utf8@plt (1 samples, 0.02%)</title><rect x="752.8" y="1893" width="0.2" height="15.0" fill="rgb(207,2,8)" rx="2" ry="2" />
<text  x="755.83" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.6" y="1605" width="0.2" height="15.0" fill="rgb(225,72,10)" rx="2" ry="2" />
<text  x="141.58" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="213.2" y="1717" width="0.2" height="15.0" fill="rgb(246,166,16)" rx="2" ry="2" />
<text  x="216.19" y="1727.5" ></text>
</g>
<g >
<title>fasttext::Vector::mul (26 samples, 0.43%)</title><rect x="332.4" y="1989" width="5.1" height="15.0" fill="rgb(220,173,43)" rx="2" ry="2" />
<text  x="335.42" y="1999.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="154.4" y="1605" width="0.2" height="15.0" fill="rgb(206,177,53)" rx="2" ry="2" />
<text  x="157.36" y="1615.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::__detail::_CharMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt; &gt;::_M_manager (1 samples, 0.02%)</title><rect x="131.6" y="1733" width="0.2" height="15.0" fill="rgb(250,228,17)" rx="2" ry="2" />
<text  x="134.57" y="1743.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="165" width="0.4" height="15.0" fill="rgb(206,204,38)" rx="2" ry="2" />
<text  x="87.22" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1165.1" y="1989" width="0.4" height="15.0" fill="rgb(220,26,14)" rx="2" ry="2" />
<text  x="1168.06" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="169.0" y="1445" width="0.2" height="15.0" fill="rgb(245,86,8)" rx="2" ry="2" />
<text  x="171.97" y="1455.5" ></text>
</g>
<g >
<title>@plt (1 samples, 0.02%)</title><rect x="1150.5" y="2037" width="0.1" height="15.0" fill="rgb(242,169,5)" rx="2" ry="2" />
<text  x="1153.45" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.2" y="533" width="0.2" height="15.0" fill="rgb(233,203,21)" rx="2" ry="2" />
<text  x="13.19" y="543.5" ></text>
</g>
<g >
<title>nlohmann::detail::lexer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::next_byte_in_range (15 samples, 0.25%)</title><rect x="100.6" y="1925" width="2.9" height="15.0" fill="rgb(215,182,34)" rx="2" ry="2" />
<text  x="103.59" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (38 samples, 0.63%)</title><rect x="104.5" y="1733" width="7.4" height="15.0" fill="rgb(234,23,1)" rx="2" ry="2" />
<text  x="107.49" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.3" y="469" width="0.2" height="15.0" fill="rgb(208,127,30)" rx="2" ry="2" />
<text  x="1168.26" y="479.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.02%)</title><rect x="89.9" y="1909" width="0.2" height="15.0" fill="rgb(216,211,8)" rx="2" ry="2" />
<text  x="92.87" y="1919.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.02%)</title><rect x="345.7" y="1893" width="0.2" height="15.0" fill="rgb(252,179,16)" rx="2" ry="2" />
<text  x="348.67" y="1903.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="121.6" y="1637" width="0.2" height="15.0" fill="rgb(242,83,3)" rx="2" ry="2" />
<text  x="124.63" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="168.6" y="1541" width="0.2" height="15.0" fill="rgb(225,79,27)" rx="2" ry="2" />
<text  x="171.58" y="1551.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (3 samples, 0.05%)</title><rect x="208.5" y="1685" width="0.6" height="15.0" fill="rgb(231,144,40)" rx="2" ry="2" />
<text  x="211.52" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.07%)</title><rect x="1164.3" y="1989" width="0.8" height="15.0" fill="rgb(233,141,10)" rx="2" ry="2" />
<text  x="1167.28" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1164.5" y="421" width="0.6" height="15.0" fill="rgb(240,214,49)" rx="2" ry="2" />
<text  x="1167.48" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="213.4" y="1765" width="0.2" height="15.0" fill="rgb(211,225,41)" rx="2" ry="2" />
<text  x="216.39" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.1" y="805" width="0.2" height="15.0" fill="rgb(228,212,51)" rx="2" ry="2" />
<text  x="1167.09" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1164.5" y="1621" width="0.6" height="15.0" fill="rgb(223,4,53)" rx="2" ry="2" />
<text  x="1167.48" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.1" y="1397" width="0.2" height="15.0" fill="rgb(211,57,51)" rx="2" ry="2" />
<text  x="1167.09" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.1" y="533" width="0.2" height="15.0" fill="rgb(224,191,35)" rx="2" ry="2" />
<text  x="1167.09" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (30 samples, 0.50%)</title><rect x="155.9" y="1685" width="5.9" height="15.0" fill="rgb(207,73,30)" rx="2" ry="2" />
<text  x="158.92" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1165.1" y="1813" width="0.4" height="15.0" fill="rgb(235,229,18)" rx="2" ry="2" />
<text  x="1168.06" y="1823.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1164.5" y="229" width="0.6" height="15.0" fill="rgb(209,199,25)" rx="2" ry="2" />
<text  x="1167.48" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.5" y="485" width="0.1" height="15.0" fill="rgb(219,21,45)" rx="2" ry="2" />
<text  x="1168.45" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.1" y="1781" width="0.2" height="15.0" fill="rgb(230,6,17)" rx="2" ry="2" />
<text  x="1167.09" y="1791.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.1" y="1269" width="0.2" height="15.0" fill="rgb(234,182,2)" rx="2" ry="2" />
<text  x="1168.06" y="1279.5" ></text>
</g>
<g >
<title>std::__cxx11::regex_traits&lt;char&gt;::transform&lt;char*&gt; (2 samples, 0.03%)</title><rect x="159.8" y="1637" width="0.4" height="15.0" fill="rgb(206,144,37)" rx="2" ry="2" />
<text  x="162.81" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.3" y="1525" width="0.2" height="15.0" fill="rgb(221,155,27)" rx="2" ry="2" />
<text  x="1167.28" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.1" y="1109" width="0.2" height="15.0" fill="rgb(233,169,9)" rx="2" ry="2" />
<text  x="1168.06" y="1119.5" ></text>
</g>
<g >
<title>fasttext::FastText::getDimension (11 samples, 0.18%)</title><rect x="560.0" y="1973" width="2.1" height="15.0" fill="rgb(223,28,1)" rx="2" ry="2" />
<text  x="562.97" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.3" y="1685" width="0.2" height="15.0" fill="rgb(223,148,37)" rx="2" ry="2" />
<text  x="1167.28" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.3" y="37" width="0.2" height="15.0" fill="rgb(219,103,13)" rx="2" ry="2" />
<text  x="1168.26" y="47.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.2" y="309" width="0.2" height="15.0" fill="rgb(250,13,9)" rx="2" ry="2" />
<text  x="13.19" y="319.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::do_tolower (1 samples, 0.02%)</title><rect x="177.9" y="1589" width="0.2" height="15.0" fill="rgb(242,214,19)" rx="2" ry="2" />
<text  x="180.93" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="138.2" y="1909" width="0.6" height="15.0" fill="rgb(228,199,28)" rx="2" ry="2" />
<text  x="141.19" y="1919.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="677.0" y="1845" width="0.2" height="15.0" fill="rgb(236,153,4)" rx="2" ry="2" />
<text  x="680.05" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.2" y="245" width="0.2" height="15.0" fill="rgb(228,99,27)" rx="2" ry="2" />
<text  x="13.19" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.07%)</title><rect x="212.8" y="1941" width="0.8" height="15.0" fill="rgb(239,192,41)" rx="2" ry="2" />
<text  x="215.80" y="1951.5" ></text>
</g>
<g >
<title>std::__find_if&lt;std::pair&lt;ENewsCategory, nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; const*, __gnu_cxx::__ops::_Iter_pred&lt;void from_json&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt; (1 samples, 0.02%)</title><rect x="89.3" y="1941" width="0.2" height="15.0" fill="rgb(221,178,27)" rx="2" ry="2" />
<text  x="92.29" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.1" y="1061" width="0.2" height="15.0" fill="rgb(235,171,16)" rx="2" ry="2" />
<text  x="1167.09" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.3" y="677" width="0.2" height="15.0" fill="rgb(241,81,4)" rx="2" ry="2" />
<text  x="1168.26" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.1" y="261" width="0.2" height="15.0" fill="rgb(211,61,51)" rx="2" ry="2" />
<text  x="1167.09" y="271.5" ></text>
</g>
<g >
<title>cfree (1 samples, 0.02%)</title><rect x="127.3" y="1669" width="0.2" height="15.0" fill="rgb(221,191,29)" rx="2" ry="2" />
<text  x="130.28" y="1679.5" ></text>
</g>
<g >
<title>boost::algorithm::iter_split&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, boost::algorithm::detail::token_finderF&lt;boost::algorithm::detail::is_any_ofF&lt;char&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="345.5" y="1973" width="0.2" height="15.0" fill="rgb(223,108,39)" rx="2" ry="2" />
<text  x="348.47" y="1983.5" ></text>
</g>
<g >
<title>__dynamic_cast (5 samples, 0.08%)</title><rect x="162.3" y="1685" width="1.0" height="15.0" fill="rgb(206,33,32)" rx="2" ry="2" />
<text  x="165.35" y="1695.5" ></text>
</g>
<g >
<title>__munmap (1 samples, 0.02%)</title><rect x="583.1" y="1989" width="0.2" height="15.0" fill="rgb(241,146,43)" rx="2" ry="2" />
<text  x="586.15" y="1999.5" ></text>
</g>
<g >
<title>fasttext::Vector::norm (33 samples, 0.54%)</title><rect x="574.0" y="1973" width="6.4" height="15.0" fill="rgb(238,54,47)" rx="2" ry="2" />
<text  x="576.99" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="213.4" y="853" width="0.2" height="15.0" fill="rgb(240,39,4)" rx="2" ry="2" />
<text  x="216.39" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.6" y="581" width="0.2" height="15.0" fill="rgb(215,109,29)" rx="2" ry="2" />
<text  x="141.58" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="168.8" y="1637" width="0.4" height="15.0" fill="rgb(217,60,14)" rx="2" ry="2" />
<text  x="171.77" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.3" y="1205" width="0.2" height="15.0" fill="rgb(238,132,46)" rx="2" ry="2" />
<text  x="1167.28" y="1215.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.3" y="277" width="0.2" height="15.0" fill="rgb(208,229,44)" rx="2" ry="2" />
<text  x="1168.26" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (84 samples, 1.39%)</title><rect x="170.3" y="1749" width="16.4" height="15.0" fill="rgb(235,140,19)" rx="2" ry="2" />
<text  x="173.33" y="1759.5" ></text>
</g>
<g >
<title>clear_page_erms (2 samples, 0.03%)</title><rect x="82.9" y="1909" width="0.4" height="15.0" fill="rgb(212,65,43)" rx="2" ry="2" />
<text  x="85.86" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.1" y="453" width="0.2" height="15.0" fill="rgb(249,16,47)" rx="2" ry="2" />
<text  x="1167.09" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.3" y="85" width="0.2" height="15.0" fill="rgb(230,19,35)" rx="2" ry="2" />
<text  x="1168.26" y="95.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="597" width="0.4" height="15.0" fill="rgb(210,25,8)" rx="2" ry="2" />
<text  x="87.22" y="607.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (1 samples, 0.02%)</title><rect x="456.9" y="1925" width="0.2" height="15.0" fill="rgb(232,190,0)" rx="2" ry="2" />
<text  x="459.91" y="1935.5" ></text>
</g>
<g >
<title>do_IRQ (1 samples, 0.02%)</title><rect x="323.3" y="1957" width="0.2" height="15.0" fill="rgb(213,180,25)" rx="2" ry="2" />
<text  x="326.26" y="1967.5" ></text>
</g>
<g >
<title>[libm-2.27.so] (7 samples, 0.12%)</title><rect x="43.1" y="2053" width="1.4" height="15.0" fill="rgb(218,160,27)" rx="2" ry="2" />
<text  x="46.12" y="2063.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (2 samples, 0.03%)</title><rect x="83.6" y="2021" width="0.4" height="15.0" fill="rgb(226,210,34)" rx="2" ry="2" />
<text  x="86.64" y="2031.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::do_tolower (1 samples, 0.02%)</title><rect x="130.2" y="1669" width="0.2" height="15.0" fill="rgb(237,137,24)" rx="2" ry="2" />
<text  x="133.20" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="138.4" y="1829" width="0.4" height="15.0" fill="rgb(254,220,11)" rx="2" ry="2" />
<text  x="141.38" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.1" y="309" width="0.2" height="15.0" fill="rgb(210,20,0)" rx="2" ry="2" />
<text  x="1167.09" y="319.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="1685" width="0.4" height="15.0" fill="rgb(239,139,49)" rx="2" ry="2" />
<text  x="87.22" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (46 samples, 0.76%)</title><rect x="170.3" y="1685" width="9.0" height="15.0" fill="rgb(213,6,7)" rx="2" ry="2" />
<text  x="173.33" y="1695.5" ></text>
</g>
<g >
<title>fasttext::Vector::addRow (6 samples, 0.10%)</title><rect x="328.5" y="1989" width="1.2" height="15.0" fill="rgb(237,141,53)" rx="2" ry="2" />
<text  x="331.52" y="1999.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1164.5" y="901" width="0.6" height="15.0" fill="rgb(209,208,15)" rx="2" ry="2" />
<text  x="1167.48" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="213.4" y="1669" width="0.2" height="15.0" fill="rgb(230,83,48)" rx="2" ry="2" />
<text  x="216.39" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.1" y="389" width="0.2" height="15.0" fill="rgb(248,224,42)" rx="2" ry="2" />
<text  x="1167.09" y="399.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (7 samples, 0.12%)</title><rect x="41.6" y="1957" width="1.3" height="15.0" fill="rgb(205,150,36)" rx="2" ry="2" />
<text  x="44.56" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.1" y="357" width="0.2" height="15.0" fill="rgb(212,215,4)" rx="2" ry="2" />
<text  x="1168.06" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.1" y="1685" width="0.2" height="15.0" fill="rgb(245,98,48)" rx="2" ry="2" />
<text  x="1167.09" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="169.0" y="1157" width="0.2" height="15.0" fill="rgb(232,173,49)" rx="2" ry="2" />
<text  x="171.97" y="1167.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.02%)</title><rect x="754.4" y="1813" width="0.2" height="15.0" fill="rgb(233,61,46)" rx="2" ry="2" />
<text  x="757.39" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="469" width="0.4" height="15.0" fill="rgb(212,96,31)" rx="2" ry="2" />
<text  x="87.22" y="479.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="163.9" y="1685" width="0.2" height="15.0" fill="rgb(205,202,6)" rx="2" ry="2" />
<text  x="166.90" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.3" y="1173" width="0.2" height="15.0" fill="rgb(210,203,32)" rx="2" ry="2" />
<text  x="1167.28" y="1183.5" ></text>
</g>
<g >
<title>GetHost (157 samples, 2.59%)</title><rect x="138.8" y="1957" width="30.6" height="15.0" fill="rgb(211,62,43)" rx="2" ry="2" />
<text  x="141.77" y="1967.5" >Ge..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.3" y="1637" width="0.2" height="15.0" fill="rgb(205,195,35)" rx="2" ry="2" />
<text  x="1167.28" y="1647.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="1669" width="0.4" height="15.0" fill="rgb(251,114,39)" rx="2" ry="2" />
<text  x="87.22" y="1679.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (1 samples, 0.02%)</title><rect x="84.0" y="1749" width="0.2" height="15.0" fill="rgb(254,165,22)" rx="2" ry="2" />
<text  x="87.03" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.2" y="613" width="0.2" height="15.0" fill="rgb(224,149,15)" rx="2" ry="2" />
<text  x="13.19" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (36 samples, 0.59%)</title><rect x="111.9" y="1733" width="7.0" height="15.0" fill="rgb(249,30,0)" rx="2" ry="2" />
<text  x="114.89" y="1743.5" ></text>
</g>
<g >
<title>nlohmann::detail::serializer&lt;nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt; &gt;::dump (1 samples, 0.02%)</title><rect x="584.5" y="1957" width="0.2" height="15.0" fill="rgb(232,113,33)" rx="2" ry="2" />
<text  x="587.51" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.3" y="229" width="0.2" height="15.0" fill="rgb(205,204,17)" rx="2" ry="2" />
<text  x="1167.28" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="169.0" y="933" width="0.2" height="15.0" fill="rgb(227,40,37)" rx="2" ry="2" />
<text  x="171.97" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (204 samples, 3.37%)</title><rect x="170.3" y="1829" width="39.8" height="15.0" fill="rgb(212,18,20)" rx="2" ry="2" />
<text  x="173.33" y="1839.5" >std..</text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="181" width="0.4" height="15.0" fill="rgb(232,144,43)" rx="2" ry="2" />
<text  x="87.22" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1164.5" y="677" width="0.6" height="15.0" fill="rgb(231,137,15)" rx="2" ry="2" />
<text  x="1167.48" y="687.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="41.2" y="1909" width="0.2" height="15.0" fill="rgb(238,20,33)" rx="2" ry="2" />
<text  x="44.17" y="1919.5" ></text>
</g>
<g >
<title>create_empty_buffers (1 samples, 0.02%)</title><rect x="883.4" y="1829" width="0.2" height="15.0" fill="rgb(224,76,41)" rx="2" ry="2" />
<text  x="886.36" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.2" y="1429" width="0.2" height="15.0" fill="rgb(228,175,49)" rx="2" ry="2" />
<text  x="13.19" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Scanner&lt;char&gt;::_M_scan_normal (1 samples, 0.02%)</title><rect x="168.0" y="1685" width="0.2" height="15.0" fill="rgb(229,130,8)" rx="2" ry="2" />
<text  x="171.00" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.5" y="1173" width="0.1" height="15.0" fill="rgb(247,62,45)" rx="2" ry="2" />
<text  x="1168.45" y="1183.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (33 samples, 0.54%)</title><rect x="119.3" y="1685" width="6.4" height="15.0" fill="rgb(247,59,22)" rx="2" ry="2" />
<text  x="122.29" y="1695.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (55 samples, 0.91%)</title><rect x="1176.6" y="2037" width="10.7" height="15.0" fill="rgb(241,79,5)" rx="2" ry="2" />
<text  x="1179.56" y="2047.5" ></text>
</g>
<g >
<title>Eigen::internal::product_evaluator&lt;Eigen::Product&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt;, Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0&gt;, 7, Eigen::DenseShape, Eigen::DenseShape, float, float&gt;::product_evaluator (3 samples, 0.05%)</title><rect x="224.1" y="1973" width="0.6" height="15.0" fill="rgb(245,158,20)" rx="2" ry="2" />
<text  x="227.10" y="1983.5" ></text>
</g>
<g >
<title>ext4_block_write_begin (1 samples, 0.02%)</title><rect x="883.4" y="1845" width="0.2" height="15.0" fill="rgb(247,210,17)" rx="2" ry="2" />
<text  x="886.36" y="1855.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (1 samples, 0.02%)</title><rect x="41.2" y="1925" width="0.2" height="15.0" fill="rgb(246,133,19)" rx="2" ry="2" />
<text  x="44.17" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1165.1" y="2005" width="0.4" height="15.0" fill="rgb(246,223,30)" rx="2" ry="2" />
<text  x="1168.06" y="2015.5" ></text>
</g>
<g >
<title>__schedule (2 samples, 0.03%)</title><rect x="103.5" y="1845" width="0.4" height="15.0" fill="rgb(211,50,27)" rx="2" ry="2" />
<text  x="106.51" y="1855.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="885" width="0.4" height="15.0" fill="rgb(217,46,51)" rx="2" ry="2" />
<text  x="87.22" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.1" y="229" width="0.2" height="15.0" fill="rgb(221,6,52)" rx="2" ry="2" />
<text  x="1167.09" y="239.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="1557" width="0.4" height="15.0" fill="rgb(236,17,19)" rx="2" ry="2" />
<text  x="87.22" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="309" width="0.4" height="15.0" fill="rgb(236,26,16)" rx="2" ry="2" />
<text  x="87.22" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.2" y="949" width="0.2" height="15.0" fill="rgb(211,83,6)" rx="2" ry="2" />
<text  x="13.19" y="959.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="197" width="0.4" height="15.0" fill="rgb(250,117,24)" rx="2" ry="2" />
<text  x="87.22" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.3" y="1493" width="0.2" height="15.0" fill="rgb(225,179,49)" rx="2" ry="2" />
<text  x="1168.26" y="1503.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1164.5" y="1701" width="0.6" height="15.0" fill="rgb(222,59,28)" rx="2" ry="2" />
<text  x="1167.48" y="1711.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (170 samples, 2.81%)</title><rect x="104.5" y="1861" width="33.1" height="15.0" fill="rgb(222,212,4)" rx="2" ry="2" />
<text  x="107.49" y="1871.5" >st..</text>
</g>
<g >
<title>std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_equals_val&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&gt; &gt; (32 samples, 0.53%)</title><rect x="742.3" y="1877" width="6.2" height="15.0" fill="rgb(244,224,46)" rx="2" ry="2" />
<text  x="745.31" y="1887.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1109.3" y="2037" width="0.2" height="15.0" fill="rgb(223,62,22)" rx="2" ry="2" />
<text  x="1112.35" y="2047.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (36 samples, 0.59%)</title><rect x="179.5" y="1637" width="7.0" height="15.0" fill="rgb(244,59,12)" rx="2" ry="2" />
<text  x="182.49" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="213.2" y="1061" width="0.2" height="15.0" fill="rgb(235,6,5)" rx="2" ry="2" />
<text  x="216.19" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.3" y="517" width="0.2" height="15.0" fill="rgb(245,5,11)" rx="2" ry="2" />
<text  x="1168.26" y="527.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="1381" width="0.4" height="15.0" fill="rgb(235,75,53)" rx="2" ry="2" />
<text  x="87.22" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="213.2" y="1429" width="0.2" height="15.0" fill="rgb(234,194,3)" rx="2" ry="2" />
<text  x="216.19" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.1" y="101" width="0.2" height="15.0" fill="rgb(249,181,36)" rx="2" ry="2" />
<text  x="1168.06" y="111.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append@plt (4 samples, 0.07%)</title><rect x="835.4" y="1893" width="0.8" height="15.0" fill="rgb(217,70,1)" rx="2" ry="2" />
<text  x="838.44" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.2" y="405" width="0.2" height="15.0" fill="rgb(228,31,47)" rx="2" ry="2" />
<text  x="13.19" y="415.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (12 samples, 0.20%)</title><rect x="429.4" y="1845" width="2.4" height="15.0" fill="rgb(230,229,1)" rx="2" ry="2" />
<text  x="432.44" y="1855.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="213.4" y="1285" width="0.2" height="15.0" fill="rgb(230,151,41)" rx="2" ry="2" />
<text  x="216.39" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.07%)</title><rect x="168.4" y="1877" width="0.8" height="15.0" fill="rgb(236,74,20)" rx="2" ry="2" />
<text  x="171.39" y="1887.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="84.0" y="1957" width="0.6" height="15.0" fill="rgb(206,25,45)" rx="2" ry="2" />
<text  x="87.03" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.1" y="997" width="0.2" height="15.0" fill="rgb(234,138,31)" rx="2" ry="2" />
<text  x="1168.06" y="1007.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (45 samples, 0.74%)</title><rect x="170.3" y="1605" width="8.8" height="15.0" fill="rgb(216,33,54)" rx="2" ry="2" />
<text  x="173.33" y="1615.5" ></text>
</g>
<g >
<title>[libc-2.27.so] (5 samples, 0.08%)</title><rect x="676.1" y="1877" width="0.9" height="15.0" fill="rgb(247,26,52)" rx="2" ry="2" />
<text  x="679.08" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.1" y="53" width="0.2" height="15.0" fill="rgb(236,119,3)" rx="2" ry="2" />
<text  x="1167.09" y="63.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_atom (33 samples, 0.54%)</title><rect x="144.2" y="1717" width="6.5" height="15.0" fill="rgb(221,49,49)" rx="2" ry="2" />
<text  x="147.23" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.3" y="901" width="0.2" height="15.0" fill="rgb(223,170,14)" rx="2" ry="2" />
<text  x="1168.26" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="213.4" y="1141" width="0.2" height="15.0" fill="rgb(235,24,36)" rx="2" ry="2" />
<text  x="216.39" y="1151.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.1" y="485" width="0.2" height="15.0" fill="rgb(254,152,21)" rx="2" ry="2" />
<text  x="1168.06" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1164.5" y="869" width="0.6" height="15.0" fill="rgb(241,1,36)" rx="2" ry="2" />
<text  x="1167.48" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.5" y="1717" width="0.1" height="15.0" fill="rgb(206,23,53)" rx="2" ry="2" />
<text  x="1168.45" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1164.5" y="453" width="0.6" height="15.0" fill="rgb(219,20,15)" rx="2" ry="2" />
<text  x="1167.48" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.2" y="1237" width="0.2" height="15.0" fill="rgb(213,63,53)" rx="2" ry="2" />
<text  x="13.19" y="1247.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.1" y="469" width="0.2" height="15.0" fill="rgb(252,9,13)" rx="2" ry="2" />
<text  x="1167.09" y="479.5" ></text>
</g>
<g >
<title>[unknown] (10 samples, 0.17%)</title><rect x="877.9" y="1989" width="2.0" height="15.0" fill="rgb(238,224,50)" rx="2" ry="2" />
<text  x="880.90" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="501" width="0.4" height="15.0" fill="rgb(217,211,28)" rx="2" ry="2" />
<text  x="87.22" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.1" y="1349" width="0.2" height="15.0" fill="rgb(247,224,46)" rx="2" ry="2" />
<text  x="1167.09" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.3" y="325" width="0.2" height="15.0" fill="rgb(205,133,12)" rx="2" ry="2" />
<text  x="1167.28" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.3" y="1349" width="0.2" height="15.0" fill="rgb(215,204,48)" rx="2" ry="2" />
<text  x="1168.26" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="213.4" y="1749" width="0.2" height="15.0" fill="rgb(236,146,8)" rx="2" ry="2" />
<text  x="216.39" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.2" y="1381" width="0.2" height="15.0" fill="rgb(243,145,8)" rx="2" ry="2" />
<text  x="13.19" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.3" y="1589" width="0.2" height="15.0" fill="rgb(218,91,40)" rx="2" ry="2" />
<text  x="1168.26" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="213.4" y="1733" width="0.2" height="15.0" fill="rgb(230,33,23)" rx="2" ry="2" />
<text  x="216.39" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_bracket_matcher&lt;false, false&gt; (26 samples, 0.43%)</title><rect x="139.2" y="1605" width="5.0" height="15.0" fill="rgb(226,40,12)" rx="2" ry="2" />
<text  x="142.16" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="169.0" y="821" width="0.2" height="15.0" fill="rgb(215,118,24)" rx="2" ry="2" />
<text  x="171.97" y="831.5" ></text>
</g>
<g >
<title>std::locale::~locale (3 samples, 0.05%)</title><rect x="344.1" y="1989" width="0.6" height="15.0" fill="rgb(246,224,24)" rx="2" ry="2" />
<text  x="347.11" y="1999.5" ></text>
</g>
<g >
<title>operator delete@plt (2 samples, 0.03%)</title><rect x="831.7" y="1893" width="0.4" height="15.0" fill="rgb(241,193,35)" rx="2" ry="2" />
<text  x="834.73" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.5" y="373" width="0.1" height="15.0" fill="rgb(239,27,53)" rx="2" ry="2" />
<text  x="1168.45" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1164.5" y="1061" width="0.6" height="15.0" fill="rgb(250,55,33)" rx="2" ry="2" />
<text  x="1167.48" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (1 samples, 0.02%)</title><rect x="144.2" y="1669" width="0.2" height="15.0" fill="rgb(247,151,15)" rx="2" ry="2" />
<text  x="147.23" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (32 samples, 0.53%)</title><rect x="144.4" y="1621" width="6.3" height="15.0" fill="rgb(248,146,39)" rx="2" ry="2" />
<text  x="147.42" y="1631.5" ></text>
</g>
<g >
<title>__do_page_fault (2 samples, 0.03%)</title><rect x="676.7" y="1829" width="0.3" height="15.0" fill="rgb(232,187,10)" rx="2" ry="2" />
<text  x="679.66" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.1" y="69" width="0.2" height="15.0" fill="rgb(235,51,8)" rx="2" ry="2" />
<text  x="1168.06" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (1 samples, 0.02%)</title><rect x="137.6" y="1829" width="0.2" height="15.0" fill="rgb(240,142,21)" rx="2" ry="2" />
<text  x="140.60" y="1839.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="661" width="0.4" height="15.0" fill="rgb(231,166,12)" rx="2" ry="2" />
<text  x="87.22" y="671.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="1141" width="0.4" height="15.0" fill="rgb(244,148,38)" rx="2" ry="2" />
<text  x="87.22" y="1151.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="517" width="0.4" height="15.0" fill="rgb(206,74,35)" rx="2" ry="2" />
<text  x="87.22" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.2" y="437" width="0.2" height="15.0" fill="rgb(244,98,41)" rx="2" ry="2" />
<text  x="13.19" y="447.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::__cxx11::collate&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="209.5" y="1685" width="0.2" height="15.0" fill="rgb(243,24,28)" rx="2" ry="2" />
<text  x="212.49" y="1695.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.2" y="821" width="0.2" height="15.0" fill="rgb(249,137,20)" rx="2" ry="2" />
<text  x="13.19" y="831.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (1 samples, 0.02%)</title><rect x="203.8" y="1717" width="0.2" height="15.0" fill="rgb(218,47,30)" rx="2" ry="2" />
<text  x="206.84" y="1727.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_regex&lt;char, std::__cxx11::regex_traits&lt;char&gt; &gt;::basic_regex&lt;char const*&gt; (175 samples, 2.89%)</title><rect x="104.1" y="1957" width="34.1" height="15.0" fill="rgb(243,212,19)" rx="2" ry="2" />
<text  x="107.10" y="1967.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="213.4" y="1125" width="0.2" height="15.0" fill="rgb(245,150,5)" rx="2" ry="2" />
<text  x="216.39" y="1135.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.1" y="789" width="0.2" height="15.0" fill="rgb(207,61,24)" rx="2" ry="2" />
<text  x="1167.09" y="799.5" ></text>
</g>
<g >
<title>nlohmann::detail::input_stream_adapter::get_character (1 samples, 0.02%)</title><rect x="95.1" y="1925" width="0.2" height="15.0" fill="rgb(251,197,15)" rx="2" ry="2" />
<text  x="98.13" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.5" y="693" width="0.1" height="15.0" fill="rgb(213,214,20)" rx="2" ry="2" />
<text  x="1168.45" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="168.6" y="1461" width="0.2" height="15.0" fill="rgb(213,121,24)" rx="2" ry="2" />
<text  x="171.58" y="1471.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append@plt (2 samples, 0.03%)</title><rect x="1132.5" y="2053" width="0.4" height="15.0" fill="rgb(252,97,37)" rx="2" ry="2" />
<text  x="1135.53" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="213.2" y="1349" width="0.2" height="15.0" fill="rgb(220,147,22)" rx="2" ry="2" />
<text  x="216.19" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.07%)</title><rect x="1164.3" y="1957" width="0.8" height="15.0" fill="rgb(226,173,15)" rx="2" ry="2" />
<text  x="1167.28" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.5" y="149" width="0.1" height="15.0" fill="rgb(212,141,20)" rx="2" ry="2" />
<text  x="1168.45" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.07%)</title><rect x="168.4" y="1861" width="0.8" height="15.0" fill="rgb(210,5,36)" rx="2" ry="2" />
<text  x="171.39" y="1871.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1109.2" y="2005" width="0.1" height="15.0" fill="rgb(246,6,52)" rx="2" ry="2" />
<text  x="1112.15" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.2" y="1733" width="0.2" height="15.0" fill="rgb(231,213,43)" rx="2" ry="2" />
<text  x="13.19" y="1743.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.1" y="261" width="0.2" height="15.0" fill="rgb(221,228,1)" rx="2" ry="2" />
<text  x="1168.06" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (29 samples, 0.48%)</title><rect x="125.9" y="1749" width="5.7" height="15.0" fill="rgb(221,119,52)" rx="2" ry="2" />
<text  x="128.92" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.3" y="101" width="0.2" height="15.0" fill="rgb(241,105,38)" rx="2" ry="2" />
<text  x="1168.26" y="111.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="10.2" y="1525" width="0.2" height="15.0" fill="rgb(238,63,51)" rx="2" ry="2" />
<text  x="13.19" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.5" y="1093" width="0.1" height="15.0" fill="rgb(254,181,12)" rx="2" ry="2" />
<text  x="1168.45" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.3" y="1285" width="0.2" height="15.0" fill="rgb(244,27,19)" rx="2" ry="2" />
<text  x="1168.26" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.1" y="1157" width="0.2" height="15.0" fill="rgb(230,211,40)" rx="2" ry="2" />
<text  x="1167.09" y="1167.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="852.4" y="1909" width="0.2" height="15.0" fill="rgb(230,141,1)" rx="2" ry="2" />
<text  x="855.38" y="1919.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="89.9" y="1893" width="0.2" height="15.0" fill="rgb(219,81,38)" rx="2" ry="2" />
<text  x="92.87" y="1903.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (3 samples, 0.05%)</title><rect x="1164.5" y="757" width="0.6" height="15.0" fill="rgb(236,141,2)" rx="2" ry="2" />
<text  x="1167.48" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.1" y="133" width="0.2" height="15.0" fill="rgb(220,84,7)" rx="2" ry="2" />
<text  x="1167.09" y="143.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.3" y="1525" width="0.2" height="15.0" fill="rgb(208,80,44)" rx="2" ry="2" />
<text  x="1168.26" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (4 samples, 0.07%)</title><rect x="168.4" y="1765" width="0.8" height="15.0" fill="rgb(206,204,26)" rx="2" ry="2" />
<text  x="171.39" y="1775.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="213.4" y="1029" width="0.2" height="15.0" fill="rgb(244,227,9)" rx="2" ry="2" />
<text  x="216.39" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="213.2" y="1141" width="0.2" height="15.0" fill="rgb(246,92,50)" rx="2" ry="2" />
<text  x="216.19" y="1151.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (1 samples, 0.02%)</title><rect x="883.4" y="1909" width="0.2" height="15.0" fill="rgb(210,166,1)" rx="2" ry="2" />
<text  x="886.36" y="1919.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.5" y="1269" width="0.1" height="15.0" fill="rgb(249,209,30)" rx="2" ry="2" />
<text  x="1168.45" y="1279.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="440.9" y="1829" width="0.2" height="15.0" fill="rgb(215,65,28)" rx="2" ry="2" />
<text  x="443.93" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.1" y="1461" width="0.2" height="15.0" fill="rgb(251,74,12)" rx="2" ry="2" />
<text  x="1168.06" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.3" y="133" width="0.2" height="15.0" fill="rgb(223,38,42)" rx="2" ry="2" />
<text  x="1168.26" y="143.5" ></text>
</g>
<g >
<title>nlohmann::basic_json&lt;std::map, std::vector, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, bool, long, unsigned long, double, std::allocator, nlohmann::adl_serializer&gt;::basic_json (2 samples, 0.03%)</title><rect x="585.1" y="1877" width="0.4" height="15.0" fill="rgb(232,149,37)" rx="2" ry="2" />
<text  x="588.10" y="1887.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="212.6" y="1941" width="0.2" height="15.0" fill="rgb(247,110,6)" rx="2" ry="2" />
<text  x="215.61" y="1951.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="138.6" y="1413" width="0.2" height="15.0" fill="rgb(229,35,40)" rx="2" ry="2" />
<text  x="141.58" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.2" y="261" width="0.2" height="15.0" fill="rgb(250,164,9)" rx="2" ry="2" />
<text  x="13.19" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.5" y="421" width="0.1" height="15.0" fill="rgb(245,181,45)" rx="2" ry="2" />
<text  x="1168.45" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.1" y="1125" width="0.2" height="15.0" fill="rgb(205,134,52)" rx="2" ry="2" />
<text  x="1168.06" y="1135.5" ></text>
</g>
<g >
<title>page_fault (1 samples, 0.02%)</title><rect x="345.7" y="1989" width="0.2" height="15.0" fill="rgb(249,34,51)" rx="2" ry="2" />
<text  x="348.67" y="1999.5" ></text>
</g>
<g >
<title>Annotate (76 samples, 1.25%)</title><rect x="89.1" y="2005" width="14.8" height="15.0" fill="rgb(220,2,13)" rx="2" ry="2" />
<text  x="92.10" y="2015.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (29 samples, 0.48%)</title><rect x="1137.0" y="2053" width="5.7" height="15.0" fill="rgb(247,131,28)" rx="2" ry="2" />
<text  x="1140.01" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (5 samples, 0.08%)</title><rect x="1164.1" y="2053" width="1.0" height="15.0" fill="rgb(214,115,4)" rx="2" ry="2" />
<text  x="1167.09" y="2063.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="168.8" y="1669" width="0.4" height="15.0" fill="rgb(246,61,44)" rx="2" ry="2" />
<text  x="171.77" y="1679.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="213.0" y="1829" width="0.6" height="15.0" fill="rgb(220,187,6)" rx="2" ry="2" />
<text  x="216.00" y="1839.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="213.2" y="1461" width="0.2" height="15.0" fill="rgb(253,10,45)" rx="2" ry="2" />
<text  x="216.19" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.3" y="1013" width="0.2" height="15.0" fill="rgb(248,212,53)" rx="2" ry="2" />
<text  x="1167.28" y="1023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.1" y="517" width="0.2" height="15.0" fill="rgb(247,166,50)" rx="2" ry="2" />
<text  x="1167.09" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.3" y="789" width="0.2" height="15.0" fill="rgb(217,197,31)" rx="2" ry="2" />
<text  x="1167.28" y="799.5" ></text>
</g>
<g >
<title>std::__merge_sort_with_buffer&lt;__gnu_cxx::__normal_iterator&lt;TDocument*, std::vector&lt;TDocument, std::allocator&lt;TDocument&gt; &gt; &gt;, TDocument*, __gnu_cxx::__ops::_Iter_comp_iter&lt;main::$_0&gt; &gt; (1 samples, 0.02%)</title><rect x="584.9" y="1989" width="0.2" height="15.0" fill="rgb(209,6,2)" rx="2" ry="2" />
<text  x="587.90" y="1999.5" ></text>
</g>
<g >
<title>bio_endio (1 samples, 0.02%)</title><rect x="323.3" y="1813" width="0.2" height="15.0" fill="rgb(236,165,12)" rx="2" ry="2" />
<text  x="326.26" y="1823.5" ></text>
</g>
<g >
<title>fasttext::Vector::addRow (1 samples, 0.02%)</title><rect x="87.5" y="2021" width="0.2" height="15.0" fill="rgb(231,76,19)" rx="2" ry="2" />
<text  x="90.54" y="2031.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.3" y="709" width="0.2" height="15.0" fill="rgb(242,150,23)" rx="2" ry="2" />
<text  x="1168.26" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.3" y="1397" width="0.2" height="15.0" fill="rgb(251,149,54)" rx="2" ry="2" />
<text  x="1168.26" y="1407.5" ></text>
</g>
<g >
<title>std::use_facet&lt;std::ctype&lt;char&gt; &gt;@plt (1 samples, 0.02%)</title><rect x="144.0" y="1573" width="0.2" height="15.0" fill="rgb(214,150,23)" rx="2" ry="2" />
<text  x="147.03" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.5" y="677" width="0.1" height="15.0" fill="rgb(239,83,46)" rx="2" ry="2" />
<text  x="1168.45" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.1" y="1317" width="0.2" height="15.0" fill="rgb(214,180,24)" rx="2" ry="2" />
<text  x="1167.09" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="138.6" y="1653" width="0.2" height="15.0" fill="rgb(227,127,24)" rx="2" ry="2" />
<text  x="141.58" y="1663.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="168.4" y="1621" width="0.4" height="15.0" fill="rgb(227,144,29)" rx="2" ry="2" />
<text  x="171.39" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="213.4" y="1093" width="0.2" height="15.0" fill="rgb(249,167,5)" rx="2" ry="2" />
<text  x="216.39" y="1103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.5" y="1685" width="0.1" height="15.0" fill="rgb(223,51,51)" rx="2" ry="2" />
<text  x="1168.45" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="1605" width="0.4" height="15.0" fill="rgb(246,191,21)" rx="2" ry="2" />
<text  x="87.22" y="1615.5" ></text>
</g>
<g >
<title>unmap_vmas (1 samples, 0.02%)</title><rect x="933.4" y="1941" width="0.2" height="15.0" fill="rgb(247,107,16)" rx="2" ry="2" />
<text  x="936.43" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="853" width="0.4" height="15.0" fill="rgb(224,48,37)" rx="2" ry="2" />
<text  x="87.22" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.3" y="565" width="0.2" height="15.0" fill="rgb(232,59,33)" rx="2" ry="2" />
<text  x="1167.28" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.1" y="901" width="0.2" height="15.0" fill="rgb(219,41,36)" rx="2" ry="2" />
<text  x="1167.09" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (1 samples, 0.02%)</title><rect x="104.5" y="1701" width="0.2" height="15.0" fill="rgb(245,60,49)" rx="2" ry="2" />
<text  x="107.49" y="1711.5" ></text>
</g>
<g >
<title>onmt::unicode::is_letter (303 samples, 5.00%)</title><rect x="757.7" y="1893" width="59.0" height="15.0" fill="rgb(251,205,4)" rx="2" ry="2" />
<text  x="760.70" y="1903.5" >onmt::..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (2 samples, 0.03%)</title><rect x="1165.1" y="1957" width="0.4" height="15.0" fill="rgb(244,21,13)" rx="2" ry="2" />
<text  x="1168.06" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="1157" width="0.4" height="15.0" fill="rgb(233,132,46)" rx="2" ry="2" />
<text  x="87.22" y="1167.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (1 samples, 0.02%)</title><rect x="138.0" y="1845" width="0.2" height="15.0" fill="rgb(212,188,13)" rx="2" ry="2" />
<text  x="140.99" y="1855.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;std::__detail::_State&lt;char&gt; const*, std::__detail::_State&lt;char&gt;*&gt; (1 samples, 0.02%)</title><rect x="139.0" y="1637" width="0.2" height="15.0" fill="rgb(251,213,18)" rx="2" ry="2" />
<text  x="141.97" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="213.4" y="1637" width="0.2" height="15.0" fill="rgb(253,186,21)" rx="2" ry="2" />
<text  x="216.39" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_bracket_expression (26 samples, 0.43%)</title><rect x="139.2" y="1621" width="5.0" height="15.0" fill="rgb(223,85,14)" rx="2" ry="2" />
<text  x="142.16" y="1631.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1164.5" y="1029" width="0.6" height="15.0" fill="rgb(222,64,1)" rx="2" ry="2" />
<text  x="1167.48" y="1039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (4 samples, 0.07%)</title><rect x="1164.3" y="2005" width="0.8" height="15.0" fill="rgb(209,105,21)" rx="2" ry="2" />
<text  x="1167.28" y="2015.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1164.3" y="981" width="0.2" height="15.0" fill="rgb(207,214,19)" rx="2" ry="2" />
<text  x="1167.28" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (1 samples, 0.02%)</title><rect x="203.3" y="1749" width="0.2" height="15.0" fill="rgb(222,228,20)" rx="2" ry="2" />
<text  x="206.26" y="1759.5" ></text>
</g>
<g >
<title>try_charge (2 samples, 0.03%)</title><rect x="711.3" y="1749" width="0.4" height="15.0" fill="rgb(251,224,24)" rx="2" ry="2" />
<text  x="714.34" y="1759.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (2 samples, 0.03%)</title><rect x="1165.1" y="1749" width="0.4" height="15.0" fill="rgb(211,164,18)" rx="2" ry="2" />
<text  x="1168.06" y="1759.5" ></text>
</g>
<g >
<title>Eigen::internal::call_dense_assignment_loop&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_sum_op&lt;float, float&gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_quotient_op&lt;float, float&gt;, Eigen::CwiseUnaryOp&lt;Eigen::internal::scalar_opposite_op&lt;float&gt;, Eigen::CwiseBinaryOp&lt;Eigen::internal::scalar_sum_op&lt;float, float&gt;, Eigen::ArrayWrapper&lt;Eigen::Product&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt;, 0&gt; const&gt; const, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Array&lt;float, -1, -1, 0, -1, -1&gt; const&gt; const&gt; const&gt; const, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Array&lt;float, -1, -1, 0, -1, -1&gt; const&gt; const&gt; const, Eigen::CwiseNullaryOp&lt;Eigen::internal::scalar_constant_op&lt;float&gt;, Eigen::Array&lt;float, -1, -1, 0, -1, -1&gt; const&gt; const&gt;, Eigen::internal::assign_op&lt;float, float&gt; &gt; (124 samples, 2.05%)</title><rect x="418.1" y="1973" width="24.2" height="15.0" fill="rgb(241,190,4)" rx="2" ry="2" />
<text  x="421.14" y="1983.5" >E..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_handle_repeat (1 samples, 0.02%)</title><rect x="1165.1" y="549" width="0.2" height="15.0" fill="rgb(252,229,9)" rx="2" ry="2" />
<text  x="1168.06" y="559.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="10.2" y="709" width="0.2" height="15.0" fill="rgb(233,165,31)" rx="2" ry="2" />
<text  x="13.19" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_disjunction (36 samples, 0.59%)</title><rect x="111.9" y="1717" width="7.0" height="15.0" fill="rgb(217,167,25)" rx="2" ry="2" />
<text  x="114.89" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.5" y="1813" width="0.1" height="15.0" fill="rgb(205,202,9)" rx="2" ry="2" />
<text  x="1168.45" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.03%)</title><rect x="84.2" y="1717" width="0.4" height="15.0" fill="rgb(238,179,3)" rx="2" ry="2" />
<text  x="87.22" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, char, std::__cxx11::regex_traits&lt;char&gt;,  (3 samples, 0.05%)</title><rect x="138.2" y="1957" width="0.6" height="15.0" fill="rgb(244,15,5)" rx="2" ry="2" />
<text  x="141.19" y="1967.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (3 samples, 0.05%)</title><rect x="1164.5" y="1285" width="0.6" height="15.0" fill="rgb(213,148,38)" rx="2" ry="2" />
<text  x="1167.48" y="1295.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="213.4" y="965" width="0.2" height="15.0" fill="rgb(226,208,38)" rx="2" ry="2" />
<text  x="216.39" y="975.5" ></text>
</g>
<g >
<title>std::__detail::_NFA&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_insert_state (2 samples, 0.03%)</title><rect x="161.8" y="1733" width="0.4" height="15.0" fill="rgb(231,106,10)" rx="2" ry="2" />
<text  x="164.76" y="1743.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (2 samples, 0.03%)</title><rect x="103.5" y="1877" width="0.4" height="15.0" fill="rgb(231,211,42)" rx="2" ry="2" />
<text  x="106.51" y="1887.5" ></text>
</g>
<g >
<title>std::__detail::_Compiler&lt;std::__cxx11::regex_traits&lt;char&gt; &gt;::_M_alternative (33 samples, 0.54%)</title><rect x="144.2" y="1685" width="6.5" height="15.0" fill="rgb(209,102,17)" rx="2" ry="2" />
<text  x="147.23" y="1695.5" ></text>
</g>
<g >
<title>operator delete (1 samples, 0.02%)</title><rect x="580.8" y="1973" width="0.2" height="15.0" fill="rgb(245,114,46)" rx="2" ry="2" />
<text  x="583.81" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.3" y="1381" width="0.2" height="15.0" fill="rgb(229,172,7)" rx="2" ry="2" />
<text  x="1167.28" y="1391.5" ></text>
</g>
<g >
<title>__x64_sys_futex (2 samples, 0.03%)</title><rect x="103.5" y="1925" width="0.4" height="15.0" fill="rgb(207,120,15)" rx="2" ry="2" />
<text  x="106.51" y="1935.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1164.3" y="1413" width="0.2" height="15.0" fill="rgb(217,80,43)" rx="2" ry="2" />
<text  x="1167.28" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::__cxx11::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__cxx11::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1 samples, 0.02%)</title><rect x="1165.1" y="1301" width="0.2" height="15.0" fill="rgb(210,123,29)" rx="2" ry="2" />
<text  x="1168.06" y="1311.5" ></text>
</g>
<g >
<title>do_page_fault (12 samples, 0.20%)</title><rect x="709.4" y="1845" width="2.3" height="15.0" fill="rgb(239,215,6)" rx="2" ry="2" />
<text  x="712.39" y="1855.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (10 samples, 0.17%)</title><rect x="877.9" y="1973" width="2.0" height="15.0" fill="rgb(231,92,40)" rx="2" ry="2" />
<text  x="880.90" y="1983.5" ></text>
</g>
<g >
<title>std::__detail::_BracketMatcher&lt;std::__cxx11::regex_traits&lt;char&gt;, false, false&gt;::_M_ready (29 samples, 0.48%)</title><rect x="155.9" y="1669" width="5.7" height="15.0" fill="rgb(211,220,17)" rx="2" ry="2" />
<text  x="158.92" y="1679.5" ></text>
</g>
<g >
<title>[unknown] (3 samples, 0.05%)</title><rect x="84.0" y="1877" width="0.6" height="15.0" fill="rgb(227,180,20)" rx="2" ry="2" />
<text  x="87.03" y="1887.5" ></text>
</g>
</g>
</svg>
